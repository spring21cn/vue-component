{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./demo/AdaptiveGroupDemo.js","webpack:///./demo/AjaxDemo.js","webpack:///./demo/AlertDemo.js","webpack:///./demo/AsideDemo.js","webpack:///./demo/BadgeDemo.js","webpack:///./demo/BreadcrumbDemo.js","webpack:///./demo/BrushJsp.js","webpack:///./demo/ButtonDemo.js","webpack:///./demo/CalendarDemo.js","webpack:///./demo/CardDemo.js","webpack:///./demo/CarouselDemo.js","webpack:///./demo/CascaderDemo.js","webpack:///./demo/ChangeLog.js","webpack:///./demo/CheckboxDemo.js","webpack:///./demo/CollapseDemo.js","webpack:///./demo/ColorDemo.js","webpack:///./demo/DateDemo.js","webpack:///./demo/DateTimeDemo.js","webpack:///./demo/DemoLangEn.js","webpack:///./demo/DemoLangJa.js","webpack:///./demo/DemoLangZh.js","webpack:///./demo/DialogDemo.js","webpack:///./demo/DraggableDemo.js","webpack:///./demo/DropdownDemo.js","webpack:///./demo/FormDemo.js","webpack:///./demo/HotkeyDemo.js","webpack:///./demo/I18nDemo.js","webpack:///./demo/IconDemo.js","webpack:///./demo/ImageDemo.js","webpack:///./demo/ImageViewerDemo.js","webpack:///./demo/InputDemo.js","webpack:///./demo/InputNumberDemo.vue","webpack:///./demo/InstallDemo.js","webpack:///./demo/LayoutDemo.js","webpack:///./demo/ListDemo.js","webpack:///./demo/LoadingBarDemo.js","webpack:///./demo/LoadingDemo.js","webpack:///./demo/MessageBoxDemo.js","webpack:///./demo/MobileDemo/ActionSheetDemo.js","webpack:///./demo/MobileDemo/CellLayoutDemo.js","webpack:///./demo/MobileDemo/IndexBarDemo.js","webpack:///./demo/MobileDemo/NavBarDemo.js","webpack:///./demo/MobileDemo/ScrollViewDemo.js","webpack:///./demo/MobileDemo/SkeletonDemo.js","webpack:///./demo/MobileDemo/StepperDemo.js","webpack:///./demo/MobileDemo/SwipeCellDemo.js","webpack:///./demo/MobileDemo/TabBarDemo.js","webpack:///./demo/MobileDemo/TextIconDemo.js","webpack:///./demo/MobileDemo/installDemo.js","webpack:///./demo/NavMenuDemo.js","webpack:///./demo/NoteDemo.js","webpack:///./demo/NotificationDemo.js","webpack:///./demo/PaginationDemo.js","webpack:///./demo/PinDemo.js","webpack:///./demo/PopoverDemo.js","webpack:///./demo/ProgressDemo.js","webpack:///./demo/RadioDemo.js","webpack:///./demo/RateDemo.js","webpack:///./demo/RippleDemo.js","webpack:///./demo/SelectDemo.js","webpack:///./demo/SignatureDemo.js","webpack:///./demo/SliderDemo.js","webpack:///./demo/SortableDemo.js","webpack:///./demo/SplitPanesDemo.vue","webpack:///./demo/StepsDemo.js","webpack:///./demo/SvgIconDemo.vue","webpack:///./demo/SwitchDemo.js","webpack:///./demo/SyntaxHighlighter.js","webpack:///./demo/TableDemo.js","webpack:///./demo/TabsDemo.js","webpack:///./demo/TagDemo.js","webpack:///./demo/TimeDemo.js","webpack:///./demo/TooltipDemo.js","webpack:///./demo/TreeDemo.js","webpack:///./demo/UploadDemo.js","webpack:///./demo/XRegExp.js","webpack:///./demo/XtableDemo sync \\.vue$","webpack:///./demo/XtableDemo/advanced/ColumnDrag.vue","webpack:///./demo/XtableDemo/advanced/CopyPaste.vue","webpack:///./demo/XtableDemo/advanced/Custom.vue","webpack:///./demo/XtableDemo/advanced/CustomStorage.vue","webpack:///./demo/XtableDemo/advanced/CustomlWidthStorage.vue","webpack:///./demo/XtableDemo/advanced/Dynamic.vue","webpack:///./demo/XtableDemo/advanced/Event.vue","webpack:///./demo/XtableDemo/advanced/Expand.vue","webpack:///./demo/XtableDemo/advanced/Export.vue","webpack:///./demo/XtableDemo/advanced/FixedType.vue","webpack:///./demo/XtableDemo/advanced/Footer.vue","webpack:///./demo/XtableDemo/advanced/FooterSpan.vue","webpack:///./demo/XtableDemo/advanced/Highlight.vue","webpack:///./demo/XtableDemo/advanced/Import.vue","webpack:///./demo/XtableDemo/advanced/ManualFilter.vue","webpack:///./demo/XtableDemo/advanced/Menu.vue","webpack:///./demo/XtableDemo/advanced/MenuPrivilege.vue","webpack:///./demo/XtableDemo/advanced/Page.vue","webpack:///./demo/XtableDemo/advanced/Print.vue","webpack:///./demo/XtableDemo/advanced/RowDrag.vue","webpack:///./demo/XtableDemo/advanced/Search.vue","webpack:///./demo/XtableDemo/advanced/Span.vue","webpack:///./demo/XtableDemo/advanced/SpanRow.vue","webpack:///./demo/XtableDemo/advanced/Template.vue","webpack:///./demo/XtableDemo/advanced/Toolbar.vue","webpack:///./demo/XtableDemo/base/AutoHeight.vue","webpack:///./demo/XtableDemo/base/Basic.vue","webpack:///./demo/XtableDemo/base/Border.vue","webpack:///./demo/XtableDemo/base/Current.vue","webpack:///./demo/XtableDemo/base/DynamicStyle.vue","webpack:///./demo/XtableDemo/base/Empty.vue","webpack:///./demo/XtableDemo/base/Filter.vue","webpack:///./demo/XtableDemo/base/Fixed.vue","webpack:///./demo/XtableDemo/base/FixedFull.vue","webpack:///./demo/XtableDemo/base/Format.vue","webpack:///./demo/XtableDemo/base/Group.vue","webpack:///./demo/XtableDemo/base/Header.vue","webpack:///./demo/XtableDemo/base/HeaderHighlight.vue","webpack:///./demo/XtableDemo/base/Height.vue","webpack:///./demo/XtableDemo/base/Index.vue","webpack:///./demo/XtableDemo/base/Loading.vue","webpack:///./demo/XtableDemo/base/MaxHeight.vue","webpack:///./demo/XtableDemo/base/Overflow.vue","webpack:///./demo/XtableDemo/base/Radio.vue","webpack:///./demo/XtableDemo/base/Resizable.vue","webpack:///./demo/XtableDemo/base/Selection.vue","webpack:///./demo/XtableDemo/base/Size.vue","webpack:///./demo/XtableDemo/base/Sort.vue","webpack:///./demo/XtableDemo/base/Stripe.vue","webpack:///./demo/XtableDemo/base/Style.vue","webpack:///./demo/XtableDemo/edit/AutoClear.vue","webpack:///./demo/XtableDemo/edit/CascadingSelect.vue","webpack:///./demo/XtableDemo/edit/CellDisable.vue","webpack:///./demo/XtableDemo/edit/CellValid.vue","webpack:///./demo/XtableDemo/edit/Click.vue","webpack:///./demo/XtableDemo/edit/DBLClick.vue","webpack:///./demo/XtableDemo/edit/Events.vue","webpack:///./demo/XtableDemo/edit/Expand.vue","webpack:///./demo/XtableDemo/edit/Footer.vue","webpack:///./demo/XtableDemo/edit/FooterImmediately.vue","webpack:///./demo/XtableDemo/edit/Insert.vue","webpack:///./demo/XtableDemo/edit/Keyboard.vue","webpack:///./demo/XtableDemo/edit/Manual.vue","webpack:///./demo/XtableDemo/edit/Menu.vue","webpack:///./demo/XtableDemo/edit/Remove.vue","webpack:///./demo/XtableDemo/edit/Revert.vue","webpack:///./demo/XtableDemo/edit/RowDisable.vue","webpack:///./demo/XtableDemo/edit/RowValid.vue","webpack:///./demo/XtableDemo/edit/Select.vue","webpack:///./demo/XtableDemo/edit/Span.vue","webpack:///./demo/XtableDemo/edit/Status.vue","webpack:///./demo/XtableDemo/edit/Template.vue","webpack:///./demo/XtableDemo/edit/UniqueSelect.vue","webpack:///./demo/XtableDemo/grid/Basic.vue","webpack:///./demo/XtableDemo/grid/CustomToolbar.vue","webpack:///./demo/XtableDemo/grid/Dynamic.vue","webpack:///./demo/XtableDemo/grid/Edit.vue","webpack:///./demo/XtableDemo/grid/Footer.vue","webpack:///./demo/XtableDemo/grid/FullEdit.vue","webpack:///./demo/XtableDemo/grid/FullQuery.vue","webpack:///./demo/XtableDemo/grid/Group.vue","webpack:///./demo/XtableDemo/grid/Menu.vue","webpack:///./demo/XtableDemo/grid/Page.vue","webpack:///./demo/XtableDemo/grid/PageProxy.vue","webpack:///./demo/XtableDemo/grid/Proxy.vue","webpack:///./demo/XtableDemo/grid/Reverse.vue","webpack:///./demo/XtableDemo/grid/Template.vue","webpack:///./demo/XtableDemo/grid/Toolbar.vue","webpack:///./demo/XtableDemo/grid/Tree.vue","webpack:///./demo/XtableDemo/grid/TreeEdit.vue","webpack:///./demo/XtableDemo/index.js","webpack:///./demo/XtableDemo/mock-data.js","webpack:///./demo/XtableDemo/scroll/CellValid.vue","webpack:///./demo/XtableDemo/scroll/Edit.vue","webpack:///./demo/XtableDemo/scroll/FullPartialLoad.vue","webpack:///./demo/XtableDemo/scroll/Highlight.vue","webpack:///./demo/XtableDemo/scroll/Keyboard.vue","webpack:///./demo/XtableDemo/scroll/PartialLoad.vue","webpack:///./demo/XtableDemo/scroll/RowValid.vue","webpack:///./demo/XtableDemo/scroll/Scroll.vue","webpack:///./demo/XtableDemo/scroll/ScrollCols.vue","webpack:///./demo/XtableDemo/scroll/ScrollFullCols.vue","webpack:///./demo/XtableDemo/scroll/ScrollFullRows.vue","webpack:///./demo/XtableDemo/scroll/ScrollRows.vue","webpack:///./demo/XtableDemo/scroll/Template.vue","webpack:///./demo/XtableDemo/scroll/Tree.vue","webpack:///./demo/XtableDemo/tree/Basic.vue","webpack:///./demo/XtableDemo/tree/CellValid.vue","webpack:///./demo/XtableDemo/tree/Edit.vue","webpack:///./demo/XtableDemo/tree/Expand.vue","webpack:///./demo/XtableDemo/tree/Fixed.vue","webpack:///./demo/XtableDemo/tree/FullEdit.vue","webpack:///./demo/XtableDemo/tree/GroupBy.vue","webpack:///./demo/XtableDemo/tree/Highlight.vue","webpack:///./demo/XtableDemo/tree/Insert.vue","webpack:///./demo/XtableDemo/tree/Menu.vue","webpack:///./demo/XtableDemo/tree/Radio.vue","webpack:///./demo/XtableDemo/tree/RowValid.vue","webpack:///./demo/XtableDemo/tree/Selection.vue","webpack:///./demo/XtableDemo/tree/Template.vue","webpack:///./demo/XtableDemo/tree/Toolbar.vue","webpack:///./demo/index.js","webpack:///./mock/helper.js","webpack:///./mock/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","path","head","label","description","samples","id","template","code","parameter","data","tableData","column1","column2","column3","column4","column5","notshowmeta","collapse","notshowblock","methods","closeHandle","this","$notify","title","asidePos","asideVisible","openasideLeft","openasideRight","openasideTop","openasideBottom","handleClose","done","$confirm","message","then","catch","gridData","date","address","SyntaxHighlighter","XRegExp","Brush","regexList","regex","regexLib","multiLineDoubleQuotedString","css","multiLineSingleQuotedString","xmlComments","singleLineCComments","multiLineCComments","RegExp","getKeywords","str","replace","getKeywordsCSS","func","match","regexInfo","constructor","Match","tag","exec","result","attributes","push","index","indexOf","Highlighter","aliases","brushes","Jsp","calendarDemo","toDay","Date","vcevents","start","VueUtil","addDate","end","noteEvents","clickHandle","events","dates","customClass","dateClass","weekClass","week","weekLabel","sun","mon","tue","wed","thu","fri","sat","eventClick","event","jsEvents","console","log","moreClick","formatDate","map","join","dayClick","guideOpt","children","componentOpt","resourceOpt","options","optionsDis","merge","disabled","optionsCode1","optionsCode2","optionsCode","cascaderDemo","selectedOptions1","selectedOptions2","handleChange","toString","cities","props","handleItemChange","val","self","setTimeout","length","steps","checked","checked1","checked2","checkList","checkAll","checkedCities","isIndeterminate","handleCheckAllChange","target","handleCheckedCitiesChange","checkedCount","checkboxGroup1","checkboxGroup2","checkboxGroup3","activeNames","openIndexAry","color1","color2","dateDemo","pickerOptions0","disabledDate","getTime","pickerOptions1","shortcuts","text","$t","onClick","picker","$emit","value1","value2","value3","dateTimeDemo","main","title1","title2","title3","title4","title5","title6","title7","title8","title9","title10","radiolabel1","radiolabel2","radiolabel3","line1","line21","line22","line23","line24","line25","line26","line27","line28","table","method","usage","parameters","type","acceptedValues","defaultValue","installDemo","samples1","samples6","samples2","samples3","row1column2","row2column2","row3column2","row4column2","row5column2","row6column2","row7column2","row8column2","row9column2","row10column2","row11column2","row12column2","row13column2","row14column2","row15column2","row16column2","row17column2","row18column2","row19column2","row20column2","row21column2","row22column2","row23column2","row24column2","row25column2","row26column2","row27column2","row28column2","row29column2","row30column2","row31column2","row32column2","row33column2","row34column2","row35column2","row36column2","row37column2","row38column2","row39column2","row40column2","row41column2","row42column2","row43column2","row44column2","row45column2","row46column2","row47column2","row48column2","row49column2","row50column2","row51column2","row52column2","row53column2","row54column2","row55column2","row56column2","row57column2","row58column2","row59column2","samples4","samples5","i18nDemo","ajaxDemo","row1column3","row2column3","row4column3","row6column3","row7column3","row8column3","row9column3","row10column3","row11column3","layoutDemo","samples7","row5column3","iconDemo","buttonDemo","defaultButton","mainButton","textButton","circleButton","successButton","warningButton","dangerButton","infoButton","defaultLabel","hoverLabel","samples8","inputDemo","defaultPlaceholder","selectPlaceholder","selectLabel1","selectLabel2","selectLabel3","label1","label2","samples9","samples10","samples11","samples12","samples13","samples14","samples15","samples16","optionsLabel","todayLabel","yesterdayLabel","weekAgoLabel","weekPlaceholder","weekFormat","monthLabel","monthPlaceholder","yearLabel","yearPlaceholder","lastWeekLabel","lastMonthLabel","last3MonthLabel","row7column4","row11column4","row16column3","timeDemo","timelabel1","timelabel2","timePlaceholder1","timePlaceholder2","timePlaceholder3","row2column4","datetimeDemo","imageDemo","defatltText","customText","loading","imgLabelText","row6column5","imageviewerDemo","checkboxDemo","radioDemo","switchDemo","row2column5","dropdownDemo","clickLabel","row3column3","selectDemo","placeholderLabel","formDemo","row1column4","paginationDemo","label3","label4","treeDemo","collapseDemo","messageBoxDemo","dialogDemo","asideDemo","notificationDemo","badgeDemo","tabsDemo","row5column5","popoverDemo","tooltipDemo","tagDemo","alertDemo","noteDemo","cardDemo","carouselDemo","loadingDemo","loadingBarDemo","progressDemo","sliderDemo","breadcrumbDemo","stepsDemo","rateDemo","pinDemo","uploadDemo","colorDemo","navMenuDemo","listDemo","sortableDemo","tableDemo","samples17","samples18","samples19","samples20","row12column5","draggableDemo","adaptiveGroup","rippleDemo","signatureDemo","mobileInstallDemo","detail1","scrollviewDemo","detail2","description1","description2","description3","attrsinfo","refreshAttrs","row4column5","moreAttrs","row3column5","slotInfo","default","refresh","more","eventInfo","detail3","detail4","methodInfo","detail5","detail6","detail7","detail8","actionsheetDemo","attrsInfo","actionsInfo","navbarDemo","tabbarDemo","tabBarItemAttrsInfo","row1column5","tabBarItemSlotInfo","celllayoutDemo","celllayoutitemAttrsInfo","celllayoutitemEventInfo","celllayoutitemSlotsInfo","swipecellDemo","beforecloseAttrsInfo","slotsInfo","texticonDemo","stepperDemo","indexbarDemo","indexanchorAttrsInfo","indexanchorSlotsInfo","skeletonDemo","InputNumberDemo","sample1","sample2","sample3","sample4","sample5","sample6","sample7","sample8","sample9","row111column2","hotkeyDemo","app","body","sex","age","XtableDemo","advanced","Custom","CustomSort","CustomStorage","CustomlWidthStorage","Dynamic","Event","Expand","Export","FixedType","Footer","FooterSpan","Highlight","Import","ManualFilter","Menu","MenuPrivilege","Page","Print","Search","Span","SpanRow","Template","Toolbar","CopyPaste","ColumnDrag","RowDrag","bad","Edit","base","AutoHeight","Basic","Border","Current","DynamicStyle","Empty","Filter","Fixed","FixedFull","Format","Group","Header","HeaderHighlight","Height","Index","Loading","MaxHeight","Overflow","Radio","Resizable","Selection","Size","Sort","Stripe","Style","edit","AutoClear","CascadingSelect","CellDisable","CellValid","Click","DBLClick","Events","FooterImmediately","ForceCellValid","ForceRowValid","Full","Insert","Keyboard","Manual","Remove","Revert","RowDisable","RowValid","Select","Status","UniqueSelect","grid","CustomToolbar","FullEdit","FullQuery","PageProxy","Proxy","Reverse","Tree","TreeEdit","interceptor","API","menus","optimize","Scroller","renderer","Default","scroll","FullPartialLoad","PartialLoad","Scroll","ScrollCols","ScrollFullCols","ScrollFullRows","ScrollRows","tree","GroupBy","Lazy","sample10","sample11","SplitPanesDemo","SvgIconDemo","dialogVisible","handleClick","handleCommand","command","form","region","date1","date2","delivery","resource","desc","onSubmit","onCancel","formInline","user","formName","labelPosition","formLabelAlign","ruleForm","rules","required","min","max","submitForm","$refs","validate","valid","resetForm","resetFields","pass","checkPass","validator","validatePass","trigger","validatePass2","checkAge","rule","callback","Error","Number","isInteger","validateField","showError","msgs","isArray","forEach","msg","error","dynamicValidateForm","domains","email","removeDomain","item","splice","addDomain","now","click","handler","el","mounted","locales","button","hello","setLocale","$forceUpdate","iconAry","fits","url","src","urls","srcList","showViewer","imgList","closeViewer","activeImgIndex","input","handleIconClick","ev","textarea","textarea1","textarea2","input1","input2","input3","select","input4","restaurants","state1","state2","querySearch","queryString","cb","filter","createFilter","restaurant","toLowerCase","handleSelect","loadAll","__webpack_exports__","num","undefined","formatter","currentVal","isFocusing","Math","round","parseFloat","styles","BrushJsp","expandHandle","row","expanded","highlight","selectHandle","listItem","scrollHandle","scrollTop","isTop","isBottom","Vue","loadingBar","finish","update","fullscreenLoading1","fullscreenLoading2","openFullScreen1","openFullScreen2","open","$alert","action","createElement","$createElement","style","beforeClose","instance","confirmButtonLoading","confirmButtonText","demoInitUrl","activeNames2","refresh_code","more_code","activeNames3","activeNames4","trigger_refresh_code","finish_refresh_code","trigger_loadmore_code","finish_loadmore_code","activeIndex1","activeIndex2","indexPath","handleOpen","isCollapse","open1","open2","duration","onClose","position","iconClass","open3","open4","open5","info","open6","open7","open8","open9","currentPage1","currentPage2","currentPage3","currentPage4","handleSizeChange","handleCurrentChange","change","status","visible","cancleHandle","confirmHandle","radio","radio1","radio2","radio3","texts","list","remoteMethod","query","saveHandle","signResult","saveSign","saveSignature","loadHandle","loadSign","fromDataURL","clearHandle","sign","clearSignature","undoHandle","undoSignature","lockHandle","lockSignaturePad","openHandle","openSignaturePad","value4","value5","formatTooltip","sortOptions","group","ghostClass","chosenClass","sort","endHandle","e","innerText","startHandle","addHandle","removeHandle","updateHandle","list1","list2","list3","moveHandle","draggedContext","element","relatedContext","component","$el","pull","cloneHandle","original","cloneObjectHandle","panesNumber","eventData","active","next","tab","changeHandle","./demo/SyntaxHighlighter.js","sh","defaults","class-name","first-line","pad-line-numbers","smart-tabs","tab-size","gutter","toolbar","quick-code","auto-links","light","html-script","config","space","useScriptTags","bloggerMode","stripBrs","tagName","strings","expandSource","help","alert","noBrush","brushNotHtmlScript","aboutDialog","vars","discoveredBrushes","highlighters","singleLinePerlComments","doubleQuotedString","singleQuotedString","phpScriptTags","left","right","aspScriptTags","scriptScriptTags","getHtml","highlighter","html","items","defaultGetHtml","getButtonHtml","commandName","className","getHighlighterById","findParentElement","getValue","execute","preventDefault","getParam","removeClass","document","getElementById","getHighlighterId","getHighlighterDivById","wnd","width","height","x","screen","y","win","window","focus","popup","doc","write","close","findElements","globalParams","elements","source","toArray","getElementsByTagName","concat","tags","getSyntaxHighlighterScriptTags","params","parseParams","conf","brushName","brush","HtmlScript","findBrush","stripCData","init","getDiv","parentNode","replaceChild","all","attachEvent","splitLines","block","split","findElement","search","reverse","expectedValue","found","nodes","childNodes","propertyToFind","#",".","substr","toUpperCase","obj1","obj2","obj","scope","srcElement","returnValue","addEventListener","alias","showAlert","eachLine","lines","arrayRegex","test","values","wrapLinesWithCode","spaces","line","padNumber","number","trim","unindent","br","fixInputString","Array","matches","matchesSortCallback","m1","m2","getMatches","resultMatch","copy","changed","leftLength","rightLength","substring","copyLength","quickCodeHandler","highlighterDiv","container","hasClass","addClass","textContent","appendChild","createTextNode","removeChild","scriptBrushName","scriptBrush","brushClass","xmlBrush","Xml","ref","methodsToExpose","apply","arguments","htmlScript","offset","offsetMatches","lastIndexOf","j","true","false","toBoolean","findMatches","removeNestedMatches","itemI","itemIEndPos","itemJ","figureOutLineNumbers","firstLine","parseInt","isLineHighlighted","lineNumber","array","searchElement","fromIndex","getLineHtml","lineIndex","classes","getLineNumbersHtml","lineNumbers","count","pad","isNaN","getCodeLinesHtml","indent","getTitleHtml","getMatchesHtml","pos","getBrushNameCss","matchBrushName","tabSize","trimFirstAndLastLines","insertSpaces","processSmartTabs","processTabs","gt","suffix","processUrls","navigator","userAgent","div","innerHTML","prefix","random","guid","storeHighlighter","forHtmlScript","regexGroup","state","city","zip","detailHandle","editHandle","shopName","shopId","shopAddr","currentIndex","currentData","rowData","delHandle","set","clearSortsHandel","singleTable","clearSorts","DateOption","clearFiltersHandel","clearFilters","getRowClass","rowIndex","getCellClass","cellIndex","getExpandClass","setCurrent","setCurrentRow","currentRow","oldCurrentRow","JSON","stringify","toggleSelection","rows","multipleTable","toggleRowSelection","clearSelection","handleSlectionChange","selectionRows","cost1","cost2","cost3","cost4","showHiddenColumn","us","contextMenuHandel","toggleContextMenu","getUserSetting","setUserSetting","parse","getData","column","toFixed","aggregate","highlightFirstAfterSort","highlightFirstAfterFilter","activeName","editableTabsValue","editableTabs","content","tabIndex","handleTabsEdit","targetName","newTabName","tabs","nextTab","addTab","removeTab","closable","hit","dynamicTags","inputVisible","inputValue","showInput","$nextTick","saveTagInput","handleInputConfirm","startTime","endTime","time","toDate","defaultProps","handleNodeClick","handleCheckChange","indeterminate","loadNode","node","resolve","hasChild","level","getCheckedNodes","checkedNode","getCheckedKeys","setCheckedNodes","setCheckedKeys","resetChecked","getCurrentNode","currentNode","getCurrentKey","currentKey","setCurrentNode","setCurrentKey","resetCurrent","append","store","remove","renderContent","nodeObj","attrs","size","on","watch","filterText","filterNode","handleRemove","file","fileList","handlePreview","beforeAvatarUpload","isTXT","isLt2M","dialogImageUrl","handlePictureCardPreview","isJPG","slice","submitUpload","upload","submit","pattern","flags","context","tokenResult","chr","output","currScope","OUTSIDE_CLASS","isRegExp","TypeError","clone","isInsideConstructor","hasNamedCapture","captureNames","hasFlag","flag","setFlag","runTokens","real","nativeTokens","charAt","INSIDE_CLASS","flagClip","_xregexp","replacementToken","quantifier","tokens","String","compliantExecNpcg","compliantLastIndexIncrement","lastIndex","compliantLastIndexReset","hasNativeY","sticky","additionalFlags","getNativeFlags","global","ignoreCase","multiline","extended","err","from","addToken","cache","copyAsGlobal","escape","execAt","anchored","freezeTokens","iterate","origRegex","matchChain","chain","recurseChain","backref","args","r2","replacement","isRegex","valueOf","$0","$1","$2","literalNumbers","floor","limit","lastLength","lastLastIndex","Infinity","./demo/XtableDemo sync recursive \\.vue$","./advanced/ColumnDrag.vue","./advanced/CopyPaste.vue","./advanced/Custom.vue","./advanced/CustomStorage.vue","./advanced/CustomlWidthStorage.vue","./advanced/Dynamic.vue","./advanced/Event.vue","./advanced/Expand.vue","./advanced/Export.vue","./advanced/FixedType.vue","./advanced/Footer.vue","./advanced/FooterSpan.vue","./advanced/Highlight.vue","./advanced/Import.vue","./advanced/ManualFilter.vue","./advanced/Menu.vue","./advanced/MenuPrivilege.vue","./advanced/Page.vue","./advanced/Print.vue","./advanced/RowDrag.vue","./advanced/Search.vue","./advanced/Span.vue","./advanced/SpanRow.vue","./advanced/Template.vue","./advanced/Toolbar.vue","./base/AutoHeight.vue","./base/Basic.vue","./base/Border.vue","./base/Current.vue","./base/DynamicStyle.vue","./base/Empty.vue","./base/Filter.vue","./base/Fixed.vue","./base/FixedFull.vue","./base/Format.vue","./base/Group.vue","./base/Header.vue","./base/HeaderHighlight.vue","./base/Height.vue","./base/Index.vue","./base/Loading.vue","./base/MaxHeight.vue","./base/Overflow.vue","./base/Radio.vue","./base/Resizable.vue","./base/Selection.vue","./base/Size.vue","./base/Sort.vue","./base/Stripe.vue","./base/Style.vue","./edit/AutoClear.vue","./edit/CascadingSelect.vue","./edit/CellDisable.vue","./edit/CellValid.vue","./edit/Click.vue","./edit/DBLClick.vue","./edit/Events.vue","./edit/Expand.vue","./edit/Footer.vue","./edit/FooterImmediately.vue","./edit/Insert.vue","./edit/Keyboard.vue","./edit/Manual.vue","./edit/Menu.vue","./edit/Remove.vue","./edit/Revert.vue","./edit/RowDisable.vue","./edit/RowValid.vue","./edit/Select.vue","./edit/Span.vue","./edit/Status.vue","./edit/Template.vue","./edit/UniqueSelect.vue","./grid/Basic.vue","./grid/CustomToolbar.vue","./grid/Dynamic.vue","./grid/Edit.vue","./grid/Footer.vue","./grid/FullEdit.vue","./grid/FullQuery.vue","./grid/Group.vue","./grid/Menu.vue","./grid/Page.vue","./grid/PageProxy.vue","./grid/Proxy.vue","./grid/Reverse.vue","./grid/Template.vue","./grid/Toolbar.vue","./grid/Tree.vue","./grid/TreeEdit.vue","./scroll/CellValid.vue","./scroll/Edit.vue","./scroll/FullPartialLoad.vue","./scroll/Highlight.vue","./scroll/Keyboard.vue","./scroll/PartialLoad.vue","./scroll/RowValid.vue","./scroll/Scroll.vue","./scroll/ScrollCols.vue","./scroll/ScrollFullCols.vue","./scroll/ScrollFullRows.vue","./scroll/ScrollRows.vue","./scroll/Template.vue","./scroll/Tree.vue","./tree/Basic.vue","./tree/CellValid.vue","./tree/Edit.vue","./tree/Expand.vue","./tree/Fixed.vue","./tree/FullEdit.vue","./tree/GroupBy.vue","./tree/Highlight.vue","./tree/Insert.vue","./tree/RowValid.vue","./tree/Selection.vue","./tree/Template.vue","./tree/Toolbar.vue","webpackContext","req","webpackContextResolve","created","cntextMenu","prefixIcon","menu","handleCopyed","contextMenuClick","param","customColumns1","field","_this","MOCK_DATA_LIST","customColumns2","_this2","xTable2","reloadCustoms","customColumns3","_this3","checkColumnMethod","_ref","tableColumn","fixed","filters","showOverflow","uniqueId","addColumn","removeColumn","pop","updateFilter","minWidth","xTable","toggleFixedColumn","updateWidthColumn","refreshColumn","headerCellDBLClickEvent","columnIndex","cellClickEvent","_ref2","cellDBLClickEvent","_ref3","cellMouseenterEvent","_ref4","cellMouseleaveEvent","_ref5","bodyScrollEvent","_ref6","_ref7","toggleExpandChangeEvent","exportDataEvent","xTable1","exportData","exportSelectEvent","getSelectRecords","exportDataEvent2","columnFilterMethod","includes","exportDataEvent3","dataFilterMethod","xTable3","exportDataEvent4","filename","isHeader","clearDataEvent","openExport","importDataEvent","types","importData","footerData","columns","mean","sum","footerCellClassName","$rowIndex","footerMethod","colspanMethod","colspan","rowspan","footerColspanMethod","cellValue","prevRow","nextRow","countRowspan","footerRowspanMethod","roleList","nameFilterList","findList","Promise","filterNameMethod","filterAgeMethod","filterRoleMethod","option","updateNameFilterEvent","filterNameEvent","filterAgeEvent","updateData","headerMenus","bodyMenus","footerMenus","cellContextMenuEvent","headerCellContextMenuEvent","contextMenuClickEvent","success","visibleMethod","isVisible","isDisabled","clipboard","tablePage","currentPage","pageSize","totalResult","http","formData","response","_response$data","page","handlePageChange","_response$data2","_response$data3","frameUrl","printEvent","printSelectEvent","print","filterName1","tableData1","computed","filterName","filterRE","searchProps","assign","filterName2","tableData2","some","rest","treeData","check3ChangeEvent","toColTreeData","check_3","levelList","id_3","every","check_4","keyMap","eachTree","paths","parent","rowspanMethod","showSexTip","showDetails","selectRow","filterSexMethod","changeFilterEvent","showDetailEvent","evnt","changeMultipleOption","toolbarButtons","dropdowns","getCurrentEvent","currentChangeEvent","headerCellStyle","backgroundColor","color","rowStyle","cellStyle","sexList","formatTime","find","indexMethod","radioChangeEvent","clearRadioRowEevnt","rowClassName","clearRadioRow","row-checked","getRadioEvent1","getRadioRow","checkMethod","selectAllEvent","selectChangeEvent","getSelectEvent1","selectRecords","sortNameMethod","v2","v1","sortChangeEvent","a","b","order","headerCellClassName","cellClassName","selectColumn","cellClassName2","cellClickEvent2","editRowEvent","saveRowEvent","setActiveRow","clearActived","cancelRowEvent","ptypeList","cachePnameList","pnameList","insertEvent","ptypeItem","ptype","pnameItem","updatePnameList","ptypeChangeEvent","attr4","editActivedEvent","attr3","activeCellMethod","editDisabledEvent","activeRowMethod","validRules","validEvent","fullValidEvent","errMap","errList","msgList","h","selectValidEvent","_this4","insert","getSelectEvent","insertRecords","getInsertEvent","removeRecords","getInsertRecords","getRemoveEvent","updateRecords","getRemoveRecords","getUpdateEvent","getUpdateRecords","findSexList","editClosedEvent","enterFilterEvent","keydownEvent","keyCode","focusEvent","confirmFilter","changeEvent","setActiveCell","updateFooterEvent","updateFooter","record","insertAt","hideColumn","resetCustoms","getSelectionEvent","isNameDisabled","isAgeDisabled","sexGriupList","optionList","language","saveEvent","submitSave","reloadRow","saveEvent2","date3","updateRoleList","fullData","getTableData","role1","roleChangeEvent","showHeaderOverflow","tableProxy","total","ajax","delete","post","save","setting","editRender","pageSizes","buttons","tableToolbar","formatterDate","loading2","tablePage2","tableProxy2","tableToolbar2","tableColumn2","findColumn","slots","_ref8","link","href","validMsg","validRules2","toolbarButtonClickEvent","_ref9","xGrid","getColumnByField","spell","searchEvent","role","resizable","storage","export","remoteSort","filterMultiple","reserves","clearData","reverseTable","0","reverseTable2","filterMethod","header","class","headerClickEvent","domProps","addressClickEvent","html1","img1","querySelectorAll","hljs","highlightBlock","parentKey","toArrayTree","treeNode","demos","tempCss","keys","demo","category","setAttribute","styleSheet","cssText","addcss","orders","bKey","last","aKey","./demo/XtableDemo/mock-data.js","shuffle","repeat","RangeError","maxCount","currTime","nameList","nickList","mockData","len","isIE","fullIndex","colItem","sortable","nickname","date4","date5","date6","date11","date12","date13","num1","num2","num3","num4","num5","num6","slider","sex1","sex2","sex3","sex4","sex5","age1","rate","rate1","address2","img","html2","html3","updateTime","createTime","attr1","attr2","attr5","name2","age2","MOCK_TREE_DATA_LIST","loadData","warning","handleCommand1","handleCommand2","removeSelecteds","colIndex","allData","allColumn","findDataList","loadColumn","loadColumns","findColumnList","loadList","_this5","cIndex","loadColumnAndData","colSize","rowSize","MOCK_COLUMN_LIST","reloadData","treeConfig","treeIndent","findCityAll","setAllTreeExpansion","toVirtualTree","toggleTreeExpansion","expand","virtualAllExpand","virtualExpand","childList","expandList","getTreeExpansionEvent","treeExpandRecords","xTree","getTreeExpandRecords","fullValidate","seq","matchObj","findTree","tableTreeConfig","expandAll","groupMap","groupBy","gKey","groupList","each","isNew","unshift","refreshData","newRow","insertAtEvent","rowNode","createRow","filterTree","isExpand","isTreeExpandByRow","setTreeExpansion","clearCurrentRowEvent","selection","removeList","removeEvent","restRow","_InputNumberDemo_vue__WEBPACK_IMPORTED_MODULE_0__","_SplitPanesDemo_vue__WEBPACK_IMPORTED_MODULE_1__","_SvgIconDemo_vue__WEBPACK_IMPORTED_MODULE_2__","LayoutDemo","ButtonDemo","IconDemo","RadioDemo","CheckboxDemo","InputDemo","SelectDemo","CascaderDemo","SwitchDemo","FormDemo","TableDemo","TagDemo","TreeDemo","AlertDemo","LoadingDemo","NavMenuDemo","TabsDemo","DropdownDemo","StepsDemo","DialogDemo","TooltipDemo","PopoverDemo","AsideDemo","CardDemo","CarouselDemo","DateTimeDemo","MessageBoxDemo","NotificationDemo","DateDemo","TimeDemo","I18nDemo","CollapseDemo","BadgeDemo","InstallDemo","BreadcrumbDemo","PaginationDemo","ProgressDemo","SliderDemo","RateDemo","UploadDemo","NoteDemo","SortableDemo","ListDemo","ColorDemo","CalendarDemo","ImageDemo","ImageViewerDemo","PinDemo","SignatureDemo","ChangeLog","AdaptiveGroupDemo","RippleDemo","MobileInstallDemo","ScrollViewDemo","ActionSheetDemo","NavBarDemo","SwipeCellDemo","TextIconDemo","StepperDemo","IndexBarDemo","SkeletonDemo","DemoLangZh","DemoLangJa","DemoLangEn","AttrTable","CodeTable","EventTable","SlotTable","MethodTable","MainTemplate","routes","menuItems1","AjaxDemo","mobileMenuItems","TabBarDemo","CellLayoutDemo","componentsFn","componentId","isDef","vueParameter","clickHandle1","$root","radioLang","clickHandle2","components","menuItems2","regRouter","childrenDemo","loop","demoSample","viyMobileDemoUrl","sample","tryHandle","isMobileDemo","beforeEnter","to","h3","txt","typeInterval","beforeDestroy","clearInterval","typeFlg","msgFlg","typeWriter","speed","witeTime","backSpeed","backFlg","that","typeBack","startType","setInterval","redirect","DemoRouter","VueRouter","scrollBehavior","savedPosition","getElementsByClassName","afterEach","nextTick","vueDemo","filterHandle","defaultActive","defaultOpeneds","leftClass","openMenuClass","headText","version","rightHeight","menuHeight","setLang","menuItems","subMenus","menuItem","subMenu","querySelector","headClick","$router","showChangeLog","location","toGitLab","lan","getSystemInfo","inputHeight","clientHeight","addResizeListener","containerHeight","urlAry","./mock/helper.js","XEAjaxMock","columnData","fileData","sexData","cityAllData","i18nData","./mock/index.js","helper","MockData","GET */api/user/page/list(/:pageSize)(/:currentPage)","request","passThrough","toNumber","userData","GET */api/user/list","POST */api/user/save","GET */api/column/page/list(/:pageSize)(/:currentPage)","GET */api/column/list","GET */api/file/list","GET */api/conf/city/all"],"mappings":"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A,4DACA,sEACA,4CACA,yCACA,4CACA,wBACA,2CACA,uCACA,sCACA,gCACA,2CACA,2CACA,0BACA,sBACA,wCACA,0BACA,yBACA,0EACA,0CACA,8BACA,kDACA,wCACA,4DACA,qDACA,wCACA,0BACA,2CACA,mDACA,2CACA,wCACA,0DACA,wCACA,4CACA,2CACA,0CACA,uDACA,qDACA,2CACA,oDACA,6CACA,sBACA,iCACA,6BACA,8BACA,+BACA,sBACA,oBACA,oCACA,4CACA,+BACA,wBACA,4BACA,gCACA,yBACA,iBACA,4CACA,+BACA,8BACA,6BACA,4CACA,mCACA,gCACA,4FACA,wCACA,+CACA,iDACA,mCACA,qCACA,8CACA,uBACA,+BACA,oCACA,2BACA,iDACA,0DACA,kDACA,qDACA,gEACA,qDACA,uCACA,uCACA,qCACA,8BACA,4BACA,2BACA,wBACA,oCAGAD,MAAA,sBACAC,aACA,2BACA,oCACA,uBACA,gDACA,sEACA,uCAGAD,MAAA,sBACAC,aACA,2BACA,4BACA,oEACA,8FACA,8BACA,oCACA,4CACA,6BACA,mCACA,mCACA,wCACA,+CACA,uCACA,6BACA,mDACA,iCACA,kCACA,yBACA,kBACA,iCACA,8BAGAD,MAAA,sBACAC,aACA,uCACA,2CACA,6BACA,8BAGAD,MAAA,sBACAC,aACA,0CACA,oCACA,kCACA,uCACA,6BACA,iCAGAD,MAAA,sBACAC,aACA,iDACA,uCACA,+BACA,uBACA,wDACA,0BACA,qCACA,4BACA,yCACA,2CACA,4CACA,qCACA,oCACA,4CACA,kDACA,uCACA,mCACA,2BACA,0CAGAD,MAAA,sBACAC,aACA,8BACA,gCACA,gDACA,sCACA,uDACA,+CACA,0CACA,4BACA,oBACA,4BAGAD,MAAA,sBACAC,aACA,gEACA,sDACA,sCACA,2CACA,wDACA,kDAGAD,MAAA,sBACAC,aACA,yCACA,4CACA,4CACA,2CACA,gEACA,oCACA,sDACA,2BACA,4CACA,2CACA,uCACA,0CACA,6CACA,sBACA,2CACA,oCACA,oCACA,kCACA,qCACA,gCACA,wCACA,yCACA,2BACA,8DACA,oCACA,wBACA,6CACA,iCACA,0BACA,qEACA,6DACA,oDAGAD,MAAA,sBACAC,aACA,0CAGAD,MAAA,sBACAC,aACA,gDAGAD,MAAA,sBACAC,aACA,YAGAD,MAAA,sBACAC,aACA,YAGAD,MAAA,sBACAC,aACA,iFACA,mEACA,4BACA,2BACA,oCACA,0CACA,4BACA,kCACA,iDACA,4BACA,uCACA,uDACA,sBAGAD,MAAA,sBACAC,aACA,qCACA,4CACA,gDACA,+CACA,kCACA,0CACA,sDACA,gEACA,8FACA,qDACA,mCACA,yCACA,gDACA,8BACA,4BACA,iFACA,wDACA,sCACA,kDACA,yBACA,mCACA,+EACA,6BACA,kEACA,+CACA,6BACA,+CAGAD,MAAA,sBACAC,aACA,kCACA,yBACA,uCACA,uBACA,uBACA,2DACA,iFACA,wDACA,mCACA,oCACA,wCACA,4DACA,sCACA,+CACA,oCACA,0CACA,oDACA,qCACA,yBACA,+BAGAD,MAAA,sBACAC,aACA,kCACA,8DACA,0BAIAD,MAAA,sBACAC,aACA,uCACA,2BACA,gCACA,+CACA,0CAIAD,MAAA,sBACAC,aACA,mCACA,qBACA,iCAIAD,MAAA,sBACAC,aACA,+BACA,mBACA,yCACA,oDACA,wBACA,uCACA,6BACA,6CACA,8BACA,oDACA,0CACA,uCACA,+BACA,4BACA,6BAIAD,MAAA,sBACAC,aACA,mBAIAD,MAAA,qBACAC,aACA,sCACA,uCACA,iBACA,uCACA,oCACA,6DACA,qDACA,yBACA,8DACA,qCACA,wCACA,0CACA,yBACA,yBAIAD,MAAA,qBACAC,aACA,2DACA,kDACA,2BACA,4BACA,+BACA,wCACA,kCACA,sBACA,2CACA,oCACA,qCACA,4DACA,uDACA,2CAIAD,MAAA,qBACAC,aACA,eACA,6BACA,iDAIAD,MAAA,qBACAC,aACA,oDACA,8CACA,6CACA,qCACA,gCACA,+CAIAD,MAAA,qBACAC,aACA,0CACA,2BACA,kBACA,wBACA,oCACA,kDACA,4DACA,gEACA,4CACA,gCACA,wBAIAD,MAAA,qBACAC,aACA,qCACA,6BACA,wBACA,sBACA,2BACA,+BACA,yBAIAD,MAAA,qBACAC,aACA,6CACA,mBACA,sEACA,WACA,qBACA,mBACA,sCACA,iDACA,qBACA,mBACA,yDACA,8BACA,2BACA,iCACA,kBACA,qBACA,iCACA,0BACA,oBACA,qBACA,qBACA,iCACA,uCAIAD,MAAA,qBACAC,aACA,6BACA,wCACA,sCACA,2CACA,kCACA,4BACA,oCACA,uCACA,6BACA,oBACA,qCACA,4BACA,0CACA,mBAIAD,MAAA,qBACAC,aACA,mCACA,oCACA,8BACA,0DACA,4BACA,mCACA,8BACA,2BACA,6CACA,4BACA,sDACA,4DACA,mBACA,0BACA,uBACA,4BACA,4BAGAD,MAAA,qBACAC,aACA,2DACA,wDACA,8BACA,oCACA,oCAGAD,MAAA,qBACAC,aACA,uBACA,sBACA,2BACA,sBACA,0BACA,6CACA,6CACA,2BACA,sCACA,wCAGAD,MAAA,qBACAC,aACA,0BAGAD,MAAA,qBACAC,aACA,6BACA,oBACA,6DACA,gCACA,oCACA,kEACA,kCACA,kCACA,kDACA,0BACA,wBAGAD,MAAA,2BACAC,aACA,2BACA,gCACA,4BACA,oEACA,sCACA,0BACA,4BACA,iCACA,qBAGAD,MAAA,2BACAC,aAAA,WACA,iEACA,kDACA,qEACA,wCACA,mBACA,wBACA,wBACA,6BACA,+BAGAD,MAAA,2BACAC,aAAA,WACA,iCACA,4BACA,+BAEAD,MAAA,2BACAC,aAAA,WACA,4BAEAD,MAAA,2BACAC,aAAA,cAEAD,MAAA,2BACAC,aAAA,WACA,wCACA,oCAEAD,MAAA,2BACAC,aAAA,WACA,mCAEAD,MAAA,yBACAC,aAAA,WACA,uBACA,aACA,qBACA,yBACA,wCAEAD,MAAA,yBACAC,aAAA,+BAEAD,MAAA,yBACAC,aAAA,oBACA,qCAEAD,MAAA,yBACAC,aAAA,+BAEAD,MAAA,yBACAC,aAAA,2BACA,cAEAD,MAAA,yBACAC,aAAA,WACA,aACA,wBAEAD,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UAEAH,MAAA,0BACAC,YAAA,GACAG,SAAA,8PACAE,WACAC,KAAA,WACA,OACAomB,SAAA,sBACA,sBACA,uBACA,oBACA,wBACA,yBACA,wBACA,sBACA,uBACA,qBACA,mBACA,mBACA,gBACA,mBACA,oBACA,uBACA,mBACA,iBACA,iBACA,iBACA,kBACA,oBACA,mBACA,qBACA,gBACA,iBACA,wBACA,yBACA,iBACA,kBACA,gBACA,gBACA,mBACA,oBACA,uBACA,wBACA,gBACA,kBACA,iBACA,kBACA,mBACA,gBACA,mBACA,mBACA,eACA,mBACA,kBACA,iBACA,iBACA,kBACA,iCACA,oBACA,mBACA,oBACA,mBACA,gBACA,qBACA,sBACA,gBACA,eACA,cACA,mBACA,oBACA,iBACA,mBACA,gBACA,kBACA,iBACA,oBACA,oBACA,oBACA,sBACA,kBACA,oBACA,mBACA,qBACA,gBACA,sBACA,uBACA,kBACA,oBACA,qBACA,kBACA,kBACA,gBACA,oBACA,qBACA,mBACA,kBACA,kBACA,gBACA,kBACA,gBACA,gBACA,gBACA,eACA,iBACA,qBACA,mBACA,mBACA,qBACA,uBACA,iBACA,qBACA,iBACA,gBACA,kBACA,mBACA,kBACA,gBACA,oBACA,oBACA,eACA,oBACA,qCACA,wCACA,yBAKAxmB,GAAA,QACAW,aAAA;;;;2DC+IAjD,EAAAD,SA5RAkC,KAAA,SACAzB,KAAA,QACA0B,MACAC,MAAA,kBACAC,YAAA,yBAEAC,UACAF,MAAA,2BACAC,YAAA,iCACAG,SAAA,iPACAE,WACAC,KAAA,WACA,OACAqmB,MAAA,8CACAC,IAAA,yBAIAxmB,KAAA,sXAcA,qJAMAF,GAAA,WAEAH,MAAA,2BACAC,YAAA,iCACAG,SAAA,kbACAE,WACAC,KAAA,WACA,OACAumB,IAAA,iCAIAzmB,KAAA,0rBAuBAF,GAAA,WAEAH,MAAA,2BACAC,YAAA,iCACAG,SAAA,gXACAC,KAAA,+dAcAF,GAAA,WAEAH,MAAA,2BACAC,YAAA,iCACAG,SAAA,yIACAE,WACAC,KAAA,WACA,OAC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","file":"vue-demo.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./demo/index.js\");\n","'use strict';\nvar adaptiveGroup = {\n  path: '/adaptiveGroup',\n  name: 'adaptiveGroup',\n  head: {\n    label: 'adaptiveGroup.label',\n    description: 'adaptiveGroup.description'\n  },\n  samples: [{\n    id: 'adaptiveGroup1',\n    label: 'adaptiveGroup.samples1.label',\n    description: 'adaptiveGroup.samples1.description',\n    template: '<div class=\"source\"><vue-adaptive-group size=\"sm\" custom-class=\"more\" li-class=\"custom\"><vue-button>主按钮</vue-button><vue-button slot=\"li1\">按钮1</vue-button><vue-button slot=\"li2\">按钮2</vue-button><vue-button slot=\"li3\">按钮3</vue-button></vue-adaptive-group></div>',\n    code: '<vue-adaptive-group size=\"sm\" custom-class=\"more\" li-class=\"custom\">\\n' +\n      '  <vue-button>主按钮</vue-button>\\n' +\n      '  <vue-button slot=\"li1\">按钮1</vue-button>\\n' +\n      '  <vue-button slot=\"li2\">按钮1</vue-button>\\n' +\n      '  <vue-button slot=\"li3\">按钮1</vue-button>\\n' +\n      '</vue-adaptive-group>'\n  }, {\n    id: 'adaptiveGroup2',\n    label: 'Attributes',\n    template: '<attr-table :data=\"tableData\"></attr-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"size\",\n            column2: \"adaptiveGroup.samples2.row1column2\",\n            column3: \"String\",\n            column4: \"lg(1200px), md(992px), sm(768px)\",\n            column5: \"md\"\n          }, {\n            column1: \"custom-class\",\n            column2: \"adaptiveGroup.samples2.row2column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"li-class\",\n            column2: \"adaptiveGroup.samples2.row3column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"icon-class\",\n            column2: \"adaptiveGroup.samples2.row4column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"vue-icon-more\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'adaptiveGroup3',\n    label: 'Slots',\n    template: '<slot-table :data=\"tableData\"></slot-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"\",\n            column2: \"adaptiveGroup.samples3.row1column2\"\n          }, {\n            column1: \"li+(index)\",\n            column2: \"adaptiveGroup.samples3.row2column2\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }]\n};\nmodule.exports = adaptiveGroup;\n","'use strict';\nvar ajaxDemo = {\n  path: '/ajax',\n  name: 'ajax',\n  head: {\n    label: 'ajaxDemo.label',\n    description: ''\n  },\n  samples: [{\n    id: 'ajax1',\n    label: 'ajaxDemo.samples1.label',\n    description: 'ajaxDemo.samples1.description',\n    collapse: [\"item1\"],\n    notshowblock: true,\n    code: '//General Vue use http\\nVue.http.get(\\'/someUrl\\', [options]).then(successCallback, errorCallback);\\nVue.http.post(\\'/someUrl\\', [body], [options]).then(successCallback, errorCallback);\\n\\n//Vue components use $http\\nthis.$http.get(\\'/someUrl\\', [options]).then(successCallback, errorCallback);\\nthis.$http.post(\\'/someUrl\\', [body], [options]).then(successCallback, errorCallback);'\n  }, {\n    id: 'ajax2',\n    label: 'ajaxDemo.samples2.label',\n    description: 'ajaxDemo.samples2.description',\n    collapse: [\"item1\"],\n    notshowblock: true,\n    code: 'get(url, [options])\\nhead(url, [options])\\ndelete(url, [options])\\njsonp(url, [options])\\npost(url, [body], [options])\\nput(url, [body], [options])\\npatch(url, [body], [options])\\n\\n//For more API, please refer to\\n\"https://github.com/pagekit/vue-resource\"'\n  }, {\n    id: 'ajax3',\n    label: 'Options',\n    template: '<attr-table :data=\"tableData\"></attr-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"url\",\n            column2: \"string\",\n            column3: \"ajaxDemo.samples3.row1column3\"\n          }, {\n            column1: \"method\",\n            column2: \"string\",\n            column3: \"ajaxDemo.samples3.row2column3\"\n          }, {\n            column1: \"body\",\n            column2: \"Object,FormDatastring\",\n            column3: \"request body\"\n          }, {\n            column1: \"params\",\n            column2: \"Object\",\n            column3: \"ajaxDemo.samples3.row4column3\"\n          }, {\n            column1: \"headers\",\n            column2: \"Object\",\n            column3: \"request header\"\n          }, {\n            column1: \"timeout\",\n            column2: \"number\",\n            column3: \"ajaxDemo.samples3.row6column3\"\n          }, {\n            column1: \"before\",\n            column2: \"function(request)\",\n            column3: \"ajaxDemo.samples3.row7column3\"\n          }, {\n            column1: \"progress\",\n            column2: \"function(event)\",\n            column3: \"ajaxDemo.samples3.row8column3\"\n          }, {\n            column1: \"credientials\",\n            column2: \"boolean\",\n            column3: \"ajaxDemo.samples3.row9column3\"\n          }, {\n            column1: \"emulateHTTP\",\n            column2: \"boolean\",\n            column3: \"ajaxDemo.samples3.row10column3\"\n          }, {\n            column1: \"emulateJSON\",\n            column2: \"boolean\",\n            column3: \"ajaxDemo.samples3.row11column3\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }]\n};\nmodule.exports = ajaxDemo;\n","'use strict';\nvar alertDemo = {\n  path: '/alert',\n  name: 'alert',\n  head: {\n    label: 'alertDemo.label',\n    description: 'alertDemo.description'\n  },\n  samples: [{\n    id: 'alert1',\n    label: 'alertDemo.samples1.label',\n    description: 'alertDemo.samples1.description',\n    template: '<div class=\"source\"><vue-alert title=\"Success Alert\" type=\"success\" show-icon :closable=\"false\">More text description...</vue-alert><vue-alert title=\"Info Alert\" type=\"info\" show-icon>More text description...</vue-alert><vue-alert title=\"Warning Alert\" type=\"warning\" show-icon close-text=\"Done\">More text description...</vue-alert><vue-alert title=\"Error Alert\" type=\"error\" show-icon close-text=\"Go!\" @close=\"closeHandle\">More text description...</vue-alert><vue-alert title=\"Success Alert\" type=\"success\" show-icon dark :closable=\"false\">More text description...</vue-alert><vue-alert title=\"Info Alert\" type=\"info\" show-icon dark>More text description...</vue-alert><vue-alert title=\"Warning Alert\" type=\"warning\" show-icon dark close-text=\"Done\">More text description...</vue-alert><vue-alert title=\"Error Alert\" type=\"error\" show-icon dark close-text=\"Go!\" @close=\"closeHandle\">More text description...</vue-alert></div>',\n    parameter: {\n      methods: {\n        closeHandle: function () {\n          this.$notify({ title: \"I'm go~\" });\n        }\n      }\n    },\n    code: '<vue-alert title=\"Success Alert\" type=\"success\" show-icon :closable=\"false\">More text description...</vue-alert>\\n<vue-alert title=\"Info Alert\" type=\"info\" show-icon>More text description...</vue-alert>\\n<vue-alert title=\"Warning Alert\" type=\"warning\" show-icon close-text=\"Done\">More text description...</vue-alert>\\n<vue-alert title=\"Error Alert\" type=\"error\" show-icon close-text=\"Go!\" @close=\"closeHandle\">More text description...</vue-alert>\\n<vue-alert title=\"Success Alert\" type=\"success\" show-icon dark :closable=\"false\">More text description...</vue-alert>\\n<vue-alert title=\"Info Alert\" type=\"info\" show-icon dark>More text description...</vue-alert>\\n<vue-alert title=\"Warning Alert\" type=\"warning\" show-icon dark close-text=\"Done\">More text description...</vue-alert>\\n<vue-alert title=\"Error Alert\" type=\"error\" show-icon dark close-text=\"Go!\" @close=\"closeHandle\">More text description...</vue-alert>\\n\\n<script>\\n  new Vue({\\n    methods: {\\n      closeHandle: function() {\\n        this.$notify({title: \"I\\'m go~\"});\\n      }\\n    }\\n  }).$mount();\\n</script>'\n  }, {\n    id: 'alert2',\n    label: 'Attributes',\n    template: '<attr-table :data=\"tableData\"></attr-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"title\",\n            column2: \"alertDemo.samples2.row1column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"type\",\n            column2: \"alertDemo.samples2.row2column2\",\n            column3: \"String\",\n            column4: \"success, warning, info, error\",\n            column5: \"info\"\n          }, {\n            column1: \"closable\",\n            column2: \"alertDemo.samples2.row3column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"true\"\n          }, {\n            column1: \"close-text\",\n            column2: \"alertDemo.samples2.row4column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"show-icon\",\n            column2: \"alertDemo.samples2.row5column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"dark\",\n            column2: \"alertDemo.samples2.row6column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'alert3',\n    label: 'Events',\n    template: '<event-table :data=\"tableData\"></event-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"close\",\n            column2: \"alertDemo.samples3.row1column2\",\n            column3: \"\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }]\n};\nmodule.exports = alertDemo;\n","'use strict';\nvar asideDemo = {\n  path: '/aside',\n  name: 'aside',\n  head: {\n    label: 'asideDemo.label',\n    description: 'asideDemo.description'\n  },\n  samples: [{\n    id: 'aside1',\n    label: 'asideDemo.samples1.label',\n    description: 'asideDemo.samples1.description',\n    template: '<div class=\"source\"><vue-aside title=\"This is title\" v-model=\"asideVisible\" :position=\"asidePos\" :before-close=\"handleClose\"><span>This is a message</span><span slot=\"footer\"><vue-button @click=\"asideVisible = false\">Cancel</vue-button><vue-button type=\"primary\" @click=\"asideVisible = false\">Complete</vue-button></span></vue-aside><vue-row><vue-col :span=\"6\"><vue-button @click=\"openasideLeft\">Open in left</vue-button></vue-col><vue-col :span=\"6\"><vue-button @click=\"openasideRight\">Open in right</vue-button></vue-col><vue-col :span=\"6\"><vue-button @click=\"openasideTop\">Open in top</vue-button></vue-col><vue-col :span=\"6\"><vue-button @click=\"openasideBottom\">Open in bottom</vue-button></vue-col></vue-row></div>',\n    parameter: {\n      data: function () {\n        return {\n          asidePos: \"\",\n          asideVisible: false\n        }\n      },\n      methods: {\n        openasideLeft: function () {\n          this.asidePos = \"left\";\n          this.asideVisible = true;\n        },\n        openasideRight: function () {\n          this.asidePos = \"right\";\n          this.asideVisible = true;\n        },\n        openasideTop: function () {\n          this.asidePos = \"top\";\n          this.asideVisible = true;\n        },\n        openasideBottom: function () {\n          this.asidePos = \"bottom\";\n          this.asideVisible = true;\n        },\n        handleClose: function (done) {\n          this.$confirm({\n            message: 'Are you sure to close this aside?'\n          }).then(function () {\n            done();\n          }).catch(function () {\n            done(false);\n          });\n        }\n      }\n    },\n    code: '<vue-aside v-model=\"asideVisible\" :position=\"asidePos\" title=\"This is title\" :before-close=\"handleClose\">\\n' +\n      '  <span>This is a message</span>\\n' +\n      '  <span slot=\"footer\">\\n' +\n      '    <vue-button @click=\"asideVisible = false\">Cancel</vue-button>\\n' +\n      '    <vue-button type=\"primary\" @click=\"asideVisible = false\">Complete</vue-button>\\n' +\n      '  </span>\\n' +\n      '</vue-aside>\\n' +\n      '<vue-button @click=\"openasideLeft\">Open in left</vue-button>\\n' +\n      '<vue-button @click=\"openasideRight\">Open in rigth</vue-button>\\n\\n' +\n      '<vue-button @click=\"openasideTop\">Open in top</vue-button>\\n\\n' +\n      '<vue-button @click=\"openasideBottom\">Open in Bottom</vue-button>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function() {\\n' +\n      '      return {\\n' +\n      '         asidePos: \"\",\\n' +\n      '         asideVisible: false\\n' +\n      '      }\\n' +\n      '    },\\n' +\n      '    methods: {\\n' +\n      '      openasideLeft: function() {\\n' +\n      '        this.asidePos = \"left\";\\n' +\n      '        this.asideVisible = true;\\n' +\n      '      },\\n' +\n      '      openasideRight: function() {\\n' +\n      '        this.asidePos = \"right\";\\n' +\n      '        this.asideVisible = true;\\n' +\n      '      },\\n' +\n      '      openasideTop: function() {\\n' +\n      '        this.asidePos = \"top\";\\n' +\n      '        this.asideVisible = true;\\n' +\n      '      },\\n' +\n      '      openasideBottom: function() {\\n' +\n      '        this.asidePos = \"bottom\";\\n' +\n      '        this.asideVisible = true;\\n' +\n      '      },\\n' +\n      '      handleClose: function(done) {\\n' +\n      '        this.$confirm({\\n' +\n      '          message: \"Are you sure to close this aside?\"\\n' +\n      '        }).then(function() {\\n' +\n      '          done();\\n' +\n      '        }).catch(function() {\\n' +\n      '          done(false);\\n' +\n      '        });\\n' +\n      '      },\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'aside2',\n    label: 'asideDemo.samples2.label',\n    description: 'asideDemo.samples2.description',\n    template: '<div class=\"source\"><div class=\"phone-viewport\"><vue-menu theme=\"dark\" default-active=\"1\" mode=\"horizontal\" @select=\"asideVisible = true\"><vue-menu-item index=\"1\"><i class=\"vue-icon-menu\"></i>Aside</vue-menu-item></vue-menu><vue-aside v-model=\"asideVisible\" relative position=\"left\" size=\"large\" close-on-click-modal title=\"Aside content\"><span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Nisi cupiditate esse necessitatibus beatae nobis, deserunt ut est fugit, tempora deleniti, eligendi commodi doloribus. Nemo, assumenda possimus, impedit inventore perferendis iusto!</span></vue-aside></div></div>',\n    parameter: {\n      data: function () {\n        return {\n          asideVisible: false\n        }\n      }\n    },\n    code: '<div class=\"phone-viewport\">\\n' +\n      '  <vue-menu theme=\"dark\" default-active=\"1\" mode=\"horizontal\" @select=\"asideVisible = true\">\\n' +\n      '    <vue-menu-item index=\"1\">\\n' +\n      '      <i class=\"vue-icon-menu\"></i>Aside\\n' +\n      '    </vue-menu-item>\\n' +\n      '  </vue-menu>\\n' +\n      '  <vue-aside v-model=\"asideVisible\" relative position=\"left\" size=\"large\" close-on-click-modal title=\"Aside content\">\\n' +\n      '    <span>\\n' +\n      '      Lorem ipsum dolor sit amet, consectetur adipisicing elit. Nisi cupiditate esse necessitatibus beatae nobis, deserunt ut est fugit, tempora deleniti, eligendi commodi doloribus. Nemo, assumenda possimus, impedit inventore perferendis iusto!\\n' +\n      '    </span>\\n' +\n      '  </vue-aside>\\n' +\n      '</div>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function() {\\n' +\n      '      return {\\n' +\n      '         asideVisible: false\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'aside3',\n    label: 'asideDemo.samples3.label',\n    description: 'asideDemo.samples3.description',\n    template: '<div class=\"source\"><vue-button type=\"primary\" @click=\"asideVisible = true\">Click Me</vue-button><vue-aside v-model=\"asideVisible\" close-on-click-modal><span slot=\"header\">Shipping address</span><vue-xtable :data=\"gridData\"><vue-xtable-column field=\"date\" title=\"Date\" width=\"150\"></vue-xtable-column><vue-xtable-column field=\"name\" title=\"Name\" width=\"150\"></vue-xtable-column><vue-xtable-column field=\"address\" title=\"Address\" width=\"350\"></vue-xtable-column></vue-xtable></vue-aside></div>',\n    parameter: {\n      data: function () {\n        return {\n          gridData: [{\n            date: '2017-07-02',\n            name: 'John Smith',\n            address: 'No.1518, Jinshajiang Road'\n          }, {\n            date: '2017-07-04',\n            name: 'John Smith',\n            address: 'No.1518, Jinshajiang Road'\n          }, {\n            date: '2017-07-01',\n            name: 'John Smith',\n            address: 'No.1518, Jinshajiang Road'\n          }, {\n            date: '2017-07-03',\n            name: 'John Smith',\n            address: 'No.1518, Jinshajiang Road'\n          }],\n          asideVisible: false\n        }\n      }\n    },\n    code: '<vue-button type=\"primary\" @click=\"asideVisible = true\">Click Me</vue-button>\\n' +\n      '<vue-aside v-model=\"asideVisible\" close-on-click-modal>\\n' +\n      '  <span slot=\"header\">Shipping address</span>\\n' +\n      '  <vue-xtable :data=\"gridData\">\\n' +\n      '    <vue-xtable-column field=\"date\" title=\"Date\" width=\"150\"></vue-xtable-column>\\n' +\n      '    <vue-xtable-column field=\"name\" title=\"Name\" width=\"200\"></vue-xtable-column>\\n' +\n      '    <vue-xtable-column field=\"address\" title=\"Address\" width=\"350\"></vue-xtable-column>\\n' +\n      '  </vue-xtable>\\n' +\n      '</vue-aside>\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function() {\\n' +\n      '      return {\\n' +\n      '        gridData: [{\\n' +\n      '          date: \"2017-07-02\",\\n' +\n      '          name: \"John Smith\",\\n' +\n      '          address: \"No.1518, Jinshajiang Road\"\\n' +\n      '        }, {\\n' +\n      '          date: \"2017-07-04\",\\n' +\n      '          name: \"John Smith\",\\n' +\n      '          address: \"No.1518, Jinshajiang Road\"\\n' +\n      '        }, {\\n' +\n      '          date: \"2017-07-01\",\\n' +\n      '          name: \"John Smith\",\\n' +\n      '          address: \"No.1518, Jinshajiang Road\"\\n' +\n      '        }, {\\n' +\n      '          date: \"2017-07-03\",\\n' +\n      '          name: \"John Smith\",\\n' +\n      '          address: \"No.1518, Jinshajiang Road\"\\n' +\n      '        }],\\n' +\n      '        asideVisible: false\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'asid4',\n    label: 'Attributes',\n    template: '<attr-table :data=\"tableData\"></attr-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"v-model\",\n            column2: \"asideDemo.samples4.row1column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"title\",\n            column2: \"asideDemo.samples4.row2column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"size\",\n            column2: \"asideDemo.samples4.row3column2\",\n            column3: \"String\",\n            column4: \"tiny/small/large\",\n            column5: \"small\"\n          }, {\n            column1: \"custom-class\",\n            column2: \"asideDemo.samples4.row5column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"close-on-click-modal\",\n            column2: \"asideDemo.samples4.row6column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"close-on-press-escape\",\n            column2: \"asideDemo.samples4.row7column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"true\"\n          }, {\n            column1: \"show-close\",\n            column2: \"asideDemo.samples4.row8column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"before-close\",\n            column2: \"asideDemo.samples4.row9column2\",\n            column3: \"asideDemo.samples4.row9column3\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"position\",\n            column2: \"asideDemo.samples4.row10column2\",\n            column3: \"String\",\n            column4: \"left, right, top, bottom\",\n            column5: \"right\"\n          }, {\n            column1: \"relative\",\n            column2: \"asideDemo.samples4.row11column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"cleanness-modal\",\n            column2: \"dialogDemo.samples3.row10column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'asid5',\n    label: 'Slots',\n    template: '<slot-table :data=\"tableData\"></slot-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"\",\n            column2: \"asideDemo.samples5.row1column2\"\n          }, {\n            column1: \"header\",\n            column2: \"asideDemo.samples5.row2column2\"\n          }, {\n            column1: \"footer\",\n            column2: \"asideDemo.samples5.row3column2\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'aside6',\n    label: 'Events',\n    template: '<event-table :data=\"tableData\"></event-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"close\",\n            column2: \"asideDemo.samples6.row1column2\",\n            column3: \"\"\n          }, {\n            column1: \"open\",\n            column2: \"asideDemo.samples6.row2column2\",\n            column3: \"\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }]\n};\nmodule.exports = asideDemo;\n","'use strict';\nvar badgeDemo = {\n  path: '/badge',\n  name: 'badge',\n  head: {\n    label: 'badgeDemo.label',\n    description: 'badgeDemo.description'\n  },\n  samples: [{\n    id: 'badge1',\n    label: 'badgeDemo.samples1.label',\n    description: 'badgeDemo.samples1.description',\n    template: '<div class=\"source\"><vue-row><vue-col :span=\"4\"><vue-badge value=\"12\"><vue-button size=\"small\">comments</vue-button></vue-badge></vue-col><vue-col :span=\"4\"><vue-badge :value=\"100\" :max=\"99\"><vue-button size=\"small\">replies</vue-button></vue-badge></vue-col><vue-col :span=\"4\"><vue-badge value=\"new\"><vue-button size=\"small\">news</vue-button></vue-badge></vue-col><vue-col :span=\"4\"><vue-badge is-dot><vue-button size=\"small\">info</vue-button></vue-badge></vue-col><vue-col :span=\"4\"><vue-badge value=\"12\"></vue-badge></vue-col></vue-row></div>',\n    code: '<vue-badge value=\"12\">\\n' +\n      '  <vue-button size=\"small\">comments</vue-button>\\n' +\n      '</vue-badge>\\n' +\n      '<vue-badge :value=\"100\" :max=\"99\">\\n' +\n      '  <vue-button size=\"small\">replies</vue-button>\\n' +\n      '</vue-badge>\\n' +\n      '<vue-badge value=\"new\">\\n' +\n      '  <vue-button size=\"small\">news</vue-button>\\n' +\n      '</vue-badge>\\n' +\n      '<vue-badge is-dot>\\n' +\n      '  <vue-button size=\"small\">info</vue-button>\\n' +\n      '</vue-badge>\\n' +\n      '<vue-badge value=\"12\">\\n' +\n      '</vue-badge>'\n  }, {\n    id: 'badge2',\n    label: 'Attributes',\n    template: '<attr-table :data=\"tableData\"></attr-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"value\",\n            column2: \"badgeDemo.samples2.row1column2\",\n            column3: \"String / Number\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"max\",\n            column2: \"badgeDemo.samples2.row2column2\",\n            column3: \"Number\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"is-dot\",\n            column2: \"badgeDemo.samples2.row3column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"hidden\",\n            column2: \"badgeDemo.samples2.row4column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }]\n};\nmodule.exports = badgeDemo;\n\n","'use strict';\nvar breadcrumbDemo = {\n  path: '/breadcrumb',\n  name: 'breadcrumb',\n  head: {\n    label: 'breadcrumbDemo.label',\n    description: 'breadcrumbDemo.description'\n  },\n  samples: [{\n    id: 'breadcrumb1',\n    label: 'breadcrumbDemo.samples1.label',\n    description: 'breadcrumbDemo.samples1.description',\n    template: '<div class=\"source\"><vue-row class=\"margin-bottom20\" type=\"flex\" justify=\"center\"><vue-col :span=\"8\"><span class=\"demonstration\">Default separator</span></vue-col><vue-col :span=\"14\"><vue-breadcrumb class=\"demonstration\"><vue-breadcrumb-item>Home</vue-breadcrumb-item><vue-breadcrumb-item>List</vue-breadcrumb-item><vue-breadcrumb-item>Detail</vue-breadcrumb-item></vue-breadcrumb></vue-col></vue-row><vue-row type=\"flex\" justify=\"center\"><vue-col :span=\"8\"><span class=\"demonstration\">Customized separator</span></vue-col><vue-col :span=\"14\"><vue-breadcrumb separator=\"-\" class=\"demonstration\"><vue-breadcrumb-item>Home</vue-breadcrumb-item><vue-breadcrumb-item>List</vue-breadcrumb-item><vue-breadcrumb-item>Detail</vue-breadcrumb-item></vue-breadcrumb></vue-col></vue-row></div>',\n    code: '<span class=\"demonstration\">Default separator</span>\\n' +\n      '<vue-breadcrumb>\\n' +\n      '  <vue-breadcrumb-item>Home</vue-breadcrumb-item>\\n' +\n      '  <vue-breadcrumb-item>List</vue-breadcrumb-item>\\n' +\n      '  <vue-breadcrumb-item>Detail</vue-breadcrumb-item>\\n' +\n      '</vue-breadcrumb>\\n' +\n      '<span class=\"demonstration\">Customized separator</span>\\n' +\n      '<vue-breadcrumb separator=\"-\">\\n' +\n      '  <vue-breadcrumb-item>Home</vue-breadcrumb-item>\\n' +\n      '  <vue-breadcrumb-item>List</vue-breadcrumb-item>\\n' +\n      '  <vue-breadcrumb-item>Detail</vue-breadcrumb-item>\\n' +\n      '</vue-breadcrumb>'\n  }, {\n    id: 'breadcrumb2',\n    label: 'Breadcrumb Attributes',\n    template: '<attr-table :data=\"tableData\"></attr-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"separator\",\n            column2: \"breadcrumbDemo.samples2.row1column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"/\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'breadcrumb3',\n    label: 'Breadcrumb Item Attributes',\n    template: '<attr-table :data=\"tableData\"></attr-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"to\",\n            column2: \"breadcrumbDemo.samples3.row1column2\",\n            column3: \"String/object\",\n            column4: \"\",\n            column5: \"\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'breadcrumb4',\n    label: 'Breadcrumb Item Events',\n    template: '<event-table :data=\"tableData\"></event-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"click\",\n            column2: \"breadcrumbDemo.samples4.row1column2\",\n            column3: \"\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }]\n};\nmodule.exports = breadcrumbDemo;\n\n","var SyntaxHighlighter = require('./SyntaxHighlighter')\nvar XRegExp = require('./XRegExp')\n\n'use strict';\nfunction Brush() {\n  var keywords = 'break case catch continue default delete do else false  for function if in instanceof new null return super switch this throw true try typeof var while with';\n  var csskeywords = 'ascent azimuth background-attachment background-color background-image background-position background-repeat background baseline bbox border-collapse border-color border-spacing border-style border-top border-right border-bottom border-left border-top-color border-right-color border-bottom-color border-left-color border-top-style border-right-style border-bottom-style border-left-style border-top-width border-right-width border-bottom-width border-left-width border-width border bottom cap-height caption-side centerline clear clip color content counter-increment counter-reset cue-after cue-before cue cursor definition-src descent direction display elevation empty-cells float font-size-adjust font-family font-size font-stretch font-style font-variant font-weight font height left letter-spacing line-height list-style-image list-style-position list-style-type list-style margin-top margin-right margin-bottom margin-left margin marker-offset marks mathline max-height max-width min-height min-width orphans outline-color outline-style outline-width outline overflow padding-top padding-right padding-bottom padding-left padding page page-break-after page-break-before page-break-inside pause pause-after pause-before pitch pitch-range play-during position quotes right richness size slope src speak-header speak-numeral speak-punctuation speak speech-rate stemh stemv stress table-layout text-align top text-decoration text-indent text-shadow text-transform unicode-bidi unicode-range units-per-em vertical-align visibility voice-family volume white-space widows width widths word-spacing x-height z-index opacity transform border-radius stroke';\n  var fonts = '[mM]onospace [tT]ahoma [vV]erdana [aA]rial [hH]elvetica [sS]ans-serif [sS]erif [cC]ourier mono sans serif';\n  function getKeywordsCSS(str) {\n    return '\\\\b([a-z_]|)' + str.replace(/ /g, '(?=:)\\\\b|\\\\b([a-z_\\\\*]|\\\\*|)') + '(?=:)\\\\b';\n  }\n  function process(match, regexInfo) {\n    var constructor = SyntaxHighlighter.Match;\n    var code = match[0];\n    var tag = new XRegExp('(&lt;|<)[\\\\s\\\\/\\\\?]*(?<name>[:\\\\w-\\\\.]+)', 'xg').exec(code);\n    var result = [];\n    if (match.attributes != null) {\n      var attributes, regex = new XRegExp('(?<name> [\\\\w:\\\\-\\\\.]+)\\\\s*=\\\\s*(?<value> \".*?\"|\\'.*?\\'|\\\\w+)', 'xg');\n      while ((attributes = regex.exec(code)) != null) {\n        result.push(new constructor(attributes.name, match.index + attributes.index, 'color1'));\n        result.push(new constructor(attributes.value, match.index + attributes.index + attributes[0].indexOf(attributes.value), 'string'));\n      }\n    }\n    if (tag != null)\n      result.push(new constructor(tag.name, match.index + tag[0].indexOf(tag.name), 'keyword'));\n    return result;\n  }\n  this.regexList = [\n    { regex: SyntaxHighlighter.regexLib.multiLineDoubleQuotedString, css: 'string' }, // double quoted strings\n    { regex: SyntaxHighlighter.regexLib.multiLineSingleQuotedString, css: 'string' }, // single quoted strings-\n    { regex: new XRegExp('(\\\\&lt;|<)\\\\!\\\\[[\\\\w\\\\s]*?\\\\[(.|\\\\s)*?\\\\]\\\\](\\\\&gt;|>)', 'gm'), css: 'color2' }, // <![ ... [ ... ]]>\n    { regex: SyntaxHighlighter.regexLib.xmlComments, css: 'comments' }, // <!-- ... -->\n    { regex: SyntaxHighlighter.regexLib.singleLineCComments, css: 'comments' }, // one line comments\n    { regex: SyntaxHighlighter.regexLib.multiLineCComments, css: 'comments' }, // multiline comments\n    { regex: /\\s*#.*/gm, css: 'preprocessor' }, // preprocessor tags like #region and #endregion\n    { regex: new RegExp(this.getKeywords(keywords), 'gm'), css: 'keyword' }, // keywords\n    { regex: new RegExp(getKeywordsCSS(csskeywords), 'gm'), css: 'keyword' }, // keywords\n    { regex: new XRegExp('(&lt;|<)[\\\\s\\\\/\\\\?]*(\\\\w+)(?<attributes>.*?)[\\\\s\\\\/\\\\?]*(&gt;|>)', 'sg'), func: process }\n  ];\n}\nBrush.prototype = new SyntaxHighlighter.Highlighter();\nBrush.aliases = ['jsp'];\nSyntaxHighlighter.brushes.Jsp = Brush;\n\nmodule.exports = SyntaxHighlighter;\n","'use strict';\nvar buttonDemo = {\n    path: '/button',\n    name: 'button',\n    head: {\n        label: 'buttonDemo.label',\n        description: 'buttonDemo.description'\n    },\n    samples: [{\n        label: 'buttonDemo.samples1.label',\n        description: 'buttonDemo.samples1.description',\n        template: '<div class=\"source\"><vue-button>{{$t(\"buttonDemo.defaultButton\")}}</vue-button><vue-button type=\"primary\">{{$t(\"buttonDemo.mainButton\")}}</vue-button><vue-button type=\"text\">{{$t(\"buttonDemo.textButton\")}}</vue-button><vue-button circle>{{$t(\"buttonDemo.circleButton\")}}</vue-button></div>',\n        code: '<vue-button>{{$t(\"buttonDemo.defaultButton\")}}</vue-button>\\n<vue-button type=\"primary\">{{$t(\"buttonDemo.mainButton\")}}</vue-button>\\n<vue-button type=\"text\">{{$t(\"buttonDemo.textButton\")}}</vue-button>\\n<vue-button circle>{{$t(\"buttonDemo.circleButton\")}}</vue-button>',\n        id: 'button1'\n    }, {\n        label: 'buttonDemo.samples2.label',\n        description: 'buttonDemo.samples2.description',\n        template: '<div class=\"source\"><vue-row class=\"margin-bottom20\" type=\"flex\" justify=\"center\"><vue-col :span=\"6\"><span class=\"demonstration\">{{$t(\"buttonDemo.samples2.defaultLabel\")}}</span></vue-col><vue-col :span=\"16\"><vue-button type=\"success\">{{$t(\"buttonDemo.successButton\")}}</vue-button><vue-button type=\"warning\">{{$t(\"buttonDemo.warningButton\")}}</vue-button><vue-button type=\"danger\">{{$t(\"buttonDemo.dangerButton\")}}</vue-button><vue-button type=\"info\">{{$t(\"buttonDemo.infoButton\")}}</vue-button></vue-col></vue-row><vue-row type=\"flex\" justify=\"center\"><vue-col :span=\"6\"><span class=\"demonstration\">{{$t(\"buttonDemo.samples2.hoverLabel\")}}</span></vue-col><vue-col :span=\"16\"><vue-button :plain=\"true\" type=\"success\">{{$t(\"buttonDemo.successButton\")}}</vue-button><vue-button :plain=\"true\" type=\"warning\">{{$t(\"buttonDemo.warningButton\")}}</vue-button><vue-button :plain=\"true\" type=\"danger\">{{$t(\"buttonDemo.dangerButton\")}}</vue-button><vue-button :plain=\"true\" type=\"info\">{{$t(\"buttonDemo.infoButton\")}}</vue-button></vue-col></vue-row></div>',\n        code: '<span class=\"demonstration\">{{$t(\"buttonDemo.samples2.defaultLabel\")}}</span>\\n<vue-button type=\"success\">{{$t(\"buttonDemo.successButton\")}}</vue-button>\\n<vue-button type=\"warning\">{{$t(\"buttonDemo.warningButton\")}}</vue-button>\\n<vue-button type=\"danger\">{{$t(\"buttonDemo.dangerButton\")}}</vue-button>\\n<vue-button type=\"info\">{{$t(\"buttonDemo.infoButton\")}}</vue-button>\\n<span class=\"demonstration\">{{$t(\"buttonDemo.samples2.hoverLabel\")}}</span>\\n<vue-button :plain=\"true\" type=\"success\">{{$t(\"buttonDemo.successButton\")}}</vue-button>\\n<vue-button :plain=\"true\" type=\"warning\">{{$t(\"buttonDemo.warningButton\")}}</vue-button>\\n<vue-button :plain=\"true\" type=\"danger\">{{$t(\"buttonDemo.dangerButton\")}}</vue-button>\\n<vue-button :plain=\"true\" type=\"info\">{{$t(\"buttonDemo.infoButton\")}}</vue-button>',\n        id: 'button2'\n    }, {\n        label: 'buttonDemo.samples3.label',\n        description: 'buttonDemo.samples3.description',\n        template: '<div class=\"source\"><vue-button :plain=\"true\" :disabled=\"true\">{{$t(\"buttonDemo.defaultButton\")}}</vue-button><vue-button type=\"primary\" :disabled=\"true\">{{$t(\"buttonDemo.mainButton\")}}</vue-button><vue-button type=\"text\" :disabled=\"true\">{{$t(\"buttonDemo.textButton\")}}</vue-button></div>',\n        code: '<vue-button :plain=\"true\" :disabled=\"true\">{{$t(\"buttonDemo.defaultButton\")}}</vue-button>\\n<vue-button type=\"primary\" :disabled=\"true\">{{$t(\"buttonDemo.mainButton\")}}</vue-button>\\n<vue-button type=\"text\" :disabled=\"true\">{{$t(\"buttonDemo.textButton\")}}</vue-button>',\n        id: 'button3'\n    }, {\n        label: 'buttonDemo.samples4.label',\n        description: 'buttonDemo.samples3.description',\n        template: '<div class=\"source\"><vue-button type=\"primary\" icon=\"vue-icon-edit\"></vue-button><vue-button type=\"primary\" icon=\"vue-icon-share\" circle></vue-button><vue-button type=\"primary\" icon=\"vue-icon-delete2\"></vue-button><vue-button type=\"primary\" icon=\"vue-icon-search\">Search</vue-button><vue-button type=\"primary\">Upload<i class=\"vue-icon-upload vue-icon--right\"></i></vue-button></div>',\n        code: '<vue-button type=\"primary\" icon=\"vue-icon-edit\"></vue-button>\\n<vue-button type=\"primary\" icon=\"vue-icon-share\" circle></vue-button>\\n<vue-button type=\"primary\" icon=\"vue-icon-delete2\"></vue-button>\\n<vue-button type=\"primary\" icon=\"vue-icon-search\">Search</vue-button>\\n<vue-button type=\"primary\">Upload<i class=\"vue-icon-upload vue-icon--right\"></i></vue-button>',\n        id: 'button4'\n    }, {\n        label: 'buttonDemo.samples5.label',\n        description: 'buttonDemo.samples5.description',\n        template: '<div class=\"source\"><vue-row><vue-col :span=\"8\"><vue-button-group><vue-button type=\"primary\" icon=\"vue-icon-arrow-left\">Page up</vue-button><vue-button type=\"primary\">Page down<i class=\"vue-icon-arrow-right vue-icon--right\"></i></vue-button></vue-button-group></vue-col><vue-col :span=\"8\"><vue-button-group><vue-button type=\"primary\" icon=\"vue-icon-edit\"></vue-button><vue-button type=\"primary\" icon=\"vue-icon-share\"></vue-button><vue-button type=\"primary\" icon=\"vue-icon-delete2\"></vue-button></vue-button-group></vue-col></vue-row></div>',\n        code: '<vue-button-group>\\n  <vue-button type=\"primary\" icon=\"vue-icon-arrow-left\">Page up</vue-button>\\n  <vue-button type=\"primary\">Page down<i class=\"vue-icon-arrow-right vue-icon--right\"></i></vue-button>\\n</vue-button-group>\\n<vue-button-group>\\n  <vue-button type=\"primary\" icon=\"vue-icon-edit\"></vue-button>\\n  <vue-button type=\"primary\" icon=\"vue-icon-share\"></vue-button>\\n  <vue-button type=\"primary\" icon=\"vue-icon-delete2\"></vue-button>\\n</vue-button-group>',\n        id: 'button5'\n    }, {\n        label: 'buttonDemo.samples6.label',\n        description: 'buttonDemo.samples6.description',\n        template: '<div class=\"source\"><vue-button type=\"primary\" :loading=\"true\">Loading</vue-button></div>',\n        code: '<vue-button type=\"primary\" :loading=\"true\">Loading</vue-button>',\n        id: 'button6'\n    }, {\n        label: 'buttonDemo.samples7.label',\n        description: 'buttonDemo.samples7.description',\n        template: '<div class=\"source\"><vue-button type=\"primary\" size=\"large\">Large Button</vue-button><vue-button type=\"primary\">Normal Button</vue-button><vue-button type=\"primary\" size=\"small\">Small Button</vue-button><vue-button type=\"primary\" size=\"mini\">Mini Button</vue-button></div>',\n        code: '<vue-button type=\"primary\" size=\"large\">Large Button</vue-button>\\n<vue-button type=\"primary\">Normal Button</vue-button>\\n<vue-button type=\"primary\" size=\"small\">Small Button</vue-button>\\n<vue-button type=\"primary\" size=\"mini\">Mini Button</vue-button>',\n        id: 'button7'\n    }, {\n        id: 'button8',\n        label: 'Attributes',\n        template: '<attr-table :data=\"tableData\"></attr-table>',\n        parameter: {\n            data: function () {\n                return {\n                    tableData: [{\n                        column1: \"size\",\n                        column2: \"buttonDemo.samples8.row1column2\",\n                        column3: \"String\",\n                        column4: \"large,small,mini\",\n                        column5: \"\"\n                    }, {\n                        column1: \"type\",\n                        column2: \"buttonDemo.samples8.row2column2\",\n                        column3: \"String\",\n                        column4: \"primary,success,warning,danger,info,text\",\n                        column5: \"\"\n                    }, {\n                        column1: \"circle\",\n                        column2: \"buttonDemo.samples8.row3column2\",\n                        column3: \"Boolean\",\n                        column4: \"\",\n                        column5: \"false\"\n                    }, {\n                        column1: \"plain\",\n                        column2: \"buttonDemo.samples8.row4column2\",\n                        column3: \"Boolean\",\n                        column4: \"\",\n                        column5: \"false\"\n                    }, {\n                        column1: \"loading\",\n                        column2: \"buttonDemo.samples8.row5column2\",\n                        column3: \"Boolean\",\n                        column4: \"\",\n                        column5: \"false\"\n                    }, {\n                        column1: \"disabled\",\n                        column2: \"buttonDemo.samples8.row6column2\",\n                        column3: \"Boolean\",\n                        column4: \"\",\n                        column5: \"false\"\n                    }, {\n                        column1: \"icon\",\n                        column2: \"buttonDemo.samples8.row7column2\",\n                        column3: \"String\",\n                        column4: \"\",\n                        column5: \"\"\n                    }, {\n                        column1: \"autofocus\",\n                        column2: \"buttonDemo.samples8.row8column2\",\n                        column3: \"Boolean\",\n                        column4: \"\",\n                        column5: \"false\"\n                    }, {\n                        column1: \"native-type\",\n                        column2: \"buttonDemo.samples8.row9column2\",\n                        column3: \"String\",\n                        column4: \"button,submit,reset\",\n                        column5: \"button\"\n                    }]\n                }\n            }\n        },\n        notshowmeta: true\n    }, {\n        id: 'button9',\n        label: 'Methods',\n        template: '<method-table :data=\"tableData\"></method-table>',\n        parameter: {\n            data: function () {\n                return {\n                    tableData: [{\n                        column1: \"focus\",\n                        column2: \"inputDemo.samples16.row1column2\",\n                        column3: \"\"\n                    }]\n                }\n            }\n        },\n        notshowmeta: true\n    }]\n};\n\nmodule.exports = buttonDemo\n","'use strict';\nvar calendarDemo = {\n  path: '/calendar',\n  name: 'calendar',\n  head: {\n    label: 'calendarDemo.label',\n    description: 'calendarDemo.description'\n  },\n  samples: [{\n    id: 'calendar1',\n    label: 'calendarDemo.samples1.label',\n    description: 'calendarDemo.samples1.description',\n    template: '<div class=\"source\"><vue-row type=\"flex\" justify=\"center\" :gutter=\"20\"><vue-col :span=\"12\"><vue-calendar v-model=\"date\" @dayclick=\"clickHandle\" :events=\"vcevents\"></vue-calendar></vue-col><vue-col :span=\"12\"><vue-note plain title=\"Event List\" style=\"height:100%\"><div v-for=\"(event, index) in noteEvents\" style=\"width:100%\" :key=\"index\">Description: {{event.title}}<vue-divider></vue-divider></div></vue-note></vue-col></vue-row></div>',\n    parameter: {\n      data: function () {\n        var toDay = new Date;\n        return {\n          date: new Date(),\n          vcevents: [{\n            start: VueUtil.addDate(toDay, -5),\n            end: VueUtil.addDate(toDay, -3),\n            title: 'Event 1',\n          }, {\n            start: VueUtil.addDate(toDay, -1, 'week'),\n            end: VueUtil.addDate(toDay, -1),\n            title: 'Event 2'\n          }, {\n            start: VueUtil.addDate(toDay, 3),\n            end: VueUtil.addDate(toDay, 5),\n            title: 'Event 3'\n          }, {\n            start: VueUtil.addDate(toDay, 2),\n            end: VueUtil.addDate(toDay, 3, 'week'),\n            title: 'Event 4',\n          }, {\n            start: VueUtil.addDate(toDay, 1),\n            end: VueUtil.addDate(toDay, 1, 'week'),\n            title: 'Event 5'\n          }, {\n            start: toDay,\n            end: VueUtil.addDate(toDay, 11),\n            title: 'Event 6'\n          }],\n          noteEvents: []\n        }\n      },\n      methods: {\n        clickHandle: function (date, events) {\n          this.noteEvents = events;\n        }\n      }\n    },\n    code: '<vue-calendar v-model=\"date\" @dayclick=\"clickHandle\" :events=\"vcevents\"></vue-calendar>\\n' +\n      '<vue-note plain title=\"Event List\" style=\"height:100%\">\\n' +\n      '  <div v-for=\"(event, index) in noteEvents\" style=\"width:100%\" :key=\"index\">\\n' +\n      '    Description: {{event.title}}\\n' +\n      '    <vue-divider></vue-divider>\\n' +\n      '  </div>\\n' +\n      '</vue-note>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function(){\\n' +\n      '      var toDay = new Date;\\n' +\n      '      return {\\n' +\n      '        date: new Date(),\\n' +\n      '        vcevents: [{\\n' +\n      '          start: VueUtil.addDate(toDay, -5),\\n' +\n      '          end: VueUtil.addDate(toDay, -3),\\n' +\n      '          title: \"Event 1\",\\n' +\n      '        }, {\\n' +\n      '          start: VueUtil.addDate(toDay, -1, \"week\"),\\n' +\n      '          end: VueUtil.addDate(toDay, -1),\\n' +\n      '          title: \"Event 2\"\\n' +\n      '        }, {\\n' +\n      '          start: VueUtil.addDate(toDay, 3),\\n' +\n      '          end: VueUtil.addDate(toDay, 5),\\n' +\n      '          title: \"Event 3\"\\n' +\n      '        }, {\\n' +\n      '          start: VueUtil.addDate(toDay, 2),\\n' +\n      '          end: VueUtil.addDate(toDay, 3, \"week\"),\\n' +\n      '          title: \"Event 4\",\\n' +\n      '        }, {\\n' +\n      '          start: VueUtil.addDate(toDay, 1),\\n' +\n      '          end: VueUtil.addDate(toDay, 1, \"week\"),\\n' +\n      '          title: \"Event 5\"\\n' +\n      '        }, {\\n' +\n      '          start:toDay,\\n' +\n      '          end: VueUtil.addDate(toDay, 11),\\n' +\n      '          title: \"Event 6\"\\n' +\n      '        }],\\n' +\n      '        noteEvents: []\\n' +\n      '      }\\n' +\n      '    },\\n' +\n      '    methods: {\\n' +\n      '      clickHandle: function(date, events) {\\n' +\n      '        this.noteEvents = events;\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'calendar7',\n    label: 'calendarDemo.samples7.label',\n    description: 'calendarDemo.samples7.description',\n    template: '<div class=\"source\"><vue-row type=\"flex\" justify=\"center\" :gutter=\"20\"><vue-col :span=\"12\"><vue-calendar v-model=\"dates\" type=\"dates\" fix-month>'\n    + '</vue-calendar></vue-col></div>',\n    parameter: {\n      data: function () {\n        return {\n          dates: [new Date(2019, 1, 2), new Date(2019, 1, 6), new Date(2019, 1, 21)],\n        }\n      },\n      methods: {\n      }\n    },\n    code: '<vue-calendar v-model=\"dates\" type=\"dates\" fix-month></vue-calendar>\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function(){\\n' +\n      '      return {\\n' +\n      '        date: dates: [new Date(2019, 1, 2), new Date(2019, 1, 6), new Date(2019, 1, 21)],\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'calendar6',\n    label: 'calendarDemo.samples4.label',\n    description: 'calendarDemo.samples4.description',\n    template: '<div class=\"source\"><vue-row type=\"flex\" justify=\"center\"><vue-calendar full :events=\"vcevents\" :date-class=\"dateClass\" :week-class=\"weekClass\" :week-label=\"weekLabel\" :event-limit=\"3\" @eventclick=\"eventClick\" @dayclick=\"dayClick\" @moreclick=\"moreClick\"></vue-calendar></vue-row></div>',\n    parameter: {\n      data: function () {\n        var toDay = new Date;\n        return {\n          vcevents: [{\n            start: VueUtil.addDate(toDay, -5),\n            end: VueUtil.addDate(toDay, -3),\n            title: 'Event 1 (This is level low event)',\n            customClass: 'level-low'\n          }, {\n            start: VueUtil.addDate(toDay, -1, 'week'),\n            end: VueUtil.addDate(toDay, -1),\n            title: 'Event 2'\n          }, {\n            start: VueUtil.addDate(toDay, 3),\n            end: VueUtil.addDate(toDay, 5),\n            title: 'Event 3'\n          }, {\n            start: VueUtil.addDate(toDay, 2),\n            end: VueUtil.addDate(toDay, 3, 'week'),\n            title: 'Event 4 (This is level high event)',\n            customClass: 'level-high'\n          }, {\n            start: VueUtil.addDate(toDay, 1),\n            end: VueUtil.addDate(toDay, 1, 'week'),\n            title: 'Event 5'\n          }, {\n            start: toDay,\n            end: VueUtil.addDate(toDay, 11),\n            title: 'Event 6'\n          }],\n          dateClass: [{\n            date: VueUtil.addDate(toDay, 5),\n            customClass: 'day-on'\n          }],\n          weekClass: [{\n            week: 0,\n            customClass: 'day-off'\n          }, {\n            week: 6,\n            customClass: 'day-off'\n          }],\n          weekLabel: {\n            \"sun\": \"星期日\",\n            'mon': 'vue.datepicker.weeks.mon',\n            'tue': '星期二',\n            'wed': '星期三',\n            'thu': '星期四',\n            'fri': '星期五',\n            'sat': '星期六'\n          }\n        }\n      },\n      methods: {\n        eventClick: function (event, jsEvents) {\n          this.$notify({ title: \"Event Click\" });\n          this.$notify({ title: \"Event: \" + event.title });\n          console.log(jsEvents);\n        },\n        moreClick: function (date, events, jsEvents) {\n          this.$notify({ title: \"More Click\" });\n          this.$notify({ title: \"Date: \" + VueUtil.formatDate(date) });\n          this.$notify({ title: \"Event: [\" + events.map(function (event) { return event.title }).join(\", \") + \"]\" });\n          console.log(jsEvents);\n        },\n        dayClick: function (date, events, jsEvents) {\n          this.$notify({ title: \"Day Click\" });\n          this.$notify({ title: \"Date: \" + VueUtil.formatDate(date) });\n          this.$notify({ title: \"Event: [\" + events.map(function (event) { return event.title }).join(\", \") + \"]\" });\n          console.log(jsEvents);\n        }\n      }\n    },\n    code: '<vue-calendar full :events=\"vcevents\" :event-limit=\"3\" :date-class=\"dateClass\" :week-class=\"weekClass\" :week-label=\"weekLabel\" @eventclick=\"eventClick\" @dayclick=\"dayClick\" @moreclick=\"moreClick\">\\n' +\n      '</vue-calendar>\\n\\n' +\n      '<style>\\n' +\n      '  .level-high {\\n' +\n      '    background-color: #fbdddd;\\n' +\n      '  }\\n' +\n      '  .level-low {\\n' +\n      '    background-color: #e1f3d8;\\n' +\n      '  }\\n' +\n      '  .day-off {\\n' +\n      '    background-color: #fdfdfd;\\n' +\n      '  }\\n' +\n      '  .day-on {\\n' +\n      '    background-color: #dfdfdf;\\n' +\n      '  }\\n' +\n      '</style>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function(){\\n' +\n      '      var toDay = new Date;\\n' +\n      '      return {\\n' +\n      '        vcevents: [{\\n' +\n      '          start: VueUtil.addDate(toDay, -5),\\n' +\n      '          end: VueUtil.addDate(toDay, -3),\\n' +\n      '          title: \"Event 1 (This is level low event)\",\\n' +\n      '          customClass: \"level-low\"\\n' +\n      '        }, {\\n' +\n      '          start: VueUtil.addDate(toDay, -1, \"week\"),\\n' +\n      '          end: VueUtil.addDate(toDay, -1),\\n' +\n      '          title: \"Event 2\"\\n' +\n      '        }, {\\n' +\n      '          start: VueUtil.addDate(toDay, 3),\\n' +\n      '          end: VueUtil.addDate(toDay, 5),\\n' +\n      '          title: \"Event 3\"\\n' +\n      '        }, {\\n' +\n      '          start: VueUtil.addDate(toDay, 2),\\n' +\n      '          end: VueUtil.addDate(toDay, 3, \"week\"),\\n' +\n      '          title: \"Event 4 (This is level high event)\",\\n' +\n      '          customClass: \"level-high\"\\n' +\n      '        }, {\\n' +\n      '          start: VueUtil.addDate(toDay, 1),\\n' +\n      '          end: VueUtil.addDate(toDay, 1, \"week\"),\\n' +\n      '          title: \"Event 5\"\\n' +\n      '        }, {\\n' +\n      '          start:toDay,\\n' +\n      '          end: VueUtil.addDate(toDay, 11),\\n' +\n      '          title: \"Event 6\"\\n' +\n      '        }],\\n' +\n      '        dateClass: [{\\n' +\n      '          date: VueUtil.addDate(toDay, 5),\\n' +\n      '          customClass: \"day-on\"\\n' +\n      '        }],\\n' +\n      '        weekClass: [{\\n' +\n      '          week: 0,\\n' +\n      '          customClass: \"day-off\"\\n' +\n      '        }, {\\n' +\n      '          week: 6,\\n' +\n      '          customClass: \"day-off\"\\n' +\n      '        }],\\n' +\n      '        weekLabel: {\\n' +\n      '          sun: \"星期日\",\\n' +\n      '          mon: \"vue.datepicker.weeks.mon\",\\n' +\n      '          tue: \"星期二\",\\n' +\n      '          wed: \"星期三\",\\n' +\n      '          thu: \"星期四\",\\n' +\n      '          fri: \"星期五\",\\n' +\n      '          sat: \"星期六\" \\n' +\n      '        }\\n' +\n      '      }\\n' +\n      '    },\\n' +\n      '    methods: {\\n' +\n      '      eventClick: function(event, jsEvents) {\\n' +\n      '        this.$notify({title: \"Event Click\"});\\n' +\n      '        this.$notify({title: \"Event: \" + event.title});\\n' +\n      '        console.log(jsEvents);\\n' +\n      '      },\\n' +\n      '      moreClick: function(date, events, jsEvents) {\\n' +\n      '        this.$notify({title: \"More Click\"});\\n' +\n      '        this.$notify({title: \"Date: \" + VueUtil.formatDate(date)});\\n' +\n      '        this.$notify({title: \"Event: [\" + events.map(function(event){return event.title}).join(\", \") + \"]\"});\\n' +\n      '        console.log(jsEvents);\\n' +\n      '      },\\n' +\n      '      dayClick: function(date, events, jsEvents) {\\n' +\n      '        this.$notify({title: \"Day Click\"});\\n' +\n      '        this.$notify({title: \"Date: \" + VueUtil.formatDate(date)});\\n' +\n      '        this.$notify({title: \"Event: [\" + events.map(function(event){return event.title}).join(\", \") + \"]\"});\\n' +\n      '        console.log(jsEvents);\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'calendar2',\n    label: ' Attributes',\n    template: '<attr-table :data=\"tableData\"></attr-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"full\",\n            column2: \"calendarDemo.samples2.row4column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"events\",\n            column2: \"calendarDemo.samples2.row1column2\",\n            column3: \"Array\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"event-limit\",\n            column2: \"calendarDemo.samples2.row2column2\",\n            column3: \"Number\",\n            column4: \"\",\n            column5: \"2\"\n          }, {\n            column1: \"show-more\",\n            column2: \"calendarDemo.samples2.row3column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"true\"\n          }, {\n            column1: \"date-class\",\n            column2: \"calendarDemo.samples2.row5column2\",\n            column3: \"Array\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"week-class\",\n            column2: \"calendarDemo.samples2.row6column2\",\n            column3: \"Array\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"week-label\",\n            column2: \"calendarDemo.samples2.row7column2\",\n            column3: \"Object\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"fix-month\",\n            column2: \"calendarDemo.samples2.row8column2\",\n            column3: \"boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"type\",\n            column2: \"calendarDemo.samples2.row9column2\",\n            column3: \"string\",\n            column4: \"date/dates/month/week\",\n            column5: \"date\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'calendar3',\n    label: 'Events',\n    template: '<event-table :data=\"tableData\"></event-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"dayclick\",\n            column2: \"calendarDemo.samples3.row1column2\",\n            column3: \"(date: Date, events: Array, jsEvent: $event)\"\n          }, {\n            column1: \"eventclick\",\n            column2: \"calendarDemo.samples3.row2column2\",\n            column3: \"(event: Object, jsEvent: $event)\"\n          }, {\n            column1: \"moreclick\",\n            column2: \"calendarDemo.samples3.row3column2\",\n            column3: \"(date: Date, events: Array, jsEvent: $event)\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'calendar4',\n    label: 'Slots',\n    template: '<slot-table :data=\"tableData\"></slot-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"headerLeft\",\n            column2: \"calendarDemo.samples4.row1column2\"\n          }, {\n            column1: \"headerRight\",\n            column2: \"calendarDemo.samples4.row2column2\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'calendar5',\n    label: 'Methods',\n    template: '<method-table :data=\"tableData\"></method-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"changeToNow\",\n            column2: \"calendarDemo.samples5.row1column2\",\n            column3: \"\"\n          }, {\n            column1: \"toDate\",\n            column2: \"calendarDemo.samples5.row2column2\",\n            column3: \"\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }]\n};\n\nmodule.exports = calendarDemo;\n","'use strict';\nvar cardDemo = {\n    path: '/card',\n    name: 'card',\n    head: {\n        label: 'cardDemo.label',\n        description: 'cardDemo.description'\n    },\n    samples: [{\n        id: 'card1',\n        label: 'cardDemo.samples1.label',\n        description: 'cardDemo.samples1.description',\n        template: '<div class=\"source\"><vue-card><div slot=\"header\"><span style=\"line-height: 36px;\">Card name</span><vue-button style=\"float: right;\" type=\"primary\">Operation button</vue-button></div><div v-for=\"o in 4\" :key=\"o\">{{\"List item  \" + o }}</div></vue-card></div>',\n        code: '<vue-card>\\n' +\n            '  <div slot=\"header\" >\\n' +\n            '    <span style=\"line-height: 36px;\">Card name</span>\\n' +\n            '    <vue-button style=\"float: right;\" type=\"primary\">Operation button</vue-button>\\n' +\n            '  </div>\\n' +\n            '  <div v-for=\"o in 4\" :key=\"o\">\\n' +\n            '    {{\"List item \" + o }}\\n' +\n            '  </div>\\n' +\n            '</vue-card>'\n    }, {\n        id: 'card2',\n        label: 'cardDemo.samples2.label',\n        description: 'cardDemo.samples2.description',\n        template: '<div class=\"source\"><vue-card :body-style=\"{padding: \\'18px\\'}\"><div v-for=\"o in 4\" :key=\"o\" style=\"padding: 18px 0;\">{{\"List item  \" + o }}</div></vue-card></div>',\n        code: '<vue-card :body-style=\"{padding: \\'18px\\'}\">\\n' +\n            '  <div v-for=\"o in 4\" :key=\"o\" style=\"padding: 18px 0;\">\\n' +\n            '    {{\"List item \" + o }}\\n' +\n            '  </div>\\n' +\n            '</vue-card>'\n    }, {\n        id: 'card4',\n        label: 'cardDemo.samples4.label',\n        description: 'cardDemo.samples4.description',\n        template: '<div class=\"source\"><vue-row :gutter=\"20\"><vue-col :span=\"8\"><vue-card  shadow=\"always\">always</vue-card></vue-col><vue-col :span=\"8\"><vue-card>hover</vue-card></vue-col><vue-col :span=\"8\"><vue-card shadow=\"never\">never</vue-card></vue-col></vue-row></div>',\n        code: '<vue-card shadow=\"always\">always</vue-card>\\n' +\n            '<vue-card>hover</vue-card>\\n' +\n            '<vue-card shadow=\"never\">never</vue-card>'\n    }, {\n        id: 'card3',\n        label: 'Attributes',\n        template: '<attr-table :data=\"tableData\"></attr-table>',\n        parameter: {\n            data: function () {\n                return {\n                    tableData: [{\n                        column1: \"header\",\n                        column2: \"cardDemo.samples3.row1column2\",\n                        column3: \"String\",\n                        column4: \"\",\n                        column5: \"\"\n                    }, {\n                        column1: \"body-style\",\n                        column2: \"cardDemo.samples3.row2column2\",\n                        column3: \"Object\",\n                        column4: \"\",\n                        column5: \"{padding: '20px'}\"\n                    }, {\n                        column1: \"shadow\",\n                        column2: \"cardDemo.samples3.row3column2\",\n                        column3: \"String\",\n                        column4: \"always, never\",\n                        column5: \"hover\"\n                    }]\n                }\n            }\n        },\n        notshowmeta: true\n    }]\n};\nmodule.exports = cardDemo;\n","'use strict';\nvar carouselDemo = {\n  path: '/carousel',\n  name: 'carousel',\n  head: {\n    label: 'carouselDemo.label',\n    description: 'carouselDemo.description'\n  },\n  samples: [{\n    id: 'carousel1',\n    label: 'carouselDemo.samples1.label',\n    description: 'carouselDemo.samples1.description',\n    template: '<div class=\"source\"><vue-row class=\"margin-bottom20\" type=\"flex\" justify=\"center\"><vue-col :span=\"6\"><span class=\"demonstration\" style=\"position: relative;top: 60px;\">Hover Indicator</span></vue-col><vue-col :span=\"16\"><vue-carousel height=\"150px\"><vue-carousel-item v-for=\"item in 4\" :key=\"item\"><h3>{{ item }}</h3></vue-carousel-item></vue-carousel></vue-col></vue-row><vue-row type=\"flex\" justify=\"center\"><vue-col :span=\"6\"><span class=\"demonstration\" style=\"position: relative;top: 60px;\">Click Indicator</span></vue-col><vue-col :span=\"16\"><vue-carousel type=\"card\" trigger=\"click\" height=\"150px\"><vue-carousel-item v-for=\"item in 4\" :key=\"item\"><h3>{{ item }}</h3></vue-carousel-item></vue-carousel></vue-col></vue-row></div>',\n    code: '<span class=\"demonstration\">Hover Indicator</span>\\n' +\n      '<vue-carousel height=\"150px\">\\n' +\n      '  <vue-carousel-item v-for=\"item in 4\">\\n' +\n      '    <h3>{{ item }}</h3>\\n' +\n      '  </vue-carousel-item>\\n' +\n      '</vue-carousel>\\n' +\n      '<span class=\"demonstration\">Click Indicator</span>\\n' +\n      '<vue-carousel type=\"card\" trigger=\"click\" height=\"150px\">\\n' +\n      '  <vue-carousel-item v-for=\"item in 4\">\\n' +\n      '    <h3>{{ item }}</h3>\\n' +\n      '  </vue-carousel-item>\\n' +\n      '</vue-carousel>'\n  }, {\n    id: 'carousel2',\n    label: 'carouselDemo.samples2.label',\n    description: 'carouselDemo.samples2.description',\n    template: '<div class=\"source\"><vue-carousel indicator-position=\"outside\"><vue-carousel-item v-for=\"item in 4\" :key=\"item\"><h3>{{ item }}</h3></vue-carousel-item></vue-carousel></div>',\n    code: '<vue-carousel indicator-position=\"outside\">\\n' +\n      '  <vue-carousel-item v-for=\"item in 4\">\\n' +\n      '    <h3>{{ item }}</h3>\\n' +\n      '  </vue-carousel-item>\\n' +\n      '</vue-carousel>'\n  }, {\n    id: 'carousel3',\n    label: 'carouselDemo.samples3.label',\n    description: 'carouselDemo.samples3.description',\n    template: '<div class=\"source\"><vue-carousel arrow=\"always\"><vue-carousel-item v-for=\"item in 4\" :key=\"item\"><h3>{{ item }}</h3></vue-carousel-item></vue-carousel></div>',\n    code: '<vue-carousel arrow=\"always\">\\n' +\n      '  <vue-carousel-item v-for=\"item in 4\">\\n' +\n      '    <h3>{{ item }}</h3>\\n' +\n      '  </vue-carousel-item>\\n' +\n      '</vue-carousel>'\n  }, {\n    id: 'carousel4',\n    label: 'Carousel Attributes',\n    template: '<attr-table :data=\"tableData\"></attr-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"height\",\n            column2: \"carouselDemo.samples4.row1column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"initial-index\",\n            column2: \"carouselDemo.samples4.row2column2\",\n            column3: \"Number\",\n            column4: \"\",\n            column5: \"0\"\n          }, {\n            column1: \"trigger\",\n            column2: \"carouselDemo.samples4.row3column2\",\n            column3: \"String\",\n            column4: \"click\",\n            column5: \"\"\n          }, {\n            column1: \"autoplay\",\n            column2: \"carouselDemo.samples4.row4column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"true\"\n          }, {\n            column1: \"interval\",\n            column2: \"carouselDemo.samples4.row5column2\",\n            column3: \"Number\",\n            column4: \"\",\n            column5: \"3000\"\n          }, {\n            column1: \"indicator-position\",\n            column2: \"carouselDemo.samples4.row6column2\",\n            column3: \"String\",\n            column4: \"outside, none\",\n            column5: \"\"\n          }, {\n            column1: \"arrow\",\n            column2: \"carouselDemo.samples4.row7column2\",\n            column3: \"String\",\n            column4: \"always, hover, never\",\n            column5: \"hover\"\n          }, {\n            column1: \"type\",\n            column2: \"carouselDemo.samples4.row8column2\",\n            column3: \"String\",\n            column4: \"card\",\n            column5: \"\"\n          }, {\n            column1: \"hover-stop\",\n            column2: \"carouselDemo.samples4.row9column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"true\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'carousel5',\n    label: 'Carousel Events',\n    template: '<event-table :data=\"tableData\"></event-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"change\",\n            column2: \"carouselDemo.samples5.row1column2\",\n            column3: \"carouselDemo.samples5.row1column3\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'carousel6',\n    label: 'Carousel Methods',\n    template: '<method-table :data=\"tableData\"></method-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"setActiveItem\",\n            column2: \"carouselDemo.samples6.row1column2\",\n            column3: \"carouselDemo.samples6.row1column3\"\n          }, {\n            column1: \"prev\",\n            column2: \"carouselDemo.samples6.row2column2\",\n            column3: \"\"\n          }, {\n            column1: \"next\",\n            column2: \"carouselDemo.samples6.row3column2\",\n            column3: \"\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'carousel7',\n    label: 'Carousel Item Attributes',\n    template: '<attr-table :data=\"tableData\"></attr-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"name\",\n            column2: \"carouselDemo.samples7.row1column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }]\n};\nmodule.exports = carouselDemo;\n","'use strict';\nvar guideOpt = {\n  value: 'guide',\n  label: 'Guide',\n  children: [{\n    value: 'disciplines',\n    label: 'Disciplines',\n    children: [{\n      value: 'consistency',\n      label: 'Consistency'\n    }, {\n      value: 'feedback',\n      label: 'Feedback'\n    }, {\n      value: 'efficiency',\n      label: 'Efficiency'\n    }, {\n      value: 'controllability',\n      label: 'Controllability'\n    }]\n  }, {\n    value: 'navigation',\n    label: 'Navigation',\n    children: [{\n      value: 'side nav',\n      label: 'Side Navigation'\n    }, {\n      value: 'top nav',\n      label: 'Top Navigation'\n    }]\n  }]\n};\nvar componentOpt = {\n  value: 'component',\n  label: 'Component',\n  children: [{\n    value: 'basic',\n    label: 'Basic',\n    children: [{\n      value: 'layout',\n      label: 'Layout'\n    }, {\n      value: 'icon',\n      label: 'Icon'\n    }, {\n      value: 'button',\n      label: 'Button'\n    }]\n  }, {\n    value: 'form',\n    label: 'Form',\n    children: [{\n      value: 'radio',\n      label: 'Radio'\n    }, {\n      value: 'checkbox',\n      label: 'Checkbox'\n    }, {\n      value: 'input',\n      label: 'Input'\n    }, {\n      value: 'select',\n      label: 'Select'\n    }, {\n      value: 'cascader',\n      label: 'Cascader'\n    }, {\n      value: 'switch',\n      label: 'Switch'\n    }, {\n      value: 'slider',\n      label: 'Slider'\n    }, {\n      value: 'time-picker',\n      label: 'TimePicker'\n    }, {\n      value: 'date-picker',\n      label: 'DatePicker'\n    }, {\n      value: 'datetime-picker',\n      label: 'DateTimePicker'\n    }, {\n      value: 'upload',\n      label: 'Upload'\n    }, {\n      value: 'rate',\n      label: 'Rate'\n    }, {\n      value: 'form',\n      label: 'Form'\n    }]\n  }, {\n    value: 'data',\n    label: 'Data',\n    children: [{\n      value: 'table',\n      label: 'Table'\n    }, {\n      value: 'tag',\n      label: 'Tag'\n    }, {\n      value: 'progress',\n      label: 'Progress'\n    }, {\n      value: 'tree',\n      label: 'Tree'\n    }, {\n      value: 'pagination',\n      label: 'Pagination'\n    }, {\n      value: 'badge',\n      label: 'Badge'\n    }]\n  }, {\n    value: 'notice',\n    label: 'Notice',\n    children: [{\n      value: 'alert',\n      label: 'Alert'\n    }, {\n      value: 'loading',\n      label: 'Loading'\n    }, {\n      value: 'message-box',\n      label: 'MessageBox'\n    }, {\n      value: 'notification',\n      label: 'Notification'\n    }]\n  }, {\n    value: 'navigation',\n    label: 'Navigation',\n    children: [{\n      value: 'menu',\n      label: 'NavMenu'\n    }, {\n      value: 'tabs',\n      label: 'Tabs'\n    }, {\n      value: 'breadcrumb',\n      label: 'Breadcrumb'\n    }, {\n      value: 'dropdown',\n      label: 'Dropdown'\n    }, {\n      value: 'steps',\n      label: 'Steps'\n    }]\n  }, {\n    value: 'others',\n    label: 'Others',\n    children: [{\n      value: 'dialog',\n      label: 'Dialog'\n    }, {\n      value: 'tooltip',\n      label: 'Tooltip'\n    }, {\n      value: 'popover',\n      label: 'Popover'\n    }, {\n      value: 'card',\n      label: 'Card'\n    }, {\n      value: 'carousel',\n      label: 'Carousel'\n    }, {\n      value: 'collapse',\n      label: 'Collapse'\n    }]\n  }]\n};\nvar resourceOpt = {\n  value: 'resource',\n  label: 'Resource',\n  children: [{\n    value: 'axure',\n    label: 'Axure Components'\n  }, {\n    value: 'sketch',\n    label: 'Sketch Templates'\n  }, {\n    value: 'docs',\n    label: 'Design Documentation'\n  }]\n};\nvar options = [];\nvar optionsDis = [];\noptions.push(guideOpt);\noptions.push(componentOpt);\noptions.push(resourceOpt);\noptionsDis.push(VueUtil.merge({}, guideOpt, { disabled: true }));\noptionsDis.push(componentOpt);\noptionsDis.push(resourceOpt);\nvar optionsCode1 = '        options: [{\\n' +\n  '          value: \"guide\",\\n' +\n  '          label: \"Guide\",\\n';\nvar optionsCode2 = '          children: [{\\n' +\n  '            value: \"disciplines\",\\n' +\n  '            label: \"Disciplines\",\\n' +\n  '            children: [{\\n' +\n  '              value: \"consistency\",\\n' +\n  '              label: \"Consistency\"\\n' +\n  '            }, {\\n' +\n  '              value: \"feedback\",\\n' +\n  '              label: \"Feedback\"\\n' +\n  '            }, {\\n' +\n  '              value: \"efficiency\",\\n' +\n  '              label: \"Efficiency\"\\n' +\n  '            }, {\\n' +\n  '              value: \"controllability\",\\n' +\n  '              label: \"Controllability\"\\n' +\n  '            }]\\n' +\n  '          }, {\\n' +\n  '            value: \"navigation\",\\n' +\n  '            label: \"Navigation\",\\n' +\n  '            children: [{\\n' +\n  '              value: \"side nav\",\\n' +\n  '              label: \"Side Navigation\"\\n' +\n  '            }, {\\n' +\n  '              value: \"top nav\",\\n' +\n  '              label: \"Top Navigation\"\\n' +\n  '            }]\\n' +\n  '          }]\\n' +\n  '        }, {\\n' +\n  '          value: \"component\",\\n' +\n  '          label: \"Component\",\\n' +\n  '          children: [{\\n' +\n  '            value: \"basic\",\\n' +\n  '            label: \"Basic\",\\n' +\n  '            children: [{\\n' +\n  '              value: \"layout\",\\n' +\n  '              label: \"Layout\"\\n' +\n  '            }, {\\n' +\n  '              value: \"icon\",\\n' +\n  '              label: \"Icon\"\\n' +\n  '            }, {\\n' +\n  '              value: \"button\",\\n' +\n  '              label: \"Button\"\\n' +\n  '            }]\\n' +\n  '          }, {\\n' +\n  '            value: \"form\",\\n' +\n  '            label: \"Form\",\\n' +\n  '            children: [{\\n' +\n  '              value: \"radio\",\\n' +\n  '              label: \"Radio\"\\n' +\n  '            }, {\\n' +\n  '              value: \"checkbox\",\\n' +\n  '              label: \"Checkbox\"\\n' +\n  '            }, {\\n' +\n  '              value: \"input\",\\n' +\n  '              label: \"Input\"\\n' +\n  '            }, {\\n' +\n  '              value: \"select\",\\n' +\n  '              label: \"Select\"\\n' +\n  '            }, {\\n' +\n  '              value: \"cascader\",\\n' +\n  '              label: \"Cascader\"\\n' +\n  '            }, {\\n' +\n  '              value: \"switch\",\\n' +\n  '              label: \"Switch\"\\n' +\n  '            }, {\\n' +\n  '              value: \"slider\",\\n' +\n  '              label: \"Slider\"\\n' +\n  '            }, {\\n' +\n  '              value: \"time-picker\",\\n' +\n  '              label: \"TimePicker\"\\n' +\n  '            }, {\\n' +\n  '              value: \"date-picker\",\\n' +\n  '              label: \"DatePicker\"\\n' +\n  '            }, {\\n' +\n  '              value: \"datetime-picker\",\\n' +\n  '              label: \"DateTimePicker\"\\n' +\n  '            }, {\\n' +\n  '              value: \"upload\",\\n' +\n  '              label: \"Upload\"\\n' +\n  '            }, {\\n' +\n  '              value: \"rate\",\\n' +\n  '              label: \"Rate\"\\n' +\n  '            }, {\\n' +\n  '              value: \"form\",\\n' +\n  '              label: \"Form\"\\n' +\n  '            }]\\n' +\n  '          }, {\\n' +\n  '            value: \"data\",\\n' +\n  '            label: \"Data\",\\n' +\n  '            children: [{\\n' +\n  '              value: \"table\",\\n' +\n  '              label: \"Table\"\\n' +\n  '            }, {\\n' +\n  '              value: \"tag\",\\n' +\n  '              label: \"Tag\"\\n' +\n  '            }, {\\n' +\n  '              value: \"progress\",\\n' +\n  '              label: \"Progress\"\\n' +\n  '            }, {\\n' +\n  '              value: \"tree\",\\n' +\n  '              label: \"Tree\"\\n' +\n  '            }, {\\n' +\n  '              value: \"pagination\",\\n' +\n  '              label: \"Pagination\"\\n' +\n  '            }, {\\n' +\n  '              value: \"badge\",\\n' +\n  '              label: \"Badge\"\\n' +\n  '            }]\\n' +\n  '          }, {\\n' +\n  '            value: \"notice\",\\n' +\n  '            label: \"Notice\",\\n' +\n  '            children: [{\\n' +\n  '              value: \"alert\",\\n' +\n  '              label: \"Alert\"\\n' +\n  '            }, {\\n' +\n  '              value: \"loading\",\\n' +\n  '              label: \"Loading\"\\n' +\n  '            }, {\\n' +\n  '              value: \"message-box\",\\n' +\n  '              label: \"MessageBox\"\\n' +\n  '            }, {\\n' +\n  '              value: \"notification\",\\n' +\n  '              label: \"Notification\"\\n' +\n  '            }]\\n' +\n  '          }, {\\n' +\n  '            value: \"navigation\",\\n' +\n  '            label: \"Navigation\",\\n' +\n  '            children: [{\\n' +\n  '              value: \"menu\",\\n' +\n  '              label: \"NavMenu\"\\n' +\n  '            }, {\\n' +\n  '              value: \"tabs\",\\n' +\n  '              label: \"Tabs\"\\n' +\n  '            }, {\\n' +\n  '              value: \"breadcrumb\",\\n' +\n  '              label: \"Breadcrumb\"\\n' +\n  '            }, {\\n' +\n  '              value: \"dropdown\",\\n' +\n  '              label: \"Dropdown\"\\n' +\n  '            }, {\\n' +\n  '              value: \"steps\",\\n' +\n  '              label: \"Steps\"\\n' +\n  '            }]\\n' +\n  '          }, {\\n' +\n  '            value: \"others\",\\n' +\n  '            label: \"Others\",\\n' +\n  '            children: [{\\n' +\n  '              value: \"dialog\",\\n' +\n  '              label: \"Dialog\"\\n' +\n  '            }, {\\n' +\n  '              value: \"tooltip\",\\n' +\n  '              label: \"Tooltip\"\\n' +\n  '            }, {\\n' +\n  '              value: \"popover\",\\n' +\n  '              label: \"Popover\"\\n' +\n  '            }, {\\n' +\n  '              value: \"card\",\\n' +\n  '              label: \"Card\"\\n' +\n  '            }, {\\n' +\n  '              value: \"carousel\",\\n' +\n  '              label: \"Carousel\"\\n' +\n  '            }, {\\n' +\n  '              value: \"collapse\",\\n' +\n  '              label: \"Collapse\"\\n' +\n  '            }]\\n' +\n  '          }]\\n' +\n  '        }, {\\n' +\n  '          value: \"resource\",\\n' +\n  '          label: \"Resource\",\\n' +\n  '          children: [{\\n' +\n  '            value: \"axure\",\\n' +\n  '            label: \"Axure Components\"\\n' +\n  '          }, {\\n' +\n  '            value: \"sketch\",\\n' +\n  '            label: \"Sketch Templates\"\\n' +\n  '          }, {\\n' +\n  '            value: \"docs\",\\n' +\n  '            label: \"Design Documentation\"\\n' +\n  '          }]\\n' +\n  '        }],\\n'\nvar optionsDisCode = optionsCode1 + '          disabled: true,\\n' + optionsCode2;\nvar optionsCode = optionsCode1 + optionsCode2\nvar cascaderDemo = {\n  path: '/cascader',\n  name: 'cascader',\n  head: {\n    label: 'cascaderDemo.label',\n    description: 'cascaderDemo.description'\n  },\n  samples: [{\n    id: 'cascader1',\n    label: 'cascaderDemo.samples1.label',\n    description: 'cascaderDemo.samples1.description',\n    template: '<div class=\"source\"><vue-row class=\"margin-bottom20\" type=\"flex\" justify=\"center\"><vue-col :span=\"6\"><span class=\"demonstration\">{{$t(\\'cascaderDemo.samples1.clickLabel\\')}}</span></vue-col><vue-col :span=\"16\"><vue-cascader :options=\"options\" v-model=\"selectedOptions1\" @change=\"handleChange\"></vue-cascader></vue-col></vue-row><vue-row type=\"flex\" justify=\"center\"><vue-col :span=\"6\"><span class=\"demonstration\">{{$t(\\'cascaderDemo.samples1.hoverLabel\\')}}</span></vue-col><vue-col :span=\"16\"><vue-cascader expand-trigger=\"hover\" :options=\"options\" v-model=\"selectedOptions2\" @change=\"handleChange\"></vue-cascader></vue-col></vue-row></div>',\n    parameter: {\n      data: function () {\n        return {\n          options: options,\n          selectedOptions1: [],\n          selectedOptions2: []\n        };\n      },\n      methods: {\n        handleChange: function (value) {\n          this.$notify({\n            title: value.toString()\n          });\n        }\n      }\n    },\n    code: '<span class=\"demonstration\">{{$t(\\'cascaderDemo.samples1.clickLabel\\')}}</span>\\n' +\n      '<vue-cascader :options=\"options\" v-model=\"selectedOptions1\" @change=\"handleChange\"></vue-cascader>\\n' +\n      '<span class=\"demonstration\">{{$t(\\'cascaderDemo.samples1.hoverLabel\\')}}</span>\\n' +\n      '<vue-cascader expand-trigger=\"hover\" :options=\"options\" v-model=\"selectedOptions2\" @change=\"handleChange\"></vue-cascader>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function(){\\n' +\n      '      return {\\n' + optionsCode +\n      '        selectedOptions1: [],\\n' +\n      '        selectedOptions2: []\\n' +\n      '      }\\n' +\n      '    },\\n' +\n      '    methods: {\\n' +\n      '      handleChange: function(value) {\\n' +\n      '        this.$notify({title: value.toString()});\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'cascader2',\n    label: 'cascaderDemo.samples2.label',\n    description: 'cascaderDemo.samples2.description',\n    template: '<div class=\"source\"><vue-cascader :options=\"options\" v-model=\"selectedOptions1\"></vue-cascader></div>',\n    parameter: {\n      data: function () {\n        return {\n          options: optionsDis,\n          selectedOptions1: []\n        };\n      }\n    },\n    code: '<vue-cascader :options=\"options\" v-model=\"selectedOptions1\"></vue-cascader>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function(){\\n' +\n      '      return {\\n' + optionsDisCode +\n      '        selectedOptions1: []\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'cascader3',\n    label: 'cascaderDemo.samples3.label',\n    description: 'cascaderDemo.samples3.description',\n    template: '<div class=\"source\"><vue-cascader :options=\"options\" :show-all-levels=\"false\" v-model=\"selectedOptions1\"></vue-cascader></div>',\n    parameter: {\n      data: function () {\n        return {\n          options: options,\n          selectedOptions1: []\n        };\n      }\n    },\n    code: '<vue-cascader :options=\"options\" :show-all-levels=\"false\" v-model=\"selectedOptions1\"></vue-cascader>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function(){\\n' +\n      '      return {\\n' + optionsCode +\n      '        selectedOptions1: []\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'cascader4',\n    label: 'cascaderDemo.samples4.label',\n    description: 'cascaderDemo.samples4.description',\n    template: '<div class=\"source\"><vue-cascader :options=\"options\" v-model=\"selectedOptions1\"></vue-cascader></div>',\n    parameter: {\n      data: function () {\n        return {\n          options: options,\n          selectedOptions1: [\"component\", \"data\", \"tag\"]\n        };\n      }\n    },\n    code: '<vue-cascader :options=\"options\" v-model=\"selectedOptions1\"></vue-cascader>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function(){\\n' +\n      '      return {\\n' + optionsCode +\n      '        selectedOptions1: [\"component\", \"data\", \"tag\"]\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'cascader5',\n    label: 'cascaderDemo.samples5.label',\n    description: 'cascaderDemo.samples5.description',\n    template: '<div class=\"source\"><vue-cascader :options=\"options\" v-model=\"selectedOptions1\" change-on-select></vue-cascader></div>',\n    parameter: {\n      data: function () {\n        return {\n          options: options,\n          selectedOptions1: []\n        };\n      }\n    },\n    code: '<vue-cascader :options=\"options\" v-model=\"selectedOptions1\" change-on-select></vue-cascader>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function(){\\n' +\n      '      return {\\n' + optionsCode +\n      '        selectedOptions1: []\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'cascader6',\n    label: 'cascaderDemo.samples6.label',\n    description: 'cascaderDemo.samples6.description',\n    template: '<div class=\"source\"><vue-cascader clearable :options=\"options\" v-model=\"selectedOptions1\" @active-item-change=\"handleItemChange\" :props=\"props\"></vue-cascader></div>',\n    parameter: {\n      data: function () {\n        return {\n          options: [{\n            label: 'California',\n            cities: []\n          }, {\n            label: 'Florida',\n            cities: []\n          }],\n          props: {\n            value: 'label',\n            children: 'cities'\n          },\n          selectedOptions1: []\n        };\n      },\n      methods: {\n        handleItemChange: function (val) {\n          var self = this;\n          this.$notify({\n            title: 'active item: ' +\n              val\n          });\n          setTimeout(function () {\n            if (val.indexOf('California') > -1 && !self.options[0].cities.length) {\n              self.options[0].cities = [{\n                label: 'Los Angeles'\n              }];\n            } else if (val.indexOf('Florida') > -1 && !self.options[1].cities.length) {\n              self.options[1].cities = [{\n                label: 'Orlando'\n              }];\n            }\n          }, 300);\n        }\n      }\n    },\n    code: '<vue-cascader clearable :options=\"options\" v-model=\"selectedOptions1\" @active-item-change=\"handleItemChange\" :props=\"props\"></vue-cascader>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function(){\\n' +\n      '      return {\\n' +\n      '        selectedOptions1: [],\\n' +\n      '        options: [{\\n' +\n      '          label: \"Guide\",\\n' +\n      '          cities: []\\n' +\n      '        }, {\\n' +\n      '          label: \"Florida\",\\n' +\n      '          cities: []\\n' +\n      '        }],\\n' +\n      '        props: {\\n' +\n      '          value: \"label\",\\n' +\n      '          children: \"cities\"\\n' +\n      '        }\\n' +\n      '      }\\n' +\n      '    },\\n' +\n      '    methods: {\\n' +\n      '      handleItemChange: function (val) {\\n' +\n      '        var self = this;\\n' +\n      '        this.$notify({title: \"active item: \"+val});\\n' +\n      '        setTimeout(function () {\\n' +\n      '          if (val.indexOf(\"California\") > -1 && !self.options[0].cities.length) {\\n' +\n      '            self.options[0].cities = [{label: \"Los Angeles\"}];\\n' +\n      '          } else if (val.indexOf(\"Florida\") > -1 && !self.options[1].cities.length) {\\n' +\n      '            self.options[1].cities = [{label: \"Orlando\"}];\\n' +\n      '          }\\n' +\n      '        }, 300);\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'cascader7',\n    label: 'cascaderDemo.samples7.label',\n    description: 'cascaderDemo.samples7.description',\n    template: '<div class=\"source\"><vue-row class=\"margin-bottom20\" type=\"flex\" justify=\"center\"><vue-col :span=\"6\"><span class=\"demonstration\">{{$t(\\'cascaderDemo.samples7.label1\\')}}</span></vue-col><vue-col :span=\"16\"><vue-cascader :options=\"options\" v-model=\"selectedOptions1\" filterable :placeholder=\"$t(\\'cascaderDemo.samples7.placeholderLabel\\')\"></vue-cascader></vue-col></vue-row><vue-row type=\"flex\" justify=\"center\"><vue-col :span=\"6\"><span class=\"demonstration\">{{$t(\\'cascaderDemo.samples7.label2\\')}}</span></vue-col><vue-col :span=\"16\"><vue-cascader expand-trigger=\"hover\" :options=\"options\" v-model=\"selectedOptions2\" filterable change-on-select :placeholder=\"$t(\\'cascaderDemo.samples7.placeholderLabel\\')\"></vue-cascader></vue-col></vue-row></div>',\n    parameter: {\n      data: function () {\n        return {\n          options: options,\n          selectedOptions1: [],\n          selectedOptions2: []\n        };\n      }\n    },\n    code: '<span class=\"demonstration\">{{$t(\\'cascaderDemo.samples7.label1\\')}}</span>\\n' +\n      '<vue-cascader :options=\"options\" filterable v-model=\"selectedOptions1\" :placeholder=\"$t(\\'cascaderDemo.samples7.placeholderLabel\\')\"></vue-cascader>\\n' +\n      '<span class=\"demonstration\">{{$t(\\'cascaderDemo.samples7.label2\\')}}</span>\\n' +\n      '<vue-cascader expand-trigger=\"hover\" :options=\"options\" filterable change-on-select v-model=\"selectedOptions2\" :placeholder=\"$t(\\'cascaderDemo.samples7.placeholderLabel\\')\"></vue-cascader>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function(){\\n' +\n      '      return {\\n' + optionsCode +\n      '        selectedOptions1: [],\\n' +\n      '        selectedOptions2: []\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'cascader8',\n    label: 'Attributes',\n    template: '<attr-table :data=\"tableData\"></attr-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"options\",\n            column2: \"cascaderDemo.samples8.row1column2\",\n            column3: \"Array\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"props\",\n            column2: \"cascaderDemo.samples8.row2column2\",\n            column3: \"Object\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"value\",\n            column2: \"cascaderDemo.samples8.row3column2\",\n            column3: \"Array\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"popper-class\",\n            column2: \"cascaderDemo.samples8.row4column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"placeholder\",\n            column2: \"cascaderDemo.samples8.row5column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"vue.cascader.placeholder\"\n          }, {\n            column1: \"disabled\",\n            column2: \"cascaderDemo.samples8.row6column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"clearable\",\n            column2: \"cascaderDemo.samples8.row7column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"expand-trigger\",\n            column2: \"cascaderDemo.samples8.row8column2\",\n            column3: \"String\",\n            column4: \"click, hover\",\n            column5: \"click\"\n          }, {\n            column1: \"show-all-levels\",\n            column2: \"cascaderDemo.samples8.row9column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"true\"\n          }, {\n            column1: \"filterable\",\n            column2: \"cascaderDemo.samples8.row10column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"change-on-select\",\n            column2: \"cascaderDemo.samples8.row12column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"size\",\n            column2: \"cascaderDemo.samples8.row13column2\",\n            column3: \"String\",\n            column4: \"large, small, mini\",\n            column5: \"\"\n          }, {\n            column1: \"text-align\",\n            column2: \"inputDemo.samples10.row22column2\",\n            column3: \"String\",\n            column4: \"center, right\",\n            column5: \"\"\n          }, {\n            column1: \"autofocus\",\n            column2: \"inputDemo.samples10.row19column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"popperClass\",\n            column2: \"cascaderDemo.samples11.row1column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"loading\",\n            column2: \"cascaderDemo.samples11.row2column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"title\",\n            column2: \"cascaderDemo.samples11.row3column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"confirm-button-text\",\n            column2: \"cascaderDemo.samples11.row4column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\\'\\'\"\n          }, {\n            column1: \"cancel-button-text\",\n            column2: \"cascaderDemo.samples11.row4column3\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\\'\\'\"\n          }, {\n            column1: \"toolbar-position\",\n            column2: \"cascaderDemo.samples11.row5column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"top\"\n          }, {\n            column1: \"allow-html\",\n            column2: \"cascaderDemo.samples11.row6column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"true\"\n          }, {\n            column1: \"item-height\",\n            column2: \"cascaderDemo.samples11.row7column2\",\n            column3: \"String | Number\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"visible-item-count\",\n            column2: \"cascaderDemo.samples11.row8column2\",\n            column3: \"Number\",\n            column4: \"\",\n            column5: \"5\"\n          }, {\n            column1: \"swipe-duration\",\n            column2: \"cascaderDemo.samples11.row9column2\",\n            column3: \"String | Number\",\n            column4: \"\",\n            column5: \"1000\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'cascader9',\n    label: 'Props',\n    template: '<attr-table :data=\"tableData\"></attr-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"value\",\n            column2: \"cascaderDemo.samples9.row1column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"label\",\n            column2: \"cascaderDemo.samples9.row2column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"children\",\n            column2: \"cascaderDemo.samples9.row3column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"disabled\",\n            column2: \"cascaderDemo.samples9.row4column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"before-filter\",\n            column2: \"cascaderDemo.samples9.row5column2\",\n            column3: \"Function(value)\",\n            column4: \"\",\n            column5: \"\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'cascader10',\n    label: 'Events',\n    template: '<event-table :data=\"tableData\"></event-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"change\",\n            column2: \"cascaderDemo.samples10.row1column2\",\n            column3: \"cascaderDemo.samples10.row1column3\"\n          }, {\n            column1: \"active-item-change\",\n            column2: \"cascaderDemo.samples10.row2column2\",\n            column3: \"cascaderDemo.samples10.row2column3\"\n          }, {\n            column1: \"confirm\",\n            column2: \"cascaderDemo.samples11.row10column2\",\n            column3: \"cascaderDemo.samples11.row10column3\"\n          }, {\n            column1: \"cancel\",\n            column2: \"cascaderDemo.samples11.row11column2\",\n            column3: \"cascaderDemo.samples11.row10column3\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'cascader11',\n    label: 'Methods',\n    template: '<method-table :data=\"tableData\"></method-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"focus\",\n            column2: \"inputDemo.samples16.row1column2\",\n            column3: \"\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }]\n};\nmodule.exports = cascaderDemo;\n","'use strict';\nvar changeLog = {\n  template: '<div class=\"content\"><h2>更新日志</h2><div style=\"margin:35px 0 0 60px\"><vue-steps direction=\"vertical\"><vue-step class=\"chang-log-step\" v-for=\"(step, index) in steps\" :key=\"index\" icon=\"vue-icon-step\" status=\"process\"><span slot=\"title\">{{step.label}}</span><ul v-for=\"(info, index) in step.description\" :key=\"index\" style=\"padding-left:20px;\"><li>{{info}}</li></ul></vue-step></vue-steps></div></div>',\n  data: function () {\n    return {\n      steps: [{\n        \"label\": \"1.6.30 (2022-10-26)\",\n        \"description\": [\n          \"Aside: 修复v-model初始值为false时，自动执行beforeClose方法的bug\",\n          \"Aside: 修复v-model初始值为true时，按esc键无法关闭的问题\",\n          \"Aside: 遮罩层阻止触摸事件\",\n          \"Aside, Dialog, Messagebox: 添加trap-focus参数，用于将tab键的焦点固定于内部\",\n          \"Aside, Dialog, Messagebox: 添加 focusTriggerOnClose 参数用于关闭后定位到触发打开的元素\",\n          \"MessageBox: 增加focusCancel参数，打开时自动聚焦在取消按钮上\",\n          \"MessageBox: 添加reverseButton属性，用于切换按钮顺序\",\n          \"Xtable: 修复checkbox列配置property时，取消全选不生效的问题\",\n          \"Xtable: 修复动态列，数据错乱的问题\",\n          \"Xtable: column绑定的属性变化时，触发刷新方法不再重置横轴滚动条位置\",\n          \"Xtable: X轴懒加载添加 scrollX.cSize 用于指定列宽\",\n          \"Xtable: 修复浏览器缩放状态下，列header与内容对不齐的问题\",\n          \"Xtable: 修复粘贴的列超出时table列是报错的问题\",\n          \"Xtable: 增加beforeCopy beforePaste 复制粘贴前处理\",\n          \"Xtable: tooltip取值方式改为textContent， 保留文本换行\",\n          \"Xtable: html 导出时支持单元格换行\",\n          \"Xtable: 支持表头分组父分组排序\",\n          \"Xtable: 修正行编辑模式时，点击table空白区域无法退出编辑的问题\",\n          \"Xtable: 路由切换时关闭 tooltip\",\n          \"Xtable: ios下文字被底部被遮挡问题\",\n          \"Xtable: 监听窗口变化事件，不在全局的window中绑定， 改为在xtable的父层容器中绑定，路由切换回时才触发recalculate\",\n          \"Xtable: 防止移除 resizeListener 时父元素不存在出错问题\",\n          \"Xtable: 数据对象整个被替换时，还原表格滚动位置\",\n          \"Xtable: border 属性支持配置 object 类型 {x, y} 分别代表横纵边框\",\n          \"Xtable: border 属性添加 outside 字段控制最外层边框\",\n          \"Xtable: toolbar的export参数添加属性columnCheckMethod，用于控制导出面板列选中\",\n          \"Xtable: toolbar导出属性export添加showOriginal参数控制源选项是否可见\",\n          \"Xtable: rules 添加enabled字段，用于配置动态规则生失效\",\n          \"Xtable: 修复固定列滚动条同步滚动的问题\",\n          \"Xtable: 修复expand和row-drag一起使用时，拖拽顺序错误的问题\",\n          \"Xtable: 修复展开行模式下，如果嵌套grid，并且都配置了右键菜单的情况下，菜单冲突的问题\",\n          \"NumberInput: 添加 use-separator 参数，是否启用千分位\",\n          \"NumberInput: 添加 formatter 参数，自定义格式化函数\",\n          \"NumberInput: 最大值默认值修改为99999999999 最小值默认值修改为-99999999999\",\n          \"Datepicker: 修复下拉框不展示时，change事件无法触发的问题\",\n          \"ImageViewer: 添加 show-preview 属性，显示图片列表导航栏\",\n          \"ImageViewer: 添加 preview-list 参数指定预览缩略图地址\",\n          \"ImageViewer: 修复图片左右切换时，预览小图不会滚动到对应位置的问题\",\n          \"ImageViewer: 添加 leftActions、rightActions slot，自定义工具栏\",\n          \"ImageViewer: 添加 showActionsDivider 属性用于显示隐藏工具栏中央间隔\",\n          \"ImageViewer: 添加 showDownload 属性，显示下载图片按钮\",\n          \"ImageViewer: 添加 getFileName 函数属性（可选），用于自定义下载图片文件名\",\n          \"Tooltip: 解决 tooltip 内只包含纯文本，内容过长时定位不准确的问题 \",\n          \"Tooltip: 路由切换时，自动关闭\",\n          \"Picker: 修复 grid 内部无法捕获到enter事件\",\n          \"Upload: 支持 v-model 绑定的动态数据\",\n          \"Upload: picture 模式下，隐藏列表的图标\",\n          \"Form: 增加 size 属性，控制表单下整体size\",\n          \"Form: 添加 label 居右样式\",\n          \"Form: 校验自动滚动到错误位置\",\n          \"FormItem: 增加 size 属性，控制该字段的组件size\",\n          \"FormItem: rule属性添加 enabled 字段，用于配置动态规则生失效\",\n          \"SplitPane: 修复 size 绑定表达式出错问题\",\n          \"Tree: 优化treenode的选中速度\",\n          \"Tree: 修正数据重新加载后，无法选中节点的问题\",\n          \"Tree: expandAll 全展开方法无法递归展开问题\",\n          \"Tree: 修复节点展开三角图标不易点击问题\",\n          \"Tree: 修复内存泄露问题\",\n          \"TimePicker: 修正非手机插件且在移动端分辨率下，panel全屏遮挡的问题\",\n          \"TimePicker: 手机分辨率下拖拽会移动画面的问题\",\n          \"TimeSelect: 移动端拖拽完成后自动对齐时分秒\",\n          \"Dialog: 增加width属性，用于指定固定宽度\",\n          \"Aside: 新增 width 、height属性，指定 aside 的宽度和高度\",\n          \"Select: 修复多选过滤状态下，需要tab两次才能跳出的问题\",\n          \"Select: 修复多选过滤时focus不能高亮外框的问题\",\n          \"Select: 修复allow-create 与 filterable 同时生效时，v-model绑定的值会被作为 create 的新选项，无法选中对应值的 option 的问题\",\n          \"Select: 懒加载的状态下，过滤后，点击输入框重新展开下拉框显示全数据\",\n          \"Select: 修复移动端下，scroll-view 下的 select 无法滚动的问题\",\n          \"Table: 数据变化时且存在排序列时，重排数据但不触发事件，修复后台排序时陷入死循环的问题\",\n          \"Table: 自定义合计方法添加 column， data 参数\",\n          \"Collapse: 添加 no-hide 属性，绝对定位方式隐藏内容\",\n          \"Collapse: 添加 init-after-open 属性，第一次展开后初始化内容\",\n          \"Collapse: 添加 open 事件\",\n          \"Collapse: 添加 state-change 事件\",\n          \"RadioButtonGroup: change 事件参数增加旧值\",\n          \"Scrollbar: 解决内部元素无法点击的问题\",\n          \"Cascader: 修复change-on-select模式下，下拉框无法防止超出屏幕的问题\",\n          \"Mobile: 修复 TimePicker 控件报 timepicker_this undefined 的问题\",\n          \"Mobile: 修复 DatetimePicker 点击清空图标不会触发change事件的问题\",\n          \"Mobile: 修复手机样式下，日期控件和时刻控件disabled时也会显示clearicon的问题\",\n          \"Mobile: 修复 TimePicker range模式下有value-format时 end date 选着出错的问题\",\n          \"Mobile: 修复 TimePicker range模式下，from-to不能选择同一个时间的问题\",\n          \"Mobile: Cascader移动端下修改 label 为 > 号连接\",\n          \"Mobile: Select点击多选 加号，tooltips会展开的问题\",\n          \"Util: 添加 numberWithCommas 格式化数据千分位\",\n          \"Util: 兼容ios13 ipad被识别为pc的问题\",\n          \"Util: 添加saveAs方法，用于下载保存文件\",\n          \"VueLoader: 加载组件时支持传递请求参数\",\n          \"Global: 更新ios相关显示叠层问题\",\n          \"Excel: 更新xlsx版本 对应批注定位挡住单元格的问题\"\n        ]\n      }, {\n        \"label\": \"1.6.29 (2022-02-16)\",\n        \"description\": [\n          \"Xtable: 修复行合并的状态下，复制错位问题\",\n          \"Xtable: 修复行合并时，cell多选高亮header错位问题\",\n          \"Xtable: 修复隐藏列时复制错位问题\",\n          \"Carousel: 修复CarouselItem为延迟加载时，item独立延迟获取错误问题\",\n          \"Excel: importExcel添加updateSheetRange用于强制更新excel错误的range，解决单元格范围错误问题\",\n          \"Util: 修复ipad下systemInfo检测浏览器为空的问题\",\n        ]\n      }, {\n        \"label\": \"1.6.28 (2022-01-13)\",\n        \"description\": [\n          \"Xtable: 非编辑状态下tab键光标跳出问题\",\n          \"Xtable: 修复粘贴时rowindex错位问题\",\n          \"Xtable: 增加recalculateAfterClearActived属性，控制 清除激活的编辑时是否重新计算整个table\",\n          \"Input: IE11下，如果input存在placeholder属性且存在默认值，则刷新时会自动触发input事件，导致下拉框自动打开。临时对应readOnly时跳过input事件\",\n          \"AutoComplete: 添加maxlength属性\",\n          \"CodeInput: change 事件参数添加 oldValue\",\n          \"NumberInput: 添加属性allow-empty，false时可以禁止为空\",\n          \"Dialog: 添加append-to-body属性\",\n          \"Form: 增加disabled属性，批量禁用整个form的控件\",\n          \"Select: 修正下拉过滤后，全选会选中过滤前的所有数据的问题\",\n          \"CarouselItem: 添加interval属性单独指定该页的切换时间\",\n          \"Mobile: vue-scroll-view修正end-reached事件重复触发问题\",\n          \"Mobile: 修正移动版cascader禁用状态下清空按钮可被点击问题\",\n          \"Mobile: 修正手机端dialog的size问题\",\n          \"Mobile: Timepicker修复range模式下，开始时间和结束时间互相制约不正确的问题\",\n          \"Global: VueLoader支持直接加载三段式的字符串\",\n          \"Global: VueLoader支持加载内容以ESM模式导出\",\n          \"Global: 响应式布局添加xl响应式尺寸\",\n          \"Util: 快捷键全局前置方法\",\n          \"Util: 添加compressImage函数，用于图片压缩\",\n          \"Util: 添加多列排序方法sortByKeys\",\n        ]\n      }, {\n        \"label\": \"1.6.27 (2021-09-17)\",\n        \"description\": [\n          \"Input: 调整各个size的行高同input高。解决输入中文抖动问题\",\n          \"Switch: 绑定的值为undefined时，对应的value修改为false\",\n          \"Notification: 关闭时自动移除dom节点\",\n          \"SvgIcon: 适配在button下的边距问题\",\n        ]\n      }, {\n        \"label\": \"1.6.26 (2021-09-06)\",\n        \"description\": [\n          \"SplitPanes: 新增SplitPanes控件，可拖拽调整布局的分割容器\",\n          \"SvgIcon: 增加控件svg-icon控件，用于调用svg图标\",\n          \"ColorPickerPanel: 新增控件，独立颜色选择面板\",\n          \"DatePicker: 月份模式、年模式下键盘操作下拉框时，清空日期时间\",\n          \"TimePicker: 修复禁用时间无法显示灰色问题\",\n          \"ColorPicker: 支持显示推荐色和自定义推荐色\",\n        ]\n      }, {\n        \"label\": \"1.6.25 (2021-08-09)\",\n        \"description\": [\n          \"Xtable: 解决 setUserSetting 方法仅隐藏列不还原显示当次未配置列的问题\",\n          \"Xtable: 解决 setUserSetting 列顺序无法生效的问题\",\n          \"Xtable: 解决日期框在 grid 里没法选中的问题\",\n          \"Xtable: 修复隐藏列时粘贴错列问题\",\n          \"Xtable: 修复非源模式下值为 null 的数据，在原始导出与自定义数据源导出时，导出结果不一致的问题\",\n          \"Xtable: 增加cell-change事件\",\n          \"Xtable: 修复编辑日期类型列时，tooltip内容错误的bug\",\n          \"Xtable: excel 非源导出支持格式自定义\",\n          \"Xtable: resetFixColumn 改为还原固定列而不是清空固定列\",\n          \"Input: 修复 iOS 下先手动输入再js改值后不触发change事件的问题\",\n          \"Picker: 修复 focus 状态下，点击输入框无法弹出 picker 的问题\",\n          \"Aside: 修复 v-model 绑定true时无法默认展开的问题\",\n          \"Select: 修复allow-create创建条目无法输入的问题\",\n          \"Popover: 修复特定情况下，Popover下的tooltip箭头位置错误问题\",\n          \"Dropdown: 修复 dropdown-menu 在销毁后 对应 dom 没有移除的问题 \",\n          \"DropdownItem: command属性允许绑定object类型 \",\n          \"Mobile: 修改移动端css，修复select懒加载样式问题\",\n          \"Util: parseDate增加对T格式的支持\",\n          \"Global: 解决 loading 解锁完再次快速锁屏时无法锁屏的问题\",\n        ]\n      }, {\n        \"label\": \"1.6.24 (2021-06-04)\",\n        \"description\": [\n          \"Xtable: 修复多行复制功能只能向右下方粘贴的问题\",\n          \"Xtable: 修复非源模式导出时，index列为空的问题\",\n          \"Input: 修复iphone手机safari浏览器日文输入法，数字输入输一个出多个的问题\",\n          \"Input: 修复ios下，日文输入法输入数字的问题、日文全角输入问题\",\n          \"Select: 修正下拉框打开的状态时，直接切换路由离开当前画面导致destroyPopper出错的问题\",\n          \"DatePicker: 修复下拉框未展开是，输入值后按回车没有触发change事件的问题\",\n          \"Mobile: date-picker第一次点击输入框不会弹出日期选择框的问题\",\n          \"Global: scrolling指令内存泄露问题\",\n          \"Global: vue内存泄露问题\",\n          \"Global: 更新vue版本到2.6.13\",\n        ]\n      }, {\n        \"label\": \"1.6.23 (2021-05-13)\",\n        \"description\": [\n          \"Xtable: handleCopyed方法在 Xtable 内有文本被选中时优先复制文本，没有选择文本时复制选中的单元格\",\n          \"Xtable: 修复editorrender绑定事件后，如果事件参数为数组类型，被拆分成独立参数的问题\",\n          \"Xtable: 增强复制粘贴的功能，checked模式支持多行批量粘贴\",\n          \"XTable: 修复checked模式多选下，del键只能删除单个cell的问题\",\n          \"CheckboxGroup: 修复默认绑定的值为undefined时，value变为布尔型，且无法正确选中\",\n          \"Mobile: 修复form的labelPosition属性设置为top时，布局错乱问题\",\n        ]\n      }, {\n        \"label\": \"1.6.22 (2021-04-27)\",\n        \"description\": [\n          \"Xtable: 修复select=false时，回车键无法退出当前编辑的问题\",\n          \"Xtable: 导出面板的列选择框支持columnFilterMethod过滤方法\",\n          \"Xtable: 修复Tree模式children中的行的index显示不正确的问题\",\n          \"Xtable: 修复IE浏览器下，单元格多选模式，无法触发change事件的问题\",\n          \"Xtable: 修复行拖拽，并且出现合并列的情况下，行选择列取消选择后，选中其他单元格，checkbox会被重新选中的问题\",\n          \"Xtable: 修复导出数据时，如果有隐藏列，footer错列问题\",\n          \"Xtable: excel导出支持指定数据源，增加silent模式不触发event.export拦截器\",\n          \"Xtable: 修复列被隐藏时导出数据为空的问题\",\n          \"Xtable: 修复xtable重置列的显示隐藏状态时，初始隐藏列也显示出来的问题\",\n          \"Xtable: 修复数据懒加载时，$rowIndex只有加载的数据才有生成的问题\",\n          \"Xtable: 修复选择列头部的可选状态没有跟着数据的变化动态变化的问题\",\n          \"Xtable: 解决列懒加载时 且有右固定列时 grid中间会出现空白列的问题\",\n          \"Xtable: $listeners优化，防止外部数据变化引起整个xgrid重新渲染\",\n          \"Xtable: 过滤下拉框弹出位置修正\",\n          \"Dialog: 窗体定位不再使用transform属性，改为使用left定位方式\",\n          \"Data Picker: 修复IE浏览器下，tab键无法跳出的问题\",\n          \"Data Picker: 修复周选择模式下，年和周出现不匹配的问题\",\n          \"Data Picker: 手机端插件clearable无效问题\",\n          \"List: 增加属性item-size，设置懒加载单个item的高度\",\n          \"List: 修复移动端下scrollbar高度属性出错问题\",\n          \"Input: 修复ie下先手动输入再js改值后不触发change事件的问题\",\n          \"Utils: 修复systeminfo ie10被判断成为mobile的问题\",\n          \"Select: 修复初始值为null时出错的问题\",\n          \"Select: 修复懒加载的情况下，选中某个选项，删除filter过滤框部分文字，滚动条滚动会重新把过滤内容还原的问题\",\n          \"Select: 多选时展开下拉框自动触发filter-method\",\n          \"Select: 多选过滤，自动高度算法优化\",\n          \"CheckBox Button、Radio Button: 单个选项下，修正圆角问题\",\n          \"Code Input: 新增组件，用于不想要输入法的输入场景\",\n          \"Popover: 支持transition动画\",\n          \"Scroll View: vue-scroll-view-more、vue-scroll-view-refresh相关属性支持多语言\",\n          \"Excel: 修复chrome下，中国1899/12/30时间时区为+8:05:43问题导致导入导出会差43秒的问题\",\n          \"Image: 添加previewActiveIndex属性，用于配置打开预览大图时的默认图片\",\n        ]\n      }, {\n        \"label\": \"1.6.21 (2021-02-03)\",\n        \"description\": [\n          \"Input: 修复未设置cleave时，input的值没有emit的问题\",\n        ]\n      }, {\n        \"label\": \"1.6.20 (2021-02-02)\",\n        \"description\": [\n          \"Input: 修复安卓下重复输入单个字符三次，可以输入超过cleave限制长度的问题\",\n        ]\n      }, {\n        \"label\": \"1.6.19 (2021-02-02)\",\n        \"description\": [\n          \"非功能性更新\",\n        ]\n      }, {\n        \"label\": \"1.6.18 (2021-02-02)\",\n        \"description\": [\n          \"非功能性更新\",\n        ]\n      }, {\n        \"label\": \"1.6.17 (2021-01-25)\",\n        \"description\": [\n          \"Xtable: 添加 pager-left 和 pager-right slot；vue-xtable-pager 添加 left 和 right slot\",\n          \"Xtable: 解决在grid数据量大，editRender的immediate为false的情况下，grid编辑依然卡顿的问题\",\n          \"Xtable: 绑定数据变化时，退出单元格编辑状态\",\n          \"Xtable: 全局resize事件加入节流函数\",\n          \"Input: 解决input cleave属性在中文输入法下的问题\",\n          \"Select: 修复change事件、validation重复触发bug的问题\",\n          \"Select: clear时正确触发clear事件\",\n          \"Date Picker: 修复赋值不正确时，年月显示出错的问题\",\n          \"Date Picker: 移动端插件下，disabled后，点击清空图标，仍可清空值的bug\",\n          \"Excel: 修正numToTitle函数计算错误\",\n          \"Table: 修复defaultExpandAll self未定义的问题\",\n          \"全局: 新增VueUtil.disableScrollDirective参数配置用于禁用scroll指令\",\n          \"全局: I18n内存泄露问题改善\",\n        ]\n      }, {\n        \"label\": \"1.6.16 (2020-12-15)\",\n        \"description\": [\n          \"Xtable: 修改usersetting的列拖拽为保存所有列的顺序\",\n          \"Xtable: 解决field为a.b或a.[0].b形式的时候 列无法排序的问题\",\n          \"Xtable: pagedown pageup键翻页支持，rowToVisible逻辑重写\",\n          \"Xtable: 修复insertRow delRow不会触发footer合计值更新的问题\",\n          \"Xtable: 修复insert row 没有触发懒加载的问题\",\n          \"Xtable: 增加space-key、esc-key、enter-key事件\",\n          \"Xtable: toolbar添加 tab-key 和 hot-key 属性，用于配置tab键和快捷键\",\n          \"Xtable: 修改header的过滤排序图标修改为悬浮，默认隐藏, 当鼠标移上去才会显示。操作后固定显示。位置变成最右侧\",\n          \"Xtable: clearCurrentRow方法增加参数控制是否触发current-change事件。并且current-row被过滤掉时，自动触发current-change事件\",\n          \"Xtable: column支持edit-render开头的slot传递至对应的editrender\",\n          \"Xtable: 修复最后一行enter键不能退出行编辑状态的问题\",\n          \"Xtable: row编辑时，tab键增加对active-method的判断\",\n          \"Select: 修复focus中改变options无法触发setSelected方法的问题\",\n          \"Select: 下拉框按esc键会关闭aside的问题\",\n          \"Upload: filelist状态不能自定义问题\",\n          \"Date Picker: 修复当以tab键落入光标（没有展开下拉），输入值后tab移出光标，不会触发change事件、格式化文本和validation的问题\",\n          \"Date Picker: focus不打开下拉框，按方向下键打开下拉框，点击input框触发下拉框开关切换\",\n          \"Auto Complete: 修正输入法下，输入内容会覆盖旧内容的问题\",\n          \"Popover: 增加autoClose属性，用于manual模式下，点击外部，自动关闭弹出层\",\n          \"Dropdown: 增加tabindex属性\",\n          \"Carousel: 修复清空数据后，动态加入一笔数据无法响应问题\",\n          \"Form: 增加属性auto-focus-error 触发校验后自动focus到第一个错误input，也可以设置字符串类型，自定义focus的元素选择器\",\n          \"Hot Key: v-hotkey快捷键支持多次绑定\",\n          \"Hot Key: 快捷键直接绑定Function不允许穿透（绑定元素不在顶层时无法触发），如需触发，指令加上global修饰符\",\n          \"Hot Key: 新增focusClick类型，先focus到对应元素，再执行点击事件。\",\n          \"Icon: 新增摩托车图标，圆框摩托车图标，维修图标\",\n          \"Utils: 新增vueUtil.getParentComp获取父层指定名称的组件\",\n        ]\n      }, {\n        \"label\": \"1.6.15 (2020-10-23)\",\n        \"description\": [\n          \"Xtable: 修复固定列下拉框在aside中无法点击到的问题\",\n          \"Xtable: 激活的单元格不触发行双击事件\",\n          \"Xtable: 增加show_menu，export，import等事件\",\n          \"Xtable: 销毁时解绑paste事件\",\n          \"Xtable: 全选根据过滤后的状态全选\",\n          \"Xtable: 添加is--editable、is--required、sort--active类用于样式自定义\",\n          \"Xtable: getSelectRecords方法增加参数getVisibleSelect，只选中可见行，GlobalConfig增加同名参数用于全局配置\",\n          \"Xtable: editorRender没有autofocus属性时，tab键无法正确focus单元格问题\",\n          \"Xtable: 修复DEL删除键 可以删掉不可编辑的单元格的问题\",\n          \"Xtable: 修复先排序再行拖拽时，index列数字没有更新问题\",\n          \"Xtable: 修复mouseconfig select模式下粘贴出错问题\",\n          \"Xtable: 增加column的formatter-key属性，用于判断label format是否需要更新缓存\",\n          \"Date Picker: 修复 shift + tab不能关闭下拉问题\",\n          \"Form: validate回调函数增加参数errorProps，列出所有出错字段名数组\",\n          \"Form Item: 修复isModify方法会清除校验状态的问题\",\n          \"Input: 修复noime模式下全选文字，输入字符，无法替换掉全选字符的问题\",\n          \"Upload: 增加auto-remove-fail参数，默认为true自动移除上传失败的文件列表\",\n          \"Collapse: change事件，添加name参数和type参数\",\n          \"Icon: 更新字体图标的base-line\",\n          \"全局: 新增加控件vue-number-input\",\n        ]\n      }, {\n        \"label\": \"1.6.14 (2020-09-02)\",\n        \"description\": [\n          \"Xtable: 解决高度设置为百分比时，懒加载高度计算错误问题\",\n          \"Select: 解决options变化后，如果新option的value与旧option相同，label不会更新的问题\",\n          \"Select: 优化多选自动折叠宽度计算\"\n        ]\n      },\n      {\n        \"label\": \"1.6.13 (2020-09-02)\",\n        \"description\": [\n          \"Xtable: 解决单选和manual激活编辑同时启用时，无法单选单元格\",\n          \"Xtable: 单选单元格时，可以选中单元格文字\",\n          \"Xtable: 修复一个单元格内，多个元素Tab键跳转问题\",\n          \"Tree: 新增getNativeNode， reloadNode方法，用于动态刷新节点\",\n          \"Input: 解决cleave规则小数点设为逗号后，不能输入小数点的问题\"\n        ]\n      },\n      {\n        \"label\": \"1.6.12 (2020-08-24)\",\n        \"description\": [\n          \"Xtable: 修复行拖拽后没有刷新IndexColumn的问题\",\n          \"Tabs: 取消PC端的左右手势功能\",\n          \"Picker: 修复autocomplete不生效问题\"\n        ]\n      },\n      {\n        \"label\": \"1.6.11 (2020-08-20)\",\n        \"description\": [\n          \"Xtable: 过滤时如果选中行被过滤掉，则清空选中状态\",\n          \"Xtable: 冻结列行拖拽问题\",\n          \"Xtable: 解决全选框全选后，全选框状态无法根据行选中状态动态响应的问题\",\n          \"Xtable: valid-config增加cellActive属性，控制校验出错时是否激活单元格\",\n          \"Xtable: 解决行拖拽状态被还原的问题\",\n          \"Xtable: 解决单元格选中在懒加载模式下单击无法选中当一单元格的问题\",\n          \"Table: 解决table不能打开过滤下拉框的问题\",\n          \"Scrollview: 新增triggerLoadMore触发触底加载更多数据的方法\",\n          \"Tree: 如果选中高亮的节点被过滤掉，则取消选中状态\",\n          \"Tabs: 移动端增加swipe-change属性，控制是否允许左右滑动切换Tab页，默认值为允许\",\n          \"Slelect: 多选模式在非自动高度的模式下，超出宽度的Tag显示为 +N…\",\n          \"Select: 解决开启过滤并且有默认值时在Dialog下下拉框错位问题\",\n          \"Checkboxbutton: focus时增加边框效果\",\n          \"Radiobutton: focus时增加边框效果\",\n          \"Popover: 控件消除时删除对应DOM元素\"\n        ]\n      },\n      {\n        \"label\": \"1.6.10 (2020-07-31)\",\n        \"description\": [\n          \"全局: 修复NPM安装出错\"\n        ]\n      },\n      {\n        \"label\": \"1.6.9 (2020-07-31)\",\n        \"description\": [\n          \"Xtable: Table校验message弹出层，前三行改为向下展开\",\n          \"Xtable: 解决getUserSetting方法order字段有重复\",\n          \"Xtable: Tab键优化\",\n          \"Xtable: 解决SetUserSetting后，列拖拽顺序错乱的问题\",\n          \"Xtable: column被v-if隐藏后再次显示，排序失效问题\",\n          \"Xtable: 修改xtable判断excel插件存在方法，修复懒加载excel插件后，xtable无法检测到bug\",\n          \"Select: filter-methods在select的data.length为0时不触发的问题\",\n          \"Messagebox: 关闭时清楚DOM对象\",\n          \"Calendar: 普通模式新增date-class属性，支持单日或按范围指定Class，Full模式增加范围指定功能\",\n          \"Calendar: Full模式增加toDate方法、跳转到指定日期\",\n          \"Timepicker: 清空后值为null，不重新设置picker的选中项\",\n          \"Datepicker: 新增default-pick属性，控制下拉默认选中日期\",\n          \"Checkboxbutton: Tab键支持\",\n          \"Radiobutton: Tab键支持\"\n        ]\n      },\n      {\n        \"label\": \"1.6.8 (2020-07-14)\",\n        \"description\": [\n          \"全局: 弹出下拉框的控件(select, datapicker, cascader等)在页面滚动时自动关闭下拉框\",\n          \"Hotkey: 修正快捷键 在keep-alive的多tab程序下会在每个tab页下触发的问题\",\n          \"Xtable: 修复点击头部排序不能取消排序问题\",\n          \"Xtable: 修复点击行插入后enter无效问题\",\n          \"Form: 解决form reset之后，校验不生效问题\",\n          \"Xtable: xtable导入导出新增display参数，控制是否显示。\",\n          \"Xtable: 冻结列点击后，checked状态无法被清除问题\",\n          \"Xtable: 修正懒加载导出数据功能\",\n          \"Xtable: sync-resize 属性支持 string number类型\",\n          \"Image: image控件mounted赋值src加载错误bug\",\n          \"Pin: pin的状态下，增加vue-pin-pined class\",\n          \"Switch : activeValue属性改为onValue，inactiveValue属性改为offValue\",\n          \"Popper: 新增appendToDirectParent属性，提供强制append到直接父元素的属性\",\n          \"Calendar: dayclick方法加入jsEvent和点击当天的日期\"\n        ]\n      },\n      {\n        \"label\": \"1.6.7 (2020-06-11)\",\n        \"description\": [\n          \"全局: 修复部分ie支持\",\n          \"Tabs: 增加左右滑动手势和点击自动滚动及样式改善\",\n          \"Datepicker: 范围输入新增startchange、endchange回调函数\"\n        ]\n      },\n      {\n        \"label\": \"1.6.6 (2020-06-08)\",\n        \"description\": [\n          \"Switch: 增加activeValue、inactiveValue属性，控制激活和取消对应的值\",\n          \"Autocomplete: 解决change事件触发后台查询导致点击选项时重复触发检索\",\n          \"Adaptivegroup: 新增isForceActive属性，强制使用缩略模式。\",\n          \"Adaptivegroup: 新增refresh方法刷新slot数据\",\n          \"Carousel : 解决clickouside不生效问题\",\n          \"Xtable: 新增validResults数组， 用来配置后端返回的校验出错标红\"\n        ]\n      },\n      {\n        \"label\": \"1.6.4 (2020-05-28)\",\n        \"description\": [\n          \"全局: 移除旧版Table，减小压缩包体积。如需旧版table，可以单独引入。\",\n          \"全局: 修复clickoutside点击报错问题\",\n          \"Mobile: 移动端插件发布\",\n          \"Xtable: 修复列懒加载前后列丢失问题\",\n          \"Xtable: row增加rowindex $rowindex属性\",\n          \"Xtable: openExport函数添加isPrint参数，控制导出面板的打印按钮是否显示\",\n          \"Xtable: 增加row-mouseenter, row-mouseleave, row-mousedown事件\",\n          \"Tabs: 新增no-hide属性，非激活的tab页采用top-10000px方式隐藏，而非原本的display:none\",\n          \"Table: 修复contextmenu 固定列下拉框 点击选项不能取消固定列问题\",\n          \"Select: 懒加载模式下emptyText显示错误问题\",\n          \"Cascader: 解决搜索无效问题\"\n        ]\n      },\n      {\n        \"label\": \"1.6.2 (2020-04-09)\",\n        \"description\": [\n          \"Xtable: 修复toolbar fixed panel打不开问题\",\n          \"Xtable: 修复fixed列键盘左右移动高亮出错\",\n          \"Xtable: 修复新增行后粘贴错行的问题\",\n          \"Xtable: 修复高度计算不正确问题\",\n          \"Xtable: 表格高度变化，懒加载条数自动计算\",\n          \"Select: change事件增加oldvalue参数\",\n          \"Menu: 修复弹出菜单滚动条定位问题\"\n        ]\n      },\n      {\n        \"label\": \"1.6.0 (2020-03-17)\",\n        \"description\": [\n          \"全局: 由于推出新版Xtable，版本号更新为1.6.0，1.1.5为旧版table\",\n          \"全局: loading 锁屏改善\",\n          \"全局: VueUtil增加clipboard、pick、pickby、mapTree、findTree、toArrayTree等等函数\",\n          \"全局: 新增图标\",\n          \"全局: 全局对应TabIndex问题\",\n          \"全局: 更新vue到2.6.11\",\n          \"Select : multiple下placeholder不能响应问题\",\n          \"Select : change事件增加一个回调参数，为选中的值的完整对象, 多选情况为数组。\",\n          \"Xtable: 增加Xtable控件\",\n          \"Xgrid: 增加Xgrid控件\",\n          \"Cascader: trigger = hover并且changeOnSelect时，单击选项可以关闭下拉框\",\n          \"Datepicker: 增加新类型monthrange\",\n          \"Switch: 解决空格键选中，页面向下滚动问题\",\n          \"Switch: disabled状态下去除focus高亮效果\",\n          \"Select : 回车触发下拉\",\n          \"Cascader: 支持键盘操作选择\",\n          \"Uploader: 拖拽到document上，画面被跳转问题\",\n          \"Tooltip: 优化控件事件绑定、小箭头位置\",\n          \"Hotkey: 多层aside对应\",\n          \"Vue-menu: 弹出菜单遮挡问题\",\n          \"Vue-menu: 弹出菜单对齐问题\",\n          \"Datepicker: 范围模式支持单个输入,另一个手动选择\",\n          \"Tree: check-change事件增加node和this参数\"\n        ]\n      },\n      {\n        \"label\": \"1.1.5 (2019-10-30)\",\n        \"description\": [\n          \"Table: 合计支持绑定方法， 支持自定义HTML\",\n          \"Calendar: Full模式下event的排序在不同浏览器下表现不一致\",\n          \"Calendar: Full模式下event支持title写入HTML\",\n          \"Tree: tree全展开全收缩expandAll collapseAll 方法\",\n          \"Select: 增加lazyload属性，下拉框选项支持懒加载\",\n          \"Upload: disable属性自动控制按钮样式\",\n          \"Table: 解决 rowspan 单元格数据为null时错位问题\",\n          \"Select: 新增label-formatter方法，格式化label\",\n          \"Calendar: 支持disabledDate属性\",\n          \"Dialog: 不允许直接拖出屏幕\",\n          \"Table: 修复排序针对null和空字符串都有的情况会出现排序错误\",\n          \"Select: filter-method参数改造\",\n          \"Datetimepicker: 去除DateTimePicker输入框默认宽度\",\n          \"Image: 增加图片控件\"\n        ]\n      },\n      {\n        \"label\": \"1.1.4 (2019-09-06)\",\n        \"description\": [\n          \"Formitem: resetField 数组类型不能重置的问题\",\n          \"Input: 修复ie11下placeholder没有变灰的bug\",\n          \"Datepicker: 修改range模式下輸入框寬度\",\n          \"Tree: getCheckedNodes，getCheckedKeys方法添加参数，用于只获取可见nodes\",\n          \"Table: template列加上特殊class\",\n          \"Table: 快捷菜单，列显示支持列的顺序自定义，并支持导出配置\",\n          \"Table: column的label支持html写法\",\n          \"Upload: 新增beforeRemove方法\",\n          \"Calendar: 新增view-month-change事件，当显示的月份切换触发\",\n          \"Table : context-menu手机下全屏\",\n          \"Table: context-menu内的过滤支持多个过滤（AND逻辑）条件，过滤后显示在头部下拉菜单\",\n          \"Carousel: 新参数：mousewhell 鼠标滚轮切换，mousedrag 鼠标拖拽切换，wrap允许循环\",\n          \"Table: 支持键盘上下键导航\",\n          \"全局: 新增v-hotkey指令用于快捷键绑定\",\n          \"全局: VueUtil添加大量新工具方法\",\n          \"Checkbox: 支持focus，空格键选中操作\",\n          \"Radio: 支持focus，空格键选中操作\"\n        ]\n      }, {\n        label: '1.1.3 (2019-07-12)',\n        description: [\n          'Calendar: 支持v-model绑定，日期多选，可隐藏切换月按钮，支持month，week，date等类型',\n          'Autocomplate: 修复trigger-on-focus=\"false\"时，下拉框不能正常弹出问题',\n          'Autocomplate: 修复下拉框不能正常关闭问题',\n          'Table: sortMethod添加两个新参数，支持获取整行数据',\n          '修复ios cordova下运行时，browser未定义问题',\n        ]\n      }, {\n        label: '1.1.2 (2019-07-05)',\n        description: [\n          'Checkbox: 修复计算属性报错问题',\n          'Table: 修复列宽不能动态响应问题',\n          'Aside: 支持全屏显示，支持取消滑动动画效果',\n          'Dropdown: 下拉框关闭延迟过大',\n          'Input: 修复日文输入法快速输入会中断问题',\n          'Select: 修复出现<transition-group> index 警告的问题',\n          'Upload: 修复出现<transition-group> index 警告的问题',\n          'Switch: 修复宽度动态变化，小圆点错位问题',\n          'Textarea: 修复resize必须autosize一起使用的问题',\n          'Table: 快捷菜单固定列，过滤，排序，列显示支持导入导出JSON'\n        ]\n      }, {\n        label: '1.1.1 (2019-05-14)',\n        description: [\n          '升级vue.js版本至2.6.10最新版'\n        ]\n      }, {\n        label: '1.1.0 (2019-05-09)',\n        description: [\n        '版本号正式确认为1.1.0并加入公司内部的NPM管理',\n        '新增pj图标，helpbook图标',\n        'Table: 新增highlightFirstAfterSort属性，false排序后清空当前行，或true设为首行',\n        'Table: 新增getSelection方法，获取多选行',\n        'upload: 新增max参数，上传数量等于max时，上传按钮隐藏',\n        'loader: 支持script标签的async属性，设置为false是脚本会被同步加载，防止mounted方法中脚本还未导入',\n        'loader: 废除loader自动添加debugger的功能',\n        'input: 新增$rules、$formatter 两个对象',\n        'validator: type为number时修改min和max为校验数字大小，而非字符串长度',\n        'datepicker: 修复跨年日期选择bug',\n        'gantt: 新增gantt拓展控件',\n      ]\n      },{\n        label: '1.50.190116 (2019-01-16)',\n        description: [\n        'Input: 添加noIme参数，限制输入法输入',\n        'Table: 修正切换路由，table无法保存滚动位置问题',\n        'Table: 修复lazyload导致画面卡死问题',\n        'Table: 修复table的快捷菜单（contextmenu）列title为空时错位问题、多个table时，menu被遮挡问题。',\n        'Table: filter，sort 序号(type=index)重排',\n        'Util: 修正chrome>67全屏报错, ',\n        'Menu: 添加collapse参数，使菜单可折叠',\n        'ColorPicker: 支持slot写法来自定义触发器外观',\n        'Signature: 新增控件',\n      ]\n      }, {\n        label: '1.50.181121 (2018-11-21)',\n        description: ['全局: 代码改善',\n        'Tree: getCheckedNodes方法添加indeterminate参数，为true时将会把半选中状态的节点一起返回',\n        'Notification: 新增vueutils.setZIndex，设置默认提示zIndex',\n        'DatePicker: 切换月份是，选中日期不再跟随到下月同天。解决 10.31 -> nextmonth -> 12.01 bug',\n        'Select: 修正select控件 tab键focus时，无法过滤的问题',\n        'Button: 防止双击事件穿透',\n        'Table: 修正清空数据后懒加载失效问题',\n        'Table: 修正数据清空后，合计不变问题',\n        'Table: 添加filters属性，自定义过滤项目',\n        'Input: Cleave.js版本更新1.4.4',\n      ]\n      },{\n        label: '1.50.180920 (2018-09-20)',\n        description: ['全局: 代码改善',\n        'Dropdown组件: visible-change属性无效',\n        'ColorPicker: 增加disabled属性',\n        'Carousel: 修正左右切换按钮提交表单bug']\n      },{\n        label: '1.49.180628 (2018-06-28)',\n        description: ['全局: 代码改善'\n          , 'Table组件: aggregate属性改善']\n      }, {\n        label: '1.49.180531 (2018-05-31)',\n        description: ['全局: 性能改善']\n      }, {\n        label: '1.49.180523 (2018-05-23)',\n        description: ['全局: 代码改善'\n          , 'VueUtil: 移除produceModel方法, 追加config属性'\n          , 'Full Calendar组件: 追加weekLabel属性']\n      }, {\n        label: '1.48.180515 (2018-05-15)',\n        description: ['全局: 代码改善'\n          , 'vue-lodaer: 默认开启调试, 启用生产模式可关闭']\n      }, {\n        label: '1.48.9977 (2018-05-08)',\n        description: ['全局: 代码改善'\n          , 'Carousel组件: 追加滑动切换功能'\n          , 'i18n: 性能改善'\n          , 'Card组件: 追加shadow属性'\n          , 'vue-resource: 更新至1.5.0'\n          , 'vue-util: 追加mergeArray, deepCopy方法']\n      }, {\n        label: '1.47.9827 (2018-04-23)',\n        description: ['Table组件: 改善columnFilter方法']\n      }, {\n        label: '1.47.9823 (2018-04-19)',\n        description: ['追加AdaptiveGroup组件'\n          , 'TableColumn组件: 修复label无法动态显示的问题']\n      }, {\n        label: '1.46.9811 (2018-04-17)',\n        description: ['Table组件: 改善columnFilter方法']\n      }, {\n        label: '1.46.9805 (2018-04-12)',\n        description: ['追加 v-ripple指令: 点击时触发波纹效果'\n          , '全局: 代码改善']\n      }, {\n        label: '1.45.9783 (2018-04-10)',\n        description: ['全局: 代码改善'\n          , 'Icon: 追加图标'\n          , 'VuUtil: 注册至vue.$vu']\n      }, {\n        label: '1.45.9753 (2018-04-08)',\n        description: ['Date组件: 修复日历显示不准确的问题']\n      }, {\n        label: '1.45.9743 (2018-04-03)',\n        description: ['FormItem组件: 修复label动态显示出错的问题']\n      }, {\n        label: '1.45.9725 (2018-03-29)',\n        description: ['VueLoader: 改善错误消息出力, 修复@media样式手机端无法生效的问题']\n      }, {\n        label: '1.45.9709 (2018-03-28)',\n        description: ['TableColumn组件: 改善show-overflow-tooltip属性']\n      }, {\n        label: '1.45.9703 (2018-03-27)',\n        description: ['VueLoader: 修复无<script>时解析出错的问题'\n          , 'Scrollbar组件: 追加惯性滚动效果']\n      }, {\n        label: '1.45.9696 (2018-03-26)',\n        description: ['VueUtil: 追加formatNumber方法'\n          , 'Form校验规则: 追加IPv4'\n          , 'Scrollbar组件: 控件改善'\n          , 'Table组件: 控件改善']\n      }, {\n        label: '1.44.9688 (2018-03-22)',\n        description: ['Table组件: 样式改善']\n      }, {\n        label: '1.44.9682 (2018-03-21)',\n        description: ['Notification组件: 代码改善'\n          , 'v-imgload指令: 代码改善'\n          , 'Input组件: 追加text-align属性'\n          , 'Autocomplete组件: 追加text-align属性'\n          , 'Select组件: 追加text-align属性'\n          , 'DatePicker组件: 追加text-align属性'\n          , 'TimePicker组件: 追加text-align属性'\n          , 'Cascader组件: 追加text-align属性']\n      }, {\n        label: '1.43.9656 (2018-03-20)',\n        description: ['Table组件: 追加highlight-hover-row属性'\n          , 'TableColumn组件: 追加rowspan, label-colspan属性'\n          , 'Scrollbar组件: 控件改善'\n          , 'Upload组件: 修复加入file-list属性后无法手动提交的问题']\n      }, {\n        label: '1.42.9639 (2018-03-15)',\n        description: ['追加 v-imgload指令: 懒加载图片, 只对<img>有效'\n          , 'VueUtil: 追加addHoverListener, removeHoverListener方法']\n      }, {\n        label: '1.41.9621 (2018-03-14)',\n        description: ['Scrollbar组件: 控件改善']\n      }, {\n        label: '1.41.9615 (2018-03-13)',\n        description: ['List组件: 追加scrollbar属性']\n      }, {\n        label: '1.41.9604 (2018-03-09)',\n        description: ['Scrollbar组件: 控件改善'\n          , 'VuePopper组件: 修复IE兼容问题']\n      }, {\n        label: '1.41.9572 (2018-03-08)',\n        description: ['Table组件: context-menu改善'\n          , 'Draggable指令: 修复IE兼容问题']\n      }, {\n        label: '1.41.9560 (2018-03-07)',\n        description: ['Scrollbar组件: 控件改善']\n      }, {\n        label: '1.41.9537 (2018-03-06)',\n        description: ['VueLoader: 追加解析script标签的scoped属性, 对应JS异步执行的问题'\n          , 'VuePopper组件: 改善挂载位置'\n          , 'List组件: 修复list-item改变后显现不正确的问题'\n          , 'Aside组件: 删除left属性, 追加position属性']\n      }, {\n        label: '1.40.9522 (2018-03-02)',\n        description: ['Tabs组件: 修复路由模式下的路由多次加载的问题'\n          , 'Button组件: 追加tabindex属性'\n          , 'Loading组件: 修复事件重复注册的问题'\n          , 'LoadingBar组件: 追加回调钩子']\n      }, {\n        label: '1.39.9496 (2018-02-28)',\n        description: ['Table组件: 追加filterable属性, 过滤方法改变, 具体参考table的筛选demo']\n      }, {\n        label: '1.38.9478 (2018-02-25)',\n        description: ['Form组件: 修复label-responsive属性']\n      }, {\n        label: '1.38.9459 (2018-02-23)',\n        description: ['Table组件: 修复导出文件格式问题, 追加print-label属性, 修复数据变化时不会重新排序的问题'\n          , '全局: 代码改善']\n      }, {\n        label: '1.37.9428 (2018-02-11)',\n        description: ['Calendar组件: 追加getDate方法']\n      }, {\n        label: '1.36.9420 (2018-02-09)',\n        description: ['Calendar组件: 修复初始化event未赋值出错的问题, 修复更多事件计数不准确的问题'\n          , 'Icon: 追加图标']\n      }, {\n        label: '1.36.9384 (2018-02-06)',\n        description: ['VueLoader: 修复@media样式无法生效的问题']\n      }, {\n        label: '1.36.9377 (2018-02-05)',\n        description: ['Carousel组件: 修复组件销毁时未删除定时器的问题']\n      }, {\n        label: '1.36.9356 (2018-01-31)',\n        description: ['Collapse组件: 修复firefox下样式问题']\n      }, {\n        label: '1.36.9345 (2018-01-30)',\n        description: ['VueUtil: 代码优化'\n          , 'VueLoader: 代码优化'\n          , 'TableColumn组件: 改善colspan属性']\n      }, {\n        label: '1.36.9327 (2018-01-27)',\n        description: ['Icon: 追加图标']\n      }, {\n        label: '1.36.9311 (2018-01-23)',\n        description: ['Table组件: 追加getCurrentRow方法']\n      }, {\n        label: '1.35.9288 (2018-01-17)',\n        description: ['Table组件: 修复拖动列宽的逻辑问题'\n          , 'Form组件: 修复rules属性未能实时生效的问题']\n      }, {\n        label: '1.35.9278 (2018-01-16)',\n        description: ['VueUtil: resizeListener方法改善']\n      }, {\n        label: '1.35.9211 (2018-01-08)',\n        description: ['Dialog组件: 追加draggable属性']\n      }, {\n        label: '1.34.9207 (2018-01-04)',\n        description: ['VueLoader: 加载vue文件']\n      }, {\n        label: '1.33.9187 (2017-12-30)',\n        description: ['全局: css改善 开启GPU加速'\n          , 'Icon: 追加图标'\n          , 'Table组件: 修复懒加载在IE下不正确的问题, 修复拖动列宽layout错乱的问题']\n      }, {\n        label: '1.33.9151 (2017-12-27)',\n        description: ['Table组件: 性能改善'\n          , 'Color组件: 改善颜色选择方法'\n          , 'Vue: 升级至2.5.13']\n      }, {\n        label: '1.32.9075 (2017-12-21)',\n        description: ['Input组件: Cleave追加customFormatter属性']\n      }, {\n        label: '1.32.9069 (2017-12-20)',\n        description: ['Vue: 升级至2.5.11'\n          , 'VueUtil: 追加debounce方法, 改善throttle方法']\n      }, {\n        label: '1.31.9021 (2017-12-15)',\n        description: ['全局: 代码改善'\n          , 'Table组件: 改善多列排序算法'\n          , 'VuePopper: 追加autoWidth属性, 自适应宽度'\n          , 'Vue: 升级至2.5.10']\n      }, {\n        label: '1.30.8883 (2017-12-08)',\n        description: ['VueUtil: 改善ResizeListener'\n          , 'LoadingBar组件: 代码改善']\n      }, {\n        label: '1.30.8844 (2017-12-06)',\n        description: ['VueUtil: 追加getCookie, setCookie, removeCookie, throttle方法']\n      }, {\n        label: '1.29.8806 (2017-12-05)',\n        description: ['Table组件: lazyload改善'\n          , 'Loading组件: 样式改善'\n          , 'List组件: 代码改善']\n      }, {\n        label: '1.29.8793 (2017-12-04)',\n        description: ['VueUtil: 追加objType和isFunciton方法'\n          , 'VuePopper: 代码改善']\n      }, {\n        label: '1.28.8768 (2017-12-01)',\n        description: ['Calendar组件: 完善Full Calendar']\n      }, {\n        label: '1.28.8754 (2017-11-30)',\n        description: ['Calendar组件: 追加Full Calendar'\n          , 'Table组件: 修复clearSelection方法无法清除header部checkbox的BUG']\n      }, {\n        label: '1.27.8732 (2017-11-28)',\n        description: ['全局: 动画效果改善'\n          , 'Tabs组件: 追加鼠标滚轮事件']\n      }, {\n        label: '1.26.8682 (2017-11-24)',\n        description: ['Table组件: 追加scroll-top, scroll-bottom, scroll-left, scroll-right事件'\n          , 'Dialog组件: 样式改善'\n          , 'Aside组件: 样式改善']\n      }, {\n        label: '1.25.8669 (2017-11-22)',\n        description: ['Table组件: 排序样式改善, 代码优化'\n          , 'TableColumn组件: 追加colspan属性, 追加名为\"header\"的slot-scope, 原嵌套table-column写法废除, 具体参考table的自定义模板demo']\n      }, {\n        label: '1.24.8649 (2017-11-21)',\n        description: ['Progress组件: 样式改善']\n      }, {\n        label: '1.24.8641 (2017-11-20)',\n        description: ['全局: 代码改善'\n          , 'VueUtil: 追加isUndef和isDef方法'\n          , 'Table组件: 修复导出文件不会导出footer部的问题, 优化footer部计算, 改善context-menu功能']\n      }, {\n        label: '1.23.8613 (2017-11-17)',\n        description: ['Icon: 追加图标'\n          , 'Table组件: 改善鼠标滚轮事件, 排序改善(支持多列排序), show-summary属性变更为show-footer属性'\n          , 'TableColumn组件: 追加aggregate和aggregate-label属性']\n      }, {\n        label: '1.22.8555 (2017-11-14)',\n        description: ['Select组件: 样式改善, 修复多选时可对disabled选项全选的问题'\n          , 'Table组件: 快捷菜单功能改善, 可对列进行全选固定']\n      }, {\n        label: '1.22.8534 (2017-11-10)',\n        description: ['VueUtil: 追加getSystemInfo方法'\n          , 'Table组件: 修复选中selection列header部的checkbox会触发两次事件的问题']\n      }, {\n        label: '1.21.8513 (2017-11-09)',\n        description: ['全局: 下拉样式改善'\n          , 'Cascader组件: 代码改善'\n          , 'Validator: 代码改善'\n          , 'Table组件: 修复header部鼠标滚轮事件'\n          , '其他: 代码改善']\n      }, {\n        label: '1.21.8491 (2017-11-08)',\n        description: ['Form组件: 追加custom-message属性'\n          , 'VueUtil: 代码改善'\n          , 'Notification组件: 代码改善'\n          , 'MessageBox组件: 代码改善']\n      }, {\n        label: '1.20.8458 (2017-11-07)',\n        description: ['Icon: 追加图标, 样式改善'\n          , 'Select组件: 代码改善']\n      }, {\n        label: '1.20.8422 (2017-11-06)',\n        description: ['全局: Array类型判断的改善'\n          , 'VueUtil: 追加addDate方法, 追加isArray方法'\n          , 'Icon: 追加图标, 样式改善']\n      }, {\n        label: '1.19.8359 (2017-11-03)',\n        description: ['Collapse组件: 改善change事件, 在DOM更新后触发'\n          , 'Input组件: 修复change事件会触发两次的问题'\n          , 'Form组件: 追加notify-message属性']\n      }, {\n        label: '1.18.8309 (2017-11-02)',\n        description: ['Table组件: 性能改善, 样式改善'\n          , 'FormItem组件: 代码改善']\n      }, {\n        label: '1.18.8221 (2017-10-31)',\n        description: ['CollapseItem组件: 追加expand-on-click属性'\n          , 'List组件: 性能改善, 追加default-selected属性'\n          , 'Table组件: 性能改善']\n      }, {\n        label: '1.17.8175 (2017-10-30)',\n        description: ['全局: 代码改善(兼容IE的写法改善)'\n          , 'Table组件: 性能改善, context menu 打开时改为对画面可操作']\n      }, {\n        label: '1.17.8124 (2017-10-26)',\n        description: ['FormItem组件: 代码改善'\n          , 'Notification组件: 追加showClose属性'\n          , 'Table组件: 修复table高度变更时懒加载不对的问题']\n      }, {\n        label: '1.16.8074 (2017-10-25)',\n        description: ['全局: 去除body样式'\n          , 'Autocomplete组件: 代码改善'\n          , 'Vuex: 升级至3.0.0'\n          , 'Vue-Router:  升级至3.0.1'\n          , 'Collapse组件: 追加expand-on-click-header属性'\n          , 'Table组件: 追加lazyload属性, 代码改善'\n          , 'List组件: 样式改善, 代码改善'\n          , '其它: 代码改善']\n      }, {\n        label: '1.15.7976 (2017-10-23)',\n        description: ['Vue: 升级至2.5.2']\n      }, {\n        label: '1.14.7969 (2017-10-20)',\n        description: ['Select组件: 修复单选多选切换的问题'\n          , 'Notification组件: 样式改善'\n          , 'Table组件: 追加数据导出功能, 样式改善']\n      }, {\n        label: '1.13.7918 (2017-10-19)',\n        description: ['全局: touch事件修正']\n      }, {\n        label: '1.13.7901 (2017-10-18)',\n        description: ['Notification组件: 代码优化, 样式改善'\n          , 'MessageBox组件: 代码优化'\n          , 'Dialog组件: 代码优化, 样式改善'\n          , 'Date组件: 样式改善'\n          , 'Table组件: 性能改善']\n      }, {\n        label: '1.13.7805 (2017-10-16)',\n        description: ['全局: 样式调整'\n          , 'Notification组件: 修复已知的功能性BUG及性能改善']\n      }, {\n        label: '1.12.7717 (2017-10-13)',\n        description: ['Table组件: 追加可直接调用的列过滤方法和多列排序方法']\n      }, {\n        label: '1.11.7694 (2017-10-12)',\n        description: ['全局: css代码优化'\n          , 'Table组件: 代码优化'\n          , 'Tag组件: 代码优化'\n          , 'Draggable组件: 代码优化']\n      }, {\n        label: '1.11.7592 (2017-10-11)',\n        description: ['Table组件: 代码优化'\n          , 'ColorPicker组件: 代码优化'\n          , 'Draggable组件: 代码优化'\n          , 'Slider组件: 代码优化']\n      }, {\n        label: '1.11.7579 (2017-10-10)',\n        description: ['Table组件: 修复已知的功能性BUG及性能改善'\n          , 'Rate组件: 修复color,class等属性不能动态生效的问题']\n      }, {\n        label: '1.11.7542 (2017-10-09)',\n        description: ['VueUtil: 追加noLog方法, 用于取消Vue日志'\n          , 'MessageBox组件: 代码优化']\n      }, {\n        label: '1.11.7484 (2017-10-07)',\n        description: ['Notification组件: 改善样式'\n          , 'Dialog组件: full模式下改为不能拖动'\n          , 'Tabs组件: 代码优化'\n          , 'Table组件: 代码优化'\n          , 'List组件: 代码优化']\n      }, {\n        label: '1.11.7426 (2017-10-06)',\n        description: ['Table组件: 修复固定列时展开行的自定义类不生效的问题'\n          , 'List组件: 修复初期化不触发select事件的问题']\n      }, {\n        label: '1.11.7375 (2017-09-30)',\n        description: ['Vue: 开启开发模式, 调试时显示日志与警告']\n      }, {\n        label: '1.11.7360 (2017-09-29)',\n        description: ['Tag组件: 追加width属性'\n          , 'Select组件: 追加auto-height属性'\n          , 'Select组件: 修复clearable属性, 多选模式下可全选全清'\n          , 'Select组件: 修复disabled属性, 多选模式下tag不可关闭'\n          , 'UpLoad组件: 修复disabled属性']\n      }, {\n        label: '1.10.7277 (2017-09-27)',\n        description: ['Table组件: 追加context menu功能'\n          , 'Aside组件: 追加clear-modal属性'\n          , 'Dialog组件: 追加clear-modal属性'\n          , '其它: 已知的功能性BUG修复及代码改善']\n      }, {\n        label: '1.9.7147 (2017-09-21)',\n        description: ['Tabs组件: 追加tab-bottom属性']\n      }, {\n        label: '1.8.7111 (2017-09-20)',\n        description: ['Carousel组件: 追加hover-stop属性']\n      }, {\n        label: '1.7.7079 (2017-09-19)',\n        description: ['Input组件: 追加focus方法'\n          , 'Autocomplete组件: 追加focus方法'\n          , 'Select组件: 追加focus方法'\n          , 'DatePicker组件: 追加focus方法'\n          , 'TimePicker组件: 追加focus方法'\n          , 'Cascader组件: 追加focus方法'\n          , 'Button组件: 追加focus方法'\n          , '其它: 已知的功能性BUG修复及代码改善']\n      }, {\n        label: '1.6.6982 (2017-09-07)',\n        description: ['追加draggable组件'\n          , '其它: 已知的功能性BUG修复及代码改善']\n      }, {\n        label: '1.5.6780 (2017-09-07)',\n        description: ['List组件: 追加default-actived-index属性'\n          , '其它: 已知的功能性BUG修复及代码改善']\n      }, {\n        label: '1.4.6603 (2017-08-28)',\n        description: ['Table组件: 追加隐藏列功能'\n          , '其它: 已知的功能性BUG修复及代码改善']\n      }, {\n        label: '1.3.5750 (2017-08-03)',\n        description: ['Aside组件: 追加beforeClose事件'\n          , 'Dialog组件: 追加beforeClose事件'\n          , '其它: 已知的功能性BUG修复及代码改善']\n      }, {\n        label: '1.2.5730 (2017-07-31)',\n        description: ['Tree组件: 追加子节点的disabled属性'\n          , 'Tree组件: 子节点的check逻辑改善']\n      }, {\n        label: '1.1.5511 (2017-07-21)',\n        description: ['Table组件: 追加expand-class-name属性']\n      }, {\n        label: '1.0.5367 (2017-07-18)',\n        description: ['VUE-Component 发布']\n      }]\n    }\n  }\n};\nmodule.exports = changeLog;\n","'use strict';\nvar checkboxDemo = {\n  path: '/checkbox',\n  name: 'checkbox',\n  head: {\n    label: 'checkboxDemo.label',\n    description: 'checkboxDemo.description'\n  },\n  samples: [{\n    id: 'checkbox1',\n    label: 'checkboxDemo.samples1.label',\n    description: 'checkboxDemo.samples1.description',\n    template: '<div class=\"source\"><vue-checkbox v-model=\"checked\">Option</vue-checkbox></div>',\n    parameter: {\n      data: function () {\n        return {\n          checked: true\n        }\n      }\n    },\n    code: '<vue-checkbox v-model=\"checked\">Option</vue-checkbox>\\n\\n<script>\\n  new Vue({\\n    data: function(){\\n      return {\\n        checked: true\\n      }\\n    }\\n  }).$mount();\\n</script>',\n  }, {\n    id: 'checkbox2',\n    label: 'checkboxDemo.samples2.label',\n    description: 'checkboxDemo.samples2.description',\n    template: '<div class=\"source\"><vue-checkbox v-model=\"checked1\" disabled>Option</vue-checkbox><vue-checkbox v-model=\"checked2\" disabled>Option</vue-checkbox></div>',\n    parameter: {\n      data: function () {\n        return {\n          checked1: false,\n          checked2: true\n        }\n      }\n    },\n    code: '<vue-checkbox v-model=\"checked1\" disabled>Option</vue-checkbox>\\n<vue-checkbox v-model=\"checked2\" disabled>Option</vue-checkbox>\\n\\n<script>\\n  new Vue({\\n    data: function(){\\n      return {\\n        checked1: false,\\n        checked2: true\\n      }\\n    }\\n  }).$mount();\\n</script>',\n  }, {\n    id: 'checkbox3',\n    label: 'checkboxDemo.samples3.label',\n    description: 'checkboxDemo.samples3.description',\n    template: '<div class=\"source\"><vue-checkbox-group v-model=\"checkList\"><vue-checkbox label=\"Option A\"></vue-checkbox><vue-checkbox label=\"Option B\"></vue-checkbox><vue-checkbox label=\"Option C\"></vue-checkbox><vue-checkbox label=\"Disabled\" disabled></vue-checkbox><vue-checkbox label=\"Selected and Disabled\" disabled></vue-checkbox></vue-checkbox-group></div>',\n    parameter: {\n      data: function () {\n        return {\n          checkList: [\"Selected and Disabled\", \"Option A\"]\n        }\n      }\n    },\n    code: '<vue-checkbox-group v-model=\"checkList\">\\n  <vue-checkbox label=\"Option A\"></vue-checkbox>\\n  <vue-checkbox label=\"Option B\"></vue-checkbox>\\n  <vue-checkbox label=\"Option C\"></vue-checkbox>\\n  <vue-checkbox label=\"Disabled\" disabled></vue-checkbox>\\n  <vue-checkbox label=\"Selected and Disabled\" disabled></vue-checkbox>\\n</vue-checkbox-group>\\n\\n<script>\\n  new Vue({\\n    data: function(){\\n      return {\\n        checkList: [\"Selected and Disabled\",\"Option A\"]\\n      }\\n    }\\n  }).$mount();\\n</script>',\n  }, {\n    id: 'checkbox4',\n    label: 'checkboxDemo.samples4.label',\n    description: 'checkboxDemo.samples4.description',\n    template: '<div class=\"source\"><vue-checkbox :indeterminate=\"isIndeterminate\" v-model=\"checkAll\" @change=\"handleCheckAllChange\">Check All</vue-checkbox><div style=\"margin: 15px 0;\"></div><vue-checkbox-group v-model=\"checkedCities\" @change=\"handleCheckedCitiesChange\"><vue-checkbox v-for=\"city in cities\" :key=\"city\" :label=\"city\">{{city}}</vue-checkbox></vue-checkbox-group></div>',\n    parameter: {\n      data: function () {\n        return {\n          checkAll: true,\n          checkedCities: ['New York', 'Chicago'],\n          cities: ['New York', 'Chicago', 'Los Angeles', 'Washington'],\n          isIndeterminate: true\n        }\n      },\n      methods: {\n        handleCheckAllChange: function (event) {\n          this.checkedCities = event.target.checked ? ['New York', 'Chicago', 'Los Angeles', 'Washington'] : [];\n          this.isIndeterminate = false;\n        },\n        handleCheckedCitiesChange: function (value) {\n          var checkedCount = value.length;\n          this.checkAll = checkedCount === this.cities.length;\n          this.isIndeterminate = checkedCount > 0 && checkedCount < this.cities.length;\n        }\n      }\n    },\n    code: '<vue-checkbox :indeterminate=\"isIndeterminate\" v-model=\"checkAll\" @change=\"handleCheckAllChange\">Check All</vue-checkbox>\\n<vue-checkbox-group v-model=\"checkedCities\" @change=\"handleCheckedCitiesChange\">\\n  <vue-checkbox v-for=\"city in cities\" :key=\"city\" :label=\"city\">{{city}}</vue-checkbox>\\n</vue-checkbox-group>\\n\\n<script>\\n  new Vue({\\n    data: function(){\\n      return {\\n        checkAll: true,\\n        checkedCities: [\\'New York\\', \\'Chicago\\'],\\n        cities: [\\'New York\\', \\'Chicago\\', \\'Los Angeles\\', \\'Washington\\'],\\n        isIndeterminate: true\\n      }\\n    },\\n    methods: {\\n      handleCheckAllChange: function(event) {\\n        this.checkedCities = event.target.checked ? [\\'New York\\', \\'Chicago\\', \\'Los Angeles\\', \\'Washington\\'] : [];\\n        this.isIndeterminate = false;\\n      },\\n      handleCheckedCitiesChange: function(value) {\\n        var checkedCount = value.length;\\n        this.checkAll = checkedCount === this.cities.length;\\n        this.isIndeterminate = checkedCount > 0 && checkedCount < this.cities.length;\\n      }\\n    }\\n  }).$mount();\\n</script>',\n  }, {\n    id: 'checkbox5',\n    label: 'checkboxDemo.samples5.label',\n    description: 'checkboxDemo.samples5.description',\n    template: '<div class=\"source\"><vue-checkbox-group v-model=\"checkboxGroup1\" size=\"large\" fill=\"#324057\" text-color=\"#a4aebd\" :min=\"1\" :max=\"3\"><vue-checkbox-button label=\"New York\"></vue-checkbox-button><vue-checkbox-button label=\"Chicago\"></vue-checkbox-button><vue-checkbox-button label=\"Los Angeles\"></vue-checkbox-button><vue-checkbox-button label=\"Washington\"></vue-checkbox-button></vue-checkbox-group><div style=\"margin: 15px 0;\"></div><vue-checkbox-group v-model=\"checkboxGroup2\"><vue-checkbox-button label=\"New York\"></vue-checkbox-button><vue-checkbox-button label=\"Chicago\" :disabled=\"true\"></vue-checkbox-button><vue-checkbox-button label=\"Los Angeles\"></vue-checkbox-button><vue-checkbox-button label=\"Washington\"></vue-checkbox-button></vue-checkbox-group><div style=\"margin: 15px 0;\"></div><vue-checkbox-group v-model=\"checkboxGroup3\" :disabled=\"true\"><vue-checkbox-button label=\"New York\"></vue-checkbox-button><vue-checkbox-button label=\"Chicago\"></vue-checkbox-button><vue-checkbox-button label=\"Los Angeles\"></vue-checkbox-button><vue-checkbox-button label=\"Washington\"></vue-checkbox-button></vue-checkbox-group></div>',\n    parameter: {\n      data: function () {\n        return {\n          checkboxGroup1: ['New York'],\n          checkboxGroup2: ['Washington'],\n          checkboxGroup3: ['Los Angeles']\n        }\n      }\n    },\n    code: '<vue-checkbox-group v-model=\"checkboxGroup1\" size=\"large\" fill=\"#324057\" text-color=\"#a4aebd\" :min=\"1\" :max=\"3\">\\n  <vue-checkbox-button label=\"New York\"></vue-checkbox-button>\\n  <vue-checkbox-button label=\"Chicago\"></vue-checkbox-button>\\n  <vue-checkbox-button label=\"Los Angeles\"></vue-checkbox-button>\\n  <vue-checkbox-button label=\"Washington\"></vue-checkbox-button>\\n</vue-checkbox-group>\\n<vue-checkbox-group v-model=\"checkboxGroup2\">\\n  <vue-checkbox-button label=\"New York\"></vue-checkbox-button>\\n  <vue-checkbox-button label=\"Chicago\" :disabled=\"true\"></vue-checkbox-button>\\n  <vue-checkbox-button label=\"Los Angeles\"></vue-checkbox-button>\\n  <vue-checkbox-button label=\"Washington\"></vue-checkbox-button>\\n</vue-checkbox-group>\\n<vue-checkbox-group v-model=\"checkboxGroup3\" :disabled=\"true\">\\n  <vue-checkbox-button label=\"New York\"></vue-checkbox-button>\\n  <vue-checkbox-button label=\"Chicago\"></vue-checkbox-button>\\n  <vue-checkbox-button label=\"Los Angeles\"></vue-checkbox-button>\\n  <vue-checkbox-button label=\"Washington\"></vue-checkbox-button>\\n</vue-checkbox-group>\\n\\n<script>\\n  new Vue({\\n    data: function(){\\n      return {\\n        checkboxGroup1: [\"New York\"],\\n        checkboxGroup2: [\"Washington\"],\\n        checkboxGroup3: [\"Los Angeles\"]\\n      }\\n    }\\n  }).$mount();\\n</script>',\n  }, {\n    id: 'checkbox6',\n    label: 'Checkbox Attributes',\n    template: '<event-table :data=\"tableData\"></event-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"label\",\n            column2: \"checkboxDemo.samples6.row1column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"true-label\",\n            column2: \"checkboxDemo.samples6.row2column2\",\n            column3: \"String / Number\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"false-label\",\n            column2: \"checkboxDemo.samples6.row3column2\",\n            column3: \"String / Number\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"name\",\n            column2: \"checkboxDemo.samples6.row4column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"disabled\",\n            column2: \"checkboxDemo.samples6.row5column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"checked\",\n            column2: \"checkboxDemo.samples6.row6column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"indeterminate\",\n            column2: \"checkboxDemo.samples6.row7column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'checkbox7',\n    label: 'Checkbox-group Attributes',\n    template: '<event-table :data=\"tableData\"></event-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"size\",\n            column2: \"checkboxDemo.samples7.row1column2\",\n            column3: \"String\",\n            column4: \"large, small, mini\",\n            column5: \"\"\n          }, {\n            column1: \"fill\",\n            column2: \"checkboxDemo.samples7.row2column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"#20a0ff\"\n          }, {\n            column1: \"text-color\",\n            column2: \"checkboxDemo.samples7.row3column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"#ffffff\"\n          }, {\n            column1: \"min\",\n            column2: \"checkboxDemo.samples7.row4column2\",\n            column3: \"Number\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"max\",\n            column2: \"checkboxDemo.samples7.row5column2\",\n            column3: \"Number\",\n            column4: \"\",\n            column5: \"\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'checkbox8',\n    label: 'Checkbox Events',\n    template: '<event-table :data=\"tableData\"></event-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"change\",\n            column2: \"checkboxDemo.samples8.row1column2\",\n            column3: \"Event object\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }]\n};\nmodule.exports = checkboxDemo;","'use strict';\nvar collapseDemo = {\n  path: '/collapse',\n  name: 'collapse',\n  head: {\n    label: 'collapseDemo.label',\n    description: 'collapseDemo.description'\n  },\n  samples: [{\n    id: 'collapse1',\n    label: 'collapseDemo.samples1.label',\n    description: 'collapseDemo.samples1.description',\n    template: '<div class=\"source\"><vue-collapse v-model=\"activeNames\" @change=\"handleChange\"><vue-collapse-item :expand-on-click=\"false\" title=\"Consistency\" name=\"1\"><div>Consistent with real life: in line with the process and logic of real life, and comply with languages and habits that the users are used to;</div><div>Consistent within interface: all elements should be consistent, such as: design style, icons and texts, position of elements, etc.</div></vue-collapse-item><vue-collapse-item title=\"Feedback\" name=\"2\"><div>Operation feedback: enable the users to clearly perceive their operations by style updates and interactive effects;</div><div>Visual feedback: reflect current state by updating or rearranging elements of the page.</div></vue-collapse-item><vue-collapse-item title=\"Efficiency\" name=\"3\"><div>Simplify the process: keep operating process simple and intuitive;</div><div>Definite and clear: enunciate your intentions clearly so that the users can quickly understand and make decisions;</div><div>Easy to identify: the interface should be straightforward, which helps the users to identify and frees them from memorizing and recalling.</div></vue-collapse-item><vue-collapse-item title=\"Controllability\" name=\"4\"><div>Decision making: giving advices about operations is acceptable, but do not make decisions for the users;</div><div>Controlled consequences: users should be granted the freedom to operate, including canceling, aborting or terminating current operation.</div></vue-collapse-item></vue-collapse></div>',\n    parameter: {\n      data: function () {\n        return {\n          activeNames: ['1']\n        }\n      },\n      methods: {\n        handleChange: function (openIndexAry) {\n          this.$notify({ title: openIndexAry.toString() || \"[]\" });\n        }\n      }\n    },\n    code: '<vue-collapse v-model=\"activeNames\" @change=\"handleChange\">\\n' +\n      '  <vue-collapse-item :expand-on-click=\"false\" title=\"Consistency\" name=\"1\">\\n' +\n      '    <div>Consistent with real life: in line with the process and logic of real life, and comply with languages and habits that the users are used to;</div>\\n' +\n      '    <div>Consistent within interface: all elements should be consistent, such as: design style, icons and texts, position of elements, etc.</div>\\n' +\n      '  </vue-collapse-item>\\n' +\n      '  <vue-collapse-item title=\"Feedback\" name=\"2\">\\n' +\n      '    <div>Operation feedback: enable the users to clearly perceive their operations by style updates and interactive effects;</div>\\n' +\n      '    <div>Visual feedback: reflect current state by updating or rearranging elements of the page.</div>\\n' +\n      '  </vue-collapse-item>\\n' +\n      '  <vue-collapse-item title=\"Efficiency\" name=\"3\">\\n' +\n      '    <div>Simplify the process: keep operating process simple and intuitive;</div>\\n' +\n      '    <div>Definite and clear: enunciate your intentions clearly so that the users can quickly understand and make decisions;</div>\\n' +\n      '    <div>Easy to identify: the interface should be straightforward, which helps the users to identify and frees them from memorizing and recalling.</div>\\n' +\n      '  </vue-collapse-item>\\n' +\n      '  <vue-collapse-item title=\"Controllability\" name=\"4\">\\n' +\n      '    <div>Decision making: giving advices about operations is acceptable, but do not make decisions for the users;</div>\\n' +\n      '    <div>Controlled consequences: users should be granted the freedom to operate, including canceling, aborting or terminating current operation.</div>\\n' +\n      '  </vue-collapse-item>\\n' +\n      '</vue-collapse>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function() {\\n' +\n      '      return {\\n' +\n      '        activeNames: [\\'1\\']\\n' +\n      '      }\\n' +\n      '    },\\n' +\n      '    methods: {\\n' +\n      '      handleChange: function(openIndexAry) {\\n' +\n      '        this.$notify({title: openIndexAry.toString()||\"[]\"});\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'collapse2',\n    label: 'collapseDemo.samples2.label',\n    description: 'collapseDemo.samples2.description',\n    template: '<div class=\"source\"><vue-collapse v-model=\"activeNames\" accordion><vue-collapse-item title=\"Consistency\" name=\"1\"><div>Consistent with real life: in line with the process and logic of real life, and comply with languages and habits that the users are used to;</div><div>Consistent within interface: all elements should be consistent, such as: design style, icons and texts, position of elements, etc.</div></vue-collapse-item><vue-collapse-item title=\"Feedback\" name=\"2\"><div>Operation feedback: enable the users to clearly perceive their operations by style updates and interactive effects;</div><div>Visual feedback: reflect current state by updating or rearranging elements of the page.</div></vue-collapse-item><vue-collapse-item title=\"Efficiency\" name=\"3\"><div>Simplify the process: keep operating process simple and intuitive;</div><div>Definite and clear: enunciate your intentions clearly so that the users can quickly understand and make decisions;</div><div>Easy to identify: the interface should be straightforward, which helps the users to identify and frees them from memorizing and recalling.</div></vue-collapse-item><vue-collapse-item title=\"Controllability\" name=\"4\"><div>Decision making: giving advices about operations is acceptable, but do not make decisions for the users;</div><div>Controlled consequences: users should be granted the freedom to operate, including canceling, aborting or terminating current operation.</div></vue-collapse-item></vue-collapse></div>',\n    parameter: {\n      data: function () {\n        return {\n          activeNames: ['1']\n        }\n      }\n    },\n    code: '<vue-collapse v-model=\"activeNames\" accordion>\\n' +\n      '  <vue-collapse-item title=\"Consistency\" name=\"1\">\\n' +\n      '    <div>Consistent with real life: in line with the process and logic of real life, and comply with languages and habits that the users are used to;</div>\\n' +\n      '    <div>Consistent within interface: all elements should be consistent, such as: design style, icons and texts, position of elements, etc.</div>\\n' +\n      '  </vue-collapse-item>\\n' +\n      '  <vue-collapse-item title=\"Feedback\" name=\"2\">\\n' +\n      '    <div>Operation feedback: enable the users to clearly perceive their operations by style updates and interactive effects;</div>\\n' +\n      '    <div>Visual feedback: reflect current state by updating or rearranging elements of the page.</div>\\n' +\n      '  </vue-collapse-item>\\n' +\n      '  <vue-collapse-item title=\"Efficiency\" name=\"3\">\\n' +\n      '    <div>Simplify the process: keep operating process simple and intuitive;</div>\\n' +\n      '    <div>Definite and clear: enunciate your intentions clearly so that the users can quickly understand and make decisions;</div>\\n' +\n      '    <div>Easy to identify: the interface should be straightforward, which helps the users to identify and frees them from memorizing and recalling.</div>\\n' +\n      '  </vue-collapse-item>\\n' +\n      '  <vue-collapse-item title=\"Controllability\" name=\"4\">\\n' +\n      '    <div>Decision making: giving advices about operations is acceptable, but do not make decisions for the users;</div>\\n' +\n      '    <div>Controlled consequences: users should be granted the freedom to operate, including canceling, aborting or terminating current operation.</div>\\n' +\n      '  </vue-collapse-item>\\n' +\n      '</vue-collapse>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function() {\\n' +\n      '      return {\\n' +\n      '        activeNames: [\\'1\\']\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'collapse3',\n    label: 'collapseDemo.samples3.label',\n    description: 'collapseDemo.samples3.description',\n    template: '<div class=\"source\"><vue-collapse accordion><vue-collapse-item name=\"1\"><template slot=\"title\">Consistency<i style=\"margin-left:5px;\" class=\"header-icon vue-icon-information\"></i></template><div>Consistent with real life: in line with the process and logic of real life, and comply with languages and habits that the users are used to;</div><div>Consistent within interface: all elements should be consistent, such as: design style, icons and texts, position of elements, etc.</div></vue-collapse-item><vue-collapse-item title=\"Feedback\" name=\"2\"><div>Operation feedback: enable the users to clearly perceive their operations by style updates and interactive effects;</div><div>Visual feedback: reflect current state by updating or rearranging elements of the page.</div></vue-collapse-item><vue-collapse-item title=\"Efficiency\" name=\"3\"><div>Simplify the process: keep operating process simple and intuitive;</div><div>Definite and clear: enunciate your intentions clearly so that the users can quickly understand and make decisions;</div><div>Easy to identify: the interface should be straightforward, which helps the users to identify and frees them from memorizing and recalling.</div></vue-collapse-item><vue-collapse-item title=\"Controllability\" name=\"4\"><div>Decision making: giving advices about operations is acceptable, but do not make decisions for the users;</div><div>Controlled consequences: users should be granted the freedom to operate, including canceling, aborting or terminating current operation.</div></vue-collapse-item></vue-collapse></div>',\n    code: '<vue-collapse accordion>\\n' +\n      '  <vue-collapse-item name=\"1\">\\n' +\n      '    <template slot=\"title\">\\n' +\n      '      Consistency\\n' +\n      '      <i style=\"margin-left:5px;\" class=\"header-icon vue-icon-information\"></i>\\n' +\n      '    </template>\\n' +\n      '    <div>Consistent with real life: in line with the process and logic of real life, and comply with languages and habits that the users are used to;</div>\\n' +\n      '    <div>Consistent within interface: all elements should be consistent, such as: design style, icons and texts, position of elements, etc.</div>\\n' +\n      '  </vue-collapse-item>\\n' +\n      '  <vue-collapse-item title=\"Feedback\" name=\"2\">\\n' +\n      '    <div>Operation feedback: enable the users to clearly perceive their operations by style updates and interactive effects;</div>\\n' +\n      '    <div>Visual feedback: reflect current state by updating or rearranging elements of the page.</div>\\n' +\n      '  </vue-collapse-item>\\n' +\n      '  <vue-collapse-item title=\"Efficiency\" name=\"3\">\\n' +\n      '    <div>Simplify the process: keep operating process simple and intuitive;</div>\\n' +\n      '    <div>Definite and clear: enunciate your intentions clearly so that the users can quickly understand and make decisions;</div>\\n' +\n      '    <div>Easy to identify: the interface should be straightforward, which helps the users to identify and frees them from memorizing and recalling.</div>\\n' +\n      '  </vue-collapse-item>\\n' +\n      '  <vue-collapse-item title=\"Controllability\" name=\"4\">\\n' +\n      '    <div>Decision making: giving advices about operations is acceptable, but do not make decisions for the users;</div>\\n' +\n      '    <div>Controlled consequences: users should be granted the freedom to operate, including canceling, aborting or terminating current operation.</div>\\n' +\n      '  </vue-collapse-item>\\n' +\n      '</vue-collapse>'\n  }, {\n    id: 'collapse4',\n    label: 'Collapse Attributes',\n    template: '<event-table :data=\"tableData\"></event-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"accordion\",\n            column2: \"collapseDemo.samples4.row1column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"value\",\n            column2: \"collapseDemo.samples4.row2column2\",\n            column3: \"String / Array\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"expand-on-click-header\",\n            column2: \"treeDemo.samples9.row9column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"true\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'collapse5',\n    label: 'Collapse Events',\n    template: '<event-table :data=\"tableData\"></event-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"change\",\n            column2: \"collapseDemo.samples5.row1column2\",\n            column3: \"(activeNames: array|string)\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'collapse6',\n    label: 'Collapse Item Attributes',\n    template: '<event-table :data=\"tableData\"></event-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"name\",\n            column2: \"collapseDemo.samples6.row1column2\",\n            column3: \"String / Number\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"title\",\n            column2: \"collapseDemo.samples6.row2column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"expand-on-click\",\n            column2: \"collapseDemo.samples6.row3column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"true\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }]\n};\nmodule.exports = collapseDemo;\n","'use strict';\nvar colorDemo = {\n  path: '/color',\n  name: 'color',\n  head: {\n    label: 'colorDemo.label',\n    description: 'colorDemo.description'\n  },\n  samples: [{\n    id: 'color1',\n    label: 'colorDemo.samples1.label',\n    description: 'colorDemo.samples1.description',\n    template: '<div class=\"source\"><vue-row class=\"margin-bottom20\" type=\"flex\" justify=\"center\"><vue-col :span=\"6\"><span class=\"demonstration\">Default value</span></vue-col><vue-col :span=\"16\"><vue-color-picker v-model=\"color1\"></vue-color-picker></vue-col></vue-row><vue-row type=\"flex\" justify=\"center\"><vue-col :span=\"6\"><span class=\"demonstration\">No default value</span></vue-col><vue-col :span=\"16\"><vue-color-picker v-model=\"color2\"></vue-color-picker></vue-col></vue-row></div>',\n    parameter: {\n      data: function () {\n        return {\n          color1: '#409eff',\n          color2: null\n        }\n      }\n    },\n    code: '<span class=\"demonstration\">Default value</span>\\n' +\n      '<vue-color-picker v-model=\"color1\"></vue-color-picker>\\n' +\n      '<span class=\"demonstration\">No default value</span>\\n' +\n      '<vue-color-picker v-model=\"color2\"></vue-color-picker>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function(){\\n' +\n      '      return {\\n' +\n      '        color1: \"#409eff\",\\n' +\n      '        color2: null\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'color2',\n    label: 'colorDemo.samples2.label',\n    description: 'colorDemo.samples2.description',\n    template: '<div class=\"source\"><vue-color-picker v-model=\"color1\" show-alpha></vue-color-picker></div>',\n    parameter: {\n      data: function () {\n        return {\n          color1: 'rgba(19, 206, 102, 0.8)'\n        }\n      }\n    },\n    code: '<vue-color-picker v-model=\"color1\" show-alpha></vue-color-picker>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function(){\\n' +\n      '      return {\\n' +\n      '        color1: \"rgba(19, 206, 102, 0.8)\"\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'color3',\n    label: 'Attributes',\n    template: '<attr-table :data=\"tableData\"></attr-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"show-alpha\",\n            column2: \"colorDemo.samples3.row1column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"color-format\",\n            column2: \"colorDemo.samples3.row2column2\",\n            column3: \"String\",\n            column4: \"hsl, hsv, hex, rgb\",\n            column5: \"colorDemo.samples3.row2column5\"\n          }, {\n            column1: \"disabled\",\n            column2: \"colorDemo.samples4.row2column2\",\n            column3: \"Boolean\",\n            column5: \"colorDemo.samples4.row2column5\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'color4',\n    label: ' Events',\n    template: '<event-table :data=\"tableData\"></event-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"change\",\n            column2: \"colorDemo.samples5.row1column2\",\n            column3: \"colorDemo.samples5.row1column3\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }]\n};\nmodule.exports = colorDemo;\n\n","'use strict';\nvar dateDemo = {\n  path: '/date',\n  name: 'date',\n  head: {\n    label: 'dateDemo.label',\n    description: 'dateDemo.description'\n  },\n  samples: [{\n    id: 'date1',\n    label: 'dateDemo.samples1.label',\n    description: 'dateDemo.samples1.description',\n    template: '<div class=\"source\"><vue-row class=\"margin-bottom20\" type=\"flex\" justify=\"center\"><vue-col :span=\"6\"><span class=\"demonstration\">{{$t(\\'dateDemo.samples1.defaultLabel\\')}}</span></vue-col><vue-col :span=\"16\"><vue-date-picker v-model=\"value1\" type=\"date\" :placeholder=\"$t(\\'dateDemo.samples1.defaultPlaceholder\\')\" :picker-options=\"pickerOptions0\"></vue-date-picker></vue-col></vue-row><vue-row type=\"flex\" justify=\"center\"><vue-col :span=\"6\"><span class=\"demonstration\">{{$t(\\'dateDemo.samples1.optionsLabel\\')}}</span></vue-col><vue-col :span=\"16\"><vue-date-picker v-model=\"value2\" align=\"right\" type=\"date\" :placeholder=\"$t(\\'dateDemo.samples1.defaultPlaceholder\\')\" :picker-options=\"pickerOptions1\"></vue-date-picker></vue-col></vue-row></div>',\n    parameter: {\n      data: function () {\n        return {\n          pickerOptions0: {\n            disabledDate: function (date) {\n              return date.getTime() < VueUtil.addDate((new Date), -1).getTime();\n            }\n          },\n          pickerOptions1: {\n            shortcuts: [{\n              text: this.$t('dateDemo.samples1.todayLabel'),\n              onClick: function (picker) {\n                picker.$emit('pick', new Date);\n              }\n            }, {\n              text: this.$t('dateDemo.samples1.yesterdayLabel'),\n              onClick: function (picker) {\n                var date = VueUtil.addDate((new Date), -1);\n                picker.$emit('pick', date);\n              }\n            }, {\n              text: this.$t('dateDemo.samples1.weekAgoLabel'),\n              onClick: function (picker) {\n                var date = VueUtil.addDate((new Date), -1, 'week');\n                picker.$emit('pick', date);\n              }\n            }]\n          },\n          value1: '',\n          value2: ''\n        };\n      }\n    },\n    code: '<span class=\"demonstration\">{{$t(\\'dateDemo.samples1.defaultLabel\\')}}</span>\\n' +\n      '<vue-date-picker v-model=\"value1\" type=\"date\" :placeholder=\"$t(\\'dateDemo.samples1.defaultPlaceholder\\')\" :picker-options=\"pickerOptions0\"></vue-date-picker>\\n' +\n      '<span class=\"demonstration\">{{$t(\\'dateDemo.samples1.optionsLabel\\')}}</span>\\n' +\n      '<vue-date-picker v-model=\"value2\" align=\"right\" type=\"date\" :placeholder=\"$t(\\'dateDemo.samples1.defaultPlaceholder\\')\" :picker-options=\"pickerOptions1\"></vue-date-picker>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function(){\\n' +\n      '      return {\\n' +\n      '        pickerOptions0: {\\n' +\n      '          disabledDate: function(time) {\\n' +\n      '            return time.getTime() < VueUtil.addDate((new Date), -1).getTime();\\n' +\n      '          }\\n' +\n      '        },\\n' +\n      '        pickerOptions1: {\\n' +\n      '          shortcuts: [{\\n' +\n      '            text: this.$t(\"dateDemo.samples1.todayLabel\"),\\n' +\n      '            onClick: function(picker) {\\n' +\n      '              picker.$emit(\"pick\", new Date);\\n' +\n      '            }\\n' +\n      '          }, {\\n' +\n      '            text: this.$t(\"dateDemo.samples1.yesterdayLabel\"),\\n' +\n      '            onClick: function(picker) {\\n' +\n      '              var date = VueUtil.addDate((new Date), -1);\\n' +\n      '              picker.$emit(\"pick\", date);\\n' +\n      '            }\\n' +\n      '          }, {\\n' +\n      '            text: this.$t(\"dateDemo.samples1.weekAgoLabel\"),\\n' +\n      '            onClick: function(picker) {\\n' +\n      '              var date = VueUtil.addDate((new Date), -1, \"week\");\\n' +\n      '              picker.$emit(\"pick\", date);\\n' +\n      '            }\\n' +\n      '          }]\\n' +\n      '        },\\n' +\n      '        value1: \"\",\\n' +\n      '        value2: \"\"\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'date2',\n    label: 'dateDemo.samples2.label',\n    description: 'dateDemo.samples2.description',\n    template: '<div class=\"source\"><vue-row class=\"margin-bottom20\" type=\"flex\" justify=\"center\"><vue-col :span=\"6\"><span class=\"demonstration\">{{$t(\"dateDemo.samples2.weekLabel\")}}</span></vue-col><vue-col :span=\"16\"><vue-date-picker v-model=\"value1\" type=\"week\" :format=\"$t(\\'dateDemo.samples2.weekFormat\\')\" :placeholder=\"$t(\\'dateDemo.samples2.weekPlaceholder\\')\"></vue-date-picker></vue-col></vue-row><vue-row class=\"margin-bottom20\" type=\"flex\" justify=\"center\"><vue-col :span=\"6\"><span class=\"demonstration\">{{$t(\"dateDemo.samples2.monthLabel\")}}</span></vue-col><vue-col :span=\"16\"><vue-date-picker v-model=\"value2\" type=\"month\" :placeholder=\"$t(\\'dateDemo.samples2.monthPlaceholder\\')\"></vue-date-picker></vue-col></vue-row><vue-row type=\"flex\" justify=\"center\"><vue-col :span=\"6\"><span class=\"demonstration\">{{$t(\"dateDemo.samples2.yearLabel\")}}</span></vue-col><vue-col :span=\"16\"><vue-date-picker v-model=\"value3\" type=\"year\" :placeholder=\"$t(\\'dateDemo.samples2.yearPlaceholder\\')\"></vue-date-picker></vue-col></vue-row></div>',\n    parameter: {\n      data: function () {\n        return {\n          value1: '',\n          value2: '',\n          value3: ''\n        };\n      }\n    },\n    code: '<span class=\"demonstration\">{{$t(\"dateDemo.samples2.weekLabel\")}}</span>\\n' +\n      '<vue-date-picker v-model=\"value1\" type=\"week\" :format=\"$t(\\'dateDemo.samples2.weekFormat\\')\" :placeholder=\"$t(\\'dateDemo.samples2.weekPlaceholder\\')\"></vue-date-picker>\\n' +\n      '<span class=\"demonstration\">{{$t(\"dateDemo.samples2.monthLabel\")}}</span>\\n' +\n      '<vue-date-picker v-model=\"value2\" type=\"month\" :placeholder=\"$t(\\'dateDemo.samples2.monthPlaceholder\\')\"></vue-date-picker>\\n' +\n      '<span class=\"demonstration\">{{$t(\"dateDemo.samples2.yearLabel\")}}</span>\\n' +\n      '<vue-date-picker v-model=\"value3\" type=\"year\" :placeholder=\"$t(\\'dateDemo.samples2.yearPlaceholder\\')\"></vue-date-picker>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function(){\\n' +\n      '      return {\\n' +\n      '        value1: \"\",\\n' +\n      '        value2: \"\",\\n' +\n      '        value3: \"\"\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'date3',\n    label: 'dateDemo.samples3.label',\n    description: 'dateDemo.samples3.description',\n    template: '<div class=\"source\"><vue-row class=\"margin-bottom20\" type=\"flex\" justify=\"center\"><vue-col :span=\"6\"><span class=\"demonstration\">{{$t(\\'dateDemo.samples3.defaultLabel\\')}}</span></vue-col><vue-col :span=\"16\"><vue-date-picker v-model=\"value1\" type=\"daterange\" :placeholder=\"$t(\\'dateDemo.samples3.defaultPlaceholder\\')\"></vue-date-picker></vue-col></vue-row><vue-row type=\"flex\" justify=\"center\"><vue-col :span=\"6\"><span class=\"demonstration\">{{$t(\\'dateDemo.samples3.optionsLabel\\')}}</span></vue-col><vue-col :span=\"16\"><vue-date-picker v-model=\"value2\" align=\"right\" type=\"daterange\" :placeholder=\"$t(\\'dateDemo.samples3.defaultPlaceholder\\')\" :picker-options=\"pickerOptions1\"></vue-date-picker></vue-col></vue-row></div>',\n    parameter: {\n      data: function () {\n        return {\n          value1: '',\n          value2: '',\n          pickerOptions1: {\n            shortcuts: [{\n              text: this.$t('dateDemo.samples3.lastWeekLabel'),\n              onClick: function (picker) {\n                var end = new Date;\n                var start = VueUtil.addDate(end, -1, 'week');\n                picker.$emit(\"pick\", [start, end]);\n              }\n            }, {\n              text: this.$t('dateDemo.samples3.lastMonthLabel'),\n              onClick: function (picker) {\n                var end = new Date;\n                var start = VueUtil.addDate(end, -1, 'month');\n                picker.$emit(\"pick\", [start, end]);\n              }\n            }, {\n              text: this.$t('dateDemo.samples3.last3MonthLabel'),\n              onClick: function (picker) {\n                var end = new Date;\n                var start = VueUtil.addDate(end, -3, 'month');\n                picker.$emit(\"pick\", [start, end]);\n              }\n            }]\n          }\n        };\n      }\n    },\n    code: '<span class=\"demonstration\">{{$t(\\'dateDemo.samples3.defaultLabel\\')}}</span>\\n' +\n      '<vue-date-picker v-model=\"value1\" type=\"daterange\" :placeholder=\"$t(\\'dateDemo.samples3.defaultPlaceholder\\')\"></vue-date-picker>\\n' +\n      '<span class=\"demonstration\">{{$t(\\'dateDemo.samples3.optionsLabel\\')}}</span>\\n' +\n      '<vue-date-picker v-model=\"value2\" align=\"right\" type=\"daterange\" :placeholder=\"$t(\\'dateDemo.samples3.defaultPlaceholder\\')\" :picker-options=\"pickerOptions1\"></vue-date-picker>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function(){\\n' +\n      '      return {\\n' +\n      '        value1: \"\",\\n' +\n      '        value2: \"\",\\n' +\n      '        pickerOptions1: {\\n' +\n      '          shortcuts: [{\\n' +\n      '            text: this.$t(\"dateDemo.samples3.lastWeekLabel\"),\\n' +\n      '            onClick: function(picker) {\\n' +\n      '              var end = new Date;\\n' +\n      '              var start = VueUtil.addDate(end, -1, \"week\");\\n' +\n      '              picker.$emit(\"pick\", [start, end]);\\n' +\n      '            }\\n' +\n      '          }, {\\n' +\n      '            text: this.$t(\"dateDemo.samples3.lastMonthLabel\"),\\n' +\n      '            onClick: function(picker) {\\n' +\n      '              var end = new Date;\\n' +\n      '              var start = VueUtil.addDate(end, -1, \"month\");\\n' +\n      '              picker.$emit(\"pick\", [start, end]);\\n' +\n      '            }\\n' +\n      '          }, {\\n' +\n      '            text: this.$t(\"dateDemo.samples3.last3MonthLabel\"),\\n' +\n      '            onClick: function(picker) {\\n' +\n      '              var end = new Date;\\n' +\n      '              var start = VueUtil.addDate(end, -3, \"month\");\\n' +\n      '              picker.$emit(\"pick\", [start, end]);\\n' +\n      '            }\\n' +\n      '          }]\\n' +\n      '        }\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'date4',\n    label: 'Attributes',\n    template: '<attr-table :data=\"tableData\"></attr-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"readonly\",\n            column2: \"dateDemo.samples4.row1column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"true\"\n          }, {\n            column1: \"disabled\",\n            column2: \"dateDemo.samples4.row2column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"editable\",\n            column2: \"dateDemo.samples4.row21column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"true\"\n          }, {\n            column1: \"clearable\",\n            column2: \"dateDemo.samples4.row3column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"true\"\n          }, {\n            column1: \"size\",\n            column2: \"dateDemo.samples4.row4column2\",\n            column3: \"String\",\n            column4: \"large, small, mini\",\n            column5: \"\"\n          }, {\n            column1: \"placeholder\",\n            column2: \"dateDemo.samples4.row5column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"vue.datepicker.selectDate\"\n          }, {\n            column1: \"start-placeholder\",\n            column2: \"dateDemo.samples4.row51column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"end-placeholder\",\n            column2: \"dateDemo.samples4.row52column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"type\",\n            column2: \"dateDemo.samples4.row6column2\",\n            column3: \"String\",\n            column4: \"year/month/date/week/datetime/datetimerange/daterange/monthrange\",\n            column5: \"date\"\n          }, {\n            column1: \"format\",\n            column2: \"dateDemo.samples4.row7column2\",\n            column3: \"String\",\n            column4: \"dateDemo.samples4.row7column4\",\n            column5: \"yyyy-MM-dd\"\n          }, {\n            column1: \"align\",\n            column2: \"dateDemo.samples4.row8column2\",\n            column3: \"String\",\n            column4: \"left, center, right\",\n            column5: \"left\"\n          }, {\n            column1: \"popper-class\",\n            column2: \"dateDemo.samples4.row9column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"range-separator\",\n            column2: \"dateDemo.samples4.row10column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"default-value\",\n            column2: \"dateDemo.samples4.row11column2\",\n            column3: \"Date\",\n            column4: \"dateDemo.samples4.row11column4\",\n            column5: \"\"\n          }, {\n            column1: \"value-format\",\n            column2: \"dateDemo.samples4.row111column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"picker-options\",\n            column2: \"dateDemo.samples4.row12column2\",\n            column3: \"Object\",\n            column4: \"\",\n            column5: \"{}\"\n          }, {\n            column1: \"show-mobile-ui\",\n            column2: \"dateDemo.samples8.row1column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"true\"\n          }, {\n            column1: \"value\",\n            column2: \"dateDemo.samples8.row2column2\",\n            column3: \"Date | String | Number | Array\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"text-align\",\n            column2: \"dateDemo.samples8.row3column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"min-date\",\n            column2: \"dateDemo.samples8.row4column2\",\n            column3: \"Date\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"max-date\",\n            column2: \"dateDemo.samples8.row4column3\",\n            column3: \"Date\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"prefix-icon\",\n            column2: \"dateDemo.samples8.row5column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"clear-icon\",\n            column2: \"dateDemo.samples8.row5column3\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"vue-icon-close\"\n          }, {\n            column1: \"title\",\n            column2: \"dateDemo.samples8.row8column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"start-title\",\n            column2: \"dateDemo.samples8.row9column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"end-title\",\n            column2: \"dateDemo.samples8.row9column3\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"confirm-button-text\",\n            column2: \"dateDemo.samples8.row10column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"cancel-button-text\",\n            column2: \"dateDemo.samples8.row10column3\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"item-height\",\n            column2: \"dateDemo.samples8.row12column2\",\n            column3: \"String | Number\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"visible-item-count\",\n            column2: \"dateDemo.samples8.row13column2\",\n            column3: \"Number\",\n            column4: \"\",\n            column5: \"5\"\n          }, {\n            column1: \"swipe-duration\",\n            column2: \"dateDemo.samples8.row14column2\",\n            column3: \"String | Number\",\n            column4: \"\",\n            column5: \"1000\"\n          }, {\n            column1: \"formatter\",\n            column2: \"dateDemo.samples8.row15column2\",\n            column3: \"Function\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"filter\",\n            column2: \"dateDemo.samples8.row16column2\",\n            column3: \"Function\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"default-pick\",\n            column2: \"dateDemo.samples8.row17column2\",\n            column3: \"Date | String | Number | Array\",\n            column4: \"\",\n            column5: \"\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'date5',\n    label: 'Picker Options',\n    template: '<attr-table :data=\"tableData\"></attr-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"shortcuts\",\n            column2: \"dateDemo.samples5.row1column2\",\n            column3: \"Object / Array\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"disabledDate\",\n            column2: \"dateDemo.samples5.row2column2\",\n            column3: \"Function\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"firstDayOfWeek\",\n            column2: \"dateDemo.samples5.row3column2\",\n            column3: \"Number\",\n            column4: \"1~7\",\n            column5: \"7\"\n          }, {\n            column1: \"onPick\",\n            column2: \"dateDemo.samples5.row4column2\",\n            column3: \"Function({ maxDate, minDate })\",\n            column4: \"\",\n            column5: \"\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'date6',\n    label: ' Shortcuts',\n    template: '<attr-table :data=\"tableData\"></attr-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"text\",\n            column2: \"dateDemo.samples6.row1column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"onClick\",\n            column2: \"dateDemo.samples6.row2column2\",\n            column3: \"Function\",\n            column4: \"\",\n            column5: \"\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'date7',\n    label: 'Events',\n    template: '<event-table :data=\"tableData\"></event-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"change\",\n            column2: \"dateDemo.samples7.row1column2\",\n            column3: \"dateDemo.samples7.row1column3\"\n          },\n          {\n            column1: \"confirm\",\n            column2: \"dateDemo.samples8.row16column2\",\n            column3: \"dateDemo.samples8.row16column3\"\n          },\n          {\n            column1: \"cancel\",\n            column2: \"dateDemo.samples8.row17column2\",\n            column3: \"dateDemo.samples8.row16column3\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'date8',\n    label: 'Methods',\n    template: '<method-table :data=\"tableData\"></method-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"focus\",\n            column2: \"inputDemo.samples16.row1column2\",\n            column3: \"\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }]\n};\nmodule.exports = dateDemo;\n","'use strict';\nvar dateTimeDemo = {\n  path: '/dateTime',\n  name: 'dateTime',\n  head: {\n    label: 'datetimeDemo.label',\n    description: 'datetimeDemo.description'\n  },\n  samples: [{\n    id: 'dateTime1',\n    label: 'datetimeDemo.samples1.label',\n    description: 'datetimeDemo.samples1.description',\n    template: '<div class=\"source\"><vue-row class=\"margin-bottom20\" type=\"flex\" justify=\"center\"><vue-col :span=\"6\"><span class=\"demonstration\">{{$t(\\'datetimeDemo.samples1.defaultLabel\\')}}</span></vue-col><vue-col :span=\"16\"><vue-date-picker v-model=\"value1\" type=\"datetime\" :placeholder=\"$t(\\'datetimeDemo.samples1.defaultPlaceholder\\')\"></vue-date-picker></vue-col></vue-row><vue-row type=\"flex\" justify=\"center\"><vue-col :span=\"6\"><span class=\"demonstration\">{{$t(\\'datetimeDemo.samples1.optionsLabel\\')}}</span></vue-col><vue-col :span=\"16\"><vue-date-picker v-model=\"value2\" align=\"right\" type=\"datetime\" :placeholder=\"$t(\\'datetimeDemo.samples1.defaultPlaceholder\\')\" :picker-options=\"pickerOptions1\"></vue-date-picker></vue-col></vue-row></div>',\n    parameter: {\n      data: function () {\n        return {\n          pickerOptions1: {\n            shortcuts: [{\n              text: this.$t('datetimeDemo.samples1.todayLabel'),\n              onClick: function (picker) {\n                picker.$emit('pick', new Date);\n              }\n            }, {\n              text: this.$t('datetimeDemo.samples1.yesterdayLabel'),\n              onClick: function (picker) {\n                var date = VueUtil.addDate((new Date), -1);\n                picker.$emit('pick', date);\n              }\n            }, {\n              text: this.$t('datetimeDemo.samples1.weekAgoLabel'),\n              onClick: function (picker) {\n                var date = VueUtil.addDate((new Date), -1, 'week');\n                picker.$emit('pick', date);\n              }\n            }]\n          },\n          value1: \"\",\n          value2: \"\"\n        };\n      }\n    },\n    code: '<span class=\"demonstration\">{{$t(\\'datetimeDemo.samples1.defaultLabel\\')}}</span>\\n' +\n      '<vue-date-picker v-model=\"value1\" type=\"datetime\" :placeholder=\"$t(\\'datetimeDemo.samples1.defaultPlaceholder\\')\"></vue-date-picker>\\n' +\n      '<span class=\"demonstration\">{{$t(\\'datetimeDemo.samples1.optionsLabel\\')}}</span>\\n' +\n      '<vue-date-picker v-model=\"value2\" align=\"right\" type=\"datetime\" :placeholder=\"$t(\\'datetimeDemo.samples1.defaultPlaceholder\\')\" :picker-options=\"pickerOptions1\"></vue-date-picker>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function(){\\n' +\n      '      return {\\n' +\n      '        pickerOptions1: {\\n' +\n      '          shortcuts: [{\\n' +\n      '            text: this.$t(\"datetimeDemo.samples1.todayLabel\"),\\n' +\n      '            onClick: function(picker) {\\n' +\n      '              picker.$emit(\"pick\", new Date);\\n' +\n      '            }\\n' +\n      '          }, {\\n' +\n      '            text: this.$t(\"datetimeDemo.samples1.yesterdayLabel\"),\\n' +\n      '            onClick: function(picker) {\\n' +\n      '              var date = VueUtil.addDate((new Date), -1);\\n' +\n      '              picker.$emit(\"pick\", date);\\n' +\n      '            }\\n' +\n      '          }, {\\n' +\n      '            text: this.$t(\"datetimeDemo.samples1.weekAgoLabel\"),\\n' +\n      '            onClick: function(picker) {\\n' +\n      '              var date = VueUtil.addDate((new Date), -1, \"week\");\\n' +\n      '              picker.$emit(\"pick\", date);\\n' +\n      '            }\\n' +\n      '          }]\\n' +\n      '        },\\n' +\n      '        value1: \"\",\\n' +\n      '        value2: \"\"\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'dateTime2',\n    label: 'datetimeDemo.samples2.label',\n    description: 'datetimeDemo.samples2.description',\n    template: '<div class=\"source\"><vue-row class=\"margin-bottom20\" type=\"flex\" justify=\"center\"><vue-col :span=\"6\"><span class=\"demonstration\">{{$t(\\'datetimeDemo.samples2.defaultLabel\\')}}</span></vue-col><vue-col :span=\"16\"><vue-date-picker v-model=\"value1\" type=\"datetimerange\" :placeholder=\"$t(\\'datetimeDemo.samples2.defaultPlaceholder\\')\"></vue-date-picker></vue-col></vue-row><vue-row type=\"flex\" justify=\"center\"><vue-col :span=\"6\"><span class=\"demonstration\">{{$t(\\'datetimeDemo.samples2.optionsLabel\\')}}</span></vue-col><vue-col :span=\"16\"><vue-date-picker v-model=\"value2\" align=\"right\" type=\"datetimerange\" :placeholder=\"$t(\\'datetimeDemo.samples2.defaultPlaceholder\\')\" :picker-options=\"pickerOptions1\"></vue-date-picker></vue-col></vue-row></div>',\n    parameter: {\n      data: function () {\n        return {\n          pickerOptions1: {\n            shortcuts: [{\n              text: this.$t('datetimeDemo.samples2.lastWeekLabel'),\n              onClick: function (picker) {\n                var end = new Date;\n                var start = VueUtil.addDate(end, -1, 'week');\n                picker.$emit(\"pick\", [start, end]);\n              }\n            }, {\n              text: this.$t('datetimeDemo.samples2.lastMonthLabel'),\n              onClick: function (picker) {\n                var end = new Date;\n                var start = VueUtil.addDate(end, -1, 'month');\n                picker.$emit(\"pick\", [start, end]);\n              }\n            }, {\n              text: this.$t('datetimeDemo.samples2.last3MonthLabel'),\n              onClick: function (picker) {\n                var end = new Date;\n                var start = VueUtil.addDate(end, -3, 'month');\n                picker.$emit(\"pick\", [start, end]);\n              }\n            }]\n          },\n          value1: [new Date, VueUtil.addDate((new Date), 5, 'week')],\n          value2: \"\"\n        };\n      }\n    },\n    code: '<span class=\"demonstration\">{{$t(\\'datetimeDemo.samples2.defaultLabel\\')}}</span>\\n' +\n      '<vue-date-picker v-model=\"value1\" type=\"datetimerange\" :placeholder=\"$t(\\'datetimeDemo.samples2.defaultPlaceholder\\')\"></vue-date-picker>\\n' +\n      '<span class=\"demonstration\">{{$t(\\'datetimeDemo.samples2.optionsLabel\\')}}</span>\\n' +\n      '<vue-date-picker v-model=\"value2\" align=\"right\" type=\"datetimerange\" :placeholder=\"$t(\\'datetimeDemo.samples2.defaultPlaceholder\\')\" :picker-options=\"pickerOptions1\"></vue-date-picker>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function(){\\n' +\n      '      return {\\n' +\n      '        pickerOptions1: {\\n' +\n      '          shortcuts: [{\\n' +\n      '            text: this.$t(\"datetimeDemo.samples2.lastWeekLabel\"),\\n' +\n      '            onClick: function(picker) {\\n' +\n      '              var end = new Date;\\n' +\n      '              var start = VueUtil.addDate(end, -1, \"week\");\\n' +\n      '              picker.$emit(\"pick\", [start, end]);\\n' +\n      '            }\\n' +\n      '          }, {\\n' +\n      '            text: this.$t(\"datetimeDemo.samples2.lastMonthLabel\"),\\n' +\n      '            onClick: function(picker) {\\n' +\n      '              var end = new Date;\\n' +\n      '              var start = VueUtil.addDate(end, -1, \"month\");\\n' +\n      '              picker.$emit(\"pick\", [start, end]);\\n' +\n      '            }\\n' +\n      '          }, {\\n' +\n      '            text: this.$t(\"datetimeDemo.samples2.last3MonthLabel\"),\\n' +\n      '            onClick: function(picker) {\\n' +\n      '              var end = new Date;\\n' +\n      '              var start = VueUtil.addDate(end, -3, \"month\");\\n' +\n      '              picker.$emit(\"pick\", [start, end]);\\n' +\n      '            }\\n' +\n      '          }]\\n' +\n      '        },\\n' +\n      '        value1: [new Date, VueUtil.addDate((new Date), 5, \"week\")],\\n' +\n      '        value2: \"\"\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'dateTime3',\n    label: 'Attributes',\n    template: '<attr-table :data=\"tableData\"></attr-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"readonly\",\n            column2: \"datetimeDemo.samples3.row1column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"true\"\n          }, {\n            column1: \"disabled\",\n            column2: \"datetimeDemo.samples3.row2column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"editable\",\n            column2: \"datetimeDemo.samples3.row21column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"true\"\n          }, {\n            column1: \"clearable\",\n            column2: \"datetimeDemo.samples3.row3column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"true\"\n          }, {\n            column1: \"size\",\n            column2: \"datetimeDemo.samples3.row4column2\",\n            column3: \"String\",\n            column4: \"large, small, mini\",\n            column5: \"\"\n          }, {\n            column1: \"placeholder\",\n            column2: \"datetimeDemo.samples3.row5column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"start-placeholder\",\n            column2: \"datetimeDemo.samples3.row51column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"end-placeholder\",\n            column2: \"datetimeDemo.samples3.row52column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          },{\n            column1: \"time-arrow-control\",\n            column2: \"datetimeDemo.samples3.row54column2\",\n            column3: \"boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"type\",\n            column2: \"datetimeDemo.samples3.row6column2\",\n            column3: \"String\",\n            column4: \"year/month/date/week/datetime/datetimerange/daterange\",\n            column5: \"date\"\n          }, {\n            column1: \"format\",\n            column2: \"datetimeDemo.samples3.row7column2\",\n            column3: \"String\",\n            column4: \"datetimeDemo.samples3.row7column4\",\n            column5: \"yyyy-MM-dd\"\n          }, {\n            column1: \"align\",\n            column2: \"datetimeDemo.samples3.row8column2\",\n            column3: \"String\",\n            column4: \"left, center, right\",\n            column5: \"left\"\n          }, {\n            column1: \"popper-class\",\n            column2: \"datetimeDemo.samples3.row9column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"range-separator\",\n            column2: \"datetimeDemo.samples3.row10column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"value-format\",\n            column2: \"datetimeDemo.samples3.row56column2\",\n            column3: \"string\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"picker-options\",\n            column2: \"datetimeDemo.samples3.row11column2\",\n            column3: \"Object\",\n            column4: \"\",\n            column5: \"{}\"\n          }, {\n            column1: \"show-mobile-ui\",\n            column2: \"dateDemo.samples8.row1column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"true\"\n          }, {\n            column1: \"value\",\n            column2: \"dateDemo.samples8.row2column2\",\n            column3: \"Date | String | Number | Array\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"text-align\",\n            column2: \"dateDemo.samples8.row3column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"min-date\",\n            column2: \"dateDemo.samples8.row4column2\",\n            column3: \"Date\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"max-date\",\n            column2: \"dateDemo.samples8.row4column3\",\n            column3: \"Date\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"prefix-icon\",\n            column2: \"dateDemo.samples8.row5column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"clear-icon\",\n            column2: \"dateDemo.samples8.row5column3\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"vue-icon-close\"\n          }, {\n            column1: \"title\",\n            column2: \"dateDemo.samples8.row8column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"start-title\",\n            column2: \"dateDemo.samples8.row9column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"end-title\",\n            column2: \"dateDemo.samples8.row9column3\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"confirm-button-text\",\n            column2: \"dateDemo.samples8.row10column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"cancel-button-text\",\n            column2: \"dateDemo.samples8.row10column3\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"item-height\",\n            column2: \"dateDemo.samples8.row12column2\",\n            column3: \"String | Number\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"visible-item-count\",\n            column2: \"dateDemo.samples8.row13column2\",\n            column3: \"Number\",\n            column4: \"\",\n            column5: \"5\"\n          }, {\n            column1: \"swipe-duration\",\n            column2: \"dateDemo.samples8.row14column2\",\n            column3: \"String | Number\",\n            column4: \"\",\n            column5: \"1000\"\n          }, {\n            column1: \"formatter\",\n            column2: \"dateDemo.samples8.row15column2\",\n            column3: \"Function\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"filter\",\n            column2: \"dateDemo.samples8.row16column2\",\n            column3: \"Function\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"default-pick\",\n            column2: \"dateDemo.samples8.row17column2\",\n            column3: \"Date | String | Number | Array\",\n            column4: \"\",\n            column5: \"\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'dateTime4',\n    label: 'Picker Options',\n    template: '<attr-table :data=\"tableData\"></attr-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"shortcuts\",\n            column2: \"datetimeDemo.samples4.row1column2\",\n            column3: \"Object/array\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"disabledDate\",\n            column2: \"datetimeDemo.samples4.row2column2\",\n            column3: \"Function\",\n            column4: \"\",\n            column5: \"\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'dateTime5',\n    label: ' Shortcuts',\n    template: '<attr-table :data=\"tableData\"></attr-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"text\",\n            column2: \"datetimeDemo.samples5.row1column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"onClick\",\n            column2: \"datetimeDemo.samples5.row2column2\",\n            column3: \"Function\",\n            column4: \"\",\n            column5: \"\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'dateTime6',\n    label: 'Events',\n    template: '<event-table :data=\"tableData\"></event-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"change\",\n            column2: \"datetimeDemo.samples6.row1column2\",\n            column3: \"datetimeDemo.samples6.row1column3\"\n          },\n          {\n            column1: \"confirm\",\n            column2: \"dateDemo.samples8.row16column2\",\n            column3: \"dateDemo.samples8.row16column3\"\n          },\n          {\n            column1: \"cancel\",\n            column2: \"dateDemo.samples8.row17column2\",\n            column3: \"dateDemo.samples8.row16column3\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'dateTime7',\n    label: 'Methods',\n    template: '<method-table :data=\"tableData\"></method-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"focus\",\n            column2: \"inputDemo.samples16.row1column2\",\n            column3: \"\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }]\n};\nmodule.exports = dateTimeDemo;\n","﻿'use strict';\nvar DemoLangEn = {\n  main: {\n    title1: 'Guide',\n    title2: 'Components',\n    title3: 'Example',\n    title4: 'Feedback',\n    title5: 'Extensions',\n    title6: 'Gantt Chart',\n    title7: 'Charts',\n    title8: 'Excel Export/Import',\n    title9: 'Mobile Component',\n    title10: 'Pic Marker',\n    radiolabel1: '中',\n    radiolabel2: '日',\n    radiolabel3: 'EN',\n    code: '代码',\n    line1: '网站快速成型工具',\n    line21: '只为守护世界和平!',\n    line22: '只为让你少加班!',\n    line23: '只为成就这样的你: ',\n    line24: '产品设计师',\n    line25: '交互设计师',\n    line26: '视觉设计师',\n    line27: '产品经理',\n    line28: '前端工程师',\n    table: {\n      method: '方法名',\n      description: '概述',\n      usage: '用法',\n      parameters: '参数',\n      type: '类型',\n      acceptedValues: '可选值',\n      defaultValue: '默认值',\n      event: '事件',\n      name: '名称'\n    }\n  },\n  installDemo: {\n    label: 'Quick Start',\n    samples1: {\n      label: 'Installation',\n      description: '在页面上引入 js 和 css 文件即可开始使用.'\n    },\n    samples6: {\n      label: 'npm Install',\n      description: 'Installing with npm is recommended and it works seamlessly with webpack.'\n    },\n    samples2: {\n      description: '通过 vue 组件可以很容易地写出一个 Hello world 页面.'\n    },\n    samples3: {\n      description: '组件内封装的一些常用方法，注意：在&lttemplate&gt中使用VueUtil的方式为 $vu.函数名',\n      row1column2: '判断参数是否定义(undefined或null状态为未定义)',\n      row2column2: '判断参数是否为String类型',\n      row3column2: '判断参数是否为Number类型',\n      row4column2: '判断参数是否为Boolean类型',\n      row5column2: '判断参数是否为File类型',\n      row6column2: '判断参数是否为Object类型',\n      row7column2: '判断参数是否为Array类型',\n      row8column2: '判断参数是否为Function类型',\n      row9column2: '判断参数是否为Date类型',\n      row10column2: '判断参数是否为NodeList类型',\n      row11column2: '判断参数是否为Element类型',\n      row12column2: '判断参数是否为VNode类型',\n      row13column2: '参数转换为String类型并返回',\n      row14column2: '参数转换为Date类型并返回, 如果失败返回null',\n      row15column2: '将参数按指定日期格式转换为String类型并返回, 如果失败返回null',\n      row16column2: '将参数按指定日期格式转换为Date类型并返回, 如果失败返回null',\n      row17column2: '根据年月获取当月的天数, 失败返回null',\n      row18column2: '根据日期获取当月第一天是星期几, 失败返回null',\n      row19column2: '根据日期获取本周是第几周, 失败返回null',\n      row20column2: '根据类型返回指定日期的向前或向后日期, 如果失败返回null',\n      row21column2: '对包含length属性的对象进行循环, 类似forEach方法',\n      row22column2: '循环对象的可枚举属性',\n      row23column2: '去除参数的首尾空格并返回, 参数不为String时返回\"\"',\n      row24column2: '将来自一个或多个源对象中的值复制到一个目标对象, 只复制可枚举属性',\n      row25column2: '将来自一个或多个源数组中的值复制到一个目标数组',\n      row26column2: '对一个元素绑定事件',\n      row27column2: '对一个元素移除事件',\n      row28column2: '对一个元素绑定事件, 触发后移除该事件',\n      row29column2: '判断元素是否存在某一名称的class',\n      row30column2: '对元素追加某一名称的class',\n      row31column2: '对元素移除某一名称的class',\n      row32column2: '获取元素某一属性的style, 如果失败返回null',\n      row33column2: '设置元素某一属性的style',\n      row34column2: '根据名称获取Cookie, 如果失败返回null',\n      row35column2: '根据名称设置Cookie',\n      row36column2: '根据名称移除Cookie',\n      row37column2: '函数节流, 当调用时刻大于等于执行周期则执行该动作，然后进入下一个新周期, 默认16ms为一周期',\n      row38column2: '函数防抖, 当调用时刻大于等于执行周期则执行该动作，若在周期内又调用此动作则进入新一个周期, 默认16ms为一周期',\n      row39column2: '对一个元素绑定resize事件, 内置函数防抖',\n      row40column2: '对一个元素移除resize事件',\n      row41column2: 'DOM树上移除某个节点',\n      row42column2: 'DOM树上对某个节点插入一个子节点',\n      row43column2: '获取浏览器竖滚动条宽度',\n      row44column2: '对一个元素绑定接触屏幕时触发事件',\n      row45column2: '对一个元素绑定屏幕上移动时触发事件',\n      row46column2: '对一个元素绑定屏幕上移开时触发事件',\n      row47column2: '对一个元素移除接触屏幕时触发事件',\n      row48column2: '对一个元素移除屏幕上移动时触发事件',\n      row49column2: '对一个元素移除屏幕上移开时触发事件',\n      row50column2: '浏览器全屏, 类似F11效果',\n      row51column2: '获取系统信息',\n      row52column2: '设置显示的语言',\n      row53column2: '设置语言内容',\n      row54column2: 'VueUtil.config 是一个对象，包含 VueUtil 的全局配置。',\n      row55column2: '获取当前画面控件的最大zindex',\n      row56column2: '对一个元素绑定hover事件',\n      row57column2: '对一个元素移除hover事件',\n      row58column2: '将参数按指定数据格式转换为String类型并返回, 如果失败返回null',\n      row59column2: '深拷贝一个对象'\n    },\n    samples4: {\n      label: 'Vue 基础知识',\n      description: '强烈建议先学习下Vue基本用法和思想。',\n      row1column2: '事件绑定',\n      row2column2: '事件解除',\n      row3column2: '绑定只触发一次的事件',\n      row4column2: '判断是否存在class',\n      row5column2: '追加class',\n      row6column2: '移除class',\n      row7column2: '获取style值',\n      row8column2: '设置style值',\n      row9column2: '去除src开始和末尾的空格, 如src类型不为string则返回\"\"',\n      row10column2: '将src1, src2, src3...合并到dest中, 返回值为合并后的dest',\n      row11column2: '绑定元素尺寸变动时的事件',\n      row12column2: '移除元素尺寸变动时的事件',\n      row13column2: '将string按format转换为date型, 转换失败返回false, format默认为\"yyyy-MM-dd\"',\n      row14column2: '将date按format转换为string型, 转换失败返回\"\", format默认为\"yyyy-MM-dd\"',\n      row15column2: '判断src是否可以转换为date型, 返回true/false',\n      row16column2: '将src转换为date型, 失败返回null',\n      row17column2: '设置组件要显示的语言',\n      row18column2: '设置组件多语言(可参看\"I18n 国际化\")',\n      row19column2: '从DOM上移除node',\n      row20column2: '把node元素插入fatherNode元素的第position个位置',\n      row21column2: '把数组arr转换为Object型',\n      row22column2: '使页面全屏(效果类似F11, 必须使用事件触发)',\n      row23column2: '返回src的上一月',\n      row24column2: '返回src的下一月',\n    },\n    samples5: {\n      description: '异步读取.vue文件',\n    }\n  },\n  i18nDemo: {\n    label: 'I18n',\n    samples1: {\n      label: '基本用法',\n      description: '使用 VueUtil.setLocale() 来设置多语言, 使用 VueUtil.setLang() 来设置显示的语言, 在Vue组件内部可以使用 $t() 来获取多语言的值, 在Vue组件外部可以使用 Vue.t() 来获取多语言的值;'\n    },\n    samples2: {\n      label: 'Compatible with vue-i18n@5.x',\n      description: 'Viy is compatible with vue-i18n@5.x, which makes multilingual switching even easier.'\n    },\n    samples3: {\n      label: 'Compatible with vue-i18n@6.x',\n      description: 'You need to manually handle it for compatibility with 6.x.'\n    }\n  },\n  ajaxDemo: {\n    label: 'Ajax',\n    samples1: {\n      label: '基本用法',\n      description: '可以基于全局的Vue对象使用http, 也可以基于某个控件使用http.'\n    },\n    samples2: {\n      label: '支持的HTTP方法',\n      description: '请求API是按照REST风格设计的, 它提供了7种请求API'\n    },\n    samples3: {\n      row1column3: '请求的URL',\n      row2column3: '请求的HTTP方法, 例如：\"GET\", \"POST\"或其他HTTP方法',\n      row4column3: '请求的URL参数对象',\n      row6column3: '单位为毫秒的请求超时时间 (0 表示无超时时间)',\n      row7column3: '请求发送前的处理函数, 类似于jQuery的beforeSend函数',\n      row8column3: 'ProgressEvent回调处理函数',\n      row9column3: '表示跨域请求时是否需要使用凭证',\n      row10column3: '发送PUT, PATCH, DELETE请求时以HTTP POST的方式发送, 并设置请求头的X-HTTP-Method-Override',\n      row11column3: '将request body以application/x-www-form-urlencoded content type发送'\n    }\n  },\n  layoutDemo: {\n    label: 'Layout',\n    description: '通过基础的 24 分栏, 迅速简便地创建布局.',\n    samples1: {\n      label: '基础布局',\n      description: '通过 row 和 col 组件, 并通过 col 组件的 span 属性我们就可以自由地组合布局.'\n    },\n    samples2: {\n      label: '分栏间隔',\n      description: 'row 组件 提供 gutter 属性来指定每一栏之间的间隔, 默认间隔为 0.'\n    },\n    samples3: {\n      label: '混合布局',\n      description: '通过基础的 1/24 分栏任意扩展组合形成较为复杂的混合布局.'\n    },\n    samples4: {\n      label: '对齐方式',\n      description: '将 type 属性赋值为 \\'flex\\', 可以启用 flex 布局, 并可通过 justify 属性来指定 start, center, end, space-between, space-around 其中的值来定义子元素的排版方式.'\n    },\n    samples5: {\n      label: '响应式布局',\n      description: '参照了 Bootstrap 的 响应式设计, 预设了四个响应尺寸：xs、sm、md 和 lg.'\n    },\n    samples6: {\n      row1column2: '栅格间隔',\n      row2column2: '布局模式, 可选 flex',\n      row3column2: 'flex 布局下的水平排列方式',\n      row4column2: 'flex 布局下的垂直排列方式'\n    },\n    samples7: {\n      row1column2: '栅格占据的列数',\n      row2column2: '栅格左侧的间隔格数',\n      row3column2: '栅格向右移动格数',\n      row4column2: '栅格向左移动格数',\n      row5column2: '\\'<768px\\' 响应式栅格数或者栅格属性对象',\n      row6column2: '\\'≥768px\\' 响应式栅格数或者栅格属性对象',\n      row7column2: '\\'≥992px\\' 响应式栅格数或者栅格属性对象',\n      row8column2: '\\'≥1200px\\' 响应式栅格数或者栅格属性对象',\n      row5column3: 'Number / Object (例如： {span: 4, offset: 4})',\n      row6column3: 'Number / Object (例如： {span: 4, offset: 4})',\n      row7column3: 'Number / Object (例如： {span: 4, offset: 4})',\n      row8column3: 'Number / Object (例如： {span: 4, offset: 4})'\n    }\n  },\n  iconDemo: {\n    label: 'Icon',\n    description: '常用的图标集合',\n    samples1: {\n      label: '使用方法',\n      description: '直接通过设置类名为 vue-icon-iconName 来使用即可.'\n    },\n    samples2: {\n      label: '图标集合'\n    }\n  },\n  buttonDemo: {\n    label: 'Button',\n    description: '常用的操作按钮.',\n    defaultButton: '默认按钮',\n    mainButton: '主要按钮',\n    textButton: '文字按钮',\n    circleButton: '圆角按钮',\n    successButton: '成功按钮',\n    warningButton: '警告按钮',\n    dangerButton: '危险按钮',\n    infoButton: '信息按钮',\n    samples1: {\n      label: '基础用法',\n      description: 'Button 组件默认提供7种主题, 由type属性来定义, 默认为default.'\n    },\n    samples2: {\n      label: '有颜色倾向',\n      description: '设置了不同的type属性对应的样式.设置plain属性, 它接受一个Boolean.注意, 在该情况下, type虽然可以为text, 但是是没有意义的, 会显示为text button的样式.',\n      defaultLabel: '默认显示颜色',\n      hoverLabel: 'hover 显示颜色'\n    },\n    samples3: {\n      label: '禁用状态',\n      description: '设置disabled属性即可, 它接受一个Boolean, true为禁用.'\n    },\n    samples4: {\n      label: '图标按钮',\n      description: '设置icon属性即可, 也可以设置在文字右边的 icon , 只要使用i标签即可, 可以使用自定义图标.'\n    },\n    samples5: {\n      label: '按钮组',\n      description: '使用<vue-button-group>标签来嵌套你的按钮'\n    },\n    samples6: {\n      label: '加载中',\n      description: '设置loading属性为true即可.'\n    },\n    samples7: {\n      label: '不同尺寸',\n      description: '通过设置size属性来配置它们.'\n    },\n    samples8: {\n      row1column2: '尺寸',\n      row2column2: '类型',\n      row3column2: '是否圆角按钮',\n      row4column2: '是否朴素按钮',\n      row5column2: '是否加载中状态',\n      row6column2: '是否禁用状态',\n      row7column2: '图标',\n      row8column2: '自动获取焦点',\n      row9column2: '原生type属性'\n    }\n  },\n  inputDemo: {\n    label: 'Input',\n    description: '通过鼠标或键盘输入字符.',\n    defaultPlaceholder: '请输入内容',\n    selectPlaceholder: '请选择',\n    samples1: {\n      label: '基础用法'\n    },\n    samples2: {\n      label: '禁用状态',\n      description: '设置disabled属性即可, 它接受一个Boolean, true为禁用.'\n    },\n    samples3: {\n      label: '带icon的输入框',\n      description: '可以通过icon属性在input组件尾部增加显示图标, 可以通过on-icon-click钩子函数来在点击图标后执行需要的逻辑.'\n    },\n    samples4: {\n      label: '文本域',\n      description: '通过将type属性的值指定为textarea.文本域高度可通过rows属性控制, '\n    },\n    samples5: {\n      label: '可自适应文本高度的文本域',\n      description: '通过设置 autosize 属性可以使得文本域的高度能够根据文本内容自动进行调整, 并且 autosize 还可以设定为一个对象, 指定最小行数和最大行数.'\n    },\n    samples6: {\n      label: '复合型输入框',\n      description: '可前置或后置元素, 一般为标签或按钮.可通过slot来指定在input中前置或者后置内容.',\n      selectLabel1: '餐厅名',\n      selectLabel2: '订单号',\n      selectLabel3: '用户电话'\n    },\n    samples7: {\n      label: '尺寸',\n      description: '可通过size属性指定输入框的尺寸, 除了默认的大小外, 还提供了large、small和 mini三种尺寸.'\n    },\n    samples8: {\n      label: '带输入建议',\n      description: 'autocomplete是一个可带输入建议的输入框组件, fetch-suggestions是一个返回输入建议的方法属性, 如 querySearch(queryString, cb), 在该方法中你可以在你的输入建议数据准备好时通过cb(data)返回到 autocomplete组件中.',\n      label1: '激活即列出输入建议',\n      label2: '输入后匹配输入建议'\n    },\n    samples9: {\n      label: '自定义格式',\n      description: '设置cleave属性即可, 它接受一个Object.'\n    },\n    samples10: {\n      row1column2: '类型',\n      row2column2: '绑定值',\n      row3column2: '最大输入长度',\n      row4column2: '最小输入长度',\n      row5column2: '占位文本',\n      row6column2: '禁用',\n      row7column2: '输入框尺寸, 只对type!=\"textarea\"时有效',\n      row8column2: '输入框前部图标',\n      row9column2: '输入框尾部图标',\n      row10column2: '输入框行数, 只对type==\"textarea\"有效',\n      row11column2: '自定义格式, 只对type!=\"textarea\"有效, 更多格式请参考下表',\n      row12column2: '自适应内容高度, 只对type==\"textarea\"有效, 可传入对象, 如 {minRows: 2, maxRows: 6}',\n      row13column2: '原生属性, 自动补全',\n      row14column2: '原生属性',\n      row15column2: '原生属性, 是否只读',\n      row16column2: '原生属性, 设置最大值',\n      row17column2: '原生属性, 设置最小值',\n      row18column2: '原生属性, 设置输入字段的合法数字间隔',\n      row19column2: '控制是否能被用户缩放, 只对 type=\"textarea\" 有效',\n      row20column2: '原生属性，自动获取焦点',\n      row21column2: '文本对齐',\n      row22column2: '原生属性, 所属的一个或多个表单的id',\n      row23column2: '点击 Input内的图标的钩子函数',\n      row24column2: '键盘弹出类型，仅在移动端上使用',\n\n    },\n    samples11: {\n      row1column2: '点击Input内的图标时触发',\n      row2column2: '在Input失去焦点时触发',\n      row3column2: '在Input获得焦点时触发',\n      row4column2: '在Input值改变时触发'\n    },\n    samples12: {\n      row1column2: '占位文本',\n      row2column2: '禁用',\n      row3column2: '必填值输入绑定值',\n      row4column2: '通过该参数指定自定义的输入建议列表项的组件名',\n      row5column2: '返回输入建议的方法, 仅当你的输入建议数据resolve时, 通过调用callback(data:[])来返回它',\n      row6column2: 'Autocomplete下拉列表的类名',\n      row7column2: '是否在输入框focus时显示建议列表',\n      row8column2: '点击图标的回调函数',\n      row9column2: '输入框尾部图标',\n      row10column2: '配置选项, 具体见下表'\n    },\n    samples13: {\n      row1column2: '指定选项的值为选项对象的某个属性值',\n      row2column2: '指定选项标签为选项对象的某个属性值'\n    },\n    samples14: {\n      row1column2: '点击选中建议项时触发'\n    },\n    samples15: {\n      row1column2: '是否信用卡格式,启用后会根据IIN自动检测信用卡类型。',\n      row2column2: '在信用卡类型改变后触发的一个回调函数。',\n      row3column2: '是否启用手机格式, 必须与phoneRegionCode一起使用',\n      row4column2: '各国地区的电话号码格式编码, 编码请参考 ISO 3166-1 alpha-2',\n      row5column2: '是否启用日期格式',\n      row6column2: '通过数组来定义日期格式',\n      row7column2: '是否启用数字格式',\n      row8column2: '分隔符分组样式',\n      row9column2: '设置几位整数部分',\n      row10column2: '设置几位小数部分',\n      row11column2: '小数点样式',\n      row12column2: '是否只能是正数',\n      row13column2: '根据数组值来格式化输入位数',\n      row14column2: '设置分隔符',\n      row15column2: '使用多个分隔符',\n      row16column2: '在开始处预设的值,它不能被删除或更改',\n      row17column2: '获取原值时预设的值是否去除',\n      row18column2: '是否只能输入数字(0~9)',\n      row19column2: '是否转换为大写字母',\n      row20column2: '是否转换为小写字母',\n      row21column2: '自定义格式'\n    },\n    samples16: {\n      row1column2: '手动聚焦'\n    }\n  },\n  dateDemo: {\n    label: 'DatePicker',\n    description: '用于选择或输入日期',\n    samples1: {\n      label: '基础用法',\n      description: '快捷选项需配置picker-options对象中的shortcuts, 禁用日期通过disabledDate设置.',\n      defaultLabel: '默认',\n      optionsLabel: '带快捷选项',\n      defaultPlaceholder: '选择日期',\n      todayLabel: '今天',\n      yesterdayLabel: '昨天',\n      weekAgoLabel: '上周'\n    },\n    samples2: {\n      label: '其他日期单位',\n      description: '基本单位由type属性指定',\n      weekLabel: '周',\n      weekPlaceholder: '选择周',\n      weekFormat: 'yyyy 第 WW 周',\n      monthLabel: '月',\n      monthPlaceholder: '选择月',\n      yearLabel: '年',\n      yearPlaceholder: '选择年'\n    },\n    samples3: {\n      label: '选择日期范围',\n      description: '可在一个选择器中便捷地选择一个时间范围.',\n      defaultLabel: '默认',\n      optionsLabel: '带快捷选项',\n      defaultPlaceholder: '选择日期范围',\n      lastWeekLabel: '最近一周',\n      lastMonthLabel: '最近一个月',\n      last3MonthLabel: '最近三个月'\n    },\n    samples4: {\n      row1column2: '是否只读(PC only available)',\n      row2column2: '是否禁用',\n      row21column2: '文本框可输入(PC only available)',\n      row3column2: '是否显示清除按钮',\n      row4column2: '输入框尺寸',\n      row5column2: '占位文本',\n      row6column2: '显示类型',\n      row7column2: '显示时间日期格式',\n      row7column4: '年:yyyy, 月:MM, 日:dd, 时:HH, 分:mm, 秒:ss, 周:WW（大写的W表示某年的第几周，注意区分）',\n      row8column2: '下拉框的对齐方式(PC only available)',\n      row9column2: '下拉框的类名',\n      row10column2: '选择范围时的分隔符',\n      row11column2: '下拉框打开时默认选中的日期(PC only available)',\n      row11column4: '会被new Date()解析',\n      row12column2: '当前选择器特有的选项, 参考下表'\n    },\n    samples5: {\n      row1column2: '设置快捷选项, 需要传入{text, onClick}对象用法参考demo或下表(PC only available)',\n      row2column2: '设置禁用状态, 参数为当前日期, 要求返回 Boolean(PC only available)',\n      row3column2: '周起始日',\n      row4column2: '选中日期后会执行的回调, 只有当 daterange 或 datetimerange 才生效(PC only available)'\n    },\n    samples6: {\n      row1column2: '标题文本',\n      row2column2: '选中后的回调函数, 参数是 vm, 可通过触发 \"pick\" 事件设置选择器的值.例如 vm.$emit(\"pick\", new Date())'\n    },\n    samples7: {\n      row1column2: '当input的值改变时触发, 返回值和文本框一致',\n      row1column3: '格式化后的值'\n    },\n    samples8:{\n      row1column2: 'Display mobile UI or not',\n      row2column2: 'Selector currently selected value (using v-model)',\n      row3column2: 'Input box text horizontal alignment(Used when show-mobile-ui is true)',\n      row4column2: 'Minimum date for selector optional range(Available only when show-mobile-ui is true)',\n      row4column3: 'Maximum date for selector optional range(Available only when show-mobile-ui is true)',\n      row5column2: 'Settings of icon on the left side of component(Available only when show-mobile-ui is true)',\n      row5column3: 'Setting of content clear icon on the right side of component(Available only when show-mobile-ui is true)',\n      row6column2: 'Week start date(Available only when show-mobile-ui is true)',\n      row7column2: 'Whether to show loading status(Available only when show-mobile-ui is true)',\n      row8column2: 'Top bar title(Available only when show-mobile-ui is true)',\n      row9column2: 'Top bar title of start date(Available only when show-mobile-ui is true)',\n      row9column3: 'Top bar title of end date(Available only when show-mobile-ui is true)',\n      row10column2: 'Confirm button text content(Available only when show-mobile-ui is true)',\n      row10column3: 'Cancel button text content(Available only when show-mobile-ui is true)',\n      row11column2: 'Whether to display the top bar(Available only when show-mobile-ui is true)',\n      row12column2: 'Item height(Available only when show-mobile-ui is true)',\n      row13column2: 'Number of options visible(Available only when show-mobile-ui is true)',\n      row14column2: 'The length of inertial scrolling during rapid sliding, in units of ms(Available only when show-mobile-ui is true)',\n      row15column2: 'Option format function(Available only when show-mobile-ui is true)',\n      row16column2: 'Triggers when the Confirm button is clicked(Available only when show-mobile-ui is true)',\n      row16column3: 'Current value, i.e(value, index)',\n      row17column2: 'Triggers when the Cancel button is clicked(Available only when show-mobile-ui is true)',\n      row18column2: 'Option filter function(Available only when show-mobile-ui is true)',\n      row19column2: 'Picker specifies the default selected value when opened(Available only when show-mobile-ui is true)'\n    }\n  },\n  timeDemo: {\n    label: 'TimePicker',\n    description: '用于选择或输入时间.',\n    samples1: {\n      label: '基础用法',\n      description: '使用vue-time-select时, 通过star、end和step指定可选的起始时间、结束时间和步长; 使用vue-time-picker时, 通过selectableRange限制可选时间范围',\n      timelabel1: '固定时间点',\n      timelabel2: '任意时间点',\n      timePlaceholder1: '选择时间',\n      timePlaceholder2: '任意时间点',\n\n    },\n    samples2: {\n      label: '时间范围',\n      description: '使用vue-time-select时, 若先选择开始时间, 则结束时间内备选项的状态会随之改变; 使用vue-time-picker时, 添加is-range属性即可选择时间范围',\n      timelabel1: '固定时间范围',\n      timelabel2: '任意时间范围',\n      timePlaceholder1: '起始时间',\n      timePlaceholder2: '结束时间',\n      timePlaceholder3: '选择时间范围'\n\n    },\n    samples3: {\n      row1column2: '是否只读(Available only when show-mobile-ui is false)',\n      row2column2: '是否禁用',\n      row21column2: '文本框可输入(Available only when show-mobile-ui is false)',\n      row3column2: '是否显示清除按钮',\n      row4column2: '输入框尺寸',\n      row5column2: '占位文本',\n      row51column2: '范围选择时开始日期的占位内容',\n      row52column2: '范围选择时结束日期的占位内容',\n      row53column2: '是否为时间范围选择，仅对timepicker有效',\n      row54column2: '是否使用箭头进行时间选择(仅对timepicker有效，仅show-mobile-ui为false时可用)',\n      row55column2: '选择范围时的分隔符',\n      row56column2: '可选，绑定值的格式。不指定则绑定值为 Date 对象',\n      row6column2: '下拉框的对齐方式(Available only when show-mobile-ui is false)',\n      row7column2: '下拉框的类名',\n      row8column2: '当前选择器特有的选项, 参考下表(Available only when show-mobile-ui is false)',\n      row9column2: '自动获取焦点(Available only when show-mobile-ui is false)',\n      row10column2: 'Minimum number of hours(Available only when show-mobile-ui is true)',\n      row11column2: 'Maximum number of hours(Available only when show-mobile-ui is true)',\n      row12column2: 'Minimum number of minutes(Available only when show-mobile-ui is true)',\n      row13column2: 'Maximum number of minutes(Available only when show-mobile-ui is true)',\n      row14column2: 'Minimum number of seconds(Available only when show-mobile-ui is true)',\n      row15column2: 'Maximum number of seconds(Available only when show-mobile-ui is true)',\n    },\n    samples4: {\n      row1column2: '开始时间',\n      row2column2: '结束时间',\n      row3column2: '间隔时间',\n      row4column2: '最小时间, 小于该时间的时间段将被禁用',\n      row5column2: '最大时间, 大于该时间的时间段将被禁用'\n    },\n    samples5: {\n      row1column2: '可选时间段, 例如\"18:30:00 - 20:30:00\"或者传入数组[\"09:30:00 - 12:00:00\", \"14:30:00 - 18:30:00\"]',\n      row2column2: '时间格式化',\n      row2column4: '时:HH, 分:mm, 秒:ss'\n    },\n    samples6: {\n      row1column2: '当 input 的值改变时触发, 返回值和文本框一致',\n      row1column3: '格式化后的值'\n    }\n  },\n  datetimeDemo: {\n    label: 'DateTimePicker',\n    description: '用于选择或输入日期时间',\n    samples1: {\n      label: '基础用法',\n      description: '通过设置type属性为datetime, 即可在同一个选择器里同时进行日期和时间的选择.快捷选项的使用方法与Date Picker相同.',\n      defaultLabel: '默认',\n      optionsLabel: '带快捷选项',\n      defaultPlaceholder: '选择日期时间',\n      todayLabel: '今天',\n      yesterdayLabel: '昨天',\n      weekAgoLabel: '上周'\n    },\n    samples2: {\n      label: '日期和时间范围',\n      description: '设置type为datetimerange即可选择日期和时间范围',\n      defaultLabel: '默认',\n      optionsLabel: '带快捷选项',\n      defaultPlaceholder: '选择时间范围',\n      lastWeekLabel: '最近一周',\n      lastMonthLabel: '最近一个月',\n      last3MonthLabel: '最近三个月'\n    },\n    samples3: {\n      row1column2: '是否只读(Available only when show-mobile-ui is  false)',\n      row2column2: '是否禁用',\n      row21column2: '文本框可输入(Available only when show-mobile-ui is false)',\n      row3column2: '是否显示清除按钮',\n      row4column2: '输入框尺寸',\n      row5column2: '占位文本',\n      row51column2: '范围选择时开始日期的占位内容',\n      row52column2: '范围选择时结束日期的占位内容',\n      row54column2: '是否使用箭头进行时间选择(仅对timepicker有效,Available only when show-mobile-ui is  false)',\n      row56column2: '可选，绑定值的格式。不指定则绑定值为 Date 对象',\n      row6column2: '显示类型',\n      row7column2: '显示时间日期格式',\n      row7column4: '年:yyyy, 月:MM, 日:dd, 时:HH, 分:mm, 秒:ss, 周:WW',\n      row8column2: '下拉框的对齐方式(Available only when show-mobile-ui is  false)',\n      row9column2: '下拉框的类名',\n      row10column2: '选择范围时的分隔符',\n      row11column2: '当前选择器特有的选项, 参考下表'\n    },\n    samples4: {\n      row1column2: '设置快捷选项, 需要传入{text, onClick}对象用法参考demo或下表(Available only when show-mobile-ui is  false)',\n      row2column2: '设置禁用状态, 参数为当前日期, 要求返回 Boolean(Available only when show-mobile-ui is  false)'\n    },\n    samples5: {\n      row1column2: '标题文本',\n      row2column2: '选中后的回调函数, 参数是 vm, 可通过触发 \"pick\" 事件设置选择器的值.例如 vm.$emit(\"pick\", new Date())'\n    },\n    samples6: {\n      row1column2: '当input的值改变时触发, 返回值和文本框一致',\n      row1column3: '格式化后的值'\n    }\n  },\n  calendarDemo: {\n    label: 'Calendar',\n    description: '用于查看或选择日期和事件.',\n    samples1: {\n      label: '基础用法',\n      description: '通过绑定events来绑定事件, 绑定数据为数组且每个元素需包含\"date\"属性, 通过dayclick事件可获取选择日的日期和事件'\n    },\n    samples2: {\n      row1column2: '要绑定的事件集合',\n      row2column2: '每天显示的事件条数, full calendar时有效',\n      row3column2: '点击\"+\"时是否显示更多事件, full calendar时有效',\n      row4column2: '是否使用full calendar',\n      row5column2: '日期的class集, full calendar时有效',\n      row6column2: '星期的class集, full calendar时有效',\n      row7column2: '自定义星期的label, full calendar时有效'\n    },\n    samples3: {\n      row1column2: '点击日期时触发',\n      row2column2: '点击事件时触发, full calendar时有效',\n      row3column2: '点击\"+\"时触发, full calendar时有效'\n    },\n    samples4: {\n      label: 'Full Calendar',\n      description: '设置full属性即可',\n      row1column2: 'head部的左边内容, full calendar时有效',\n      row2column2: 'head部的右边内容, full calendar时有效, 有效时\"本月\"按钮不显示',\n    },\n    samples5: {\n      row1column2: '月历返回本月, full calendar时有效',\n      row2column2: '获取月历年月(Date型), full calendar时有效',\n    }\n  },\n  imageDemo: {\n    label: 'Image',\n    description: 'Besides the native features of img, support lazy load, custom placeholder and load failure, etc.',\n\tdefatltText:'Default',\n\tcustomText:'Custom',\n    samples1: {\n      label: 'Basic Usage',\n      description: 'Indicate how the image should be resized to fit its container by fit, same as native object-fit.'\n\t},\n\tsamples2: {\n      label: 'Placeholder',\n\t  loading :'Loading',\n      description: 'Custom placeholder content when image hasn\\'t loaded yet by slot = placeholder'\n\t},\n\tsamples3: {\n      label: 'Load Failed',\n      description: 'Custom failed content when error occurs to image load by slot = error'\n\t},\n\tsamples4: {\n      label: 'Lazy Load',\n      description: 'Use lazy load by lazy = true. Image will load until scroll into view when set. You can indicate scroll container that adds scroll listener to by scroll-container. If undefined, will be the nearest parent container whose overflow property is auto or scroll.'\n\t},\n\tsamples5: {\n      label: 'Image Preview',\n      description: 'Allow big image preview by setting preview-src-list prop.If img-label is set, the SRC property is invalid and only img-label content is displayed.',\n\t  imgLabelText: 'Preview big picture'\n\t},\n\tsamples6: {\n       row1column2: 'Image source, same as native',\n\t   row2column2: 'Indicate how the image should be resized to fit its container, same as object-fit',\n\t   row3column2: 'Native alt',\n\t   row4column2: 'Native referrerPolicy',\n\t   row5column2: 'Whether to use lazy load',\n\t   row6column2: 'The container to add scroll listener when using lazy load',\n\t   row6column5: 'The nearest parent container whose overflow property is auto or scroll',\n\t   row7column2: 'Allow big image preview',\n\t   row8column2: 'Set image preview z-index',\n\t   row9column2: 'If img-label content is not empty, only the content will be displayed and no picture will be displayed',\n\t   row10column2: 'If the attribute round is true, the image is displayed in a circle'\n\t\t  \n\t},\n\tsamples7: {\n       row1column2: 'Triggers when image load',\n\t   row2column2: 'Triggers when image load failed'\t   \n\t},\n\tsamples8: {\n       row1column2: 'Occupied content of picture not loaded',\n\t   row2column2: 'Content of load failed '\t   \n\t}\n  },\n  imageviewerDemo: {\n    label: 'ImageViewer',\n    description: 'Image preview container, with the original img features, supports image zooming and rotating, PC side click the left and right button to switch pictures, mobile side slide to switch pictures, etc',\n\t  defatltText:'Default',\n\t  customText:'Custom',\n\t  samples1: {\n        label: 'Basic usage',\n        description: 'You can pass in the pictures you want to preview through URL list.',\n\t  },\n\t  samples2: {\n        label: 'Open the preview image by default',\n        description: 'Open the first few pictures of picture preview by default through the active-index attribute',\n\t  },\n\t  samples3: {\n       row1column2: 'Preview image data',\n\t     row2column2: 'Set z-index for picture preview',\n\t     row3column2: 'Activate the corner value of picture preview',\n\t     row4column2: 'Trigger function of picture switching',\n\t     row5column2: 'Turn off the trigger function of picture preview',\n\t  }\n  },\n  checkboxDemo: {\n    label: 'Checkbox',\n    description: '在一组备选项中进行多选.',\n    samples1: {\n      label: '基础用法',\n      description: '在vue-checkbox元素中定义v-model绑定变量, 单一的checkbox中, 默认绑定变量的值会是Boolean, 选中为true.'\n    },\n    samples2: {\n      label: '禁用状态',\n      description: '设置disabled属性即可, 它接受一个Boolean, true为禁用.'\n    },\n    samples3: {\n      label: '多选框组',\n      description: 'checkbox-group元素能把多个checkbox管理为一组, 只需要在Group中使用v-model绑定Array类型的变量即可. vue-checkbox的label属性是该checkbox对应的值, 若该标签中无内容, 则该属性也充当checkbox按钮后的介绍. label与数组中的元素值相对应, 如果存在指定的值则为选中状态, 否则为不选中.'\n    },\n    samples4: {\n      label: 'indeterminate 状态',\n      description: 'indeterminate属性用以表示checkbox的不确定状态, 一般用于实现全选的效果'\n    },\n    samples5: {\n      label: '按钮样式',\n      description: '只需要把vue-checkbox元素换成vue-checkbox-button元素即可.'\n    },\n    samples6: {\n      row1column2: '选中状态的值(只有在checkbox-group或者绑定对象类型为array时有效)',\n      row2column2: '选中时的值',\n      row3column2: '没有选中时的值',\n      row4column2: '原生属性',\n      row5column2: '按钮禁用',\n      row6column2: '当前是否勾选',\n      row7column2: '设置indeterminate状态, 只负责样式控制'\n    },\n    samples7: {\n      row1column2: '按钮组尺寸',\n      row2column2: '按钮激活时的填充色和边框色',\n      row3column2: '按钮激活时的文本颜色',\n      row4column2: '可被勾选的最小数量',\n      row5column2: '可被勾选的最大数量'\n    },\n    samples8: {\n      row1column2: '当绑定值变化时触发的事件'\n    }\n  },\n  radioDemo: {\n    label: 'Radio',\n    description: '在一组Option中进行单选.',\n    samples1: {\n      label: '基础用法',\n      description: '选中的条件是绑定的变量值等于label中的值.只需要设置v-model绑定变量, 选中意味着变量的值为相应 Radio label属性的值, label可以是String或者Number.'\n    },\n    samples2: {\n      label: '禁用状态',\n      description: '设置disabled属性即可, 它接受一个Boolean, true为禁用.'\n    },\n    samples3: {\n      label: '单选框组',\n      description: '结合vue-radio-group元素和子元素vue-radio可以实现单选组, 在vue-radio-group中绑定v-model, 在vue-radio中设置好label即可, 无需再给每一个vue-radio绑定变量, '\n    },\n    samples4: {\n      label: '按钮样式',\n      description: '只需要把vue-radio元素换成vue-radio-button元素即可, '\n    },\n    samples5: {\n      row1column2: 'Radio的value',\n      row2column2: '是否禁用',\n      row3column2: '原生属性'\n    },\n    samples6: {\n      row1column2: '按钮组尺寸',\n      row2column2: '按钮激活时的填充色和边框色',\n      row3column2: '按钮激活时的文本颜色'\n    },\n    samples7: {\n      row1column2: '当绑定值变化时触发的事件',\n      row1column3: '选中的Radio label值'\n    },\n    samples8: {\n      row1column2: 'Radio的value',\n      row2column2: '是否禁用'\n    }\n  },\n  switchDemo: {\n    label: 'Switch',\n    description: '表示两种相互对立的状态间的切换, 多用于触发「开/关」.',\n    samples1: {\n      label: '基础用法',\n      description: '绑定v-model到一个Boolean类型的变量.可以使用on-text属性与off-text属性来设置开关的文字描述, 使用on-color属性与off-color属性来设置开关的背景色'\n    },\n    samples2: {\n      label: '禁用状态',\n      description: '设置disabled属性即可, 它接受一个Boolean, true为禁用.'\n    },\n    samples3: {\n      row1column2: '是否禁用',\n      row2column2: 'switch的宽度(像素)',\n      row2column5: '58(有文字), 46(无文字)',\n      row3column2: 'switch打开时所显示图标的类名, 设置此项会忽略 on-text',\n      row4column2: 'switch关闭时所显示图标的类名, 设置此项会忽略 off-text',\n      row5column2: 'switch打开时的文字',\n      row6column2: 'switch关闭时的文字',\n      row7column2: 'switch打开时的背景色',\n      row8column2: 'switch关闭时的背景色',\n      row9column2: 'switch对应的name属性'\n    },\n    samples4: {\n      row1column2: 'switch状态发生变化时的回调函数'\n    }\n  },\n  dropdownDemo: {\n    label: 'Dropdown',\n    description: '将动作或菜单折叠到下拉菜单中.',\n    samples1: {\n      label: '基础用法',\n      description: '通过组件slot来设置下拉触发的元素以及需要通过名称为dropdown的slot来设置下拉菜单.默认情况下下拉按钮只要hover即可, 无需点击也会显示下拉菜单.'\n    },\n    samples2: {\n      label: '触发对象',\n      description: '设置split-button属性来让触发下拉元素呈现为按钮组, 左边是功能按钮, 右边是触发下拉菜单的按钮, 设置为true即可.'\n    },\n    samples3: {\n      label: '触发方式',\n      description: '在trigger属性设置为click即可配置click激活.',\n      hoverLabel: 'hover 激活',\n      clickLabel: 'click 激活'\n    },\n    samples4: {\n      label: '菜单隐藏方式',\n      description: '下拉菜单默认在点击菜单项后会被隐藏, 将hide-on-click属性默认为false可以关闭此功能.'\n    },\n    samples5: {\n      label: '指令事件',\n      description: '点击菜单项后会触发事件, 用户可以通过相应的菜单项 key进行不同的操作.'\n    },\n    samples6: {\n      row1column2: '菜单按钮类型, 同Button组件(只在split-button为true的情况下有效)',\n      row2column2: '菜单按钮类型, 同Button组件(只在split-button为true的情况下有效)',\n      row3column2: '下拉触发元素呈现为按钮组',\n      row4column2: '菜单水平对齐方向',\n      row5column2: '触发下拉的行为',\n      row6column2: '是否在点击菜单项后隐藏菜单'\n    },\n    samples7: {\n      row1column2: 'split-button为true时, 点击左侧按钮的回调',\n      row2column2: '点击菜单项触发的事件回调',\n      row2column3: 'dropdown-item的指令',\n      row3column2: '下拉框出现/隐藏时触发',\n      row3column3: '出现为 true, 隐藏为 false'\n    },\n    samples8: {\n      row1column2: '指令',\n      row2column2: '禁用',\n      row3column2: '显示分割线',\n    }\n  },\n  selectDemo: {\n    label: 'Select',\n    description: '当选项过多时, 使用下拉菜单展示并选择内容.',\n    samples1: {\n      label: '基础用法',\n      description: 'v-model的值为当前被选中的vue-option的value属性值'\n    },\n    samples2: {\n      label: '有禁用选项',\n      description: '在vue-option中, 设定disabled值为 true, 即可禁用该选项'\n    },\n    samples3: {\n      label: '禁用状态',\n      description: '设置disabled属性即可, 它接受一个Boolean, true为禁用.'\n    },\n    samples4: {\n      label: '可清空单选',\n      description: '设置clearable属性, 则可将选择器清空.需要注意的是, clearable属性仅适用于单选'\n    },\n    samples5: {\n      label: '基础多选',\n      description: '设置multiple属性即可启用多选, 此时v-model的值为当前选中值所组成的数组'\n    },\n    samples6: {\n      label: '自定义模板',\n      description: '将自定义的HTML模板插入vue-option的slot中即可.'\n    },\n    samples7: {\n      label: '分组',\n      description: '使用vue-option-group对备选项进行分组, 它的label属性为分组名'\n    },\n    samples8: {\n      label: '搜索',\n      description: '为vue-select添加filterable属性即可启用搜索功能.默认情况下, Select会找出所有label属性包含输入值的选项.如果希望使用其他的搜索逻辑, 可以通过传入一个filter-method来实现.filter-method为一个Function, 它会在输入值发生变化时调用, 参数为当前输入值.'\n    },\n    samples9: {\n      label: '远程搜索',\n      description: '启用远程搜索, 需要将filterable和remote设置为true, 同时传入一个remote-method.remote-method为一个Function, 它会在输入值发生变化时调用, 参数为当前输入值.',\n      placeholderLabel: '请输入关键词'\n    },\n    samples10: {\n      label: '创建条目',\n      description: '使用allow-create属性即可通过在输入框中输入文字来创建新的条目.注意此时filterable必须为真.'\n    },\n    samples11: {\n      row1column2: '是否多选',\n      row2column2: '是否禁用',\n      row3column2: '输入框尺寸',\n      row4column2: '是否可以清空选项, 多选时可全选',\n      row5column2: '多选时用户最多可以选择的项目数, 为0则不限制',\n      row6column2: '原生属性',\n      row7column2: '占位文本',\n      row8column2: '是否可搜索',\n      row9column2: '是否允许用户创建新条目, 需配合filterable使用',\n      row10column2: '自定义搜索方法',\n      row11column2: '是否为远程搜索',\n      row12column2: '远程搜索方法',\n      row13column2: '是否正在从远程获取数据',\n      row14column2: '远程加载时显示的文字',\n      row15column2: '搜索条件无匹配时显示的文字',\n      row16column2: '选项为空时显示的文字',\n      row17column2: 'Select下拉框的类名',\n      row18column2: '在输入框按下回车, 选择第一个匹配项.需配合filterable或remote使用',\n      row19column2: '输入框自适应高度'\n    },\n    samples12: {\n      row1column2: '选中值发生变化时触发',\n      row1column3: '目前的选中值',\n      row2column2: '下拉框出现/隐藏时触发',\n      row2column3: '出现为 true, 隐藏为 false',\n      row3column2: '多选模式下移除tag时触发',\n      row3column3: '移除的tag值'\n    },\n    samples13: {\n      row1column2: '分组的组名',\n      row2column2: '是否将该分组下所有选项置为禁用'\n    },\n    samples14: {\n      row1column2: '选项的值',\n      row2column2: '选项的标签, 若不设置则默认与value相同',\n      row3column2: '是否禁用该选项'\n    }\n  },\n  cascaderDemo: {\n    label: 'Cascader',\n    description: '当一个数据集合有清晰的层级结构时, 可通过级联选择器逐级查看并选择.',\n    samples1: {\n      label: '基础用法',\n      description: '只需为Cascader的options属性指定选项数组即可渲染出一个级联选择器.通过expand-trigger可以定义展开子级菜单的触发方式. change事件的参数为 Cascader的绑定值：一个由各级菜单的值所组成的数组.',\n      clickLabel: 'click 触发子菜单',\n      hoverLabel: 'hover 触发子菜单'\n    },\n    samples2: {\n      label: '禁用选项',\n      description: 'Cascader会检查数据中每一项的disabled字段是否为true, 如果你的数据中表示禁用含义的字段名不为disabled, 可以通过props属性来指定'\n    },\n    samples3: {\n      label: '仅显示最后一级',\n      description: '属性show-all-levels定义了是否显示完整的路径, 将其赋值为false则仅显示最后一级'\n    },\n    samples4: {\n      label: '默认值',\n      description: '默认值通过数组的方式指定'\n    },\n    samples5: {\n      label: '选择即改变',\n      description: '将change-on-select赋值为true, 点击或移入选项即表示选中该项'\n    },\n    samples6: {\n      label: '动态加载次级选项',\n      description: '利用active-item-change事件, 可以在点击某个option时拉取该option下的子数据'\n    },\n    samples7: {\n      label: '可搜索',\n      description: '将filterable赋值为true即可打开搜索功能',\n      label1: '选择最后一级菜单的选项',\n      label2: '选择任意一级菜单的选项',\n      placeholderLabel: '试试搜索：component'\n    },\n    samples8: {\n      row1column2: '可选项数据源, 键名可通过props属性配置',\n      row2column2: '配置选项, 具体见下表',\n      row3column2: '选中项绑定值',\n      row4column2: '自定义浮层类名',\n      row5column2: '占位文本',\n      row6column2: '是否禁用',\n      row7column2: '是否支持清空选项',\n      row8column2: '次级菜单的展开方式',\n      row9column2: '输入框中是否显示选中值的完整路径',\n      row10column2: '是否可搜索选项',\n      row11column2: '搜索关键词输入的去抖延迟, 毫秒',\n      row12column2: '是否允许选择任意一级的选项',\n      row13column2: '尺寸'\n    },\n    samples9: {\n      row1column2: '指定选项的值为选项对象的某个属性值',\n      row2column2: '指定选项标签为选项对象的某个属性值',\n      row3column2: '指定选项的子选项为选项对象的某个属性值',\n      row4column2: '指定选项的禁用为选项对象的某个属性值',\n      row5column2: '可选参数, 筛选之前的钩子, 参数为输入的值, 若返回false或者返回Promise且被reject, 则停止筛选.'\n    },\n    samples10: {\n      row1column2: '当绑定值变化时触发的事件',\n      row1column3: '当前值',\n      row2column2: '当父级选项变化时触发的事件, 仅在change-on-select为false时可用',\n      row2column3: '各父级选项组成的数组'\n    },\n    samples11:{\n      row1column2: 'Custom level selector name',\n      row2column2: 'Whether to show loading status(Mobile only available)',\n      row3column2: 'Top bar title(Mobile only available)',\n      row4column2: 'Confirm button text content(Mobile only available)',\n      row4column3: 'Cancel button text content(Mobile only available)',\n      row5column2: 'Top bar position(Mobile only available)',\n      row5column3: 'Whether to display the top bar(Mobile only available)',\n      row6column2: 'Whether HTML is allowed to apply(Mobile only available)',\n      row7column2: 'Item height(Mobile only available)',\n      row8column2: 'Number of options visible(Mobile only available)',\n      row9column2: 'The length of inertial scrolling during rapid sliding, in units of ms(Mobile only available)',\n      row10column2: 'Triggers when the Confirm button is clicked(Mobile only available)',\n      row10column3: 'Current value, i.e(value, index)',\n      row11column2: 'Triggers when the Cancel button is clicked(Mobile only available)',\n    }\n  },\n  formDemo: {\n    label: 'Form',\n    description: '由输入框、选择器、单选框、多选框等控件组成, 用以收集、校验、提交数据.',\n    samples1: {\n      label: '基础表单',\n      description: '在Form组件中, 每一个表单域由一个Form-Item组件构成, 表单域中可以放置各种类型的表单控件, '\n    },\n    samples2: {\n      label: '行内表单',\n      description: '设置inline属性可以让表单域变为行内的表单域'\n    },\n    samples3: {\n      label: '对齐方式',\n      description: '通过设置label-position属性可以改变表单域标签的位置, 可选值为 top、left、right'\n    },\n    samples4: {\n      label: '表单验证',\n      description: 'Form组件提供了表单验证的功能, 只需要通过rule属性传入约定的验证规则, 并Form-Item的prop属性设置为需校验的字段名即可.'\n    },\n    samples5: {\n      label: '自定义校验规则',\n      description: '使用自定义规则来完成验证;'\n    },\n    samples6: {\n      label: '动态增减表单项',\n      description: '除了在Form组件上一次性传递所有的验证规则外还可以在单个的表单域上传递属性的验证规则'\n    },\n    samples7: {\n      row1column2: '表单数据对象',\n      row2column2: '表单验证规则',\n      row3column2: '行内表单模式',\n      row4column2: '表单域标签的位置',\n      row5column2: '表单域标签的宽度, 作为Form直接子元素的form-item会继承该值',\n      row6column2: '表单域标签的后缀(如\\':\\')',\n      row7column2: '是否显示校验错误信息',\n      row8column2: '表单域标签是否自适应',\n      row9column2: '错误信息是否以通知形式显示',\n      row10column2: '自定义消息,参数为错误信息'\n    },\n    samples8: {\n      row1column2: '对整个表单进行校验的方法',\n      row2column2: '对部分表单字段进行校验的方法',\n      row3column2: '对整个表单进行重置, 将所有字段值重置为初始值并移除校验结果',\n      row4column2: '将所有字段值的当前值设为初始值',\n      row5column2: '判断表单是否有值发生变动'\n    },\n    samples9: {\n      row1column2: '表单域model字段, 在使用validate、resetFields方法的情况下, 该属性是必填的',\n      row1column4: '传入Form组件的model中的字段',\n      row2column2: '标签文本',\n      row3column2: '表单域标签的的宽度, 例如\"50px\"',\n      row4column2: '是否必填, 如不设置, 则会根据校验规则自动生成',\n      row5column2: '表单验证规则',\n      row6column2: '表单域验证错误信息, 设置该值会使表单验证状态变为error, 并显示该错误信息',\n      row7column2: '是否显示校验错误信息'\n    },\n    samples10: {\n      row1column2: '是否必入',\n      row2column2: '入力长度, 只对number, String, Array有效',\n      row3column2: '最小长度, 只对number, String, Array有效',\n      row4column2: '最大长度, 只对number, String, Array有效',\n      row5column2: '校验类型'\n    }\n  },\n  paginationDemo: {\n    label: 'Pagination',\n    description: '当数据量过多时, 使用分页分解数据.',\n    samples1: {\n      label: '基础用法',\n      description: '设置layout, 表示需要显示的内容, 用逗号分隔, 布局元素会依次显示.prev表示上一页, next为下一页, pager表示页码列表, page-size表示每页显示条目个数, total表示总条目数',\n      label1: '页数较少时的效果',\n      label2: '页数较多时的效果',\n      label3: '小型分页'\n    },\n    samples2: {\n      label: '附加功能',\n      description: '使用size-change和current-change事件来处理页码大小和当前页变动时候触发的事件.page-sizes接受一个整型数组, 数组元素为展示的选择每页显示个数的选项',\n      label1: '显示总数',\n      label2: '调整每页显示条数',\n      label3: '直接前往',\n      label4: '完整功能'\n    },\n    samples3: {\n      row1column2: '是否使用小型分页样式',\n      row2column2: '每页显示条目个数',\n      row3column2: '总条目数',\n      row4column2: '总页数, total和page-count设置任意一个就可以达到显示页码的功能；如果要支持page-sizes的更改, 则需要使用total属性',\n      row5column2: '当前页数, 支持sync修饰符',\n      row6column2: '组件布局, 子组件名用逗号分隔',\n      row7column2: '每页显示个数选择器的选项设置'\n    },\n    samples4: {\n      row1column2: 'pageSize改变时触发',\n      row1column3: '每页条数size',\n      row2column2: 'currentPage改变时触发',\n      row2column3: '当前页currentPage'\n    }\n  },\n  treeDemo: {\n    label: 'Tree',\n    description: '用清晰的层级结构展示信息, 可展开或折叠.',\n    samples1: {\n      label: '基础用法',\n      description: '基础的树形结构展示.'\n    },\n    samples2: {\n      label: '选择和获取数据',\n      description: 'show-checkbox属性可以设置节点是否可被选择, lazy属性设置是否在点击时才进行数据获取, load属性可以设置加载子树数据的方法.'\n    },\n    samples3: {\n      label: '默认展开和默认选中',\n      description: '分别通过default-expanded-keys和default-checked-keys设置默认展开和默认选中的节点.需要注意的是, 此时必须设置node-key, 其值为节点数据中的一个字段名, 该字段在整棵树中是唯一的.'\n    },\n    samples4: {\n      label: '禁用状态',\n      description: '通过disabled设置禁用状态.'\n    },\n    samples5: {\n      label: '树节点的选择',\n      description: '获取和设置各有两种方式：通过node或通过key.如果需要通过key来获取或设置, 则必须设置node-key'\n    },\n    samples13: {\n      label: '高亮节点的选择',\n      description: '获取和设置各有两种方式：通过node或通过key.如果需要通过key来获取或设置, 则必须设置node-key'\n    },\n    samples6: {\n      label: '自定义节点内容',\n      description: '使用render-content指定渲染函数, 该函数返回需要的节点区内容即可.渲染函数的用法请参考Vue文档'\n    },\n    samples7: {\n      label: '节点过滤',\n      description: '调用Tree实例的filter方法, 参数为关键字.需要注意的是, 此时需要设置filter-node-method, 值为过滤函数.'\n    },\n    samples8: {\n      label: '手风琴模式',\n      description: '对于同一级的节点, 每次只能展开一个'\n    },\n    samples9: {\n      row1column2: '展示数据',\n      row2column2: '每个树节点用来作为唯一标识的属性, 整颗树应该是唯一的',\n      row3column2: '懒加载',\n      row4column2: '加载子树数据的方法, 当lazy为true时生效',\n      row5column2: '树节点的内容区的渲染Function',\n      row6column2: '是否高亮当前选中节点',\n      row7column2: '当前选中节点的key',\n      row8column2: '是否默认展开所有节点',\n      row9column2: '是否在点击节点的时候展开或者收缩节点',\n      row10column2: '展开子节点的时候是否自动展开父节点',\n      row11column2: '默认展开的节点的key的数组',\n      row12column2: '节点是否可被选择',\n      row13column2: '在显示复选框的情况下, 是否严格的遵循父子不互相关联的做法, ',\n      row14column2: '默认勾选的节点的key的数组',\n      row15column2: '对树节点进行筛选时执行的方法, 返回true表示这个节点可以显示, 返回false则表示这个节点会被隐藏',\n      row16column2: '是否每次只打开一个同级树节点展开',\n      row17column2: '相邻级节点间的水平缩进, 单位为像素',\n      row18column2: '配置选项, 具体看下表'\n    },\n    samples10: {\n      row1column2: '指定节点标签为节点对象的某个属性值',\n      row2column2: '指定子树为节点对象的某个属性值',\n      row3column2: '指定节点选择框是否禁用'\n    },\n    samples11: {\n      row1column2: '对树节点进行筛选操作',\n      row1column3: '接收一个任意类型的参数, 该参数会在filter-node-method中作为第一个参数',\n      row2column2: '若节点可被选择(即show-checkbox为true), 则返回目前被选中的节点所组成的数组',\n      row2column3: '(leafOnly, indeterminate)参数1：boolean类型的参数, 若为true则仅返回被选中的子节点, 默认值为 false。 参数2：boolean，是否包含半选中状态的节点，默认false',\n      row3column2: '设置目前勾选的节点, 使用此方法必须设置node-key属性',\n      row3column3: '(nodes)接收勾选节点数据的数组',\n      row4column2: '若节点可被选择(即show-checkbox为true), 则返回目前被选中的节点的 key所组成的数组',\n      row4column3: '(leafOnly, indeterminate) 参数1：boolean类型的参数, 若为 true则仅返回被选中的子节点的 keys, 默认值为 false。 参数2：boolean，是否包含半选中状态的节点，默认false',\n      row5column2: '通过keys设置目前勾选的节点, 使用此方法必须设置node-key属性',\n      row5column3: '(keys, leafOnly)接收两个参数, 1.勾选节点的key的数组 2.boolean类型的参数, 若为true则仅设置叶子节点的选中状态, 默认值为 false',\n      row6column2: '通过key/data设置某个节点的勾选状态, 使用此方法必须设置node-key属性',\n      row6column3: '(key/data, checked, deep)接收三个参数, 1.勾选节点的key或者data 2.boolean类型, 节点是否选中 3.boolean类型, 是否设置子节点 , 默认为 false',\n      row7column2: '若节点可被高亮(即highlight-current为true), 则返回目前被高亮的节点',\n      row8column2: '若节点可被高亮(即highlight-current为true), 则返回目前被高亮的节点的 key',\n      row9column2: '设置目前高亮的节点, 使用此方法必须设置node-key属性',\n      row10column2: '通过key设置目前高亮的节点, 使用此方法必须设置node-key属性',\n    },\n    samples12: {\n      row1column2: '节点被点击时的回调',\n      row1column3: '共三个参数, 依次为：传递给data属性的数组中该节点所对应的对象、节点对应的Node、节点组件本身.',\n      row2column2: '节点选中状态发生变化时的回调',\n      row2column3: '共三个参数, 依次为：传递给data属性的数组中该节点所对应的对象、节点本身是否被选中、节点的子树中是否有被选中的节点',\n      row3column2: '当前选中节点变化时触发的事件',\n      row3column3: '共两个参数, 依次为：当前节点的数据, 当前节点的Node对象',\n      row4column2: '节点被展开时触发的事件',\n      row4column3: '共三个参数, 依次为：传递给data属性的数组中该节点所对应的对象、节点对应的 Node、节点组件本身.',\n      row5column2: '节点被关闭时触发的事件',\n      row5column3: '共三个参数, 依次为：传递给data属性的数组中该节点所对应的对象、节点对应的 Node、节点组件本身.'\n    }\n  },\n  collapseDemo: {\n    label: 'Collapse',\n    description: '通过折叠面板收纳内容区域',\n    samples1: {\n      label: '基础用法',\n      description: '可同时展开多个面板, 面板之间不影响'\n    },\n    samples2: {\n      label: '手风琴效果',\n      description: '每次只能展开一个面板, 通过accordion属性来设置是否以手风琴模式显示'\n    },\n    samples3: {\n      label: '自定义面板标题',\n      description: '除了可以通过title属性以外, 还可以通过具名slot来实现自定义面板的标题内容, 以实现增加图标等效果.'\n    },\n    samples4: {\n      row1column2: '是否手风琴模式',\n      row2column2: '当前激活的面板(如果是手风琴模式, 绑定值类型需要为string, 否则为array)',\n      row3column2: '是否手风琴模式',\n    },\n    samples5: {\n      row1column2: '当前激活面板改变时触发(如果是手风琴模式, 参数 activeNames 类型为string, 否则为array)'\n    },\n    samples6: {\n      row1column2: '唯一标志符',\n      row2column2: '面板标题',\n      row3column2: '点击时是否可以展开或者收缩'\n    }\n  },\n  messageBoxDemo: {\n    label: 'MessageBox',\n    description: '模拟系统的消息提示框而实现的一套模态对话框组件.',\n    samples1: {\n      label: '消息提示',\n      description: '调用$alert方法即可打开消息提示, 它模拟了系统的alert, '\n    },\n    samples2: {\n      label: '确认消息',\n      description: '调用$confirm方法即可打开消息提示, 它模拟了系统的confirm.'\n    },\n    samples3: {\n      label: '自定义',\n      description: '可自定义配置不同内容.'\n    },\n    samples4: {\n      row1column2: 'MessageBox标题',\n      row2column2: 'MessageBox消息正文内容',\n      row3column2: '消息类型, 用于显示图标',\n      row4column2: 'MessageBox的自定义类名',\n      row5column2: 'MessageBox关闭后的回调, action的值为\"confirm\"或\"cancel\", instance为 MessageBox实例',\n      row5column3: 'Function(action, instance)',\n      row6column2: 'MessageBox关闭前的回调, 会暂停实例的关闭, action的值为\"confirm\"或\"cancel\", instance为 MessageBox实例, done用于关闭 MessageBox实例',\n      row6column3: 'Function(action, instance, done)',\n      row7column2: '取消按钮的文本内容',\n      row8column2: '确定按钮的文本内容',\n      row9column2: '取消按钮的自定义类名',\n      row10column2: '确定按钮的自定义类名',\n    }\n  },\n  dialogDemo: {\n    label: 'Dialog',\n    description: '在保留当前页面状态的情况下, 告知用户并承载相关操作.',\n    samples1: {\n      label: '基础用法',\n      description: '需要设置v-model属性, 它接收Boolean, 当为true时显示Dialog.Dialog分为三个部分：header, body和footer, header需要具名为header的slot, footer需要具名为footer的slot.title属性用于定义标题, 它是可选的, 默认值为空, 当header存在时title不显示.show-close属性显示关闭按钮, 默认为false.'\n    },\n    samples2: {\n      label: '自定义内容',\n      description: 'Dialog组件的内容可以是任意的'\n    },\n    samples3: {\n      row1column2: '是否显示Dialog',\n      row2column2: 'Dialog的标题',\n      row3column2: 'Dialog的大小',\n      row4column2: 'Dialog CSS中的top值(仅在size不为full时有效)',\n      row5column2: 'Dialog的自定义类名',\n      row6column2: '是否可以通过点击 modal关闭Dialog',\n      row7column2: '是否可以通过按下ESC关闭Dialog',\n      row8column2: '是否显示关闭按钮',\n      row9column2: '关闭前的回调, 会暂停Dialog的关闭, done()用于关闭, done(false)用于取消关闭',\n      row9column3: 'Function(done)',\n      row10column2: '使modal层透明',\n      row11column2: '是否可以拖动, size为full时不可拖动'\n    },\n    samples4: {\n      row1column2: 'Dialog的内容',\n      row2column2: 'Dialog head部的内容',\n      row3column2: 'Dialog foot部的内容'\n    },\n    samples5: {\n      row1column2: 'Dialog关闭的回调',\n      row2column2: 'Dialog打开的回调'\n    }\n  },\n  asideDemo: {\n    label: 'Aside',\n    description: '在保留当前页面状态的情况下, 在侧边承载相关操作.',\n    samples1: {\n      label: '基础用法',\n      description: '需要设置v-model属性, 它接收Boolean, 当为true时显示Aside.Aside分为三个部分：header, body和footer, header需要具名为header的slot, footer需要具名为footer的slot.title属性用于定义标题, 它是可选的, 默认值为空, 当header存在时title不显示.show-close属性显示关闭按钮, 默认为false.'\n    },\n    samples2: {\n      label: '区域表示',\n      description: '设置relative属性, 可以在父容器内展示'\n    },\n    samples3: {\n      label: '自定义内容',\n      description: 'Aside组件的内容可以是任意的'\n    },\n    samples4: {\n      row1column2: '是否显示Aside',\n      row2column2: 'Aside的标题',\n      row3column2: 'Aside的大小',\n      row5column2: 'Aside的自定义类名',\n      row6column2: '是否可以通过点击 modal关闭Aside',\n      row7column2: '是否可以通过按下ESC关闭Aside',\n      row8column2: '是否显示关闭按钮',\n      row9column2: '关闭前的回调, 会暂停Aside的关闭, done()用于关闭, done(false)用于取消关闭',\n      row9column3: 'Function(done)',\n      row10column2: '显示位置',\n      row11column2: '是否在父容器内显示Aside'\n    },\n    samples5: {\n      row1column2: 'Aside的内容',\n      row2column2: 'Aside head部的内容',\n      row3column2: 'Aside foot部的内容'\n    },\n    samples6: {\n      row1column2: 'Aside关闭的回调',\n      row2column2: 'Aside打开的回调'\n    }\n  },\n  notificationDemo: {\n    label: 'Notification',\n    description: '悬浮出现在页面右上角,显示全局的通知提醒消息.',\n    samples1: {\n      label: '基础用法',\n      description: 'title和message用于设置标题和正文. 默认情况下, 经过一段时间后组件会自动关闭, 但是通过设置duration, 可以控制关闭的时间间隔, 如果设置为0, 则不会自动关闭. 有四种通知类型：success, warning, info, error. 通过type字段来设置'\n    },\n    samples2: {\n      label: '消息位置',\n      description: '通过设置position属性来定位, 默认为\"top-right\"'\n    },\n    samples3: {\n      row1column2: '标题',\n      row2column2: '正文内容',\n      row3column2: '主题样式, 如果不在可选值内将被忽略',\n      row4column2: '自定义图标的类名. 若设置了 type, 则iconClass会被覆盖',\n      row5column2: '自定义类名',\n      row6column2: '显示时间, 毫秒. 设为0则不会自动关闭, 并显示关闭按钮',\n      row7column2: '关闭时的回调函数',\n      row8column2: '定位, 如果不在可选值内将无法显示',\n      row9column2: '是否显示关闭按钮'\n    }\n  },\n  badgeDemo: {\n    label: 'Badge',\n    description: '出现在按钮、图标旁的数字或状态标记. ',\n    samples1: {\n      label: '基础用法',\n      description: '定义value属性, 它接受Number或者String. 最大值由max属性定义, 它接受一个Number, 只有当value为Number时, 它才会生效. 设置is-dot属性以红点的形式标注'\n    },\n    samples2: {\n      row1column2: '显示值',\n      row2column2: '最大值, 超过最大值会显示 \"{max}+\", 要求 value 是 Number 类型',\n      row3column2: '小圆点',\n      row4column2: '隐藏'\n    }\n  },\n  tabsDemo: {\n    label: 'Tabs',\n    description: '分隔内容上有关联但属于不同类别的数据集合. ',\n    samples1: {\n      label: '基础用法',\n      description: '通过value属性来指定当前选中的标签页. '\n    },\n    samples2: {\n      label: '选项卡样式',\n      description: '设置type属性为card'\n    },\n    samples3: {\n      label: '卡片化样式',\n      description: '设置type属性为border-card'\n    },\n    samples4: {\n      label: '自定义标签',\n      description: '可以通过具名为label的slot来实现自定义标签内容'\n    },\n    samples5: {\n      label: '动态增减标签页'\n    },\n    samples6: {\n      label: '自定义增加标签页触发器'\n    },\n    samples10: {\n      label: '标签置于底部',\n      description: '设置tab-bottom属性为true'\n    },\n    samples7: {\n      row1column2: '风格类型',\n      row2column2: '标签是否显示关闭按钮',\n      row3column2: '标签是否显示新增按钮',\n      row4column2: '标签是否同时显示增加和关闭按钮',\n      row5column2: '绑定值, 选中选项卡的 name',\n      row5column5: '第一个选项卡的name',\n      row6column2: '标签是否置于底部'\n    },\n    samples8: {\n      row1column2: '选项卡被选中时触发',\n      row1column3: '被选中的选项卡实例, 事件实例',\n      row2column2: '点击选项卡关闭按钮触发',\n      row2column3: '被选中的选项卡的name',\n      row3column2: '点击选项卡的新增按钮触发',\n      row4column2: '点击选项卡的新增或关闭后触发',\n      row4column3: '被选中的选项卡的name, 事件行为(add, remove)'\n    },\n    samples9: {\n      row1column2: '选项卡标题',\n      row2column2: '是否禁用',\n      row3column2: '选项卡别名',\n      row4column2: '标签是否显示关闭按钮'\n    }\n  },\n  popoverDemo: {\n    label: 'Popover',\n    description: '用于展示小段信息',\n    samples1: {\n      label: '基础用法',\n      description: 'trigger属性用于设置何时触发 Popover, 提供三种触发方式：hover, click, focus. 可以通过slot指定reference. '\n    },\n    samples2: {\n      label: '嵌套信息',\n      description: '可以在Popover中嵌套多种信息'\n    },\n    samples3: {\n      label: '嵌套信息',\n      description: '可以在Popover中嵌套多种操作'\n    },\n    samples4: {\n      row1column2: '触发方式',\n      row2column2: '标题',\n      row3column2: '显示的内容, 也可以通过slot传入',\n      row4column2: '宽度',\n      row5column2: '出现位置',\n      row6column2: '是否可用',\n      row7column2: '是否可见',\n      row8column2: '为popper添加类名',\n      row9column2: '触发方式为hover时的显示延迟, 单位为毫秒',\n      row10column2: '是否显示箭头'\n    },\n    samples5: {\n      row1column2: 'Popover内嵌内容',\n      row2column2: '触发Popover显示的元素'\n    },\n    samples6: {\n      row1column2: '显示时触发',\n      row2column2: '隐藏时触发'\n    }\n  },\n  tooltipDemo: {\n    label: 'Tooltip',\n    description: '用于展示鼠标hover时的提示信息. ',\n    samples1: {\n      label: '基础用法',\n      description: '使用content属性来决定hover时的提示信息. 由placement属性决定展示效果：placement属性值为：方向-对齐位置；四个方向：top、left、right、bottom；三种对齐位置：start, end, 默认为空. 如placement=\"left-end\", 则提示信息出现在目标元素的左侧, 且提示信息的底部与目标元素的底部对齐. '\n    },\n    samples2: {\n      label: '主题',\n      description: 'Tooltip组件提供了两个不同的主题：dark和light. '\n    },\n    samples3: {\n      label: '自定义内容',\n      description: '用具名content的slot替代tooltip中的content属性. '\n    },\n    samples4: {\n      label: '禁用状态',\n      description: '设置disabled属性即可, 它接受一个Boolean, true为禁用.'\n    },\n    samples5: {\n      row1column2: '默认提供的主题',\n      row2column2: '鼠标是否可进入到 tooltip中',\n      row3column2: '显示的内容, 也可以通过slot传入',\n      row4column2: '出现位置',\n      row5column2: '是否可用',\n      row6column2: '是否可见',\n      row7column2: '为popper添加类名',\n      row9column2: '是否显示箭头'\n    }\n  },\n  tagDemo: {\n    label: 'Tag',\n    description: '用于标记和选择. ',\n    samples1: {\n      label: '基础用法',\n      description: '用type属性来选择tag的类型, 用width属性来设置tag的宽度, 设置closable属性可以定义一个标签是否可移除, 设置hit属性为true可以开启边框描边．'\n    },\n    samples2: {\n      label: '动态编辑标签'\n    },\n    samples3: {\n      row1column2: '主题',\n      row2column2: '是否可关闭',\n      row4column2: '是否有边框描边',\n      row5column2: 'tag的宽度'\n    },\n    samples4: {\n      row1column2: '关闭tag时触发的事件'\n    }\n  },\n  alertDemo: {\n    label: 'Alert',\n    description: '用于页面中展示重要的提示信息. ',\n    samples1: {\n      label: '基础用法',\n      description: '组件提供四种主题, 由type属性指定, 默认值为info. closable属性决定是否可关闭, 可以设置close-text属性来代替右侧的关闭图标, 设置close事件来设置关闭时的回调. 设置show-icon属性来显示icon. 设置dark属性来显示深色样式. '\n    },\n    samples2: {\n      row1column2: '标题',\n      row2column2: '主题',\n      row3column2: '是否可关闭',\n      row4column2: '关闭按钮自定义文本',\n      row5column2: '是否显示图标',\n      row6column2: '是否开启暗色模式'\n    },\n    samples3: {\n      row1column2: '关闭alert时触发的事件'\n    }\n  },\n  noteDemo: {\n    label: 'Note',\n    description: '用于页面中展示信息. ',\n    samples1: {\n      label: '基础用法',\n      description: '组件提供四种主题, 由type属性指定, 默认值为info. '\n    },\n    samples2: {\n      row1column2: '标题',\n      row2column2: '主题',\n      row3column2: '是否开启朴素模式'\n    }\n  },\n  cardDemo: {\n    label: 'Card',\n    description: '将信息聚合在卡片容器中展示. ',\n    samples1: {\n      label: '基础用法',\n      description: 'Card组件包括header和body部分, header部分需要有显式具名slot分发, 同时也是可选的. '\n    },\n    samples2: {\n      label: '简单卡片',\n      description: '卡片可以只有内容区域. '\n    },\n    samples3: {\n      row1column2: '设置 header, 也可以通过名为header的slot传入DOM',\n      row2column2: '设置 body的样式',\n      row3column2: '设置阴影显示时机'\n    },\n    samples4: {\n      label: '卡片阴影',\n      description: '通过shadow属性设置卡片阴影出现的时机：always、hover或never。'\n    }\n  },\n  carouselDemo: {\n    label: 'Carousel',\n    description: '在有限空间内, 循环播放同一类型的图片、文字等内容. ',\n    samples1: {\n      label: '基础用法',\n      description: '内容是任意的, 默认情况下, 在鼠标hover底部的指示器时就会触发切换. 通过设置trigger属性为click, 可以达到点击触发的效果. 将type属性设置为card即可启用卡片模式. '\n    },\n    samples2: {\n      label: '指示器',\n      description: 'indicator-position属性定义了指示器的位置. 默认情况下, 它会显示在走马灯内部, 设置为outside则会显示在外部；设置为none则不会显示指示器. '\n    },\n    samples3: {\n      label: '箭头',\n      description: 'arrow属性定义了切换箭头的显示时机. 默认情况下, 切换箭头只有在鼠标hover到走马灯上时才会显示；若将arrow设置为always, 则会一直显示；设置为never, 则会一直隐藏. '\n    },\n    samples4: {\n      row1column2: '走马灯的高度',\n      row2column2: '初始状态激活的幻灯片的索引, 从0开始',\n      row3column2: '指示器的触发方式',\n      row4column2: '是否自动切换',\n      row5column2: '自动切换的时间间隔, 单位为毫秒',\n      row6column2: '指示器的位置',\n      row7column2: '切换箭头的显示时机',\n      row8column2: '走马灯的类型',\n      row9column2: '悬停时是否停止自动切换'\n    },\n    samples5: {\n      row1column2: '幻灯片切换时触发',\n      row1column3: '目前激活的幻灯片的索引, 原幻灯片的索引. (newIndex, oldIndex)'\n    },\n    samples6: {\n      row1column2: '手动切换幻灯片',\n      row1column3: '需要切换的幻灯片的索引, 从0开始；或相应vue-carousel-item的name属性值',\n      row2column2: '切换至上一张幻灯片',\n      row3column2: '切换至下一张幻灯片'\n    },\n    samples7: {\n      row1column2: '幻灯片的名字, 可用作setActiveItem的参数',\n      row1column3: '该幻灯片所对应指示器的文本'\n    }\n  },\n  loadingDemo: {\n    label: 'Loading',\n    description: '加载数据时显示动效. ',\n    samples1: {\n      label: '基础用法',\n      description: '使用自定义指令v-loading, 在绑定了v-loading指令的元素上添加vue-loading-text属性, 其值会被渲染为加载文案, 并显示在加载图标的下方．当需要全屏遮罩时, 可使用fullscreen修饰符. '\n    },\n    samples2: {\n      row1column2: '显示在加载图标下方的加载文案',\n      row2column2: 'Loading的自定义类名'\n    }\n  },\n  loadingBarDemo: {\n    label: 'LoadingBar',\n    description: '全局创建一个显示页面加载、异步请求、文件上传等的加载进度条. ',\n    samples1: {\n      label: '基础用法',\n      description: '在调用start()方法后, 组件会自动模拟进度, 当调用finish()或error()时, 补全进度并自动消失. '\n    },\n    samples2: {\n      row1column2: '开始从0显示进度条, 并自动加载进度',\n      row1column3: '回调函数',\n      row2column2: '结束进度条, 自动补全剩余进度',\n      row2column3: '回调函数',\n      row3column2: '以错误的类型结束进度条, 自动补全剩余进度',\n      row3column3: '回调函数',\n      row4column2: '精确加载到指定的进度',\n      row4column3: '指定的进度百分比(percent), 回调函数'\n    }\n  },\n  progressDemo: {\n    label: 'Progress',\n    description: '用于展示操作进度, 告知用户当前状态和预期. ',\n    samples1: {\n      label: '基础用法',\n      description: '设置percentage属性即可, 表示进度条对应的百分比, 可通过 stroke-width 属性更改进度条的高度, 并可通过 text-inside 属性来将进度条描述置于进度条内部. 可通过 type 属性来指定使用环形进度条, 在环形进度条中, 还可以通过 width 属性来设置其大小. '\n    },\n    samples2: {\n      row1column2: '百分比',\n      row2column2: '进度条类型',\n      row3column2: '进度条的宽度, 单位 px',\n      row4column2: '进度条显示文字内置在进度条内(只在type==line时可用)',\n      row5column2: '进度条当前状态',\n      row6column2: '环形进度条画布宽度(只在type==circle时可用)',\n      row7column2: '是否显示进度条文字内容'\n    }\n  },\n  sliderDemo: {\n    label: 'Slider',\n    description: '通过拖动滑块在一个固定区间内进行选择. ',\n    samples1: {\n      label: '基础用法',\n      description: '通过设置绑定值自定义滑块的初始值. '\n    },\n    samples2: {\n      label: '离散值',\n      description: '改变step的值可以改变步长, 通过设置show-step属性可以显示间断点'\n    },\n    samples3: {\n      label: '范围选择',\n      description: '设置range即可开启范围选择, 此时绑定值是一个数组, 其元素分别为最小边界值和最大边界值'\n    },\n    samples4: {\n      label: '竖向模式',\n      description: '设置vertical可使Slider变成竖向模式, 此时必须设置高度height属性'\n    },\n    samples5: {\n      row1column2: '最小值',\n      row2column2: '最大值',\n      row3column2: '是否禁用',\n      row4column2: '步长',\n      row5column2: '是否显示间断点',\n      row6column2: '是否显示 tooltip',\n      row7column2: '格式化 tooltip message',\n      row8column2: '是否为范围选择',\n      row9column2: '是否竖向模式',\n      row10column2: 'Slider高度(只在竖向模式可用)'\n    },\n    samples6: {\n      row1column2: '值改变时触发(使用鼠标拖曳时, 只在松开鼠标后触发)',\n      row1column3: '改变后的值'\n    }\n  },\n  breadcrumbDemo: {\n    label: 'Breadcrumb',\n    description: '显示当前页面的路径, 快速返回之前的任意页面. ',\n    samples1: {\n      label: '基础用法',\n      description: '设置separator属性改变分隔符,默认为斜杠\\'/\\''\n    },\n    samples2: {\n      row1column2: '分隔符'\n    },\n    samples3: {\n      row1column2: '路由跳转对象, 同vue-router的to'\n    },\n    samples4: {\n      row1column2: '点击事件, 只有当没有定义to属性时点击触发'\n    }\n  },\n  stepsDemo: {\n    label: 'Steps',\n    description: '引导用户按照流程完成任务的分步导航条, 可根据实际应用场景设定步骤, 步骤不得少于 2 步. ',\n    samples1: {\n      label: '基础用法',\n      description: '设置active属性, 接受一个Number, 表明步骤的index, 从0开始. 需要定宽的步骤条时, 设置space属性即可, 单位为px, 如果不设置, 则为自适应. 设置finish-status属性可以改变已经完成的步骤的状态. '\n    },\n    samples2: {\n      label: '有描述的步骤条',\n      description: '每个步骤有其对应的步骤状态描述.'\n    },\n    samples3: {\n      label: '带图标的步骤条',\n      description: '通过icon属性来设置图标'\n    },\n    samples4: {\n      label: '竖式步骤条',\n      description: '设置direction属性为vertical可使steps变成竖向模式'\n    },\n    samples5: {\n      row1column2: '每个step的间距，不填写将自适应间距。支持百分比',\n      row2column2: '显示方向',\n      row3column2: '设置当前激活步骤',\n      row4column2: '设置当前步骤的状态',\n      row5column2: '设置结束步骤的状态',\n      row6column2: '标题描述居中对齐',\n      row7column2: '组件居中显示'\n    },\n    samples6: {\n      row1column2: '标题',\n      row2column2: '图标',\n      row3column2: '设置当前步骤的状态，不设置则根据steps确定状态'\n    },\n    samples7: {\n      row1column2: '内容',\n      row2column2: '标题'\n    }\n  },\n  rateDemo: {\n    label: 'Rate',\n    description: '出现在按钮、图标旁的数字或状态标记。',\n    samples1: {\n      label: '基础用法',\n      description: '评分被分为三个等级，可以利用颜色对分数及情感倾向进行分级(默认情况下不区分颜色)。三个等级所对应的颜色用过colors属性设置'\n    },\n    samples2: {\n      label: '辅助文字',\n      description: '为组件设置show-text属性会在右侧显示辅助文字。通过设置texts可以为每一个分值指定对应的辅助文字。texts为一个数组，长度应等于最大值max。'\n    },\n    samples3: {\n      label: '其它 icon',\n      description: '设置icon-classes属性可以自定义对应3个不同分段的图标。void-icon-class指定未选中时的图标类名。'\n    },\n    samples4: {\n      label: '只读',\n      description: '设置disabled属性表示组件为只读，支持小数分值。此时若设置show-text，则会在右侧显示目前的分值。可以提供text-template作为显示模板，模板为一个包含了{value}的字符串，{value}会被解析为分值。'\n    },\n    samples5: {\n      row1column2: '最大分值',\n      row2column2: '是否为只读',\n      row3column2: '是否允许半选',\n      row4column2: '低分和中等分数的界限值，值本身被划分在低分中',\n      row5column2: '高分和中等分数的界限值，值本身被划分在高分中',\n      row6column2: 'icon的颜色数组，共有3个元素，为3个分段所对应的颜色',\n      row7column2: '未选中icon的颜色',\n      row8column2: '只读时未选中icon的颜色',\n      row9column2: 'icon的类名数组，共有3个元素，为3个分段所对应的类名',\n      row10column2: '未选中icon的类名',\n      row11column2: '只读时未选中icon的类名',\n      row12column2: '是否显示辅助文字',\n      row13column2: '辅助文字的颜色',\n      row14column2: '辅助文字数组',\n      row15column2: '只读时的辅助文字模板'\n    },\n    samples6: {\n      row1column2: '分值改变后触发',\n      row1column3: '改变后的分值'\n    }\n  },\n  pinDemo: {\n    label: 'Pin',\n    description: '使用图钉，可以将内容固定在屏幕上，并且不随页面的滚动而滚动。常用于侧边菜单等。可以通过调整浏览器窗口高度来查看效果',\n    samples1: {\n      label: '基础用法',\n      description: '简单使用，当元素不可见时，直接固定在最顶端。当固定状态发生改变时，会触发change事件。'\n    },\n    samples2: {\n      label: '偏移',\n      description: '设置offset-top或offset-bottom可当滚动到一定距离时再固定。'\n    },\n    samples3: {\n      label: '固定在底部',\n      description: '在屏幕下方固定。注意，offset-top和offset-bottom只可以设置一个，如果都设置，会使用offset-top。'\n    },\n    samples4: {\n      label: '始终固定',\n      description: '设置fixed属性可始终固定在一个位置'\n    },\n    samples5: {\n      row1column2: '距离窗口顶部达到指定偏移量后触发',\n      row2column2: '距离窗口底部达到指定偏移量后触发',\n      row3column2: '是始终固定在一个位置'\n    },\n    samples6: {\n      row1column2: '在固定状态发生改变时触发',\n      row1column3: '固定状态(true/false)'\n    }\n  },\n  uploadDemo: {\n    label: 'Upload',\n    description: '通过点击或者拖拽上传文件。',\n    samples1: {\n      label: '基础用法',\n      description: '通过slot你可以传入自定义的上传按钮类型和文字提示。使用before-upload限制用户上传的格式和大小'\n    },\n    samples2: {\n      label: '照片墙',\n      description: '设置list-type属性为picture-card。'\n    },\n    samples3: {\n      label: '图片列表缩略图',\n      description: '设置list-type属性为picture。'\n    },\n    samples4: {\n      label: '上传文件列表控制',\n      description: '通过on-change钩子函数来对列表进行控制'\n    },\n    samples5: {\n      label: '拖拽上传',\n      description: '设置drag属性即可'\n    },\n    samples6: {\n      label: '手动上传',\n    },\n    samples7: {\n      row1column2: '上传的地址',\n      row2column2: '可选参数, 设置上传的请求头部',\n      row3column2: '可选参数, 是否支持多选文件',\n      row4column2: '可选参数, 上传时附带的额外参数',\n      row5column2: '可选参数, 上传的文件字段名',\n      row6column2: '支持发送cookie凭证信息',\n      row7column2: '是否显示已上传文件列表',\n      row8column2: '是否启用拖拽上传',\n      row9column2: '可选参数, 接受上传的文件类型(thumbnail-mode模式下此参数无效)',\n      row10column2: '可选参数, 点击已上传的文件链接时的钩子, 可以通过file.response拿到服务端返回数据',\n      row11column2: '可选参数, 文件列表移除文件时的钩子',\n      row12column2: '可选参数, 文件上传成功时的钩子',\n      row13column2: '可选参数, 文件上传失败时的钩子',\n      row14column2: '可选参数, 文件上传时的钩子',\n      row15column2: '可选参数, 文件状态改变时的钩子, 添加文件、上传成功和上传失败时都会被调用',\n      row16column2: '可选参数, 上传文件之前的钩子, 参数为上传的文件, 若返回 false 或者返回 Promise 且被 reject, 则停止上传.',\n      row17column2: '文件列表的类型',\n      row18column2: '是否在选取文件后立即进行上传',\n      row19column2: '上传的文件列表',\n      row20column2: '覆盖默认的上传行为, 可以自定义上传的实现',\n      row21column2: '是否禁用',\n      row22column2: '可选参数, 最大上传数量',\n    },\n    samples8: {\n      row1column2: '清空已上传的文件列表(该方法不支持在before-upload中调用)'\n    }\n  },\n  colorDemo: {\n    label: 'ColorPicker',\n    description: '用于颜色选择，支持多种格式。',\n    samples1: {\n      label: '基础用法',\n      description: '使用v-model绑定变量, 需字符串类型。'\n    },\n    samples2: {\n      label: '选择透明度',\n      description: 'ColorPicker支持普通颜色，也支持带Alpha通道的颜色，通过show-alpha属性即可控制是否支持透明度的选择。'\n    },\n    samples3: {\n      row1column2: '是否支持透明度选择',\n      row2column2: '写入v-model的颜色的格式',\n      row2column5: 'hex(show-alpha为false)/rgb(show-alpha为true)',\n    },\n    samples4: {\n      row2column2: '是否禁用状态',\n      row2column5: 'false',\n    },\n    samples5: {\n      row1column2: '当绑定值变化时触发',\n      row1column3: '当前值'\n    }\n  },\n  navMenuDemo: {\n    label: 'NavMenu',\n    description: '为网站提供导航功能的菜单。',\n    samples1: {\n      label: '顶栏',\n      description: '导航菜单默认为垂直模式，通过 mode属性可以使导航菜单变更为水平模式。另外，在菜单中通过submenu组件可以生成二级菜单。通过theme属性可以设置主题'\n    },\n    samples2: {\n      label: '侧栏',\n      description: '通过vue-menu-item-group组件可以实现菜单进行分组，分组名可以通过title属性直接设定也可以通过具名slot来设定。'\n    },\n    samples3: {\n      row1column2: '模式',\n      row2column2: '主题色',\n      row3column2: '当前激活菜单的index',\n      row4column2: '当前打开的submenu的key数组',\n      row5column2: '是否只保持一个子菜单的展开',\n      row6column2: '子菜单打开的触发方式(只在 mode为 horizontal时有效)',\n      row7column2: '是否使用vue-router的模式，启用该模式会在激活导航时以index作为path进行路由跳转'\n    },\n    samples4: {\n      row1column2: '菜单激活回调',\n      row1column3: 'index:选中菜单项的index, indexPath:选中菜单项的index path',\n      row2column2: 'SubMenu展开的回调',\n      row2column3: 'index:打开的subMenu的index, indexPath:打开的subMenu的index path',\n      row3column2: 'SubMenu收起的回调',\n      row3column3: 'index:收起的subMenu的index, indexPath:收起的subMenu的index path'\n    },\n    samples5: {\n      row1column2: '唯一标志',\n    },\n    samples6: {\n      row1column2: '唯一标志',\n      row2column2: 'Vue Router路径对象',\n    },\n    samples7: {\n      row1column2: '分组标题',\n    },\n    samples8: {\n      label: 'Collapse',\n      description: 'Vertical NavMenu could be collapsed.'\n    },\n  },\n  listDemo: {\n    label: 'List',\n    description: '用于相似元素信息的展示。',\n    samples1: {\n      label: '基础用法',\n      description: '通过height属性设置list高度, 通过<vue-divider>控件来追加item间的分隔线'\n    },\n    samples2: {\n      row1column2: 'list高度',\n      row2column2: '滚动竖向滚动条时的钩子',\n      row3column2: '默认选中的item index',\n      row4column2: '是否默认选中item',\n      row5column2: '是否启用虚拟滚动条'\n    },\n    samples3: {\n      row1column2: '选中item时的回调',\n      row1column3: '选中的item',\n    }\n  },\n  sortableDemo: {\n    label: 'Sortable',\n    description: '使用鼠标调整列表中或者网格中元素的排序。',\n    samples1: {\n      label: '基础用法',\n      description: '根据属性element设置sortable的容器, 如:\"div\"'\n    },\n    samples2: {\n      label: '数据绑定',\n      description: '绑定数据后进行拖动,数据会相应地发生变化'\n    },\n    samples3: {\n      label: '克隆',\n      description: '设置options的group的pull属性为\"clone\"可以开启克隆模式,同一容器内无法克隆'\n    },\n    samples4: {\n      row1column2: '绑定一个拖拽同步的数组',\n      row2column2: '可以拖拽组件的HTML节点类型',\n      row3column2: '当sortable的clone选项为true时的回调函数, 返回要克隆的数据, 只在绑定数据时生效',\n      row4column2: '拖拽时的回调函数, 只在绑定数据时生效',\n      row5column2: '初始化sortable对象的选项, 参考下表',\n    },\n    samples5: {\n      row1column2: '将元素从一个容器中拖放到另一个容器中，两个容器必须具有相同的组名, 参考下表',\n      row2column2: '同一个容器内是否可以自由排序',\n      row3column2: '选中元素几毫秒后可以开始拖拽',\n      row4column2: '是否禁用sortable',\n      row5column2: '在容器中可以拖动的句柄选择器',\n      row6column2: '在容器中不能拖动的句柄选择器',\n      row7column2: '拖动元素时的占位类名',\n      row8column2: '选中元素时的类名'\n    },\n    samples6: {\n      row1column2: '组名',\n      row2column2: '是否可以从容器中拖出元素, \"clone\"为克隆元素',\n      row3column2: '是否可以把元素拖入容器中'\n    },\n    samples7: {\n      row1column2: '开始拖拽的回调事件',\n      row2column2: '容器追加元素的回调事件',\n      row3column2: '容器移除元素的回调事件',\n      row4column2: '容器更新元素的回调事件',\n      row5column2: '结束拖拽的回调事件',\n      row6column2: '选中元素的回调事件',\n      row7column2: '同一容器内元素排序的回调事件',\n      row8column2: '选中不能拖动的句柄选择器时的回调事件',\n      row9column2: '克隆的回调事件',\n    }\n  },\n  tableDemo: {\n    label: 'Table',\n    description: '用于展示多条结构类似的数据，可对数据进行排序、筛选、对比或其他自定义操作。(1.6.4 removed, can be import separately)',\n    samples1: {\n      label: '基础用法',\n      description: '当vue-table元素中注入data对象数组后，在vue-table-column中用prop属性来对应对象中的键名即可填入数据，用label属性来定义表格的列名，可以使用width属性来定义列宽；设置stripe属性为true可以创建带斑马纹的表格，它默认为false；设置border属性为true可以具有竖直方向的边框的。它默认为false．'\n    },\n    samples2: {\n      label: '固定列',\n      description: '固定列需要使用fixed属性，它接受 Boolean 值或者left, right，表示左边固定还是右边固定。'\n    },\n    samples3: {\n      label: '自定义模板',\n      description: '通过slot-scope可以获取到row, column, $index 和store(table 内部的状态管理)的数据, 可组合其他组件自定义显示的内容'\n    },\n    samples4: {\n      label: '增删改'\n    },\n    samples5: {\n      label: '排序',\n      description: '通过表的default-sort属性设置默认的排序列和排序顺序。在列中设置sortable属性即可实现以该列为基准的排序'\n    },\n    samples6: {\n      label: '筛选',\n      description: '在列中设置filterable属性为true即可开启该列的筛选。'\n    },\n    samples7: {\n      label: '自定义样式',\n      description: '通过table的属性row-class-name可以给行指定样式, 通过table-column的属性class-name可以给列指定样式, 通过table-column的属性label-class-name可以给label的指定样式'\n    },\n    samples8: {\n      label: '展开行',\n      description: '设置type=\"expand\"和Scoped slot可以开启展开行功能，vue-table-column的模板会被渲染成为展开行的内容，展开行可访问的属性与使用自定义列模板时的 Scoped slot 相同。设置table的expand-class-name属性 可以给展开行指定样式'\n    },\n    samples14: {\n      label: '单选',\n      description: '配置highlight-current-row属性即可实现单选。之后由current-change事件来管理选中时触发的事件，它会传入currentRow, oldCurrentRow'\n    },\n    samples15: {\n      label: '多选',\n      description: '手动添加一个vue-table-column，设type属性为selection即可实现多选'\n    },\n    samples16: {\n      label: '合计',\n      description: '将show-footer设置为true就会在表格尾部展示合计行。对于合计行，根据每列的aggregate属性进行计算'\n    },\n    samples17: {\n      label: '隐藏列',\n      description: '对vue-table-column设置visible属性为false, 可以隐藏该列'\n    },\n    samples18: {\n      label: '快捷菜单',\n      description: '设置context-menu属性为true, 可以开启快捷菜单功能, 调用table的内部方法toggleContextMenu切换快捷菜单'\n    },\n    samples19: {\n      label: '懒加载',\n      description: '设置lazyload属性为true, 可以开启懒加载模式, 设置了height时有效'\n    },\n    samples20: {\n      label: '排序过滤选中行定位',\n      description: '排序过滤选中行定位'\n    },\n    samples9: {\n      row1column2: '显示的数据',\n      row2column2: 'Table的高度，默认为自动高度。',\n      row3column2: '是否为斑马纹table',\n      row4column2: '是否带有纵向边框',\n      row5column2: '列的宽度是否自撑开',\n      row6column2: '是否显示表头',\n      row7column2: '是否要高亮选择行',\n      row8column2: '行的className的回调方法，也可以使用字符串为所有行设置一个固定的className。',\n      row9column2: '空数据时显示的文本内容，也可以通过slot=\"empty\"设置',\n      row10column2: '是否默认展开所有行，只对type=\"expand\"的Column有效',\n      row11column2: '展开行的className的回调方法，也可以使用字符串为所有展开行设置一个固定的className。只对type=\"expand\"的Column有效',\n      row12column2: '默认的排序列的prop和顺序。它的prop属性指定默认的排序的列，order属性指定默认排序的顺序',\n      row12column5: '如果只指定了prop, 没有指定order, 则默认顺序是ascending',\n      row13column2: 'tooltip effect 属性',\n      row14column2: '是否在表尾显示合计行',\n      row15column2: '合计行第一列的文本',\n      row16column2: '自定义的合计计算方法',\n      row17column2: '懒加载DOM模式, 设置了height时有效',\n      row18column2: '是否要高亮当前行',\n      row19column2: '过滤后自动高亮第一行',\n      row20column2: '排序后自动高亮第一行'\n    },\n    samples10: {\n      row1column2: '当用户手动勾选数据行的Checkbox时触发的事件',\n      row2column2: '当用户手动勾选全选Checkbox时触发的事件',\n      row3column2: '当选择项发生变化时会触发该事件',\n      row4column2: '当单元格hover进入时会触发该事件',\n      row5column2: '当单元格hover退出时会触发该事件',\n      row6column2: '当某个单元格被点击时会触发该事件',\n      row7column2: '当某个单元格被双击击时会触发该事件',\n      row8column2: '当某一行被点击时会触发该事件',\n      row9column2: '当某一行被鼠标右键点击时会触发该事件',\n      row10column2: '当某一行被双击时会触发该事件',\n      row11column2: '当某一列的表头被点击时会触发该事件',\n      row12column2: '当拖动表头改变了列的宽度的时候会触发该事件',\n      row13column2: '当表格的排序条件发生变化的时候会触发该事件',\n      row14column2: '当表格的筛选条件发生变化的时候会触发该事件，参数的值是一个对象，对象的key是column的columnKey，对应的value为用户选择的筛选条件的数组',\n      row15column2: '当表格的当前行发生变化的时候会触发该事件，如果要高亮当前行，请打开表格的highlight-current-row属性',\n      row16column2: '当对某一行展开或者关闭的时候触发该事件',\n      row17column2: '当滚动条拉至顶部的时候触发该事件',\n      row18column2: '当滚动条拉至底部的时候触发该事件',\n      row19column2: '当滚动条拉至最左部的时候触发该事件',\n      row20column2: '当滚动条拉至最右部的时候触发该事件',\n    },\n    samples11: {\n      row11column2: '用于多选表格，获取用户的选择',\n      row1column2: '用于多选表格，清空用户的选择',\n      row2column2: '用于多选表格，切换某一行的选中状态',\n      row3column2: '用于单选表格，设定某一行为选中行',\n      row4column2: '切换context menu状态',\n      row5column2: '对某列进行过滤',\n      row6column2: '对多列进行排序',\n      row7column2: '将数据导出为 csv文件',\n      row7column3: 'params(Object): fileName文件名，默认为table.csv; original是否导出为原始数据，默认为true',\n      row8column2: '用于单选表格，获取选中行',\n      row9column2: '重置所有过滤',\n      row10column2: '重置所有排序'\n    },\n    samples12: {\n      row1column2: '自定义模板',\n      row2column2: '头部自定义模板'\n    },\n    samples13: {\n      row1column2: '对应列的类型. 如果设置了selection则显示多选框; 如果设置了index则显示该行的索引(从1开始计算); 如果设置了expand则显示为一个可展开的按钮',\n      row3column2: '显示的标题',\n      row4column2: '对应列数据的字段名',\n      row5column2: '对应列的宽度',\n      row6column2: '对应列的最小宽度，会把table剩余宽度按比例分配给设置了min-width的列',\n      row7column2: '列是否固定在左侧或者右侧，true表示固定在左侧',\n      row8column2: '列标题Label区域渲染使用的Function',\n      row9column2: '对应列是否可以排序，',\n      row10column2: '对数据进行排序的时候使用的方法，仅当sortable为true的时候有效，需返回一个布尔值',\n      row11column2: '对应列是否可以通过拖动改变宽度(需要在vue-table上设置border属性为true)',\n      row12column2: '用来格式化内容',\n      row13column2: '当内容过长显示tooltip',\n      row14column2: '对齐方式',\n      row15column2: '表头对齐方式',\n      row16column2: '列的自定义类名',\n      row17column2: '当前列标题的自定义类名',\n      row18column2: '仅对type==selection的列有效，返回一个boolean用来决定这一行的 CheckBox是否可以勾选',\n      row19column2: '对应列是否可以过滤',\n      row20column2: '数据过滤的选项，数组格式，数组中的元素需要有text和value属性',\n      row22column2: '数据过滤使用的方法，返回一个boolean用来决定是否显示',\n      row23column2: '是否显示列',\n      row24column2: '合计类型',\n      row25column2: '合计标题',\n      row26column2: 'csv文件的标题',\n      row27column2: '标题是否被前一列合并',\n      row28column2: '数据相同的行合并'\n    }\n  },\n  draggableDemo: {\n    label: 'Draggable',\n    description: '通过单击鼠标并拖动对象在窗口内任意移动. ',\n    samples1: {\n      label: '基础用法',\n      description: '绑定了v-draggable指令的元素即可在带滚动条的父层窗口范围内任意移动'\n    },\n    samples2: {\n      row1column2: '通过选择器指定元素内的子元素无法触发拖动事件'\n    }\n  },\n  adaptiveGroup: {\n    label: 'AdaptiveGroup',\n    description: '根据窗口大小对li slot聚集. ',\n    samples1: {\n      label: '基础用法',\n      description: ''\n    },\n    samples2: {\n      row1column2: '触发自适应的大小',\n      row2column2: '自定义class',\n      row3column2: '自定义下拉列class',\n      row4column2: '自定义触发下拉列图标的class'\n    },\n    samples3: {\n      row1column2: '不被收至下拉列内',\n      row2column2: '被收至下拉列内'\n    }\n  },\n  rippleDemo: {\n    label: 'Ripple',\n    description: '点击时触发波纹效果.',\n    samples1: {\n      label: '基础用法',\n      description: '对需要触发波纹效果的元素设定v-ripple指令即可'\n    },\n  },\n  signatureDemo: {\n    label: 'Signature',\n    description: '签名画布控件，可生成base64数据',\n    samples1: {\n      label: '基础用法',\n      description: '基础签名画布'\n    },\n    samples2: {\n      label: '获取签名图片base64数据',\n      description: '调用saveSignature方法，返回结果包含是否为空和base64数据'\n    },\n    samples3: {\n      label: '清空签名',\n      description: '调用clearSignature方法'\n    },\n    samples4: {\n      label: '撤销',\n      description: '调用undoSignature方法'\n    },\n    samples5: {\n      label: '锁定、解锁',\n      description: 'lockSignaturePad、openSignaturePad'\n    },\n    samples6: {\n      row1column2: '宽度',\n      row2column2: '高度',\n      row3column2: '保存图片格式，支持image/png, image/jpeg, image/svg+xml',\n      row4column2: '设置项目 {backgroundColor: string, penColor: string, onBegin：function, onEnd：function}',\n      row5column2: '自定义外层div样式 :custom-style=\"{border: \\'black 1px dotted\\'}\"',\n    },\n    samples7: {\n      row1column2: '返回签名的状态和base64数据',\n      row2column2: '撤销最后一笔笔画',\n      row3column2: '清空签名',\n      row4column2: '锁定',\n      row5column2: '解锁',\n      row6column2: '读取base64数据到画布',\n      row7column2: '是否是空的',\n    }\n  },\n  mobileInstallDemo: {\n    label: '快速上手',\n    description: '',\n    detail1:{\n      label: '引入',\n      description: '在页面头部VIY PC版代码后引入 (<a href=\"https://spring21cn.github.io/vue-component/example/vue-mobile/lib.zip\">Get Plugin</a>)',\n    },\n  },\n  scrollviewDemo: {\n    label: 'ScrollView 滚动列表',\n    description: '用于模拟原生的滚动区域，并支持下拉刷新和加载更多',\n\t  defatltText:'默认',\n    customText:'自定义',\n    detail2:{\n      label: '使用指南',\n      description1: 'ScrollViewRefresh为组件库内置的下拉刷新组件，仅用于作为视觉展示，需在插槽refresh中使用，下拉刷新组件也可自定义',\n      description2: 'ScrollViewMore为组件库内置的加载更多组件，仅用于作为视觉展示，需在插槽more中使用，加载更多组件也可自定义',\n      description3: '组件容器需具有高度，否则会出现无法滚动或回弹问题。更多使用的常见问题请查看附录'\n    },\n\t  samples1: {\n        label: '基础用法',\n        description: '实现纵向滚动',\n\t  },\n\t  samples2: {\n        label: '横向滚动',\n        description: '',\n\t  },\n\t  samples3: {\n        label: '下拉刷新',\n        description: '',\n\t  },\n\t  samples4: {\n        label: '上拉加载',\n        description: '',\n\t  },\n\t  samples5: {\n        label: '粘性标题',\n        description: '',\n\t  },\n\t  samples6: {\n        label: '配合TabBar',\n        description: '',\n\t  },\n\t  samples7: {\n        label: '手动初始化',\n        description: '',\n\t  },\n\t  attrsinfo: {\n       row1column2: '水平滚动',\n\t     row2column2: '垂直滚动',\n\t     row3column2: '可回弹',\n\t     row4column2: '内容发生变化时自动重置滚动区域尺寸',\n\t     row5column2: '手动初始化',\n\t     row6column2: '触发到达底部的提前量',\n\t     row7column2: '初始化时立即触发是否到达底部检查',\n\t     row8column2: '触发滚动的角度值范围',\n\t     row9column2: '防止浏览器默认滚动',\n\t  },\n\t  refreshAttrs: {\n       row1column2: '距离顶部的距离，输入值仅为数字',\n\t     row2column2: '释放刷新的状态',\n\t     row3column2: '刷新状态',\n\t     row4column2: '下拉刷新文本内容',\n\t     row4column5: '下拉刷新',\n\t     row5column2: '释放刷新文本内容',\n\t     row5column5: '释放刷新',\n\t     row6column2: '刷新中的文本内容',\n\t     row6column5: '刷新中...',\n\t     row7column2: '进度条颜色'\n\t  },\n\t  moreAttrs: {\n       row1column2: '全部已加载',\n       row2column2: '加载中的文本内容',\n\t     row2column5: '更多加载中...',\n\t     row3column2: '全部已加载的文本内容',\n\t     row3column5: '全部已加载',\n\t  },\n\t  slotInfo: {\n      default: '滚动区域内容槽。当内容更改时，需要调用reflowScroller来重置滚动区域。具体请参阅reflowScroller refresh。',\n      refresh: '下拉刷新组件槽，您可以使用slot-scoped来获得相关的滚动状态（当槽作用域不兼容时，滚动状态也可以通过事件动态设置），如下所示：',\n\t    more: '更多加载组件槽，通过实际加载情况，在事件中改变isFinished的值。默认为false。',\n\t  },\n    eventInfo: {\n      row1column2: '距左侧距离，输入值仅为数字',\n      row2column2: '距顶部距离，输入值仅为数字',\n      detail1: '参数说明',\n      detail2: '释放刷新事件',\n      detail3: '刷新事件',\n      detail4: '加载结束事件',\n    },\n    methodInfo: {\n      row1column2: '距左侧距离，输入值仅为数字',\n      row2column2: '距顶部距离，输入值仅为数字',\n      row3column2: '使用动画',\n      detail1: '初始化滚动区域。（当manual-init被设置为true时使用。）',\n      detail2: '重置滚动区域，需要在常规滚动区域的内容发生更改后调用该区域。',\n      detail3: '滚动到指定位置，以下为参数说明：',\n      detail4: '获取滚动位置，其返回对象为 {left: number, top: number}',\n      detail5: '触发下拉刷新方法',\n      detail6: '结束下拉刷新方法，，示例代码：',\n      detail7: '触发触底事件，实现上拉加载方法，示例代码：',\n      detail8: '结束上拉加载方法，示例代码：',\n    },\n  },\n  actionsheetDemo: {\n    label: 'ActionSheet 动作面板',\n    description: '',\n\t  defatltText:'默认',\n    customText:'自定义',\n    detail1:{\n      label: '介绍',\n      description: '底部弹起的模态面板，包含与当前情境相关的多个选项。'\n    },\n\t  attrsInfo: {\n      row1column2: '是否显示动作面板',\n\t    row2column2: '面板选项列表',\n\t    row3column2: '顶部标题',\n\t    row4column2: '取消按钮文字',\n\t    row5column2: '选项上方的描述信息',\n\t    row6column2: '关闭图标名称或图片链接',\n\t    row7column2: '动画时长，单位秒',\n\t    row8column2: '是否显示圆角',\n\t    row9column2: '是否显示遮罩层',\n\t    row10column2: '是否锁定背景滚动',\n\t    row11column2: '是否在显示弹层时才渲染节点',\n\t    row12column2: '是否在页面回退时自动关闭',\n\t    row13column2: '是否在点击选项后关闭',\n\t    row14column2: '是否在点击遮罩层后关闭',\n\t    row15column2: '是否开启底部安全区适配',\n\t    row16column2: '指定挂载的节点',\n\t  },\n\t   actionsInfo: {\n      description: 'actions 属性是由对象构成的数组，数组中的每个对象配置一列，对象可以包含以下值：',\n      row1column2: '标题',\n\t    row2column2: '二级标题',\n\t    row3column2: '选项文字颜色',\n\t    row4column2: '为对应列添加额外的 class',\n\t    row5column2: '是否为加载状态',\n\t    row6column2: '是否为禁用状态',\n\t  },\n\t  eventInfo: {\n      row1column2: '点击选项时触发，禁用或加载状态下不会触发',\n\t    row2column2: '点击取消按钮时触发',\n\t    row3column2: '打开面板时触发',\n\t    row4column2: '关闭面板时触发',\n\t    row5column2: '打开面板且动画结束后触发',\n\t    row6column2: '关闭面板且动画结束后触发',\n\t    row7column2: '点击遮罩层时触发',\n\t  },\n  },\n  navbarDemo: {\n    label: 'NavBar 导航栏',\n    description: '',\n\t  defatltText:'默认',\n\t  customText:'自定义',\n\t  samples1: {\n        label: '基础用法',\n        description: '',\n\t  },\n\t  samples2: {\n        label: '插槽的使用',\n        description: '使用插槽，通过插槽自定义导航栏两侧的内容',\n\t  },\n\t  attrsInfo: {\n       row1column2: '标题',\n\t     row2column2: '左侧文案',\n\t     row3column2: '右侧文案',\n\t     row4column2: '是否显示左侧箭头',\n\t     row5column2: '是否显示下边框',\n\t     row6column2: '是否固定在顶部',\n\t     row7column2: '固定顶部时，是否在标签位置生成一个等高的占位元素',\n\t     row8column2: '元素 z-index',\n\t  },\n\t   slotInfo: {\n       row1column2: '自定义标题',\n\t     row2column2: '自定义左侧区域内容',\n\t     row3column2: '自定义右侧区域内容'\n\t  },\n\t  eventInfo: {\n       row1column2: '点击左侧按钮时触发',\n\t     row2column2: '点击右侧按钮时触发'\n\t  },\n  },\n  tabbarDemo: {\n    label: 'TabBar 标签栏',\n    description: '',\n\t  defatltText:'默认',\n\t  customText:'自定义',\n\t  samples1: {\n        label: '基础用法',\n        description: '',\n\t  },\n\t  samples2: {\n        label: '通过名称匹配',\n        description: '',\n\t  },\n\t  samples3: {\n        label: '微标提示',\n        description: '',\n\t  },\n\t  samples4: {\n        label: '自定义图标',\n        description: '通过icon插槽自定义图标，可以通过 slot-scope 判断标签是否选中',\n\t  },\n\t  samples5: {\n        label: '自定义颜色+监听切换事件用法',\n        description: '',\n\t  },\n\t  samples6: {\n        label: '路由模式',\n        description: '用于搭配vue-router使用。路由模式下会匹配页面路径和标签的to属性，并自动选中对应的标签',\n\t  },\n\t  attrsInfo: {\n       row1column2: '当前选中标签的名称或索引值',\n\t     row2column2: '是否固定在底部',\n\t     row3column2: '是否显示外边框',\n\t     row4column2: '元素 z-index',\n\t     row5column2: '选中标签的颜色',\n\t     row6column2: '未选中标签的颜色',\n\t     row7column2: '固定在底部时，是否在标签位置生成一个等高的占位元素',\n       row8column2: '是否开启底部安全区适配，设置 fixed 时默认开启',\n       row9column2: '是否开启路由模式'\n\t  },\n\t  eventInfo: {\n       row1column2: '切换标签时触发',\n       row1column3: 'active: 当前选中标签的名称或索引值'\n\t  },\n\t  tabBarItemAttrsInfo: {\n       row1column2: '标签名称，作为匹配的标识符',\n       row1column5: '当前标签的索引值',\n\t     row2column2: '图标名称或图片链接',\n\t     row3column2: '是否显示图标右上角小红点',\n\t     row4column2: '图标右上角徽标的内容',\n\t     row5column2: '图标右上角徽标的内容（已废弃，请使用 badge 属性）',\n\t     row6column2: '点击后跳转的链接地址',\n\t     row7column2: '点击后跳转的目标路由对象，同 vue-router 的 to 属性',\n\t     row8column2: '是否在跳转时替换当前页面历史',\n\t  },\n\t  tabBarItemSlotInfo: {\n       row1column2: '自定义图标,其中active表示是否为选中标签'\n\t  },\n  },\n  celllayoutDemo: {\n    label: 'CellLayout 宫格',\n    description: '',\n\t  defatltText:'默认',\n    customText:'自定义',\n    detail1:{\n      label: '介绍',\n      description: '宫格可以在水平方向上把页面分隔成等宽度的区块，用于展示内容或进行页面导航'\n    },\n\t  samples1: {\n        label: '基础用法',\n        description: '默认一行展示四个格子,有边框',\n\t  },\n\t  samples2: {\n        label: '自定义列数',\n        description: '可以通过column-num自定义列数',\n\t  },\n\t  samples3: {\n        label: '自定义显示内容',\n        description: '通过插槽可以自定义格子展示的内容',\n\t  },\n\t  samples4: {\n        label: '方形格子+自定义（间距+列数）+微标提示',\n        description: '',\n\t  },\n\t  samples5: {\n        label: '页面导航',\n        description: '使用url属性注意是跳转页面的路径',\n\t  },\n\t  attrsInfo: {\n       row1column2: '列数',\n\t     row2column2: '图标大小，默认单位为px',\n\t     row3column2: '格子之间的间距，默认单位为px',\n\t     row4column2: '是否显示边框',\n\t     row5column2: '是否将格子内容居中显示',\n\t     row6column2: '是否将格子固定为正方形',\n\t     row7column2: '是否开启格子点击反馈'\n\t  },\n\t  celllayoutitemAttrsInfo: {\n       row1column2: '文字',\n\t     row2column2: '图标名称或图片链接',\n\t     row3column2: '图标颜色',\n\t     row4column2: '是否显示图标右上角小红点',\n\t     row5column2: '图标右上角徽标的内容',\n\t     row6column2: '图标右上角徽标的内容（已废弃，请使用 badge 属性）',\n\t     row7column2: '点击后跳转的链接地址',\n\t     row8column2: '点击后跳转的目标路由对象，同 vue-router 的 to 属性',\n\t     row9column2: '是否在跳转时替换当前页面历史',\n\t  },\n\t  celllayoutitemEventInfo: {\n       row1column2: '点击格子时触发'\n    },\n    celllayoutitemSlotsInfo: {\n      row1column2: '自定义宫格的所有内容',\n      row2column2: '自定义图标',\n      row3column2: '自定义文字'\n   }\n  },\n  swipecellDemo: {\n    label: 'SwipeCell 滑动单元格',\n    description: '',\n\t  defatltText:'默认',\n\t  customText:'自定义',\n\t  samples1: {\n      label: '基础用法',\n      description: '',\n    },\n    samples2: {\n      label: '自定义内容',\n      description: '',\n    },\n    samples3: {\n      label: '异步关闭调用',\n      description: '通过传入before-close回调函数，可以自定义两侧滑动内容关闭时的行为',\n    },\n    attrsInfo: {\n      row1column2: '标识符，可以在事件参数中获取到',\n      row2column2: '指定左侧滑动区域宽度，单位为px',\n      row3column2: '指定右侧滑动区域宽度，单位为px',\n      row4column2: '关闭前的回调函数',\n      row5column2: '是否禁用滑动',\n      row6column2: '是否阻止滑动事件冒泡'\n    },\n     beforecloseAttrsInfo: {\n      description: 'beforeClose 的第一个参数为对象，对象中包含以下属性：',\n      row1column2: '标识符',\n      row2column2: '关闭时的点击位置 (left right cell outside)',\n      row3column2: 'SwipeCell 实例，用于调用实例方法'\n    },\n    slotsInfo: {\n      row1column2: '自定义显示内容',\n      row2column2: '左侧滑动内容',\n      row3column2: '右侧滑动内容'\n    },\n    eventInfo: {\n      row1column2: '点击时触发',\n      row1column3: '关闭时的点击位置 (left right cell outside)',\n      row2column2: '打开时触发',\n      row3column2: '关闭时触发'\n    },\n    methodInfo: {\n      description: '通过 ref 可以获取到 SwipeCell 实例并调用实例方法，详见组件实例方法',\n      row1column2: '打开单元格侧边栏,其参数 position: left | right',\n      row2column2: '收起单元格侧边栏',\n    }\n  },\n  texticonDemo: {\n    label: 'TextIcon 文本图标',\n    description: '',\n\t  defatltText:'默认',\n\t  customText:'自定义',\n\t  samples1: {\n      label: '基础用法',\n      description: '',\n    },\n    samples2: {\n        label: '颜色+字体大小设置',\n        description: '',\n    },\n    samples3: {\n        label: '文本排布方式(默认文本在下方)',\n        description: '',\n    },\n    samples4: {\n        label: '文本排布方式+文本边距设置（默认为2px）',\n        description: '',\n    },\n    attrsInfo: {\n       row1column2: '图标形状',\n       row2column2: '图标颜色',\n       row3column2: '图标大小',\n       row4column2: '是否有圆点标记',\n       row5column2: '角标内容',\n       row6column2: '文本名称',\n       row7column2: '文本字体颜色',\n       row8column2: '文本字体大小',\n       row9column2: '文本相对于图标的位置，分别有 \\'top\\' | \\'right\\' | \\'bottom\\' | \\'left\\'',\n       row10column2: '文本距离图标的边距'\n    },\n    eventInfo: {\n       row1column2: '点击时触发'\n    }\n  },\n  stepperDemo: {\n    label: 'Stepper 步进器',\n    description: '',\n\t  defatltText:'默认',\n    customText:'自定义',\n    detail1:{\n      label: '介绍',\n      description: '步进器由增加按钮、减少按钮和输入框组成，用于在一定范围内输入、调整数字'\n    },\n\t  samples1: {\n      label: '基础用法',\n      description: '',\n    },\n    samples2: {\n        label: '步长设置',\n        description: '通过step属性设置每次点击增加或减少按钮时变化的值，默认值为1，间隔设置为3',\n    },\n    samples3: {\n        label: '限制输入范围',\n        description: '通过min和max属性限制输入值的范围',\n    },\n    samples4: {\n        label: '限制输入整数',\n        description: '设置integer属性后，输入框将限制只能输入整数',\n    },\n    samples5: {\n        label: '禁用状态',\n        description: '通过设置disabled属性来禁用步进器，禁用状态下无法点击按钮或修改输入框',\n    },\n    samples6: {\n        label: '禁用输入框',\n        description: '通过设置disable-input属性来禁用输入框，此时按钮仍然可以点击',\n    },\n    samples7: {\n        label: '固定小数位数',\n        description: '通过设置decimal-length属性可以保留固定的小数位数',\n    },\n    samples8: {\n        label: '自定义大小',\n        description: '通过input-width属性设置输入框宽度，通过button-size属性设置按钮大小和输入框高度',\n    },\n    samples9: {\n        label: '异步变更',\n        description: '如果需要异步地修改输入框的值，可以设置async-change属性，并在change事件中手动修改value',\n    },\n    attrsInfo: {\n       row1column2: '当前输入的值',\n       row2column2: '最小值',\n       row3column2: '最大值',\n       row4column2: '初始值，当 v-model 为空时生效',\n       row5column2: '步长，每次点击时改变的值',\n       row6column2: '标识符，可以在change事件回调参数中获取',\n       row7column2: '输入框宽度，默认单位为px',\n       row8column2: '按钮大小以及输入框高度，默认单位为px',\n       row9column2: '固定显示的小数位数',\n       row10column2: '是否只允许输入整数',\n       row11column2: '是否禁用步进器',\n       row12column2: '是否禁用增加按钮',\n       row13column2: '是否禁用减少按钮',\n       row14column2: '是否禁用输入框',\n       row15column2: '是否开启异步变更，开启后需要手动控制输入值',\n       row16column2: '是否显示增加按钮',\n       row17column2: '是否显示减少按钮',\n       row18column2: '是否开启长按手势',\n    },\n    eventInfo: {\n       row1column2: '当绑定值变化时触发的事件',\n       row2column2: '点击不可用的按钮时触发',\n       row3column2: '点击增加按钮时触发',\n       row4column2: '点击减少按钮时触发',\n       row5column2: '输入框聚焦时触发',\n       row6column2: '输入框失焦时触发'\n    }\n  },\n  indexbarDemo: {\n    label: 'IndexBar 索引栏',\n    description: '',\n\t  defatltText:'默认',\n    customText:'自定义',\n    samples1: {\n      label: '基础用法',\n      description: '',\n    },\n    attrsInfo: {\n       row1column2: '索引字符列表',\n       row2column2: 'z-index 层级',\n       row3column2: '是否开启锚点自动吸顶',\n       row4column2: '锚点自动吸顶时与顶部的距离',\n       row5column2: '索引字符高亮颜色'\n    },\n    eventInfo: {\n       row1column2: '选中字符时触发',\n       row2column2: 'index: 索引字符',\n    },\n    indexanchorAttrsInfo: {\n      row1column2: '索引字符'\n    },\n    indexanchorSlotsInfo: {\n       row1column2: '锚点位置显示内容，默认为索引字符'\n    }\n  },\n  skeletonDemo: {\n    label: 'Skeleton 骨架屏',\n    description: '',\n\t  defatltText:'默认',\n\t  customText:'自定义',\n\t  samples1: {\n      label: '基础用法',\n      description: '',\n    },\n    samples2: {\n        label: '显示头像',\n        description: '通过avatar属性显示头像占位图',\n    },\n    samples3: {\n        label: '展示子组件',\n        description: '将loading属性设置成false表示内容加载完成，此时会隐藏占位图，并显示Skeleton的子组件,1秒后显示',\n    },\n    attrsInfo: {\n       row1column2: '段落占位图行数',\n       row2column2: '段落占位图宽度，可传数组来设置每一行的宽度',\n       row3column2: '是否显示标题占位图',\n       row4column2: '是否显示头像占位图',\n       row5column2: '是否显示骨架屏，传 false 时会展示子组件内容',\n       row6column2: '是否开启动画',\n       row7column2: '标题占位图宽度',\n       row8column2: '头像占位图大小',\n       row9column2: '头像占位图形状，可选值为square'\n    }\n  },\n  InputNumberDemo: {\n    label: 'NumberInput',\n    sample1: {\n      label: '基础用法',\n      description: '要使用它，只需要使用v-model绑定变量即可，变量的初始值即为默认值，如果你只需要控制数值在某一范围内，可以设置min属性和max属性。'\n    },\n    sample2: {\n      label: '禁用状态',\n      description: 'disabled属性接受一个Boolean，设置为true即可禁用整个组件。'\n    },\n    sample3: {\n      label: '步数',\n      description: '允许定义递增递减的步数控制'\n    },\n    sample4: {\n      label: '严格步数',\n      description: 'step-strictly属性接受一个Boolean。如果这个属性被设置为true，则只能输入步数的倍数。'\n    },\n    sample5: {\n      label: '空值',\n      description: '当v-model绑定的值是undefined时，显示空值。'\n    },\n    sample6: {\n      label: '精度',\n      description: '设置 precision 属性可以控制数值精度，接收一个 Number。precision 的值必须是一个非负整数，并且不能小于 step 的小数位数。'\n    },\n    sample7: {\n      label: '尺寸',\n      description: '额外提供了 large、small、mini 三种尺寸的数字输入框'\n    },\n    sample8: {\n      label: '是否使用控制按钮',\n      description: 'controls为false时，隐藏控制按钮'\n    },\n    sample9: {\n      label: '按钮位置',\n      description: '设置 controls-position 属性可以控制按钮位置。'\n    },\n  }\n}\n\nmodule.exports = DemoLangEn;","﻿'use strict';\nvar DemoLangJa = {\n  main: {\n    title1: '開発マニュアル',\n    title2: 'コンポーネントリスト',\n    title3: '総合デモ',\n    title4: 'フィードバック',\n    title5: '拡張機能',\n    title6: 'Gantt ガントチャート',\n    title7: 'Charts チャート',\n    title8: 'Excel Export/Import',\n    title9: 'モバイル',\n    title10: 'Pic Marker 画像マーク',\n    radiolabel1: '中',\n    radiolabel2: '日',\n    radiolabel3: 'EN',\n    code: 'コード',\n    line1: 'サイトクイック成型ツール',\n    line21: 'たった世界平和を守るために!',\n    line22: 'たった残業を減らすために!',\n    line23: 'たったこんな君になれるように: ',\n    line24: '製品デザイナー',\n    line25: 'インタラクティブデザイナー',\n    line26: '視覚デザイナー',\n    line27: '製品マネージャー',\n    line28: 'フロントエンジニア',\n    table: {\n      method: 'メソッド名',\n      description: '概説',\n      usage: '使い方',\n      parameters: 'パラメータ',\n      type: 'タイプ',\n      acceptedValues: 'オプション値',\n      defaultValue: 'デフォルト値',\n      event: 'イベント',\n      name: '名称'\n    }\n  },\n  installDemo: {\n    label: '素早く使いこなす',\n    samples1: {\n      label: 'インストール',\n      description: 'ページにjsとcss をインポートすれば、使い始められる。'\n    },\n    samples6: {\n      label: 'npm インストール',\n      description: 'npmを使用します。これは、webpackパッケージツールでより適切に使用できます。'\n    },\n    samples2: {\n      description: 'vueコンポーネントで Hello world ページを簡単に出来上がれる。'\n    },\n    samples3: {\n      description: '组件内封装的一些常用方法，注意：在&lttemplate&gt中使用VueUtil的方式为 $vu.函数名',\n      row1column2: '判断参数是否定义(undefined或null状态为未定义)',\n      row2column2: '判断参数是否为String类型',\n      row3column2: '判断参数是否为Number类型',\n      row4column2: '判断参数是否为Boolean类型',\n      row5column2: '判断参数是否为File类型',\n      row6column2: '判断参数是否为Object类型',\n      row7column2: '判断参数是否为Array类型',\n      row8column2: '判断参数是否为Function类型',\n      row9column2: '判断参数是否为Date类型',\n      row10column2: '判断参数是否为NodeList类型',\n      row11column2: '判断参数是否为Element类型',\n      row12column2: '判断参数是否为VNode类型',\n      row13column2: '参数转换为String类型并返回',\n      row14column2: '参数转换为Date类型并返回, 如果失败返回null',\n      row15column2: '将参数按指定日期格式转换为String类型并返回, 如果失败返回null',\n      row16column2: '将参数按指定日期格式转换为Date类型并返回, 如果失败返回null',\n      row17column2: '根据年月获取当月的天数, 失败返回null',\n      row18column2: '根据日期获取当月第一天是星期几, 失败返回null',\n      row19column2: '根据日期获取本周是第几周, 失败返回null',\n      row20column2: '根据类型返回指定日期的向前或向后日期, 如果失败返回null',\n      row21column2: '对Array或NodeList循环, 类似forEach方法',\n      row22column2: '循环对象的可枚举属性',\n      row23column2: '去除参数的首尾空格并返回, 参数不为String时返回\"\"',\n      row24column2: '将来自一个或多个源对象中的值复制到一个目标对象, 只复制可枚举属性',\n      row25column2: '将Array类型转换为Object类型',\n      row26column2: '对一个元素绑定事件',\n      row27column2: '对一个元素移除事件',\n      row28column2: '对一个元素绑定事件, 触发后移除该事件',\n      row29column2: '判断元素是否存在某一名称的class',\n      row30column2: '对元素追加某一名称的class',\n      row31column2: '对元素移除某一名称的class',\n      row32column2: '获取元素某一属性的style, 如果失败返回null',\n      row33column2: '设置元素某一属性的style',\n      row34column2: '根据名称获取Cookie, 如果失败返回null',\n      row35column2: '根据名称设置Cookie',\n      row36column2: '根据名称移除Cookie',\n      row37column2: '函数节流, 当调用时刻大于等于执行周期则执行该动作，然后进入下一个新周期, 默认16ms为一周期',\n      row38column2: '函数防抖, 当调用时刻大于等于执行周期则执行该动作，若在周期内又调用此动作则进入新一个周期, 默认16ms为一周期',\n      row39column2: '对一个元素绑定resize事件, 内置函数防抖',\n      row40column2: '对一个元素移除resize事件',\n      row41column2: 'DOM树上移除某个节点',\n      row42column2: 'DOM树上对某个节点插入一个子节点',\n      row43column2: '获取浏览器竖滚动条宽度',\n      row44column2: '对一个元素绑定接触屏幕时触发事件',\n      row45column2: '对一个元素绑定屏幕上移动时触发事件',\n      row46column2: '对一个元素绑定屏幕上移开时触发事件',\n      row47column2: '对一个元素移除接触屏幕时触发事件',\n      row48column2: '对一个元素移除屏幕上移动时触发事件',\n      row49column2: '对一个元素移除屏幕上移开时触发事件',\n      row50column2: '浏览器全屏, 类似F11效果',\n      row51column2: '获取系统信息',\n      row52column2: '设置显示的语言',\n      row53column2: '设置语言内容',\n      row54column2: '生产模式, 取消Vue代码检查及日志输出',\n      row55column2: '获取当前画面控件的最大zindex'\n    }\n  },\n  i18nDemo: {\n    label: 'I18n 國際化',\n    samples1: {\n      label: '基本使い方',\n      description: 'VueUtil.setLocale()で多言語を設定し、VueUtil.setLang()で表示言語を設定する。Vueコンポーネント内に$t()で多言語の値を取得でき、Vueコンポーネント外にVue.t()で多言語の値を取得できる;'\n    },\n    samples2: {\n      label: 'vue-i18n@5.xを使用',\n      description: 'viyはvue-i18n@5.xと互換性があり、多言語切り替えがさらに簡単になります。'\n    },\n    samples3: {\n      label: 'vue-i18n@6.x +を使用 ',\n      description: '6.xとの互換性のために、手動で処理する必要があります。'\n    }\n  },\n  ajaxDemo: {\n    label: '非同期データ伝送',\n    samples1: {\n      label: '基本使い方',\n      description: 'グローバルのVueオブジェクトに基付くhttpを利用でき、あるコントロールにに基付くhttpも利用できる。'\n    },\n    samples2: {\n      label: 'サポートされたHTTPメソッド',\n      description: 'リクエストAPIはRESTスタイルにより設定され、7種リクエストAPIを提供している'\n    },\n    samples3: {\n      row1column3: 'リクエストURL',\n      row2column3: 'リクエストHTTPメソッド。例：\"GET\", \"POST\"又は他のHTTPメソッド',\n      row4column3: 'リクエストURLパラメータオブジェクト',\n      row6column3: 'ミリ秒単位のリクエストタイムアウト時間(0とはタイムアウト時間なし)',\n      row7column3: 'リクエスト送信前の処理関数、jQueryのbeforeSend関数に類似',\n      row8column3: 'ProgressEventコールバック処理関数',\n      row9column3: 'クロスドメインリクエスト時に証明書を使う必要かを表す',\n      row10column3: 'PUT, PATCH, DELETEリクエストを発信時、HTTP POSTで発信し、リクエストヘッダのX-HTTP-Method-Overrideも設定する',\n      row11column3: 'request bodyをapplication/x-www-form-urlencoded content typeで発信'\n    }\n  },\n  layoutDemo: {\n    label: 'Layout レイアウト',\n    description: '基礎の24段組で、レイアウトを素早く簡単に作成。',\n    samples1: {\n      label: '基礎レイアウト',\n      description: 'row と col コンポーネントで、 col コンポーネントの span 属性ても自由にレイアウトを組合せる。'\n    },\n    samples2: {\n      label: '段組間隔',\n      description: 'rowコンポーネントはgutter 属性を提供し、各カラム間の間隔を指定できる。デフォルト間隔は0とする'\n    },\n    samples3: {\n      label: '混合レイアウト',\n      description: '基礎の 1/24 段組で、任意に組み合わせを拡張し、複雑な混合レイアウトにする。'\n    },\n    samples4: {\n      label: '寄せ式',\n      description: 'type 属性を \\'flex\\'にセットし、flex レイアウトを使用可になる。justify 属性でstart、center、end、space-between、space-around 中の値を指定してから、子元素の組版式を定義できる。'\n    },\n    samples5: {\n      label: 'レスポンス式レイアウト',\n      description: 'Bootstrapのレスポンスデザインを参照した上、 4つレスポンスサイズをプリセットした：xs、sm、md と lg.'\n    },\n    samples6: {\n      row1column2: 'グリッド間隔',\n      row2column2: 'レイアウトモデル、 オプション flex',\n      row3column2: 'flex レイアウトにおける水平アレンジモード',\n      row4column2: 'flex レイアウトにおける垂直アレンジモード'\n    },\n    samples7: {\n      row1column2: 'グリッド占めた列数',\n      row2column2: 'グリッド左側の間隔セル数',\n      row3column2: 'グリッド右移動セル数',\n      row4column2: 'グリッド左移動セル数',\n      row5column2: '\\'<768px\\' レスポンス式グリッド数又はグリッドプロパティオブジェクト',\n      row6column2: '\\'≥768px\\' レスポンス式グリッド数又はグリッドプロパティオブジェクト',\n      row7column2: '\\'≥992px\\' レスポンス式グリッド数又はグリッドプロパティオブジェクト',\n      row8column2: '\\'≥1200px\\' レスポンス式グリッド数又はグリッドプロパティオブジェクト',\n      row5column3: 'Number / Object (例： {span: 4, offset: 4})',\n      row6column3: 'Number / Object (例： {span: 4, offset: 4})',\n      row7column3: 'Number / Object (例： {span: 4, offset: 4})',\n      row8column3: 'Number / Object (例： {span: 4, offset: 4})'\n    }\n  },\n  iconDemo: {\n    label: 'Icon アイコン',\n    description: 'よく使用うアイコンセット',\n    samples1: {\n      label: '使い方',\n      description: 'クラス名をvue-icon-iconNameに設定することによって直接使用可になる'\n    },\n    samples2: {\n      label: 'アイコンセット'\n    }\n  },\n  buttonDemo: {\n    label: 'Button ボタン',\n    description: 'よく使う操作ボタン',\n    defaultButton: 'デフォルトボタン',\n    mainButton: 'メインボタン',\n    textButton: '文字ボタン',\n    circleButton: '角丸ボタン',\n    successButton: '成功ボタン',\n    warningButton: '警告ボタン',\n    dangerButton: '危険ボタン',\n    infoButton: '情報ボタン',\n    samples1: {\n      label: '基本使い方',\n      description: 'Button コンポーネントは７種テーマをデフォルトで提供している。type属性で定義し、デフォルトはdefaultとする。'\n    },\n    samples2: {\n      label: '色傾向有り',\n      description: '異なるtype属性対応となるスタイルを設定し、plain属性を設定する。Booleanを受取。注意すべき点：その場合は、typeはtextで良いが、意味がない。text buttonスタイルが表示されるから。',\n      defaultLabel: 'デフォルト色表示',\n      hoverLabel: 'hover 色表示'\n    },\n    samples3: {\n      label: '使用不可状態',\n      description: 'disabled 属性を設定すれば良い。Booleanを受取。trueは使用不可とする。'\n    },\n    samples4: {\n      label: 'アイコンボタン',\n      description: 'icon属性を設定すれば良い。文字右のiconに設定しても良い、iタグだけ使えば良い。カスタマイズアイコンても使用できる。'\n    },\n    samples5: {\n      label: 'ボタングループ',\n      description: '<vue-button-group>タグでボタンをネスティングする'\n    },\n    samples6: {\n      label: 'ロード中',\n      description: 'loading属性をtrueに設定すれば良い。'\n    },\n    samples7: {\n      label: '異なるサイズ',\n      description: 'size属性を設定して配置する。'\n    },\n    samples8: {\n      row1column2: 'サイズ',\n      row2column2: 'タイプ',\n      row3column2: '角丸ボタンか',\n      row4column2: 'シンプルボタンか',\n      row5column2: 'ロード中状態か',\n      row6column2: '使用不可状態か',\n      row7column2: 'アイコン',\n      row8column2: 'デフォルトフォーカスか',\n      row9column2: '原生type属性'\n    }\n  },\n  inputDemo: {\n    label: 'Input 入力欄',\n    description: 'マウスやキーボードで文字を入力する。',\n    defaultPlaceholder: '内容を入力してください',\n    selectPlaceholder: '選択してください',\n    samples1: {\n      label: '基本使い方'\n    },\n    samples2: {\n      label: '使用不可状態',\n      description: 'disabled属性を設定すれば良い。Booleanを受取、trueは使用不可とする。'\n    },\n    samples3: {\n      label: 'icon付き入力欄',\n      description: 'icon属性でinputコンポーネントの後ろに表示アイコンを追加できる。on-icon-clickフック関数でアイコンクリック後の必要なロジックを実行される。'\n    },\n    samples4: {\n      label: 'テキストエリア',\n      description: 'type属性の値をtextareaに設定できる。テキストエリアの高さはrows属性で制御できる'\n    },\n    samples5: {\n      label: 'テキスト高さにセルフ適応するテキストエリア',\n      description: 'autosize 属性を設定により、テキストエリアの高さはテキスト内容に応じて自動調整できる。また autosize をオブジェクトに設定し、最小行数と最大行数も設定できる。'\n    },\n    samples6: {\n      label: 'ミックス型入力欄',\n      description: '元素を前置又は後置可能、通常はタグ又はボタンとする。input内の前置又は後置の内容はslotで指定できる。',\n      selectLabel1: 'レストラン名',\n      selectLabel2: '注文番号',\n      selectLabel3: 'ユーザー電話'\n    },\n    samples7: {\n      label: 'サイズ',\n      description: 'size属性で入力欄のサイズを指定できる。デフォルトの大きさ以外、large、smallと mini三種サイズも提供している。'\n    },\n    samples8: {\n      label: '入力アドバイス付き',\n      description: 'autocompleteは入力アドバイス付き入力コンポーネントである。fetch-suggestionsは入力アドバイスを返すメソッド属性である。例えば、querySearch(queryString, cb)の場合、当該メソッドに入力アドバイスデータを準備できた時にcb(data)でautocompleteコンポーネントに返す。',\n      label1: '活性化、つまり入力アドバイスをリスト化する',\n      label2: '入力後入力提案のマッチング'\n    },\n    samples9: {\n      label: 'カスタムフォーマット',\n      description: 'cleave属性を設定すれば良い。Objectを受取'\n    },\n    samples10: {\n      row1column2: 'タイプ',\n      row2column2: 'バインディング値',\n      row3column2: '最大入力長さ',\n      row4column2: '最小入力長さ',\n      row5column2: 'プレースホルダテキスト',\n      row6column2: '使用不可',\n      row7column2: '入力欄サイズ、type!=\"textarea\"時のみ有効',\n      row8column2: '入力欄前部アイコン',\n      row9column2: '入力欄尾部アイコン',\n      row10column2: '入力欄行数、type==\"textarea\"時のみ有効',\n      row11column2: 'カスタムフォーマット, type!=\"extarea\"時のみ有効、更なるフォーマットは下表を参考',\n      row12column2: '内容高さにセルフ適応、type==\"textarea\"時のみ有効、オブジェクトをインプット可、例 {minRows: 2, maxRows: 6}',\n      row13column2: '原生属性、自動補充',\n      row14column2: '原生属性',\n      row15column2: '原生属性、読み取り専用か',\n      row16column2: '原生属性、最大値を設定',\n      row17column2: '原生属性、最小値を設定',\n      row18column2: '原生属性、入力フィールドの合法数字間隔を設定',\n      row19column2: 'ユーザーにズームされるかを制御、 type=\"textarea\" 時のみ有効',\n      row20column2: '原生属性、自動的にフォーカスを取得する',\n      row21column2: 'テキストの配置',\n      row22column2: '原生属性、所属する1つまたは複数のフォームのID',\n      row23column2: 'Input内アイコンのフック関数をクリック',\n      row24column2: 'キーボードポップアップタイプは、移動端のみで使用します。'\n    },\n    samples11: {\n      row1column2: 'Input内のアイコンをクリック時にトリガー',\n      row2column2: 'Inputはフォーカスを失った時にトリガー',\n      row3column2: 'Inputはフォーカスを取得時にトリガー',\n      row4column2: 'Input値チェンジ時にトリガー'\n    },\n    samples12: {\n      row1column2: 'プレースホルダテキスト',\n      row2column2: '使用不可',\n      row3column2: '必須値にバンディング値を入力',\n      row4column2: '当該パラメータでカスタマイズした入力アドバイスリスト表の項目コンポーネント名を指定する',\n      row5column2: '入力アドバイスのメソッドを返し、入力アドバイスデータresolve時のみ、callback(data:[])を呼び出してそれを返す',\n      row6column2: 'Autocompleteリスト表のクラス名をドロップダウン',\n      row7column2: '入力欄focus時にアドバイスリスト表を表示するか',\n      row8column2: 'アイコンのコールバック関数をクリック',\n      row9column2: '入力欄尾部アイコン',\n      row10column2: 'コンフィグレーションオプション、詳細は下表を参照'\n    },\n    samples13: {\n      row1column2: 'オプションの値をオプションオブジェクトのある属性値に指定',\n      row2column2: 'オプションのタグをプションオブジェクトのある属性値に指定'\n    },\n    samples14: {\n      row1column2: 'アドバイス項目に選択時にトリガー'\n    },\n    samples15: {\n      row1column2: 'クレジットカードフォーマットにするかは、有効にする後IINによるクレジットカードタイプを自動検出する。',\n      row2column2: 'クレジットカードタイプをチェンジした後、トリガーしたコールバック関数。',\n      row3column2: '携帯フォーマットを有効にするかは、必ずphoneRegionCodeと一緒に利用',\n      row4column2: '各国地域の電話番号フォーマットエンコード、エンコードはISO 3166-1 alpha-2を参考',\n      row5column2: '日付フォーマットを有効にするか',\n      row6column2: '配列で日付フォーマットを定義する',\n      row7column2: '数字フォーマットを有効にするか',\n      row8column2: '区切り文字グループスタイル',\n      row9column2: '整数部を何桁に設定する',\n      row10column2: '小数部を何桁に設定する',\n      row11column2: '小数点スタイル',\n      row12column2: '正数しか許可しないか',\n      row13column2: '配列値で入力桁数をフォーマット化する',\n      row14column2: '区切り文字設定',\n      row15column2: '多数区切り文字使用',\n      row16column2: 'スタートにプリセットした値、それは削除又は更新させない',\n      row17column2: '元値取得時プリセット値を削除するか',\n      row18column2: '数字(0~9)しか入力できないか ',\n      row19column2: '大文字に変換するか',\n      row20column2: '小文字に変換するか',\n      row21column2: 'カスタマイズフォーマット'\n    }\n  },\n  dateDemo: {\n    label: 'DatePicker 日付セレクター',\n    description: '日付選択または入力用',\n    samples1: {\n      label: '基本使い方',\n      description: 'ショートカットオプションはpicker-optionsオブジェクトのshortcutsを設定要、日付使用不可にはdisabledDateで設定。',\n      defaultLabel: 'デフォルト',\n      optionsLabel: 'ショートカットオプション付き',\n      defaultPlaceholder: '日付選択',\n      todayLabel: '今日',\n      yesterdayLabel: '昨日',\n      weekAgoLabel: '先週'\n    },\n    samples2: {\n      label: '他日付単位',\n      description: '基本単位はtype属性で指定',\n      weekLabel: '週',\n      weekPlaceholder: '週選択',\n      weekFormat: 'yyyy 第 WW 週',\n      monthLabel: '月',\n      monthPlaceholder: '月選択',\n      yearLabel: '年',\n      yearPlaceholder: '年選択'\n    },\n    samples3: {\n      label: '日付範囲選択',\n      description: 'セレクターで時間範囲を手軽に選択できる。',\n      defaultLabel: 'デフォルト',\n      optionsLabel: 'ショートカットオプション付き',\n      defaultPlaceholder: '日付範囲選択',\n      lastWeekLabel: '直近１週間',\n      lastMonthLabel: '直近１ヶ月間',\n      last3MonthLabel: '直近３ヶ月間'\n    },\n    samples4: {\n      row1column2: '読み取り専用か(show-mobile-uiがfalseの場合のみ使用できます。)',\n      row2column2: '使用不可か',\n      row21column2: 'テキストボックスを入力できます(show-mobile-uiがfalseの場合のみ使用できます。)',\n      row3column2: 'クリアボタンを表示するか',\n      row4column2: '入力欄サイズ',\n      row5column2: 'プレースホルダテキスト',\n      row51column2: '開始日のプレースホルダ',\n      row52column2: '終了日のプレースホルダ',\n      row6column2: 'タイプ表示',\n      row7column2: '時間日付フォーマット表示',\n      row7column4: '年:yyyy, 月:MM, 日:dd, 時:HH, 分:mm, 秒:ss, 週:WW(大文字のWはある年の第数週を表しています。区別に注意してください。)',\n      row8column2: 'ドロップダウンの寄せ方(show-mobile-uiがfalseの場合のみ使用できます。)',\n      row9column2: 'ドロップダウンのクラス名',\n      row10column2: '範囲選択時の区切り文字',\n      row11column2: 'ドロップダウンオープン時デフォルトで選択された日付(show-mobile-uiがfalseの場合のみ使用できます。)',\n      row11column4: 'new Date()に解析される',\n      row111column2: '値バインディングのフォーマット。 指定されていない場合、バインディング値はDateオブジェクトです。',\n      row12column2: 'カレントセレクター特有なオプション、下表を参考'\n    },\n    samples5: {\n      row1column2: 'ショートカットオプションを設定、 {text, onClick}オブジェクトをインプット要、使い方はdemoまたは下表を参考(show-mobile-uiがfalseの場合のみ使用できます。)',\n      row2column2: '使用不可状態を設定、パラメータはカレント日付、要求としてはBooleanを返す(show-mobile-uiがfalseの場合のみ使用できます。)',\n      row3column2: '週開始日',\n      row4column2: '日付選択した後実行するコールバック、daterange または datetimerange の場合だけ有効になる(show-mobile-uiがfalseの場合のみ使用できます。)'\n    },\n    samples6: {\n      row1column2: 'タイトルテキスト',\n      row2column2: '選択した後のコールバック関数は、パラメータが vmで、 \"pick\" イベントをトリガーによるセレクターの値を設定する。例 vm.$emit(\"pick\", new Date())'\n    },\n    samples7: {\n      row1column2: 'inputの値がチェンジ時トリガーされ、戻り値とテキストボックスは一致',\n      row1column3: 'フォーマット後の値'\n    },\n    samples8:{\n      row1column2: 'モバイル端UIを表示するかどうか',\n      row2column2: '現在の選択値を選択します(v-modelで使用します)',\n      row3column2: '入力ボックスのテキストの水平方向の配置(show-mobile-uiがtrueの時に使用され、かつtypeが「daterange」であり、「datetimerange」は無効です。)',\n      row3column3: '区間選択入力ボックスのテキストの水平方向の配置(show-mobile-uiがtrueの時に使用され、かつtypeが「daterange」であり、「datetimerange」が有効です。)',\n      row4column2: '選択範囲の最小日付(show-mobile-uiがtrueの場合のみ使用できます。)',\n      row4column3: '選択範囲の最大日付(show-mobile-uiがtrueの場合のみ使用できます。)',\n      row5column2: 'コンポーネントの一番左のアイコンの設定(show-mobile-uiがtrueの場合のみ使用できます。)',\n      row5column3: 'コンポーネントの一番右側の内容はアイコンの設定をクリアします。(show-mobile-uiがtrueの場合のみ使用できます。)',\n      row6column2: '週の開始日(show-mobile-uiがtrueの場合のみ使用できます。)',\n      row7column2: 'ロード状態を表示するかどうか(show-mobile-uiがtrueの場合のみ使用できます。)',\n      row8column2: 'トップバーのタイトル(show-mobile-uiがtrueの場合のみ使用できます。)',\n      row9column2: '開始日のトップバーのタイトル(show-mobile-uiがtrueの場合のみ使用できます。)',\n      row9column3: '終了日の上の列のタイトル(show-mobile-uiがtrueの場合のみ使用できます。)',\n      row10column2: '決定ボタンのテキスト内容(show-mobile-uiがtrueの場合のみ使用できます。)',\n      row10column3: 'キャンセルボタンのテキスト内容(show-mobile-uiがtrueの場合のみ使用できます。)',\n      row11column2: 'トップバーを表示するかどうか(show-mobile-uiがtrueの場合のみ使用できます。)',\n      row12column2: 'オプションの高さ(show-mobile-uiがtrueの場合のみ使用できます。)',\n      row13column2: '表示されるオプションの個数(show-mobile-uiがtrueの場合のみ使用できます。)',\n      row14column2: '高速スライド時の慣性スクロールの時間は長く、単位ms(show-mobile-uiがtrueの場合のみ使用できます。)',\n      row15column2: 'オプションの書式設定関数(show-mobile-uiがtrueの場合のみ使用できます。)',\n      row16column2: '確定ボタンをクリックした時にトリガします。(show-mobile-uiがtrueの場合のみ使用できます。)',\n      row16column3: '現在の値、すなわち(value, index)',\n      row17column2: 'キャンセルボタンをクリックしたときにトリガします。(show-mobile-uiがtrueの場合のみ使用できます。)',\n      row18column2: 'オプションフィルタ関数(show-mobile-uiがtrueの場合のみ使用できます。)',\n      row19column2: 'pickerは開いている時のデフォルトの選択値を指定します。(show-mobile-uiがtrueの場合のみ使用できます。)'\n    }\n  },\n  timeDemo: {\n    label: 'TimePicker 時間セレクター',\n    description: '時間を選択または入力用。',\n    samples1: {\n      label: '基本使い方',\n      description: 'vue-time-selectを利用時、star、endとstepaで開始時間、終了時間とステップのオプションを指定する; vue-time-pickerを利用時、selectableRangeで時間範囲オプションを制限する',\n      timelabel1: '固定時間点',\n      timelabel2: '任意時間点',\n      timePlaceholder1: '時間選択',\n      timePlaceholder2: '任意時間点',\n    },\n    samples2: {\n      label: '時間範囲',\n      description: 'vue-time-selectを利用時、もし先に開始時間を選択した場合、終了時間内の候補オプションの状態はそれに伴い変わる; vue-time-picker利用時、is-range属性を追加すれば時間範囲を選択できるようになる',\n      timelabel1: '固定時間範囲',\n      timelabel2: '任意時間範囲',\n      timePlaceholder1: '開始時間',\n      timePlaceholder2: '終了時間',\n      timePlaceholder3: '時間範囲選択'\n\n    },\n    samples3: {\n      row1column2: '読み取り専用か',\n      row2column2: '使用不可か',\n      row21column2: 'テキストボックスを入力できます',\n      row3column2: 'クリアボタンを表示するか',\n      row4column2: '入力欄サイズ',\n      row5column2: 'プレースホルダテキスト',\n      row51column2: '開始日のプレースホルダ',\n      row52column2: '終了日のプレースホルダ',\n      row53column2: '時間範囲選択かどうか、timepickerにのみ有効',\n      row54column2: '方向キーで時間を選択できます，timepickerのみ有効',\n      row55column2: '範囲選択時の区切り文字',\n      row56column2: '値バインディングのフォーマット。 指定されていない場合、バインディング値はDateオブジェクトです。',\n      row6column2: 'ドロップダウンの寄せ方',\n      row7column2: 'ドロップダウンのクラス名',\n      row8column2: 'カレントセレクター特有なオプション、下表を参考',\n      row9column2: '最小時間数(show-mobile-uiがtrueの場合のみ使用できます。)',\n      row9column3: '最大時間数(show-mobile-uiがtrueの場合のみ使用できます。)',\n      row10column2: '最小分数(show-mobile-uiがtrueの場合のみ使用できます。)',\n      row10column3: '最大分数(show-mobile-uiがtrueの場合のみ使用できます。)',\n      row11column2: '最小秒数(show-mobile-uiがtrueの場合のみ使用できます。)',\n      row11column3: '最大秒数(show-mobile-uiがtrueの場合のみ使用できます。)',\n    },\n    samples4: {\n      row1column2: '開始時間',\n      row2column2: '終了時間',\n      row3column2: '間隔時間',\n      row4column2: '最小時間、当該時間より小さい時間帯が使用不可にする',\n      row5column2: '最大時間、当該時間より大きい時間帯が使用不可にする'\n    },\n    samples5: {\n      row1column2: '時間帯オプション, 例　\"18:30:00 - 20:30:00\"または配列[\"09:30:00 - 12:00:00\", \"14:30:00 - 18:30:00\"]をインプット',\n      row2column2: '時間フォマード化(TimePicker)',\n      row2column4: '時:HH, 分:mm, 秒:ss'\n    },\n    samples6: {\n      row1column2: 'inputの値がチェンジ時トリガーされ、戻り値とテキストボックスは一致',\n      row1column3: 'フォーマット後の値'\n    }\n  },\n  datetimeDemo: {\n    label: 'DateTimePicker 日付時間セレクター',\n    description: '日付時間を選択または入力用。',\n    samples1: {\n      label: '基本使い方',\n      description: 'type属性をdatetimeに設定することで、同じセレクターで日付と時間を同時に選択できる。ショートカットオプションの使い方はDate Pickerと同様。',\n      defaultLabel: 'デフォルト',\n      optionsLabel: 'ショートカットオプション付き',\n      defaultPlaceholder: '日付時間選択',\n      todayLabel: '今日',\n      yesterdayLabel: '昨日',\n      weekAgoLabel: '先週'\n    },\n    samples2: {\n      label: '日付と時間範囲',\n      description: 'typeをdatetimerangeに設定することで、日付と時間範囲を選択できる',\n      defaultLabel: 'デフォルト',\n      optionsLabel: 'ショートカットオプション付き',\n      defaultPlaceholder: '時間範囲選択',\n      lastWeekLabel: '直近一週',\n      lastMonthLabel: '直近１ヶ月間',\n      last3MonthLabel: '直近３ヶ月間'\n    },\n    samples3: {\n      row1column2: '読み取り専用か(show-mobile-uiがfalseの場合のみ使用できます。)',\n      row2column2: '使用不可か',\n      row21column2: 'テキストボックスを入力できます(show-mobile-uiがfalseの場合のみ使用できます。)',\n      row3column2: 'クリアボタンを表示するか',\n      row4column2: '入力欄サイズ',\n      row5column2: 'プレースホルダテキスト',\n      row51column2: '開始日のプレースホルダ',\n      row52column2: '終了日のプレースホルダ',\n      row53column2: '時間範囲の選択かどうかは、timepickerにのみ有効です。',\n      row54column2: '方向キーで時間を選択できます(timepickerのみ有効,show-mobile-uiがfalseの場合のみ使用できます。)',\n      row55column2: '範囲を選択するときのセパレータ',\n      row56column2: '値バインディングのフォーマット。 指定されていない場合、バインディング値はDateオブジェクトです。',\n      row6column2: 'ドロップダウンボックスの配置(show-mobile-uiがfalseの場合のみ使用できます。)',\n      row7column2: 'コンボボックスのクラス名',\n      row8column2: '現在のセレクタ特有のオプションは、下表を参照してください。(show-mobile-uiがfalseの場合のみ使用できます。)',\n      row9column2: 'オートフォーカス(show-mobile-uiがtrueの場合のみ使用できます。)',\n      row10column2: '最小時間数(show-mobile-uiがtrueの場合のみ使用できます。)',\n      row11column2: '最大時間数(show-mobile-uiがtrueの場合のみ使用できます。)',\n      row12column2: '最小分数(show-mobile-uiがtrueの場合のみ使用できます。)',\n      row13column2: '最大分数(show-mobile-uiがtrueの場合のみ使用できます。)',\n      row14column2: '最小秒数(show-mobile-uiがtrueの場合のみ使用できます。)',\n      row15column2: '最大秒数(show-mobile-uiがtrueの場合のみ使用できます。)'\n    },\n    samples4: {\n      row1column2: 'ショートカットオプション設定、{text, onClick}オブジェクトをインプット要、使い方はdemoまたは下表を参考(show-mobile-uiがfalseの場合のみ使用できます。)',\n      row2column2: '使用不可状態設定、パラメータはカレント日付とし、要求としてはBooleanを返す(show-mobile-uiがfalseの場合のみ使用できます。)'\n    },\n    samples5: {\n      row1column2: 'タイトルテキスト',\n      row2column2: '選択した後のコールバック関数は、パラメータが vmで、 \"pick\" イベントをトリガーによるセレクターの値を設定する。例 vm.$emit(\"pick\", new Date())'\n    },\n    samples6: {\n      row1column2: 'inputの値がチェンジ時トリガーされ、戻り値とテキストボックスは一致',\n      row1column3: 'フォーマット後の値'\n    }\n  },\n  calendarDemo: {\n    label: 'Calendar カレンダー',\n    description: '日付とイベントを確認または選択用。',\n    samples1: {\n      label: '基本使い方',\n      description: 'eventsをバンディングで、イベントをバンディングし、バンディングデータは配列とし、且各元素は\"date\"属性を含む要、dayclickイベントで選択日の日付とイベントを取得できる'\n    },\n    samples2: {\n      row1column2: 'バンディングイベントセット',\n      row2column2: '表示のイベントの件数、 full calendar時のみ有効',\n      row3column2: '\"+\"を押して時に、もとイベントを表示か、 full calendar時のみ有効',\n      row4column2: '使用full calendarか',\n      row5column2: '日付のclass集合, full calendar時のみ有効',\n      row6column2: '週のclass集合, full calendar時のみ有効',\n      row7column2: '週のラベル, full calendar時のみ有効',\n      row8column2: '月を切り替えられないようにする, calendar時のみ有効',\n      row9column2: 'カレンダーの種類, calendar時のみ有効'\n    },\n    samples3: {\n      row1column2: '日付に選択時にトリガー',\n      row2column2: 'イベントに選択時にトリガー、 full calendar時のみ有効',\n      row3column2: '\"+\"を押して時にトリガー、 full calendar時のみ有効'\n    },\n    samples4: {\n      label: 'Full Calendar',\n      description: 'full属性を設定すれば良い',\n      row1column2: 'headの左側, full calendar時のみ有効',\n      row2column2: 'headの右側, full calendar時のみ有効, 有効のときに\"今月\"表示しない',\n    },\n    samples5: {\n      row1column2: '今月へ帰る, full calendar時のみ有効',\n      row2column2: '指定日に移動する, full calendar時のみ有効',\n    },\n    samples7: {\n      label: 'スタティックカレンダー',\n      description: 'fix-month属性を設定すれば良い',\n    }\n  },\n  imageDemo: {\n    label: 'イメージ',\n    description: 'IMGの固有の機能のほかに、怠惰な負荷、カスタムプレースホルダ、および負荷失敗などをサポートしています。',\n\tdefatltText:'デフォルト',\n\tcustomText:'カスタム',\n    samples1: {\n      label: '基本的な使い方',\n      description: 'どのようにイメージをそのコンテナに合うようにサイズ変更されるべきかを示します。'\n\t},\n\tsamples2: {\n      label: 'プレースホルダ',\n\t  loading :'読み込み中',\n      description: 'slaot=placholderによって、ビットの内容をカスタマイズできます。'\n\t},\n\tsamples3: {\n      label: '読み込みに失敗しました',\n      description: 'slaot=errorで失敗した内容をカスタマイズできます。'\n\t},\n\tsamples4: {\n      label: '遅延ローディング',\n      description: 'lazyによって遅延負荷機能がオンになり、画像が視認範囲にスクロールされてロードされます。スクロール容器はscroll-containerによって設定できます。定義されていない場合、最近のoverflow値はautまたはscrollの親要素です。'\n\t},\n\tsamples5: {\n      label: 'イメージプレビュー',\n      description: 'preview-src-list propを設定することで大きなイメージプレビューを許可します。img-labelが設定されていると、src属性は無効となり、img-labelの内容のみが表示されます。',\n\t  imgLabelText: 'プレビュー大図'\n\t},\n\tsamples6: {\n       row1column2: 'イメージソース、ネイティブと同じ',\n\t   row2column2: 'イメージがどのようにコンテナに合うようにサイズ変更されるべきかを示します',\n\t   row3column2: '原生 alt',\n\t   row4column2: '原生 referrerPolicy',\n\t   row5column2: '遅延ロードをオンにしますか？',\n\t   row6column2: '遅延負荷をオンにした後、scrollイベントをモニターするコンテナ',\n\t   row6column5: '最近のoverflow値はautoまたはscrollの親要素です。',\n\t   row7column2: '画像のプレビュー機能を開く',\n\t   row8column2: '画像のプレビューのz-index値を設定します。',\n\t   row9column2: 'img-labelの内容が空でないと、その内容が表示され、画像が表示されません。',\n\t   row10column2: 'このプロパティのroundがtrueであれば、画像は円形に表示されます。'\n\t\t   \n\t},\n\tsamples7: {\n       row1column2: '画像読み込み成功トリガ',\n\t   row2column2: '画像読み込み失敗のトリガ'\t   \n\t},\n\tsamples8: {\n       row1column2: '画像未ロードのビット内容',\n\t   row2column2: '読み込みに失敗した内容'\t   \n\t}\n  },\n  imageviewerDemo: {\n    label: 'イメージのプレビュー ',\n    description: '画像プレビュー容器は、元の特性を保持して、画像のスケーリング、回転、PCの端点が左右のボタンをクリックして画像を切り替え、移動端が左右にスライドして画像を切り替えるなどのサポートをしています。',\n\t  defatltText:'デフォルト',\n\t  customText:'カスタム',\n\t  samples1: {\n        label: '基本的な使い方',\n        description: '必要なプレビューの画像はurl-listによって伝えられます。',\n\t  },\n\t  samples2: {\n        label: 'デフォルトで何枚目のプレビューを開きます',\n        description: 'active-inndex属性によってデフォルトで画像プレビューの何枚目の画像を開きます',\n\t  },\n\t  samples3: {\n       row1column2: '画像データのプレビュー',\n\t     row2column2: '写真のプレビューを設定するz-indx',\n\t     row3column2: '画像のプレビューの角標値をアクティブにします。',\n\t     row4column2: '画像切り替えのトリガ関数',\n\t     row5column2: '画像のプレビューを閉じるためのトリガ関数',\n\t  }\n  },\n  checkboxDemo: {\n    label: 'Checkbox チェックボックス',\n    description: '選択肢から複選択する。',\n    samples1: {\n      label: '基本使い方',\n      description: 'vue-checkbox元素にv-modelを定義して変数をバンディングし、単一のcheckboxに、デフォルトバンディング変数の値はBooleanとし、チェックオンはtrueとする。'\n    },\n    samples2: {\n      label: '使用不可状態',\n      description: 'disabled属性を設定すれば良い、Booleanを受取、 trueは使用不可とする。'\n    },\n    samples3: {\n      label: 'チェックボックスグループ',\n      description: 'checkbox-group元素複数checkboxを一組に管理し、Groupにv-modelでArrayタイプの変数をバンディングするだけで良い。vue-checkboxのlabel属性は該checkbox対応となる値、該タブに内容がなければ、該属性もcheckboxボタン後の紹介となる。labelと配列の元素値と対応となり、指定値が存在すればチェックオンとし、でなかったらチェックオフとする。'\n    },\n    samples4: {\n      label: 'indeterminate 状態',\n      description: 'indeterminate属性はcheckboxの不確定状態に表示用、通常はフルオンの効果に実現用'\n    },\n    samples5: {\n      label: 'ボタンスタイル',\n      description: 'vue-checkbox元素だけをvue-checkbox-button元素に変換すればよい。'\n    },\n    samples6: {\n      row1column2: 'チェックオン状態の値(checkbox-groupにまたはバンディングオブジェクトタイプはarrayの場合だけ有効)',\n      row2column2: 'チェックオン時の値',\n      row3column2: 'チェックオフ時の値',\n      row4column2: '原生属性',\n      row5column2: 'ボタン使用不可',\n      row6column2: '現在チェックか',\n      row7column2: 'indeterminate状態を設定し、スタイル制御のみ負う'\n    },\n    samples7: {\n      row1column2: 'ボタングループサイズ',\n      row2column2: 'ボタン活性化時の充填色と枠色',\n      row3column2: 'ボタン活性化時のテキスト色',\n      row4column2: 'チェックできる最小数量',\n      row5column2: 'チェックできる最大数量'\n    },\n    samples8: {\n      row1column2: 'バンディング値チェンジ時トリガーされたイベント'\n    }\n  },\n  radioDemo: {\n    label: 'Radio ラジオボックス',\n    description: 'Optionグループに単一選択。',\n    samples1: {\n      label: '基本使い方',\n      description: 'チェックオンの条件はバンディング変数値イコールlabelの値。v-modelバンディング変数のみ設定し、チェックオンとは変数の値は対応となるRadio label属性の値、labelはStringまたはNumberとも良い。'\n    },\n    samples2: {\n      label: '使用不可状態',\n      description: 'isabled属性を設定すれば良い、Booleanを受取、 trueは使用不可とする。'\n    },\n    samples3: {\n      label: 'ラジオボックスグループ',\n      description: 'vue-radio-group元素と子元素vue-radioを結合してラジオボックスグループを実現できる。vue-radio-groupにv-modelをバンディングし、vue-radioにlabelを設定すれば良い。再び各vue-radioに変数をバンディングする必要なし。'\n    },\n    samples4: {\n      label: 'ボタンスタイル',\n      description: 'vue-radio元素だけをvue-radio-button元素に変換すれば良い。 '\n    },\n    samples5: {\n      row1column2: 'Radioのvalue',\n      row2column2: '使用不可か',\n      row3column2: '原生属性'\n    },\n    samples6: {\n      row1column2: 'ボタングループサイズ',\n      row2column2: 'ボタン活性化時の充填色と枠色',\n      row3column2: 'ボタン活性化時のテキスト色'\n    },\n    samples7: {\n      row1column2: 'バンディング時チェンジ時トリガーされたイベント',\n      row1column3: '選択されたRadio label値'\n    },\n    samples8: {\n      row1column2: 'Radioのvalue',\n      row2column2: '使用不可か'\n    }\n  },\n  switchDemo: {\n    label: 'Switch スイッチ',\n    description: '二種互いに対立状態の切替を表し、「オン/オフ」トリガーによく使われる。',\n    samples1: {\n      label: '基本使い方',\n      description: 'v-modelをBooleanタイプ変数にバンディング。on-text属性とoff-text属性でスイッチの文字記述を設定し、on-color属性とoff-color属性でスイッチの背景色を設定する'\n    },\n    samples2: {\n      label: '使用不可状態',\n      description: 'isabled属性を設定すれば良い、Booleanを受取、 trueは使用不可とする。'\n    },\n    samples3: {\n      row1column2: '使用不可か',\n      row2column2: 'switchの幅(画素)',\n      row2column5: '58(文字有り)、46(文字無し)',\n      row3column2: 'switchオン時表示されたアイコンのクラス名、本項目を設定すればon-textが見落とされる',\n      row4column2: 'switchオフ時表示されたアイコンのクラス名、本項目を設定すればoff-textが見落とされる',\n      row5column2: 'switchオン時の文字',\n      row6column2: 'switchオフ時の文字',\n      row7column2: 'switchオン時の背景色',\n      row8column2: 'switchオフ時の背景色',\n      row9column2: 'switch対応となるname属性'\n    },\n    samples4: {\n      row1column2: 'switch状態チェンジ時のコールバック関数'\n    }\n  },\n  dropdownDemo: {\n    label: 'Dropdown ドロップダウンメニュー',\n    description: 'アクションやメニューをドロップダウンメニューに折り畳む。',\n    samples1: {\n      label: '基本使い方',\n      description: 'コンポーネントslotでドロップダウントリガーされた元素を設定し、また名称は\"dropdown\"であるslotでドロップダウンメニューを設定する。デフォルトの場合では、hoverだけでメニューがドロップダウンされ、クリックしなくてもドロップダウンメニューが表示される。'\n    },\n    samples2: {\n      label: 'トリガーオブジェクト',\n      description: 'split-button属性を設定してドロップダウン元素がボタングループとして表すことをトリガー、左側は機能ボタン、右側はドロップダウンメニューをトリガーするボタン、trueに設定すれば良い。'\n    },\n    samples3: {\n      label: 'トリガー式',\n      description: 'trigger属性をclickに設定すれば、click活性化を設定できる。',\n      hoverLabel: 'hover 活性化',\n      clickLabel: 'click 活性化'\n    },\n    samples4: {\n      label: 'メニュー隠す式',\n      description: 'ドロップダウンメニューはメニューをクリック後デフォルト隠される。hide-on-click属性デフォルトfalseで本機能をクローズできる。'\n    },\n    samples5: {\n      label: 'コマンドイベント',\n      description: 'メニューをクリック後イベントをトリガーし、ユーザーは対応となるメニューキー項目で異なる操作する。'\n    },\n    samples6: {\n      row1column2: 'メニューボタンタイプ、Buttonコンポーネントと同様(split-buttonはtrueの場合のみ有効)',\n      row2column2: 'メニューボタンタイプ、Buttonコンポーネントと同様(split-buttoはtrueの場合のみ有効)',\n      row3column2: '元素をドロップダウンでトリガーし、ボタングループとして表示する',\n      row4column2: 'メニュー水平寄せ方向',\n      row5column2: 'ドロップダウン動作をトリガー',\n      row6column2: 'メニューをクリック後メニューを隠すか'\n    },\n    samples7: {\n      row1column2: 'split-buttonはtrue時、左側ボタンのコールバックをクリック',\n      row2column2: 'メニューをクリックしてトリガーされたイベントコールバック',\n      row2column3: 'dropdown-itemコマンド',\n      row3column2: 'ドロップダウン表示/非表示時トリガー',\n      row3column3: '表示はtrue、非表示はfalseとする'\n    },\n    samples8: {\n      row1column2: 'コマンド',\n      row2column2: '使用不可',\n      row3column2: '分割線表示',\n    }\n  },\n  selectDemo: {\n    label: 'Select セレクター',\n    description: 'オプションが多すぎ時、ドロップダウンメニューで表示してから内容を選択。',\n    samples1: {\n      label: '基本使い方',\n      description: 'v-modelの値は現在選択されたvue-optionのvalue属性値とする'\n    },\n    samples2: {\n      label: '使用不可オプション有り',\n      description: 'vue-optionにdisabled値をtrueに設定すれば、当該オプションを使用不可にする'\n    },\n    samples3: {\n      label: '使用不可状態',\n      description: 'isabled属性を設定すれば良い、Booleanを受取、trueは使用不可とする。'\n    },\n    samples4: {\n      label: '単一選択をクリアできる',\n      description: 'clearable属性を設定すれば、セレクターをクリアできる。注意すべきことは、clearable属性はラジオボックスしか適応しない'\n    },\n    samples5: {\n      label: '基礎複数選択',\n      description: 'multiple属性を設定すれば、複数選択を使用可にする。その時v-modelの値はカレント選択された値で出来上がった配列とする'\n    },\n    samples6: {\n      label: 'テンプレートカスタマイズ',\n      description: 'カスタマイズしたHTMLテンプレートをvue-optionのslotに挿入すれば良い。'\n    },\n    samples7: {\n      label: 'グループ',\n      description: 'vue-option-groupで選択対象をグループ化し、label属性はグループ名とする'\n    },\n    samples8: {\n      label: '検索',\n      description: 'vue-selectにfilterable属性を追加すれば検索機能を使用可にする。デフォルトの場合、Selectは入力値のオプションが含まれるlabel属性を全て探し出す。他の検索ロジックを使用したい場合、filter-methodをインプットして実現できる。filter-methodはFunctionであり、入力値チェンジ時に呼び出され、パラメータはカレント入力値とする。'\n    },\n    samples9: {\n      label: 'リモート検索',\n      description: 'リモート検索を使用可にするには、filterableとremoteをtrueに設定する必要あり、またインプットしたremote-method.remote-methodはFunctionとし、入力値チェンジ時に呼び出され、パラメータはカレント入力値とする。',\n      placeholderLabel: 'キーワードを入力してください。'\n    },\n    samples10: {\n      label: '条目作成',\n      description: 'allow-create属性を利用するによる入力欄に文字入力で新しい条目を作成できる。その時filterableは必ずtrueとすることを注意。'\n    },\n    samples11: {\n      row1column2: '複数選択か',\n      row2column2: '使用不可か',\n      row3column2: '入力欄サイズ',\n      row4column2: '単一選択時オプションをクリアできるか',\n      row5column2: '複数選択時ユーザーが最大選択できる項目数、0なら制限なし',\n      row6column2: '原生属性',\n      row7column2: 'プレースホルダテキスト',\n      row8column2: '検索できるか',\n      row9column2: 'ユーザー条目作成を許可するか、filterableと合わせて利用要',\n      row10column2: 'カスタマイズ検索方法',\n      row11column2: 'リモート検索であるか',\n      row12column2: 'リモート検索方法',\n      row13column2: 'リモートからデータ取得中か',\n      row14column2: 'リモートロード時表示された文字',\n      row15column2: '検索条件アンマッチ時表示された文字',\n      row16column2: 'オプションが空時表示された文字',\n      row17column2: 'ドロップダウンのクラス名をSelect',\n      row18column2: '入力欄にEnterを押し、一番目マッチングした項目を選択する。filterable又はremoteと合わせて利用要'\n    },\n    samples12: {\n      row1column2: '選択値チェンジ時にトリガー',\n      row1column3: '現在の選択値',\n      row2column2: 'ドロップダウン表示/非表示時にトリガー',\n      row2column3: '表示は true、非表示はfalseとする',\n      row3column2: '複数選択モードにtagを削除時にトリガー',\n      row3column3: 'tag値を削除する'\n    },\n    samples13: {\n      row1column2: 'グループのグループ名',\n      row2column2: '該グループ下の全てのオプションを使用不可にするか'\n    },\n    samples14: {\n      row1column2: 'オプションの値',\n      row2column2: 'オプションのタグ、設定しない場合、デフォルトはvalueと同様',\n      row3column2: '該オプションを使用不可にするか'\n    }\n  },\n  cascaderDemo: {\n    label: 'Cascader カスケードセレクター',\n    description: 'データセットに階層構造がはっきりしている時、カスケードセレクターで段階的に確認してから選択。',\n    samples1: {\n      label: '基本使い方',\n      description: 'Cascaderのoptions属性にオプション配列だけ指定すれば、カスケードセレクターをレンダリングできる。通过expand-triggerでサブメニュー展開のトリガー型を定義できる。changeイベントはパラメータはCascaderのバインディング値：各レベルのメニュー値で構成する配列。',\n      clickLabel: 'click サブメニューをトリガー',\n      hoverLabel: 'hover サブメニューをトリガー'\n    },\n    samples2: {\n      label: '使用不可オプション',\n      description: 'Cascaderはデータに各disabledフィールドはtrueであるかをチェックし、データに使用不可意味合いのフィールド名はdisabledでない場合、props属性で指定できる'\n    },\n    samples3: {\n      label: '最後レベルのみ表示',\n      description: '属性show-all-levelsはフルパス表示かを定義し、falseに設定した場合、最後レベルしか表示しない'\n    },\n    samples4: {\n      label: 'デフォルト値',\n      description: 'デフォルト値は配列で指定'\n    },\n    samples5: {\n      label: '選択つまりチェンジ',\n      description: 'change-on-selectをtrueに設定し、オプションにクリックまたは移入とはセレクトオン'\n    },\n    samples6: {\n      label: '二次オプション動的にロード',\n      description: 'active-item-changeイベントで、あるoptionをクリック時該option下のサブデータをドロップダウンできる'\n    },\n    samples7: {\n      label: '検索可',\n      description: 'filterableをtrueに設定すれば検索機能を使用可になる',\n      label1: '最後レベルメニューを選択するオプション',\n      label2: '任意レベルメニューを選択するオプション',\n      placeholderLabel: '検索試し：component'\n    },\n    samples8: {\n      row1column2: 'オプションデータソース，鍵名はprops属性で設定できる',\n      row2column2: '構成オプション 、詳細は下表を参照',\n      row3column2: '選択項目バンディング値',\n      row4column2: 'フローティングクラス名をカスタマイズ',\n      row5column2: 'プレースホルダテキスト',\n      row6column2: '使用不可か',\n      row7column2: 'オプションクリアをサポートか',\n      row8column2: '二次メニュー展開式',\n      row9column2: '入力欄に選択値のフルパスを表示するか',\n      row10column2: 'オプションを検索できるか',\n      row11column2: 'キーワード入力したデバウンシング遅延を検索、ミリ秒',\n      row12column2: '任意レベルオプション選択を許可するか',\n      row13column2: 'サイズ'\n    },\n    samples9: {\n      row1column2: 'オプション値をオプションオブジェクトのある属性値に指定する',\n      row2column2: 'オプションタグをオプションオブジェクトのある属性値に指定する',\n      row3column2: 'オプションのサブオプションをオプションオブジェクトのある属性値に指定する',\n      row4column2: 'オプションの使用不可をオプションオブジェクトのある属性値に指定する',\n      row5column2: 'オプションパラメータ、フィルター前のフック、パラメータは入力された値、戻り値はfalseまたはPromise、かつrejectされた場合、フィルターをストップ。'\n    },\n    samples10: {\n      row1column2: 'バンディング時チェンジ時トリガーされたイベント',\n      row1column3: 'カレント値',\n      row2column2: '親オプションチェンジ時にトリガーされたイベント、 change-on-selectはfalse時にのみ使用可',\n      row2column3: '各親オプション構成した配列'\n    },\n    samples11:{\n      row1column2: 'カスタムレベル選択名',\n      row2column2: 'ロード状態を表示するかどうか(移動先のみ利用可能です)',\n      row3column2: 'トップバーのタイトル(移動先のみ利用可能です)',\n      row4column2: '決定ボタンのテキスト内容(移動先のみ利用可能です)',\n      row4column3: 'キャンセルボタンのテキスト内容(移動先のみ利用可能です)',\n      row5column2: 'トップバーの位置(移動先のみ利用可能です)',\n      row5column3: 'トップバーを表示するかどうか(移動先のみ利用可能です)',\n      row6column2: 'HTMLの適用を許可しますか？(移動先のみ利用可能です)',\n      row7column2: 'オプションの高さ(移動先のみ利用可能です)',\n      row8column2: '表示されるオプションの個数(移動先のみ利用可能です)',\n      row9column2: '高速スライド時の慣性スクロールの時間は長く、単位ms(移動先のみ利用可能です)',\n      row10column2: '確定ボタンをクリックした時にトリガします。(移動先のみ利用可能です)',\n      row10column3: '現在の値、すなわち(value, index)',\n      row11column2: 'キャンセルボタンをクリックしたときにトリガします。(移動先のみ利用可能です)',\n    }\n  },\n  formDemo: {\n    label: 'Form フォーム',\n    description: '入力欄、セレクター、ラジオボックス、チェックボックス等のコントロールから組成され、データ収集、チェック、サブミット用。',\n    samples1: {\n      label: '基礎フォーム',\n      description: 'Formコントロールに、各フォーム域はForm-Itemコンポーネントから構成され、フォーム域に各種タイプのフォームコントロールが置かれている。'\n    },\n    samples2: {\n      label: '行内フォーム',\n      description: 'inline属性を設定すれば、フォーム域は行内のフォーム域になる'\n    },\n    samples3: {\n      label: '寄せ方',\n      description: 'label-position属性を設定することで、フォーム域タグの位置をチェンジでき、選択値top、left、rightとする'\n    },\n    samples4: {\n      label: 'フォーム検証',\n      description: 'Formコンポーネントはフォーム検証機能を提供し、rule属性で約束した検証ルールを渡し、Form-Itemのprop属性をチェック対象フィールド名に設定すれば良い。'\n    },\n    samples5: {\n      label: '検証ルールカスタマイズ',\n      description: 'カスタマイズ検証ルールで検証完了させる。'\n    },\n    samples6: {\n      label: 'フォーム項目動的に増減',\n      description: 'Formコンポーネントに一回限りで全ての検証ルールを渡せる以外、単一のフォーム域に属性の検証ルールも渡せる'\n    },\n    samples7: {\n      row1column2: 'フォームデータオブジェクト',\n      row2column2: 'フォーム検証ルール',\n      row3column2: '行内フォームモード',\n      row4column2: 'フォーム域ラベルの位置',\n      row5column2: 'フォーム域ラベルの幅、Form直接子元素としたform-itemは該値を継承する',\n      row6column2: 'フォーム域ラベルのサフィックス',\n      row7column2: 'チェックエラーメッセージを表示するか',\n      row8column2: 'フォーム域ラベルはセルフ適応となる',\n      row9column2: 'チェックエラーメッセージはお知らせヒントメッセージを表示するか',\n      row10column2: 'カスタマイズメッセージ,パラメータはエラーメッセージ'\n    },\n    samples8: {\n      row1column2: 'フォーム全体のチェック方法',\n      row2column2: '一部フォームのフィールドのチェック方法',\n      row3column2: 'フォーム全体のリセット。全てのフィールドをデフォルト値にリセットし、チェック結果もクリア'\n    },\n    samples9: {\n      row1column2: 'フォームエリアmodelフィールド、validate、resetFieldsメソッドを使用した場合、該属性は必須となる',\n      row1column4: 'Formコンポーネントのmodelフィールドをインプット',\n      row2column2: 'タグテキスト',\n      row3column2: 'フォームエリアタグの幅、例\"50px\"',\n      row4column2: '必須入力か。設定しない場合、チェックルールに従って自動生成',\n      row5column2: 'フォーム検証ルール',\n      row6column2: 'フォームエリアエラーメッセージ検証。該値を設定すればフォーム検証状態はerrorになり、当該エラーメッセージも表示される',\n      row7column2: 'チェックエラーメッセージを表示するか'\n    }\n  },\n  paginationDemo: {\n    label: 'Pagination ページング',\n    description: 'データが多すぎた場合、ページングでデータを分解する。',\n    samples1: {\n      label: '基本使い方',\n      description: 'layoutを設定し、表示要内容を表示し、カンマで区切り、レイアウト元素が順次に表示される。prevは前のページ、nextは次のページ。pagerはページリスト、page-sizeは各ページ表示する条目数、totalは総条目数とする',\n      label1: 'ページ少ない時の効果',\n      label2: 'ページ多い時の効果',\n      label3: 'ミニペーシング'\n    },\n    samples2: {\n      label: '付加機能',\n      description: 'size-changeとcurrent-changeイベントでページ大きさとカレントページチェンジ時トリガーされたイベントを処理する。page-sizesは一つ整形配列を受取、配列元素は各ページ表示数のオプションをデモ選択とする',\n      label1: '総数表示',\n      label2: '各ページ表示数を調整',\n      label3: '直接へ',\n      label4: '機能を完備'\n    },\n    samples3: {\n      row1column2: 'ミニペーシングスタイルを使用か',\n      row2column2: '各ページは条目数を表示する',\n      row3column2: '総条目数',\n      row4column2: '総ページ数。 totalとpage-countを任意設定すればページ数を表示機能が付く；もしpage-sizesの変更をサポートするには、total属性を使用必要がある',\n      row5column2: 'カレントページ数、sync修飾子をサポートする',\n      row6column2: 'コンポーネントレイアウト、子コンポーネント名はカンマで区切り',\n      row7column2: '各ページは数セレクターのオプション位置を表示する'\n    },\n    samples4: {\n      row1column2: 'pageSizeチェンジ時にトリガー',\n      row1column3: '各ページ条目数size',\n      row2column2: 'currentPageチェンジ時にトリガー',\n      row2column3: 'カレントページcurrentPage'\n    }\n  },\n  treeDemo: {\n    label: 'Tree ツリーコントロール',\n    description: '情報をはっきりした階層構造で表示し、大きく広げる又は折り畳むことができる。',\n    samples1: {\n      label: '基本使い方',\n      description: '基礎のツリー構造を展示する。'\n    },\n    samples2: {\n      label: 'データを選択と取得',\n      description: 'show-checkbox属性はノード選択できるかを設定する。lazy属性はクリック時にのみデータを取得するかを設定する。load属性はサブツリーロードの方法を設定できる。'\n    },\n    samples3: {\n      label: 'デフォルト大きく広げるとデフォルトチェックオン',\n      description: 'デフォルト大きく広げるとデフォルトチェックオンノードはそれぞれdefault-expanded-keysとdefault-checked-keysで設定。注意すべき点は、この時必ずnode-keyを設定し、値はノードデータのフィールド名とし、そのフィールドは木の中で唯一である。'\n    },\n    samples4: {\n      label: '使用不可状態',\n      description: 'disabledで使用不可状態を設定.'\n    },\n    samples5: {\n      label: 'ツリーノードの選択',\n      description: '取得と設定はそれぞれ二種の方法があり：node又はkeyで。keyで取得又は設定する場合、必ずnode-keyを設定する'\n    },\n    samples13: {\n      label: 'ハイライトノードの選択',\n      description: '取得と設定はそれぞれ二種の方法があり：node又はkeyで。keyで取得又は設定する場合、必ずnode-keyを設定する'\n    },\n    samples6: {\n      label: 'ノード内容カスタマイズ',\n      description: 'render-contentでレンダリング関数を指定し、該関数は必要なノードエリア内容を返しすれば良い。レンダリング関数の使い方はVueドキュメントをご参考ください'\n    },\n    samples7: {\n      label: 'ノードフィルター',\n      description: 'Treeインスタンスのfilterメソッドを呼び出す。パラメータはキーワードとする。注意すべき点は、この時filter-node-methodを設定要、値はフィルター関数とする。'\n    },\n    samples8: {\n      label: 'アコーディオンモード',\n      description: '同じレベルのノードに対して、毎回1つしか展開できない'\n    },\n    samples9: {\n      row1column2: 'データ展示',\n      row2column2: '各ツリーノードを唯一標識する属性とし、ツリー丸ごとは唯一であるべき',\n      row3column2: 'レージーロード',\n      row4column2: 'サブデータをロードする方法、lazyはtrue時に有効',\n      row5column2: 'ツリーノードの内容エリアのレンダリングFunction',\n      row6column2: 'カレント選択ノードをハイライトするか',\n      row7column2: 'カレント選択ノードのkey',\n      row8column2: '全てのノードをデフォルト展開するか',\n      row9column2: 'ノードをクリック時にノードを展開又は収縮するか',\n      row10column2: 'サブノードを展開時に親ノードを自動的に展開するか',\n      row11column2: 'デフォルト展開されたノードのキー配列',\n      row12column2: 'ノード選択できるか',\n      row13column2: 'チェックボックスが表示された場合、親子互いに関連しないやり方に厳しく従うか',\n      row14column2: 'デフォルトチェックされたノードのキー配列',\n      row15column2: 'ツリーノードをフィルター時に実行したメソッド。trueを返した場合、本ノードを表示とし、falseを返した場合、本ノードが非表示とする',\n      row16column2: '毎回同じレベルツリーノードを一つのみ展開するか',\n      row17column2: '隣接レベルのノード間の水平インデント、単位は画素とする',\n      row18column2: 'コンフィグレーションオプション、詳細は下表を参考'\n    },\n    samples10: {\n      row1column2: 'ノードタグをノードオブジェクトのある属性値に指定',\n      row2column2: 'サブツリーををノードオブジェクトのある属性値に指定',\n      row3column2: 'ノード選択フレームが使用不可かを指定'\n    },\n    samples11: {\n      row1column2: 'ツリーノードに対してフィルター操作を行う',\n      row1column3: '任意タイプのパラメータを受取、該パラメータはfilter-node-methodに一番目のパラメータとする',\n      row2column2: 'ノードが選択可(つまり、show-checkboxはtrue)の場合、現在選択されたノード構成した配列を返す',\n      row2column3: '(leafOnly、indeterminate)1はboolean型のパラメータを受取、trueであれば、選択されたサブノードを返し、デフォルト値はfalseとする、2はboolean型のパラメータを受取、中間状態ノードを含めるかどうかを定義する、デフォルト値はfalseとする',\n      row3column2: '現在チェックしたノードを設定する。この方法を使用するには必ずnode-key属性を設定する',\n      row3column3: '(nodes)はチェックしたノードデータの配列を受取る',\n      row4column2: 'ノードが選択可(つまり、show-checkboxはtrue)の場合、現在選択されたノードのkeyで構成した配列を返す',\n      row4column3: '(leafOnly、indeterminate)1はboolean型のパラメータを受取、trueであれば、選択されたサブノードのkeysを返し、デフォルト値はfalseとする、2はboolean型のパラメータを受取、中間状態ノードを含めるかどうかを定義する、デフォルト値はfalseとする',\n      row5column2: 'keysで現在チェックされたノードを設定し、, この方法を使用するには必ずnode-key属性を設定する',\n      row5column3: '(keys, leafOnly)は二つのパラメータを受取る。1.チェックオンしたノードのkeyの配列 2.booleanタイプのパラメータ、trueなら、葉ノードのみチェックオンに設定し、デフォルト値はfalseとする',\n      row6column2: 'key/dataであるノードのチェック状態を設定する。 この方法を使用するには必ずnode-key属性を設定する',\n      row6column3: '(key/data, checked, deep)三つのパラメータを受取る。 1.チェックオンしたノードのkey又はdata 2.booleanタイプ、 ノード選択されるか 3.booleanタイプ、サブノードを設定するか、 デフォルト値はfalseとする',\n      row7column2: 'ノードがハイライトできる(つまり、highlight-currentはtrue)の場合、現在ハイライトされたノードを返す',\n      row8column2: 'ノードがハイライトできる(つまり、highlight-currentはtrue)の場合、現在ハイライトされたノードのkeyを返す',\n      row9column2: 'カレントハイライトのノードを設定する。 この方法を使用するには必ずnode-key属性を設定する',\n      row10column2: 'keyでカレントハイライトのノードを設定する。この方法を使用するには必ずnode-key属性を設定する',\n    },\n    samples12: {\n      row1column2: 'ノードクリックされた時のコールバック',\n      row1column3: '計三つパラメータ、順次は：data属性に渡す配列の中に該ノード対応となるオブジェクト、ノード対応となるNode、ノードコンポーネント自体。',\n      row2column2: 'ノード選択状態チェンジ時のコールバック',\n      row2column3: '計三つパラメータ、順次は：data属性に渡す配列の中に該ノード対応となるオブジェクト、ノード自体が選択されるか、ノードのサブツリーに選択されたノードがあるか',\n      row3column2: 'カレント選択したノードがチェンジ時にトリガーされたイベント',\n      row3column3: '計二つパラメータ、順次は：カレントノードのデータ、カレントノードのNodeオブジェクト',\n      row4column2: 'ノードが展開された時にトリガーされたイベント',\n      row4column3: '計三つパラメータ、順次は：data属性に渡す配列の中に該ノード対応となるオブジェクト、ノード対応となるNode、ノードコンポーネント本身.',\n      row5column2: 'ノードがクローズされた時にトリガーされたイベント',\n      row5column3: '計三つパラメータ、順次は：data属性に渡す配列の中に該ノード対応となるオブジェクト、ノード対応となるNode、ノードコンポーネント本身.'\n    }\n  },\n  collapseDemo: {\n    label: 'Collapse 折り畳みパネル',\n    description: '折り畳みパネルで内容エリアを収納する',\n    samples1: {\n      label: '基本使い方',\n      description: '同時に対数のパネルを展開でき、パネルの間では影響しない'\n    },\n    samples2: {\n      label: 'アコーディオン効果',\n      description: '毎回は一つのパネルしか展開しない、accordion属性でアコーディオンモードで表示するかを設定する'\n    },\n    samples3: {\n      label: 'パネルタイトルカスタマイズ',\n      description: 'title属性以外、名slotもパネルタイトルをカスタマイズでき、追加アイコン等の効果を実現する。'\n    },\n    samples4: {\n      row1column2: 'アコーディオンモードか',\n      row2column2: 'カレント活性化したパネル(アコーディオンモードであれば、バインディング値タイプは必ずstringで、なければarrayとする)'\n    },\n    samples5: {\n      row1column2: 'カレント活性化パネルチェンジ時にトリガー(アコーディオンモードであれば、パラメータ activeNames タイプはstringで、なければarrayとする)'\n    },\n    samples6: {\n      row1column2: '唯一の標識符',\n      row2column2: 'パネルタイトル',\n      row3column2: 'クリック時に展開又は収縮するか'\n    }\n  },\n  messageBoxDemo: {\n    label: 'MessageBox ポップアップ',\n    description: 'システムのメッセージヒントフレームを模擬して実現したワンセットモーダルダイアログボックスコンポーネント。',\n    samples1: {\n      label: 'メッセージヒント',\n      description: '$alertメソッドを呼び出してメッセージヒントオープンできる。システムのalertを模擬した '\n    },\n    samples2: {\n      label: 'メッセージ確認',\n      description: '$confirmメソッドを呼び出してメッセージヒントオープンできる。システムのconfirmを模擬した。'\n    },\n    samples3: {\n      label: 'カスタマイズ',\n      description: '異なる内容をカスタマイズ配置できる。'\n    },\n    samples4: {\n      row1column2: 'MessageBoxタイトル',\n      row2column2: 'MessageBoxメッセージ本文の内容 ',\n      row3column2: 'メッセージタイプ、アイコン表示用',\n      row4column2: 'MessageBoxのカスタマイズクラス名',\n      row5column2: 'MessageBoxクローズ後のコールバック, actionの値は\"confirm\"又は\"cancel\"で、 instanceは MessageBoxインスタントとする',\n      row5column3: 'Function(action, instance)',\n      row6column2: 'MessageBoxクローズ前のコールバック、インスタントのクローズを一時的にストップする, actionの値は\"confirm\"又は\"cancel\"で、instanceは MessageBoxインスタントとし、 doneはMessageBoxインスタントをクローズ用',\n      row6column3: 'Function(action, instance, done)',\n      row7column2: 'キャンセルボタンのテキスト内容',\n      row8column2: '確定ボタンのテキスト内容',\n      row9column2: 'キャンセルボタンのカスタマイズクラス名',\n      row10column2: '確定ボタンのカスタマイズクラス名',\n    }\n  },\n  dialogDemo: {\n    label: 'Dialog ダイアログボックス',\n    description: '現在ページ状態を保留した上に、ユーザーにお知らせ、関連操作も伝える。',\n    samples1: {\n      label: '基本使い方',\n      description: 'v-model属性を設定要。Booleanを受取、true時Dialog.Dialog表示は三分に分ける：header, bodyとfooter、 headerは名headerのslotが必要、 footerは名footerのslot.title属性でタイトルを定義する要。それはオプションで、デフォルトは空とする。header存在時にtitleが表示しない。show-close属性は閉じるボタンを表示し、デフォルトはfalseとする。'\n    },\n    samples2: {\n      label: '内容カスタマイズ',\n      description: 'Dialogコンポーネントの内容は任意で良い'\n    },\n    samples3: {\n      row1column2: 'Dialogを表示するか',\n      row2column2: 'Dialogのタイトル',\n      row3column2: 'Dialogの大きさ',\n      row4column2: 'Dialog CSS中のtop値(sizeはfullでない時のみ有効)',\n      row5column2: 'Dialogのカスタマイズクラス名',\n      row6column2: 'modalをクリックでDialogをクローズできるか',\n      row7column2: 'ESCを押下でDialogをクローズできるか',\n      row8column2: '閉じるボタンを表示するか',\n      row9column2: 'クローズ前のコールバック、Dialogのクローズを一時的にストップし、done()はクローズ用、done(false)はクローズをキャンセル用',\n      row9column3: 'Function(done)',\n    },\n    samples4: {\n      row1column2: 'Dialogの内容',\n      row2column2: 'Dialog head部の内容',\n      row3column2: 'Dialog foot部の内容'\n    },\n    samples5: {\n      row1column2: 'Dialogクローズのコールバック',\n      row2column2: 'Dialogオープンのコールバック'\n    }\n  },\n  asideDemo: {\n    label: 'Aside サイド欄',\n    description: '現在ページ状態を保留した上に、サイドで関連操作を伝える。',\n    samples1: {\n      label: '基本使い方',\n      description: 'v-model属性を設定要。Booleanを受取、true時Aside.Aside表示は三分に分ける：header, bodyとfooter、headerは名headerのslotが必要、footerは名footerのslot.title属性でタイトルを定義する要。それはオプションで、デフォルトは空とする。header存在時にtitleが表示しない。show-close属性は閉じるボタンを表示し、デフォルトはfalseとする。'\n    },\n    samples2: {\n      label: 'エリア表示',\n      description: 'relative属性を設定し、親容器内で展示できる'\n    },\n    samples3: {\n      label: '内容カスタマイズ',\n      description: 'Asideコンポーネントの内容は任意で良い'\n    },\n    samples4: {\n      row1column2: 'Asideを表示するか',\n      row2column2: 'Asideのタイトル',\n      row3column2: 'Asideの大きさ',\n      row4column2: 'Aside CSS中のtop値(sizeはfullでない時のみ有効)',\n      row5column2: 'Asideのカスタマイズクラス名',\n      row6column2: 'modalをクリックでAsideをクローズできるか',\n      row7column2: 'ESCを押下でAsideをクローズできるか',\n      row8column2: '閉じるボタンを表示するか',\n      row9column2: 'クローズ前のコールバック, Asideのクローズを一時的にストップし、done()はクローズ用、 done(false)はクローズをキャンセル用',\n      row9column3: 'Function(done)',\n      row10column2: '現れる位置',\n      row11column2: '親容器内にAsideを表示するか'\n    },\n    samples5: {\n      row1column2: 'Asideの内容',\n      row2column2: 'Aside head部の内容',\n      row3column2: 'Aside foot部の内容'\n    },\n    samples6: {\n      row1column2: 'Asideクローズのコールバック',\n      row2column2: 'Asideオープンのコールバック'\n    }\n  },\n  notificationDemo: {\n    label: 'Notification お知らせ',\n    description: 'ページ右上に浮かび上がって表示する。グローバルのお知らせヒントメッセージを表示する。',\n    samples1: {\n      label: '基本使い方',\n      description: 'titleとmessageはタイトルと本文を設定用。デフォルトの場合では、しばらく経ってからコンポーネント自動的にクローズするが、durationを設定すれば、クローズの時間間隔を制御できる。0に設定した場合、自動的にクローズしない。4種の通知タイプがある：success, warning, info, error。typeフィールドで設定する'\n    },\n    samples2: {\n      label: 'お知らせ位置',\n      description: 'position属性を設定して定位し、デフォルトは\"top-right\"とする'\n    },\n    samples3: {\n      row1column2: 'タイトル',\n      row2column2: '本文内容',\n      row3column2: 'テーマスタイル、選択値外の場合、見落とされる',\n      row4column2: 'アイコンのクラス名をカスタマイズ。typeを設定した場合、iconClassが覆われる',\n      row5column2: 'クラス名カスタマイズ',\n      row6column2: '時間表示、ミリ秒。0に設定した場合、自動的にクローズしない',\n      row7column2: 'クローズ時のコールバック関数',\n      row8column2: '定位、選択値外の場合表示できない',\n      row9column2: 'クローズボタンを表示するか'\n    }\n  },\n  badgeDemo: {\n    label: 'Badge マーク',\n    description: 'ボタン、アイコンの横にある数字または状態マーク。',\n    samples1: {\n      label: '基本使い方',\n      description: 'value属性を定義し、Number又はStringを受取。最大値max属性で定義し、Numberを受取、valueはNumber時のみ有効となる。is-dot属性を設定し、赤点の形でマーク'\n    },\n    samples2: {\n      row1column2: '表示値',\n      row2column2: '最大値、最大値を超えた時 \"{max}+\"が表示され、 value は Number 型とする',\n      row3column2: 'ドット',\n      row4column2: '非表示'\n    }\n  },\n  tabsDemo: {\n    label: 'Tabs タグページ',\n    description: '区切り内容には関連があるが違うカテゴリーのデータ集合。',\n    samples1: {\n      label: '基本使い方',\n      description: 'value属性で現在選択されたタグページを指定する。 '\n    },\n    samples2: {\n      label: 'オプションカードスタイル',\n      description: 'type属性をcardに設定'\n    },\n    samples3: {\n      label: 'カード化スタイル',\n      description: 'type属性をborder-cardに設定'\n    },\n    samples4: {\n      label: 'タグカスタマイズ',\n      description: '名labelのslotでカスタマイズタグ内容を実現する'\n    },\n    samples5: {\n      label: '動的にタグページを増減'\n    },\n    samples6: {\n      label: 'タグページトリガーをカスタマイズで増加'\n    },\n    samples7: {\n      row1column2: 'スタイルタイプ',\n      row2column2: 'タグは閉じるボタンを表示するか',\n      row3column2: 'タグは追加ボタンを表示するか',\n      row4column2: 'タグは追加と閉じるボタンを同時に表示するか',\n      row5column2: 'バインディング値、オプションカードの nameを選択',\n      row5column5: '一番目オプションカードのname'\n    },\n    samples8: {\n      row1column2: 'オプションカードが選択された時にトリガー',\n      row1column3: '選択されたオプションカードインスタンス、イベントインスタンス',\n      row2column2: 'オプションカードの閉じるボタンをクリック時にトリガー',\n      row2column3: '選択されたオプションカードのname',\n      row3column2: 'オプションカードの追加ボタンをクリック時にトリガー',\n      row4column2: 'オプションカードの追加をクリック、又はクローズ後トリガー',\n      row4column3: '選択されたオプションカード的name、イベント挙動(add, remove)'\n    },\n    samples9: {\n      row1column2: 'オプションカードタイトル',\n      row2column2: '使用不可か',\n      row3column2: 'オプションカード別名',\n      row4column2: 'タグは閉じるボタンを表示するか'\n    }\n  },\n  popoverDemo: {\n    label: 'Popover ポップアップフレーム',\n    description: '節メッセージに展示用',\n    samples1: {\n      label: '基本使い方',\n      description: 'trigger属性は何時Popoverをトリガーかを設定する。三種類のトリガー方式を提供する：hover, click, focus。slotでreferenceを指定できる。 '\n    },\n    samples2: {\n      label: 'ネスティングメッセージ',\n      description: 'Popoverに多種のメッセージをネスティングできる'\n    },\n    samples3: {\n      label: 'ネスティングメッセージ',\n      description: 'Popoverに多種の操作をネスティングできる'\n    },\n    samples4: {\n      row1column2: 'トリガー方式',\n      row2column2: 'タイトル',\n      row3column2: '表示内容、slotても渡せる',\n      row4column2: '幅',\n      row5column2: '現れる位置',\n      row6column2: '使用可か',\n      row7column2: '表示するか',\n      row8column2: 'popperにクラス名を追加',\n      row9column2: 'トリガー方式はhover時の遅延表示。単位はミリ秒',\n      row10column2: '矢印を表示するか'\n    },\n    samples5: {\n      row1column2: 'Popover埋込内容',\n      row2column2: 'Popover表示の元素をトリガー'\n    },\n    samples6: {\n      row1column2: '表示時にトリガー',\n      row2column2: '非表示にトリガー'\n    }\n  },\n  tooltipDemo: {\n    label: 'Tooltip 文字ヒント',\n    description: 'マウスhover時のヒントメッセージを表示用。',\n    samples1: {\n      label: '基本使い方',\n      description: 'content属性でhover時のヒントメッセージを決める。placement属性展示効果を決定：placement属性値は：方向-寄せ位置；四つ方向：top、left、right、bottom；三種類寄せ位置：start, end, デフォルトは空。placement=\"left-end\"の場合は、ヒントメッセージを目標元素の左側に表示させ、またヒントメッセージの底部は目標元素の底部に寄せる。'\n    },\n    samples2: {\n      label: 'テーマ',\n      description: 'Tooltipコンポーネントは二つ異なるテーマを提供：darkとlight. '\n    },\n    samples3: {\n      label: '内容カスタマイズ',\n      description: '名contentのslotでtooltipのcontent属性を代替する。'\n    },\n    samples4: {\n      label: '使用不可状態',\n      description: 'isabled属性を設定すれば良い、Booleanを受取、 trueは使用不可とする。'\n    },\n    samples5: {\n      row1column2: 'デフォルト提供したテーマ',\n      row2column2: 'マウスtooltipに入られるか',\n      row3column2: '表示内容、slotても渡せる',\n      row4column2: '現れる位置',\n      row5column2: '使用可か',\n      row6column2: '表示するか',\n      row7column2: 'popperにクラス名を追加',\n      row9column2: '矢印を表示するか'\n    }\n  },\n  tagDemo: {\n    label: 'Tag タグ',\n    description: 'マークと選択用。',\n    samples1: {\n      label: '基本使い方',\n      description: 'type属性でtagのタイプを選択し、width属性てtagの幅を設定できる；closable属性でタグ削除できるかを定義できる。hit属性をtrueに設定で枠描きがある。'\n    },\n    samples2: {\n      label: '動的編集タグ'\n    },\n    samples3: {\n      row1column2: 'テーマ',\n      row2column2: 'クローズできるか',\n      row4column2: '枠描きがあるか',\n      row5column2: 'tagの幅'\n    },\n    samples4: {\n      row1column2: 'tagをクローズ時トリガーされたイベント'\n    }\n  },\n  alertDemo: {\n    label: 'Alert 警告',\n    description: 'ページに重要なヒントメッセージを表示用。 ',\n    samples1: {\n      label: '基本使い方',\n      description: 'コンポーネントは四種類のテーマを提供し、type属性で指定、デフォルト値はinfo。 closable属性はクローズできるかを決定する。close-text属性設定で右側のクローズアイコンを代替し、closeイベント設定でクリック時のコールバックを設定する。show-icon属性設定でiconを表示。dark属性設定でダークスタイルを表示。'\n    },\n    samples2: {\n      row1column2: 'タイトル',\n      row2column2: 'テーマ',\n      row3column2: 'クローズできるか',\n      row4column2: 'ボタンカスタマイズテキストをクローズ',\n      row5column2: 'アイコンを表示するか',\n      row6column2: 'ダークモードをオンにするか'\n    },\n    samples3: {\n      row1column2: 'alert時トリガーされたイベントをクローズ'\n    }\n  },\n  noteDemo: {\n    label: 'Note ノート',\n    description: 'ページメッセージ表示用。 ',\n    samples1: {\n      label: '基本使い方',\n      description: 'コンポーネントは四種類のテーマを提供し、type属性で指定、デフォルト値はinfo。 '\n    },\n    samples2: {\n      row1column2: 'タイトル',\n      row2column2: 'テーマ',\n      row3column2: '地味モードをオンにするか'\n    }\n  },\n  cardDemo: {\n    label: 'Card カード',\n    description: 'メッセージをカード容器に集まって表示する。 ',\n    samples1: {\n      label: '基本使い方',\n      description: 'Cardコンポーネントはheaderとbodyが含まれる。 header部明示名slotで配り、選択可である。 '\n    },\n    samples2: {\n      label: 'シンプルカード',\n      description: 'カードは内容エリアしかないはOK。'\n    },\n    samples3: {\n      row1column2: 'headerを設定、名headerのslotでDOMをインプット',\n      row2column2: 'bodyのスタイルを設定'\n    }\n  },\n  carouselDemo: {\n    label: 'Carousel 回転コンベア',\n    description: '有限空間内に、同じタイプの画像、文字等内容を循環的に放送する。',\n    samples1: {\n      label: '基本使い方',\n      description: '内容は任意で、 デフォルトの場合では、マウスは底部のインジケータにhover時切替をトリガー。trigger属性をclickに設定すれば、クリックトリガー効果を達成できる。type属性をcardに設定すればカードモードをオンにできる。'\n    },\n    samples2: {\n      label: 'インジケータ',\n      description: 'indicator-position属性はインジケータの位置を定義。 デフォルトの場合では、回転コンベア内に表示され、outsideに設定すれば外部に表示される；noneに設定した場合インジケータを表示しない。'\n    },\n    samples3: {\n      label: '矢印',\n      description: 'arrow属性は切替矢印の表示タイミングを定義。デフォルトの場合では、切替矢印はマウスを回転コンベアにhover時のみ表示；arrowをalwaysに設定した場合、終始表示とする；neverに設定し場合、終始非表示とする。'\n    },\n    samples4: {\n      row1column2: '回転コンベアの高さ',\n      row2column2: '状態活性化スライドのインデックスを初期化し、 0からスタート',\n      row3column2: 'インジケータのトリガー方式',\n      row4column2: '自動切替か',\n      row5column2: '自動切替の時間間隔、単位はミリ秒',\n      row6column2: 'インジケータの位置',\n      row7column2: '切替矢印の表示タイミング',\n      row8column2: '回転コンベアのタイプ'\n    },\n    samples5: {\n      row1column2: 'スライド切替時トリガー',\n      row1column3: 'カレント活性化したスライドのインデックス、元スライドのインデックス。 (newIndex, oldIndex)'\n    },\n    samples6: {\n      row1column2: 'スライドを手動で切替',\n      row1column3: '切替必要なスライドのインデックス、0からスタート；又は対応となるvue-carousel-itemのname属性値',\n      row2column2: '前のスライドへ切替',\n      row3column2: '次のスライドへ切替'\n    },\n    samples7: {\n      row1column2: 'スライドの名前、setActiveItemのパラメータ用',\n      row1column3: '該スライド対応となるインジケータのテキスト'\n    }\n  },\n  loadingDemo: {\n    label: 'Loading ロード',\n    description: 'データロード時動効果を表示。',\n    samples1: {\n      label: '基本使い方',\n      description: 'カスタマイズコマンドv-loadingを利用し、v-loadingコマンドをバインディングした元素にvue-loading-text属性を追加し、その値がロード文案にレンダリングされ、ロードアイコン下に表示される。スクリーンマスクが必要とした場合、fullscreen修飾子を利用する。 '\n    },\n    samples2: {\n      row1column2: 'ロードアイコン下のロード文案に表示',\n      row2column2: 'Loadingのカスタマイズクラス名'\n    }\n  },\n  loadingBarDemo: {\n    label: 'LoadingBar 進捗バーをロード',\n    description: 'ページロード表示、非同期要求、ファイルアップロード等のロード進捗バーをグローバルに作成。',\n    samples1: {\n      label: '基本使い方',\n      description: 'start()メソッドを呼び出した後、コンポーネントは自動的に進捗を模擬する。finish()又はerror()を呼び出し時には、進捗完了させてから自動的に消える'\n    },\n    samples2: {\n      row1column2: '0から進捗バーを表示し、自動的に進捗をリロード',\n      row1column3: 'コールバック',\n      row2column2: '進捗完了させ、残進捗を自動的に完了させる',\n      row2column3: 'コールバック',\n      row3column2: 'エラーで進捗バーを完了させ、残進捗を自動的に完了させる',\n      row3column3: 'コールバック',\n      row4column2: '指定した進捗まで精確にロード',\n      row4column3: '指定した進捗パーセンテージ(percent), コールバック'\n    }\n  },\n  progressDemo: {\n    label: 'Progress 進捗バー',\n    description: '操作進捗に表示用、カレント状態と予期をユーザーにお知らせる。 ',\n    samples1: {\n      label: '基本使い方',\n      description: 'percentage属性を設定すれば良い。進捗バー対応となるパーセンテージを表示し、stroke-width 属性で進捗バーの高さを変更できる。また、 text-inside 属性で進捗バー説明を進捗バー内に置く。 type 属性で環状進捗バー利用指定できる。環状進捗バーでは、 width 属性で大きさを設定できる。'\n    },\n    samples2: {\n      row1column2: 'パーセンテージ',\n      row2column2: '進捗バータイプ',\n      row3column2: '進捗バーの高さ、単位px',\n      row4column2: '進捗バーに表示された文字は進捗バーに内蔵されている(type==line時のみ使用可)',\n      row5column2: '進捗バーカレント状態',\n      row6column2: '環状進捗バーキャンバス幅(type==circle時のみ使用可)',\n      row7column2: '進捗バー文字内容を表示するか'\n    }\n  },\n  sliderDemo: {\n    label: 'Slider スライダー',\n    description: 'スライダーをドラッグし、固定区間で選択する。',\n    samples1: {\n      label: '基本使い方',\n      description: 'バインディング値でカスタマイズしたスライダーの初期値を設定する。 '\n    },\n    samples2: {\n      label: '離散値',\n      description: 'ステップ値を変更することがでステップ長を変更できる。show-step属性を設定すれば切れ点を表示できる'\n    },\n    samples3: {\n      label: '範囲選択',\n      description: 'rangeを設定すれば範囲選択は使用可になる。その時バインディング値は配列であり、その元素はそれぞれ最小境界値と最大境界値である'\n    },\n    samples4: {\n      label: '垂直モード',\n      description: 'verticalを設定すればSliderは垂直モードになる。その時必ず高さheight属性を設定すること'\n    },\n    samples5: {\n      row1column2: '最小値',\n      row2column2: '最大値',\n      row3column2: '使用不可か',\n      row4column2: 'ステップ長',\n      row5column2: '切れ点を表示するか',\n      row6column2: 'tooltipを表示するか',\n      row7column2: 'tooltip messageをフォーマット化',\n      row8column2: '範囲選択であるか',\n      row9column2: '垂直モードにするか',\n      row10column2: 'Slider高さ(垂直モードのみ使用可)'\n    },\n    samples6: {\n      row1column2: '値チェンジ時にトリガー(マウスをドラッグ時、マウスをドロップ後にトリガー)',\n      row1column3: 'チェンジ後の値'\n    }\n  },\n  breadcrumbDemo: {\n    label: 'Breadcrumb パン屑',\n    description: 'カレントページのパスを表示し、直前の任意ページへ速やかに戻す。',\n    samples1: {\n      label: '基本使い方',\n      description: 'separator属性を設定することで区切り文字をチェンジする。デフォルトはスラッシュ\\'/\\''\n    },\n    samples2: {\n      row1column2: '区切り文字'\n    },\n    samples3: {\n      row1column2: 'パス遷移オブジェクト、 vue-routerのtoと同様'\n    },\n    samples4: {\n      row1column2: 'クリックイベント、to属性定義しない時のみトリガー'\n    }\n  },\n  stepsDemo: {\n    label: 'Steps ステップ',\n    description: 'ユーザーにプロセスどおりに任務を完成できるように導くステップナビゲーション。実際応用シーンに従ってステップを設定できる。ステップは 2 ステップ以上。',\n    samples1: {\n      label: '基本使い方',\n      description: 'active属性設定、Numberを受取、ステップのindexを表明し、0からスタート。定幅のステップが必要時、space属性設定すれば良い。単位はpx。設定しない場合、セルフ適応となる。finish-status属性設定すれば完了したステップ状態を変更できる。 '\n    },\n    samples2: {\n      label: '説明ありステップ',\n      description: '各ステップは対応となるステップ状態説明がある。'\n    },\n    samples3: {\n      label: 'アイコン付きステップ',\n      description: 'icon属性でアイコンを設定する'\n    },\n    samples4: {\n      label: '垂直ステップ',\n      description: 'direction属性をverticalに設定すればstepsは垂直モードになる'\n    },\n    samples5: {\n      row1column2: '各stepの間隔、記入しない場合、間隔をセルフ適応となる。パーセンテージをサポート',\n      row2column2: '方向表示',\n      row3column2: 'カレント活性化ステップを設定',\n      row4column2: 'カレントステップの状態を設定',\n      row5column2: '完了ステップの状態を設定',\n      row6column2: 'タイトル説明中央寄せ',\n      row7column2: 'コンポーネントセンタリング表示'\n    },\n    samples6: {\n      row1column2: 'タイトル',\n      row2column2: 'アイコン',\n      row3column2: 'カレントステップの状態を設定、設定しない場合、stepsで状態を確認'\n    },\n    samples7: {\n      row1column2: '内容',\n      row2column2: 'タイトル'\n    }\n  },\n  rateDemo: {\n    label: 'Rate 採点',\n    description: 'ボタン、アイコンの横に現れた数字又は状態マーク。',\n    samples1: {\n      label: '基本使い方',\n      description: '点数は3つのレベルに分けられる。色を利用し、点数と感情傾向を等級付けさせる(既定の状況下では色を区別しない)。3つのレベルに対応となる色はcolors属性で設定'\n    },\n    samples2: {\n      label: '補助文字',\n      description: 'コンポーネントにshow-text属性を設定すれば右側に補助文字が表示される。textsを設定すれば各点数値対応となる補助文字を指定できる。textsは配列であり、長さは最大値maxにイコールすべき。'\n    },\n    samples3: {\n      label: 'その他 icon',\n      description: 'icon-classes属性を設定すれば3つ異なる小節のアイコンをカスタマイズ対応できる。void-icon-classは未选択時のアイコンクラス名を指定。'\n    },\n    samples4: {\n      label: '読み取り専用',\n      description: 'disabled属性を設定してコンポーネントは読み取り専用となる。小数点数値サポート。その時show-textを設定した場合、右側に現在の点数値が表示される。text-templateを表示テンプレートとして提供でき、テンプレートが{value}文字列が含まれ、{value}が点数値に分析される。'\n    },\n    samples5: {\n      row1column2: '最大点数値',\n      row2column2: '読み取り専用であるか',\n      row3column2: '半選を許すか',\n      row4column2: '低い点数と中等点数の限界値、値自体が低い点数に分類される',\n      row5column2: '高い点数と中等点数の限界値、値自体が高い点数に分類される',\n      row6column2: 'iconの色配列、計3つ元素、三つ小節対応となる色である',\n      row7column2: '未選択iconの色',\n      row8column2: '読み取り専用時未選択iconの色',\n      row9column2: 'iconのクラス名配列、計3つ元素、三つ小節対応となるクラス名である',\n      row10column2: '未選択iconのクラス名',\n      row11column2: '読み取り専用時未選択iconのクラス名',\n      row12column2: '補助文字を表示するか',\n      row13column2: '補助文字の色',\n      row14column2: '補助文字配列',\n      row15column2: '読み取り専用時の補助文字テンプレート'\n    },\n    samples6: {\n      row1column2: '点数値チェンジ後にトリガー',\n      row1column3: 'チェンジ後の点数値'\n    }\n  },\n  pinDemo: {\n    label: 'Pin ピン',\n    description: 'ピンを使い、内容をスクリーンに固定でき、ページのスクロールによりスクロールしない。サイドメニュー等によく使われる。ブラウザウィンドウの高さを調整で効果を確認できる',\n    samples1: {\n      label: '基本使い方',\n      description: '利用簡単、要素非表示時、直接に最先端部に固定する。固定状態がチェンジ時、changeイベントがトリガー。'\n    },\n    samples2: {\n      label: 'オフセット',\n      description: 'offset-top又はoffset-bottomを設定すれば、一定の距離をスクロールしたら再固定できる。'\n    },\n    samples3: {\n      label: '底部に固定',\n      description: 'スクリーン下に固定。注意点、offset-topとoffset-bottomを一つしか設定できない。二つとも設定した場合、offset-topになる。'\n    },\n    samples4: {\n      label: '終始固定',\n      description: 'fixed属性を設定すれば、終始一箇所に固定'\n    },\n    samples5: {\n      row1column2: '窓頂部まである指定オフセットに達したらトリガー',\n      row2column2: '窓底部まである指定オフセットに達したらトリガー',\n      row3column2: '終始一箇所に固定'\n    },\n    samples6: {\n      row1column2: '固定状態チェンジ時にトリガー',\n      row1column3: '固定状態(true/false)'\n    }\n  },\n  uploadDemo: {\n    label: 'Upload アップロード',\n    description: 'アップロードファイルをクリックまたはドラッグ。',\n    samples1: {\n      label: '基本使い方',\n      description: 'slotでカスタマイズしたアップロードボタンタイプと文字ヒントを渡せる。before-uploadでユーザーアップロードのフォーマットと大きさを制限できる'\n    },\n    samples2: {\n      label: '写真壁',\n      description: 'list-type属性をpicture-cardに設定。'\n    },\n    samples3: {\n      label: '画像リストサムネイル ',\n      description: 'list-type属性をpictureに設定。'\n    },\n    samples4: {\n      label: 'アップロードファイルリスト制御',\n      description: 'on-changeフック関数でリストを制御する'\n    },\n    samples5: {\n      label: 'ドラッグアップロード',\n      description: 'drag属性を設定すれば良い'\n    },\n    samples6: {\n      label: '手動アップロード',\n    },\n    samples7: {\n      row1column2: 'アップロードのアドレス',\n      row2column2: 'オプションパラメータ、アップロードのリクエストヘッダを設定する',\n      row3column2: 'オプションパラメータ、複数選択ファイルをサポートするか',\n      row4column2: 'オプションパラメータ、アップロード時付けた余分パラメーター',\n      row5column2: 'オプションパラメータ、アップロードのファイルフィールド名',\n      row6column2: 'cookie証書情報送信をサポート',\n      row7column2: 'アップロード済ファイルリストを表示するか',\n      row8column2: 'ドラッグアップロードを使用可にするか',\n      row9column2: 'オプションパラメータ、アップロードのファイルタイプを受取(thumbnail-modeモードでは本パラメータ無効)',\n      row10column2: 'オプションパラメータ、アップロード済ファイルリンク時のフックをクリックし、file.responseでサーバーからの戻りデータを取得できる',\n      row11column2: 'オプションパラメータ、ファイルリストはファイルを削除時のフック',\n      row12column2: 'オプションパラメータ、ファイルアップロード成功時のフック',\n      row13column2: 'オプションパラメータ、ファイルアップロード失敗時のフック',\n      row14column2: 'オプションパラメータ、ファイルアップロード時のフック',\n      row15column2: 'オプションパラメータ、ファイル状態チェンジ時のフック、ファイル追加、アップロード成功とアップロード失敗時に共呼出させる',\n      row16column2: 'オプションパラメータ、アップロードファイル之前的フック, パラメータはアップロードのファイルで、 戻り値はfalseまたはPromise、かつrejectされた場合、アップロードをストップ。',\n      row17column2: 'ファイルリストのタイプ',\n      row18column2: 'ファイルを選択後直にアップロードするか',\n      row19column2: 'アップロードのファイルリスト',\n      row20column2: 'デフォルトのアップロード行動を上書き、アップロードの実現をカスタマイズできる',\n      row21column2: '使用不可か',\n      row22column2: 'オプションパラメータ、最大アップロード数',\n    },\n    samples8: {\n      row1column2: 'アップロード済ファイルリストをクリア(本メソッドはbefore-uploadに呼出すのをサポートしない)'\n    }\n  },\n  colorDemo: {\n    label: 'ColorPicker 色セレクター',\n    description: '色選択用、多種フォーマットサポート。',\n    samples1: {\n      label: '基本使い方',\n      description: 'v-modelで変数をバインディング、文字列タイプで必要。'\n    },\n    samples2: {\n      label: '選択透明度',\n      description: 'ColorPickerは普通色をサポート、Alphaチャンネルの色もサポート、show-alpha属性で透明度の選択をサポートするかを制御できる。'\n    },\n    samples3: {\n      row1column2: '透明度選択をサポートするか',\n      row2column2: 'v-modelの色のフォーマットを書込む',\n      row2column5: 'hex(show-alphaはfalse)/rgb(show-alphaはtrue)',\n    },\n    samples4: {\n      row2column2: '使用不可状態か',\n      row2column5: 'false',\n    },\n    samples5: {\n      row1column2: 'バインディング値チェンジ時にトリガー',\n      row1column3: 'カレント値'\n    }\n  },\n  navMenuDemo: {\n    label: 'NavMenu ナビゲーションメニュー',\n    description: 'ウェブサイトにナビゲーション機能のメニューを提供する。',\n    samples1: {\n      label: 'トップ欄',\n      description: 'ナビゲーションメニューデフォルトは垂直モードとなる。 mode属性でナビゲーションメニューを水平モードへ変更できる。また、メニューにsubmenuコンポーネントで二次メニューを生成できる。theme属性でテーマ設定できる'\n    },\n    samples2: {\n      label: '横欄',\n      description: 'vue-menu-item-groupコンポーネントでメニューをグループ化できる。グループ名はtitle属性で直接設定、また名slotも設定できる。'\n    },\n    samples3: {\n      row1column2: 'モード',\n      row2column2: 'テーマ色',\n      row3column2: 'カレント活性化したメニューのindex',\n      row4column2: 'カレントオープンしたsubmenuのkey配列',\n      row5column2: '一つサブメニューの展開のみ保持するか',\n      row6column2: 'サブメニューオープンのトリガー方式(modeは horizontal時のみ有効)',\n      row7column2: 'vue-routerのモードを使用するか、本モード使用可にするなら、活性化ナビゲーション時indexをpathとしてパス遷移'\n    },\n    samples4: {\n      row1column2: 'メニュー活性化コールバック',\n      row1column3: 'index:メニューのindexを選択、indexPath:メニューのindex pathを選択',\n      row2column2: 'SubMenu展開したコールバック',\n      row2column3: 'index:オープンしたsubMenuのindex, indexPath:オープンしたsubMenuのindex path',\n      row3column2: 'SubMenuしまっておいたコールバック',\n      row3column3: 'index:しまっておいたsubMenuのindex, indexPath:しまっておいたsubMenuのindex path'\n    },\n    samples5: {\n      row1column2: '唯一マーク',\n    },\n    samples6: {\n      row1column2: '唯一マーク',\n      row2column2: 'Vue Routerパスオブジェクト',\n    },\n    samples7: {\n      row1column2: 'グループタイトル',\n    },\n    samples8: {\n      label: '折りたたむ',\n      description: '横欄は折りたたむことができます。'\n    },\n  },\n  listDemo: {\n    label: 'List リスト',\n    description: '似た元素情報に展示用。',\n    samples1: {\n      label: '基本使い方',\n      description: 'height属性でlist高さを設定、<vue-divider>コントロールでitem間の区切り線を追加'\n    },\n    samples2: {\n      row1column2: 'list高さ',\n      row2column2: '垂直スクロールをスクロール時のフック',\n      row3column2: 'デフォルト選択されたのitem index',\n      row4column2: 'デフォルト選択itemするか',\n      row5column2: 'バーチャルスクロールバーするか'\n    },\n    samples3: {\n      row1column2: 'itemを選択時のコールバック',\n      row1column3: '選択されたitem',\n    }\n  },\n  sortableDemo: {\n    label: 'Sortable ドラッグソート',\n    description: 'リスト又はグリッドに元素のソートをマウスで調整する。',\n    samples1: {\n      label: '基本使い方',\n      description: 'element属性でsortable容器を設定、例:\"div\"'\n    },\n    samples2: {\n      label: 'データバインディング',\n      description: 'データバインディング後ドラッグし、データはそれなりに変化する'\n    },\n    samples3: {\n      label: 'クローン',\n      description: 'optionsのgroupのpull属性を\"clone\"に設定すればクローンモードは使用可になる。同一容器内ではクローンできない'\n    },\n    samples4: {\n      row1column2: '一つドラッグ同期の配列をバインディング',\n      row2column2: 'コンポーネントのHTMLノードタイプをドラッグできる',\n      row3column2: 'sortableのclone選択項はtrue時のコールバック関数、クローンしようデータを返し、バインディングデータ時のみ有効',\n      row4column2: 'ドラッグ時のコールバック関数、バインディングデータ時のみ有効',\n      row5column2: 'sortableオブジェクトを初期化のオプション、下表を参照',\n    },\n    samples5: {\n      row1column2: '元素を一つの容器から別の容器へドラッグアンドドロップし、2つの容器は同じグループ名を持つ必要がある。下表を参照',\n      row2column2: '同一容器内に自由にソートできるか',\n      row3column2: '元素を数ミリ選択後ドラッグを開始できる',\n      row4column2: 'sortableを使用不可か',\n      row5column2: '容器にドラッグできるハンドルセレクター',\n      row6column2: '容器にドラッグできないハンドルセレクター',\n      row7column2: '元素ドラッグ時のスペース取りクラス名',\n      row8column2: '元素選択時のクラス名'\n    },\n    samples6: {\n      row1column2: 'グループ名',\n      row2column2: '容器から元素をドラッグできるか、\"clone\"はクローン元素となる',\n      row3column2: '容器へ元素をドラッグできるか'\n    },\n    samples7: {\n      row1column2: 'ドラッグスタートのコールバックイベント',\n      row2column2: '容器追加元素のコールバックイベント',\n      row3column2: '容器削除元素のコールバックイベント',\n      row4column2: '容器更新元素のコールバックイベント',\n      row5column2: 'ドラッグ完了のコールバックイベント',\n      row6column2: '元素選択されたコールバックイベント',\n      row7column2: '同一容器内元素ソートのコールバックイベント',\n      row8column2: 'ドラッグできないハンドルセレクターを選択された時のコールバックイベント',\n      row9column2: 'クローンのコールバックイベント',\n    }\n  },\n  tableDemo: {\n    label: 'Table テーブル',\n    description: '複数構造類似なデータに展示用、データにソート、フィルター、比較又は他のカスタマイズ操作できる。（1.6.4から削除、個別にインポート可能）',\n    samples1: {\n      label: '基本使い方',\n      description: 'vue-table元素にdataオブジェクト配列を注いだ後、vue-table-columnにprop属性でオブジェクトのキー名を対応すればデータを入力できるようになる。label属性でテーブルの列名を定義し、width属性で列幅を定義する；stripe属性をtrueにすればゼブラしわのテーブルを作成できる。デフォルトはfalse；border属性をtrueにすれば垂直方向の枠になる。デフォルトはfalse。'\n    },\n    samples2: {\n      label: '固定列',\n      description: '固定列はfixed属性が必要になる。 Boolean 値又はleft、rightを受取、左固定又は右固定となる。'\n    },\n    samples3: {\n      label: 'テンプレートカスタマイズ',\n      description: 'slot-scopeでrow、column、$index とstore(table 内部の状態管理)のデータを取得できる。他のコンポーネントと組み合わせで表示内容もカスタマイズできる'\n    },\n    samples4: {\n      label: '追加削除更新'\n    },\n    samples5: {\n      label: 'ソート',\n      description: 'テーブルのdefault-sort属性でデフォルトソート列とソート順序を設定。列にsortable属性を設定すれば本列に準じてソートできる'\n    },\n    samples6: {\n      label: 'フィルター',\n      description: '列にfilterable属性を設定すれば本列のフィルターを使用可になる。'\n    },\n    samples7: {\n      label: 'スタイルカスタマイズ',\n      description: 'tableのrow-class-name属性で行のスタイルを指定できる。table-columnのclass-name属性で列のスタイルを指定できる。table-columnのlabel-class-name属性でlabelのスタイルを指定できる'\n    },\n    samples8: {\n      label: '行展開',\n      description: 'type=\"expand\"とScoped slotを設定すれば行展開機能を使用可になる。vue-table-columnのテンプレートが展開された行の内容にレンダリングされ、展開された行アクセスできる属性はカスタマイズ列テンプレートを利用時の Scoped slot と同様。tableのexpand-class-name属性を設定すれば展開された行にスタイルを指定できる'\n    },\n    samples14: {\n      label: '単一選択',\n      description: 'highlight-current-row属性を設定すれば単一選択できるよになる。その後current-changeイベントでチェックオン時トリガーされるイベントを管理する。currentRow, oldCurrentRowを渡す'\n    },\n    samples15: {\n      label: '複数選択',\n      description: 'vue-table-column一つを手動で追加し、type属性をselectionに設定すれば複数選択できるよになる'\n    },\n    samples16: {\n      label: '合計',\n      description: 'show-footerをtrueにすればテーブルの下で合計行が表示される。'\n    },\n    samples17: {\n      label: '列表示',\n      description: ''\n    },\n    samples18: {\n      label: 'コンテキスト・メニュー',\n      description: ''\n    },\n    samples19: {\n      label: 'レージーロード',\n      description: ''\n    },\n    samples20: {\n      label: 'ソートフィルタ選択行位置',\n      description: 'ソートフィルタ選択行位置'\n    },\n    samples9: {\n      row1column2: '表示されたデータ',\n      row2column2: 'Tableの高さ、デフォルトは自動高さとする。',\n      row3column2: 'ゼブラしわtableであるか',\n      row4column2: '縦枠付きか',\n      row5column2: '列の幅は自動的に広げるか',\n      row6column2: 'テーブルヘッダーを表示するか',\n      row7column2: 'カレント行をハイライトにするか',\n      row8column2: '行のclassNameのコールバック関数、全ての行に固定したclassNameを文字列ても設定できる。',\n      row9column2: '空データ時に表示されたテキスト内容、slot=\"empty\"ても設定できる',\n      row10column2: '全ての行をデフォルトで展開するか 、type=\"expand\"のColumnのみ有効',\n      row11column2: '展開された行のclassNameのコールバック関数、全ての行に固定したclassNameを文字列ても設定できる。type=\"expand\"のColumnのみ有効',\n      row12column2: 'デフォルトソート列のpropと順序。prop属性はデフォルトのソート列を指定し、order属性デフォルトソートの順序を指定する',\n      row12column5: 'propのみ設定し、order設定しない場合、デフォルト順序はascendingとなる',\n      row13column2: 'tooltip effect 属性',\n      row14column2: 'テーブルの下に合計行を表示するか',\n      row15column2: '合計行一列目のテキスト',\n      row16column2: 'カスタマイズした合計計算方法',\n      row17column2: 'DOMレージーロードモード, heightが設定した場合有効',\n      row18column2: 'マウスオーバー行をハイライトにするか',\n      row19column2: 'フィルター後に最初の行を自動的にハイライトする',\n      row20column2: 'ソート後に最初の行を自動的にハイライトする'\n    },\n    samples10: {\n      row1column2: 'ユーザーはデータ行のCheckboxを手動でチェック時にトリガーされたイベント',\n      row2column2: 'ユーザーはCheckboxを手動でフルチェック時にトリガーされたイベント',\n      row3column2: '選択項目がチェンジされた時に本イベントがトリガーされる',\n      row4column2: 'セルがhoverされた時に本イベントがトリガーされる',\n      row5column2: 'セルがhoverアウト時に本イベントがトリガーされる',\n      row6column2: 'あるセルがクリックされた時に本イベントがトリガーされる',\n      row7column2: 'あるセルがダブルクリックされた時に本イベントがトリガーされる',\n      row8column2: 'ある行がクリックされた時に本イベントがトリガーされる',\n      row9column2: 'ある行が右クリックされた時に本イベントがトリガーされる',\n      row10column2: 'ある行がダブルクリックされた時に本イベントがトリガーされる',\n      row11column2: 'ある列のヘッダーがクリックされた時に本イベントがトリガーされる',\n      row12column2: 'ヘッダードラッグして列幅がチェンジされた時に本イベントがトリガーされる',\n      row13column2: 'テーブルのソート条件がチェンジされた時に本イベントがトリガーされる',\n      row14column2: 'テーブルのフィルター条件がチェンジされた時に本イベントがトリガーされる。パラメータの値オブジェクトである。オブジェクトのkeyはcolumnのcolumnKeyである。対応となるvalueはユーザー選択したフィルター条件の配列である',\n      row15column2: 'テーブルのカレント行がチェンジされた時に本イベントがトリガーされる。カレント行をハイライトしたい場合、テーブルのhighlight-current-row属性をオンにてください',\n      row16column2: 'ある行展開又はクローズ時に本イベントがトリガーされる',\n      row17column2: '上部にスクロール時にトリガーされたイベント',\n      row18column2: '下部にスクロール時にトリガーされたイベント',\n      row19column2: '左部にスクロール時にトリガーされたイベント',\n      row20column2: '右部にスクロール時にトリガーされたイベント',\n    },\n    samples11: {\n      row11column2: '複数選択テーブル用、選択行',\n      row1column2: '複数選択テーブル用、ユーザー選択をクリア',\n      row2column2: '複数選択テーブル用、切换某一行的选中状態',\n      row3column2: '単一選択テーブル用、ある行を選択行に設定',\n      row4column2: 'コンテキスト・メニューの表示を変更する',\n      row5column2: 'カラムをフィルター',\n      row6column2: '複数のカラムをソート',\n      row7column2: 'データ出力へcsvファイル',\n      row7column3: 'params(Object): fileName ファイル名，デフォルトはtable.csv; original 元データですか，デフォルトは true',\n      row8column2: '単一選択テーブル用、選択行',\n      row9column2: 'すべてのフィルタをリセットする',\n      row10column2: 'すべての並べ替えをリセット',\n      row12column2: 'ユーザー設定のエクスポート（ソート、フィルタ、列表示など）',\n      row13column2: 'ユーザー設定をインポートする'\n    },\n    samples12: {\n      row1column2: 'テンプレートカスタマイズ',\n      row2column2: 'ヘッダーのテンプレートカスタマイズ'\n    },\n    samples13: {\n      row1column2: '対応列のタイプ。selectionを設定した場合、チェックボックスを表示; indexを設定し場合、該行のインデックスを表示(1から計算);expandを設定した場合、展開可ボタンを表示',\n      row3column2: '表示されたタイトル',\n      row4column2: '対応列データのフィールド名',\n      row5column2: '対応列の幅',\n      row6column2: '対応列の最小幅、tableが余った幅を割合でmin-widthを設定した列に割当てる',\n      row7column2: '列を左側又は右側に固定するか、trueは左側に固定とする',\n      row8column2: '列タイトルLabelエリアレンダリング用Function',\n      row9column2: '対応列はソートできるか。',\n      row10column2: 'データソート時に使用したメソッド、sortableはtrue時のみ有効。ブール値を返す要',\n      row11column2: '対応列はドラッグで幅を変更できるか(vue-tableにborder属性をtrueに設定要)',\n      row12column2: '内容フォマード化用',\n      row13column2: '内容が長すぎ時tooltipを表示',\n      row14column2: '寄せ方',\n      row15column2: 'ヘッダー寄せ方',\n      row16column2: '列のカスタマイズクラス名',\n      row17column2: 'カレント列タイトルのカスタマイズクラス名',\n      row18column2: 'type==selectionの列のみ有効、booleanを返してこの行の CheckBoxがチェックできるかを決定',\n      row19column2: '対応列はデータフィルターできるか',\n      row20column2: 'フィルターオプション，textとvalueの属性が必要です',\n      row22column2: 'データフィルター用のメソッド、booleanを返して表示するかを決定',\n      row23column2: '列表示',\n      row24column2: '合計のタイプ',\n      row25column2: '合計のヘッド',\n      row26column2: 'csvファイルのヘッド',\n      row27column2: '前の列に統合されるかどうか'\n    }\n  },\n  signatureDemo: {\n    label: 'Signature サイン',\n    description: 'マウスによるサイン、Base64データを生成する',\n    samples1: {\n      label: '基本使い方',\n      description: 'width、heightと背景色を設定する'\n    },\n    samples2: {\n      label: '画像base64データを取得する',\n      description: 'saveSignatureメソッドを呼び出し、ステータスとbase64のデータを返します。'\n    },\n    samples3: {\n      label: 'サインをクリアする',\n      description: 'clearSignatureメソッドを呼び出します。'\n    },\n    samples4: {\n      label: '元に戻す',\n      description: 'undoSignatureメソッドを呼び出します。'\n    },\n    samples5: {\n      label: 'ロック、ロック解除',\n      description: 'lockSignaturePad、openSignaturePad'\n    },\n    samples6: {\n      row1column2: '幅',\n      row2column2: '高さ',\n      row3column2: '画像フォーマット、サポートimage/png, image/jpeg, image/svg+xml',\n      row4column2: '詳細設定 {backgroundColor: string, penColor: string, onBegin：function, onEnd：function}',\n      row5column2: '外側のdivスタイル :custom-style=\"{border: \\'black 1px dotted\\'}\"',\n    },\n    samples7: {\n      row1column2: 'ステータスとbase64のデータを返します',\n      row2column2: '最後のストロークを元に戻す',\n      row3column2: 'サインをクリアする',\n      row4column2: 'ロック',\n      row5column2: 'ロック解除',\n      row6column2: 'base64データの読み取り',\n      row7column2: 'ブランクかどうか',\n    }\n  },\n  hotkeyDemo: {\n    label: 'Hotkey ホットキー',\n    description: 'ホットキーをバインドします',\n    samples1: {\n      label: '基本使い方',\n      description: 'v-hotkeyディレクティブをバインドします，デフォルトclickイベント、methodを指定することもできます'\n    }\n  },\n  mobileInstallDemo: {\n    label: '快速上手',\n    description: '',\n    detail1:{\n      label: '引入',\n      description: '在页面头部VIY PC版代码后引入 (<a href=\"https://spring21cn.github.io/vue-component/example/vue-mobile/lib.zip\">Get Plugin</a>)',\n    },\n  },\n  scrollviewDemo: {\n    label: 'ScrollView 滚动列表',\n    description: '用于模拟原生的滚动区域，并支持下拉刷新和加载更多',\n\t  defatltText:'默认',\n    customText:'自定义',\n    detail2:{\n      label: '使用指南',\n      description1: 'ScrollViewRefresh为组件库内置的下拉刷新组件，仅用于作为视觉展示，需在插槽refresh中使用，下拉刷新组件也可自定义',\n      description2: 'ScrollViewMore为组件库内置的加载更多组件，仅用于作为视觉展示，需在插槽more中使用，加载更多组件也可自定义',\n      description3: '组件容器需具有高度，否则会出现无法滚动或回弹问题。更多使用的常见问题请查看附录'\n    },\n\t  samples1: {\n        label: '基础用法',\n        description: '实现纵向滚动',\n\t  },\n\t  samples2: {\n        label: '横向滚动',\n        description: '',\n\t  },\n\t  samples3: {\n        label: '下拉刷新',\n        description: '',\n\t  },\n\t  samples4: {\n        label: '上拉加载',\n        description: '',\n\t  },\n\t  samples5: {\n        label: '粘性标题',\n        description: '',\n\t  },\n\t  samples6: {\n        label: '配合TabBar',\n        description: '',\n\t  },\n\t  samples7: {\n        label: '手动初始化',\n        description: '',\n\t  },\n\t  attrsinfo: {\n       row1column2: '水平滚动',\n\t     row2column2: '垂直滚动',\n\t     row3column2: '可回弹',\n\t     row4column2: '内容发生变化时自动重置滚动区域尺寸',\n\t     row5column2: '手动初始化',\n\t     row6column2: '触发到达底部的提前量',\n\t     row7column2: '初始化时立即触发是否到达底部检查',\n\t     row8column2: '触发滚动的角度值范围',\n\t     row9column2: '防止浏览器默认滚动',\n\t  },\n\t  refreshAttrs: {\n       row1column2: '距离顶部的距离，输入值仅为数字',\n\t     row2column2: '释放刷新的状态',\n\t     row3column2: '刷新状态',\n\t     row4column2: '下拉刷新文本内容',\n\t     row4column5: '下拉刷新',\n\t     row5column2: '释放刷新文本内容',\n\t     row5column5: '释放刷新',\n\t     row6column2: '刷新中的文本内容',\n\t     row6column5: '刷新中...',\n\t     row7column2: '进度条颜色'\n\t  },\n\t  moreAttrs: {\n       row1column2: '全部已加载',\n       row2column2: '加载中的文本内容',\n\t     row2column5: '更多加载中...',\n\t     row3column2: '全部已加载的文本内容',\n\t     row3column5: '全部已加载',\n\t  },\n\t  slotInfo: {\n      default: '滚动区域内容槽。当内容更改时，需要调用reflowScroller来重置滚动区域。具体请参阅reflowScroller refresh。',\n      refresh: '下拉刷新组件槽，您可以使用slot-scoped来获得相关的滚动状态（当槽作用域不兼容时，滚动状态也可以通过事件动态设置），如下所示：',\n\t    more: '更多加载组件槽，通过实际加载情况，在事件中改变isFinished的值。默认为false。',\n\t  },\n    eventInfo: {\n      row1column2: '距左侧距离，输入值仅为数字',\n      row2column2: '距顶部距离，输入值仅为数字',\n      detail1: '参数说明',\n      detail2: '释放刷新事件',\n      detail3: '刷新事件',\n      detail4: '加载结束事件',\n    },\n    methodInfo: {\n      row1column2: '距左侧距离，输入值仅为数字',\n      row2column2: '距顶部距离，输入值仅为数字',\n      row3column2: '使用动画',\n      detail1: '初始化滚动区域。（当manual-init被设置为true时使用。）',\n      detail2: '重置滚动区域，需要在常规滚动区域的内容发生更改后调用该区域。',\n      detail3: '滚动到指定位置，以下为参数说明：',\n      detail4: '获取滚动位置，其返回对象为 {left: number, top: number}',\n      detail5: '触发下拉刷新方法',\n      detail6: '结束下拉刷新方法，，示例代码：',\n      detail7: '触发触底事件，实现上拉加载方法，示例代码：',\n      detail8: '结束上拉加载方法，示例代码：',\n    },\n  },\n  actionsheetDemo: {\n    label: 'ActionSheet 动作面板',\n    description: '',\n\t  defatltText:'默认',\n    customText:'自定义',\n    detail1:{\n      label: '介绍',\n      description: '底部弹起的模态面板，包含与当前情境相关的多个选项。'\n    },\n\t  attrsInfo: {\n      row1column2: '是否显示动作面板',\n\t    row2column2: '面板选项列表',\n\t    row3column2: '顶部标题',\n\t    row4column2: '取消按钮文字',\n\t    row5column2: '选项上方的描述信息',\n\t    row6column2: '关闭图标名称或图片链接',\n\t    row7column2: '动画时长，单位秒',\n\t    row8column2: '是否显示圆角',\n\t    row9column2: '是否显示遮罩层',\n\t    row10column2: '是否锁定背景滚动',\n\t    row11column2: '是否在显示弹层时才渲染节点',\n\t    row12column2: '是否在页面回退时自动关闭',\n\t    row13column2: '是否在点击选项后关闭',\n\t    row14column2: '是否在点击遮罩层后关闭',\n\t    row15column2: '是否开启底部安全区适配',\n\t    row16column2: '指定挂载的节点',\n\t  },\n\t   actionsInfo: {\n      description: 'actions 属性是由对象构成的数组，数组中的每个对象配置一列，对象可以包含以下值：',\n      row1column2: '标题',\n\t    row2column2: '二级标题',\n\t    row3column2: '选项文字颜色',\n\t    row4column2: '为对应列添加额外的 class',\n\t    row5column2: '是否为加载状态',\n\t    row6column2: '是否为禁用状态',\n\t  },\n\t  eventInfo: {\n      row1column2: '点击选项时触发，禁用或加载状态下不会触发',\n\t    row2column2: '点击取消按钮时触发',\n\t    row3column2: '打开面板时触发',\n\t    row4column2: '关闭面板时触发',\n\t    row5column2: '打开面板且动画结束后触发',\n\t    row6column2: '关闭面板且动画结束后触发',\n\t    row7column2: '点击遮罩层时触发',\n\t  },\n  },\n  navbarDemo: {\n    label: 'NavBar 导航栏',\n    description: '',\n\t  defatltText:'默认',\n\t  customText:'自定义',\n\t  samples1: {\n        label: '基础用法',\n        description: '',\n\t  },\n\t  samples2: {\n        label: '插槽的使用',\n        description: '使用插槽，通过插槽自定义导航栏两侧的内容',\n\t  },\n\t  attrsInfo: {\n       row1column2: '标题',\n\t     row2column2: '左侧文案',\n\t     row3column2: '右侧文案',\n\t     row4column2: '是否显示左侧箭头',\n\t     row5column2: '是否显示下边框',\n\t     row6column2: '是否固定在顶部',\n\t     row7column2: '固定顶部时，是否在标签位置生成一个等高的占位元素',\n\t     row8column2: '元素 z-index',\n\t  },\n\t   slotInfo: {\n       row1column2: '自定义标题',\n\t     row2column2: '自定义左侧区域内容',\n\t     row3column2: '自定义右侧区域内容'\n\t  },\n\t  eventInfo: {\n       row1column2: '点击左侧按钮时触发',\n\t     row2column2: '点击右侧按钮时触发'\n\t  },\n  },\n  tabbarDemo: {\n    label: 'TabBar 标签栏',\n    description: '',\n\t  defatltText:'默认',\n\t  customText:'自定义',\n\t  samples1: {\n        label: '基础用法',\n        description: '',\n\t  },\n\t  samples2: {\n        label: '通过名称匹配',\n        description: '',\n\t  },\n\t  samples3: {\n        label: '微标提示',\n        description: '',\n\t  },\n\t  samples4: {\n        label: '自定义图标',\n        description: '通过icon插槽自定义图标，可以通过 slot-scope 判断标签是否选中',\n\t  },\n\t  samples5: {\n        label: '自定义颜色+监听切换事件用法',\n        description: '',\n\t  },\n\t  samples6: {\n        label: '路由模式',\n        description: '用于搭配vue-router使用。路由模式下会匹配页面路径和标签的to属性，并自动选中对应的标签',\n\t  },\n\t  attrsInfo: {\n       row1column2: '当前选中标签的名称或索引值',\n\t     row2column2: '是否固定在底部',\n\t     row3column2: '是否显示外边框',\n\t     row4column2: '元素 z-index',\n\t     row5column2: '选中标签的颜色',\n\t     row6column2: '未选中标签的颜色',\n\t     row7column2: '固定在底部时，是否在标签位置生成一个等高的占位元素',\n       row8column2: '是否开启底部安全区适配，设置 fixed 时默认开启',\n       row9column2: '是否开启路由模式'\n\t  },\n\t  eventInfo: {\n       row1column2: '切换标签时触发',\n       row1column3: 'active: 当前选中标签的名称或索引值'\n\t  },\n\t  tabBarItemAttrsInfo: {\n       row1column2: '标签名称，作为匹配的标识符',\n       row1column5: '当前标签的索引值',\n\t     row2column2: '图标名称或图片链接',\n\t     row3column2: '是否显示图标右上角小红点',\n\t     row4column2: '图标右上角徽标的内容',\n\t     row5column2: '图标右上角徽标的内容（已废弃，请使用 badge 属性）',\n\t     row6column2: '点击后跳转的链接地址',\n\t     row7column2: '点击后跳转的目标路由对象，同 vue-router 的 to 属性',\n\t     row8column2: '是否在跳转时替换当前页面历史',\n\t  },\n\t  tabBarItemSlotInfo: {\n       row1column2: '自定义图标,其中active表示是否为选中标签'\n\t  },\n  },\n  celllayoutDemo: {\n    label: 'CellLayout 宫格',\n    description: '',\n\t  defatltText:'默认',\n    customText:'自定义',\n    detail1:{\n      label: '介绍',\n      description: '宫格可以在水平方向上把页面分隔成等宽度的区块，用于展示内容或进行页面导航'\n    },\n\t  samples1: {\n        label: '基础用法',\n        description: '默认一行展示四个格子,有边框',\n\t  },\n\t  samples2: {\n        label: '自定义列数',\n        description: '可以通过column-num自定义列数',\n\t  },\n\t  samples3: {\n        label: '自定义显示内容',\n        description: '通过插槽可以自定义格子展示的内容',\n\t  },\n\t  samples4: {\n        label: '方形格子+自定义（间距+列数）+微标提示',\n        description: '',\n\t  },\n\t  samples5: {\n        label: '页面导航',\n        description: '使用url属性注意是跳转页面的路径',\n\t  },\n\t  attrsInfo: {\n       row1column2: '列数',\n\t     row2column2: '图标大小，默认单位为px',\n\t     row3column2: '格子之间的间距，默认单位为px',\n\t     row4column2: '是否显示边框',\n\t     row5column2: '是否将格子内容居中显示',\n\t     row6column2: '是否将格子固定为正方形',\n\t     row7column2: '是否开启格子点击反馈'\n\t  },\n\t  celllayoutitemAttrsInfo: {\n       row1column2: '文字',\n\t     row2column2: '图标名称或图片链接',\n\t     row3column2: '图标颜色',\n\t     row4column2: '是否显示图标右上角小红点',\n\t     row5column2: '图标右上角徽标的内容',\n\t     row6column2: '图标右上角徽标的内容（已废弃，请使用 badge 属性）',\n\t     row7column2: '点击后跳转的链接地址',\n\t     row8column2: '点击后跳转的目标路由对象，同 vue-router 的 to 属性',\n\t     row9column2: '是否在跳转时替换当前页面历史',\n\t  },\n\t  celllayoutitemEventInfo: {\n       row1column2: '点击格子时触发'\n    },\n    celllayoutitemSlotsInfo: {\n      row1column2: '自定义宫格的所有内容',\n      row2column2: '自定义图标',\n      row3column2: '自定义文字'\n   }\n  },\n  swipecellDemo: {\n    label: 'SwipeCell 滑动单元格',\n    description: '',\n\t  defatltText:'默认',\n\t  customText:'自定义',\n\t  samples1: {\n      label: '基础用法',\n      description: '',\n    },\n    samples2: {\n      label: '自定义内容',\n      description: '',\n    },\n    samples3: {\n      label: '异步关闭调用',\n      description: '通过传入before-close回调函数，可以自定义两侧滑动内容关闭时的行为',\n    },\n    attrsInfo: {\n      row1column2: '标识符，可以在事件参数中获取到',\n      row2column2: '指定左侧滑动区域宽度，单位为px',\n      row3column2: '指定右侧滑动区域宽度，单位为px',\n      row4column2: '关闭前的回调函数',\n      row5column2: '是否禁用滑动',\n      row6column2: '是否阻止滑动事件冒泡'\n    },\n     beforecloseAttrsInfo: {\n      description: 'beforeClose 的第一个参数为对象，对象中包含以下属性：',\n      row1column2: '标识符',\n      row2column2: '关闭时的点击位置 (left right cell outside)',\n      row3column2: 'SwipeCell 实例，用于调用实例方法'\n    },\n    slotsInfo: {\n      row1column2: '自定义显示内容',\n      row2column2: '左侧滑动内容',\n      row3column2: '右侧滑动内容'\n    },\n    eventInfo: {\n      row1column2: '点击时触发',\n      row1column3: '关闭时的点击位置 (left right cell outside)',\n      row2column2: '打开时触发',\n      row3column2: '关闭时触发'\n    },\n    methodInfo: {\n      description: '通过 ref 可以获取到 SwipeCell 实例并调用实例方法，详见组件实例方法',\n      row1column2: '打开单元格侧边栏,其参数 position: left | right',\n      row2column2: '收起单元格侧边栏',\n    }\n  },\n  texticonDemo: {\n    label: 'TextIcon 文本图标',\n    description: '',\n\t  defatltText:'默认',\n\t  customText:'自定义',\n\t  samples1: {\n      label: '基础用法',\n      description: '',\n    },\n    samples2: {\n        label: '颜色+字体大小设置',\n        description: '',\n    },\n    samples3: {\n        label: '文本排布方式(默认文本在下方)',\n        description: '',\n    },\n    samples4: {\n        label: '文本排布方式+文本边距设置（默认为2px）',\n        description: '',\n    },\n    attrsInfo: {\n       row1column2: '图标形状',\n       row2column2: '图标颜色',\n       row3column2: '图标大小',\n       row4column2: '是否有圆点标记',\n       row5column2: '角标内容',\n       row6column2: '文本名称',\n       row7column2: '文本字体颜色',\n       row8column2: '文本字体大小',\n       row9column2: '文本相对于图标的位置，分别有 \\'top\\' | \\'right\\' | \\'bottom\\' | \\'left\\'',\n       row10column2: '文本距离图标的边距'\n    },\n    eventInfo: {\n       row1column2: '点击时触发'\n    }\n  },\n  stepperDemo: {\n    label: 'Stepper 步进器',\n    description: '',\n\t  defatltText:'默认',\n    customText:'自定义',\n    detail1:{\n      label: '介绍',\n      description: '步进器由增加按钮、减少按钮和输入框组成，用于在一定范围内输入、调整数字'\n    },\n\t  samples1: {\n      label: '基础用法',\n      description: '',\n    },\n    samples2: {\n        label: '步长设置',\n        description: '通过step属性设置每次点击增加或减少按钮时变化的值，默认值为1，间隔设置为3',\n    },\n    samples3: {\n        label: '限制输入范围',\n        description: '通过min和max属性限制输入值的范围',\n    },\n    samples4: {\n        label: '限制输入整数',\n        description: '设置integer属性后，输入框将限制只能输入整数',\n    },\n    samples5: {\n        label: '禁用状态',\n        description: '通过设置disabled属性来禁用步进器，禁用状态下无法点击按钮或修改输入框',\n    },\n    samples6: {\n        label: '禁用输入框',\n        description: '通过设置disable-input属性来禁用输入框，此时按钮仍然可以点击',\n    },\n    samples7: {\n        label: '固定小数位数',\n        description: '通过设置decimal-length属性可以保留固定的小数位数',\n    },\n    samples8: {\n        label: '自定义大小',\n        description: '通过input-width属性设置输入框宽度，通过button-size属性设置按钮大小和输入框高度',\n    },\n    samples9: {\n        label: '异步变更',\n        description: '如果需要异步地修改输入框的值，可以设置async-change属性，并在change事件中手动修改value',\n    },\n    attrsInfo: {\n       row1column2: '当前输入的值',\n       row2column2: '最小值',\n       row3column2: '最大值',\n       row4column2: '初始值，当 v-model 为空时生效',\n       row5column2: '步长，每次点击时改变的值',\n       row6column2: '标识符，可以在change事件回调参数中获取',\n       row7column2: '输入框宽度，默认单位为px',\n       row8column2: '按钮大小以及输入框高度，默认单位为px',\n       row9column2: '固定显示的小数位数',\n       row10column2: '是否只允许输入整数',\n       row11column2: '是否禁用步进器',\n       row12column2: '是否禁用增加按钮',\n       row13column2: '是否禁用减少按钮',\n       row14column2: '是否禁用输入框',\n       row15column2: '是否开启异步变更，开启后需要手动控制输入值',\n       row16column2: '是否显示增加按钮',\n       row17column2: '是否显示减少按钮',\n       row18column2: '是否开启长按手势',\n    },\n    eventInfo: {\n       row1column2: '当绑定值变化时触发的事件',\n       row2column2: '点击不可用的按钮时触发',\n       row3column2: '点击增加按钮时触发',\n       row4column2: '点击减少按钮时触发',\n       row5column2: '输入框聚焦时触发',\n       row6column2: '输入框失焦时触发'\n    }\n  },\n  indexbarDemo: {\n    label: 'IndexBar 索引栏',\n    description: '',\n\t  defatltText:'默认',\n    customText:'自定义',\n    samples1: {\n      label: '基础用法',\n      description: '',\n    },\n    attrsInfo: {\n       row1column2: '索引字符列表',\n       row2column2: 'z-index 层级',\n       row3column2: '是否开启锚点自动吸顶',\n       row4column2: '锚点自动吸顶时与顶部的距离',\n       row5column2: '索引字符高亮颜色'\n    },\n    eventInfo: {\n       row1column2: '选中字符时触发',\n       row2column2: 'index: 索引字符',\n    },\n    indexanchorAttrsInfo: {\n      row1column2: '索引字符'\n    },\n    indexanchorSlotsInfo: {\n       row1column2: '锚点位置显示内容，默认为索引字符'\n    }\n  },\n  skeletonDemo: {\n    label: 'Skeleton 骨架屏',\n    description: '',\n\t  defatltText:'默认',\n\t  customText:'自定义',\n\t  samples1: {\n      label: '基础用法',\n      description: '',\n    },\n    samples2: {\n        label: '显示头像',\n        description: '通过avatar属性显示头像占位图',\n    },\n    samples3: {\n        label: '展示子组件',\n        description: '将loading属性设置成false表示内容加载完成，此时会隐藏占位图，并显示Skeleton的子组件,1秒后显示',\n    },\n    attrsInfo: {\n       row1column2: '段落占位图行数',\n       row2column2: '段落占位图宽度，可传数组来设置每一行的宽度',\n       row3column2: '是否显示标题占位图',\n       row4column2: '是否显示头像占位图',\n       row5column2: '是否显示骨架屏，传 false 时会展示子组件内容',\n       row6column2: '是否开启动画',\n       row7column2: '标题占位图宽度',\n       row8column2: '头像占位图大小',\n       row9column2: '头像占位图形状，可选值为square'\n    }\n  },\n  InputNumberDemo: {\n    label: 'NumberInput 数値入力欄',\n    sample1: {\n      label: '基础用法',\n      description: '要使用它，只需要使用v-model绑定变量即可，变量的初始值即为默认值，如果你只需要控制数值在某一范围内，可以设置min属性和max属性。'\n    },\n    sample2: {\n      label: '禁用状态',\n      description: 'disabled属性接受一个Boolean，设置为true即可禁用整个组件。'\n    },\n    sample3: {\n      label: '步数',\n      description: '允许定义递增递减的步数控制'\n    },\n    sample4: {\n      label: '严格步数',\n      description: 'step-strictly属性接受一个Boolean。如果这个属性被设置为true，则只能输入步数的倍数。'\n    },\n    sample5: {\n      label: '空值',\n      description: '当v-model绑定的值是undefined时，显示空值。'\n    },\n    sample6: {\n      label: '精度',\n      description: '设置 precision 属性可以控制数值精度，接收一个 Number。precision 的值必须是一个非负整数，并且不能小于 step 的小数位数。'\n    },\n    sample7: {\n      label: '尺寸',\n      description: '额外提供了 large、small、mini 三种尺寸的数字输入框'\n    },\n    sample8: {\n      label: '是否使用控制按钮',\n      description: 'controls为false时，隐藏控制按钮'\n    },\n    sample9: {\n      label: '按钮位置',\n      description: '设置 controls-position 属性可以控制按钮位置。'\n    },\n  }\n}\nmodule.exports = DemoLangJa;","﻿'use strict';\nvar DemoLangZh = {\n  app: {\n    body: {\n      label: {\n        name: '姓名',\n        sex: '性别',\n        age: '年龄',\n      }\n    }\n  },\n  main: {\n    title1: '开发指南',\n    title2: '组件列表',\n    title3: '综合示例',\n    title4: '问题反馈',\n    title5: '拓展组件',\n    title6: 'Gantt 甘特图',\n    title7: 'Charts 图表',\n    title8: 'Excel 导入导出',\n    title9: '移动端组件',\n    title10: 'Pic Marker 图片标记',\n    radiolabel1: '中',\n    radiolabel2: '日',\n    radiolabel3: 'EN',\n    code: '代码',\n    line1: '网站快速成型工具',\n    line21: '只为守护世界和平!',\n    line22: '只为让你少加班!',\n    line23: '只为成就这样的你: ',\n    line24: '产品设计师',\n    line25: '交互设计师',\n    line26: '视觉设计师',\n    line27: '产品经理',\n    line28: '前端工程师',\n    table: {\n      method: '方法名',\n      description: '概述',\n      usage: '用法',\n      parameters: '参数',\n      type: '类型',\n      acceptedValues: '可选值',\n      defaultValue: '默认值',\n      event: '事件',\n      name: '名称'\n    }\n  },\n  installDemo: {\n    label: '快速上手',\n    samples1: {\n      label: '安装',\n      description: '在页面上引入 js 和 css 文件即可开始使用.'\n    },\n    samples6: {\n      label: 'npm 安装',\n      description: '使用 npm 的方式安装，它能更好地和 webpack 打包工具配合使用。'\n    },\n    samples2: {\n      description: '通过 vue 组件可以很容易地写出一个 Hello world 页面.'\n    },\n    samples3: {\n      description: '组件内封装的一些常用方法，注意：在&lttemplate&gt中使用VueUtil的方式为 $vu.函数名',\n      row1column2: '判断参数是否定义(undefined或null状态为未定义)',\n      row2column2: '判断参数是否为String类型',\n      row3column2: '判断参数是否为Number类型',\n      row4column2: '判断参数是否为Boolean类型',\n      row5column2: '判断参数是否为File类型',\n      row6column2: '判断参数是否为Object类型',\n      row7column2: '判断参数是否为Array类型',\n      row8column2: '判断参数是否为Function类型',\n      row9column2: '判断参数是否为Date类型',\n      row10column2: '判断参数是否为NodeList类型',\n      row11column2: '判断参数是否为Element类型',\n      row12column2: '判断参数是否为VNode类型',\n      row13column2: '参数转换为String类型并返回',\n      row14column2: '参数转换为Date类型并返回, 如果失败返回null',\n      row15column2: '将参数按指定日期格式转换为String类型并返回, 如果失败返回null',\n      row16column2: '将参数按指定日期格式转换为Date类型并返回, 如果失败返回null',\n      row17column2: '根据年月获取当月的天数, 失败返回null',\n      row18column2: '根据日期获取当月第一天是星期几, 失败返回null',\n      row19column2: '根据日期获取本周是第几周, 失败返回null',\n      row20column2: '根据类型返回指定日期的向前或向后日期, 如果失败返回null',\n      row21column2: '对包含length属性的对象进行循环, 类似forEach方法',\n      row22column2: '循环对象的可枚举属性',\n      row23column2: '去除参数的首尾空格并返回, 参数不为String时返回\"\"',\n      row24column2: '将来自一个或多个源对象中的值复制到一个目标对象, 只复制可枚举属性',\n      row25column2: '将来自一个或多个源数组中的值复制到一个目标数组',\n      row26column2: '对一个元素绑定事件',\n      row27column2: '对一个元素移除事件',\n      row28column2: '对一个元素绑定事件, 触发后移除该事件',\n      row29column2: '判断元素是否存在某一名称的class',\n      row30column2: '对元素追加某一名称的class',\n      row31column2: '对元素移除某一名称的class',\n      row32column2: '获取元素某一属性的style, 如果失败返回null',\n      row33column2: '设置元素某一属性的style',\n      row34column2: '根据名称获取Cookie, 如果失败返回null',\n      row35column2: '根据名称设置Cookie',\n      row36column2: '根据名称移除Cookie',\n      row37column2: '函数节流, 当调用时刻大于等于执行周期则执行该动作，然后进入下一个新周期, 默认16ms为一周期',\n      row38column2: '函数防抖, 当调用时刻大于等于执行周期则执行该动作，若在周期内又调用此动作则进入新一个周期, 默认16ms为一周期',\n      row39column2: '对一个元素绑定resize事件, 内置函数防抖',\n      row40column2: '对一个元素移除resize事件',\n      row41column2: 'DOM树上移除某个节点',\n      row42column2: 'DOM树上对某个节点插入一个子节点',\n      row43column2: '获取浏览器竖滚动条宽度',\n      row44column2: '对一个元素绑定接触屏幕时触发事件',\n      row45column2: '对一个元素绑定屏幕上移动时触发事件',\n      row46column2: '对一个元素绑定屏幕上移开时触发事件',\n      row47column2: '对一个元素移除接触屏幕时触发事件',\n      row48column2: '对一个元素移除屏幕上移动时触发事件',\n      row49column2: '对一个元素移除屏幕上移开时触发事件',\n      row50column2: '浏览器全屏, 类似F11效果',\n      row51column2: '获取系统信息',\n      row52column2: '设置显示的语言',\n      row53column2: '设置语言内容',\n      row54column2: 'VueUtil.config 是一个对象，包含 VueUtil 的全局配置。',\n      row55column2: '获取当前画面控件的最大zindex',\n      row56column2: '对一个元素绑定hover事件',\n      row57column2: '对一个元素移除hover事件',\n      row58column2: '将参数按指定数据格式转换为String类型并返回, 如果失败返回null',\n      row59column2: '深拷贝一个对象'\n    },\n    samples4: {\n      label: 'Vue 基础知识',\n      description: '强烈建议先学习下Vue基本用法和思想。',\n      row1column2: '事件绑定',\n      row2column2: '事件解除',\n      row3column2: '绑定只触发一次的事件',\n      row4column2: '判断是否存在class',\n      row5column2: '追加class',\n      row6column2: '移除class',\n      row7column2: '获取style值',\n      row8column2: '设置style值',\n      row9column2: '去除src开始和末尾的空格, 如src类型不为string则返回\"\"',\n      row10column2: '将src1, src2, src3...合并到dest中, 返回值为合并后的dest',\n      row11column2: '绑定元素尺寸变动时的事件',\n      row12column2: '移除元素尺寸变动时的事件',\n      row13column2: '将string按format转换为date型, 转换失败返回false, format默认为\"yyyy-MM-dd\"',\n      row14column2: '将date按format转换为string型, 转换失败返回\"\", format默认为\"yyyy-MM-dd\"',\n      row15column2: '判断src是否可以转换为date型, 返回true/false',\n      row16column2: '将src转换为date型, 失败返回null',\n      row17column2: '设置组件要显示的语言',\n      row18column2: '设置组件多语言(可参看\"I18n 国际化\")',\n      row19column2: '从DOM上移除node',\n      row20column2: '把node元素插入fatherNode元素的第position个位置',\n      row21column2: '把数组arr转换为Object型',\n      row22column2: '使页面全屏(效果类似F11, 必须使用事件触发)',\n      row23column2: '返回src的上一月',\n      row24column2: '返回src的下一月',\n    },\n    samples5: {\n      description: '异步读取.vue文件',\n    }\n  },\n  i18nDemo: {\n    label: 'I18n 国际化',\n    samples1: {\n      label: '基本用法',\n      description: '使用 VueUtil.setLocale() 来设置多语言, 使用 VueUtil.setLang() 来设置显示的语言, 在Vue组件内部可以使用 $t() 来获取多语言的值, 在Vue组件外部可以使用 Vue.t() 来获取多语言的值;'\n    },\n    samples2: {\n      label: '兼容 vue-i18n@5.x',\n      description: '兼容 vue-i18n@5.x，搭配使用能更方便地实现多语言切换。'\n    },\n    samples3: {\n      label: '兼容 vue-i18n@6.x +',\n      description: '默认不支持 6.x + 的 vue-i18n，你需要手动处理。'\n    }\n  },\n  ajaxDemo: {\n    label: '异步数据传输',\n    samples1: {\n      label: '基本用法',\n      description: '可以基于全局的Vue对象使用http, 也可以基于某个控件使用http.'\n    },\n    samples2: {\n      label: '支持的HTTP方法',\n      description: '请求API是按照REST风格设计的, 它提供了7种请求API'\n    },\n    samples3: {\n      row1column3: '请求的URL',\n      row2column3: '请求的HTTP方法, 例如：\"GET\", \"POST\"或其他HTTP方法',\n      row4column3: '请求的URL参数对象',\n      row6column3: '单位为毫秒的请求超时时间 (0 表示无超时时间)',\n      row7column3: '请求发送前的处理函数, 类似于jQuery的beforeSend函数',\n      row8column3: 'ProgressEvent回调处理函数',\n      row9column3: '表示跨域请求时是否需要使用凭证',\n      row10column3: '发送PUT, PATCH, DELETE请求时以HTTP POST的方式发送, 并设置请求头的X-HTTP-Method-Override',\n      row11column3: '将request body以application/x-www-form-urlencoded content type发送'\n    }\n  },\n  layoutDemo: {\n    label: 'Layout 布局',\n    description: '通过基础的 24 分栏, 迅速简便地创建布局.',\n    samples1: {\n      label: '基础布局',\n      description: '通过 row 和 col 组件, 并通过 col 组件的 span 属性我们就可以自由地组合布局.'\n    },\n    samples2: {\n      label: '分栏间隔',\n      description: 'row 组件 提供 gutter 属性来指定每一栏之间的间隔, 默认间隔为 0.'\n    },\n    samples3: {\n      label: '混合布局',\n      description: '通过基础的 1/24 分栏任意扩展组合形成较为复杂的混合布局.'\n    },\n    samples4: {\n      label: '对齐方式',\n      description: '将 type 属性赋值为 \\'flex\\', 可以启用 flex 布局, 并可通过 justify 属性来指定 start, center, end, space-between, space-around 其中的值来定义子元素的排版方式.'\n    },\n    samples5: {\n      label: '响应式布局',\n      description: '参照了 Bootstrap 的 响应式设计, 预设了四个响应尺寸：xs、sm、md 和 lg.'\n    },\n    samples6: {\n      row1column2: '栅格间隔',\n      row2column2: '布局模式, 可选 flex',\n      row3column2: 'flex 布局下的水平排列方式',\n      row4column2: 'flex 布局下的垂直排列方式'\n    },\n    samples7: {\n      row1column2: '栅格占据的列数',\n      row2column2: '栅格左侧的间隔格数',\n      row3column2: '栅格向右移动格数',\n      row4column2: '栅格向左移动格数',\n      row5column2: '\\'<768px\\' 响应式栅格数或者栅格属性对象',\n      row6column2: '\\'≥768px\\' 响应式栅格数或者栅格属性对象',\n      row7column2: '\\'≥992px\\' 响应式栅格数或者栅格属性对象',\n      row8column2: '\\'≥1200px\\' 响应式栅格数或者栅格属性对象',\n      row5column3: 'Number / Object (例如： {span: 4, offset: 4})',\n      row6column3: 'Number / Object (例如： {span: 4, offset: 4})',\n      row7column3: 'Number / Object (例如： {span: 4, offset: 4})',\n      row8column3: 'Number / Object (例如： {span: 4, offset: 4})'\n    }\n  },\n  iconDemo: {\n    label: 'Icon 图标',\n    description: '常用的图标集合',\n    samples1: {\n      label: '使用方法',\n      description: '直接通过设置类名为 vue-icon-iconName 来使用即可.'\n    },\n    samples2: {\n      label: '图标集合'\n    }\n  },\n  buttonDemo: {\n    label: 'Button 按钮',\n    description: '常用的操作按钮.',\n    defaultButton: '默认按钮',\n    mainButton: '主要按钮',\n    textButton: '文字按钮',\n    circleButton: '圆角按钮',\n    successButton: '成功按钮',\n    warningButton: '警告按钮',\n    dangerButton: '危险按钮',\n    infoButton: '信息按钮',\n    samples1: {\n      label: '基础用法',\n      description: 'Button 组件默认提供7种主题, 由type属性来定义, 默认为default.'\n    },\n    samples2: {\n      label: '有颜色倾向',\n      description: '设置了不同的type属性对应的样式.设置plain属性, 它接受一个Boolean.注意, 在该情况下, type虽然可以为text, 但是是没有意义的, 会显示为text button的样式.',\n      defaultLabel: '默认显示颜色',\n      hoverLabel: 'hover 显示颜色'\n    },\n    samples3: {\n      label: '禁用状态',\n      description: '设置disabled属性即可, 它接受一个Boolean, true为禁用.'\n    },\n    samples4: {\n      label: '图标按钮',\n      description: '设置icon属性即可, 也可以设置在文字右边的 icon , 只要使用i标签即可, 可以使用自定义图标.'\n    },\n    samples5: {\n      label: '按钮组',\n      description: '使用<vue-button-group>标签来嵌套你的按钮'\n    },\n    samples6: {\n      label: '加载中',\n      description: '设置loading属性为true即可.'\n    },\n    samples7: {\n      label: '不同尺寸',\n      description: '通过设置size属性来配置它们.'\n    },\n    samples8: {\n      row1column2: '尺寸',\n      row2column2: '类型',\n      row3column2: '是否圆角按钮',\n      row4column2: '是否朴素按钮',\n      row5column2: '是否加载中状态',\n      row6column2: '是否禁用状态',\n      row7column2: '图标',\n      row8column2: '自动获取焦点',\n      row9column2: '原生type属性'\n    }\n  },\n  inputDemo: {\n    label: 'Input 输入框',\n    description: '通过鼠标或键盘输入字符.',\n    defaultPlaceholder: '请输入内容',\n    selectPlaceholder: '请选择',\n    samples1: {\n      label: '基础用法'\n    },\n    samples2: {\n      label: '禁用状态',\n      description: '设置disabled属性即可, 它接受一个Boolean, true为禁用.'\n    },\n    samples3: {\n      label: '带icon的输入框',\n      description: '可以通过icon属性在input组件尾部增加显示图标, 可以通过on-icon-click钩子函数来在点击图标后执行需要的逻辑.'\n    },\n    samples4: {\n      label: '文本域',\n      description: '通过将type属性的值指定为textarea.文本域高度可通过rows属性控制, '\n    },\n    samples5: {\n      label: '可自适应文本高度的文本域',\n      description: '通过设置 autosize 属性可以使得文本域的高度能够根据文本内容自动进行调整, 并且 autosize 还可以设定为一个对象, 指定最小行数和最大行数.'\n    },\n    samples6: {\n      label: '复合型输入框',\n      description: '可前置或后置元素, 一般为标签或按钮.可通过slot来指定在input中前置或者后置内容.',\n      selectLabel1: '餐厅名',\n      selectLabel2: '订单号',\n      selectLabel3: '用户电话'\n    },\n    samples7: {\n      label: '尺寸',\n      description: '可通过size属性指定输入框的尺寸, 除了默认的大小外, 还提供了large、small和 mini三种尺寸.'\n    },\n    samples8: {\n      label: '带输入建议',\n      description: 'autocomplete是一个可带输入建议的输入框组件, fetch-suggestions是一个返回输入建议的方法属性, 如 querySearch(queryString, cb), 在该方法中你可以在你的输入建议数据准备好时通过cb(data)返回到 autocomplete组件中.',\n      label1: '激活即列出输入建议',\n      label2: '输入后匹配输入建议'\n    },\n    samples9: {\n      label: '自定义格式',\n      description: '设置cleave属性即可, 它接受一个Object.'\n    },\n    samples10: {\n      row1column2: '类型',\n      row2column2: '绑定值',\n      row3column2: '最大输入长度',\n      row4column2: '最小输入长度',\n      row5column2: '占位文本',\n      row6column2: '禁用',\n      row7column2: '输入框尺寸, 只对type!=\"textarea\"时有效',\n      row8column2: '输入框前部图标',\n      row9column2: '输入框尾部图标',\n      row10column2: '输入框行数, 只对type==\"textarea\"有效',\n      row11column2: '自定义格式, 只对type!=\"textarea\"有效, 更多格式请参考下表',\n      row12column2: '自适应内容高度, 只对type==\"textarea\"有效, 可传入对象, 如 {minRows: 2, maxRows: 6}',\n      row13column2: '原生属性, 自动补全',\n      row14column2: '原生属性',\n      row15column2: '原生属性, 是否只读',\n      row16column2: '原生属性, 设置最大值',\n      row17column2: '原生属性, 设置最小值',\n      row18column2: '原生属性, 设置输入字段的合法数字间隔',\n      row19column2: '控制是否能被用户缩放, 只对 type=\"textarea\" 有效',\n      row20column2: '自动获取焦点',\n      row21column2: '文本对齐',\n      row22column2: '原生属性, 所属的一个或多个表单的id',\n      row23column2: '点击 Input内的图标的钩子函数',\n      row24column2: '键盘弹出类型，仅在移动端上使用',\n\n    },\n    samples11: {\n      row1column2: '点击Input内的图标时触发',\n      row2column2: '在Input失去焦点时触发',\n      row3column2: '在Input获得焦点时触发',\n      row4column2: '在Input值改变时触发'\n    },\n    samples12: {\n      row1column2: '占位文本',\n      row2column2: '禁用',\n      row3column2: '必填值输入绑定值',\n      row4column2: '通过该参数指定自定义的输入建议列表项的组件名',\n      row5column2: '返回输入建议的方法, 仅当你的输入建议数据resolve时, 通过调用callback(data:[])来返回它',\n      row6column2: 'Autocomplete下拉列表的类名',\n      row7column2: '是否在输入框focus时显示建议列表',\n      row8column2: '点击图标的回调函数',\n      row9column2: '输入框尾部图标',\n      row10column2: '配置选项, 具体见下表'\n    },\n    samples13: {\n      row1column2: '指定选项的值为选项对象的某个属性值',\n      row2column2: '指定选项标签为选项对象的某个属性值'\n    },\n    samples14: {\n      row1column2: '点击选中建议项时触发'\n    },\n    samples15: {\n      row1column2: '是否信用卡格式,启用后会根据IIN自动检测信用卡类型。',\n      row2column2: '在信用卡类型改变后触发的一个回调函数。',\n      row3column2: '是否启用手机格式, 必须与phoneRegionCode一起使用',\n      row4column2: '各国地区的电话号码格式编码, 编码请参考 ISO 3166-1 alpha-2',\n      row5column2: '是否启用日期格式',\n      row6column2: '通过数组来定义日期格式',\n      row7column2: '是否启用数字格式',\n      row8column2: '分隔符分组样式',\n      row9column2: '设置几位整数部分',\n      row10column2: '设置几位小数部分',\n      row11column2: '小数点样式',\n      row12column2: '是否只能是正数',\n      row13column2: '根据数组值来格式化输入位数',\n      row14column2: '设置分隔符',\n      row15column2: '使用多个分隔符',\n      row16column2: '在开始处预设的值,它不能被删除或更改',\n      row17column2: '获取原值时预设的值是否去除',\n      row18column2: '是否只能输入数字(0~9)',\n      row19column2: '是否转换为大写字母',\n      row20column2: '是否转换为小写字母',\n      row21column2: '自定义格式'\n    },\n    samples16: {\n      row1column2: '手动聚焦'\n    }\n  },\n  dateDemo: {\n    label: 'DatePicker 日期选择器',\n    description: '用于选择或输入日期',\n    samples1: {\n      label: '基础用法',\n      description: '快捷选项需配置picker-options对象中的shortcuts, 禁用日期通过disabledDate设置.',\n      defaultLabel: '默认',\n      optionsLabel: '带快捷选项',\n      defaultPlaceholder: '选择日期',\n      todayLabel: '今天',\n      yesterdayLabel: '昨天',\n      weekAgoLabel: '上周'\n    },\n    samples2: {\n      label: '其他日期单位',\n      description: '基本单位由type属性指定',\n      weekLabel: '周',\n      weekPlaceholder: '选择周',\n      weekFormat: 'yyyy 第 WW 周',\n      monthLabel: '月',\n      monthPlaceholder: '选择月',\n      yearLabel: '年',\n      yearPlaceholder: '选择年'\n    },\n    samples3: {\n      label: '选择日期范围',\n      description: '可在一个选择器中便捷地选择一个时间范围.',\n      defaultLabel: '默认',\n      optionsLabel: '带快捷选项',\n      defaultPlaceholder: '选择日期范围',\n      lastWeekLabel: '最近一周',\n      lastMonthLabel: '最近一个月',\n      last3MonthLabel: '最近三个月'\n    },\n    samples4: {\n      row1column2: '是否只读(仅show-mobile-ui为false时可用)',\n      row2column2: '是否禁用',\n      row21column2: '文本框可输入(仅show-mobile-ui为false时可用)',\n      row3column2: '是否显示清除按钮',\n      row4column2: '输入框尺寸',\n      row5column2: '占位文本',\n      row51column2: '范围选择时开始日期的占位内容',\n      row52column2: '范围选择时结束日期的占位内容',\n      row6column2: '显示类型',\n      row7column2: '显示时间日期格式',\n      row7column4: '年:yyyy, 月:MM, 日:dd, 时:HH, 分:mm, 秒:ss, 周:WW（大写的W表示某年的第几周，注意区分）',\n      row8column2: '下拉框的对齐方式(仅show-mobile-ui为false时可用)',\n      row9column2: '下拉框的类名',\n      row10column2: '选择范围时的分隔符',\n      row11column2: '下拉框打开时默认选中的日期(仅show-mobile-ui为false时可用)',\n      row11column4: '会被new Date()解析',\n      row111column2: '可选，绑定值的格式。不指定则绑定值为 Date 对象',\n      row12column2: '当前选择器特有的选项, 参考下表'\n    },\n    samples5: {\n      row1column2: '设置快捷选项, 需要传入{text, onClick}对象用法参考demo或下表(仅show-mobile-ui为false时可用)',\n      row2column2: '设置禁用状态, 参数为当前日期, 要求返回 Boolean(仅show-mobile-ui为false时可用)',\n      row3column2: '周起始日',\n      row4column2: '选中日期后会执行的回调, 只有当 daterange 或 datetimerange 才生效(仅show-mobile-ui为false时可用)'\n    },\n    samples6: {\n      row1column2: '标题文本',\n      row2column2: '选中后的回调函数, 参数是 vm, 可通过触发 \"pick\" 事件设置选择器的值.例如 vm.$emit(\"pick\", new Date())'\n    },\n    samples7: {\n      row1column2: '当input的值改变时触发, 返回值和文本框一致',\n      row1column3: '格式化后的值'\n    },\n    samples8:{\n      row1column2: '是否显示移动端UI',\n      row2column2: '选择器当前选中值(通过v-model使用)',\n      row3column2: '输入框文字水平对齐方式(当show-mobile-ui为true时使用)',\n      row4column2: '选择器可选范围的最小日期(仅show-mobile-ui为true时可用)',\n      row4column3: '选择器可选范围的最大日期(仅show-mobile-ui为true时可用)',\n      row5column2: '组件左侧图标的设置(仅show-mobile-ui为true时可用)',\n      row5column3: '组件右侧内容清空图标的设置(仅show-mobile-ui为true时可用)',\n      row6column2: '周起始日(仅show-mobile-ui为true时可用)',\n      row7column2: '是否显示加载状态(仅show-mobile-ui为true时可用)',\n      row8column2: '顶部栏标题(仅show-mobile-ui为true时可用)',\n      row9column2: '开始日期的顶部栏标题(仅show-mobile-ui为true时可用)',\n      row9column3: '结束日期的顶部栏标题(仅show-mobile-ui为true时可用)',\n      row10column2: '确定按钮文本内容(仅show-mobile-ui为true时可用)',\n      row10column3: '取消按钮文本内容(仅show-mobile-ui为true时可用)',\n      row11column2: '是否显示顶部栏(仅show-mobile-ui为true时可用)',\n      row12column2: '选项高度(仅show-mobile-ui为true时可用)',\n      row13column2: '可见的选项个数(仅show-mobile-ui为true时可用)',\n      row14column2: '快速滑动时惯性滚动的时长，单位ms(仅show-mobile-ui为true时可用)',\n      row15column2: '选项格式化函数(仅show-mobile-ui为true时可用)',\n      row16column2: '点击确定按钮时触发(仅show-mobile-ui为true时可用)',\n      row16column3: '当前值,即(value, index)',\n      row17column2: '点击取消按钮时触发(仅show-mobile-ui为true时可用)',\n      row18column2: '选项过滤函数(仅show-mobile-ui为true时可用)',\n      row19column2: 'picker指定打开时的默认选中值(仅show-mobile-ui为true时可用)'\n    }\n  },\n  timeDemo: {\n    label: 'TimePicker 时间选择器',\n    description: '用于选择或输入时间.',\n    samples1: {\n      label: '基础用法',\n      description: '使用vue-time-select时, 通过star、end和step指定可选的起始时间、结束时间和步长; 使用vue-time-picker时, 通过selectableRange限制可选时间范围',\n      timelabel1: '固定时间点',\n      timelabel2: '任意时间点',\n      timePlaceholder1: '选择时间',\n      timePlaceholder2: '任意时间点',\n\n    },\n    samples2: {\n      label: '时间范围',\n      description: '使用vue-time-select时, 若先选择开始时间, 则结束时间内备选项的状态会随之改变; 使用vue-time-picker时, 添加is-range属性即可选择时间范围',\n      timelabel1: '固定时间范围',\n      timelabel2: '任意时间范围',\n      timePlaceholder1: '起始时间',\n      timePlaceholder2: '结束时间',\n      timePlaceholder3: '选择时间范围'\n\n    },\n    samples3: {\n      row1column2: '是否只读(仅show-mobile-ui为false时可用)',\n      row2column2: '是否禁用',\n      row21column2: '文本框可输入(仅show-mobile-ui为false时可用)',\n      row3column2: '是否显示清除按钮',\n      row4column2: '输入框尺寸',\n      row5column2: '占位文本',\n      row51column2: '范围选择时开始日期的占位内容',\n      row52column2: '范围选择时结束日期的占位内容',\n      row53column2: '是否为时间范围选择，仅对timepicker有效',\n      row54column2: '是否使用箭头进行时间选择(仅对timepicker有效，仅show-mobile-ui为false时可用)',\n      row55column2: '选择范围时的分隔符',\n      row56column2: '可选，绑定值的格式。不指定则绑定值为 Date 对象',\n      row6column2: '下拉框的对齐方式(仅show-mobile-ui为false时可用)',\n      row7column2: '下拉框的类名',\n      row8column2: '当前选择器特有的选项, 参考下表(仅show-mobile-ui为false时可用)',\n      row9column2: '自动获取焦点(仅show-mobile-ui为false时可用)',\n      row10column2: '最小的小时数(仅show-mobile-ui为true时可用)',\n      row11column2: '最大的小时数(仅show-mobile-ui为true时可用)',\n      row12column2: '最小分钟数(仅show-mobile-ui为true时可用)',\n      row13column2: '最大分钟数(仅show-mobile-ui为true时可用)',\n      row14column2: '最小秒数(仅show-mobile-ui为true时可用)',\n      row15column2: '最大秒数(仅show-mobile-ui为true时可用)'\n    },\n    samples4: {\n      row1column2: '开始时间',\n      row2column2: '结束时间',\n      row3column2: '间隔时间',\n      row4column2: '最小时间, 小于该时间的时间段将被禁用',\n      row5column2: '最大时间, 大于该时间的时间段将被禁用'\n    },\n    samples5: {\n      row1column2: '可选时间段, 例如\"18:30:00 - 20:30:00\"或者传入数组[\"09:30:00 - 12:00:00\", \"14:30:00 - 18:30:00\"]',\n      row2column2: '时间格式化',\n      row2column4: '时:HH, 分:mm, 秒:ss'\n    },\n    samples6: {\n      row1column2: '当 input 的值改变时触发, 返回值和文本框一致',\n      row1column3: '格式化后的值'\n    }\n  },\n  datetimeDemo: {\n    label: 'DateTimePicker 日期时间选择器',\n    description: '用于选择或输入日期时间',\n    samples1: {\n      label: '基础用法',\n      description: '通过设置type属性为datetime, 即可在同一个选择器里同时进行日期和时间的选择.快捷选项的使用方法与Date Picker相同.',\n      defaultLabel: '默认',\n      optionsLabel: '带快捷选项',\n      defaultPlaceholder: '选择日期时间',\n      todayLabel: '今天',\n      yesterdayLabel: '昨天',\n      weekAgoLabel: '上周'\n    },\n    samples2: {\n      label: '日期和时间范围',\n      description: '设置type为datetimerange即可选择日期和时间范围',\n      defaultLabel: '默认',\n      optionsLabel: '带快捷选项',\n      defaultPlaceholder: '选择时间范围',\n      lastWeekLabel: '最近一周',\n      lastMonthLabel: '最近一个月',\n      last3MonthLabel: '最近三个月'\n    },\n    samples3: {\n      row1column2: '是否只读(仅show-mobile-ui为false时可用)',\n      row2column2: '是否禁用',\n      row21column2: '文本框可输入(仅show-mobile-ui为false时可用)',\n      row3column2: '是否显示清除按钮',\n      row4column2: '输入框尺寸',\n      row5column2: '占位文本',\n      row51column2: '范围选择时开始日期的占位内容',\n      row52column2: '范围选择时结束日期的占位内容',\n      row54column2: '是否使用箭头进行时间选择(仅对timepicker有效,仅show-mobile-ui为false时可用)',\n      row56column2: '可选，绑定值的格式。不指定则绑定值为 Date 对象',\n      row6column2: '显示类型',\n      row7column2: '显示时间日期格式',\n      row7column4: '年:yyyy, 月:MM, 日:dd, 时:HH, 分:mm, 秒:ss, 周:WW',\n      row8column2: '下拉框的对齐方式(仅show-mobile-ui为false时可用)',\n      row9column2: '下拉框的类名',\n      row10column2: '选择范围时的分隔符',\n      row11column2: '当前选择器特有的选项, 参考下表'\n    },\n    samples4: {\n      row1column2: '设置快捷选项, 需要传入{text, onClick}对象用法参考demo或下表(仅show-mobile-ui为false时可用)',\n      row2column2: '设置禁用状态, 参数为当前日期, 要求返回 Boolean(仅show-mobile-ui为false时可用)'\n    },\n    samples5: {\n      row1column2: '标题文本',\n      row2column2: '选中后的回调函数, 参数是 vm, 可通过触发 \"pick\" 事件设置选择器的值.例如 vm.$emit(\"pick\", new Date())'\n    },\n    samples6: {\n      row1column2: '当input的值改变时触发, 返回值和文本框一致',\n      row1column3: '格式化后的值'\n    }\n  },\n  calendarDemo: {\n    label: 'Calendar 日历',\n    description: '用于查看或选择日期和事件.',\n    samples1: {\n      label: '基础用法',\n      description: '通过绑定events来绑定事件, 绑定数据为数组且每个元素需包含\"date\"属性, 通过dayclick事件可获取选择日的日期和事件'\n    },\n    samples2: {\n      row1column2: '要绑定的事件集合',\n      row2column2: '每天显示的事件条数, full calendar时有效',\n      row3column2: '点击\"+\"时是否显示更多事件, full calendar时有效',\n      row4column2: '是否使用full calendar',\n      row5column2: '日期的class集, full calendar时有效',\n      row6column2: '星期的class集, full calendar时有效',\n      row7column2: '自定义星期的label, full calendar时有效',\n      row8column2: '使日历不能切换月份, calendar时有效',\n      row9column2: '日历类型, calendar时有效'\n    },\n    samples3: {\n      row1column2: '点击日期时触发',\n      row2column2: '点击事件时触发, full calendar时有效',\n      row3column2: '点击\"+\"时触发, full calendar时有效'\n    },\n    samples4: {\n      label: 'Full Calendar',\n      description: '设置full属性即可',\n      row1column2: 'head部的左边内容, full calendar时有效',\n      row2column2: 'head部的右边内容, full calendar时有效, 有效时\"本月\"按钮不显示',\n    },\n    samples5: {\n      row1column2: '月历返回本月, full calendar时有效',\n      row2column2: '转到指定日期，calendar时有效',\n    },\n    samples7: {\n      label: '静态日历',\n      description: '设置fix-month属性',\n    }\n  },\n  imageDemo: {\n    label: 'Image 图片',\n    description: '图片容器，在保留原生img的特性下，支持懒加载，自定义占位、加载失败等',\n\t  defatltText:'默认',\n\t  customText:'自定义',\n      samples1: {\n        label: '基础用法',\n        description: '可通过fit确定图片如何适应到容器框，同原生 object-fit'\n\t  },\n\t  samples2: {\n        label: '占位内容',\n\t    loading :'加载中',\n        description: '通过 slot = placeholder 可自定义占位内容'\n\t  },\n\t  samples3: {\n        label: '加载失败',\n        description: '通过 slot = error 可自定义加载失败内容'\n\t  },\n\t  samples4: {\n        label: '懒加载',\n        description: '可通过lazy开启懒加载功能，当图片滚动到可视范围内才会加载。可通过scroll-container来设置滚动容器，若未定义，则为最近一个overflow值为auto或scroll的父元素。'\n\t  },\n\t  samples5: {\n        label: '大图预览',\n        description: '可通过 preview-src-list 开启预览大图的功能。如果设置了img-label，则src属性无效，只显示img-label的内容。',\n\t    imgLabelText: '点我预览大图'\n\t  },\n\t  samples6: {\n         row1column2: '图片源，同原生',\n\t     row2column2: '确定图片如何适应容器框，同原生 object-fit',\n\t     row3column2: '原生 alt',\n\t     row4column2: '原生 referrerPolicy',\n\t     row5column2: '是否开启懒加载',\n\t     row6column2: '开启懒加载后，监听 scroll 事件的容器',\n\t     row6column5: '最近一个 overflow 值为 auto 或 scroll 的父元素',\n\t     row7column2: '开启大图预览功能',\n\t     row8column2: '设置图片预览的 z-index',\n\t     row9column2: '如果设置了属性img-label，则显示该属性内容并且属性src无效',\n\t     row10column2: '如果该属性round为true，则图片圆形显示'\n    \n\t  },\n\t  samples7: {\n         row1column2: '图片加载成功触发',\n\t     row2column2: '图片加载失败触发'\t   \n\t  },\n\t  samples8: {\n         row1column2: '图片未加载的占位内容',\n\t     row2column2: '加载失败的内容'\t   \n\t  },\n\t  samples9: {\n        label: '显示文本',\n        description: '通过设置show-label属性来配置显示内容并隐藏图片'\n\t  }\n  },\n  imageviewerDemo: {\n    label: 'ImageViewer 图片',\n    description: '图片预览容器，在保留原生img的特性下，支持图片缩放，旋转，PC端点击左右按钮切换图片，移动端左右滑动切换图片等',\n\t  defatltText:'默认',\n\t  customText:'自定义',\n\t  samples1: {\n        label: '基础用法',\n        description: '可通过url-list将所需预览的图片传入。',\n\t  },\n\t  samples2: {\n        label: '默认打开第几张预览图',\n        description: '通过active-index属性默认打开图片预览的第几张图片',\n\t  },\n\t  samples3: {\n       row1column2: '预览图片数据',\n\t     row2column2: '设置图片预览的 z-index',\n\t     row3column2: '激活图片预览的角标值',\n\t     row4column2: '图片切换的触发函数',\n\t     row5column2: '关闭图片预览的触发函数',\n\t  }\n  },\n  checkboxDemo: {\n    label: 'Checkbox 多选框',\n    description: '在一组备选项中进行多选.',\n    samples1: {\n      label: '基础用法',\n      description: '在vue-checkbox元素中定义v-model绑定变量, 单一的checkbox中, 默认绑定变量的值会是Boolean, 选中为true.'\n    },\n    samples2: {\n      label: '禁用状态',\n      description: '设置disabled属性即可, 它接受一个Boolean, true为禁用.'\n    },\n    samples3: {\n      label: '多选框组',\n      description: 'checkbox-group元素能把多个checkbox管理为一组, 只需要在Group中使用v-model绑定Array类型的变量即可. vue-checkbox的label属性是该checkbox对应的值, 若该标签中无内容, 则该属性也充当checkbox按钮后的介绍. label与数组中的元素值相对应, 如果存在指定的值则为选中状态, 否则为不选中.'\n    },\n    samples4: {\n      label: 'indeterminate 状态',\n      description: 'indeterminate属性用以表示checkbox的不确定状态, 一般用于实现全选的效果'\n    },\n    samples5: {\n      label: '按钮样式',\n      description: '只需要把vue-checkbox元素换成vue-checkbox-button元素即可.'\n    },\n    samples6: {\n      row1column2: '选中状态的值(只有在checkbox-group或者绑定对象类型为array时有效)',\n      row2column2: '选中时的值',\n      row3column2: '没有选中时的值',\n      row4column2: '原生属性',\n      row5column2: '按钮禁用',\n      row6column2: '当前是否勾选',\n      row7column2: '设置indeterminate状态, 只负责样式控制'\n    },\n    samples7: {\n      row1column2: '按钮组尺寸',\n      row2column2: '按钮激活时的填充色和边框色',\n      row3column2: '按钮激活时的文本颜色',\n      row4column2: '可被勾选的最小数量',\n      row5column2: '可被勾选的最大数量'\n    },\n    samples8: {\n      row1column2: '当绑定值变化时触发的事件'\n    }\n  },\n  radioDemo: {\n    label: 'Radio 单选框',\n    description: '在一组Option中进行单选.',\n    samples1: {\n      label: '基础用法',\n      description: '选中的条件是绑定的变量值等于label中的值.只需要设置v-model绑定变量, 选中意味着变量的值为相应 Radio label属性的值, label可以是String或者Number.'\n    },\n    samples2: {\n      label: '禁用状态',\n      description: '设置disabled属性即可, 它接受一个Boolean, true为禁用.'\n    },\n    samples3: {\n      label: '单选框组',\n      description: '结合vue-radio-group元素和子元素vue-radio可以实现单选组, 在vue-radio-group中绑定v-model, 在vue-radio中设置好label即可, 无需再给每一个vue-radio绑定变量, '\n    },\n    samples4: {\n      label: '按钮样式',\n      description: '只需要把vue-radio元素换成vue-radio-button元素即可, '\n    },\n    samples5: {\n      row1column2: 'Radio的value',\n      row2column2: '是否禁用',\n      row3column2: '原生属性'\n    },\n    samples6: {\n      row1column2: '按钮组尺寸',\n      row2column2: '按钮激活时的填充色和边框色',\n      row3column2: '按钮激活时的文本颜色'\n    },\n    samples7: {\n      row1column2: '当绑定值变化时触发的事件',\n      row1column3: '选中的Radio label值'\n    },\n    samples8: {\n      row1column2: 'Radio的value',\n      row2column2: '是否禁用'\n    }\n  },\n  switchDemo: {\n    label: 'Switch 开关',\n    description: '表示两种相互对立的状态间的切换, 多用于触发「开/关」.',\n    samples1: {\n      label: '基础用法',\n      description: '绑定v-model到一个Boolean类型的变量.可以使用on-text属性与off-text属性来设置开关的文字描述, 使用on-color属性与off-color属性来设置开关的背景色'\n    },\n    samples2: {\n      label: '禁用状态',\n      description: '设置disabled属性即可, 它接受一个Boolean, true为禁用.'\n    },\n    samples3: {\n      row1column2: '是否禁用',\n      row2column2: 'switch的宽度(像素)',\n      row2column5: '58(有文字), 46(无文字)',\n      row3column2: 'switch打开时所显示图标的类名, 设置此项会忽略 on-text',\n      row4column2: 'switch关闭时所显示图标的类名, 设置此项会忽略 off-text',\n      row5column2: 'switch打开时的文字',\n      row6column2: 'switch关闭时的文字',\n      row7column2: 'switch打开时的背景色',\n      row8column2: 'switch关闭时的背景色',\n      row9column2: 'switch对应的name属性'\n    },\n    samples4: {\n      row1column2: 'switch状态发生变化时的回调函数'\n    }\n  },\n  dropdownDemo: {\n    label: 'Dropdown 下拉菜单',\n    description: '将动作或菜单折叠到下拉菜单中.',\n    samples1: {\n      label: '基础用法',\n      description: '通过组件slot来设置下拉触发的元素以及需要通过名称为dropdown的slot来设置下拉菜单.默认情况下下拉按钮只要hover即可, 无需点击也会显示下拉菜单.'\n    },\n    samples2: {\n      label: '触发对象',\n      description: '设置split-button属性来让触发下拉元素呈现为按钮组, 左边是功能按钮, 右边是触发下拉菜单的按钮, 设置为true即可.'\n    },\n    samples3: {\n      label: '触发方式',\n      description: '在trigger属性设置为click即可配置click激活.',\n      hoverLabel: 'hover 激活',\n      clickLabel: 'click 激活'\n    },\n    samples4: {\n      label: '菜单隐藏方式',\n      description: '下拉菜单默认在点击菜单项后会被隐藏, 将hide-on-click属性默认为false可以关闭此功能.'\n    },\n    samples5: {\n      label: '指令事件',\n      description: '点击菜单项后会触发事件, 用户可以通过相应的菜单项 key进行不同的操作.'\n    },\n    samples6: {\n      row1column2: '菜单按钮类型, 同Button组件(只在split-button为true的情况下有效)',\n      row2column2: '菜单按钮类型, 同Button组件(只在split-button为true的情况下有效)',\n      row3column2: '下拉触发元素呈现为按钮组',\n      row4column2: '菜单水平对齐方向',\n      row5column2: '触发下拉的行为',\n      row6column2: '是否在点击菜单项后隐藏菜单'\n    },\n    samples7: {\n      row1column2: 'split-button为true时, 点击左侧按钮的回调',\n      row2column2: '点击菜单项触发的事件回调',\n      row2column3: 'dropdown-item的指令',\n      row3column2: '下拉框出现/隐藏时触发',\n      row3column3: '出现为 true, 隐藏为 false'\n    },\n    samples8: {\n      row1column2: '指令',\n      row2column2: '禁用',\n      row3column2: '显示分割线',\n    }\n  },\n  selectDemo: {\n    label: 'Select 选择器',\n    description: '当选项过多时, 使用下拉菜单展示并选择内容.',\n    samples1: {\n      label: '基础用法',\n      description: 'v-model的值为当前被选中的vue-option的value属性值'\n    },\n    samples2: {\n      label: '有禁用选项',\n      description: '在vue-option中, 设定disabled值为 true, 即可禁用该选项'\n    },\n    samples3: {\n      label: '禁用状态',\n      description: '设置disabled属性即可, 它接受一个Boolean, true为禁用.'\n    },\n    samples4: {\n      label: '可清空单选',\n      description: '设置clearable属性, 则可将选择器清空.需要注意的是, clearable属性仅适用于单选'\n    },\n    samples5: {\n      label: '基础多选',\n      description: '设置multiple属性即可启用多选, 此时v-model的值为当前选中值所组成的数组'\n    },\n    samples6: {\n      label: '自定义模板',\n      description: '将自定义的HTML模板插入vue-option的slot中即可.'\n    },\n    samples7: {\n      label: '分组',\n      description: '使用vue-option-group对备选项进行分组, 它的label属性为分组名'\n    },\n    samples8: {\n      label: '搜索',\n      description: '为vue-select添加filterable属性即可启用搜索功能.默认情况下, Select会找出所有label属性包含输入值的选项.如果希望使用其他的搜索逻辑, 可以通过传入一个filter-method来实现.filter-method为一个Function, 它会在输入值发生变化时调用, 参数为当前输入值.'\n    },\n    samples9: {\n      label: '远程搜索',\n      description: '启用远程搜索, 需要将filterable和remote设置为true, 同时传入一个remote-method.remote-method为一个Function, 它会在输入值发生变化时调用, 参数为当前输入值.',\n      placeholderLabel: '请输入关键词'\n    },\n    samples10: {\n      label: '创建条目',\n      description: '使用allow-create属性即可通过在输入框中输入文字来创建新的条目.注意此时filterable必须为真.'\n    },\n    samples11: {\n      row1column2: '是否多选',\n      row2column2: '是否禁用',\n      row3column2: '输入框尺寸',\n      row4column2: '是否可以清空选项, 多选时可全选',\n      row5column2: '多选时用户最多可以选择的项目数, 为0则不限制',\n      row6column2: '原生属性',\n      row7column2: '占位文本',\n      row8column2: '是否可搜索',\n      row9column2: '是否允许用户创建新条目, 需配合filterable使用',\n      row10column2: '自定义搜索方法',\n      row11column2: '是否为远程搜索',\n      row12column2: '远程搜索方法',\n      row13column2: '是否正在从远程获取数据',\n      row14column2: '远程加载时显示的文字',\n      row15column2: '搜索条件无匹配时显示的文字',\n      row16column2: '选项为空时显示的文字',\n      row17column2: 'Select下拉框的类名',\n      row18column2: '在输入框按下回车, 选择第一个匹配项.需配合filterable或remote使用',\n      row19column2: '输入框自适应高度'\n    },\n    samples12: {\n      row1column2: '选中值发生变化时触发',\n      row1column3: '目前的选中值',\n      row2column2: '下拉框出现/隐藏时触发',\n      row2column3: '出现为 true, 隐藏为 false',\n      row3column2: '多选模式下移除tag时触发',\n      row3column3: '移除的tag值'\n    },\n    samples13: {\n      row1column2: '分组的组名',\n      row2column2: '是否将该分组下所有选项置为禁用'\n    },\n    samples14: {\n      row1column2: '选项的值',\n      row2column2: '选项的标签, 若不设置则默认与value相同',\n      row3column2: '是否禁用该选项'\n    }\n  },\n  cascaderDemo: {\n    label: 'Cascader 级联选择器',\n    description: '当一个数据集合有清晰的层级结构时, 可通过级联选择器逐级查看并选择.',\n    samples1: {\n      label: '基础用法',\n      description: '只需为Cascader的options属性指定选项数组即可渲染出一个级联选择器.通过expand-trigger可以定义展开子级菜单的触发方式. change事件的参数为 Cascader的绑定值：一个由各级菜单的值所组成的数组.',\n      clickLabel: 'click 触发子菜单',\n      hoverLabel: 'hover 触发子菜单'\n    },\n    samples2: {\n      label: '禁用选项',\n      description: 'Cascader会检查数据中每一项的disabled字段是否为true, 如果你的数据中表示禁用含义的字段名不为disabled, 可以通过props属性来指定'\n    },\n    samples3: {\n      label: '仅显示最后一级',\n      description: '属性show-all-levels定义了是否显示完整的路径, 将其赋值为false则仅显示最后一级'\n    },\n    samples4: {\n      label: '默认值',\n      description: '默认值通过数组的方式指定'\n    },\n    samples5: {\n      label: '选择即改变',\n      description: '将change-on-select赋值为true, 点击或移入选项即表示选中该项'\n    },\n    samples6: {\n      label: '动态加载次级选项',\n      description: '利用active-item-change事件, 可以在点击某个option时拉取该option下的子数据'\n    },\n    samples7: {\n      label: '可搜索',\n      description: '将filterable赋值为true即可打开搜索功能',\n      label1: '选择最后一级菜单的选项',\n      label2: '选择任意一级菜单的选项',\n      placeholderLabel: '试试搜索：component'\n    },\n    samples8: {\n      row1column2: '可选项数据源, 键名可通过props属性配置',\n      row2column2: '配置选项, 具体见下表',\n      row3column2: '选中项绑定值',\n      row4column2: '自定义浮层类名',\n      row5column2: '占位文本',\n      row6column2: '是否禁用',\n      row7column2: '是否支持清空选项',\n      row8column2: '次级菜单的展开方式',\n      row9column2: '输入框中是否显示选中值的完整路径',\n      row10column2: '是否可搜索选项',\n      row11column2: '搜索关键词输入的去抖延迟, 毫秒',\n      row12column2: '是否允许选择任意一级的选项',\n      row13column2: '尺寸'\n    },\n    samples9: {\n      row1column2: '指定选项的值为选项对象的某个属性值',\n      row2column2: '指定选项标签为选项对象的某个属性值',\n      row3column2: '指定选项的子选项为选项对象的某个属性值',\n      row4column2: '指定选项的禁用为选项对象的某个属性值',\n      row5column2: '可选参数, 筛选之前的钩子, 参数为输入的值, 若返回false或者返回Promise且被reject, 则停止筛选.'\n    },\n    samples10: {\n      row1column2: '当绑定值变化时触发的事件',\n      row1column3: '当前值',\n      row2column2: '当父级选项变化时触发的事件, 仅在change-on-select为false时可用',\n      row2column3: '各父级选项组成的数组'\n    },\n    samples11:{\n      row1column2: '自定义级选择器名称',\n      row2column2: '是否显示加载状态(仅移动端可用)',\n      row3column2: '顶部栏标题(仅移动端可用)',\n      row4column2: '确定按钮文本内容(仅移动端可用)',\n      row4column3: '取消按钮文本内容(仅移动端可用)',\n      row5column2: '顶部栏位置(仅移动端可用)',\n      row5column3: '是否显示顶部栏(仅移动端可用)',\n      row6column2: '是否允许应用HTML(仅移动端可用)',\n      row7column2: '选项高度(仅移动端可用)',\n      row8column2: '可见的选项个数(仅移动端可用)',\n      row9column2: '快速滑动时惯性滚动的时长，单位ms(仅移动端可用)',\n      row10column2: '点击确定按钮时触发(仅移动端可用)',\n      row10column3: '当前值,即(value, index)',\n      row11column2: '点击取消按钮时触发(仅移动端可用)',\n    }\n  },\n  formDemo: {\n    label: 'Form 表单',\n    description: '由输入框、选择器、单选框、多选框等控件组成, 用以收集、校验、提交数据.',\n    samples1: {\n      label: '基础表单',\n      description: '在Form组件中, 每一个表单域由一个Form-Item组件构成, 表单域中可以放置各种类型的表单控件, '\n    },\n    samples2: {\n      label: '行内表单',\n      description: '设置inline属性可以让表单域变为行内的表单域'\n    },\n    samples3: {\n      label: '对齐方式',\n      description: '通过设置label-position属性可以改变表单域标签的位置, 可选值为 top、left、right'\n    },\n    samples4: {\n      label: '表单验证',\n      description: 'Form组件提供了表单验证的功能, 只需要通过rule属性传入约定的验证规则, 并Form-Item的prop属性设置为需校验的字段名即可.'\n    },\n    samples5: {\n      label: '自定义校验规则',\n      description: '使用自定义规则来完成验证;'\n    },\n    samples6: {\n      label: '动态增减表单项',\n      description: '除了在Form组件上一次性传递所有的验证规则外还可以在单个的表单域上传递属性的验证规则'\n    },\n    samples7: {\n      row1column2: '表单数据对象',\n      row2column2: '表单验证规则',\n      row3column2: '行内表单模式',\n      row4column2: '表单域标签的位置',\n      row5column2: '表单域标签的宽度, 作为Form直接子元素的form-item会继承该值',\n      row6column2: '表单域标签的后缀(如\\':\\')',\n      row7column2: '是否显示校验错误信息',\n      row8column2: '表单域标签是否自适应',\n      row9column2: '错误信息是否以通知形式显示',\n      row10column2: '自定义消息,参数为错误信息'\n    },\n    samples8: {\n      row1column2: '对整个表单进行校验的方法',\n      row2column2: '对部分表单字段进行校验的方法',\n      row3column2: '对整个表单进行重置, 将所有字段值重置为初始值并移除校验结果',\n      row4column2: '将所有字段值的当前值设为初始值',\n      row5column2: '判断表单是否有值发生变动'\n    },\n    samples9: {\n      row1column2: '表单域model字段, 在使用validate、resetFields方法的情况下, 该属性是必填的',\n      row1column4: '传入Form组件的model中的字段',\n      row2column2: '标签文本',\n      row3column2: '表单域标签的的宽度, 例如\"50px\"',\n      row4column2: '是否必填, 如不设置, 则会根据校验规则自动生成',\n      row5column2: '表单验证规则',\n      row6column2: '表单域验证错误信息, 设置该值会使表单验证状态变为error, 并显示该错误信息',\n      row7column2: '是否显示校验错误信息'\n    },\n    samples10: {\n      row1column2: '是否必入',\n      row2column2: '入力长度, 只对number, String, Array有效',\n      row3column2: '最小长度, 只对number, String, Array有效',\n      row4column2: '最大长度, 只对number, String, Array有效',\n      row5column2: '校验类型'\n    }\n  },\n  paginationDemo: {\n    label: 'Pagination 分页',\n    description: '当数据量过多时, 使用分页分解数据.',\n    samples1: {\n      label: '基础用法',\n      description: '设置layout, 表示需要显示的内容, 用逗号分隔, 布局元素会依次显示.prev表示上一页, next为下一页, pager表示页码列表, page-size表示每页显示条目个数, total表示总条目数',\n      label1: '页数较少时的效果',\n      label2: '页数较多时的效果',\n      label3: '小型分页'\n    },\n    samples2: {\n      label: '附加功能',\n      description: '使用size-change和current-change事件来处理页码大小和当前页变动时候触发的事件.page-sizes接受一个整型数组, 数组元素为展示的选择每页显示个数的选项',\n      label1: '显示总数',\n      label2: '调整每页显示条数',\n      label3: '直接前往',\n      label4: '完整功能'\n    },\n    samples3: {\n      row1column2: '是否使用小型分页样式',\n      row2column2: '每页显示条目个数',\n      row3column2: '总条目数',\n      row4column2: '总页数, total和page-count设置任意一个就可以达到显示页码的功能；如果要支持page-sizes的更改, 则需要使用total属性',\n      row5column2: '当前页数, 支持sync修饰符',\n      row6column2: '组件布局, 子组件名用逗号分隔',\n      row7column2: '每页显示个数选择器的选项设置'\n    },\n    samples4: {\n      row1column2: 'pageSize改变时触发',\n      row1column3: '每页条数size',\n      row2column2: 'currentPage改变时触发',\n      row2column3: '当前页currentPage'\n    }\n  },\n  treeDemo: {\n    label: 'Tree 树形控件',\n    description: '用清晰的层级结构展示信息, 可展开或折叠.',\n    samples1: {\n      label: '基础用法',\n      description: '基础的树形结构展示.'\n    },\n    samples2: {\n      label: '选择和获取数据',\n      description: 'show-checkbox属性可以设置节点是否可被选择, lazy属性设置是否在点击时才进行数据获取, load属性可以设置加载子树数据的方法.'\n    },\n    samples3: {\n      label: '默认展开和默认选中',\n      description: '分别通过default-expanded-keys和default-checked-keys设置默认展开和默认选中的节点.需要注意的是, 此时必须设置node-key, 其值为节点数据中的一个字段名, 该字段在整棵树中是唯一的.'\n    },\n    samples4: {\n      label: '禁用状态',\n      description: '通过disabled设置禁用状态.'\n    },\n    samples5: {\n      label: '树节点的选择',\n      description: '获取和设置各有两种方式：通过node或通过key.如果需要通过key来获取或设置, 则必须设置node-key'\n    },\n    samples13: {\n      label: '高亮节点的选择',\n      description: '获取和设置各有两种方式：通过node或通过key.如果需要通过key来获取或设置, 则必须设置node-key'\n    },\n    samples6: {\n      label: '自定义节点内容',\n      description: '使用render-content指定渲染函数, 该函数返回需要的节点区内容即可.渲染函数的用法请参考Vue文档'\n    },\n    samples7: {\n      label: '节点过滤',\n      description: '调用Tree实例的filter方法, 参数为关键字.需要注意的是, 此时需要设置filter-node-method, 值为过滤函数.'\n    },\n    samples8: {\n      label: '手风琴模式',\n      description: '对于同一级的节点, 每次只能展开一个'\n    },\n    samples9: {\n      row1column2: '展示数据',\n      row2column2: '每个树节点用来作为唯一标识的属性, 整颗树应该是唯一的',\n      row3column2: '懒加载',\n      row4column2: '加载子树数据的方法, 当lazy为true时生效',\n      row5column2: '树节点的内容区的渲染Function',\n      row6column2: '是否高亮当前选中节点',\n      row7column2: '当前选中节点的key',\n      row8column2: '是否默认展开所有节点',\n      row9column2: '是否在点击节点的时候展开或者收缩节点',\n      row10column2: '展开子节点的时候是否自动展开父节点',\n      row11column2: '默认展开的节点的key的数组',\n      row12column2: '节点是否可被选择',\n      row13column2: '在显示复选框的情况下, 是否严格的遵循父子不互相关联的做法, ',\n      row14column2: '默认勾选的节点的key的数组',\n      row15column2: '对树节点进行筛选时执行的方法, 返回true表示这个节点可以显示, 返回false则表示这个节点会被隐藏',\n      row16column2: '是否每次只打开一个同级树节点展开',\n      row17column2: '相邻级节点间的水平缩进, 单位为像素',\n      row18column2: '配置选项, 具体看下表'\n    },\n    samples10: {\n      row1column2: '指定节点标签为节点对象的某个属性值',\n      row2column2: '指定子树为节点对象的某个属性值',\n      row3column2: '指定节点选择框是否禁用'\n    },\n    samples11: {\n      row1column2: '对树节点进行筛选操作',\n      row1column3: '接收一个任意类型的参数, 该参数会在filter-node-method中作为第一个参数',\n      row2column2: '若节点可被选择(即show-checkbox为true), 则返回目前被选中的节点所组成的数组',\n      row2column3: '(leafOnly, indeterminate)参数1：boolean类型的参数, 若为true则仅返回被选中的子节点, 默认值为 false。 参数2：boolean，是否包含半选中状态的节点，默认false',\n      row3column2: '设置目前勾选的节点, 使用此方法必须设置node-key属性',\n      row3column3: '(nodes)接收勾选节点数据的数组',\n      row4column2: '若节点可被选择(即show-checkbox为true), 则返回目前被选中的节点的 key所组成的数组',\n      row4column3: '(leafOnly, indeterminate) 参数1：boolean类型的参数, 若为 true则仅返回被选中的子节点的 keys, 默认值为 false。 参数2：boolean，是否包含半选中状态的节点，默认false',\n      row5column2: '通过keys设置目前勾选的节点, 使用此方法必须设置node-key属性',\n      row5column3: '(keys, leafOnly)接收两个参数, 1.勾选节点的key的数组 2.boolean类型的参数, 若为true则仅设置叶子节点的选中状态, 默认值为 false',\n      row6column2: '通过key/data设置某个节点的勾选状态, 使用此方法必须设置node-key属性',\n      row6column3: '(key/data, checked, deep)接收三个参数, 1.勾选节点的key或者data 2.boolean类型, 节点是否选中 3.boolean类型, 是否设置子节点 , 默认为 false',\n      row7column2: '若节点可被高亮(即highlight-current为true), 则返回目前被高亮的节点',\n      row8column2: '若节点可被高亮(即highlight-current为true), 则返回目前被高亮的节点的 key',\n      row9column2: '设置目前高亮的节点, 使用此方法必须设置node-key属性',\n      row10column2: '通过key设置目前高亮的节点, 使用此方法必须设置node-key属性',\n    },\n    samples12: {\n      row1column2: '节点被点击时的回调',\n      row1column3: '共三个参数, 依次为：传递给data属性的数组中该节点所对应的对象、节点对应的Node、节点组件本身.',\n      row2column2: '节点选中状态发生变化时的回调',\n      row2column3: '共三个参数, 依次为：传递给data属性的数组中该节点所对应的对象、节点本身是否被选中、节点的子树中是否有被选中的节点',\n      row3column2: '当前选中节点变化时触发的事件',\n      row3column3: '共两个参数, 依次为：当前节点的数据, 当前节点的Node对象',\n      row4column2: '节点被展开时触发的事件',\n      row4column3: '共三个参数, 依次为：传递给data属性的数组中该节点所对应的对象、节点对应的 Node、节点组件本身.',\n      row5column2: '节点被关闭时触发的事件',\n      row5column3: '共三个参数, 依次为：传递给data属性的数组中该节点所对应的对象、节点对应的 Node、节点组件本身.'\n    }\n  },\n  collapseDemo: {\n    label: 'Collapse 折叠面板',\n    description: '通过折叠面板收纳内容区域',\n    samples1: {\n      label: '基础用法',\n      description: '可同时展开多个面板, 面板之间不影响'\n    },\n    samples2: {\n      label: '手风琴效果',\n      description: '每次只能展开一个面板, 通过accordion属性来设置是否以手风琴模式显示'\n    },\n    samples3: {\n      label: '自定义面板标题',\n      description: '除了可以通过title属性以外, 还可以通过具名slot来实现自定义面板的标题内容, 以实现增加图标等效果.'\n    },\n    samples4: {\n      row1column2: '是否手风琴模式',\n      row2column2: '当前激活的面板(如果是手风琴模式, 绑定值类型需要为string, 否则为array)',\n      row3column2: '是否手风琴模式',\n    },\n    samples5: {\n      row1column2: '当前激活面板改变时触发(如果是手风琴模式, 参数 activeNames 类型为string, 否则为array)'\n    },\n    samples6: {\n      row1column2: '唯一标志符',\n      row2column2: '面板标题',\n      row3column2: '点击时是否可以展开或者收缩'\n    }\n  },\n  messageBoxDemo: {\n    label: 'MessageBox 弹框',\n    description: '模拟系统的消息提示框而实现的一套模态对话框组件.',\n    samples1: {\n      label: '消息提示',\n      description: '调用$alert方法即可打开消息提示, 它模拟了系统的alert, '\n    },\n    samples2: {\n      label: '确认消息',\n      description: '调用$confirm方法即可打开消息提示, 它模拟了系统的confirm.'\n    },\n    samples3: {\n      label: '自定义',\n      description: '可自定义配置不同内容.'\n    },\n    samples4: {\n      row1column2: 'MessageBox标题',\n      row2column2: 'MessageBox消息正文内容',\n      row3column2: '消息类型, 用于显示图标',\n      row4column2: 'MessageBox的自定义类名',\n      row5column2: 'MessageBox关闭后的回调, action的值为\"confirm\"或\"cancel\", instance为 MessageBox实例',\n      row5column3: 'Function(action, instance)',\n      row6column2: 'MessageBox关闭前的回调, 会暂停实例的关闭, action的值为\"confirm\"或\"cancel\", instance为 MessageBox实例, done用于关闭 MessageBox实例',\n      row6column3: 'Function(action, instance, done)',\n      row7column2: '取消按钮的文本内容',\n      row8column2: '确定按钮的文本内容',\n      row9column2: '取消按钮的自定义类名',\n      row10column2: '确定按钮的自定义类名',\n    }\n  },\n  dialogDemo: {\n    label: 'Dialog 对话框',\n    description: '在保留当前页面状态的情况下, 告知用户并承载相关操作.',\n    samples1: {\n      label: '基础用法',\n      description: '需要设置v-model属性, 它接收Boolean, 当为true时显示Dialog.Dialog分为三个部分：header, body和footer, header需要具名为header的slot, footer需要具名为footer的slot.title属性用于定义标题, 它是可选的, 默认值为空, 当header存在时title不显示.show-close属性显示关闭按钮, 默认为false.'\n    },\n    samples2: {\n      label: '自定义内容',\n      description: 'Dialog组件的内容可以是任意的'\n    },\n    samples3: {\n      row1column2: '是否显示Dialog',\n      row2column2: 'Dialog的标题',\n      row3column2: 'Dialog的大小',\n      row4column2: 'Dialog CSS中的top值(仅在size不为full时有效)',\n      row5column2: 'Dialog的自定义类名',\n      row6column2: '是否可以通过点击 modal关闭Dialog',\n      row7column2: '是否可以通过按下ESC关闭Dialog',\n      row8column2: '是否显示关闭按钮',\n      row9column2: '关闭前的回调, 会暂停Dialog的关闭, done()用于关闭, done(false)用于取消关闭',\n      row9column3: 'Function(done)',\n      row10column2: '使modal层透明',\n      row11column2: '是否可以拖动, size为full时不可拖动'\n    },\n    samples4: {\n      row1column2: 'Dialog的内容',\n      row2column2: 'Dialog head部的内容',\n      row3column2: 'Dialog foot部的内容'\n    },\n    samples5: {\n      row1column2: 'Dialog关闭的回调',\n      row2column2: 'Dialog打开的回调'\n    }\n  },\n  asideDemo: {\n    label: 'Aside 侧边栏',\n    description: '在保留当前页面状态的情况下, 在侧边承载相关操作.',\n    samples1: {\n      label: '基础用法',\n      description: '需要设置v-model属性, 它接收Boolean, 当为true时显示Aside.Aside分为三个部分：header, body和footer, header需要具名为header的slot, footer需要具名为footer的slot.title属性用于定义标题, 它是可选的, 默认值为空, 当header存在时title不显示.show-close属性显示关闭按钮, 默认为false.'\n    },\n    samples2: {\n      label: '区域表示',\n      description: '设置relative属性, 可以在父容器内展示'\n    },\n    samples3: {\n      label: '自定义内容',\n      description: 'Aside组件的内容可以是任意的'\n    },\n    samples4: {\n      row1column2: '是否显示Aside',\n      row2column2: 'Aside的标题',\n      row3column2: 'Aside的大小',\n      row5column2: 'Aside的自定义类名',\n      row6column2: '是否可以通过点击 modal关闭Aside',\n      row7column2: '是否可以通过按下ESC关闭Aside',\n      row8column2: '是否显示关闭按钮',\n      row9column2: '关闭前的回调, 会暂停Aside的关闭, done()用于关闭, done(false)用于取消关闭',\n      row9column3: 'Function(done)',\n      row10column2: '显示位置',\n      row11column2: '是否在父容器内显示Aside'\n    },\n    samples5: {\n      row1column2: 'Aside的内容',\n      row2column2: 'Aside head部的内容',\n      row3column2: 'Aside foot部的内容'\n    },\n    samples6: {\n      row1column2: 'Aside关闭的回调',\n      row2column2: 'Aside打开的回调'\n    }\n  },\n  notificationDemo: {\n    label: 'Notification 通知',\n    description: '悬浮出现在页面右上角,显示全局的通知提醒消息.',\n    samples1: {\n      label: '基础用法',\n      description: 'title和message用于设置标题和正文. 默认情况下, 经过一段时间后组件会自动关闭, 但是通过设置duration, 可以控制关闭的时间间隔, 如果设置为0, 则不会自动关闭. 有四种通知类型：success, warning, info, error. 通过type字段来设置'\n    },\n    samples2: {\n      label: '消息位置',\n      description: '通过设置position属性来定位, 默认为\"top-right\"'\n    },\n    samples3: {\n      row1column2: '标题',\n      row2column2: '正文内容',\n      row3column2: '主题样式, 如果不在可选值内将被忽略',\n      row4column2: '自定义图标的类名. 若设置了 type, 则iconClass会被覆盖',\n      row5column2: '自定义类名',\n      row6column2: '显示时间, 毫秒. 设为0则不会自动关闭, 并显示关闭按钮',\n      row7column2: '关闭时的回调函数',\n      row8column2: '定位, 如果不在可选值内将无法显示',\n      row9column2: '是否显示关闭按钮'\n    }\n  },\n  badgeDemo: {\n    label: 'Badge 标记',\n    description: '出现在按钮、图标旁的数字或状态标记. ',\n    samples1: {\n      label: '基础用法',\n      description: '定义value属性, 它接受Number或者String. 最大值由max属性定义, 它接受一个Number, 只有当value为Number时, 它才会生效. 设置is-dot属性以红点的形式标注'\n    },\n    samples2: {\n      row1column2: '显示值',\n      row2column2: '最大值, 超过最大值会显示 \"{max}+\", 要求 value 是 Number 类型',\n      row3column2: '小圆点',\n      row4column2: '隐藏'\n    }\n  },\n  tabsDemo: {\n    label: 'Tabs 标签页',\n    description: '分隔内容上有关联但属于不同类别的数据集合. ',\n    samples1: {\n      label: '基础用法',\n      description: '通过value属性来指定当前选中的标签页. '\n    },\n    samples2: {\n      label: '选项卡样式',\n      description: '设置type属性为card'\n    },\n    samples3: {\n      label: '卡片化样式',\n      description: '设置type属性为border-card'\n    },\n    samples4: {\n      label: '自定义标签',\n      description: '可以通过具名为label的slot来实现自定义标签内容'\n    },\n    samples5: {\n      label: '动态增减标签页'\n    },\n    samples6: {\n      label: '自定义增加标签页触发器'\n    },\n    samples10: {\n      label: '标签置于底部',\n      description: '设置tab-bottom属性为true'\n    },\n    samples7: {\n      row1column2: '风格类型',\n      row2column2: '标签是否显示关闭按钮',\n      row3column2: '标签是否显示新增按钮',\n      row4column2: '标签是否同时显示增加和关闭按钮',\n      row5column2: '绑定值, 选中选项卡的 name',\n      row5column5: '第一个选项卡的name',\n      row6column2: '标签是否置于底部'\n    },\n    samples8: {\n      row1column2: '选项卡被选中时触发',\n      row1column3: '被选中的选项卡实例, 事件实例',\n      row2column2: '点击选项卡关闭按钮触发',\n      row2column3: '被选中的选项卡的name',\n      row3column2: '点击选项卡的新增按钮触发',\n      row4column2: '点击选项卡的新增或关闭后触发',\n      row4column3: '被选中的选项卡的name, 事件行为(add, remove)'\n    },\n    samples9: {\n      row1column2: '选项卡标题',\n      row2column2: '是否禁用',\n      row3column2: '选项卡别名',\n      row4column2: '标签是否显示关闭按钮'\n    }\n  },\n  popoverDemo: {\n    label: 'Popover 弹出框',\n    description: '用于展示小段信息',\n    samples1: {\n      label: '基础用法',\n      description: 'trigger属性用于设置何时触发 Popover, 提供三种触发方式：hover, click, focus. 可以通过slot指定reference. '\n    },\n    samples2: {\n      label: '嵌套信息',\n      description: '可以在Popover中嵌套多种信息'\n    },\n    samples3: {\n      label: '嵌套信息',\n      description: '可以在Popover中嵌套多种操作'\n    },\n    samples4: {\n      row1column2: '触发方式',\n      row2column2: '标题',\n      row3column2: '显示的内容, 也可以通过slot传入',\n      row4column2: '宽度',\n      row5column2: '出现位置',\n      row6column2: '是否可用',\n      row7column2: '是否可见',\n      row8column2: '为popper添加类名',\n      row9column2: '触发方式为hover时的显示延迟, 单位为毫秒',\n      row10column2: '是否显示箭头'\n    },\n    samples5: {\n      row1column2: 'Popover内嵌内容',\n      row2column2: '触发Popover显示的元素'\n    },\n    samples6: {\n      row1column2: '显示时触发',\n      row2column2: '隐藏时触发'\n    }\n  },\n  tooltipDemo: {\n    label: 'Tooltip 文字提示',\n    description: '用于展示鼠标hover时的提示信息. ',\n    samples1: {\n      label: '基础用法',\n      description: '使用content属性来决定hover时的提示信息. 由placement属性决定展示效果：placement属性值为：方向-对齐位置；四个方向：top、left、right、bottom；三种对齐位置：start, end, 默认为空. 如placement=\"left-end\", 则提示信息出现在目标元素的左侧, 且提示信息的底部与目标元素的底部对齐. '\n    },\n    samples2: {\n      label: '主题',\n      description: 'Tooltip组件提供了两个不同的主题：dark和light. '\n    },\n    samples3: {\n      label: '自定义内容',\n      description: '用具名content的slot替代tooltip中的content属性. '\n    },\n    samples4: {\n      label: '禁用状态',\n      description: '设置disabled属性即可, 它接受一个Boolean, true为禁用.'\n    },\n    samples5: {\n      row1column2: '默认提供的主题',\n      row2column2: '鼠标是否可进入到 tooltip中',\n      row3column2: '显示的内容, 也可以通过slot传入',\n      row4column2: '出现位置',\n      row5column2: '是否可用',\n      row6column2: '是否可见',\n      row7column2: '为popper添加类名',\n      row9column2: '是否显示箭头'\n    }\n  },\n  tagDemo: {\n    label: 'Tag 标签',\n    description: '用于标记和选择. ',\n    samples1: {\n      label: '基础用法',\n      description: '用type属性来选择tag的类型, 用width属性来设置tag的宽度, 设置closable属性可以定义一个标签是否可移除, 设置hit属性为true可以开启边框描边．'\n    },\n    samples2: {\n      label: '动态编辑标签'\n    },\n    samples3: {\n      row1column2: '主题',\n      row2column2: '是否可关闭',\n      row4column2: '是否有边框描边',\n      row5column2: 'tag的宽度'\n    },\n    samples4: {\n      row1column2: '关闭tag时触发的事件'\n    }\n  },\n  alertDemo: {\n    label: 'Alert 警告',\n    description: '用于页面中展示重要的提示信息. ',\n    samples1: {\n      label: '基础用法',\n      description: '组件提供四种主题, 由type属性指定, 默认值为info. closable属性决定是否可关闭, 可以设置close-text属性来代替右侧的关闭图标, 设置close事件来设置关闭时的回调. 设置show-icon属性来显示icon. 设置dark属性来显示深色样式. '\n    },\n    samples2: {\n      row1column2: '标题',\n      row2column2: '主题',\n      row3column2: '是否可关闭',\n      row4column2: '关闭按钮自定义文本',\n      row5column2: '是否显示图标',\n      row6column2: '是否开启暗色模式'\n    },\n    samples3: {\n      row1column2: '关闭alert时触发的事件'\n    }\n  },\n  noteDemo: {\n    label: 'Note 笔记',\n    description: '用于页面中展示信息. ',\n    samples1: {\n      label: '基础用法',\n      description: '组件提供四种主题, 由type属性指定, 默认值为info. '\n    },\n    samples2: {\n      row1column2: '标题',\n      row2column2: '主题',\n      row3column2: '是否开启朴素模式'\n    }\n  },\n  cardDemo: {\n    label: 'Card 卡片',\n    description: '将信息聚合在卡片容器中展示. ',\n    samples1: {\n      label: '基础用法',\n      description: 'Card组件包括header和body部分, header部分需要有显式具名slot分发, 同时也是可选的. '\n    },\n    samples2: {\n      label: '简单卡片',\n      description: '卡片可以只有内容区域. '\n    },\n    samples3: {\n      row1column2: '设置 header, 也可以通过名为header的slot传入DOM',\n      row2column2: '设置 body的样式',\n      row3column2: '设置阴影显示时机'\n    },\n    samples4: {\n      label: '卡片阴影',\n      description: '通过shadow属性设置卡片阴影出现的时机：always、hover或never。'\n    }\n  },\n  carouselDemo: {\n    label: 'Carousel 走马灯',\n    description: '在有限空间内, 循环播放同一类型的图片、文字等内容. ',\n    samples1: {\n      label: '基础用法',\n      description: '内容是任意的, 默认情况下, 在鼠标hover底部的指示器时就会触发切换. 通过设置trigger属性为click, 可以达到点击触发的效果. 将type属性设置为card即可启用卡片模式. '\n    },\n    samples2: {\n      label: '指示器',\n      description: 'indicator-position属性定义了指示器的位置. 默认情况下, 它会显示在走马灯内部, 设置为outside则会显示在外部；设置为none则不会显示指示器. '\n    },\n    samples3: {\n      label: '箭头',\n      description: 'arrow属性定义了切换箭头的显示时机. 默认情况下, 切换箭头只有在鼠标hover到走马灯上时才会显示；若将arrow设置为always, 则会一直显示；设置为never, 则会一直隐藏. '\n    },\n    samples4: {\n      row1column2: '走马灯的高度',\n      row2column2: '初始状态激活的幻灯片的索引, 从0开始',\n      row3column2: '指示器的触发方式',\n      row4column2: '是否自动切换',\n      row5column2: '自动切换的时间间隔, 单位为毫秒',\n      row6column2: '指示器的位置',\n      row7column2: '切换箭头的显示时机',\n      row8column2: '走马灯的类型',\n      row9column2: '悬停时是否停止自动切换'\n    },\n    samples5: {\n      row1column2: '幻灯片切换时触发',\n      row1column3: '目前激活的幻灯片的索引, 原幻灯片的索引. (newIndex, oldIndex)'\n    },\n    samples6: {\n      row1column2: '手动切换幻灯片',\n      row1column3: '需要切换的幻灯片的索引, 从0开始；或相应vue-carousel-item的name属性值',\n      row2column2: '切换至上一张幻灯片',\n      row3column2: '切换至下一张幻灯片'\n    },\n    samples7: {\n      row1column2: '幻灯片的名字, 可用作setActiveItem的参数',\n      row1column3: '该幻灯片所对应指示器的文本'\n    }\n  },\n  loadingDemo: {\n    label: 'Loading 加载',\n    description: '加载数据时显示动效. ',\n    samples1: {\n      label: '基础用法',\n      description: '使用自定义指令v-loading, 在绑定了v-loading指令的元素上添加vue-loading-text属性, 其值会被渲染为加载文案, 并显示在加载图标的下方．当需要全屏遮罩时, 可使用fullscreen修饰符. '\n    },\n    samples2: {\n      row1column2: '显示在加载图标下方的加载文案',\n      row2column2: 'Loading的自定义类名'\n    }\n  },\n  loadingBarDemo: {\n    label: 'LoadingBar 加载进度条',\n    description: '全局创建一个显示页面加载、异步请求、文件上传等的加载进度条. ',\n    samples1: {\n      label: '基础用法',\n      description: '在调用start()方法后, 组件会自动模拟进度, 当调用finish()或error()时, 补全进度并自动消失. '\n    },\n    samples2: {\n      row1column2: '开始从0显示进度条, 并自动加载进度',\n      row1column3: '回调函数',\n      row2column2: '结束进度条, 自动补全剩余进度',\n      row2column3: '回调函数',\n      row3column2: '以错误的类型结束进度条, 自动补全剩余进度',\n      row3column3: '回调函数',\n      row4column2: '精确加载到指定的进度',\n      row4column3: '指定的进度百分比(percent), 回调函数'\n    }\n  },\n  progressDemo: {\n    label: 'Progress 进度条',\n    description: '用于展示操作进度, 告知用户当前状态和预期. ',\n    samples1: {\n      label: '基础用法',\n      description: '设置percentage属性即可, 表示进度条对应的百分比, 可通过 stroke-width 属性更改进度条的高度, 并可通过 text-inside 属性来将进度条描述置于进度条内部. 可通过 type 属性来指定使用环形进度条, 在环形进度条中, 还可以通过 width 属性来设置其大小. '\n    },\n    samples2: {\n      row1column2: '百分比',\n      row2column2: '进度条类型',\n      row3column2: '进度条的宽度, 单位 px',\n      row4column2: '进度条显示文字内置在进度条内(只在type==line时可用)',\n      row5column2: '进度条当前状态',\n      row6column2: '环形进度条画布宽度(只在type==circle时可用)',\n      row7column2: '是否显示进度条文字内容'\n    }\n  },\n  sliderDemo: {\n    label: 'Slider 滑块',\n    description: '通过拖动滑块在一个固定区间内进行选择. ',\n    samples1: {\n      label: '基础用法',\n      description: '通过设置绑定值自定义滑块的初始值. '\n    },\n    samples2: {\n      label: '离散值',\n      description: '改变step的值可以改变步长, 通过设置show-step属性可以显示间断点'\n    },\n    samples3: {\n      label: '范围选择',\n      description: '设置range即可开启范围选择, 此时绑定值是一个数组, 其元素分别为最小边界值和最大边界值'\n    },\n    samples4: {\n      label: '竖向模式',\n      description: '设置vertical可使Slider变成竖向模式, 此时必须设置高度height属性'\n    },\n    samples5: {\n      row1column2: '最小值',\n      row2column2: '最大值',\n      row3column2: '是否禁用',\n      row4column2: '步长',\n      row5column2: '是否显示间断点',\n      row6column2: '是否显示 tooltip',\n      row7column2: '格式化 tooltip message',\n      row8column2: '是否为范围选择',\n      row9column2: '是否竖向模式',\n      row10column2: 'Slider高度(只在竖向模式可用)'\n    },\n    samples6: {\n      row1column2: '值改变时触发(使用鼠标拖曳时, 只在松开鼠标后触发)',\n      row1column3: '改变后的值'\n    }\n  },\n  breadcrumbDemo: {\n    label: 'Breadcrumb 面包屑',\n    description: '显示当前页面的路径, 快速返回之前的任意页面. ',\n    samples1: {\n      label: '基础用法',\n      description: '设置separator属性改变分隔符,默认为斜杠\\'/\\''\n    },\n    samples2: {\n      row1column2: '分隔符'\n    },\n    samples3: {\n      row1column2: '路由跳转对象, 同vue-router的to'\n    },\n    samples4: {\n      row1column2: '点击事件, 只有当没有定义to属性时点击触发'\n    }\n  },\n  stepsDemo: {\n    label: 'Steps 步骤条',\n    description: '引导用户按照流程完成任务的分步导航条, 可根据实际应用场景设定步骤, 步骤不得少于 2 步. ',\n    samples1: {\n      label: '基础用法',\n      description: '设置active属性, 接受一个Number, 表明步骤的index, 从0开始. 需要定宽的步骤条时, 设置space属性即可, 单位为px, 如果不设置, 则为自适应. 设置finish-status属性可以改变已经完成的步骤的状态. '\n    },\n    samples2: {\n      label: '有描述的步骤条',\n      description: '每个步骤有其对应的步骤状态描述.'\n    },\n    samples3: {\n      label: '带图标的步骤条',\n      description: '通过icon属性来设置图标'\n    },\n    samples4: {\n      label: '竖式步骤条',\n      description: '设置direction属性为vertical可使steps变成竖向模式'\n    },\n    samples5: {\n      row1column2: '每个step的间距，不填写将自适应间距。支持百分比',\n      row2column2: '显示方向',\n      row3column2: '设置当前激活步骤',\n      row4column2: '设置当前步骤的状态',\n      row5column2: '设置结束步骤的状态',\n      row6column2: '标题描述居中对齐',\n      row7column2: '组件居中显示'\n    },\n    samples6: {\n      row1column2: '标题',\n      row2column2: '图标',\n      row3column2: '设置当前步骤的状态，不设置则根据steps确定状态'\n    },\n    samples7: {\n      row1column2: '内容',\n      row2column2: '标题'\n    }\n  },\n  rateDemo: {\n    label: 'Rate 评分',\n    description: '出现在按钮、图标旁的数字或状态标记。',\n    samples1: {\n      label: '基础用法',\n      description: '评分被分为三个等级，可以利用颜色对分数及情感倾向进行分级(默认情况下不区分颜色)。三个等级所对应的颜色用过colors属性设置'\n    },\n    samples2: {\n      label: '辅助文字',\n      description: '为组件设置show-text属性会在右侧显示辅助文字。通过设置texts可以为每一个分值指定对应的辅助文字。texts为一个数组，长度应等于最大值max。'\n    },\n    samples3: {\n      label: '其它 icon',\n      description: '设置icon-classes属性可以自定义对应3个不同分段的图标。void-icon-class指定未选中时的图标类名。'\n    },\n    samples4: {\n      label: '只读',\n      description: '设置disabled属性表示组件为只读，支持小数分值。此时若设置show-text，则会在右侧显示目前的分值。可以提供text-template作为显示模板，模板为一个包含了{value}的字符串，{value}会被解析为分值。'\n    },\n    samples5: {\n      row1column2: '最大分值',\n      row2column2: '是否为只读',\n      row3column2: '是否允许半选',\n      row4column2: '低分和中等分数的界限值，值本身被划分在低分中',\n      row5column2: '高分和中等分数的界限值，值本身被划分在高分中',\n      row6column2: 'icon的颜色数组，共有3个元素，为3个分段所对应的颜色',\n      row7column2: '未选中icon的颜色',\n      row8column2: '只读时未选中icon的颜色',\n      row9column2: 'icon的类名数组，共有3个元素，为3个分段所对应的类名',\n      row10column2: '未选中icon的类名',\n      row11column2: '只读时未选中icon的类名',\n      row12column2: '是否显示辅助文字',\n      row13column2: '辅助文字的颜色',\n      row14column2: '辅助文字数组',\n      row15column2: '只读时的辅助文字模板'\n    },\n    samples6: {\n      row1column2: '分值改变后触发',\n      row1column3: '改变后的分值'\n    }\n  },\n  pinDemo: {\n    label: 'Pin 图钉',\n    description: '使用图钉，可以将内容固定在屏幕上，并且不随页面的滚动而滚动。常用于侧边菜单等。可以通过调整浏览器窗口高度来查看效果',\n    samples1: {\n      label: '基础用法',\n      description: '简单使用，当元素不可见时，直接固定在最顶端。当固定状态发生改变时，会触发change事件。'\n    },\n    samples2: {\n      label: '偏移',\n      description: '设置offset-top或offset-bottom可当滚动到一定距离时再固定。'\n    },\n    samples3: {\n      label: '固定在底部',\n      description: '在屏幕下方固定。注意，offset-top和offset-bottom只可以设置一个，如果都设置，会使用offset-top。'\n    },\n    samples4: {\n      label: '始终固定',\n      description: '设置fixed属性可始终固定在一个位置'\n    },\n    samples5: {\n      row1column2: '距离窗口顶部达到指定偏移量后触发',\n      row2column2: '距离窗口底部达到指定偏移量后触发',\n      row3column2: '是始终固定在一个位置'\n    },\n    samples6: {\n      row1column2: '在固定状态发生改变时触发',\n      row1column3: '固定状态(true/false)'\n    }\n  },\n  uploadDemo: {\n    label: 'Upload 上传',\n    description: '通过点击或者拖拽上传文件。',\n    samples1: {\n      label: '基础用法',\n      description: '通过slot你可以传入自定义的上传按钮类型和文字提示。使用before-upload限制用户上传的格式和大小'\n    },\n    samples2: {\n      label: '照片墙',\n      description: '设置list-type属性为picture-card。'\n    },\n    samples3: {\n      label: '图片列表缩略图',\n      description: '设置list-type属性为picture。'\n    },\n    samples4: {\n      label: '上传文件列表控制',\n      description: '通过on-change钩子函数来对列表进行控制'\n    },\n    samples5: {\n      label: '拖拽上传',\n      description: '设置drag属性即可'\n    },\n    samples6: {\n      label: '手动上传',\n    },\n    samples7: {\n      row1column2: '上传的地址',\n      row2column2: '可选参数, 设置上传的请求头部',\n      row3column2: '可选参数, 是否支持多选文件',\n      row4column2: '可选参数, 上传时附带的额外参数',\n      row5column2: '可选参数, 上传的文件字段名',\n      row6column2: '支持发送cookie凭证信息',\n      row7column2: '是否显示已上传文件列表',\n      row8column2: '是否启用拖拽上传',\n      row9column2: '可选参数, 接受上传的文件类型(thumbnail-mode模式下此参数无效)',\n      row10column2: '可选参数, 点击已上传的文件链接时的钩子, 可以通过file.response拿到服务端返回数据',\n      row11column2: '可选参数, 文件列表移除文件时的钩子',\n      row12column2: '可选参数, 文件上传成功时的钩子',\n      row13column2: '可选参数, 文件上传失败时的钩子',\n      row14column2: '可选参数, 文件上传时的钩子',\n      row15column2: '可选参数, 文件状态改变时的钩子, 添加文件、上传成功和上传失败时都会被调用',\n      row16column2: '可选参数, 上传文件之前的钩子, 参数为上传的文件, 若返回 false 或者返回 Promise 且被 reject, 则停止上传.',\n      row17column2: '文件列表的类型',\n      row18column2: '是否在选取文件后立即进行上传',\n      row19column2: '上传的文件列表',\n      row20column2: '覆盖默认的上传行为, 可以自定义上传的实现',\n      row21column2: '是否禁用',\n      row22column2: '可选参数, 最大上传数量',\n    },\n    samples8: {\n      row1column2: '清空已上传的文件列表(该方法不支持在before-upload中调用)'\n    }\n  },\n  colorDemo: {\n    label: 'ColorPicker 颜色选择器',\n    description: '用于颜色选择，支持多种格式。',\n    samples1: {\n      label: '基础用法',\n      description: '使用v-model绑定变量, 需字符串类型。'\n    },\n    samples2: {\n      label: '选择透明度',\n      description: 'ColorPicker支持普通颜色，也支持带Alpha通道的颜色，通过show-alpha属性即可控制是否支持透明度的选择。'\n    },\n    samples3: {\n      row1column2: '是否支持透明度选择',\n      row2column2: '写入v-model的颜色的格式',\n      row2column5: 'hex(show-alpha为false)/rgb(show-alpha为true)',\n    },\n    samples4: {\n      row2column2: '是否禁用状态',\n      row2column5: 'false',\n    },\n    samples5: {\n      row1column2: '当绑定值变化时触发',\n      row1column3: '当前值'\n    }\n  },\n  navMenuDemo: {\n    label: 'NavMenu 导航菜单',\n    description: '为网站提供导航功能的菜单。',\n    samples1: {\n      label: '顶栏',\n      description: '导航菜单默认为垂直模式，通过 mode属性可以使导航菜单变更为水平模式。另外，在菜单中通过submenu组件可以生成二级菜单。通过theme属性可以设置主题'\n    },\n    samples2: {\n      label: '侧栏',\n      description: '通过vue-menu-item-group组件可以实现菜单进行分组，分组名可以通过title属性直接设定也可以通过具名slot来设定。'\n    },\n    samples3: {\n      row1column2: '模式',\n      row2column2: '主题色',\n      row3column2: '当前激活菜单的index',\n      row4column2: '当前打开的submenu的key数组',\n      row5column2: '是否只保持一个子菜单的展开',\n      row6column2: '子菜单打开的触发方式(只在 mode为 horizontal时有效)',\n      row7column2: '是否使用vue-router的模式，启用该模式会在激活导航时以index作为path进行路由跳转'\n    },\n    samples4: {\n      row1column2: '菜单激活回调',\n      row1column3: 'index:选中菜单项的index, indexPath:选中菜单项的index path',\n      row2column2: 'SubMenu展开的回调',\n      row2column3: 'index:打开的subMenu的index, indexPath:打开的subMenu的index path',\n      row3column2: 'SubMenu收起的回调',\n      row3column3: 'index:收起的subMenu的index, indexPath:收起的subMenu的index path'\n    },\n    samples5: {\n      row1column2: '唯一标志',\n    },\n    samples6: {\n      row1column2: '唯一标志',\n      row2column2: 'Vue Router路径对象',\n    },\n    samples7: {\n      row1column2: '分组标题',\n    },\n    samples8: {\n      label: '折叠',\n      description: '侧栏菜单可以折叠'\n    },\n  },\n  listDemo: {\n    label: 'List 列表',\n    description: '用于相似元素信息的展示。',\n    samples1: {\n      label: '基础用法',\n      description: '通过height属性设置list高度, 通过<vue-divider>控件来追加item间的分隔线'\n    },\n    samples2: {\n      row1column2: 'list高度',\n      row2column2: '滚动竖向滚动条时的钩子',\n      row3column2: '默认选中的item index',\n      row4column2: '是否默认选中item',\n      row5column2: '是否启用虚拟滚动条'\n    },\n    samples3: {\n      row1column2: '选中item时的回调',\n      row1column3: '选中的item',\n    }\n  },\n  sortableDemo: {\n    label: 'Sortable 拖拽排序',\n    description: '使用鼠标调整列表中或者网格中元素的排序。',\n    samples1: {\n      label: '基础用法',\n      description: '根据属性element设置sortable的容器, 如:\"div\"'\n    },\n    samples2: {\n      label: '数据绑定',\n      description: '绑定数据后进行拖动,数据会相应地发生变化'\n    },\n    samples3: {\n      label: '克隆',\n      description: '设置options的group的pull属性为\"clone\"可以开启克隆模式,同一容器内无法克隆'\n    },\n    samples4: {\n      row1column2: '绑定一个拖拽同步的数组',\n      row2column2: '可以拖拽组件的HTML节点类型',\n      row3column2: '当sortable的clone选项为true时的回调函数, 返回要克隆的数据, 只在绑定数据时生效',\n      row4column2: '拖拽时的回调函数, 只在绑定数据时生效',\n      row5column2: '初始化sortable对象的选项, 参考下表',\n    },\n    samples5: {\n      row1column2: '将元素从一个容器中拖放到另一个容器中，两个容器必须具有相同的组名, 参考下表',\n      row2column2: '同一个容器内是否可以自由排序',\n      row3column2: '选中元素几毫秒后可以开始拖拽',\n      row4column2: '是否禁用sortable',\n      row5column2: '在容器中可以拖动的句柄选择器',\n      row6column2: '在容器中不能拖动的句柄选择器',\n      row7column2: '拖动元素时的占位类名',\n      row8column2: '选中元素时的类名'\n    },\n    samples6: {\n      row1column2: '组名',\n      row2column2: '是否可以从容器中拖出元素, \"clone\"为克隆元素',\n      row3column2: '是否可以把元素拖入容器中'\n    },\n    samples7: {\n      row1column2: '开始拖拽的回调事件',\n      row2column2: '容器追加元素的回调事件',\n      row3column2: '容器移除元素的回调事件',\n      row4column2: '容器更新元素的回调事件',\n      row5column2: '结束拖拽的回调事件',\n      row6column2: '选中元素的回调事件',\n      row7column2: '同一容器内元素排序的回调事件',\n      row8column2: '选中不能拖动的句柄选择器时的回调事件',\n      row9column2: '克隆的回调事件',\n    }\n  },\n  tableDemo: {\n    label: 'Table 表格',\n    description: '用于展示多条结构类似的数据，可对数据进行排序、筛选、对比或其他自定义操作。(1.6.4移除，可单独引入)',\n    samples1: {\n      label: '基础用法',\n      description: '当vue-table元素中注入data对象数组后，在vue-table-column中用prop属性来对应对象中的键名即可填入数据，用label属性来定义表格的列名，可以使用width属性来定义列宽；设置stripe属性为true可以创建带斑马纹的表格，它默认为false；设置border属性为true可以具有竖直方向的边框的。它默认为false．'\n    },\n    samples2: {\n      label: '固定列',\n      description: '固定列需要使用fixed属性，它接受 Boolean 值或者left, right，表示左边固定还是右边固定。'\n    },\n    samples3: {\n      label: '自定义模板',\n      description: '通过slot-scope可以获取到row, column, $index 和store(table 内部的状态管理)的数据, 可组合其他组件自定义显示的内容'\n    },\n    samples4: {\n      label: '增删改'\n    },\n    samples5: {\n      label: '排序',\n      description: '通过表的default-sort属性设置默认的排序列和排序顺序。在列中设置sortable属性即可实现以该列为基准的排序'\n    },\n    samples6: {\n      label: '筛选',\n      description: '在列中设置filterable属性为true即可开启该列的筛选。'\n    },\n    samples7: {\n      label: '自定义样式',\n      description: '通过table的属性row-class-name可以给行指定样式, 通过table-column的属性class-name可以给列指定样式, 通过table-column的属性label-class-name可以给label的指定样式'\n    },\n    samples8: {\n      label: '展开行',\n      description: '设置type=\"expand\"和Scoped slot可以开启展开行功能，vue-table-column的模板会被渲染成为展开行的内容，展开行可访问的属性与使用自定义列模板时的 Scoped slot 相同。设置table的expand-class-name属性 可以给展开行指定样式'\n    },\n    samples14: {\n      label: '单选',\n      description: '配置highlight-current-row属性即可实现单选。之后由current-change事件来管理选中时触发的事件，它会传入currentRow, oldCurrentRow'\n    },\n    samples15: {\n      label: '多选',\n      description: '手动添加一个vue-table-column，设type属性为selection即可实现多选'\n    },\n    samples16: {\n      label: '合计',\n      description: '将show-footer设置为true就会在表格尾部展示合计行。对于合计行，根据每列的aggregate属性进行计算'\n    },\n    samples17: {\n      label: '隐藏列',\n      description: '对vue-table-column设置visible属性为false, 可以隐藏该列'\n    },\n    samples18: {\n      label: '快捷菜单',\n      description: '设置context-menu属性为true, 可以开启快捷菜单功能, 调用table的内部方法toggleContextMenu切换快捷菜单'\n    },\n    samples19: {\n      label: '懒加载',\n      description: '设置lazyload属性为true, 可以开启懒加载模式, 设置了height时有效'\n    },\n    samples20: {\n      label: '排序过滤选中行定位',\n      description: '排序过滤选中行定位'\n    },\n    samples9: {\n      row1column2: '显示的数据',\n      row2column2: 'Table的高度，默认为自动高度。',\n      row3column2: '是否为斑马纹table',\n      row4column2: '是否带有纵向边框',\n      row5column2: '列的宽度是否自撑开',\n      row6column2: '是否显示表头',\n      row7column2: '是否要高亮选择行',\n      row8column2: '行的className的回调方法，也可以使用字符串为所有行设置一个固定的className。',\n      row9column2: '空数据时显示的文本内容，也可以通过slot=\"empty\"设置',\n      row10column2: '是否默认展开所有行，只对type=\"expand\"的Column有效',\n      row11column2: '展开行的className的回调方法，也可以使用字符串为所有展开行设置一个固定的className。只对type=\"expand\"的Column有效',\n      row12column2: '默认的排序列的prop和顺序。它的prop属性指定默认的排序的列，order属性指定默认排序的顺序',\n      row12column5: '如果只指定了prop, 没有指定order, 则默认顺序是ascending',\n      row13column2: 'tooltip effect 属性',\n      row14column2: '是否在表尾显示合计行',\n      row15column2: '合计行第一列的文本',\n      row16column2: '自定义的合计计算方法',\n      row17column2: '懒加载DOM模式, 设置了height时有效',\n      row18column2: '是否要高亮当前行',\n      row19column2: '过滤后自动高亮第一行',\n      row20column2: '排序后自动高亮第一行'\n    },\n    samples10: {\n      row1column2: '当用户手动勾选数据行的Checkbox时触发的事件',\n      row2column2: '当用户手动勾选全选Checkbox时触发的事件',\n      row3column2: '当选择项发生变化时会触发该事件',\n      row4column2: '当单元格hover进入时会触发该事件',\n      row5column2: '当单元格hover退出时会触发该事件',\n      row6column2: '当某个单元格被点击时会触发该事件',\n      row7column2: '当某个单元格被双击击时会触发该事件',\n      row8column2: '当某一行被点击时会触发该事件',\n      row9column2: '当某一行被鼠标右键点击时会触发该事件',\n      row10column2: '当某一行被双击时会触发该事件',\n      row11column2: '当某一列的表头被点击时会触发该事件',\n      row12column2: '当拖动表头改变了列的宽度的时候会触发该事件',\n      row13column2: '当表格的排序条件发生变化的时候会触发该事件',\n      row14column2: '当表格的筛选条件发生变化的时候会触发该事件，参数的值是一个对象，对象的key是column的columnKey，对应的value为用户选择的筛选条件的数组',\n      row15column2: '当表格的当前行发生变化的时候会触发该事件，如果要高亮当前行，请打开表格的highlight-current-row属性',\n      row16column2: '当对某一行展开或者关闭的时候触发该事件',\n      row17column2: '当滚动条拉至顶部的时候触发该事件',\n      row18column2: '当滚动条拉至底部的时候触发该事件',\n      row19column2: '当滚动条拉至最左部的时候触发该事件',\n      row20column2: '当滚动条拉至最右部的时候触发该事件',\n    },\n    samples11: {\n      row11column2: '用于多选表格，获取用户的选择',\n      row1column2: '用于多选表格，清空用户的选择',\n      row2column2: '用于多选表格，切换某一行的选中状态',\n      row3column2: '用于单选表格，设定某一行为选中行',\n      row4column2: '切换context menu状态',\n      row5column2: '对某列进行过滤',\n      row6column2: '对多列进行排序',\n      row7column2: '将数据导出为 csv文件',\n      row7column3: 'params(Object): fileName文件名，默认为table.csv; original是否导出为原始数据，默认为true',\n      row8column2: '用于单选表格，获取选中行',\n      row9column2: '重置所有过滤',\n      row10column2: '重置所有排序',\n      row12column2: '导出用户设置（排序，过滤，列显示等）',\n      row13column2: '导入用户设置'\n    },\n    samples12: {\n      row1column2: '自定义模板',\n      row2column2: '头部自定义模板'\n    },\n    samples13: {\n      row1column2: '对应列的类型. 如果设置了selection则显示多选框; 如果设置了index则显示该行的索引(从1开始计算); 如果设置了expand则显示为一个可展开的按钮',\n      row3column2: '显示的标题',\n      row4column2: '对应列数据的字段名',\n      row5column2: '对应列的宽度',\n      row6column2: '对应列的最小宽度，会把table剩余宽度按比例分配给设置了min-width的列',\n      row7column2: '列是否固定在左侧或者右侧，true表示固定在左侧',\n      row8column2: '列标题Label区域渲染使用的Function',\n      row9column2: '对应列是否可以排序，',\n      row10column2: '对数据进行排序的时候使用的方法，仅当sortable为true的时候有效，需返回一个布尔值',\n      row11column2: '对应列是否可以通过拖动改变宽度(需要在vue-table上设置border属性为true)',\n      row12column2: '用来格式化内容',\n      row13column2: '当内容过长显示tooltip',\n      row14column2: '对齐方式',\n      row15column2: '表头对齐方式',\n      row16column2: '列的自定义类名',\n      row17column2: '当前列标题的自定义类名',\n      row18column2: '仅对type==selection的列有效，返回一个boolean用来决定这一行的 CheckBox是否可以勾选',\n      row19column2: '对应列是否可以过滤',\n      row20column2: '数据过滤的选项，数组格式，数组中的元素需要有text和value属性',\n      row22column2: '数据过滤使用的方法，返回一个boolean用来决定是否显示',\n      row23column2: '是否显示列',\n      row24column2: '合计类型',\n      row25column2: '合计标题',\n      row26column2: 'csv文件的标题',\n      row27column2: '标题是否被前一列合并',\n      row28column2: '数据相同的行合并'\n    }\n  },\n  draggableDemo: {\n    label: 'Draggable 拖放',\n    description: '通过单击鼠标并拖动对象在窗口内任意移动. ',\n    samples1: {\n      label: '基础用法',\n      description: '绑定了v-draggable指令的元素即可在带滚动条的父层窗口范围内任意移动'\n    },\n    samples2: {\n      row1column2: '通过选择器指定元素内的子元素无法触发拖动事件'\n    }\n  },\n  adaptiveGroup: {\n    label: 'AdaptiveGroup 自适应组',\n    description: '根据窗口大小对li slot聚集. ',\n    samples1: {\n      label: '基础用法',\n      description: ''\n    },\n    samples2: {\n      row1column2: '触发自适应的大小',\n      row2column2: '自定义class',\n      row3column2: '自定义下拉列class',\n      row4column2: '自定义触发下拉列图标的class'\n    },\n    samples3: {\n      row1column2: '不被收至下拉列内',\n      row2column2: '被收至下拉列内'\n    }\n  },\n  rippleDemo: {\n    label: 'Ripple 波纹效果',\n    description: '点击时触发波纹效果.',\n    samples1: {\n      label: '基础用法',\n      description: '对需要触发波纹效果的元素设定v-ripple指令即可'\n    },\n  },\n  signatureDemo: {\n    label: 'Signature 签名',\n    description: '签名画布控件，可生成base64数据',\n    samples1: {\n      label: '基础用法',\n      description: '基础签名画布'\n    },\n    samples2: {\n      label: '获取签名图片base64数据',\n      description: '调用saveSignature方法，返回结果包含是否为空和base64数据'\n    },\n    samples3: {\n      label: '清空签名',\n      description: '调用clearSignature方法'\n    },\n    samples4: {\n      label: '撤销',\n      description: '调用undoSignature方法'\n    },\n    samples5: {\n      label: '锁定、解锁',\n      description: 'lockSignaturePad、openSignaturePad'\n    },\n    samples6: {\n      row1column2: '宽度',\n      row2column2: '高度',\n      row3column2: '保存图片格式，支持image/png, image/jpeg, image/svg+xml',\n      row4column2: '设置项目 {backgroundColor: string, penColor: string, onBegin：function, onEnd：function}',\n      row5column2: '自定义外层div样式 :custom-style=\"{border: \\'black 1px dotted\\'}\"',\n    },\n    samples7: {\n      row1column2: '返回签名的状态和base64数据',\n      row2column2: '撤销最后一笔笔画',\n      row3column2: '清空签名',\n      row4column2: '锁定',\n      row5column2: '解锁',\n      row6column2: '读取base64数据到画布',\n      row7column2: '是否是空的',\n    }\n  },\n  hotkeyDemo: {\n    label: 'Hotkey 快捷键',\n    description: '给指定的元素绑定快捷键',\n    samples1: {\n      label: '基础用法',\n      description: '绑定v-hotkey指令，默认触发click事件，也可指定触发的函数'\n    }\n  },\n  XtableDemo: {\n    label: \"Xtable 高级表格\",\n    advanced: {\n      label: \"更多功能\",\n      Custom: {\n        label: \"显示/隐藏列\",\n        sample1: {\n          description: \"通过 customs 来初始化绑定动态列：{field: 字段名, visible: 默认是否显示}<br>\\n      通过函数式调用 showColumn、hideColumn 操作列的显示/隐藏<br>\\n      还可以通过修改列的 visible 属性，可以轻松实现强大的显示/隐藏列的配置功能，最后调用 refreshColumn 刷新列\",\n          label: \"基本用法\"\n        },\n        sample2: {\n          description: \"如果是根据服务端数据控制显示/隐藏列，则需要手动调用 reloadCustoms 更新即可\",\n          label: \"动态显示/隐藏列\"\n        },\n        sample3: {\n          description: \"通过属性 field 和 visible 设置默认隐藏\",\n          label: \"默认隐藏\"\n        }\n      },\n      CustomSort: {\n        label: \"自定义列头排序\",\n        sample1: {\n          description: \"自定义列头排序的实现，你可以把表格封装成子组件进行定制，通过 slot 非常简单就可以实现自定义排序\"\n        }\n      },\n      CustomStorage: {\n        label: \"显示/隐藏列 + localStorage\",\n        sample1: {\n          label: '基本用法',\n          description: \"显示/隐藏列功能，通过设置 id 和 setting={storage: true} 参数开启将列个性化 localStorage 保存功能<br>\\n      也可以通过配合 reloadCustoms 函数实现服务端保存\"\n        }\n      },\n      CustomlWidthStorage: {\n        label: \"显示/隐藏/列宽 + localStorage\",\n        sample1: {\n          label: '基本用法',\n          description: \"显示/隐藏列和列宽拖动保存功能，通过设置 id 和 resizable={storage: true} 参数开启列宽拖动 localStorage 保存功能<br>\\n      还可以通过 checkMethod 设置个性化列禁止勾选<br>\\n      也可以通过配合 resizable-change 事件实现服务端保存\"\n        }\n      },\n      Dynamic: {\n        label: \"使用 v-for 动态实现\",\n        sample1: {\n          description: \"配合 v-for 动态生成，动态改变宽度、固定列..等<br><span class=\\\"red\\\">（注：动态更新属性必须要先定义，否则无法监听到属性变化）</span>\",\n          label: \"基本用法\"\n        }\n      },\n      Event: {\n        label: \"事件绑定\",\n        sample1: {\n          description: \"事件绑定\",\n          label: \"基本用法\"\n        }\n      },\n      Expand: {\n        label: \"展开行\",\n        sample1: {\n          description: \"通过设置 expand-config 属性和 type=expand 与 slot 可以开启展开行功能\",\n          label: \"基本用法\"\n        },\n        sample2: {\n          description: \"默认展开指定行，通过 expandRowKeys 参数设置默认展开行，指定默认值需要有 row-id\",\n          label: \"默认展开\"\n        },\n        sample3: {\n          description: \"默认展开所有行，通过 expandAll 参数设置默认展开所有行\",\n          label: \"展开所有\"\n        }\n      },\n      Export: {\n        label: \"导出数据\",\n        sample1: {\n          description: \"通过调用 exportData 函数指定 type='csv' 可以直接将表格导出为 CSV/HTML/XML/TXT 格式的文件<br>\\n      <span class=\\\"red\\\">注：默认会排除 field 为空和 type 相关的功能列；如果需要导出索引，请通过 columnFilterMethod 自定义筛选条件</span>\",\n          label: \"基本用法\"\n        },\n        sample2: {\n          description: \"配置 columnFilterMethod 参数过滤指定列\",\n          label: \"过滤指定列\"\n        },\n        sample3: {\n          description: \"配置 dataFilterMethod 参数过滤指定行\",\n          label: \"过滤指定行\"\n        },\n        sample4: {\n          description: \"不导出表头，指定文件名，导出源数据,格式化数据\",\n          label: \"完整配置\"\n        }\n      },\n      FixedType: {\n        label: \"固定类型 + 导入/导出\",\n        sample1: {\n          description: \"导入/导出文件类型：通过 types 设置文件类型，例如：限制只允许使用 CSV 格式<br>\",\n          label: \"固定类型 + 导入/导出\"\n        }\n      },\n      Footer: {\n        label: \"表尾合计\",\n        sample1: {\n          description: \"设置 show-footer show-footer 和 footer-method 自定义表尾合计<br>\\n      需要注意的是表尾的的计算并非实时的，而是在 data 初始化时才会触发自动计算；如果要达到实时计算请手动调用 updateFooter 方法<br>\\n      <span class=\\\"red\\\">（注：footer-method 合计的逻辑都是自行实现的，该示例仅供参考）</span>\",\n          label: \"基本用法\"\n        },\n        sample2: {\n          description: \"还可以配合 footer-cell-class-name 自定义不同列颜色\",\n          label: \"自定义样式\"\n        },\n        sample3: {\n          description: \"还可以固定列\",\n          label: \"固定列\"\n        }\n      },\n      FooterSpan: {\n        label: \"表尾合并行或列\",\n        sample1: {\n          description: \"表尾合并列，通过 footer-span-method 方法<br>\\n      <span class=\\\"red\\\">（注：footer-method 合计的逻辑都是自行实现的，该示例仅供参考）</span>\",\n          label: \"合并列\"\n        },\n        sample2: {\n          description: \"合并行\",\n          label: \"合并行\"\n        }\n      },\n      Highlight: {\n        label: \"键盘移动高亮行\",\n        sample1: {\n          description: \"键盘移动高亮行，设置 keyboard-config={isArrow: true} 启用方向键功能\",\n          label: \"基本用法\"\n        }\n      },\n      Import: {\n        label: \"导入数据\",\n        sample1: {\n          description: \"导入数据：通过 importData 函数可以直接将数据导入表格中<br>\\n      <span class=\\\"red\\\">注：附件中的字段名必须和表格一致，数据格式不正确将无法导入</span>\",\n          label: \"基本用法\"\n        }\n      },\n      ManualFilter: {\n        label: \"筛选高级用法\",\n        sample1: {\n          description: \"筛选高级用法、动态更改筛选条件、自定义更加复杂的模板事件，通过调用 filter 和 updateData 方法来处理复杂场景的筛选逻辑<br>\\n      context 对象:<br>\\n      &nbsp;&nbsp;<span class=\\\"orange\\\">changeOption(event, checked, option) 更新选项的状态</span><br>\\n      &nbsp;&nbsp;<span class=\\\"orange\\\">confirmFilter() 确认筛选</span><br>\\n      &nbsp;&nbsp;<span class=\\\"orange\\\">resetFilter() 清除筛选条件</span>\",\n          label: \"基本用法\"\n        }\n      },\n      Menu: {\n        label: \"快捷菜单\",\n        sample1: {\n          description: \"右键快捷菜单，支持表头菜单、内容菜单、表尾菜单，配置项 context-menu={header,body,footer}\",\n          label: \"基本用法\"\n        }\n      },\n      MenuPrivilege: {\n        label: \"快捷菜单 + 权限控制\",\n        sample1: {\n          description: \"右键快捷菜单，支持表头菜单、内容菜单、表尾菜单，通过 visibleMethod 和 visible | disabled 属性来控制菜单选项的操作权限\",\n          label: \"基本用法\"\n        }\n      },\n      Page: {\n        label: \"分页\",\n        sample1: {\n          description: \"使用自带的分页 <pager-api-link name=\\\"vue-xtable-pager\\\"></pager-api-link><br>\\n      如果要支持动态序号，可以通过 start-index 属性设置起始值<br>\\n      如果要支持保留选中状态，可以通过设置 checkbox-config 的 reserve 属性<br>\\n      启用 reserve 功能需要有 row-id 唯一主键\",\n          label: \"基本用法\"\n        },\n        sample2: {\n          description: \"设置分页 border 样式\",\n          label: \"border 样式\"\n        },\n        sample3: {\n          description: \"设置分页 background 样式\",\n          label: \"background 样式\"\n        },\n        sample4: {\n          description: \"设置分页 perfect 样式\"\n        }\n      },\n      Print: {\n        label: \"打印\",\n        sample1: {\n          description: \"通过调用 print 函数打印表格\",\n          label: \"基本用法\"\n        }\n      },\n      Search: {\n        label: \"全表搜索\",\n        sample1: {\n          description: \"表格搜索功能，非常简单就可以实现表格内容搜索\",\n          label: \"基本用法\"\n        },\n        sample2: {\n          description: \"树表格搜索功能，非常简单就可以实现树表格内容搜索\",\n          label: \"树表格搜索\"\n        }\n      },\n      Span: {\n        label: \"合并行或列\",\n        sample1: {\n          description: \"合并列，通过 span-method 方法，使用 $rowIndex 获取渲染中的行索引，rowIndex 指向真实数据的行索引，可以根据不同场景使用<br>\\n      <span class=\\\"red\\\">（注：span-method 合并的逻辑都是自行实现的，该示例仅供参考）</span>\",\n          label: \"合并列\"\n        },\n        sample2: {\n          label: \"合并行\",\n          description: \"合并行\"\n        }\n      },\n      SpanRow: {\n        label: \"更加复杂的合并行\",\n        sample1: {\n          description: \"更加复杂的合并行，实现横向树结构<br><span class=\\\"red\\\">（注：span-method 合并的逻辑都是自行实现的，该示例仅供参考）</span>\",\n          label: \"复杂合并行\"\n        }\n      },\n      Template: {\n        label: \"自定义模板\",\n        sample1: {\n          description: \"使用 slot 自定义模板；可以实现自定义任意内容及 html 元素<br>\\n      default：自定义内容模板（提前格式化（最优） > formatter（值发生变化时） > slots（即时））<br>\\n      header：自定义表头模板<br>\\n      filter：自定义筛选模板（建议使用<router-link :to=\\\"{name: 'RendererAPI'}\\\">渲染器</router-link>，可以更好的复用）<br>\\n      edit：自定义可编辑模板（建议使用<router-link :to=\\\"{name: 'RendererAPI'}\\\">渲染器</router-link>，可以更好的复用）\",\n          label: \"基本用法\"\n        }\n      },\n      Toolbar: {\n        label: \"工具栏\",\n        sample1: {\n          description: \"使用自带的工具栏 <toolbar-api-link name=\\\"vue-toolbar\\\"></toolbar-api-link>，配合模板可以非常简单的实现强大的功能<br>\\n      支持显示/隐藏列、列宽拖动状态的保存功能<br>\\n      <span class=\\\"red\\\">注：组成一套完整的表格，工具栏和表格必须是上下相邻关系，渲染时会自动进行上下关联，不允许更换位置（如果是复杂的布局不建议使用工具栏，自行写模板即可）</span>\",\n          label: \"基本用法\"\n        }\n      },\n      CopyPaste: {\n        label: \"复制粘贴\",\n        sample1: {\n          description: \"单元格多选，Ctrl+C或者右键菜单复制单元格内容， Ctrl+V 在可编辑单元格粘贴，由于浏览器限制，右键菜单无法执行粘贴操作\",\n          label: \"基本用法\"\n        }\n      },\n      ColumnDrag: {\n        label: \"列拖拽\",\n        sample1: {\n          description: \"添加 column-drag 属性激活列拖拽。需配合 column-key 属性一起使用。\",\n          label: \"基本用法\"\n        }\n      },\n      RowDrag: {\n        label: \"行拖拽\",\n        sample1: {\n          description: \"添加 type=\\\"drag\\\" 的列即可自动激活列拖拽。需配合 row-key 属性一起使用。\",\n          label: \"基本用法\"\n        }\n      },\n    },\n    bad: {\n      label: \"糟糕的用法\",\n      Edit: {\n        label: \"全表渲染为编辑状态\",\n        sample1: {\n          description: \"将单元格渲染成可编辑<span class=\\\"red\\\">（该方式将无法使用 v3 的极速渲染模式）</span><br>\\n      <span class=\\\"red\\\">由于不符合 vue-xtable 单行编辑的设计原则，使用这个方式的所有逻辑都应该自行处理</span>\"\n        },\n        sample2: {\n          description: \"将可编辑全部设为可视类型<span class=\\\"red\\\">（该方式将无法使用 v3 的极速渲染模式）</span><br>\\n      <span class=\\\"red\\\">由于不符合 vue-xtable 单行编辑的设计原则，使用这个方式的所有逻辑都应该自行处理</span>\"\n        }\n      }\n    },\n    base: {\n      label: \"基础功能\",\n      AutoHeight: {\n        label: \"响应式宽高\",\n        sample1: {\n          description: \"当一个表格需要铺满父容器时，这个功能将非常有用<br>\\n      通过设置 height=auto表格会相对于父容器的高度去铺满，但是只会在数据重新加载时才会计算<br>\\n      还可以根据不同场景添加 sync-resize（属性监听） 或 auto-resize（父元素监听），这样就只需要通过样式控制父容器高度就可以实现响应式表格\",\n          label: \"自动铺满\"\n        },\n        sample2: {\n          label: \"百分比高度\",\n          description: \"也可以设置相对于父容器的百分比\"\n        }\n      },\n      Basic: {\n        label: \"基础\",\n        sample1: {\n          description: \"<table-api-link name=\\\"vue-xtable\\\"></table-api-link> 静态化表格，基于模板方式使用简单、便捷\",\n          label: \"基本功能\"\n        },\n        sample2: {\n          description: \"使用 highlight-hover-row 属性启用 hover 行高亮\",\n          label: \"hover行高亮\"\n        }\n      },\n      Border: {\n        label: \"边框\",\n        sample1: {\n          description: \"带边框的表格，通过设置 border 参数\",\n          label: \"显示边框\"\n        }\n      },\n      Current: {\n        label: \"高亮行\",\n        sample1: {\n          description: \"使用 highlight-current-row 显示高亮行；用户操作点击选项时会触发事件 current-change\",\n          label: \"高亮当前行\"\n        }\n      },\n      DynamicStyle: {\n        label: \"单元格动态样式\",\n        sample1: {\n          description: \"行的动态样色、单元格动态样式，表头的动态样式、表尾的动态样式、全部都可以完全自定义<br>\\n      <span class=\\\"red\\\">（注：当自定义样式之后可能会覆盖表格的样式，比如选中行..等，记得自行处理好相关样式）</span>\",\n          label: \"动态样式\"\n        }\n      },\n      Empty: {\n        label: \"空数据\",\n        sample1: {\n          description: \"基础使用\",\n          label: \"默认功能\"\n        },\n        sample2: {\n          description: \"出现滚动条\",\n          label: \"出现滚动条\"\n        },\n        sample3: {\n          description: \"配合 loading 使用，可以通过 slot=empty 自定义提示语\",\n          label: \"提示语\"\n        }\n      },\n      Filter: {\n        label: \"筛选\",\n        sample1: {\n          description: \"通过设置 filters 属性和 filter-method 方法可以支持列筛选功能<br>\\n      如果是服务端筛选，只需加上 remote-filter 和 filter-change 事件就可以实现<br>\\n      如果是动态数据请配合 filter 方法，参数 filters 不支持动态数据<br>\\n      context 对象（<router-link  class=\\\"link\\\" :to=\\\"{name: 'TableManualFilter'}\\\">查看高级用法</router-link>）:<br>\\n      &nbsp;&nbsp;<span class=\\\"orange\\\">changeOption(event, checked, option) 更新选项的状态</span><br>\\n      &nbsp;&nbsp;<span class=\\\"orange\\\">confirmFilter() 确认筛选</span><br>\\n      &nbsp;&nbsp;<span class=\\\"orange\\\">resetFilter() 清除筛选条件</span>\",\n          label: \"基本功能\"\n        },\n        sample2: {\n          description: \"默认的筛选，通过 checked 属性设置默认的选中的选项\",\n          label: \"默认选中选项\"\n        }\n      },\n      Fixed: {\n        label: \"固定列\",\n        sample1: {\n          description: \"固定列，通过设置 fixed 参数<br>\\n      当横向内容过多时，将列固定在左右两侧\",\n          label: \"基本功能\"\n        },\n        sample2: {\n          description: \"如果列宽足够的情况下，固定列不会浮动\",\n          label: \"列宽联动\"\n        }\n      },\n      FixedFull: {\n        label: \"固定表头和列\",\n        sample1: {\n          description: \"横纵内容过多时，同时固定列和表头\",\n          label: \"固定表头和列\"\n        },\n        sample2: {\n          description: \"固定列建议设置 show-overflow 该值，禁用自动换行，大幅提升渲染速度\",\n          label: \"show-overflow\"\n        }\n      },\n      Format: {\n        label: \"格式化内容\",\n        sample1: {\n          description: \"局部自定义 formatter 格式化内容，formatter 会确保在指定的 field 值发生改变时调用，如果想要多字段关联变化请使用<router-link class=\\\"nav-link\\\" :to=\\\"{name: 'TableTemplate'}\\\">自定义模板</router-link>\",\n          label: \"基本用法\"\n        },\n        sample2: {\n          description: \"全局格式化内容，会在需要的时候自动调用对应 VueUtil 函数库的方法进行数据处理<br>\\n      可以通过自定义函数实现统一的格式化处理，这对于很多场景非常有用，减少很多不必要的重复代码\",\n          label: \"调用内置函数\"\n        }\n      },\n      Group: {\n        label: \"表头分组\",\n        sample1: {\n          description: \"当数据结构比较复杂的时候，可以使用多级表头显示更加直观\",\n          label: \"基本用法\"\n        },\n        sample2: {\n          description: \"固定列\",\n          label: \"分组固定列\"\n        }\n      },\n      Header: {\n        label: \"隐藏头部\",\n        sample1: {\n          description: \"隐藏头部，通过设置 show-header 参数\",\n          label: \"隐藏头部\"\n        },\n        sample2: {\n          description: \"当纵向或横向内容过多时，自动出现滚动条\",\n          label: \"滚动条\"\n        }\n      },\n      HeaderHighlight: {\n        label: \"高亮列\",\n        sample1: {\n          description: \"列选中高亮，通过设置 highlight-current-column 参数\",\n          label: \"列选中高亮\"\n        },\n        sample2: {\n          description: \"列和行选中高亮，通过设置 highlight-hover-row、highlight-hover-column 参数\",\n          label: \"列和行选中高亮\"\n        }\n      },\n      Height: {\n        label: \"固定表头\",\n        sample1: {\n          description: \"当纵向内容过多时，固定表头就非常有用了，通过设置 height 参数\",\n          label: \"固定表头\"\n        }\n      },\n      Index: {\n        label: \"序号\",\n        sample1: {\n          description: \"设置 type=index 开启序号列\",\n          label: \"开启序号列\"\n        },\n        sample2: {\n          description: \"使用 start-index 自定义起始序号\",\n          label: \"自定义起始序号\"\n        },\n        sample3: {\n          description: \"使用 index-method 自定义方法\",\n          label: \"自定义方法\"\n        }\n      },\n      Loading: {\n        label: \"加载中\",\n        sample1: {\n          description: \"通过设置 loading 属性可以使用自带的加载效果\",\n          label: \"默认\"\n        },\n        sample2: {\n          description: \"加载中\",\n          label: \"加载动画\"\n        }\n      },\n      MaxHeight: {\n        label: \"最大高度\",\n        sample1: {\n          description: \"当一个表格高度需要自适应的时候可以设置为最大高度\",\n          label: \"最大高度\"\n        },\n        sample2: {\n          description: \"如果设置 max-height，当内容为达到最大高度时会自适应\",\n          label: \"自适应\"\n        },\n        sample3: {\n          description: \"也可以设置相对于父容器的百分比\",\n          label: \"百分比高度\"\n        }\n      },\n      Overflow: {\n        label: \"内容显示省略号\",\n        sample1: {\n          description: \"当内容或表头超过隐藏时显示为省略号，show-overflow 和 show-header-overflow <br>\\n      ellipsis 当内容超过时显示为省略号<br>\\n      title 当内容超过时显示为省略号并用原生 title 显示<br>\\n      tooltip 当内容超过隐藏时显示为省略号并用 tooltip 显示<br>\\n      还可以通过 enterable 开启鼠标是否可进入到 tooltip 中\",\n          label: \"基本用法\"\n        },\n        sample2: {\n          description: \"使用 light 主题，通过 tooltip-config 参数配置\",\n          label: \"使用主题\"\n        }\n      },\n      Radio: {\n        label: \"单选框\",\n        sample1: {\n          description: \"单选表格，用户手动选中时会触发事件 radio-change\",\n          label: \"单选表格\"\n        },\n        sample2: {\n          description: \"还可以通过 checkMethod 方法控制 CheckBox 是否允许用户手动选中，还可以配置 labelField 列显示属性<br>\\n      禁止用户手动选中，但是可以通过函数式调用强制选中，该功能对于某些场景需要强制选中指定行时非常有用\",\n          label: \"禁用选项\"\n        },\n        sample3: {\n          description: \"默认选中，通过指定 checkRowKey 设置默认选中的行，指定默认值需要有 row-id\",\n          label: \"默认选中选项\"\n        },\n        sample4: {\n          description: \"使用 highlight-current-row 高亮方式\",\n          label: \"行选中模式\"\n        },\n        sample5: {\n          description: \"两种方式混合使用\",\n          label: \"两种方式混合使用\"\n        },\n        sample6: {\n          description: \"当然也可以两种方式同时使用\",\n          label: \"两种方式同时使用\"\n        }\n      },\n      Resizable: {\n        label: \"列宽拖动\",\n        sample1: {\n          description: \"通过设置 resizable 属性启用列宽拖动功能\",\n          label: \"基本用法\"\n        },\n        sample2: {\n          description: \"横向滚动条\",\n          label: \"滚动条变化\"\n        },\n        sample3: {\n          description: \"固定左列宽拖动（固定左不允许超过表格右边距）\",\n          label: \"固定左列宽拖动\"\n        },\n        sample4: {\n          description: \"固定右列宽拖动（固定右不允许超过表格左边距）\",\n          label: \"固定右列宽拖动\"\n        },\n        sample5: {\n          description: \"左右固定列宽拖动（固定左不允许超过固定右，固定右不允许超过固定左）\",\n          label: \"左右固定列宽拖动\"\n        },\n        sample6: {\n          description: \"分组表头拖动（只允许列拖动，不允许分组标题拖动）\",\n          label: \"分组表头拖动\"\n        },\n        sample7: {\n          description: \"左右固定列的分组表头拖动（只允许列拖动，不允许分组标题拖动）\",\n          label: \"左右固定列的分组表头拖动\"\n        }\n      },\n      Selection: {\n        label: \"复选框\",\n        sample1: {\n          description: \"多选表格，用户手动勾选时会触发事件 select-change\",\n          label: \"多选表格\"\n        },\n        sample2: {\n          description: \"还可以通过 checkMethod 方法控制 CheckBox 是否允许用户手动勾选，还可以配置 labelField 列显示属性<br>\\n      禁止用户手动勾选，但是可以通过函数式调用强制勾选，该功能对于某些场景需要强制勾选指定行时非常有用\",\n          label: \"禁用选项\"\n        },\n        sample3: {\n          description: \"多选表格，通过配置 trigger 设置触发源，使用渲染最快的 checkField 属性绑定方式\",\n          label: \"属性绑定\"\n        },\n        sample4: {\n          description: \"默认选中，通过指定 checkRowKeys 设置默认选中的行，指定默认值需要有 row-id\",\n          label: \"默认选中选项\"\n        },\n        sample5: {\n          description: \"通过 checkStrictly 设置父子节点不互相关联，启用后 showHeader 默认为 false\",\n          label: \"父子节点不互相关联\"\n        },\n        sample6: {\n          description: \"多选可单选同时使用\",\n          label: \"混合单选\"\n        },\n        sample7: {\n          description: \"不仅如此，还可以多种方式混合使用\",\n          label: \"多种混合方式\"\n        }\n      },\n      Size: {\n        label: \"尺寸\",\n        sample1: {\n          description: \"可以设置大小尺寸：medium / small / mini 默认 48px 高度\",\n          label: \"默认高度\"\n        },\n        sample2: {\n          description: \"设置大小为 medium，默认 44px 高度\",\n          label: \"medium\"\n        },\n        sample3: {\n          description: \"设置大小为 small，默认 40px 高度\",\n          label: \"small\"\n        },\n        sample4: {\n          description: \"设置大小为 mini，默认 36px 高度\",\n          label: \"mini\"\n        }\n      },\n      Sort: {\n        label: \"排序\",\n        sample1: {\n          description: \"通过给需要排序功能的列加上 sortable 属性可以支持排序，还可以通过设置 sort-by 多字段进行排序<br>\\n      如果是服务端排序，只需加上 remote-sort 和 sort-change 事件就可以实现\",\n          label: \"基本功能\"\n        },\n        sample2: {\n          description: \"配置 sort-by 多个字段组合排序\",\n          label: \"组合排序\"\n        },\n        sample3: {\n          description: \"配置 sort-method 自定义排序\",\n          label: \"自定义排序\"\n        },\n        sample4: {\n          description: \"点击表头排序，可以通过配置 trigger 设置触发源\",\n          label: \"设置触发源\"\n        }\n      },\n      Stripe: {\n        label: \"斑马线条纹\",\n        sample1: {\n          description: \"斑马线条纹<br><span class=\\\"red\\\">（注：在可编辑表格场景下，临时插入的数据不会有斑马纹样式）</span>\",\n          label: \"基本功能\"\n        },\n        sample2: {\n          description: \"使用 highlight-hover-row 属性启用 hover 行高亮\",\n          label: \"hover行高亮\"\n        }\n      },\n      Style: {\n        label: \"单元格样式\",\n        sample1: {\n          description: \"行的样色、单元格样式，表头的样式、表尾的样式、全部都可以完全自定义<br>\\n      <span class=\\\"red\\\">（注：当自定义样式之后可能会覆盖表格的样式，比如选中行..等，记得自行处理好相关样式）</span>\",\n          label: \"自定义样式\"\n        },\n        sample2: {\n          description: \"通过 cell-click 事件点击改变颜色\",\n          label: \"点击改变样式\"\n        }\n      }\n    },\n    edit: {\n      label: \"可编辑表格\",\n      AutoClear: {\n        label: \"关闭自动清除\",\n        sample1: {\n          description: \"设置 edit-config={trigger: 'manual', mode: 'row', autoClear: false}，还可以通过设置 autoClear 关闭默认的单元格清除激活行为\",\n          label: \"基本用法\"\n        }\n      },\n      CascadingSelect: {\n        label: \"联动下拉选项\",\n        sample1: {\n          description: \"实现简单的级联下拉选项列表\",\n          label: \"基本用法\"\n        }\n      },\n      CellDisable: {\n        label: \"禁用编辑 cell\",\n        sample1: {\n          description: \"设置 edit-config 的 activeMethod 方法判断单元格是否禁用\",\n          label: \"列模式\"\n        },\n        sample2: {\n          description: \"禁用第二行编辑\",\n          label: \"行模式\"\n        }\n      },\n      CellValid: {\n        label: \"数据校验 cell\",\n        sample1: {\n          description: \"通过调用 validate 函数校验数据，edit-rules 校验规则配置\",\n          label: \"基本用法\"\n        }\n      },\n      Click: {\n        label: \"点击触发\",\n        sample1: {\n          description: \"设置 edit-config={trigger: 'click', mode: 'cell'} 启用单元格点击编辑的功能<br><span class=\\\"red\\\">注：原生的 select 只支持字符串的 value</span>\",\n          label: \"单元格编辑\"\n        },\n        sample2: {\n          description: \"设置 edit-config={trigger: 'click', mode: 'row'} 启用行点击编辑的功能\",\n          label: \"行编辑\"\n        }\n      },\n      DBLClick: {\n        label: \"双击触发\",\n        sample1: {\n          description: \"设置 edit-config={trigger: 'dblclick', mode: 'cell'} 启用单元格双击编辑的功能<br><span class=\\\"red\\\">注：原生的 select 只支持字符串的 value</span>\",\n          label: \"单元格编辑\"\n        },\n        sample2: {\n          description: \"设置 edit-config={trigger: 'dblclick', mode: 'row'} 启用行双击编辑的功能\",\n          label: \"行编辑\"\n        }\n      },\n      Events: {\n        label: \"事件绑定\",\n        sample1: {\n          description: \"通过 events 自定义目标组件的事件<br><span class=\\\"red\\\">（注：只有目标组件支持的事件才有效）</span>\",\n          label: \"基本用法\"\n        }\n      },\n      Expand: {\n        label: \"展开行\",\n        sample1: {\n          description: \"展开行\",\n          label: \"基本用法\"\n        }\n      },\n      Footer: {\n        label: \"表尾合计\",\n        sample1: {\n          description: \"统计编辑列的表尾合计，对于某些场景下如果需要频繁计算的可以手动调用 updateFooter 函数<br>\\n      <span class=\\\"red\\\">（注：footer-method 合计的逻辑都是自行实现的，该示例仅供参考）</span>\",\n          label: \"基本用法\"\n        }\n      },\n      FooterImmediately: {\n        label: \"表尾合计 + 实时更新\",\n        sample1: {\n          description: \"统计编辑列的表尾合计，数据发生变化时实时统计<br>如果是原生的渲染器，可以设置 immediate 属性和相关事件去实时更新\",\n          label: \"基本用法\"\n        }\n      },\n      ForceCellValid: {\n        label: \"数据校验 cell + 强制锁定\"\n      },\n      ForceRowValid: {\n        label: \"数据校验 row + 强制锁定\"\n      },\n      Full: {\n        label: \"完整功能\"\n      },\n      Insert: {\n        label: \"插入数据\",\n        sample1: {\n          description: \"调用 insert、insertAt 函数插入临时数据<br><span class=\\\"red\\\">注：原生的 select 只支持字符串的 value</span>\",\n          label: \"基本用法\"\n        }\n      },\n      Keyboard: {\n        label: \"键盘导航\",\n        sample1: {\n          description: \"设置 mouse-config={selected: true} 启用单元格选中功能<br>\\n      设置 keyboard-config={isArrow: true, isDel: true, isTab: true, isEdit: true} 启用按键功能及任意键编辑功能，方向键、Tab 键、Esc 键、F2 键、Del、Back 键<br>\\n      <span class=\\\"red\\\">（注：isEdit 启用任意键覆盖式编辑的）</span>\",\n          label: \"基本用法\"\n        }\n      },\n      Manual: {\n        label: \"手动触发\",\n        sample1: {\n          description: \"设置 edit-config={trigger: 'manual', mode: 'row'} 启用行编辑的功能<br><span class=\\\"red\\\">注：原生的 select 只支持字符串的 value</span>\",\n          label: \"基本用法\"\n        }\n      },\n      Menu: {\n        label: \"快捷菜单\",\n        sample1: {\n          description: \"通过快捷菜单增删改查\",\n          label: \"基本用法\"\n        }\n      },\n      Remove: {\n        label: \"删除数据\",\n        sample1: {\n          description: \"调用 remove 删除指定行数据\",\n          label: \"基本用法\"\n        }\n      },\n      Revert: {\n        label: \"还原数据\",\n        sample1: {\n          description: \"调用 revertData 还原数据\",\n          label: \"基本用法\"\n        }\n      },\n      RowDisable: {\n        label: \"禁用编辑 row\",\n        sample1: {\n          description: \"设置 edit-config 的 activeMethod 方法判断单元格是否禁用，例如：限制第一行不允许编辑\",\n          label: \"activeMethod \"\n        },\n        sample2: {\n          description: \"配合  edit-actived 事件，实现行编辑中对列的权限控制，例如：限制 age 小于 27 的与 name 为 'a' 开头的列禁止编辑\",\n          label: \"edit-actived \"\n        }\n      },\n      RowValid: {\n        label: \"数据校验 row\",\n        sample1: {\n          description: \"通过调用 validate 函数校验数据，edit-rules 校验规则配置\",\n          label: \"基本用法\"\n        }\n      },\n      Select: {\n        label: \"选中内容\",\n        sample1: {\n          description: \"单元格点击编辑，还可以通过 autoselect 开启默认选中\",\n          label: \"基本用法\"\n        }\n      },\n      Span: {\n        label: \"合并行或列\",\n        sample1: {\n          description: \"可编辑的合并行<br><span class=\\\"red\\\">（注：span-method 合并的逻辑都是自行实现的，该示例仅供参考）</span>\",\n          label: \"基本用法\"\n        }\n      },\n      Status: {\n        label: \"编辑状态\",\n        sample1: {\n          description: \"设置 edit-config={trigger: 'click', mode: 'cell', showStatus: true} 开启编辑状态显示功能<br>\\n      对于某些需要局部保存的场景，可以在数据保存完成后调用 reloadRow 方法加载行数据并恢复到初始状态\",\n          label: \"基本用法\"\n        }\n      },\n      Template: {\n        label: \"自定义模板\",\n        sample1: {\n          description: \"使用 edit slot 自定义渲染任意 Vue 组件\",\n          label: \"基本用法\"\n        }\n      },\n      UniqueSelect: {\n        label: \"唯一下拉选项\",\n        sample1: {\n          description: \"实现简单的唯一下拉选项列表\",\n          label: \"基本用法\"\n        }\n      }\n    },\n    grid: {\n      label: \"高级表格\",\n      Basic: {\n        label: \"基础\",\n        sample1: {\n          description: \"<grid-api-link name=\\\"vue-xgrid\\\"></grid-api-link> 动态化表格，解决动态数据一切需求（动态列、动态数据、动态个性化...）<br>\\n      渲染性能对比：<grid-api-link name=\\\"vue-xgrid\\\"></grid-api-link>（性能最优，不需要为每一列创建实例） > <table-api-link name=\\\"vue-xtable\\\"></table-api-link>（性能略差，需要为每一列创建实例）<br>\\n      通过 columns 动态配置列信息，这非常适用于动态渲染的场景，完全使用数据进行配置\",\n          label: \"基本用法\"\n        }\n      },\n      CustomToolbar: {\n        label: \"自定义工具栏\",\n        sample1: {\n          description: \"工具栏：通过 toolbar 属性配置，使用 slot 自定义模板\",\n          label: \"基本用法\"\n        }\n      },\n      Dynamic: {\n        label: \"实现可配置动态列\",\n        sample1: {\n          description: \"实现可配置动态列、数据代理、工具栏、增删改查\",\n          label: \"可配置动态列\"\n        },\n        sample2: {\n          description: \"级联动态列渲染，可以非常简单的实现功能复杂的可配置动态列\",\n          label: \"级联动态列\"\n        }\n      },\n      Edit: {\n        label: \"可编辑\",\n        sample1: {\n          description: \"可编辑表格\",\n          label: \"基本用法\"\n        }\n      },\n      Footer: {\n        label: \"表尾合计\",\n        sample1: {\n          description: \"底部合计\",\n          label: \"基本用法\"\n        }\n      },\n      FullEdit: {\n        label: \"完整功能\",\n        sample1: {\n          description: \"查询代理、服务端排序代理、服务端筛选代理、分页代理、增删改查<br>\\n      对于分页场景下，如果想要保留选中状态，可以通过设置 checkbox-config 的 reserve 属性<br>\\n      还可以通过 checkMethod 设置个性化列禁止勾选<br>\\n      由 <grid-api-link name=\\\"vue-xgrid\\\"></grid-api-link> 代理数据转换，只需要配置好数据源即可；非常简单就可以渲染一个表格，从重复写冗余的代码中解放出来\",\n          label: \"完整功能\"\n        }\n      },\n      FullQuery: {\n        label: \"完整查询\",\n        sample1: {\n          description: \"数据代理、固定列、服务端排序、服务端筛选、服务端分页，对于分页场景下，如果想要保留选中状态，可以通过设置 checkbox-config 的 reserve 属性\",\n          label: \"完整查询\"\n        }\n      },\n      Group: {\n        label: \"表头分组\",\n        sample1: {\n          description: \"分组表头\",\n          label: \"基本用法\"\n        }\n      },\n      Menu: {\n        label: \"快捷菜单\",\n        sample1: {\n          description: \"快捷菜单，实现对按钮的控制，通过 visibleMethod 和 visible | disabled 属性来控制菜单选项的操作权限\",\n          label: \"基本用法\"\n        }\n      },\n      Page: {\n        label: \"分页\",\n        sample1: {\n          description: \"数据代理：通过配置 proxy-config 启用数据代理将不需要再主动发送请求，由表格代理增删改查的相关调用逻辑，只需要配好对应的接口即可自动渲染<br>\\n      响应结果默认必须是数组，非数组情况下可以通过 props 修改\",\n          label: \"基本用法\"\n        }\n      },\n      PageProxy: {\n        label: \"数据代理 + 分页\",\n        sample1: {\n          description: \"数据代理：通过配置 proxy-config 启用数据代理将不需要再主动发送请求，由表格代理增删改查的相关调用逻辑，只需要配好对应的接口即可自动渲染<br>\\n      通过配置 pager-config 参数开启分页功能，对于分页场景下，如果要实现分页动态序号，可以通过 start-index 属性设置起始值<br>\\n      分页情况下则默认读取响应结果中 page.total 和 result 属性，可以通过 props 修改\",\n          label: \"基本用法\"\n        }\n      },\n      Proxy: {\n        label: \"数据代理\",\n        sample1: {\n          description: \"数据代理：通过配置 proxy-config 参数，默认直接读取结果，响应结果应该为数组；可以通过 props 修改默认值，由 pager-config 代理数据转换，只需要配置好数据源即可；非常简单就可以渲染一个表格，从重复写冗余的代码中解放出来\",\n          label: \"基本用法\"\n        }\n      },\n      Reverse: {\n        label: \"反转表格\",\n        sample1: {\n          description: \"反转表格，只需要将 columns 和 data 数据进行反转\",\n          label: \"基本用法\"\n        },\n        sample2: {\n          description: \"更多配置\",\n          label: \"更多\"\n        }\n      },\n      Span: {\n        label: \"合并行或列\"\n      },\n      Template: {\n        label: \"自定义模板\",\n        sample1: {\n          description: \"使用自定义模板渲染，通过 slots 属性编写 <a class=\\\"link\\\" href=\\\"https://cn.vuejs.org/v2/guide/render-function.html#JSX\\\" target=\\\"_blank\\\">JSX</a> 模板或 <a class=\\\"link\\\" href=\\\"https://cn.vuejs.org/v2/guide/render-function.html#%E8%99%9A%E6%8B%9F-DOM\\\" target=\\\"_blank\\\">VNode</a><br>\\n      列：<br>\\n      default：自定义内容模板（提前格式化好数据 > formatter > slots）<br>\\n      header：自定义表头模板<br>\\n      filter：自定义筛选模板（建议使用<router-link :to=\\\"{name: 'RendererAPI'}\\\">渲染器</router-link>，可以更好的复用）<br>\\n      edit：自定义可编辑模板（建议使用<router-link :to=\\\"{name: 'RendererAPI'}\\\">渲染器</router-link>，可以更好的复用）<br>\\n      工具栏：<br>\\n      buttons：自定义按钮模板\",\n          label: \"基本用法\"\n        }\n      },\n      Toolbar: {\n        label: \"增删改查 + 工具栏\",\n        sample1: {\n          description: \"工具栏：通过 toolbar 属性配置，支持显示/隐藏列、列宽拖动状态的保存功能，可以通过 storage 开启将列个性化的设置状态保存到本地\",\n          label: \"基本用法\"\n        }\n      },\n      Tree: {\n        label: \"基础树\",\n        sample1: {\n          description: \"树表格、数据代理\",\n          label: \"基本用法\"\n        }\n      },\n      TreeEdit: {\n        label: \"树 + 增删改查 + 工具栏\",\n        sample1: {\n          description: \"树表格、增删改查、工具栏，可以通过 storage 开启将列个性化的设置状态保存到本地\",\n          label: \"基本用法\"\n        }\n      }\n    },\n    interceptor: {\n      label: \"(进阶)事件拦截器\",\n      API: {\n        label: \"API\",\n        sample1: {\n          description: \"通过内置事件拦截器可以很容易的处理表格事件行为与第三方组件的兼容性；比如这些插件 <a class=\\\"link\\\" href=\\\"https://www.npmjs.com/package/vue-xtable-plugin-element\\\" target=\\\"_blank\\\">vue-xtable-plugin-element</a>\"\n        },\n        sample2: {\n          description: \"例子：比如自定义渲染某个组件后，由于弹出层面板不在单元格之内，按键事件的交互行为存在冲突，对于这些场景就很有用了\"\n        }\n      }\n    },\n    menus: {\n      label: \"快捷菜单\",\n      API: {\n        label: \"API\",\n        sample1: {\n          description: \"你可以很简单的将常用的快捷菜单注册成全局可复用的\"\n        }\n      }\n    },\n    optimize: {\n      Edit: {\n        label: \"\"\n      },\n      Scroller: {\n        label: \"\"\n      }\n    },\n    renderer: {\n      label: \"（进阶）渲染器\",\n      API: {\n        label: \"API\",\n        sample1: {\n          description: \"通过渲染器你可以轻松实现筛选、单元格的复用，可以根据不同业务实现不一样的渲染器，这个功能将非常实用；比如这些插件 <a class=\\\"link\\\" href=\\\"https://www.npmjs.com/package/vue-xtable-plugin-element\\\" target=\\\"_blank\\\">vue-xtable-plugin-element</a>\"\n        },\n        sample2: {\n          description: \"<span class=\\\"orange\\\">渲染器：抽象一切可复用的功能（类似组件的概念），实现非常简单的可配置化；</span><br>\\n      <span class=\\\"orange\\\">插槽：自定义程度高，但需要重复写冗余代码，比较繁琐；</span><br>\\n      <span class=\\\"red\\\">建议通过 JSX 实现更加简单，可维护性更好</span>\"\n        }\n      },\n      Default: {\n        label: \"默认的渲染器\",\n        sample1: {\n          description: \"默认的渲染器 cell-render<br>\\n      配置参数：<br>\\n      renderDefault (h, cellRender, { row, rowIndex, $rowIndex, column, columnIndex, $columnIndex }, context) 渲染函数\"\n        }\n      },\n      Edit: {\n        label: \"可编辑渲染器\",\n        sample1: {\n          description: \"可编辑渲染器 edit-render<br>\\n      默认支持原生的：input、textarea、select<br>\\n      配置参数：<br>\\n      autofocus 自动聚焦的类名<br>\\n      renderEdit (h, editRender, { row, rowIndex, $rowIndex, column, columnIndex, $columnIndex }, context) 编辑的渲染函数<br>\\n      renderCell (h, editRender, { row, rowIndex, $rowIndex, column, columnIndex, $columnIndex }, context) 显示的渲染函数\"\n        }\n      },\n      Filter: {\n        label: \"筛选渲染器\",\n        sample1: {\n          description: \"筛选渲染器 filter-render<br>\\n      默认支持原生的：input、textarea、select<br>\\n      配置参数：<br>\\n      renderFilter (h, filterRender, { column, columnIndex, $columnIndex }, context) 渲染函数<br>\\n      filterMethod ({ option, row, column }) 筛选函数\"\n        }\n      }\n    },\n    scroll: {\n      label: \"大数据表格\",\n      CellValid: {\n        label: \"数据校验 cell\",\n        sample1: {\n          description: \"虚拟滚动渲染，可编辑表格<br><span class=\\\"red\\\">当数据量非常大时，由于需要进行大量数据运算，所以数据校验或者获取数据...等函数执行会相对耗时</span>\",\n          label: \"基本用法\"\n        }\n      },\n      Edit: {\n        label: \"可编辑\",\n        sample1: {\n          description: \"虚拟滚动渲染，可编辑表格<br><span class=\\\"red\\\">当数据量非常大时，由于需要进行大量数据运算，所以数据校验或者获取数据...等函数执行会相对耗时</span>\",\n          label: \"基本用法\"\n        }\n      },\n      ForceCellValid: {\n        label: \"数据校验 cell + 强制锁定\"\n      },\n      ForceRowValid: {\n        label: \"数据校验 row + 强制锁定\"\n      },\n      FullPartialLoad: {\n        label: \"完整的局部加载\",\n        sample1: {\n          description: \"虚拟滚动渲染，更加复杂局部递增数据、局部递增列、固定列<br>\",\n          label: \"基本用法\"\n        }\n      },\n      Highlight: {\n        label: \"键盘移动高亮行\",\n        sample1: {\n          description: \"虚拟滚动渲染，键盘移动高亮行，设置 keyboard-config={isArrow: true} 启用方向键功能\",\n          label: \"基本用法\"\n        }\n      },\n      Keyboard: {\n        label: \"键盘导航\",\n        sample1: {\n          description: \"虚拟滚动渲染，全键盘操作\",\n          label: \"基本用法\"\n        }\n      },\n      PartialLoad: {\n        label: \"局部加载\",\n        sample1: {\n          description: \"虚拟滚动渲染，局部递增数据<br>\",\n          label: \"基本用法\"\n        }\n      },\n      RowValid: {\n        label: \"数据校验 row\",\n        sample1: {\n          description: \"虚拟滚动渲染，可编辑表格<br><span class=\\\"red\\\">当数据量非常大时，由于需要进行大量数据运算，所以数据校验或者获取数据...等函数执行会相对耗时</span>\",\n          label: \"基本用法\"\n        }\n      },\n      Scroll: {\n        label: \"虚拟滚动\",\n        sample1: {\n          description: \"<span class=\\\"orange\\\">虚拟滚动的取舍：牺牲提前编译数据的耗时，用来换取使用时的绝对流畅</span><br>\\n      如果列较多请使用 <grid-api-link name=\\\"vue-xgrid\\\"></grid-api-link>，使渲染性能达到最优，虚拟滚动只会渲染可视区域的数据，对于海量数据的性能提升非常大<br>\\n      数据超大情况下必须使用：show-overflow，show-header-overflow 参数<br>\\n      相关参数说明 {seq: 序号, $rowIndex: 获取渲染中的行索引, rowIndex: 获取真实的行索引, row: 获取行数据, column: 获取列配置, columnIndex: 获取真实列索引，$columnIndex:获取渲染中的列索引}\",\n          label: \"基本用法\"\n        },\n        sample2: {\n          label: \"配置调优\",\n          description: \"手动调优，默认自动优化（<span class=\\\"red\\\">注：默认的优化一般情况下是最流畅的，如果某些场景下需要手动调优就自行去更改参数即可，至于流不流畅取决于渲染参数</span>）<br>\\n      通过指定 optimization ：{scrollX,scrollY} 适合的参数可以手动调优<br>\\n      数据超大情况下必须使用：show-overflow，show-header-overflow 参数\"\n        }\n      },\n      ScrollCols: {\n        label: \"1 万行 1 万列\",\n        sample1: {\n          description: \"虚拟滚动渲染，加载 1 万行 1 万列<br>\\n      大数据不建议使用双向绑定的 <table-api-link name=\\\"data\\\"></table-api-link> 属性（vue 监听会大数据会短暂的卡顿），建议使用 loadData/loadColumn 函数<br>\\n      <span class=\\\"red\\\">注意：如果要启用横向虚拟滚动，不支持分组表头</span>\",\n          label: \"基本用法\"\n        }\n      },\n      ScrollFullCols: {\n        label: \"10 万行 1 万列 + 固定列\",\n        sample1: {\n          description: \"虚拟滚动渲染，加载 10 万行 1 万列，左右固定列<br>\\n      大数据不建议使用双向绑定的 <table-api-link name=\\\"data\\\"></table-api-link> 属性（vue 监听会大数据会短暂的卡顿），建议使用 loadData/loadColumn 函数<br>\\n      对于多选 type=checkbox 当数据量海量时应该绑定 checkField 属性渲染速度更快<br>\\n      <span class=\\\"red\\\">注意：如果要启用横向虚拟滚动，不支持分组表头</span>\",\n          label: \"基本用法\"\n        }\n      },\n      ScrollFullRows: {\n        label: \"10 万行 + 固定列\",\n        sample1: {\n          description: \"虚拟滚动渲染，加载 10 万行，左右固定列<br>\\n      大数据不建议使用双向绑定的 data 属性（vue 监听会大数据会短暂的卡顿），建议使用 loadData/reloadData 函数<br>\\n      对于多选 type=checkbox 当数据量海量时应该绑定 checkField 属性渲染速度更快<br>\\n      <span class=\\\"red\\\">注意：如果要启用纵向虚拟滚动，所有的行高必须一致，否则无法兼容</span>\",\n          label: \"基本用法\"\n        }\n      },\n      ScrollRows: {\n        label: \"1 万行\",\n        sample1: {\n          description: \"虚拟滚动渲染，加载 1 万行<br>\\n      大数据不建议使用双向绑定的 <table-api-link name=\\\"data\\\"></table-api-link> 属性（vue 监听会大数据会短暂的卡顿），建议使用 loadData/reloadData 函数<br>\\n      data 和 loadData/reloadData 不应该同时使用，请根据数据量决定使用哪种方式，保证一致性<br>\\n      <span class=\\\"red\\\">注意：如果要启用纵向虚拟滚动，所有的行高必须一致，否则无法兼容</span>\",\n          label: \"基本用法\"\n        }\n      },\n      Template: {\n        label: \"自定义模板\",\n        sample1: {\n          description: \"使用自定义模板渲染，通过 slots 属性编写 <a class=\\\"link\\\" href=\\\"https://cn.vuejs.org/v2/guide/render-function.html#JSX\\\" target=\\\"_blank\\\">JSX</a> 模板或 <a class=\\\"link\\\" href=\\\"https://cn.vuejs.org/v2/guide/render-function.html#%E8%99%9A%E6%8B%9F-DOM\\\" target=\\\"_blank\\\">VNode</a><br>\\n      列：<br>\\n      &nbsp;&nbsp;default：自定义内容模板（提前格式化好数据 > formatter > slots）<br>\\n      &nbsp;&nbsp;header：自定义表头模板<br>\\n      &nbsp;&nbsp;filter：自定义筛选模板（建议使用<router-link :to=\\\"{name: 'RendererAPI'}\\\">渲染器</router-link>，可以更好的复用）<br>\\n      &nbsp;&nbsp;edit：自定义可编辑模板（建议使用<router-link :to=\\\"{name: 'RendererAPI'}\\\">渲染器</router-link>，可以更好的复用）<br>\\n      工具栏：<br>\\n      &nbsp;&nbsp;buttons：自定义按钮模板<br>\\n      <span class=\\\"red\\\">注意：请处理好单元格显示的内容，虚拟滚动无法支持动态行高</span>\",\n          label: \"基本用法\"\n        }\n      },\n      Tree: {\n        label: \"虚拟树\",\n        sample1: {\n          description: \"虚拟树封装原理可供参考：实现支持大数据的虚拟树表格，基于表格组件很容易就可以封装一个高性能的虚拟树\",\n          label: \"基本用法\"\n        }\n      }\n    },\n    tree: {\n      label: \"树表格\",\n      Basic: {\n        label: \"基础\",\n        sample1: {\n          description: \"树表格，通过配置 tree-config 和指定列 tree-node 属性来开启树表格，还可以通过 trigger 指定触发方式\",\n          label: \"基本用法\"\n        },\n        sample2: {\n          description: \"默认展开所有树节点，通过 expand-config 参数设置默认展开树节点\",\n          label: \"默认展开\"\n        }\n      },\n      CellValid: {\n        label: \"数据校验 cell\",\n        sample1: {\n          description: \"通过调用 validate 函数校验数据，edit-rules 校验规则配置\",\n          label: \"基本用法\"\n        }\n      },\n      Edit: {\n        label: \"可编辑\",\n        sample1: {\n          description: \"可编辑树表格，还可以通过手动调用展开收起<br><span class=\\\"red\\\">注：树形结构默认不支持 insert 相关方法，如果要往子节点插入数据，你可以把表格当成一个子组件进行封装，自行操作数据源即可</span>\",\n          label: \"基本用法\"\n        }\n      },\n      Expand: {\n        label: \"展开行\",\n        sample1: {\n          description: \"树表格与展开行同时使用，非常简单就能实现很复杂的树形展开行\",\n          label: \"基本用法\"\n        }\n      },\n      Fixed: {\n        label: \"固定列\",\n        sample1: {\n          description: \"树表格，固定列\",\n          label: \"基本用法\"\n        }\n      },\n      ForceCellValid: {\n        label: \"数据校验 cell + 强制锁定\"\n      },\n      ForceRowValid: {\n        label: \"数据校验 row + 强制锁定\"\n      },\n      FullEdit: {\n        label: \"可编辑\",\n        sample1: {\n          description: \"可编辑树表格\",\n          label: \"基本用法\"\n        }\n      },\n      GroupBy: {\n        label: \"分组统计\",\n        sample1: {\n          description: \"基于树表格实现分组统计\",\n          label: \"基本用法\"\n        }\n      },\n      Highlight: {\n        label: \"键盘移动高亮行\",\n        sample1: {\n          description: \"键盘移动高亮行，设置 keyboard-config={isArrow: true} 启用方向键功能\",\n          label: \"基本用法\"\n        }\n      },\n      Insert: {\n        label: \"插入数据\",\n        sample1: {\n          description: \"插入数据，简单的实现示例<br><span class=\\\"red\\\">注：树形结构默认不支持 insert 相关方法，如果要往子节点插入数据，你可以把表格当成一个子组件进行封装，自行操作数据源即可</span>\",\n          label: \"基本用法\"\n        }\n      },\n      Keyboard: {\n        label: \"键盘导航\"\n      },\n      Lazy: {\n        label: \"懒加载\",\n        sample1: {\n          description: \"树表格的懒加载，通过配置 tree-config={hasLazy 和 lazyLoad} 加载方法来开启树形懒加载\",\n          label: \"基本用法\"\n        }\n      },\n      Menu: {\n        label: \"快捷菜单\",\n        sample1: {\n          description: \"快捷菜单操作<br><span class=\\\"red\\\">注：树形结构默认不支持 insert 相关方法，如果要往子节点插入数据，你可以把表格当成一个子组件进行封装，自行操作数据源即可</span>\",\n          label: \"基本用法\"\n        }\n      },\n      Radio: {\n        label: \"单选框\",\n        sample1: {\n          description: \"使用 highlight-current-row 方式\",\n          label: \"高亮行方式\"\n        },\n        sample2: {\n          description: \"使用 radio 方式\",\n          label: \"单选框方式\"\n        },\n        sample3: {\n          description: \"当然也可以两种方式同时使用\",\n          label: \"混合使用\"\n        }\n      },\n      RowValid: {\n        label: \"数据校验 row\",\n        sample1: {\n          description: \"通过调用 validate 函数校验数据，edit-rules 校验规则配置\",\n          label: \"基本用法\"\n        }\n      },\n      Selection: {\n        label: \"复选框\",\n        sample1: {\n          description: \"多选树表格\",\n          label: \"基本用法\"\n        },\n        sample2: {\n          description: \"默认选中，通过指定 checkRowKeys 设置默认选中的行\",\n          label: \"默认选中\"\n        },\n        sample3: {\n          description: \"通过 checkStrictly 设置父子节点不互相关联\",\n          label: \"父子不关联\"\n        },\n        sample4: {\n          description: \"还可以通过 checkMethod 方法控制 CheckBox 是否允许用户手动勾选，还可以配置 labelField 列显示属性，禁止用户手动勾选，但是可以通过函数式调用强制勾选，该功能对于某些场景需要强制勾选指定行时非常有用\",\n          label: \"允许勾选\"\n        }\n      },\n      Span: {\n        label: \"合并行或列\"\n      },\n      Template: {\n        label: \"自定义模板\",\n        sample1: {\n          description: \"树表格，使用自定义模板渲染\",\n          label: \"基本用法\"\n        }\n      },\n      Toolbar: {\n        label: \"增删改查 + 工具栏\",\n        sample1: {\n          description: \"增删改查、工具栏<br><span class=\\\"red\\\">注：树形结构默认不支持 insert 相关方法，如果要往子节点插入数据，你可以把表格当成一个子组件进行封装，自行操作数据源即可</span>\",\n          label: \"基本用法\"\n        }\n      }\n    }\n  },\n  mobileInstallDemo: {\n    label: '快速上手',\n    description: '',\n    detail1:{\n      label: '引入',\n      description: '在页面头部VIY PC版代码后引入 (<a href=\"https://spring21cn.github.io/vue-component/example/vue-mobile/lib.zip\">Get Plugin</a>)',\n    },\n  },\n  scrollviewDemo: {\n    label: 'ScrollView 滚动列表',\n    description: '用于模拟原生的滚动区域，并支持下拉刷新和加载更多',\n\t  defatltText:'默认',\n    customText:'自定义',\n    detail2:{\n      label: '使用指南',\n      description1: 'ScrollViewRefresh为组件库内置的下拉刷新组件，仅用于作为视觉展示，需在插槽refresh中使用，下拉刷新组件也可自定义',\n      description2: 'ScrollViewMore为组件库内置的加载更多组件，仅用于作为视觉展示，需在插槽more中使用，加载更多组件也可自定义',\n      description3: '组件容器需具有高度，否则会出现无法滚动或回弹问题。更多使用的常见问题请查看附录'\n    },\n\t  samples1: {\n        label: '基础用法',\n        description: '实现纵向滚动',\n\t  },\n\t  samples2: {\n        label: '横向滚动',\n        description: '',\n\t  },\n\t  samples3: {\n        label: '下拉刷新',\n        description: '',\n\t  },\n\t  samples4: {\n        label: '上拉加载',\n        description: '',\n\t  },\n\t  samples5: {\n        label: '粘性标题',\n        description: '',\n\t  },\n\t  samples6: {\n        label: '配合TabBar',\n        description: '',\n\t  },\n\t  samples7: {\n        label: '手动初始化',\n        description: '',\n\t  },\n\t  attrsinfo: {\n       row1column2: '水平滚动',\n\t     row2column2: '垂直滚动',\n\t     row3column2: '可回弹',\n\t     row4column2: '内容发生变化时自动重置滚动区域尺寸',\n\t     row5column2: '手动初始化',\n\t     row6column2: '触发到达底部的提前量',\n\t     row7column2: '初始化时立即触发是否到达底部检查',\n\t     row8column2: '触发滚动的角度值范围',\n\t     row9column2: '防止浏览器默认滚动',\n\t  },\n\t  refreshAttrs: {\n       row1column2: '距离顶部的距离，输入值仅为数字',\n\t     row2column2: '释放刷新的状态',\n\t     row3column2: '刷新状态',\n\t     row4column2: '下拉刷新文本内容',\n\t     row4column5: '下拉刷新',\n\t     row5column2: '释放刷新文本内容',\n\t     row5column5: '释放刷新',\n\t     row6column2: '刷新中的文本内容',\n\t     row6column5: '刷新中...',\n\t     row7column2: '进度条颜色'\n\t  },\n\t  moreAttrs: {\n       row1column2: '全部已加载',\n       row2column2: '加载中的文本内容',\n\t     row2column5: '更多加载中...',\n\t     row3column2: '全部已加载的文本内容',\n\t     row3column5: '全部已加载',\n\t  },\n\t  slotInfo: {\n      default: '滚动区域内容槽。当内容更改时，需要调用reflowScroller来重置滚动区域。具体请参阅reflowScroller refresh。',\n      refresh: '下拉刷新组件槽，您可以使用slot-scoped来获得相关的滚动状态（当槽作用域不兼容时，滚动状态也可以通过事件动态设置），如下所示：',\n\t    more: '更多加载组件槽，通过实际加载情况，在事件中改变isFinished的值。默认为false。',\n\t  },\n    eventInfo: {\n      row1column2: '距左侧距离，输入值仅为数字',\n      row2column2: '距顶部距离，输入值仅为数字',\n      detail1: '参数说明',\n      detail2: '释放刷新事件',\n      detail3: '刷新事件',\n      detail4: '加载结束事件',\n    },\n    methodInfo: {\n      row1column2: '距左侧距离，输入值仅为数字',\n      row2column2: '距顶部距离，输入值仅为数字',\n      row3column2: '使用动画',\n      detail1: '初始化滚动区域。（当manual-init被设置为true时使用。）',\n      detail2: '重置滚动区域，需要在常规滚动区域的内容发生更改后调用该区域。',\n      detail3: '滚动到指定位置，以下为参数说明：',\n      detail4: '获取滚动位置，其返回对象为 {left: number, top: number}',\n      detail5: '触发下拉刷新方法',\n      detail6: '结束下拉刷新方法，，示例代码：',\n      detail7: '触发触底事件，实现上拉加载方法，示例代码：',\n      detail8: '结束上拉加载方法，示例代码：',\n    },\n  },\n  actionsheetDemo: {\n    label: 'ActionSheet 动作面板',\n    description: '',\n\t  defatltText:'默认',\n    customText:'自定义',\n    detail1:{\n      label: '介绍',\n      description: '底部弹起的模态面板，包含与当前情境相关的多个选项。'\n    },\n\t  attrsInfo: {\n      row1column2: '是否显示动作面板',\n\t    row2column2: '面板选项列表',\n\t    row3column2: '顶部标题',\n\t    row4column2: '取消按钮文字',\n\t    row5column2: '选项上方的描述信息',\n\t    row6column2: '关闭图标名称或图片链接',\n\t    row7column2: '动画时长，单位秒',\n\t    row8column2: '是否显示圆角',\n\t    row9column2: '是否显示遮罩层',\n\t    row10column2: '是否锁定背景滚动',\n\t    row11column2: '是否在显示弹层时才渲染节点',\n\t    row12column2: '是否在页面回退时自动关闭',\n\t    row13column2: '是否在点击选项后关闭',\n\t    row14column2: '是否在点击遮罩层后关闭',\n\t    row15column2: '是否开启底部安全区适配',\n\t    row16column2: '指定挂载的节点',\n\t  },\n\t   actionsInfo: {\n      description: 'actions 属性是由对象构成的数组，数组中的每个对象配置一列，对象可以包含以下值：',\n      row1column2: '标题',\n\t    row2column2: '二级标题',\n\t    row3column2: '选项文字颜色',\n\t    row4column2: '为对应列添加额外的 class',\n\t    row5column2: '是否为加载状态',\n\t    row6column2: '是否为禁用状态',\n\t  },\n\t  eventInfo: {\n      row1column2: '点击选项时触发，禁用或加载状态下不会触发',\n\t    row2column2: '点击取消按钮时触发',\n\t    row3column2: '打开面板时触发',\n\t    row4column2: '关闭面板时触发',\n\t    row5column2: '打开面板且动画结束后触发',\n\t    row6column2: '关闭面板且动画结束后触发',\n\t    row7column2: '点击遮罩层时触发',\n\t  },\n  },\n  navbarDemo: {\n    label: 'NavBar 导航栏',\n    description: '',\n\t  defatltText:'默认',\n\t  customText:'自定义',\n\t  samples1: {\n        label: '基础用法',\n        description: '',\n\t  },\n\t  samples2: {\n        label: '插槽的使用',\n        description: '使用插槽，通过插槽自定义导航栏两侧的内容',\n\t  },\n\t  attrsInfo: {\n       row1column2: '标题',\n\t     row2column2: '左侧文案',\n\t     row3column2: '右侧文案',\n\t     row4column2: '是否显示左侧箭头',\n\t     row5column2: '是否显示下边框',\n\t     row6column2: '是否固定在顶部',\n\t     row7column2: '固定顶部时，是否在标签位置生成一个等高的占位元素',\n\t     row8column2: '元素 z-index',\n\t  },\n\t   slotInfo: {\n       row1column2: '自定义标题',\n\t     row2column2: '自定义左侧区域内容',\n\t     row3column2: '自定义右侧区域内容'\n\t  },\n\t  eventInfo: {\n       row1column2: '点击左侧按钮时触发',\n\t     row2column2: '点击右侧按钮时触发'\n\t  },\n  },\n  tabbarDemo: {\n    label: 'TabBar 标签栏',\n    description: '',\n\t  defatltText:'默认',\n\t  customText:'自定义',\n\t  samples1: {\n        label: '基础用法',\n        description: '',\n\t  },\n\t  samples2: {\n        label: '通过名称匹配',\n        description: '',\n\t  },\n\t  samples3: {\n        label: '微标提示',\n        description: '',\n\t  },\n\t  samples4: {\n        label: '自定义图标',\n        description: '通过icon插槽自定义图标，可以通过 slot-scope 判断标签是否选中',\n\t  },\n\t  samples5: {\n        label: '自定义颜色+监听切换事件用法',\n        description: '',\n\t  },\n\t  samples6: {\n        label: '路由模式',\n        description: '用于搭配vue-router使用。路由模式下会匹配页面路径和标签的to属性，并自动选中对应的标签',\n\t  },\n\t  attrsInfo: {\n       row1column2: '当前选中标签的名称或索引值',\n\t     row2column2: '是否固定在底部',\n\t     row3column2: '是否显示外边框',\n\t     row4column2: '元素 z-index',\n\t     row5column2: '选中标签的颜色',\n\t     row6column2: '未选中标签的颜色',\n\t     row7column2: '固定在底部时，是否在标签位置生成一个等高的占位元素',\n       row8column2: '是否开启底部安全区适配，设置 fixed 时默认开启',\n       row9column2: '是否开启路由模式'\n\t  },\n\t  eventInfo: {\n       row1column2: '切换标签时触发',\n       row1column3: 'active: 当前选中标签的名称或索引值'\n\t  },\n\t  tabBarItemAttrsInfo: {\n       row1column2: '标签名称，作为匹配的标识符',\n       row1column5: '当前标签的索引值',\n\t     row2column2: '图标名称或图片链接',\n\t     row3column2: '是否显示图标右上角小红点',\n\t     row4column2: '图标右上角徽标的内容',\n\t     row5column2: '图标右上角徽标的内容（已废弃，请使用 badge 属性）',\n\t     row6column2: '点击后跳转的链接地址',\n\t     row7column2: '点击后跳转的目标路由对象，同 vue-router 的 to 属性',\n\t     row8column2: '是否在跳转时替换当前页面历史',\n\t  },\n\t  tabBarItemSlotInfo: {\n       row1column2: '自定义图标,其中active表示是否为选中标签'\n\t  },\n  },\n  celllayoutDemo: {\n    label: 'CellLayout 宫格',\n    description: '',\n\t  defatltText:'默认',\n    customText:'自定义',\n    detail1:{\n      label: '介绍',\n      description: '宫格可以在水平方向上把页面分隔成等宽度的区块，用于展示内容或进行页面导航'\n    },\n\t  samples1: {\n        label: '基础用法',\n        description: '默认一行展示四个格子,有边框',\n\t  },\n\t  samples2: {\n        label: '自定义列数',\n        description: '可以通过column-num自定义列数',\n\t  },\n\t  samples3: {\n        label: '自定义显示内容',\n        description: '通过插槽可以自定义格子展示的内容',\n\t  },\n\t  samples4: {\n        label: '方形格子+自定义（间距+列数）+微标提示',\n        description: '',\n\t  },\n\t  samples5: {\n        label: '页面导航',\n        description: '使用url属性注意是跳转页面的路径',\n\t  },\n\t  attrsInfo: {\n       row1column2: '列数',\n\t     row2column2: '图标大小，默认单位为px',\n\t     row3column2: '格子之间的间距，默认单位为px',\n\t     row4column2: '是否显示边框',\n\t     row5column2: '是否将格子内容居中显示',\n\t     row6column2: '是否将格子固定为正方形',\n\t     row7column2: '是否开启格子点击反馈'\n\t  },\n\t  celllayoutitemAttrsInfo: {\n       row1column2: '文字',\n\t     row2column2: '图标名称或图片链接',\n\t     row3column2: '图标颜色',\n\t     row4column2: '是否显示图标右上角小红点',\n\t     row5column2: '图标右上角徽标的内容',\n\t     row6column2: '图标右上角徽标的内容（已废弃，请使用 badge 属性）',\n\t     row7column2: '点击后跳转的链接地址',\n\t     row8column2: '点击后跳转的目标路由对象，同 vue-router 的 to 属性',\n\t     row9column2: '是否在跳转时替换当前页面历史',\n\t  },\n\t  celllayoutitemEventInfo: {\n       row1column2: '点击格子时触发'\n    },\n    celllayoutitemSlotsInfo: {\n      row1column2: '自定义宫格的所有内容',\n      row2column2: '自定义图标',\n      row3column2: '自定义文字'\n   }\n  },\n  swipecellDemo: {\n    label: 'SwipeCell 滑动单元格',\n    description: '',\n\t  defatltText:'默认',\n\t  customText:'自定义',\n\t  samples1: {\n      label: '基础用法',\n      description: '',\n    },\n    samples2: {\n      label: '自定义内容',\n      description: '',\n    },\n    samples3: {\n      label: '异步关闭调用',\n      description: '通过传入before-close回调函数，可以自定义两侧滑动内容关闭时的行为',\n    },\n    attrsInfo: {\n      row1column2: '标识符，可以在事件参数中获取到',\n      row2column2: '指定左侧滑动区域宽度，单位为px',\n      row3column2: '指定右侧滑动区域宽度，单位为px',\n      row4column2: '关闭前的回调函数',\n      row5column2: '是否禁用滑动',\n      row6column2: '是否阻止滑动事件冒泡'\n    },\n     beforecloseAttrsInfo: {\n      description: 'beforeClose 的第一个参数为对象，对象中包含以下属性：',\n      row1column2: '标识符',\n      row2column2: '关闭时的点击位置 (left right cell outside)',\n      row3column2: 'SwipeCell 实例，用于调用实例方法'\n    },\n    slotsInfo: {\n      row1column2: '自定义显示内容',\n      row2column2: '左侧滑动内容',\n      row3column2: '右侧滑动内容'\n    },\n    eventInfo: {\n      row1column2: '点击时触发',\n      row1column3: '关闭时的点击位置 (left right cell outside)',\n      row2column2: '打开时触发',\n      row3column2: '关闭时触发'\n    },\n    methodInfo: {\n      description: '通过 ref 可以获取到 SwipeCell 实例并调用实例方法，详见组件实例方法',\n      row1column2: '打开单元格侧边栏,其参数 position: left | right',\n      row2column2: '收起单元格侧边栏',\n    }\n  },\n  texticonDemo: {\n    label: 'TextIcon 文本图标',\n    description: '',\n\t  defatltText:'默认',\n\t  customText:'自定义',\n\t  samples1: {\n      label: '基础用法',\n      description: '',\n    },\n    samples2: {\n        label: '颜色+字体大小设置',\n        description: '',\n    },\n    samples3: {\n        label: '文本排布方式(默认文本在下方)',\n        description: '',\n    },\n    samples4: {\n        label: '文本排布方式+文本边距设置（默认为2px）',\n        description: '',\n    },\n    attrsInfo: {\n       row1column2: '图标形状',\n       row2column2: '图标颜色',\n       row3column2: '图标大小',\n       row4column2: '是否有圆点标记',\n       row5column2: '角标内容',\n       row6column2: '文本名称',\n       row7column2: '文本字体颜色',\n       row8column2: '文本字体大小',\n       row9column2: '文本相对于图标的位置，分别有 \\'top\\' | \\'right\\' | \\'bottom\\' | \\'left\\'',\n       row10column2: '文本距离图标的边距'\n    },\n    eventInfo: {\n       row1column2: '点击时触发'\n    }\n  },\n  stepperDemo: {\n    label: 'Stepper 步进器',\n    description: '',\n\t  defatltText:'默认',\n    customText:'自定义',\n    detail1:{\n      label: '介绍',\n      description: '步进器由增加按钮、减少按钮和输入框组成，用于在一定范围内输入、调整数字'\n    },\n\t  samples1: {\n      label: '基础用法',\n      description: '',\n    },\n    samples2: {\n        label: '步长设置',\n        description: '通过step属性设置每次点击增加或减少按钮时变化的值，默认值为1，间隔设置为3',\n    },\n    samples3: {\n        label: '限制输入范围',\n        description: '通过min和max属性限制输入值的范围',\n    },\n    samples4: {\n        label: '限制输入整数',\n        description: '设置integer属性后，输入框将限制只能输入整数',\n    },\n    samples5: {\n        label: '禁用状态',\n        description: '通过设置disabled属性来禁用步进器，禁用状态下无法点击按钮或修改输入框',\n    },\n    samples6: {\n        label: '禁用输入框',\n        description: '通过设置disable-input属性来禁用输入框，此时按钮仍然可以点击',\n    },\n    samples7: {\n        label: '固定小数位数',\n        description: '通过设置decimal-length属性可以保留固定的小数位数',\n    },\n    samples8: {\n        label: '自定义大小',\n        description: '通过input-width属性设置输入框宽度，通过button-size属性设置按钮大小和输入框高度',\n    },\n    samples9: {\n        label: '异步变更',\n        description: '如果需要异步地修改输入框的值，可以设置async-change属性，并在change事件中手动修改value',\n    },\n    attrsInfo: {\n       row1column2: '当前输入的值',\n       row2column2: '最小值',\n       row3column2: '最大值',\n       row4column2: '初始值，当 v-model 为空时生效',\n       row5column2: '步长，每次点击时改变的值',\n       row6column2: '标识符，可以在change事件回调参数中获取',\n       row7column2: '输入框宽度，默认单位为px',\n       row8column2: '按钮大小以及输入框高度，默认单位为px',\n       row9column2: '固定显示的小数位数',\n       row10column2: '是否只允许输入整数',\n       row11column2: '是否禁用步进器',\n       row12column2: '是否禁用增加按钮',\n       row13column2: '是否禁用减少按钮',\n       row14column2: '是否禁用输入框',\n       row15column2: '是否开启异步变更，开启后需要手动控制输入值',\n       row16column2: '是否显示增加按钮',\n       row17column2: '是否显示减少按钮',\n       row18column2: '是否开启长按手势',\n    },\n    eventInfo: {\n       row1column2: '当绑定值变化时触发的事件',\n       row2column2: '点击不可用的按钮时触发',\n       row3column2: '点击增加按钮时触发',\n       row4column2: '点击减少按钮时触发',\n       row5column2: '输入框聚焦时触发',\n       row6column2: '输入框失焦时触发'\n    }\n  },\n  indexbarDemo: {\n    label: 'IndexBar 索引栏',\n    description: '',\n\t  defatltText:'默认',\n    customText:'自定义',\n    samples1: {\n      label: '基础用法',\n      description: '',\n    },\n    attrsInfo: {\n       row1column2: '索引字符列表',\n       row2column2: 'z-index 层级',\n       row3column2: '是否开启锚点自动吸顶',\n       row4column2: '锚点自动吸顶时与顶部的距离',\n       row5column2: '索引字符高亮颜色'\n    },\n    eventInfo: {\n       row1column2: '选中字符时触发',\n       row2column2: 'index: 索引字符',\n    },\n    indexanchorAttrsInfo: {\n      row1column2: '索引字符'\n    },\n    indexanchorSlotsInfo: {\n       row1column2: '锚点位置显示内容，默认为索引字符'\n    }\n  },\n  skeletonDemo: {\n    label: 'Skeleton 骨架屏',\n    description: '',\n\t  defatltText:'默认',\n\t  customText:'自定义',\n\t  samples1: {\n      label: '基础用法',\n      description: '',\n    },\n    samples2: {\n        label: '显示头像',\n        description: '通过avatar属性显示头像占位图',\n    },\n    samples3: {\n        label: '展示子组件',\n        description: '将loading属性设置成false表示内容加载完成，此时会隐藏占位图，并显示Skeleton的子组件,1秒后显示',\n    },\n    attrsInfo: {\n       row1column2: '段落占位图行数',\n       row2column2: '段落占位图宽度，可传数组来设置每一行的宽度',\n       row3column2: '是否显示标题占位图',\n       row4column2: '是否显示头像占位图',\n       row5column2: '是否显示骨架屏，传 false 时会展示子组件内容',\n       row6column2: '是否开启动画',\n       row7column2: '标题占位图宽度',\n       row8column2: '头像占位图大小',\n       row9column2: '头像占位图形状，可选值为square'\n    }\n  },\n  InputNumberDemo: {\n    label: 'NumberInput 数字输入框',\n    sample1: {\n      label: '基础用法',\n      description: '要使用它，只需要使用v-model绑定变量即可，变量的初始值即为默认值，如果你只需要控制数值在某一范围内，可以设置min属性和max属性。'\n    },\n    sample2: {\n      label: '禁用状态',\n      description: 'disabled属性接受一个Boolean，设置为true即可禁用整个组件。'\n    },\n    sample3: {\n      label: '步数',\n      description: '允许定义递增递减的步数控制'\n    },\n    sample4: {\n      label: '严格步数',\n      description: 'step-strictly属性接受一个Boolean。如果这个属性被设置为true，则只能输入步数的倍数。'\n    },\n    sample5: {\n      label: '空值',\n      description: '当v-model绑定的值是undefined时，显示空值。'\n    },\n    sample6: {\n      label: '精度',\n      description: '设置 precision 属性可以控制数值精度，接收一个 Number。precision 的值必须是一个非负整数，并且不能小于 step 的小数位数。'\n    },\n    sample7: {\n      label: '尺寸',\n      description: '额外提供了 large、small、mini 三种尺寸的数字输入框'\n    },\n    sample8: {\n      label: '是否使用控制按钮',\n      description: 'controls为false时，隐藏控制按钮'\n    },\n    sample9: {\n      label: '按钮位置',\n      description: '设置 controls-position 属性可以控制按钮位置。'\n    },\n    sample10: {\n      label: '使用千分位',\n      description: '设置 use-separator 属性。'\n    },\n    sample11: {\n      label: '自定义格式化方法',\n      description: '设置 formatter 方法，需要根据Focus状态返回两种值，通常focus中只能返回纯数字的字符串。'\n    },\n  },\n\n  SplitPanesDemo: {\n    label: 'SplitPanes 分割面板',\n    sample1: {\n      label: '基本用法',\n      description: '基本使用方法',\n    },\n    sample2: {\n      label: '自定义尺寸',\n      description: '可以通过size, max-size, min-size属性控制面板的尺寸',\n    },\n    sample3: {\n      label: '禁止推动面板',\n      description: 'push-other-panes控制其他面板是否可被推动',\n    },\n    sample4: {\n      label: '循环创建',\n      description: '可以使用v-for循环创建面板',\n    },\n    sample5: {\n      label: '动态添加',\n      description: '动态添加面板',\n    },\n    sample6: {\n      label: '显示首面板分割',\n      description: '显示首面板分割器，用于双击放大第一面板等等用途',\n    },\n    sample7: {\n      label: '事件',\n      description: '支持事件绑定',\n    },\n    sample8: {\n      label: '主题',\n      description: '支持theme属性切换到line主题',\n    },\n    sample9: {\n      label: '属性',\n      row1column2: '面板方向是否水平, 默认垂直（false)',\n      row2column2: '在拖动一个面板大小直到它到达另一个面板时是否应该推动下一个面板',\n      row3column2: '双击最大化下一个面板',\n      row4column2: '启用从右到左的模式',\n      row5column2: '设置为 true 时显示第一个分割器, 允许在分割器双击时最大化第一个面板',\n    },\n    sample10: {\n      label: '事件',\n      row1column2: '面板加载完毕',\n      row1column3: '',\n      row2column2: '面板大小变化中多次触发, 参数为包含所有面板大小信息的数组',\n      row2column3: '[{min, max, size}]',\n      row3column2: '面板大小变化结束时单次触发, 参数为包含所有面板大小信息的数组。在添加或删除面板后发生的面板内部大小调整后，也会触发此事件。',\n      row3column3: '[{min, max, size}]',\n      row4column2: '点击面板时触发',\n      row4column3: 'pane',\n      row5column2: '最大化面板时触发',\n      row5column3: 'pane',\n      row6column2: '添加面板后触发，返回一个对象，其中包含添加的的索引和调整大小后的所有面板对象数组',\n      row6column3: '{index, panes}',\n      row7column2: '删除面板后触发，返回一个包含已删除面板对象和调整大小后的剩余面板对象的数组',\n      row7column3: '{removed, panes}',\n      row8column2: '分割器点击时触发， 返回后一个面板的信息，只在点击没有触发拖拽时触发',\n      row8column3: 'pane',\n    },\n  },\n  SvgIconDemo: {\n    label: 'SvgIcon Svg图标',\n    sample1: {\n      label: '基本用法',\n      description: '使用icon-class属性指定对应的svg icon，使用font-size控制图标大小。图标的引入方式分为两种情况：1.纯浏览器环境的情况下，需要按照下列示例代码中svg标签格式，将对应的svg代码在共通文件中引入。注意id与icon class属性的匹配关系。2.webpack的环境下，需要将svg文件放置在对应的icon目录下，再根据文件名引入。',\n    },\n    sample2: {\n      label: '与组件配合使用',\n      description: 'Svg icon可以和其他组件配合使用，具体用法如下',\n    },\n    sample3: {\n      label: 'URL引入',\n      description: '可以将icon-class属性指定为一个svg图片的地址',\n    },\n    sample4: {\n      label: '属性',\n      row1column2: '必须，指定svg图标的id，或者一个远程地址',\n      row2column2: '添加svg图标的class',\n      row3column2: '添加svg图标的class，并且完全覆盖原有的class',\n    },\n    sample5: {\n      label: '事件',\n      row1column2: '支持原生事件，包括click、mousedown、mouseup等等。',\n      row1column3: 'event',\n    },\n  }\n}\n\nmodule.exports = DemoLangZh;","'use strict';\nvar dialogDemo = {\n  path: '/dialog',\n  name: 'dialog',\n  head: {\n    label: 'dialogDemo.label',\n    description: 'dialogDemo.description'\n  },\n  samples: [{\n    id: 'dialog1',\n    label: 'dialogDemo.samples1.label',\n    description: 'dialogDemo.samples1.description',\n    template: '<div class=\"source\"><vue-button type=\"primary\" @click=\"dialogVisible = true\">Click Me</vue-button><vue-dialog title=\"This is title\" v-model=\"dialogVisible\" size=\"tiny\" show-close :before-close=\"handleClose\"><span slot=\"header\">This is header</span><span>This is a message</span><span slot=\"footer\"><vue-button @click=\"dialogVisible = false\">Cancel</vue-button><vue-button type=\"primary\" @click=\"dialogVisible = false\">Complete</vue-button></span></vue-dialog></div>',\n    parameter: {\n      data: function () {\n        return {\n          dialogVisible: false,\n          handleClose: function (done) {\n            this.$confirm({\n              message: 'Are you sure to close this dialog?'\n            }).then(function () {\n              done();\n            }).catch(function () {\n              done(false);\n            });\n          }\n        }\n      }\n    },\n    code: '<vue-button type=\"primary\" @click=\"dialogVisible = true\">Click Me</vue-button>\\n' +\n      '<vue-dialog title=\"This is title\" v-model=\"dialogVisible\" size=\"tiny\" show-close :before-close=\"handleClose\">\\n' +\n      '  <span slot=\"header\">This is header</span>\\n' +\n      '  <span>This is a message</span>\\n' +\n      '  <span slot=\"footer\" class=\"dialog-footer\">\\n' +\n      '    <vue-button @click=\"dialogVisible = false\">Cancel</vue-button>\\n' +\n      '    <vue-button type=\"primary\" @click=\"dialogVisible = false\">Complete</vue-button>\\n' +\n      '  </span>\\n' +\n      '</vue-dialog>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function() {\\n' +\n      '      return {\\n' +\n      '        dialogVisible: false,\\n' +\n      '        handleClose: function(done) {\\n' +\n      '          this.$confirm({\\n' +\n      '            message: \"Are you sure to close this dialog?\"\\n' +\n      '          }).then(function() {\\n' +\n      '            done();\\n' +\n      '          }).catch(function() {\\n' +\n      '            done(false);\\n' +\n      '          });\\n' +\n      '        }\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'dialog2',\n    label: 'dialogDemo.samples2.label',\n    description: 'dialogDemo.samples2.description',\n    template: '<div class=\"source\"><vue-button type=\"primary\" @click=\"dialogVisible = true\">Click Me</vue-button><vue-dialog title=\"Shipping address\" v-model=\"dialogVisible\" show-close><vue-xtable :data=\"gridData\"><vue-xtable-column field=\"date\" title=\"Date\" width=\"150\"></vue-xtable-column><vue-xtable-column field=\"name\" title=\"Name\" width=\"150\"></vue-xtable-column><vue-xtable-column field=\"address\" title=\"Address\"  width=\"350\"></vue-xtable-column></vue-xtable></vue-dialog></div>',\n    parameter: {\n      data: function () {\n        return {\n          gridData: [{\n            date: '2017-07-02',\n            name: 'John Smith',\n            address: 'No.1518, Jinshajiang Road'\n          }, {\n            date: '2017-07-04',\n            name: 'John Smith',\n            address: 'No.1518, Jinshajiang Road'\n          }, {\n            date: '2017-07-01',\n            name: 'John Smith',\n            address: 'No.1518, Jinshajiang Road'\n          }, {\n            date: '2017-07-03',\n            name: 'John Smith',\n            address: 'No.1518, Jinshajiang Road'\n          }],\n          dialogVisible: false\n        }\n      }\n    },\n    code: '<vue-button type=\"primary\" @click=\"dialogVisible = true\">Click Me</vue-button>\\n' +\n      '<vue-dialog title=\"Shipping address\" v-model=\"dialogVisible\" show-close>\\n' +\n      '  <vue-xtable :data=\"gridData\">\\n' +\n      '    <vue-xtable-column field=\"date\" title=\"Date\" width=\"150\"></vue-xtable-column>\\n' +\n      '    <vue-xtable-column field=\"name\" title=\"Name\" width=\"200\"></vue-xtable-column>\\n' +\n      '    <vue-xtable-column field=\"address\" title=\"Address\" width=\"350\"></vue-xtable-column>\\n' +\n      '  </vue-xtable>\\n' +\n      '</vue-dialog>\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function() {\\n' +\n      '      return {\\n' +\n      '        gridData: [{\\n' +\n      '          date: \"2017-07-02\",\\n' +\n      '          name: \"John Smith\",\\n' +\n      '          address: \"No.1518, Jinshajiang Road\"\\n' +\n      '        }, {\\n' +\n      '          date: \"2017-07-04\",\\n' +\n      '          name: \"John Smith\",\\n' +\n      '          address: \"No.1518, Jinshajiang Road\"\\n' +\n      '        }, {\\n' +\n      '          date: \"2017-07-01\",\\n' +\n      '          name: \"John Smith\",\\n' +\n      '          address: \"No.1518, Jinshajiang Road\"\\n' +\n      '        }, {\\n' +\n      '          date: \"2017-07-03\",\\n' +\n      '          name: \"John Smith\",\\n' +\n      '          address: \"No.1518, Jinshajiang Road\"\\n' +\n      '        }],\\n' +\n      '        dialogVisible: false\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'dialog3',\n    label: 'Attributes',\n    template: '<attr-table :data=\"tableData\"></attr-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"v-model\",\n            column2: \"dialogDemo.samples3.row1column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"title\",\n            column2: \"dialogDemo.samples3.row2column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"size\",\n            column2: \"dialogDemo.samples3.row3column2\",\n            column3: \"String\",\n            column4: \"tiny/small/large/full\",\n            column5: \"small\"\n          }, {\n            column1: \"top\",\n            column2: \"dialogDemo.samples3.row4column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"15%\"\n          }, {\n            column1: \"custom-class\",\n            column2: \"dialogDemo.samples3.row5column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"close-on-click-modal\",\n            column2: \"dialogDemo.samples3.row6column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"close-on-press-escape\",\n            column2: \"dialogDemo.samples3.row7column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"true\"\n          }, {\n            column1: \"show-close\",\n            column2: \"dialogDemo.samples3.row8column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"before-close\",\n            column2: \"dialogDemo.samples3.row9column2\",\n            column3: \"dialogDemo.samples3.row9column3\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"cleanness-modal\",\n            column2: \"dialogDemo.samples3.row10column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"draggable\",\n            column2: \"dialogDemo.samples3.row11column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"true\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'dialog4',\n    label: 'Slots',\n    template: '<slot-table :data=\"tableData\"></slot-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"\",\n            column2: \"dialogDemo.samples4.row1column2\"\n          }, {\n            column1: \"header\",\n            column2: \"dialogDemo.samples4.row2column2\"\n          }, {\n            column1: \"footer\",\n            column2: \"dialogDemo.samples4.row3column2\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'dialog5',\n    label: 'Events',\n    template: '<event-table :data=\"tableData\"></event-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"close\",\n            column2: \"dialogDemo.samples5.row1column2\",\n            column3: \"\"\n          }, {\n            column1: \"open\",\n            column2: \"dialogDemo.samples5.row2column2\",\n            column3: \"\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }]\n};\nmodule.exports = dialogDemo;\n","'use strict';\nvar draggableDemo = {\n  path: '/draggable',\n  name: 'draggable',\n  head: {\n    label: 'draggableDemo.label',\n    description: 'draggableDemo.description'\n  },\n  samples: [{\n    id: 'draggable1',\n    label: 'draggableDemo.samples1.label',\n    description: 'draggableDemo.samples1.description',\n    template: '<div class=\"source\"><vue-note v-draggable title=\"I can move\" >Move anywhere...</vue-note><vue-xtable v-draggable draggable-cancel-selector=\".vue-xtable-table--body-wrapper\" :data=\"tableData\" border stripe><vue-xtable-column field=\"date\" title=\"Date\" width=\"180\"></vue-xtable-column><vue-xtable-column field=\"name\" title=\"Name\" width=\"180\"></vue-xtable-column><vue-xtable-column field=\"address\" title=\"Address\"></vue-xtable-column></vue-xtable></div>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            date: '2016-05-02',\n            name: 'John Smith',\n            address: 'No.1518,  Jinshajiang Road, Putuo District'\n          }, {\n            date: '2016-05-04',\n            name: 'John Smith',\n            address: 'No.1518,  Jinshajiang Road, Putuo District'\n          }, {\n            date: '2016-05-01',\n            name: 'John Smith',\n            address: 'No.1518,  Jinshajiang Road, Putuo District'\n          }]\n        };\n      }\n    },\n    code: '<vue-note v-draggable title=\"I can move\" >Move anywhere...</vue-note>\\n' +\n      '<vue-xtable v-draggable draggable-cancel-selector=\".vue-table__body-wrapper\" :data=\"tableData\" border stripe style=\"width: 100%\">\\n' +\n      '  <vue-xtable-column field=\"date\" title=\"Date\" width=\"180\"></vue-xtable-column>\\n' +\n      '  <vue-xtable-column field=\"name\" title=\"Name\" width=\"180\"></vue-xtable-column>\\n' +\n      '  <vue-xtable-column field=\"address\" title=\"Address\" width=\"350\"></vue-xtable-column>\\n' +\n      '</vue-xtable>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function() {\\n' +\n      '      return {\\n' +\n      '        tableData: [{\\n' +\n      '          date: \"2016-05-02\",\\n' +\n      '          name: \"John Smith\",\\n' +\n      '          address: \"No.1518,  Jinshajiang Road, Putuo District\"\\n' +\n      '        }, {\\n' +\n      '          date: \"2016-05-04\",\\n' +\n      '          name: \"John Smith\",\\n' +\n      '          address: \"No.1518,  Jinshajiang Road, Putuo District\"\\n' +\n      '        }, {\\n' +\n      '          date: \"2016-05-01\",\\n' +\n      '          name: \"John Smith\",\\n' +\n      '          address: \"No.1518,  Jinshajiang Road, Putuo District\"\\n' +\n      '        }]\\n' +\n      '      };\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'draggable2',\n    label: 'Attributes',\n    template: '<attr-table :data=\"tableData\"></attr-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"draggable-cancel-selector\",\n            column2: \"draggableDemo.samples2.row1column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }]\n};\nmodule.exports = draggableDemo;\n","'use strict';\nvar dropdownDemo = {\n  path: '/dropdown',\n  name: 'dropdown',\n  head: {\n    label: 'dropdownDemo.label',\n    description: 'dropdownDemo.description'\n  },\n  samples: [{\n    id: 'dropdown1',\n    label: 'dropdownDemo.samples1.label',\n    description: 'dropdownDemo.samples1.description',\n    template: '<div class=\"source\"><vue-row><vue-col :span=\"6\"><vue-dropdown><span class=\"dropdown-link\">Dropdown List<i class=\"vue-icon-arrow-down vue-icon--right\"></i></span><vue-dropdown-menu slot=\"dropdown\"><vue-dropdown-item>YAMAHA</vue-dropdown-item><vue-dropdown-item disabled>HONDA</vue-dropdown-item><vue-dropdown-item divided>TOYOTA</vue-dropdown-item></vue-dropdown-menu></vue-dropdown></vue-col></vue-row></div>',\n    code: '<vue-dropdown>\\n' +\n      '  <span class=\"dropdown-link\">\\n' +\n      '    Dropdown List\\n' +\n      '    <i class=\"vue-icon-arrow-down vue-icon--right\"></i>\\n' +\n      '  </span>\\n' +\n      '  <vue-dropdown-menu slot=\"dropdown\">\\n' +\n      '    <vue-dropdown-item>YAMAHA</vue-dropdown-item>\\n' +\n      '    <vue-dropdown-item disabled>HONDA</vue-dropdown-item>\\n' +\n      '    <vue-dropdown-item divided>TOYOTA</vue-dropdown-item>\\n' +\n      '  </vue-dropdown-menu>\\n' +\n      '</vue-dropdown>'\n  }, {\n    id: 'dropdown2',\n    label: 'dropdownDemo.samples2.label',\n    description: 'dropdownDemo.samples2.description',\n    template: '<div class=\"source\"><vue-row><vue-col :span=\"6\"><vue-dropdown><vue-button type=\"primary\">Dropdown List<i class=\"vue-icon-arrow-down vue-icon--right\"></i></vue-button><vue-dropdown-menu slot=\"dropdown\"><vue-dropdown-item>YAMAHA</vue-dropdown-item><vue-dropdown-item disabled>HONDA</vue-dropdown-item><vue-dropdown-item divided>TOYOTA</vue-dropdown-item></vue-dropdown-menu></vue-dropdown></vue-col><vue-col :span=\"6\"><vue-dropdown split-button type=\"primary\" @click=\"handleClick\">Dropdown List<vue-dropdown-menu slot=\"dropdown\"><vue-dropdown-item>YAMAHA</vue-dropdown-item><vue-dropdown-item>HONDA</vue-dropdown-item><vue-dropdown-item>TOYOTA</vue-dropdown-item></vue-dropdown-menu></vue-dropdown></vue-col></vue-row></div>',\n    parameter: {\n      methods: {\n        handleClick: function () {\n          this.$notify({ title: \"button click\" });\n        }\n      }\n    },\n    code: '<vue-dropdown>\\n' +\n      '  <vue-button type=\"primary\">\\n' +\n      '    Dropdown List\\n' +\n      '    <i class=\"vue-icon-arrow-down vue-icon--right\"></i>\\n' +\n      '  </vue-button>\\n' +\n      '  <vue-dropdown-menu slot=\"dropdown\">\\n' +\n      '    <vue-dropdown-item>YAMAHA</vue-dropdown-item>\\n' +\n      '    <vue-dropdown-item disabled>HONDA</vue-dropdown-item>\\n' +\n      '    <vue-dropdown-item divided>TOYOTA</vue-dropdown-item>\\n' +\n      '  </vue-dropdown-menu>\\n' +\n      '</vue-dropdown>\\n\\n' +\n      '<vue-dropdown split-button type=\"primary\" @click=\"handleClick\">\\n' +\n      '  Dropdown List\\n' +\n      '  <vue-dropdown-menu slot=\"dropdown\">\\n' +\n      '    <vue-dropdown-item>YAMAHA</vue-dropdown-item>\\n' +\n      '    <vue-dropdown-item>HONDA</vue-dropdown-item>\\n' +\n      '    <vue-dropdown-item>TOYOTA</vue-dropdown-item>\\n' +\n      '  </vue-dropdown-menu>\\n' +\n      '</vue-dropdown>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    methods: {\\n' +\n      '      handleClick: function() {\\n' +\n      '        this.$notify({title: \"button click\"});\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'dropdown3',\n    label: 'dropdownDemo.samples3.label',\n    description: 'dropdownDemo.samples3.description',\n    template: '<div class=\"source\"><vue-row class=\"margin-bottom20\" type=\"flex\" justify=\"center\"><vue-col :span=\"6\"><span class=\"demonstration\">{{$t(\\'dropdownDemo.samples3.hoverLabel\\')}}</span></vue-col><vue-col :span=\"16\"><vue-dropdown><vue-button type=\"primary\">Dropdown List<i class=\"vue-icon-arrow-down vue-icon--right\"></i></vue-button><vue-dropdown-menu slot=\"dropdown\"><vue-dropdown-item>YAMAHA</vue-dropdown-item><vue-dropdown-item>HONDA</vue-dropdown-item><vue-dropdown-item>TOYOTA</vue-dropdown-item></vue-dropdown-menu></vue-dropdown></vue-col></vue-row><vue-row type=\"flex\" justify=\"center\"><vue-col :span=\"6\"><span class=\"demonstration\">{{$t(\\'dropdownDemo.samples3.clickLabel\\')}}</span></vue-col><vue-col :span=\"16\"><vue-dropdown trigger=\"click\"><vue-button type=\"primary\">Dropdown List<i class=\"vue-icon-arrow-down vue-icon--right\"></i></vue-button><vue-dropdown-menu slot=\"dropdown\"><vue-dropdown-item>YAMAHA</vue-dropdown-item><vue-dropdown-item>HONDA</vue-dropdown-item><vue-dropdown-item>TOYOTA</vue-dropdown-item></vue-dropdown-menu></vue-dropdown></vue-col></vue-row></div>',\n    code: '<span class=\"demonstration\">{{$t(\\'dropdownDemo.samples3.hoverLabel\\')}}</span>\\n' +\n      '<vue-dropdown>\\n' +\n      '  <vue-button type=\"primary\">\\n' +\n      '    Dropdown List\\n' +\n      '    <i class=\"vue-icon-arrow-down vue-icon--right\"></i>\\n' +\n      '  </vue-button>\\n' +\n      '  <vue-dropdown-menu slot=\"dropdown\">\\n' +\n      '    <vue-dropdown-item>YAMAHA</vue-dropdown-item>\\n' +\n      '    <vue-dropdown-item>HONDA</vue-dropdown-item>\\n' +\n      '    <vue-dropdown-item>TOYOTA</vue-dropdown-item>\\n' +\n      '  </vue-dropdown-menu>\\n' +\n      '</vue-dropdown>\\n' +\n      '<span class=\"demonstration\">{{$t(\\'dropdownDemo.samples3.clickLabel\\')}}</span>\\n' +\n      '<vue-dropdown trigger=\"click\">\\n' +\n      '  <vue-button type=\"primary\">\\n' +\n      '    Dropdown List\\n' +\n      '    <i class=\"vue-icon-arrow-down vue-icon--right\"></i>\\n' +\n      '  </vue-button>\\n' +\n      '  <vue-dropdown-menu slot=\"dropdown\">\\n' +\n      '    <vue-dropdown-item>YAMAHA</vue-dropdown-item>\\n' +\n      '    <vue-dropdown-item>HONDA</vue-dropdown-item>\\n' +\n      '    <vue-dropdown-item>TOYOTA</vue-dropdown-item>\\n' +\n      '  </vue-dropdown-menu>\\n' +\n      '</vue-dropdown>'\n  }, {\n    id: 'dropdown4',\n    label: 'dropdownDemo.samples4.label',\n    description: 'dropdownDemo.samples4.description',\n    template: '<div class=\"source\"><vue-row><vue-col :span=\"6\"><vue-dropdown :hide-on-click=\"false\"><vue-button type=\"primary\">Dropdown List<i class=\"vue-icon-arrow-down vue-icon--right\"></i></vue-button><vue-dropdown-menu slot=\"dropdown\"><vue-dropdown-item>YAMAHA</vue-dropdown-item><vue-dropdown-item>HONDA</vue-dropdown-item><vue-dropdown-item>TOYOTA</vue-dropdown-item></vue-dropdown-menu></vue-dropdown></vue-col></vue-row></div>',\n    code: '<vue-dropdown :hide-on-click=\"false\">\\n' +\n      '  <vue-button type=\"primary\">\\n' +\n      '    Dropdown List\\n' +\n      '    <i class=\"vue-icon-arrow-down vue-icon--right\"></i>\\n' +\n      '  </vue-button>\\n' +\n      '  <vue-dropdown-menu slot=\"dropdown\">\\n' +\n      '    <vue-dropdown-item>YAMAHA</vue-dropdown-item>\\n' +\n      '    <vue-dropdown-item>HONDA</vue-dropdown-item>\\n' +\n      '    <vue-dropdown-item>TOYOTA</vue-dropdown-item>\\n' +\n      '  </vue-dropdown-menu>\\n' +\n      '</vue-dropdown>'\n  }, {\n    id: 'dropdown5',\n    label: 'dropdownDemo.samples5.label',\n    description: 'dropdownDemo.samples5.description',\n    template: '<div class=\"source\"><vue-row><vue-col :span=\"6\"><vue-dropdown @command=\"handleCommand\"><vue-button type=\"primary\">Dropdown List<i class=\"vue-icon-arrow-down vue-icon--right\"></i></vue-button><vue-dropdown-menu slot=\"dropdown\"><vue-dropdown-item command=\"YMA\">YAMAHA</vue-dropdown-item><vue-dropdown-item command=\"HD\">HONDA</vue-dropdown-item><vue-dropdown-item command=\"TYT\">TOYOTA</vue-dropdown-item></vue-dropdown-menu></vue-dropdown></vue-col></vue-row></div>',\n    parameter: {\n      methods: {\n        handleCommand: function (command) {\n          this.$notify({\n            title: 'click on item ' + command\n          });\n        }\n      }\n    },\n    code: '<vue-dropdown @command=\"handleCommand\">\\n' +\n      '  <vue-button type=\"primary\">\\n' +\n      '    Dropdown List\\n' +\n      '    <i class=\"vue-icon-arrow-down vue-icon--right\"></i>\\n' +\n      '  </vue-button>\\n' +\n      '  <vue-dropdown-menu slot=\"dropdown\">\\n' +\n      '    <vue-dropdown-item command=\"YMA\">YAMAHA</vue-dropdown-item>\\n' +\n      '    <vue-dropdown-item command=\"HD\">HONDA</vue-dropdown-item>\\n' +\n      '    <vue-dropdown-item command=\"TYT\">TOYOTA</vue-dropdown-item>\\n' +\n      '  </vue-dropdown-menu>\\n' +\n      '</vue-dropdown>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    methods: {\\n' +\n      '      handleCommand: function() {\\n' +\n      '        this.$notify({title:\"click on item \" + command});\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'dropdown6',\n    label: 'Dropdown Attributes',\n    template: '<event-table :data=\"tableData\"></event-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"type\",\n            column2: \"dropdownDemo.samples6.row1column2\",\n            column3: \"String\",\n            column4: \"primary, success, warning, danger, info, text\",\n            column5: \"\"\n          }, {\n            column1: \"size\",\n            column2: \"dropdownDemo.samples6.row2column2\",\n            column3: \"String\",\n            column4: \"large, small, mini\",\n            column5: \"\"\n          }, {\n            column1: \"split-button\",\n            column2: \"dropdownDemo.samples6.row3column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"menu-align\",\n            column2: \"dropdownDemo.samples6.row4column2\",\n            column3: \"String\",\n            column4: \"start, end\",\n            column5: \"end\"\n          }, {\n            column1: \"trigger\",\n            column2: \"dropdownDemo.samples6.row5column2\",\n            column3: \"String\",\n            column4: \"hover, click\",\n            column5: \"hover\"\n          }, {\n            column1: \"hide-on-click\",\n            column2: \"dropdownDemo.samples6.row6column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"true\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'dropdown7',\n    label: ' Dropdown Events',\n    template: '<event-table :data=\"tableData\"></event-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"click\",\n            column2: \"dropdownDemo.samples7.row1column2\",\n            column3: \"\"\n          }, {\n            column1: \"command\",\n            column2: \"dropdownDemo.samples7.row2column2\",\n            column3: \"dropdownDemo.samples7.row2column3\"\n          }, {\n            column1: \"visible-change\",\n            column2: \"dropdownDemo.samples7.row3column2\",\n            column3: \"dropdownDemo.samples7.row3column3\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'dropdown8',\n    label: 'Dropdown Menu Item Attributes',\n    template: '<event-table :data=\"tableData\"></event-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"command\",\n            column2: \"dropdownDemo.samples8.row1column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"disabled\",\n            column2: \"dropdownDemo.samples8.row2column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"divided\",\n            column2: \"dropdownDemo.samples8.row3column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }]\n};\nmodule.exports = dropdownDemo;\n","'use strict';\nvar formDemo = {\n  path: '/form',\n  name: 'form',\n  head: {\n    label: 'formDemo.label',\n    description: 'formDemo.description'\n  },\n  samples: [{\n    id: 'form1',\n    label: 'formDemo.samples1.label',\n    description: 'formDemo.samples1.description',\n    template: '<div class=\"source\"><vue-form ref=\"form\" :model=\"form\" label-width=\"150px\"><vue-form-item label=\"Activity name\"><vue-input v-model=\"form.name\"></vue-input></vue-form-item><vue-form-item label=\"Activity zone\"><vue-select clearable v-model=\"form.region\" placeholder=\"please select your zone\"><vue-option label=\"Zone one\" value=\"shanghai\"></vue-option><vue-option label=\"Zone two\" value=\"beijing\"></vue-option></vue-select></vue-form-item><vue-form-item label=\"Activity time\"><vue-col :span=\"11\"><vue-date-picker type=\"date\" placeholder=\"Pick a date\" v-model=\"form.date1\"></vue-date-picker></vue-col><vue-col style=\"text-align:center;\" :span=\"2\">-</vue-col><vue-col :span=\"11\"><vue-time-picker type=\"fixed-time\" placeholder=\"Pick a time\" v-model=\"form.date2\"></vue-time-picker></vue-col></vue-form-item><vue-form-item label=\"Instant delivery\"><vue-switch on-text=\"\" off-text=\"\" v-model=\"form.delivery\"></vue-switch></vue-form-item><vue-form-item label=\"Activity type\"><vue-checkbox-group v-model=\"form.type\"><vue-checkbox label=\"Online activities\" name=\"type\"></vue-checkbox><vue-checkbox label=\"Promotion activities\" name=\"type\"></vue-checkbox><vue-checkbox label=\"Offline activities\" name=\"type\"></vue-checkbox></vue-checkbox-group></vue-form-item><vue-form-item label=\"Resources\"><vue-radio-group v-model=\"form.resource\"><vue-radio label=\"Sponsor\"></vue-radio><vue-radio label=\"Venue\"></vue-radio></vue-radio-group></vue-form-item><vue-form-item label=\"Activity form\"><vue-input type=\"textarea\" v-model=\"form.desc\"></vue-input></vue-form-item><vue-form-item><vue-button type=\"primary\" @click=\"onSubmit\">Create</vue-button><vue-button @click=\"onCancel\">Cancel</vue-button></vue-form-item></vue-form></div>',\n    parameter: {\n      data: function () {\n        return {\n          form: {\n            name: '',\n            region: '',\n            date1: '',\n            date2: '',\n            delivery: false,\n            type: [],\n            resource: '',\n            desc: ''\n          }\n        }\n      },\n      methods: {\n        onSubmit: function () {\n          this.$notify({ title: \"submit!\" });\n        },\n        onCancel: function () {\n          this.$notify({ title: \"cancel!\" });\n        }\n      }\n    },\n    code: '<vue-form ref=\"form\" :model=\"form\" label-width=\"150px\">\\n' +\n      '  <vue-form-item label=\"Activity name\">\\n' +\n      '    <vue-input v-model=\"form.name\"></vue-input>\\n' +\n      '  </vue-form-item>\\n' +\n      '  <vue-form-item label=\"Activity zone\">\\n' +\n      '    <vue-select clearable v-model=\"form.region\" placeholder=\"please select your zone\">\\n' +\n      '      <vue-option label=\"Zone one\" value=\"shanghai\"></vue-option>\\n' +\n      '      <vue-option label=\"Zone two\" value=\"beijing\"></vue-option>\\n' +\n      '    </vue-select>\\n' +\n      '  </vue-form-item>\\n' +\n      '  <vue-form-item label=\"Activity time\">\\n' +\n      '    <vue-col :span=\"11\">\\n' +\n      '      <vue-date-picker type=\"date\" placeholder=\"Pick a date\" v-model=\"form.date1\"></vue-date-picker>\\n' +\n      '    </vue-col>\\n' +\n      '    <vue-col style=\"text-align:center;\" :span=\"2\">-</vue-col>\\n' +\n      '    <vue-col :span=\"11\">\\n' +\n      '      <vue-time-picker type=\"fixed-time\" placeholder=\"Pick a time\" v-model=\"form.date2\"></vue-time-picker>\\n' +\n      '    </vue-col>\\n' +\n      '  </vue-form-item>\\n' +\n      '  <vue-form-item label=\"Instant delivery\">\\n' +\n      '    <vue-switch on-text=\"\" off-text=\"\" v-model=\"form.delivery\"></vue-switch>\\n' +\n      '  </vue-form-item>\\n' +\n      '  <vue-form-item label=\"Activity type\">\\n' +\n      '    <vue-checkbox-group v-model=\"form.type\">\\n' +\n      '      <vue-checkbox label=\"Online activities\" name=\"type\"></vue-checkbox>\\n' +\n      '      <vue-checkbox label=\"Promotion activities\" name=\"type\"></vue-checkbox>\\n' +\n      '      <vue-checkbox label=\"Offline activities\" name=\"type\"></vue-checkbox>\\n' +\n      '    </vue-checkbox-group>\\n' +\n      '  </vue-form-item>\\n' +\n      '  <vue-form-item label=\"Resources\">\\n' +\n      '    <vue-radio-group v-model=\"form.resource\">\\n' +\n      '      <vue-radio label=\"Sponsor\"></vue-radio>\\n' +\n      '      <vue-radio label=\"Venue\"></vue-radio>\\n' +\n      '    </vue-radio-group>\\n' +\n      '  </vue-form-item>\\n' +\n      '  <vue-form-item label=\"Activity form\">\\n' +\n      '    <vue-input type=\"textarea\" v-model=\"form.desc\"></vue-input>\\n' +\n      '  </vue-form-item>\\n' +\n      '  <vue-form-item>\\n' +\n      '    <vue-button type=\"primary\" @click=\"onSubmit\">Create</vue-button>\\n' +\n      '    <vue-button @click=\"onCancel\">Cancel</vue-button>\\n' +\n      '  </vue-form-item>\\n' +\n      '</vue-form>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function(){\\n' +\n      '      return {\\n' +\n      '        form: {\\n' +\n      '          name: \"\",\\n' +\n      '          region: \"\",\\n' +\n      '          date1: \"\",\\n' +\n      '          date2: \"\",\\n' +\n      '          delivery: false,\\n' +\n      '          type: [],\\n' +\n      '          resource: \"\",\\n' +\n      '          desc: \"\"\\n' +\n      '        }\\n' +\n      '      }\\n' +\n      '    },\\n' +\n      '    methods: {\\n' +\n      '      onSubmit: function() {\\n' +\n      '        this.$notify({title: \"submit!\"});\\n' +\n      '      },\\n' +\n      '      onCancel: function() {\\n' +\n      '        this.$notify({title: \"cancel!\"});\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'form2',\n    label: 'formDemo.samples2.label',\n    description: 'formDemo.samples2.description',\n    template: '<div class=\"source\"><vue-form inline :model=\"formInline\"><vue-form-item label=\"Approved by\"><vue-input v-model=\"formInline.user\" placeholder=\"Approved by\"></vue-input></vue-form-item><vue-form-item label=\"Activity zone\"><vue-select v-model=\"formInline.region\" placeholder=\"Approved zone\"><vue-option label=\"Zone one\" value=\"zone1\"></vue-option><vue-option label=\"Zone two\" value=\"zone2\"></vue-option></vue-select></vue-form-item><vue-form-item><vue-button type=\"primary\" @click=\"onSubmit\">Query</vue-button></vue-form-item></vue-form></div>',\n    parameter: {\n      data: function () {\n        return {\n          formInline: {\n            user: '',\n            region: ''\n          }\n        }\n      },\n      methods: {\n        onSubmit: function (formName) {\n          this.$notify({ title: \"submit!\" });\n        }\n      }\n    },\n    code: '<vue-form inline :model=\"formInline\">\\n' +\n      '  <vue-form-item label=\"Approved by\">\\n' +\n      '    <vue-input v-model=\"formInline.user\" placeholder=\"Approved by\"></vue-input>\\n' +\n      '  </vue-form-item>\\n' +\n      '  <vue-form-item label=\"Activity zone\">\\n' +\n      '    <vue-select v-model=\"formInline.region\" placeholder=\"Approved zone\">\\n' +\n      '      <vue-option label=\"Zone one\" value=\"zone1\"></vue-option>\\n' +\n      '      <vue-option label=\"Zone two\" value=\"zone2\"></vue-option>\\n' +\n      '    </vue-select>\\n' +\n      '  </vue-form-item><vue-form-item>\\n' +\n      '    <vue-button type=\"primary\" @click=\"onSubmit\">Query</vue-button>\\n' +\n      '  </vue-form-item>\\n' +\n      '</vue-form>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function(){\\n' +\n      '      return {\\n' +\n      '        formInline: {\\n' +\n      '          user: \"\",\\n' +\n      '          region: \"\",\\n' +\n      '        }\\n' +\n      '      }\\n' +\n      '    },\\n' +\n      '    methods: {\\n' +\n      '      onSubmit: function(formName) {\\n' +\n      '        this.$notify({title: \"submit!\"});\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'form3',\n    label: 'formDemo.samples3.label',\n    description: 'formDemo.samples3.description',\n    template: '<div class=\"source\"><vue-radio-group v-model=\"labelPosition\" size=\"small\"><vue-radio-button label=\"left\">Left</vue-radio-button><vue-radio-button label=\"right\">Right</vue-radio-button><vue-radio-button label=\"top\">Top</vue-radio-button></vue-radio-group><div style=\"margin: 20px;\"></div><vue-form :label-position=\"labelPosition\" :label-responsive=\"false\" label-width=\"150px\" :model=\"formLabelAlign\"><vue-form-item label=\"Name\"><vue-input v-model=\"formLabelAlign.name\"></vue-input></vue-form-item><vue-form-item label=\"Activity zone\"><vue-input v-model=\"formLabelAlign.region\"></vue-input></vue-form-item><vue-form-item label=\"Activity form\"><vue-input v-model=\"formLabelAlign.type\"></vue-input></vue-form-item></vue-form></div>',\n    parameter: {\n      data: function () {\n        return {\n          labelPosition: 'right',\n          formLabelAlign: {\n            name: '',\n            region: '',\n            type: ''\n          }\n        }\n      },\n      methods: {\n        onSubmit: function (formName) {\n          this.$notify({ title: \"submit!\" });\n        }\n      }\n    },\n    code: '<vue-radio-group v-model=\"labelPosition\" size=\"small\">\\n' +\n      '  <vue-radio-button label=\"left\">Left</vue-radio-button>\\n' +\n      '  <vue-radio-button label=\"right\">Right</vue-radio-button>\\n' +\n      '  <vue-radio-button label=\"top\">Top</vue-radio-button>\\n' +\n      '</vue-radio-group>\\n' +\n      '<vue-form :label-position=\"labelPosition\" :label-responsive=\"false\" label-width=\"150px\" :model=\"formLabelAlign\">\\n' +\n      '  <vue-form-item label=\"Name\">\\n' +\n      '    <vue-input v-model=\"formLabelAlign.name\"></vue-input>\\n' +\n      '  </vue-form-item>\\n' +\n      '  <vue-form-item label=\"Activity zone\">\\n' +\n      '    <vue-input v-model=\"formLabelAlign.region\"></vue-input>\\n' +\n      '  </vue-form-item>\\n' +\n      '  <vue-form-item label=\"Activity form\">\\n' +\n      '    <vue-input v-model=\"formLabelAlign.type\"></vue-input>\\n' +\n      '  </vue-form-item>\\n' +\n      '</vue-form>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function(){\\n' +\n      '      return {\\n' +\n      '        labelPosition: \"right\",\\n' +\n      '        formLabelAlign: {\\n' +\n      '          name: \"\",\\n' +\n      '          region: \"\",\\n' +\n      '          type: \"\"\\n' +\n      '        }\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '    methods: {\\n' +\n      '      onSubmit: function(formName) {\\n' +\n      '        this.$notify({title: \"submit!\"});\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'form4',\n    label: 'formDemo.samples4.label',\n    description: 'formDemo.samples4.description',\n    template: '<div class=\"source\"><vue-form :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"150px\"><vue-form-item label=\"Activity name\" prop=\"name\"><vue-input v-model=\"ruleForm.name\"></vue-input></vue-form-item><vue-form-item label=\"Activity zone\" prop=\"region\"><vue-select clearable v-model=\"ruleForm.region\" placeholder=\"please select your zone\"><vue-option label=\"Zone one\" value=\"shanghai\"></vue-option><vue-option label=\"Zone two\" value=\"beijing\"></vue-option></vue-select></vue-form-item><vue-form-item label=\"Activity time\" required><vue-col :span=\"11\"><vue-form-item prop=\"date1\"><vue-date-picker type=\"date\" placeholder=\"Pick a date\" v-model=\"ruleForm.date1\"></vue-date-picker></vue-form-item></vue-col><vue-col style=\"text-align:center;\" :span=\"2\">-</vue-col><vue-col :span=\"11\"><vue-form-item prop=\"date2\"><vue-time-picker type=\"fixed-time\" placeholder=\"Pick a time\" v-model=\"ruleForm.date2\"></vue-time-picker></vue-form-item></vue-col></vue-form-item><vue-form-item label=\"Instant delivery\" prop=\"delivery\"><vue-switch on-text=\"\" off-text=\"\" v-model=\"ruleForm.delivery\"></vue-switch></vue-form-item><vue-form-item label=\"Activity type\" prop=\"type\"><vue-checkbox-group v-model=\"ruleForm.type\"><vue-checkbox label=\"Online activities\" name=\"type\"></vue-checkbox><vue-checkbox label=\"Promotion activities\" name=\"type\"></vue-checkbox><vue-checkbox label=\"Offline activities\" name=\"type\"></vue-checkbox></vue-checkbox-group></vue-form-item><vue-form-item label=\"Resources\" prop=\"resource\"><vue-radio-group v-model=\"ruleForm.resource\"><vue-radio label=\"Sponsor\"></vue-radio><vue-radio label=\"Venue\"></vue-radio></vue-radio-group></vue-form-item><vue-form-item label=\"Activity form\" prop=\"desc\"><vue-input type=\"textarea\" v-model=\"ruleForm.desc\"></vue-input></vue-form-item><vue-form-item><vue-button type=\"primary\" @click=\"submitForm(\\'ruleForm\\')\">Create</vue-button><vue-button @click=\"resetForm(\\'ruleForm\\')\">Reset</vue-button></vue-form-item></vue-form></div>',\n    parameter: {\n      data: function () {\n        return {\n          ruleForm: {\n            name: \"\",\n            region: \"\",\n            type: [],\n            resource: \"\",\n            desc: \"\",\n            date1: \"\",\n            date2: \"\",\n            delivery: false\n          },\n          rules: {\n            name: [{\n              required: true,\n              message: \"Please input Activity name\"\n            }, {\n              min: 3,\n              max: 5,\n              message: \"Length should be 3 to 5\"\n            }],\n            region: [{\n              required: true,\n              message: \"Please select Activity zone\"\n            }],\n            date1: [{\n              type: \"date\",\n              required: true,\n              message: \"Please pick a date\"\n            }],\n            date2: [{\n              type: \"date\",\n              required: true,\n              message: \"Please pick a time\"\n            }],\n            type: [{\n              type: \"array\",\n              required: true,\n              message: \"Please select at least one activity type\"\n            }],\n            resource: [{\n              required: true,\n              message: \"Please select activity resource\"\n            }],\n            desc: [{\n              required: true,\n              message: \"Please input activity form\"\n            }]\n          }\n        }\n      },\n      methods: {\n        submitForm: function (formName) {\n          var self = this;\n          self.$refs[formName].validate(function (valid) {\n            if (valid) {\n              self.$notify({ title: \"submit!\" });\n            } else {\n              self.$notify({ title: \"error submit!\" });\n              return false;\n            }\n          });\n        },\n        resetForm: function (formName) {\n          this.$refs[formName].resetFields();\n        }\n      }\n    },\n    code: '<vue-form :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"120px\">\\n' +\n      '  <vue-form-item label=\"Activity name\" prop=\"name\">\\n' +\n      '    <vue-input v-model=\"ruleForm.name\"></vue-input>\\n' +\n      '  </vue-form-item>\\n' +\n      '  <vue-form-item label=\"Activity zone\" prop=\"region\">\\n' +\n      '    <vue-select clearable v-model=\"ruleForm.region\" placeholder=\"please select your zone\">\\n' +\n      '      <vue-option label=\"Zone one\" value=\"shanghai\"></vue-option>\\n' +\n      '      <vue-option label=\"Zone two\" value=\"beijing\"></vue-option>\\n' +\n      '    </vue-select>\\n' +\n      '  </vue-form-item>\\n' +\n      '  <vue-form-item label=\"Activity time\" required>\\n' +\n      '    <vue-col :span=\"11\">\\n' +\n      '      <vue-form-item prop=\"date1\">\\n' +\n      '        <vue-date-picker type=\"date\" placeholder=\"Pick a date\" v-model=\"ruleForm.date1\"></vue-date-picker>\\n' +\n      '      </vue-form-item>\\n' +\n      '    </vue-col>\\n' +\n      '    <vue-col style=\"text-align:center;\" :span=\"2\">-</vue-col>\\n' +\n      '    <vue-col :span=\"11\">\\n' +\n      '      <vue-form-item prop=\"date2\">\\n' +\n      '        <vue-time-picker type=\"fixed-time\" placeholder=\"Pick a time\" v-model=\"ruleForm.date2\"></vue-time-picker>\\n' +\n      '      </vue-form-item>\\n' +\n      '    </vue-col>\\n' +\n      '  </vue-form-item>\\n' +\n      '  <vue-form-item label=\"Instant delivery\" prop=\"delivery\">\\n' +\n      '    <vue-switch on-text=\"\" off-text=\"\" v-model=\"ruleForm.delivery\"></vue-switch>\\n' +\n      '  </vue-form-item>\\n' +\n      '  <vue-form-item label=\"Activity type\" prop=\"type\">\\n' +\n      '    <vue-checkbox-group v-model=\"ruleForm.type\">\\n' +\n      '      <vue-checkbox label=\"Online activities\" name=\"type\"></vue-checkbox>\\n' +\n      '      <vue-checkbox label=\"Promotion activities\" name=\"type\"></vue-checkbox>\\n' +\n      '      <vue-checkbox label=\"Offline activities\" name=\"type\"></vue-checkbox>\\n' +\n      '    </vue-checkbox-group>\\n' +\n      '  </vue-form-item>\\n' +\n      '  <vue-form-item label=\"Resources\" prop=\"resource\">\\n' +\n      '    <vue-radio-group v-model=\"ruleForm.resource\">\\n' +\n      '      <vue-radio label=\"Sponsor\"></vue-radio>\\n' +\n      '      <vue-radio label=\"Venue\"></vue-radio>\\n' +\n      '    </vue-radio-group>\\n' +\n      '  </vue-form-item>\\n' +\n      '  <vue-form-item label=\"Activity form\" prop=\"desc\">\\n' +\n      '    <vue-input type=\"textarea\" v-model=\"ruleForm.desc\"></vue-input>\\n' +\n      '  </vue-form-item>\\n' +\n      '  <vue-form-item>\\n' +\n      '    <vue-button type=\"primary\" @click=\"submitForm(\\'ruleForm\\')\">Create</vue-button>\\n' +\n      '    <vue-button @click=\"resetForm(\\'ruleForm\\')\">Reset</vue-button>\\n' +\n      '  </vue-form-item>\\n' +\n      '</vue-form>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function(){\\n' +\n      '      return {\\n' +\n      '        ruleForm: {\\n' +\n      '          name: \"\",\\n' +\n      '          region: \"\",\\n' +\n      '          date1: \"\",\\n' +\n      '          date2: \"\",\\n' +\n      '          delivery: false,\\n' +\n      '          type: [],\\n' +\n      '          resource: \"\",\\n' +\n      '          desc: \"\"\\n' +\n      '        },\\n' +\n      '        rules: {\\n' +\n      '          name: [\\n' +\n      '            { required: true, message: \"Please input Activity name\"},\\n' +\n      '            { min: 3, max: 5, message: \"Length should be 3 to 5\"},\\n' +\n      '          ],\\n' +\n      '          region: [\\n' +\n      '            { required: true, message: \"Please select Activity zone\"},\\n' +\n      '          ],\\n' +\n      '          date1: [\\n' +\n      '            { type: \"date\", required: true, message: \"Please pick a date\"},\\n' +\n      '          ],\\n' +\n      '          date2: [\\n' +\n      '            { type: \"date\", required: true, message: \"Please pick a time\"},\\n' +\n      '          ],\\n' +\n      '          type: [\\n' +\n      '            { type: \"array\", required: true, message: \"Please select at least one activity type\"},\\n' +\n      '          ],\\n' +\n      '          resource: [\\n' +\n      '            { required: true, message: \"Please select activity resource\"},\\n' +\n      '          ],\\n' +\n      '          desc: [\\n' +\n      '            { required: true, message: \"Please input activity form\"},\\n' +\n      '          ]\\n' +\n      '        }\\n' +\n      '      }\\n' +\n      '    },\\n' +\n      '    methods: {\\n' +\n      '      submitForm: function(formName) {\\n' +\n      '        var self = this;\\n' +\n      '        self.$refs[formName].validate(function(valid) {\\n' +\n      '           if (valid) {\\n' +\n      '             self.$notify({title: \"submit!\"});\\n' +\n      '           } else {\\n' +\n      '             self.$notify({title: \"error submit!\"});\\n' +\n      '             return false;\\n' +\n      '           }\\n' +\n      '        });\\n' +\n      '      },\\n' +\n      '      resetForm: function(formName) {\\n' +\n      '        this.$refs[formName].resetFields();\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'form5',\n    label: 'formDemo.samples5.label',\n    description: 'formDemo.samples5.description',\n    template: '<div class=\"source\"><vue-form :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"120px\" :custom-message-method=\"showError\"><vue-form-item label=\"Password\" prop=\"pass\"><vue-input type=\"password\" v-model=\"ruleForm.pass\" auto-complete=\"off\"></vue-input></vue-form-item><vue-form-item label=\"Confirm\" prop=\"checkPass\"><vue-input type=\"password\" v-model=\"ruleForm.checkPass\" auto-complete=\"off\"></vue-input></vue-form-item><vue-form-item label=\"Age\" prop=\"age\"><vue-input v-model=\"ruleForm.age\"></vue-input>{{ruleForm.age}}</vue-form-item><vue-form-item><vue-button type=\"primary\" @click=\"submitForm(\\'ruleForm\\')\">Submit</vue-button><vue-button @click=\"resetForm(\\'ruleForm\\')\">Reset</vue-button></vue-form-item></vue-form></div>',\n    parameter: {\n      data: function () {\n        return {\n          ruleForm: {\n            pass: '',\n            checkPass: '',\n            age: ''\n          },\n          rules: {\n            pass: [{\n              validator: this.validatePass,\n              trigger: 'blur'\n            }],\n            checkPass: [{\n              validator: this.validatePass2,\n              trigger: 'blur'\n            }],\n            age: [{\n              validator: this.checkAge,\n              trigger: 'blur'\n            }]\n          }\n        }\n      },\n      methods: {\n        checkAge: function (rule, value, callback) {\n          if (!value) {\n            return callback(new Error('Please input the age'));\n          }\n          setTimeout(function () {\n            if (!Number.isInteger(value)) {\n              callback(new Error('Please input digits'));\n            } else {\n              if (value < 18) {\n                callback(new Error('Age must be greater than 18'));\n              } else {\n                callback();\n              }\n            }\n          }, 1000);\n        },\n        validatePass: function (rule, value, callback) {\n          if (value === '') {\n            callback(new Error('Please input the password'));\n          } else {\n            if (this.ruleForm.checkPass !== '') {\n              this.$refs.ruleForm.validateField('checkPass');\n            }\n            callback();\n          }\n        },\n        validatePass2: function (rule, value, callback) {\n          if (value === '') {\n            callback(new Error('Please input the password again'));\n          } else if (value !== this.ruleForm.pass) {\n            callback(new Error('Two password don\\'t match!'));\n          } else {\n            callback();\n          }\n        },\n        showError: function (msgs) {\n          var self = this;\n          if (VueUtil.isArray(msgs)) {\n            msgs.forEach(function (msg) {\n              msg && self.$notify.error({ message: msg });\n            });\n          } else {\n            msgs && self.$notify.error({ message: msgs });\n          }\n        },\n        submitForm: function (formName) {\n          var self = this;\n          self.$refs[formName].validate(function (valid) {\n            if (valid) {\n              self.$notify({ title: \"submit!\" });\n            }\n          });\n        },\n        resetForm: function (formName) {\n          this.$refs[formName].resetFields();\n        }\n      }\n    },\n    code: '<vue-form :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"120px\" :custom-message-method=\"showError\">\\n' +\n      '  <vue-form-item label=\"Password\" prop=\"pass\">\\n' +\n      '    <vue-input type=\"password\" v-model=\"ruleForm.pass\" auto-complete=\"off\"></vue-input>\\n' +\n      '  </vue-form-item>\\n' +\n      '  <vue-form-item label=\"Confirm\" prop=\"checkPass\">\\n' +\n      '    <vue-input type=\"password\" v-model=\"ruleForm.checkPass\" auto-complete=\"off\"></vue-input>\\n' +\n      '  </vue-form-item>\\n' +\n      '  <vue-form-item label=\"Age\" prop=\"age\">\\n' +\n      '    <vue-input v-model=\"ruleForm.age\"></vue-input>\\n' +\n      '  </vue-form-item>\\n' +\n      '  <vue-form-item>\\n' +\n      '    <vue-button type=\"primary\" @click=\"submitForm(\\'ruleForm\\')\">Submit</vue-button>\\n' +\n      '    <vue-button @click=\"resetForm(\\'ruleForm\\')\">Reset</vue-button>\\n' +\n      '  </vue-form-item>\\n' +\n      '</vue-form>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function() {\\n' +\n      '      return {\\n' +\n      '        ruleForm: {\\n' +\n      '          pass: \"\",\\n' +\n      '          checkPass: \"\",\\n' +\n      '          age: \"\"\\n' +\n      '        },\\n' +\n      '        rules: {\\n' +\n      '          pass: [{\\n' +\n      '            validator: this.validatePass,\\n' +\n      '            trigger: \"blur\"\\n' +\n      '          }],\\n' +\n      '          checkPass: [{\\n' +\n      '            validator: this.validatePass2,\\n' +\n      '            trigger: \"blur\"\\n' +\n      '          }],\\n' +\n      '          age: [{\\n' +\n      '            validator: this.checkAge,\\n' +\n      '            trigger: \"blur\"\\n' +\n      '          }]\\n' +\n      '        }\\n' +\n      '      }\\n' +\n      '    },\\n' +\n      '    methods: {\\n' +\n      '      checkAge: function(rule, value, callback) {\\n' +\n      '        if (!value) {\\n' +\n      '          return callback(new Error(\"Please input the age\"));\\n' +\n      '        }\\n' +\n      '        setTimeout(function() {\\n' +\n      '          if (!Number.isInteger(value)) {\\n' +\n      '            callback(new Error(\"Please input digits\"));\\n' +\n      '          } else {\\n' +\n      '            if (value < 18) {\\n' +\n      '              callback(new Error(\"Age must be greater than 18\"));\\n' +\n      '            } else {\\n' +\n      '              callback();\\n' +\n      '            }\\n' +\n      '          }\\n' +\n      '        }, 1000);\\n' +\n      '      },\\n' +\n      '      validatePass: function(rule, value, callback) {\\n' +\n      '        if (value === \"\") {\\n' +\n      '          callback(new Error(\"Please input the password\"));\\n' +\n      '        } else {\\n' +\n      '          if (this.ruleForm.checkPass !== \"\") {\\n' +\n      '            this.$refs.ruleForm.validateField(\"checkPass\");\\n' +\n      '          }\\n' +\n      '          callback();\\n' +\n      '        }\\n' +\n      '      },\\n' +\n      '      validatePass2: function(rule, value, callback) {\\n' +\n      '        if (value === \"\") {\\n' +\n      '          callback(new Error(\"Please input the password again\"));\\n' +\n      '        } else if (value !== this.ruleForm.pass) {\\n' +\n      '          callback(new Error(\"Two password don\\'t match!\"));\\n' +\n      '        } else {\\n' +\n      '          callback();\\n' +\n      '        }\\n' +\n      '      },\\n' +\n      '      showError: function(msgs) {\\n' +\n      '        var self = this;\\n' +\n      '        if (VueUtil.isArray(msgs)) {\\n' +\n      '          msgs.forEach(function(msg) {\\n' +\n      '            msg && self.$notify.error({message: msg});\\n' +\n      '          });\\n' +\n      '        } else {\\n' +\n      '          msgs && self.$notify.error({message: msgs});\\n' +\n      '        }\\n' +\n      '      },\\n' +\n      '      submitForm: function(formName) {\\n' +\n      '        var self = this;\\n' +\n      '        self.$refs[formName].validate(function(valid) {\\n' +\n      '          if (valid) {\\n' +\n      '            self.$notify({title: \"submit!\"});\\n' +\n      '          }\\n' +\n      '        });\\n' +\n      '      },\\n' +\n      '      resetForm: function(formName) {\\n' +\n      '        this.$refs[formName].resetFields();\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'form6',\n    label: 'formDemo.samples6.label',\n    description: 'formDemo.samples6.description',\n    template: '<div class=\"source\"><vue-form :model=\"dynamicValidateForm\" ref=\"dynamicValidateForm\" label-width=\"120px\" notify-message><vue-form-item prop=\"email\" label=\"Email\" :rules=\"[{ required: true, message: \\'Please input email address\\', trigger: \\'blur\\' }, { type: \\'email\\', message: \\'Please input correct email address\\', trigger: \\'blur\\' }]\"><vue-col :span=\"22\"><vue-input v-model=\"dynamicValidateForm.email\"></vue-input></vue-col></vue-form-item><vue-form-item v-for=\"(domain, index) in dynamicValidateForm.domains\" :label=\"\\'Domain\\'+index\" :key=\"domain.key\" :prop=\"\\'domains.\\'+index+\\'.value\\'\" :rules=\"{required: true, message: \\'domain can not be null\\', trigger: \\'blur\\'}\"><vue-col :span=\"22\"><vue-input v-model=\"domain.value\"></vue-input></vue-col><vue-col :span=\"2\"><vue-button @click.prevent=\"removeDomain(domain)\">Delete</vue-button></vue-col></vue-form-item><vue-form-item><vue-button type=\"primary\" @click=\"submitForm(\\'dynamicValidateForm\\')\">Submit</vue-button><vue-button @click=\"addDomain\">New domain</vue-button><vue-button @click=\"resetForm(\\'dynamicValidateForm\\')\">Reset</vue-button></vue-form-item></vue-form></div>',\n    parameter: {\n      data: function () {\n        return {\n          dynamicValidateForm: {\n            domains: [{\n              key: 1,\n              value: \"\"\n            }],\n            email: \"\"\n          }\n        }\n      },\n      methods: {\n        removeDomain: function (item) {\n          var index = this.dynamicValidateForm.domains.indexOf(item);\n          if (index !== -1) {\n            this.dynamicValidateForm.domains.splice(index, 1);\n          }\n        },\n        addDomain: function () {\n          this.dynamicValidateForm.domains.push({\n            key: Date.now(),\n            value: \"\"\n          });\n        },\n        submitForm: function (formName) {\n          var self = this;\n          self.$refs[formName].validate(function (valid) {\n            if (valid) {\n              self.$notify({ title: \"submit!\" });\n            }\n          });\n        },\n        resetForm: function (formName) {\n          this.$refs[formName].resetFields();\n        }\n      }\n    },\n    code: '<vue-form :model=\"dynamicValidateForm\" ref=\"dynamicValidateForm\" label-width=\"120px\" notify-message>\\n' +\n      '  <vue-form-item prop=\"email\" label=\"Email\" :rules=\"[{ required: true, message: \\'Please input email address\\', trigger: \\'blur\\' }, { type: \\'email\\', message: \\'Please input correct email address\\', trigger: \\'blur\\' }]\">\\n' +\n      '    <vue-col :span=\"22\"><vue-input v-model=\"dynamicValidateForm.email\"></vue-input></vue-col>\\n' +\n      '  </vue-form-item>\\n' +\n      '  <vue-form-item v-for=\"(domain, index) in dynamicValidateForm.domains\" :label=\"\\'Domain\\'+index\" :key=\"domain.key\" :prop=\"\\'domains.\\'+index+\\'.value\\'\" :rules=\"{required: true, message: \\'domain can not be null\\', trigger: \\'blur\\'}\">\\n' +\n      '    <vue-col :span=\"22\"><vue-input v-model=\"domain.value\"></vue-input></vue-col>\\n' +\n      '    <vue-col :span=\"2\"><vue-button @click.prevent=\"removeDomain(domain)\">Delete</vue-button></vue-col>\\n' +\n      '  </vue-form-item>\\n' +\n      '  <vue-form-item>\\n' +\n      '    <vue-button type=\"primary\" @click=\"submitForm(\\'dynamicValidateForm\\')\">Submit</vue-button>\\n' +\n      '    <vue-button @click=\"addDomain\">New domain</vue-button>\\n' +\n      '    <vue-button @click=\"resetForm(\\'dynamicValidateForm\\')\">Reset</vue-button>\\n' +\n      '  </vue-form-item>\\n' +\n      '</vue-form>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function () {\\n' +\n      '      return {\\n' +\n      '        dynamicValidateForm: {\\n' +\n      '          domains: [{\\n' +\n      '              key: 1,\\n' +\n      '              value: \\'\\'\\n' +\n      '            }\\n' +\n      '          ],\\n' +\n      '          email: \\'\\'\\n' +\n      '        }\\n' +\n      '      }\\n' +\n      '    },\\n' +\n      '    methods: {\\n' +\n      '      removeDomain: function (item) {\\n' +\n      '        var index = this.dynamicValidateForm.domains.indexOf(item);\\n' +\n      '        if (index !== -1) {\\n' +\n      '          this.dynamicValidateForm.domains.splice(index, 1);\\n' +\n      '        }\\n' +\n      '      },\\n' +\n      '      addDomain: function () {\\n' +\n      '        this.dynamicValidateForm.domains.push({\\n' +\n      '          key: Date.now(),\\n' +\n      '          value: \\'\\'\\n' +\n      '        });\\n' +\n      '      },\\n' +\n      '      submitForm: function (formName) {\\n' +\n      '        var self = this;\\n' +\n      '        self.$refs[formName].validate(function (valid) {\\n' +\n      '          if (valid) {\\n' +\n      '            self.$notify({title: \"submit!\"});\\n' +\n      '          }\\n' +\n      '        });\\n' +\n      '      },\\n' +\n      '      resetForm: function (formName) {\\n' +\n      '        this.$refs[formName].resetFields();\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'form7',\n    label: 'Form Attributes',\n    template: '<event-table :data=\"tableData\"></event-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"model\",\n            column2: \"formDemo.samples7.row1column2\",\n            column3: \"Object\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"rules\",\n            column2: \"formDemo.samples7.row2column2\",\n            column3: \"Object\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"inline\",\n            column2: \"formDemo.samples7.row3column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"label-position\",\n            column2: \"formDemo.samples7.row4column2\",\n            column3: \"String\",\n            column4: \"right, left, top\",\n            column5: \"right\"\n          }, {\n            column1: \"label-width\",\n            column2: \"formDemo.samples7.row5column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"label-suffix\",\n            column2: \"formDemo.samples7.row6column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"label-responsive\",\n            column2: \"formDemo.samples7.row8column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"true\"\n          }, {\n            column1: \"show-message\",\n            column2: \"formDemo.samples7.row7column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"true\"\n          }, {\n            column1: \"notify-message\",\n            column2: \"formDemo.samples7.row9column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"custom-message-method\",\n            column2: \"formDemo.samples7.row10column2\",\n            column3: \"Function\",\n            column4: \"\",\n            column5: \"\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'form8',\n    label: 'Form Methods',\n    template: '<method-table :data=\"tableData\"></method-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"validate\",\n            column2: \"formDemo.samples8.row1column2\",\n            column3: \"Function(callback: Function(boolean))\"\n          }, {\n            column1: \"validateField\",\n            column2: \"formDemo.samples8.row2column2\",\n            column3: \"Function(prop: string, callback: Function(errorMessage: string))\"\n          }, {\n            column1: \"resetFields\",\n            column2: \"formDemo.samples8.row3column2\",\n            column3: \"\"\n          }, {\n            column1: \"initValue\",\n            column2: \"formDemo.samples8.row4column2\",\n            column3: \"\"\n          }, {\n            column1: \"isModify\",\n            column2: \"formDemo.samples8.row5column2\",\n            column3: \"\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'form9',\n    label: 'Form-Item Attributes',\n    template: '<event-table :data=\"tableData\"></event-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"prop\",\n            column2: \"formDemo.samples9.row1column2\",\n            column3: \"String\",\n            column4: \"formDemo.samples9.row1column4\",\n            column5: \"\"\n          }, {\n            column1: \"label\",\n            column2: \"formDemo.samples9.row2column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"label-width\",\n            column2: \"formDemo.samples9.row3column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"required\",\n            column2: \"formDemo.samples9.row4column2\",\n            column3: \"bolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"rules\",\n            column2: \"formDemo.samples9.row5column2\",\n            column3: \"Object\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"error\",\n            column2: \"formDemo.samples9.row6column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"show-message\",\n            column2: \"formDemo.samples9.row7column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"true\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'form10',\n    label: 'Rules',\n    template: '<attr-table :data=\"tableData\"></attr-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"required\",\n            column2: \"formDemo.samples10.row1column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"len\",\n            column2: \"formDemo.samples10.row2column2\",\n            column3: \"Number\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"min\",\n            column2: \"formDemo.samples10.row3column2\",\n            column3: \"Number\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"max\",\n            column2: \"formDemo.samples10.row4column2\",\n            column3: \"Number\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"type\",\n            column2: \"formDemo.samples10.row5column2\",\n            column3: \"String\",\n            column4: \"integer, float, array, date, number, object, method, email, url, hex, ipv4\",\n            column5: \"\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }]\n};\nmodule.exports = formDemo;\n","'use strict';\nvar hotkeyDemo = {\n  path: '/hotkey',\n  name: 'hotkey',\n  head: {\n    label: 'hotkeyDemo.label',\n    description: 'hotkeyDemo.description'\n  },\n  samples: [{\n    id: 'hotkey1',\n    label: 'hotkeyDemo.samples1.label',\n    description: 'hotkeyDemo.samples1.description',\n    template: '<div class=\"source\">'\n             +'  <vue-button v-hotkey:f1 @click=\"click\">F1</vue-button>'\n             +'  <vue-button v-hotkey:f2=\"handler\">F2</vue-button>'\n             +'  <vue-input placeholder=\"f3 to focus\" v-hotkey:f3=\"\\'focus\\'\"></vue-input>'\n             +'</div>',\n    parameter: {\n      methods: {\n        click: function(event) {\n          this.$notify({title: 'F1'});\n        },\n        handler: function(event, el) {\n          this.$notify({title: 'F2'});\n        }\n      }\n    },\n    code: '<div class=\"source\"> \\n'\n    +'  <vue-button v-hotkey:f1 @click=\"click\">F1</vue-button>\\n'\n    +'  <vue-button v-hotkey:f2=\"handler\">F2</vue-button>\\n'\n    +'  <vue-input placeholder=\"f3 to focus\" v-hotkey:f3=\"\\'focus\\'\"></vue-input>\\n'\n    +'</div>\\n\\n'\n    +'<script>\\n'\n    +'  new Vue({\\n'\n    +'      methods: { \\n'\n    +'        click: function(event) {\\n'\n    +'          this.$notify({title: \\'F1\\'});\\n'\n    +'        },\\n'\n    +'        handler: function(event, el) {\\n'\n    +'          this.$notify({title: \\'F2\\'});\\n'\n    +'        }\\n'\n    +'      }\\n'\n    +'  }).$mount();\\n'\n    +'</script>'\n  }]\n};\nmodule.exports = hotkeyDemo;\n","'use strict';\nvar i18nDemo = {\n  path: '/i18n',\n  name: 'i18n',\n  head: {\n    label: 'i18nDemo.label',\n    description: ''\n  },\n  samples: [{\n    id: 'i18n1',\n    label: 'i18nDemo.samples1.label',\n    description: 'i18nDemo.samples1.description',\n    template: '<div class=\"source\"><vue-row ><vue-col :span=\"6\"><vue-button plain @click=\"clickHandle1\">{{$t(\\'button.label1\\')}}</vue-button></vue-col><vue-col :span=\"6\"><vue-button plain @click=\"clickHandle2\">{{$t(\\'button.label2\\')}}</vue-button></vue-col></vue-row></div>',\n    parameter: {\n      mounted: function () {\n        var locales = {\n          zh: {\n            button: {\n              label1: '中文',\n              label2: '日文',\n              label3: '英文'\n            },\n            message: {\n              hello: '{msg} 世界!'\n            }\n          },\n          ja: {\n            button: {\n              label1: '中国語',\n              label2: '日本語',\n              label3: '英語'\n            },\n            message: {\n              hello: '世界! {msg} '\n            }\n          }\n        };\n        VueUtil.setLocale('zh', locales.zh);\n        VueUtil.setLocale('ja', locales.ja);\n        this.$forceUpdate();\n      }\n    },\n    code: '<vue-button plain @click=\"clickHandle1\">{{$t(\\'button.label1\\')}}</vue-button>\\n' +\n      '<vue-button plain @click=\"clickHandle2\">{{$t(\\'button.label2\\')}}</vue-button>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    mounted: function() {\\n' +\n      '      var locales = {\\n' +\n      '        zh: {\\n' +\n      '          button: {\\n' +\n      '            label1: \"中文\",\\n' +\n      '            label2: \"日文\",\\n' +\n      '            label3: \"英文\"\\n' +\n      '          },\\n' +\n      '          message: {\\n' +\n      '            hello: \"{msg} 世界!\"\\n' +\n      '          }\\n' +\n      '        },\\n' +\n      '        ja: {\\n' +\n      '          button: {\\n' +\n      '            label1: \"中国語\",\\n' +\n      '            label2: \"日本語\",\\n' +\n      '            label3: \"英語\"\\n' +\n      '          },\\n' +\n      '          message: {\\n' +\n      '            hello: \"世界! {msg}\"\\n' +\n      '          }\\n' +\n      '        }\\n' +\n      '      };\\n' +\n      '      VueUtil.setLocale(\"zh\", locales.zh);\\n' +\n      '      VueUtil.setLocale(\"ja\", locales.ja);\\n' +\n      '    },\\n' +\n      '    methods: {\\n' +\n      '      clickHandle1: function() {\\n' +\n      '        VueUtil.setLang(\"zh\");\\n' +\n      '        var self = this;\\n' +\n      '        self.$nextTick(function(){\\n' +\n      '          self.$notify({title: self.$t(\"message.hello\", { msg: \"你好!\"})});\\n' +\n      '        });\\n' +\n      '      },\\n' +\n      '      clickHandle2: function() {\\n' +\n      '        VueUtil.setLang(\"ja\");\\n' +\n      '        var self = this;\\n' +\n      '        self.$nextTick(function(){\\n' +\n      '          self.$notify({title: self.$t(\"message.hello\", { msg: \"こんにちは!\"})});\\n' +\n      '        });\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'i18n2',\n    label: 'i18nDemo.samples2.label',\n    description: 'i18nDemo.samples2.description',\n    collapse: [\"item1\"],\n    code: \n    \"import Vue from 'vue' \\n\\\nimport VueI18n from 'vue-i18n' \\n\\\nimport Viy from 'viy-ui' \\n\\\nimport App from './App.vue' \\n\\\n\\n\\\nVue.use(VueI18n) \\n\\\nVue.use(Viy) \\n\\\n\\n\\\nVueUtil.setLocale('ja', pjMessage); //set pj message \\n\\\nVueUtil.setLang('ja'); \\n\\\n\\n\\\nVue.config.productionTip = false \\n\\\n\\n\\\nnew Vue({ \\n\\\n  render: h => h(App), \\n\\\n}).$mount('#app')\"\n  }, {\n    id: 'i18n2',\n    label: 'i18nDemo.samples3.label',\n    description: 'i18nDemo.samples3.description',\n    collapse: [\"item1\"],\n    code: \n    \"import Vue from 'vue' \\n\\\nimport VueI18n from 'vue-i18n' \\n\\\nimport Viy from 'viy-ui' \\n\\\nimport App from './App.vue' \\n\\\n\\n\\\nVue.use(VueI18n) \\n\\\nVue.use(Viy) \\n\\\n\\n\\\nconst messages = { \\n\\\n  ja: { \\n\\\n    message: 'こんにちは', //Pj message \\n\\\n    ...Viy.lang.ja  //Extend viy component i18n message \\n\\\n  }, \\n\\\n  en: { \\n\\\n    message: 'Hello', \\n\\\n    ...Viy.lang.en \\n\\\n  }, \\n\\\n  zh: { \\n\\\n    message: '你好', \\n\\\n    ...Viy.lang.zh \\n\\\n  } \\n\\\n} \\n\\\n\\n\\\n// Create VueI18n instance with options \\n\\\nconst i18n = new VueI18n({ \\n\\\n  locale: 'ja', // set default locale \\n\\\n  messages, // set locale messages \\n\\\n}) \\n\\\n\\n\\\nViy.setI18n(i18n); //set i18n function to viy \\n\\\n\\n\\\nVue.config.productionTip = false \\n\\\n\\n\\\nnew Vue({ \\n\\\n  i18n, \\n\\\n  render: h => h(App), \\n\\\n}).$mount('#app')\"\n  }]\n};\nmodule.exports = i18nDemo;\n","'use strict';\nvar iconDemo = {\n  path: '/icon',\n  name: 'icon',\n  head: {\n    label: 'iconDemo.label',\n    description: 'iconDemo.description'\n  },\n  samples: [{\n    label: 'iconDemo.samples1.label',\n    description: 'iconDemo.samples1.description',\n    template: '<div class=\"source\"><i class=\"vue-icon-edit\"></i><i class=\"vue-icon-share\"></i><i class=\"vue-icon-delete\"></i><vue-button type=\"primary\" icon=\"vue-icon-search\">Search</vue-button></div>',\n    code: '<i class=\"vue-icon-edit\"></i>\\n<i class=\"vue-icon-share\"></i>\\n<i class=\"vue-icon-delete\"></i>\\n<vue-button type=\"primary\" icon=\"vue-icon-search\">Search</vue-button>',\n    id: 'icon1'\n  }, {\n    label: 'iconDemo.samples2.label',\n    description: '',\n    template: '<div class=\"source source-icon\"><ul class=\"icon-list\"><li v-for=\"(icon,index) in iconAry\" :key=\"index\"><span><i :class=\"icon.split(\\',\\')[0]\"></i><span v-for=\"title in icon.split(\\',\\')\" style=\"font-size: 11px;\">{{title}}</span></span></li></ul></div>',\n    parameter: {\n      data: function () {\n        return {\n          iconAry: ['vue-icon-arrow-down'\n            , 'vue-icon-arrow-left'\n            , 'vue-icon-arrow-right'\n            , 'vue-icon-arrow-up'\n            , 'vue-icon-d-arrow-left'\n            , 'vue-icon-d-arrow-right'\n            , 'vue-icon-caret-bottom'\n            , 'vue-icon-caret-left'\n            , 'vue-icon-caret-right'\n            , 'vue-icon-caret-top'\n            , 'vue-icon-d-caret'\n            , 'vue-icon-loading'\n            , 'vue-icon-menu'\n            , 'vue-icon-success'\n            , 'vue-icon-question'\n            , 'vue-icon-information'\n            , 'vue-icon-warning'\n            , 'vue-icon-error'\n            , 'vue-icon-check'\n            , 'vue-icon-close'\n            , 'vue-icon-upload'\n            , 'vue-icon-download'\n            , 'vue-icon-upload2'\n            , 'vue-icon-download2'\n            , 'vue-icon-plus'\n            , 'vue-icon-minus'\n            , 'vue-icon-circled-plus'\n            , 'vue-icon-circled-minus'\n            , 'vue-icon-plus2'\n            , 'vue-icon-minus2'\n            , 'vue-icon-date'\n            , 'vue-icon-time'\n            , 'vue-icon-history'\n            , 'vue-icon-document'\n            , 'vue-icon-folder-open'\n            , 'vue-icon-folder-open2'\n            , 'vue-icon-edit'\n            , 'vue-icon-pencil'\n            , 'vue-icon-edit2'\n            , 'vue-icon-delete'\n            , 'vue-icon-delete2'\n            , 'vue-icon-more'\n            , 'vue-icon-message'\n            , 'vue-icon-picture'\n            , 'vue-icon-box'\n            , 'vue-icon-desktop'\n            , 'vue-icon-mobile'\n            , 'vue-icon-print'\n            , 'vue-icon-share'\n            , 'vue-icon-search'\n            , 'vue-icon-view,vue-icon-zoom-in'\n            , 'vue-icon-zoom-out'\n            , 'vue-icon-setting'\n            , 'vue-icon-star-off'\n            , 'vue-icon-star-on'\n            , 'vue-icon-user'\n            , 'vue-icon-user-plus'\n            , 'vue-icon-user-times'\n            , 'vue-icon-lock'\n            , 'vue-icon-out'\n            , 'vue-icon-in'\n            , 'vue-icon-th-list'\n            , 'vue-icon-list-alt'\n            , 'vue-icon-table'\n            , 'vue-icon-columns'\n            , 'vue-icon-cube'\n            , 'vue-icon-server'\n            , 'vue-icon-cubes'\n            , 'vue-icon-database'\n            , 'vue-icon-codeopen'\n            , 'vue-icon-level-up'\n            , 'vue-icon-level-down'\n            , 'vue-icon-wrench'\n            , 'vue-icon-suitcase'\n            , 'vue-icon-refresh'\n            , 'vue-icon-direction'\n            , 'vue-icon-home'\n            , 'vue-icon-attachment'\n            , 'vue-icon-attach-file'\n            , 'vue-icon-filter'\n            , 'vue-icon-filter-o'\n            , 'vue-icon-comment-o'\n            , 'vue-icon-user-o'\n            , 'vue-icon-bell-o'\n            , 'vue-icon-bell'\n            , 'vue-icon-sort-asc'\n            , 'vue-icon-sort-desc'\n            , 'vue-icon-enlarge'\n            , 'vue-icon-shrink'\n            , 'vue-icon-switch'\n            , 'vue-icon-sort'\n            , 'vue-icon-cart-o'\n            , 'vue-icon-copy'\n            , 'vue-icon-cart'\n            , 'vue-icon-tags'\n            , 'vue-icon-tag'\n            , 'vue-icon-phone'\n            , 'vue-icon-bar-chart'\n            , 'vue-icon-phone-o'\n            , 'vue-icon-truck-o'\n            , 'vue-icon-pie-chart'\n            , 'vue-icon-stats-chart'\n            , 'vue-icon-truck'\n            , 'vue-icon-clipboard'\n            , 'vue-icon-users'\n            , 'vue-icon-save'\n            , 'vue-icon-save-o'\n            , 'vue-icon-barcode'\n            , 'vue-icon-qrcode'\n            , 'vue-icon-scan'\n            , 'vue-icon-external'\n            , 'vue-icon-keyboard'\n            , 'vue-icon-key'\n            , 'vue-icon-language'\n            , 'vue-icon-undo,vue-icon-rotate-left'\n            , 'vue-icon-repeat,vue-icon-rotate-right'\n            , 'vue-icon-edit-crop'\n          ]\n        }\n      }\n    },\n    id: 'icon2',\n    notshowmeta: true\n  }]\n};\nmodule.exports = iconDemo;\n","'use strict';\nvar imageDemo = {\n    path: '/image',\n    name: 'image',\n    head: {\n        label: 'imageDemo.label',\n        description: 'imageDemo.description'\n    },\n    samples: [{\n        label: 'imageDemo.samples1.label',\n        description: 'imageDemo.samples1.description',\n        template: '<div class=\"source\"><div class=\"demo-image\"><div class=\"block\" v-for=\"fit in fits\" :key=\"fit\"><span  class=\"demonstration\">{{ fit }}</span><vue-image style=\"width: 100px; height: 100px\" :src=\"url\" :fit=\"fit\"></vue-image></div></div></div>',\n        parameter: {\n            data: function () {\n              return {\n                    fits: ['fill', 'contain', 'cover', 'none', 'scale-down'],\n                    url: 'image/image_fit.png'\n              };\n            }\n        },\n        code: '<div class=\"demo-image\">\\n'+\n              '     <div class=\"block\" v-for=\"fit in fits\" :key=\"fit\">\\n'+\n              '         <span  class=\"demonstration\">{{ fit }}</span>\\n'+\n              '         <vue-image\\n'+\n              '             style=\"width: 100px; height: 100px\"\\n'+\n              '             :src=\"url\"\\n'+\n              '             :fit=\"fit\">\\n'+\n              '         </vue-image>\\n'+\n              '     </div>\\n'+\n              ' </div>\\n\\n'+\n              '<script>\\n' +\n              '  new Vue({\\n' +\n              '    data: function() {\\n' +\n              '      return {\\n' +\n              '        fits: [\\'fill\\', \\'contain\\', \\'cover\\', \\'none\\', \\'scale-down\\'],\\n' +\n              '        url: \\'image/image_fit.png\\'\\n' +\n              '      };\\n' +\n              '    }\\n' +\n              '  }).$mount();\\n' +\n              '</script>',\n        id: 'image1'\n    },{\n        label: 'imageDemo.samples2.label',\n        description: 'imageDemo.samples2.description',\n        template: '<div class=\"source\"><div class=\"demo-image__placeholder\"><div class=\"block\"><span class=\"demonstration\">{{$t(\"imageDemo.defatltText\")}}</span><vue-image :src=\"src\"></vue-image></div><div class=\"block\"><span class=\"demonstration\">{{$t(\"imageDemo.customText\")}}</span><vue-image :src=\"src\"><div slot=\"placeholder\" class=\"image-slot\">{{$t(\"imageDemo.samples2.loading\")}}<span class=\"dot\">...</span></div></vue-image></div></div></div>',\n        parameter: {\n            data: function () {\n              return {\n                    src: 'image/image_placeholder.png'\n              };\n            }\n        },\n        code: '<div class=\"demo-image__placeholder\">\\n'+\n              '     <div class=\"block\">\\n'+\n              '         <span class=\"demonstration\">{{$t(\\\"imageDemo.defatltText\\\")}}</span>\\n'+\n              '         <vue-image :src=\"src\"></vue-image>\\n'+\n              '     </div>\\n'+\n              '     <div class=\"block\">\\n'+\n              '         <span class=\"demonstration\">{{$t(\\\"imageDemo.customText\\\")}}</span>\\n'+\n              '         <vue-image :src=\"src\">\\n'+\n              '             <div slot=\"placeholder\" class=\"image-slot\">\\n' +\n              '                 {{$t(\\\"imageDemo.samples2.loading\\\")}}<span class=\"dot\">...</span>\\n' +\n              '             </div>\\n'+\n              '         </vue-image>\\n'+\n              '     </div>\\n'+\n              '</div>\\n\\n'+\n              '<script>\\n' +\n              '  new Vue({\\n' +\n              '    data: function() {\\n' +\n              '      return {\\n' +\n              '        src: \\'image/image_placeholder.png\\'\\n' +\n              '      };\\n' +\n              '    }\\n' +\n              '  }).$mount();\\n' +\n              '</script>',\n        id: 'image2'\n    },{\n        label: 'imageDemo.samples3.label',\n        description: 'imageDemo.samples3.description',\n        template: '<div class=\"source\"><div class=\"demo-image__error\"><div class=\"block\"><span class=\"demonstration\">{{$t(\\\"imageDemo.defatltText\\\")}}</span><vue-image></vue-image></div><div class=\"block\"><span class=\"demonstration\">{{$t(\\\"imageDemo.customText\\\")}}</span><vue-image><div slot=\"error\" class=\"image-slot\"><i class=\"vue-icon-picture\"></i></div></vue-image></div></div></div>',\n        code: '<div class=\"demo-image__error\">\\n'+\n              '     <div class=\"block\">\\n'+\n              '         <span class=\"demonstration\">{{$t(\\\"imageDemo.defatltText\\\")}}</span>\\n'+\n              '         <vue-image></vue-image>\\n'+\n              '     </div>\\n'+\n              '     <div class=\"block\">\\n'+\n              '         <span class=\"demonstration\">{{$t(\\\"imageDemo.customText\\\")}}</span>\\n'+\n              '         <vue-image >\\n'+\n              '             <div slot=\"error\" class=\"image-slot\">\\n' +\n              '                 <i class=\"vue-icon-picture\"></i>\\n' +\n              '             </div>\\n'+\n              '         </vue-image>\\n'+\n              '     </div>\\n'+\n              '</div>\\n',\n        id: 'image3'\n    },{\n        label: 'imageDemo.samples4.label',\n        description: 'imageDemo.samples4.description',\n        template: '<div class=\"source\" > <div class=\"demo-image__lazy\"><vue-image v-for=\"url in urls\" :key=\"url\" :src=\"url\" lazy></vue-image></div></div>',\n        parameter: {\n            data: function () {\n              return {\n                urls: [\n                    'image/image_lazy1.png',\n                    'image/image_lazy2.png',\n                    'image/image_lazy3.png',\n                    'image/image_lazy4.png'\n                  ]\n              };\n            }\n        },\n        code: '<div class=\"demo-image__lazy\">\\n'+\n              '     <vue-image v-for=\"url in urls\" :key=\"url\" :src=\"url\" lazy></vue-image>\\n'+\n              '</div>\\n\\n'+\n              '<script>\\n' +\n              '  new Vue({\\n' +\n              '    data: function() {\\n' +\n              '      return {\\n' +\n              '        urls: [\\n' +\n              '          \\'image/image_lazy1.png\\'\\n' +\n              '          \\'image/image_lazy2.png\\'\\n' +\n              '          \\'image/image_lazy3.png\\'\\n' +\n              '          \\'image/image_lazy4.png\\'\\n' + \n              '        ]\\n'+             \n              '      };\\n' +\n              '    }\\n' +\n              '  }).$mount();\\n' +\n              '</script>',\n        id: 'image4'\n    },{\n        label: 'imageDemo.samples5.label',\n        description: 'imageDemo.samples5.description',\n        template: '<div class=\"source\" ><div class=\"demo-image__preview\"><vue-image style=\"width: 100px; height: 100px\" :src=\"url\" :preview-src-list=\"srcList\"></vue-image><vue-image :img-label=\"$t(\\'imageDemo.samples5.imgLabelText\\')\" style=\"width: 200px; height: 100px;margin-left: 100px; line-height: 100px;font-size: 20px;background:#dfe6ec;text-align: center;\" :src=\"url\" :preview-src-list=\"srcList\"></vue-image></div></div>',\n        parameter: {\n            data: function () {\n              return {\n                url: 'image/image_fit.png',\n                srcList: [\n                  'image/image_fit.png', \n                  'image/image_preview1.png',\n                  'image/image_preview2.png'\n                ]\n              };\n            }\n        },\n        code: '<div class=\"demo-image__preview\">\\n'+\n              '     <vue-image \\n'+\n              '         style=\"width: 100px; height: 100px\"\\n'+\n              '         :src=\"url\" \\n'+\n              '         :preview-src-list=\"srcList\">\\n'+\n              '     </vue-image>\\n'+  \n              '     <vue-image \\n'+\n              '         :img-label=\"$t(\\'imageDemo.samples5.imgLabelText\\')\" style=\"width: 200px; height: 100px;margin-left: 100px;\\n'+\n              '             line-height: 100px;font-size: 20px;background:#dfe6ec;text-align: center;\" \\n'+\n              '         :src=\"url\" \\n'+\n              '         :preview-src-list=\"srcList\">\\n'+\n              '     </vue-image>\\n'+    \n              '</div>\\n\\n'+\n              '<script>\\n' +\n              '  new Vue({\\n' +\n              '    data: function() {\\n' +\n              '      return {\\n' +\n              '        url: \\'image/image_fit.png\\'\\n' +\n              '        srcList: [\\n' +\n              '          \\'image/image_fit.png\\',\\n' +\n              '          \\'image/image_preview1.png\\',\\n' +\n              '          \\'image/image_preview2.png\\'\\n' +\n              '        ]\\n' +\n              '      };\\n' +\n              '    }\\n' +\n              '  }).$mount();\\n' +\n              '</script>',\n        id: 'image5'\n    },{\n        id: 'image6',\n        label: 'Attributes',\n        template: '<attr-table :data=\"tableData\"></attr-table>',\n        parameter: {\n            data: function () {\n                return {\n                    tableData: [{\n                        column1: \"src\",\n                        column2: \"imageDemo.samples6.row1column2\",\n                        column3: \"String\",\n                        column4: \"\",\n                        column5: \"\"\n                    }, {\n                        column1: \"fit\",\n                        column2: \"imageDemo.samples6.row2column2\",\n                        column3: \"String\",\n                        column4: \"fill,contain,cover,none,scale-down\",\n                        column5: \"\"\n                    }, {\n                        column1: \"alt\",\n                        column2: \"imageDemo.samples6.row3column2\",\n                        column3: \"String\",\n                        column4: \"\",\n                        column5: \"\"\n                    }, {\n                        column1: \"referrer-policy\",\n                        column2: \"imageDemo.samples6.row4column2\",\n                        column3: \"String\",\n                        column4: \"\",\n                        column5: \"\"\n                    }, {\n                        column1: \"lazy\",\n                        column2: \"imageDemo.samples6.row5column2\",\n                        column3: \"Boolean\",\n                        column4: \"\",\n                        column5: \"false\"\n                    }, {\n                        column1: \"scroll-container\",\n                        column2: \"imageDemo.samples6.row6column2\",\n                        column3: \"String / HTMLElement\",\n                        column4: \"\",\n                        column5: \"imageDemo.samples6.row6column5\"\n                    }, {\n                        column1: \"preview-src-list\",\n                        column2: \"imageDemo.samples6.row7column2\",\n                        column3: \"Array\",\n                        column4: \"\",\n                        column5: \"\"\n                    }, {\n                        column1: \"z-index\",\n                        column2: \"imageDemo.samples6.row8column2\",\n                        column3: \"Number\",\n                        column4: \"\",\n                        column5: \"2000\"\n                    },{\n                        column1: \"img-label\",\n                        column2: \"imageDemo.samples6.row9column2\",\n                        column3: \"String\",\n                        column4: \"\",\n                        column5: \"\"\n                    },{\n                        column1: \"round\",\n                        column2: \"imageDemo.samples6.row10column2\",\n                        column3: \"Boolean\",\n                        column4: \"\",\n                        column5: \"\"\n                    }]\n                }\n            }\n        },\n        notshowmeta: true\n    },{\n        id: 'image7',\n        label: 'Events',\n        template: '<event-table :data=\"tableData\"></event-table>',\n        parameter: {\n          data: function () {\n            return {\n              tableData: [{\n                column1: \"load\",\n                column2: \"imageDemo.samples7.row1column2\",\n                column3: \"Event object\"\n              },{\n                column1: \"error\",\n                column2: \"imageDemo.samples7.row2column2\",\n                column3: \"Event object\"\n              }]\n            }\n          }\n        },\n        notshowmeta: true\n      }, {\n        id: 'image8',\n        label: 'Slots',\n        template: '<slot-table :data=\"tableData\"></slot-table>',\n        parameter: {\n          data: function () {\n            return {\n              tableData: [{\n                column1: \"placeholder\",\n                column2: \"imageDemo.samples8.row1column2\"\n              }, {\n                column1: \"error\",\n                column2: \"imageDemo.samples8.row2column2\"\n              }]\n            }\n          }\n        },\n        notshowmeta: true\n      }]\n};\n\nmodule.exports = imageDemo\n","'use strict';\nvar imageviewerDemo = {\n    path: '/image-viewer',\n    name: 'imageviewer',\n    head: {\n        label: 'imageviewerDemo.label',\n        description: 'imageviewerDemo.description'\n    },\n    samples: [{\n      id: 'imageviewer1',\n      label: 'imageviewerDemo.samples1.label',\n      description: 'imageviewerDemo.samples1.description',\n      template: '<div class=\"source\"><i class=\"vue-icon-picture\" style=\"font-size:80px\" @click=\"showViewer=true\"></i><vue-image-viewer v-if=\"showViewer\" :on-close=\"closeViewer\" :url-list=\"imgList\" /></div>',\n      parameter: {\n          data: function () {\n            return {\n              showViewer:false,\n              imgList:[\n                'image/image_lazy1.png',\n                'image/image_lazy2.png',\n                'image/image_lazy3.png',\n                'image/image_lazy4.png'\n              ]\n            };\n          },\n          methods:{\n            closeViewer: function() {\n              this.showViewer = false;\n            }\n          }\n      },\n      code: '<i class=\"vue-icon-picture\" style=\"font-size:80px\" @click=\"showViewer=true\"></i>\\n\\n'+\n            '<vue-image-viewer v-if=\"showViewer\" :on-close=\"closeViewer\" :url-list=\"imgList1\" />\\n\\n'+\n            '<script>\\n' +\n            '  new Vue({\\n' +\n            '    data: function() {\\n' +\n            '      return {\\n' +\n            '        showViewer: false,\\n' +\n            '        imgList1: [\\n' +\n            '          \\'image/image_lazy1.png\\',\\n'+\n            '          \\'image/image_lazy2.png\\',\\n'+\n            '          \\'image/image_lazy3.png\\',\\n'+\n            '          \\'image/image_lazy4.png\\'\\n'+\n            '        ]\\n' +\n            '      };\\n' +\n            '    }\\n' +\n            '  }).$mount();\\n' +\n            '</script>'\n    },{\n      id: 'imageviewer2',\n      label: 'imageviewerDemo.samples2.label',\n      description: 'imageviewerDemo.samples2.description',\n      template: '<div class=\"source\"><i class=\"vue-icon-picture\" style=\"font-size:80px\" @click=\"showViewer=true\"></i><vue-image-viewer v-if=\"showViewer\" :on-close=\"closeViewer\" :url-list=\"imgList\" :active-index=\"activeImgIndex\"/></div>',\n        parameter: {\n            data: function () {\n              return {\n                showViewer:false,\n                imgList:[\n                     'image/image_lazy1.png',\n                     'image/image_lazy2.png',\n                     'image/image_lazy3.png',\n                     'image/image_lazy4.png'\n                ],\n                activeImgIndex:2\n              };\n            },\n            methods:{\n              closeViewer: function() {\n                this.showViewer = false;\n              }\n            }\n        },\n        code: '<i class=\"vue-icon-picture\" style=\"font-size:80px\" @click=\"showViewer=true\"></i>\\n\\n'+\n        '<vue-image-viewer v-if=\"showViewer\" :on-close=\"closeViewer\" :url-list=\"imgList1\" :active-index=\"activeImgIndex\" />\\n\\n'+\n        '<script>\\n' +\n        '  new Vue({\\n' +\n        '    data: function() {\\n' +\n        '      return {\\n' +\n        '        showViewer: false,\\n' +\n        '        imgList1: [\\n' +\n        '          \\'image/image_lazy1.png\\',\\n'+\n        '          \\'image/image_lazy2.png\\',\\n'+\n        '          \\'image/image_lazy3.png\\',\\n'+\n        '          \\'image/image_lazy4.png\\'\\n'+\n        '        ],\\n' +\n        '        activeImgIndex:2\\n'+\n        '      };\\n' +\n        '    }\\n' +\n        '  }).$mount();\\n' +\n        '</script>'\n  },{\n        id: 'imageviewer3',\n        label: 'Attributes',\n        template: '<attr-table :data=\"tableData\"></attr-table>',\n        parameter: {\n            data: function () {\n                return {\n                    tableData: [{\n                        column1: \"url-list\",\n                        column2: \"imageviewerDemo.samples3.row1column2\",\n                        column3: \"Array\",\n                        column4: \"\",\n                        column5: \"[]\"\n                    }, {\n                        column1: \"z-index\",\n                        column2: \"imageviewerDemo.samples3.row2column2\",\n                        column3: \"Number\",\n                        column4: \"\",\n                        column5: \"2000\"\n                    }, {\n                        column1: \"active-index\",\n                        column2: \"imageviewerDemo.samples3.row3column2\",\n                        column3: \"Number\",\n                        column4: \"\",\n                        column5: \"0\"\n                    }, {\n                        column1: \"on-switch\",\n                        column2: \"imageviewerDemo.samples3.row4column2\",\n                        column3: \"Function\",\n                        column4: \"\",\n                        column5: \"function(){ return {};}\"\n                    }, {\n                        column1: \"on-close\",\n                        column2: \"imageviewerDemo.samples3.row5column2\",\n                        column3: \"Function\",\n                        column4: \"\",\n                        column5: \"function(){ return {};}\"\n                    }]\n                }\n            }\n        },\n        notshowmeta: true\n    }]\n};\n\nmodule.exports = imageviewerDemo\n","'use strict';\nvar inputDemo = {\n  path: '/input',\n  name: 'input',\n  head: {\n    label: 'inputDemo.label',\n    description: 'inputDemo.description'\n  },\n  samples: [{\n    id: 'input1',\n    label: 'inputDemo.samples1.label',\n    description: '',\n    template: '<div class=\"source\"><vue-input v-model=\"input\" :placeholder=\"$t(\\'inputDemo.defaultPlaceholder\\')\"></vue-input></div>',\n    parameter: {\n      data: function () {\n        return {\n          input: ''\n        }\n      }\n    },\n    code: '<vue-input v-model=\"input\" :placeholder=\"$t(\\'inputDemo.defaultPlaceholder\\')\"></vue-input>\\n\\n<script>\\n  new Vue({\\n    data: function(){\\n      return {\\n        input: \"\"\\n      }\\n    }\\n  }).$mount();\\n</script>'\n  }, {\n    id: 'input9',\n    label: 'inputDemo.samples9.label',\n    description: 'inputDemo.samples9.description',\n    template: '<div class=\"source\"><vue-input v-model=\"input\" :placeholder=\"$t(\\'inputDemo.defaultPlaceholder\\')\" :cleave=\"{delimiter: \\'-\\', blocks: [4, 3, 3, 4], uppercase: true}\"></vue-input></div>',\n    parameter: {\n      data: function () {\n        return {\n          input: ''\n        }\n      }\n    },\n    code: '<vue-input v-model=\"input\" :placeholder=\"$t(\\'inputDemo.defaultPlaceholder\\')\" :cleave=\"{delimiter: \\'-\\', blocks: [4, 3, 3, 4], uppercase: true}\">\\n</vue-input>\\n\\n<script>\\n  new Vue({\\n    data: function(){\\n      return {\\n        input: \"\"\\n      }\\n    }\\n  }).$mount();\\n</script>'\n  }, {\n    id: 'input2',\n    label: 'inputDemo.samples2.label',\n    description: 'inputDemo.samples2.description',\n    template: '<div class=\"source\"><vue-input :placeholder=\"$t(\\'inputDemo.defaultPlaceholder\\')\" v-model=\"input\" :disabled=\"true\"></vue-input></div>',\n    parameter: {\n      data: function () {\n        return {\n          input: ''\n        }\n      }\n    },\n    code: '<vue-input :placeholder=\"$t(\\'inputDemo.defaultPlaceholder\\')\" v-model=\"input\" :disabled=\"true\"></vue-input>\\n\\n<script>\\n  new Vue({\\n    data: function(){\\n      return {\\n        input: \"\"\\n      }\\n    }\\n  }).$mount();\\n</script>'\n  }, {\n    id: 'input3',\n    label: 'inputDemo.samples3.label',\n    description: 'inputDemo.samples3.description',\n    template: '<div class=\"source\"><vue-input :placeholder=\"$t(\\'inputDemo.selectPlaceholder\\')\" icon=\"vue-icon-search\" v-model=\"input\" :on-icon-click=\"handleIconClick\"></vue-input></div>',\n    parameter: {\n      data: function () {\n        return {\n          input: \"\"\n        }\n      },\n      methods: {\n        handleIconClick: function (ev) {\n          this.$notify({ title: this.$t('inputDemo.selectPlaceholder') });\n        }\n      }\n    },\n    code: '<vue-input :placeholder=\"$t(\\'inputDemo.selectPlaceholder\\')\" icon=\"vue-icon-search\" v-model=\"input\" :on-icon-click=\"handleIconClick\"></vue-input>\\n\\n<script>\\n  new Vue({\\n    data: function(){\\n      return {\\n        input: \"\",\\n      }\\n    }\\n    methods: {\\n      handleIconClick: function(event) {\\n        this.$notify({title: this.$t(\\'inputDemo.selectPlaceholder\\')});\\n      }\\n    }\\n  }).$mount();\\n</script>'\n  }, {\n    id: 'input4',\n    label: 'inputDemo.samples4.label',\n    description: 'inputDemo.samples4.description',\n    template: '<div class=\"source\"><vue-input type=\"textarea\" :rows=\"2\" :placeholder=\"$t(\\'inputDemo.defaultPlaceholder\\')\" v-model=\"textarea\"></vue-input></div>',\n    parameter: {\n      data: function () {\n        return {\n          textarea: ''\n        }\n      }\n    },\n    code: '<vue-input type=\"textarea\" :rows=\"2\" :placeholder=\"$t(\\'inputDemo.defaultPlaceholder\\')\" v-model=\"textarea\"></vue-input>\\n\\n<script>\\n  new Vue({\\n  data: function(){\\n    return {\\n    textarea: \"\"\\n    }\\n  }\\n  }).$mount();\\n</script>'\n  }, {\n    id: 'input5',\n    label: 'inputDemo.samples5.label',\n    description: 'inputDemo.samples5.description',\n    template: '<div class=\"source\"><vue-input type=\"textarea\" autosize :placeholder=\"$t(\\'inputDemo.defaultPlaceholder\\')\" v-model=\"textarea1\"></vue-input><div style=\"margin: 20px 0;\"></div><vue-input type=\"textarea\" :autosize=\"{ minRows: 2, maxRows: 4}\" :placeholder=\"$t(\\'inputDemo.defaultPlaceholder\\')\" v-model=\"textarea2\"></vue-input></div>',\n    parameter: {\n      data: function () {\n        return {\n          textarea1: '',\n          textarea2: ''\n        }\n      }\n    },\n    code: '<vue-input type=\"textarea\" autosize :placeholder=\"$t(\\'inputDemo.defaultPlaceholder\\')\" v-model=\"textarea1\"></vue-input>\\n<vue-input type=\"textarea\" :autosize=\"{ minRows: 2, maxRows: 4}\" :placeholder=\"$t(\\'inputDemo.defaultPlaceholder\\')\" v-model=\"textarea2\"></vue-input>\\n\\n<script>\\n  new Vue({\\n    data: function(){\\n      return {\\n        textarea1: \"\",\\n        textarea2: \"\"\\n      }\\n    }\\n  }).$mount();\\n</script>'\n  }, {\n    id: 'input6',\n    label: 'inputDemo.samples6.label',\n    description: 'inputDemo.samples6.description',\n    template: '<div class=\"source\"><vue-input :placeholder=\"$t(\\'inputDemo.defaultPlaceholder\\')\" v-model=\"input1\"><template slot=\"prepend\">Http://</template></vue-input><div style=\"margin-top: 15px;\"></div><vue-input :placeholder=\"$t(\\'inputDemo.defaultPlaceholder\\')\" v-model=\"input2\"><template slot=\"append\">.com</template></vue-input><div style=\"margin-top: 15px;\"></div><vue-input :placeholder=\"$t(\\'inputDemo.defaultPlaceholder\\')\" v-model=\"input3\"><vue-select v-model=\"select\" slot=\"prepend\" :placeholder=\"$t(\\'inputDemo.selectPlaceholder\\')\" style=\"width:120px\"><vue-option :label=\"$t(\\'inputDemo.samples6.selectLabel1\\')\" value=\"1\"></vue-option><vue-option :label=\"$t(\\'inputDemo.samples6.selectLabel2\\')\" value=\"2\"></vue-option><vue-option :label=\"$t(\\'inputDemo.samples6.selectLabel3\\')\" value=\"3\"></vue-option></vue-select><vue-button slot=\"append\" icon=\"vue-icon-search\"></vue-button></vue-input></div>',\n    parameter: {\n      data: function () {\n        return {\n          input1: '',\n          input2: '',\n          input3: '',\n          select: ''\n        }\n      }\n    },\n    code: '<vue-input :placeholder=\"$t(\\'inputDemo.defaultPlaceholder\\')\" v-model=\"input1\">\\n  <template slot=\"prepend\">Http://</template>\\n</vue-input>\\n<vue-input :placeholder=\"$t(\\'inputDemo.defaultPlaceholder\\')\" v-model=\"input2\">\\n  <template slot=\"append\">.com</template>\\n</vue-input>\\n<vue-input :placeholder=\"$t(\\'inputDemo.defaultPlaceholder\\')\" v-model=\"input3\">\\n  <vue-select v-model=\"select\" slot=\"prepend\" :placeholder=\"$t(\\'inputDemo.selectPlaceholder\\')\" style=\"width:120px\">\\n    <vue-option :label=\"$t(\\'inputDemo.samples6.selectLabel1\\')\" value=\"1\"></vue-option>\\n    <vue-option :label=\"$t(\\'inputDemo.samples6.selectLabel2\\')\" value=\"2\"></vue-option>\\n    <vue-option :label=\"$t(\\'inputDemo.samples6.selectLabel3\\')\" value=\"3\"></vue-option>\\n  </vue-select>\\n  <vue-button slot=\"append\" icon=\"vue-icon-search\"></vue-button>\\n</vue-input>\\n\\n<script>\\n  new Vue({\\n    data: function(){\\n      return {\\n        input1: \"\",\\n        input2: \"\",\\n        input3: \"\",\\n        select: \"\"\\n      }\\n    }\\n  }).$mount();\\n</script>'\n  }, {\n    id: 'input7',\n    label: 'inputDemo.samples7.label',\n    description: 'inputDemo.samples7.description',\n    template: '<div class=\"source\"><vue-input size=\"large\" :placeholder=\"$t(\\'inputDemo.defaultPlaceholder\\')\" v-model=\"input1\"></vue-input><div style=\"margin-top: 15px;\"></div><vue-input :placeholder=\"$t(\\'inputDemo.defaultPlaceholder\\')\" v-model=\"input2\"></vue-input><div style=\"margin-top: 15px;\"></div><vue-input size=\"small\" :placeholder=\"$t(\\'inputDemo.defaultPlaceholder\\')\" v-model=\"input3\"></vue-input><div style=\"margin-top: 15px;\"></div><vue-input size=\"mini\" :placeholder=\"$t(\\'inputDemo.defaultPlaceholder\\')\" v-model=\"input4\"></vue-input></div>',\n    parameter: {\n      data: function () {\n        return {\n          input1: '',\n          input2: '',\n          input3: '',\n          input4: ''\n        }\n      }\n    },\n    code: '<vue-input size=\"large\" :placeholder=\"$t(\\'inputDemo.defaultPlaceholder\\')\" v-model=\"input1\"></vue-input>\\n<vue-input :placeholder=\"$t(\\'inputDemo.defaultPlaceholder\\')\" v-model=\"input2\"></vue-input>\\n<vue-input size=\"small\" :placeholder=\"$t(\\'inputDemo.defaultPlaceholder\\')\" v-model=\"input3\"></vue-input>\\n<vue-input size=\"mini\" :placeholder=\"$t(\\'inputDemo.defaultPlaceholder\\')\" v-model=\"input4\"></vue-input>\\n\\n<script>\\n  new Vue({\\n    data: function(){\\n      return {\\n        input1: \"\",\\n        input2: \"\",\\n        input3: \"\",\\n        input4: \"\"\\n      }\\n    }\\n  }).$mount();\\n</script>'\n  }, {\n    id: 'input8',\n    label: 'inputDemo.samples8.label',\n    description: 'inputDemo.samples8.description',\n    template: '<div class=\"source\"><vue-row class=\"demo-autocomplete\"><vue-col :span=\"12\"><div class=\"sub-title\">{{$t(\\'inputDemo.samples8.label1\\')}}</div><vue-autocomplete v-model=\"state1\" :fetch-suggestions=\"querySearch\" :placeholder=\"$t(\\'inputDemo.defaultPlaceholder\\')\" @select=\"handleSelect\"></vue-autocomplete></vue-col><vue-col :span=\"12\"><div class=\"sub-title\">{{$t(\\'inputDemo.samples8.label2\\')}}</div><vue-autocomplete v-model=\"state2\" :fetch-suggestions=\"querySearch\" :placeholder=\"$t(\\'inputDemo.defaultPlaceholder\\')\" :trigger-on-focus=\"false\" @select=\"handleSelect\"></vue-autocomplete></vue-col></vue-row></div>',\n    parameter: {\n      data: function () {\n        return {\n          restaurants: [],\n          state1: '',\n          state2: ''\n        }\n      },\n      methods: {\n        querySearch: function (queryString, cb) {\n          var restaurants = this.restaurants;\n          var results = queryString ? restaurants.filter(this.createFilter(queryString)) : restaurants;\n          cb(results);\n        },\n        createFilter: function (queryString) {\n          return function (restaurant) {\n            return (restaurant.value.indexOf(queryString.toLowerCase()) === 0);\n          }\n            ;\n        },\n        handleSelect: function (item) {\n          this.$notify({ title: item.value });\n        },\n        loadAll: function () {\n          return [{\n            \"value\": \"first\"\n          }, {\n            \"value\": \"second\"\n          }, {\n            \"value\": \"first and second\"\n          }]\n        }\n      },\n      mounted: function () {\n        this.restaurants = this.loadAll();\n      }\n    },\n    code: '<vue-row class=\"demo-autocomplete\">\\n  <vue-col :span=\"12\">\\n    <div class=\"sub-title\"{{$t(\\'inputDemo.samples8.label1\\')}}</div>\\n    <vue-autocomplete v-model=\"state1\"\\n            :fetch-suggestions=\"querySearch\"\\n            :placeholder=\"$t(\\'inputDemo.defaultPlaceholder\\')\"\\n            @select=\"handleSelect\">\\n    </vue-autocomplete>\\n  </vue-col>\\n  <vue-col :span=\"12\">\\n    <div class=\"sub-title\">{{$t(\\'inputDemo.samples8.label2\\')}}</div>\\n    <vue-autocomplete v-model=\"state2\"\\n            :fetch-suggestions=\"querySearch\"\\n            :placeholder=\"$t(\\'inputDemo.defaultPlaceholder\\')\"\\n            :trigger-on-focus=\"false\"\\n            @select=\"handleSelect\">\\n    </vue-autocomplete>\\n  </vue-col>\\n</vue-row>\\n\\n<script>\\n  new Vue({\\n    data: function(){\\n      return {\\n        restaurants: [],\\n        state1: \"\",\\n        state2: \"\"\\n      }\\n    },\\n    methods: {\\n      querySearch: function(queryString, cb) {\\n        var restaurants = this.restaurants;\\n        var results = queryString ? restaurants.filter(this.createFilter(queryString)) : restaurants;\\n        cb(results);\\n      },\\n      createFilter: function(queryString) {\\n        return function(restaurant) {\\n          return (restaurant.value.indexOf(queryString.toLowerCase()) === 0);\\n        };\\n      },\\n      handleSelect: function(item) {\\n        this.$notify({title: item.value});\\n      },\\n      loadAll: function() {\\n        return [\\n          { \"value\": \"first\" },\\n          { \"value\": \"second\" },\\n          { \"value\": \"first and second\" }\\n        ]\\n      }\\n    },\\n    mounted: function() {\\n      this.restaurants = this.loadAll();\\n    }\\n  }).$mount();\\n</script>'\n  }, {\n    id: 'input10',\n    label: 'Input Attributes',\n    template: '<attr-table :data=\"tableData\"></attr-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"type\",\n            column2: \"inputDemo.samples10.row1column2\",\n            column3: \"String\",\n            column4: \"text, textarea\",\n            column5: \"text\"\n          }, {\n            column1: \"value\",\n            column2: \"inputDemo.samples10.row2column2\",\n            column3: \"String, number\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"maxlength\",\n            column2: \"inputDemo.samples10.row3column2\",\n            column3: \"Number\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"minlength\",\n            column2: \"inputDemo.samples10.row4column2\",\n            column3: \"Number\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"placeholder\",\n            column2: \"inputDemo.samples10.row5column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"disabled\",\n            column2: \"inputDemo.samples10.row6column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"size\",\n            column2: \"inputDemo.samples10.row7column2\",\n            column3: \"String\",\n            column4: \"large, small, mini\",\n            column5: \"\"\n          }, {\n            column1: \"prefix-icon\",\n            column2: \"inputDemo.samples10.row8column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"icon\",\n            column2: \"inputDemo.samples10.row9column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"rows\",\n            column2: \"inputDemo.samples10.row10column2\",\n            column3: \"Number\",\n            column4: \"\",\n            column5: \"2\"\n          }, {\n            column1: \"cleave\",\n            column2: \"inputDemo.samples10.row11column2\",\n            column3: \"Object\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"autosize\",\n            column2: \"inputDemo.samples10.row12column2\",\n            column3: \"Boolean / Object\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"auto-complete\",\n            column2: \"inputDemo.samples10.row13column2\",\n            column3: \"String\",\n            column4: \"on, off\",\n            column5: \"off\"\n          }, {\n            column1: \"name\",\n            column2: \"inputDemo.samples10.row14column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"readonly\",\n            column2: \"inputDemo.samples10.row15column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"max\",\n            column2: \"inputDemo.samples10.row16column2\",\n            column3: \"Number\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"min\",\n            column2: \"inputDemo.samples10.row17column2\",\n            column3: \"Number\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"step\",\n            column2: \"inputDemo.samples10.row18column2\",\n            column3: \"Number\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"resize\",\n            column2: \"inputDemo.samples10.row19column2\",\n            column3: \"String\",\n            column4: \"none, both, horizontal, vertical\",\n            column5: \"\"\n          }, {\n            column1: \"autofocus\",\n            column2: \"inputDemo.samples10.row20column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"text-align\",\n            column2: \"inputDemo.samples10.row21column2\",\n            column3: \"String\",\n            column4: \"center, right\",\n            column5: \"\"\n          }, {\n            column1: \"form\",\n            column2: \"inputDemo.samples10.row22column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"on-icon-click\",\n            column2: \"inputDemo.samples10.row23column2\",\n            column3: \"Function\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"key-board-type\",\n            column2: \"inputDemo.samples10.row24column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"true\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'input15',\n    label: 'Cleave Options',\n    template: '<attr-table :data=\"tableData\"></attr-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"creditCard\",\n            column2: \"inputDemo.samples15.row1column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"onCreditCardTypeChanged\",\n            column2: \"inputDemo.samples15.row2column2\",\n            column3: \"Function\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"phone\",\n            column2: \"inputDemo.samples15.row3column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"phoneRegionCode\",\n            column2: \"inputDemo.samples15.row4column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"CN\"\n          }, {\n            column1: \"date\",\n            column2: \"inputDemo.samples15.row5column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"datePattern\",\n            column2: \"inputDemo.samples15.row6column2\",\n            column3: \"Array\",\n            column4: \"'Y', 'y', 'm', 'd'\",\n            column5: \"['Y', 'm', 'd']\"\n          }, {\n            column1: \"numeral\",\n            column2: \"inputDemo.samples15.row7column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"numeralThousandsGroupStyle\",\n            column2: \"inputDemo.samples15.row8column2\",\n            column3: \"String\",\n            column4: \"thousand, lakh, wan (lakh: '12,34,567.89', wan: '123,4567.89')\",\n            column5: \"thousand\"\n          }, {\n            column1: \"numeralIntegerScale\",\n            column2: \"inputDemo.samples15.row9column2\",\n            column3: \"Number\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"numeralDecimalScale\",\n            column2: \"inputDemo.samples15.row10column2\",\n            column3: \"Number\",\n            column4: \"\",\n            column5: \"2\"\n          }, {\n            column1: \"numeralDecimalMark\",\n            column2: \"inputDemo.samples15.row11column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \".\"\n          }, {\n            column1: \"numeralPositiveOnly\",\n            column2: \"inputDemo.samples15.row12column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"blocks\",\n            column2: \"inputDemo.samples15.row13column2\",\n            column3: \"Array\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"delimiter\",\n            column2: \"inputDemo.samples15.row14column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"date:'/', numeral:','\"\n          }, {\n            column1: \"delimiters\",\n            column2: \"inputDemo.samples15.row15column2\",\n            column3: \"Array\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"prefix\",\n            column2: \"inputDemo.samples15.row16column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"null\"\n          }, {\n            column1: \"rawValueTrimPrefix\",\n            column2: \"inputDemo.samples15.row17column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"numericOnly\",\n            column2: \"inputDemo.samples15.row18column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"uppercase\",\n            column2: \"inputDemo.samples15.row19column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"lowercase\",\n            column2: \"inputDemo.samples15.row20column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"customFormatter\",\n            column2: \"inputDemo.samples15.row21column2\",\n            column3: \"Function\",\n            column4: \"\",\n            column5: \"\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'input11',\n    label: 'Input Events',\n    template: '<event-table :data=\"tableData\"></event-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"click\",\n            column2: \"inputDemo.samples11.row1column2\",\n            column3: \"(event: Event)\"\n          }, {\n            column1: \"blur\",\n            column2: \"inputDemo.samples11.row2column2\",\n            column3: \"(event: Event)\"\n          }, {\n            column1: \"focus\",\n            column2: \"inputDemo.samples11.row3column2\",\n            column3: \"(event: Event)\"\n          }, {\n            column1: \"change\",\n            column2: \"inputDemo.samples11.row4column2\",\n            column3: \"(value: string | number)\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'input12',\n    label: 'Autocomplete Attributes',\n    template: '<event-table :data=\"tableData\"></event-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"placeholder\",\n            column2: \"inputDemo.samples12.row1column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"disabled\",\n            column2: \"inputDemo.samples12.row2column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"value\",\n            column2: \"inputDemo.samples12.row3column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"custom-item\",\n            column2: \"inputDemo.samples12.row4column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"text-align\",\n            column2: \"inputDemo.samples10.row22column2\",\n            column3: \"String\",\n            column4: \"center, right\",\n            column5: \"\"\n          }, {\n            column1: \"fetch-suggestions\",\n            column2: \"inputDemo.samples12.row5column2\",\n            column3: \"Function(queryString, callback)\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"popper-class\",\n            column2: \"inputDemo.samples12.row6column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"trigger-on-focus\",\n            column2: \"inputDemo.samples12.row7column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"true\"\n          }, {\n            column1: \"on-icon-click\",\n            column2: \"inputDemo.samples12.row8column2\",\n            column3: \"Function\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"icon\",\n            column2: \"inputDemo.samples12.row9column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"props\",\n            column2: \"inputDemo.samples12.row10column2\",\n            column3: \"Object\",\n            column4: \"\",\n            column5: \"\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'input13',\n    label: 'Autocomplete props',\n    template: '<attr-table :data=\"tableData\"></attr-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"value\",\n            column2: \"inputDemo.samples13.row1column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"label\",\n            column2: \"inputDemo.samples13.row2column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'input14',\n    label: 'Autocomplete Events',\n    template: '<event-table :data=\"tableData\"></event-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"select\",\n            column2: \"inputDemo.samples14.row1column2\",\n            column3: \"(selectItem: SelectItem)\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'input16',\n    label: 'Methods',\n    template: '<method-table :data=\"tableData\"></method-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"focus\",\n            column2: \"inputDemo.samples16.row1column2\",\n            column3: \"\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }]\n};\nmodule.exports = inputDemo;","export default {\"path\":\"/InputNumberDemo\",\"name\":\"InputNumberDemo\",\"head\":{\"label\":\"InputNumberDemo.label\",\"description\":\"InputNumberDemo.description\"},\"samples\":[{\"id\":\"InputNumberDemo.sample1\",\"label\":\"InputNumberDemo.sample1.label\",\"description\":\"InputNumberDemo.sample1.description\",\"code\":\"<vue-number-input v-model=\\\"num\\\" @change=\\\"handleChange\\\" :min=\\\"1\\\" :max=\\\"10\\\" placeholder=\\\"描述文字\\\"></vue-number-input>\\n\\n<script>\\nnew Vue({\\r\\n  data () {\\r\\n    return {\\r\\r\\n      num: 1,\\r\\r\\n    }\\r\\n  },\\r\\n  methods: {\\r\\n    handleChange: function(value) {\\r\\n      console.log(value);\\r\\n    },\\r\\r\\n  }\\r\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-number-input v-model=\\\"num\\\" @change=\\\"handleChange\\\" :min=\\\"1\\\" :max=\\\"10\\\" placeholder=\\\"描述文字\\\"></vue-number-input></div>\",\"parameter\": {\r\n  data () {\r\n    return {\r\r\n      num: 1,\r\r\n    }\r\n  },\r\n  methods: {\r\n    handleChange: function(value) {\r\n      console.log(value);\r\n    },\r\r\n  }\r\n}},{\"id\":\"InputNumberDemo.sample2\",\"label\":\"InputNumberDemo.sample2.label\",\"description\":\"InputNumberDemo.sample2.description\",\"code\":\"<vue-number-input v-model=\\\"num\\\" :disabled=\\\"true\\\"></vue-number-input>\\n\\n<script>\\nnew Vue({\\r\\n  data () {\\r\\n    return {\\r\\r\\n      num: 1,\\r\\r\\n    }\\r\\n  },\\r\\n  methods: {\\r\\n    handleChange: function(value) {\\r\\n      console.log(value);\\r\\n    },\\r\\r\\n  }\\r\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-number-input v-model=\\\"num\\\" :disabled=\\\"true\\\"></vue-number-input></div>\",\"parameter\": {\r\n  data () {\r\n    return {\r\r\n      num: 1,\r\r\n    }\r\n  },\r\n  methods: {\r\n    handleChange: function(value) {\r\n      console.log(value);\r\n    },\r\r\n  }\r\n}},{\"id\":\"InputNumberDemo.sample3\",\"label\":\"InputNumberDemo.sample3.label\",\"description\":\"InputNumberDemo.sample3.description\",\"code\":\"<vue-number-input v-model=\\\"num\\\" :step=\\\"2\\\"></vue-number-input>\\n\\n<script>\\nnew Vue({\\r\\n  data () {\\r\\n    return {\\r\\r\\n      num: 2,\\r\\r\\n    }\\r\\n  },\\r\\n  methods: {\\r\\n    handleChange: function(value) {\\r\\n      console.log(value);\\r\\n    },\\r\\r\\n  }\\r\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-number-input v-model=\\\"num\\\" :step=\\\"2\\\"></vue-number-input></div>\",\"parameter\": {\r\n  data () {\r\n    return {\r\r\n      num: 2,\r\r\n    }\r\n  },\r\n  methods: {\r\n    handleChange: function(value) {\r\n      console.log(value);\r\n    },\r\r\n  }\r\n}},{\"id\":\"InputNumberDemo.sample4\",\"label\":\"InputNumberDemo.sample4.label\",\"description\":\"InputNumberDemo.sample4.description\",\"code\":\"<vue-number-input v-model=\\\"num\\\" :step=\\\"2\\\" step-strictly></vue-number-input>\\n\\n<script>\\nnew Vue({\\r\\n  data () {\\r\\n    return {\\r\\r\\n      num: 2,\\r\\r\\n    }\\r\\n  },\\r\\n  methods: {\\r\\n    handleChange: function(value) {\\r\\n      console.log(value);\\r\\n    },\\r\\r\\n  }\\r\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-number-input v-model=\\\"num\\\" :step=\\\"2\\\" step-strictly></vue-number-input></div>\",\"parameter\": {\r\n  data () {\r\n    return {\r\r\n      num: 2,\r\r\n    }\r\n  },\r\n  methods: {\r\n    handleChange: function(value) {\r\n      console.log(value);\r\n    },\r\r\n  }\r\n}},{\"id\":\"InputNumberDemo.sample5\",\"label\":\"InputNumberDemo.sample5.label\",\"description\":\"InputNumberDemo.sample5.description\",\"code\":\"<vue-number-input v-model=\\\"num\\\" placeholder=\\\"描述文字\\\"></vue-number-input>\\n\\n<script>\\nnew Vue({\\r\\n  data () {\\r\\n    return {\\r\\r\\n      num: undefined,\\r\\r\\n    }\\r\\n  },\\r\\n  methods: {\\r\\n    handleChange: function(value) {\\r\\n      console.log(value);\\r\\n    },\\r\\r\\n  }\\r\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-number-input v-model=\\\"num\\\" placeholder=\\\"描述文字\\\"></vue-number-input></div>\",\"parameter\": {\r\n  data () {\r\n    return {\r\r\n      num: undefined,\r\r\n    }\r\n  },\r\n  methods: {\r\n    handleChange: function(value) {\r\n      console.log(value);\r\n    },\r\r\n  }\r\n}},{\"id\":\"InputNumberDemo.sample6\",\"label\":\"InputNumberDemo.sample6.label\",\"description\":\"InputNumberDemo.sample6.description\",\"code\":\"<vue-number-input v-model=\\\"num\\\" :precision=\\\"2\\\" :step=\\\"0.1\\\" :max=\\\"10\\\"></vue-number-input>\\n\\n<script>\\nnew Vue({\\r\\n  data () {\\r\\n    return {\\r\\r\\n      num: 1,\\r\\r\\n    }\\r\\n  },\\r\\n  methods: {\\r\\n    handleChange: function(value) {\\r\\n      console.log(value);\\r\\n    },\\r\\r\\n  }\\r\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-number-input v-model=\\\"num\\\" :precision=\\\"2\\\" :step=\\\"0.1\\\" :max=\\\"10\\\"></vue-number-input></div>\",\"parameter\": {\r\n  data () {\r\n    return {\r\r\n      num: 1,\r\r\n    }\r\n  },\r\n  methods: {\r\n    handleChange: function(value) {\r\n      console.log(value);\r\n    },\r\r\n  }\r\n}},{\"id\":\"InputNumberDemo.sample7\",\"label\":\"InputNumberDemo.sample7.label\",\"description\":\"InputNumberDemo.sample7.description\",\"code\":\"<vue-number-input size=\\\"large\\\" v-model=\\\"num\\\"></vue-number-input>\\r\\n<vue-number-input v-model=\\\"num\\\"></vue-number-input>\\r\\n<vue-number-input size=\\\"small\\\" v-model=\\\"num\\\"></vue-number-input>\\r\\n<vue-number-input size=\\\"mini\\\" v-model=\\\"num\\\"></vue-number-input>\\n\\n<script>\\nnew Vue({\\r\\n  data () {\\r\\n    return {\\r\\r\\n      num: 1,\\r\\r\\n    }\\r\\n  },\\r\\n  methods: {\\r\\n    handleChange: function(value) {\\r\\n      console.log(value);\\r\\n    },\\r\\r\\n  }\\r\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-number-input size=\\\"large\\\" v-model=\\\"num\\\"></vue-number-input>\\r\\n    <vue-number-input v-model=\\\"num\\\"></vue-number-input>\\r\\n    <vue-number-input size=\\\"small\\\" v-model=\\\"num\\\"></vue-number-input>\\r\\n    <vue-number-input size=\\\"mini\\\" v-model=\\\"num\\\"></vue-number-input></div>\",\"parameter\": {\r\n  data () {\r\n    return {\r\r\n      num: 1,\r\r\n    }\r\n  },\r\n  methods: {\r\n    handleChange: function(value) {\r\n      console.log(value);\r\n    },\r\r\n  }\r\n}},{\"id\":\"InputNumberDemo.sample8\",\"label\":\"InputNumberDemo.sample8.label\",\"description\":\"InputNumberDemo.sample8.description\",\"code\":\"<vue-number-input v-model=\\\"num\\\" :controls=\\\"false\\\"></vue-number-input>\\n\\n<script>\\nnew Vue({\\r\\n  data () {\\r\\n    return {\\r\\r\\n      num: 1,\\r\\r\\n    }\\r\\n  },\\r\\n  methods: {\\r\\n    handleChange: function(value) {\\r\\n      console.log(value);\\r\\n    },\\r\\r\\n  }\\r\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-number-input v-model=\\\"num\\\" :controls=\\\"false\\\"></vue-number-input></div>\",\"parameter\": {\r\n  data () {\r\n    return {\r\r\n      num: 1,\r\r\n    }\r\n  },\r\n  methods: {\r\n    handleChange: function(value) {\r\n      console.log(value);\r\n    },\r\r\n  }\r\n}},{\"id\":\"InputNumberDemo.sample9\",\"label\":\"InputNumberDemo.sample9.label\",\"description\":\"InputNumberDemo.sample9.description\",\"code\":\"<vue-number-input v-model=\\\"num\\\" controls-position=\\\"right\\\"></vue-number-input>\\n\\n<script>\\nnew Vue({\\r\\n  data () {\\r\\n    return {\\r\\r\\n      num: 1,\\r\\r\\n    }\\r\\n  },\\r\\n  methods: {\\r\\n    handleChange: function(value) {\\r\\n      console.log(value);\\r\\n    },\\r\\r\\n  }\\r\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-number-input v-model=\\\"num\\\" controls-position=\\\"right\\\"></vue-number-input></div>\",\"parameter\": {\r\n  data () {\r\n    return {\r\r\n      num: 1,\r\r\n    }\r\n  },\r\n  methods: {\r\n    handleChange: function(value) {\r\n      console.log(value);\r\n    },\r\r\n  }\r\n}},{\"id\":\"InputNumberDemo.sample10\",\"label\":\"InputNumberDemo.sample10.label\",\"description\":\"InputNumberDemo.sample10.description\",\"code\":\"<vue-number-input v-model=\\\"num\\\" use-separator></vue-number-input>\\n\\n<script>\\nnew Vue({\\r\\n  data () {\\r\\n    return {\\r\\r\\n      num: 100000,\\r\\r\\n    }\\r\\n  },\\r\\n  methods: {\\r\\n    handleChange: function(value) {\\r\\n      console.log(value);\\r\\n    },\\r\\r\\n  }\\r\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-number-input v-model=\\\"num\\\" use-separator></vue-number-input></div>\",\"parameter\": {\r\n  data () {\r\n    return {\r\r\n      num: 100000,\r\r\n    }\r\n  },\r\n  methods: {\r\n    handleChange: function(value) {\r\n      console.log(value);\r\n    },\r\r\n  }\r\n}},{\"id\":\"InputNumberDemo.sample11\",\"label\":\"InputNumberDemo.sample11.label\",\"description\":\"InputNumberDemo.sample11.description\",\"code\":\"<vue-number-input v-model=\\\"num\\\" :formatter=\\\"formatter\\\"></vue-number-input>\\r\\n<br>\\r\\nreal value: {{num}}\\n\\n<script>\\nnew Vue({\\r\\n  data () {\\r\\n    return {\\r\\r\\n      num: 100000,\\r\\r\\n    }\\r\\n  },\\r\\n  methods: {\\r\\n    handleChange: function(value) {\\r\\n      console.log(value);\\r\\n    },\\r\\r\\n    formatter: function(currentVal, isFocusing) {\\r\\n      if (isFocusing) {\\r\\n          return currentVal;\\r\\n      }\\r\\n      return Math.round(parseFloat(currentVal) / 10000) + '万';\\r\\n    }\\r\\r\\n  }\\r\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-number-input v-model=\\\"num\\\" :formatter=\\\"formatter\\\"></vue-number-input>\\r\\n    <br>\\r\\n    real value: {{num}}</div>\",\"parameter\": {\r\n  data () {\r\n    return {\r\r\n      num: 100000,\r\r\n    }\r\n  },\r\n  methods: {\r\n    handleChange: function(value) {\r\n      console.log(value);\r\n    },\r\r\n    formatter: function(currentVal, isFocusing) {\r\n      if (isFocusing) {\r\n          return currentVal;\r\n      }\r\n      return Math.round(parseFloat(currentVal) / 10000) + '万';\r\n    }\r\r\n  }\r\n}}],\"styles\":\"\"}","var BrushJsp = require('./BrushJsp')\n'use strict';\nvar installDemo = {\n  path: '/install',\n  name: 'install',\n  head: {\n    label: 'installDemo.label',\n    description: ''\n  },\n  samples: [{\n    id: 'install1',\n    label: 'installDemo.samples1.label',\n    description: 'installDemo.samples1.description',\n    collapse: [\"item1\"],\n    notshowblock: true,\n    code: '<!-- import css -->\\n' +\n      '<link rel=\"stylesheet\" href=\"https://spring21cn.github.io/vue-component/css/component.min.css\">\\n' +\n      '<!-- import Vue -->\\n' +\n      '<script src=\"https://spring21cn.github.io/vue-component/js/vue-all.min.js\"></script>\\n' +\n      '<!-- import component -->\\n' +\n      '<script src=\"https://spring21cn.github.io/vue-component/js/vue-component-all.min.js\"></script>\\n\\n' +\n      '<!-- GitLab -->\\n' +\n      '\"https://spring21cn.github.io/vue-component/\"'\n  }, {\n    id: 'install6',\n    label: 'installDemo.samples6.label',\n    description: 'installDemo.samples6.description',\n    collapse: [\"item1\"],\n    notshowblock: true,\n    code: 'npm i viy-ui \\n\\\n    \\n\\\n//vue.config.js    \\n\\\nmodule.exports = { \\n\\\n  chainWebpack: config => { \\n\\\n    config.module \\n\\\n      .rule(\\'js\\') \\n\\\n      .exclude \\n\\\n      .add(function() { \\n\\\n          return [ \\n\\\n              \\'node_modules/viy-ui\\', //babel-loader exclude viy-ui, speed up compile. \\n\\\n          ] \\n\\\n      }) \\n\\\n      .end() \\n\\\n  }, \\n\\\n  runtimeCompiler: true  //viy-ui use the build of Vue core that includes the runtime compiler. \\n\\\n} \\n\\\n    '\n  }, {\n    id: 'install2',\n    label: 'Hello world',\n    description: 'installDemo.samples2.description',\n    collapse: [\"item1\"],\n    notshowblock: true,\n    code: '<!DOCTYPE html>\\n' +\n      '<html>\\n' +\n      '<head>\\n' +\n      '  <meta charset=\"UTF-8\">\\n' +\n      '  <!-- import css -->\\n' +\n      '  <link rel=\"stylesheet\" href=\"https://spring21cn.github.io/vue-component/css/component.min.css\">\\n' +\n      '</head>\\n' +\n      '<body>\\n' +\n      '  <div id=\"app\" v-cloak>\\n' +\n      '    <vue-button @click=\"visible = true\">OK</vue-button>\\n' +\n      '    <vue-dialog v-model=\"visible\" title=\"Hello world\" show-close>\\n' +\n      '      <p>Welcome</p>\\n' +\n      '    </vue-dialog>\\n' +\n      '  </div>\\n' +\n      '</body>\\n' +\n      '<!-- import Vue -->\\n' +\n      '<script src=\"https://spring21cn.github.io/vue-component/js/vue-all.min.js\"></script>\\n' +\n      '<!-- import component -->\\n' +\n      '<script src=\"https://spring21cn.github.io/vue-component/js/vue-component-all.min.js\"></script>\\n' +\n      '<script>\\n' +\n      '  var app = new Vue({\\n' +\n      '    data: function(){\\n' +\n      '      return { visible: false }\\n' +\n      '    }\\n' +\n      '  }).$mount(\"#app\");\\n' +\n      '</script>\\n' +\n      '</html>'\n  }, {\n    id: 'install3',\n    label: 'VueUtil',\n    description: 'installDemo.samples3.description',\n    template: '<code-table :data=\"tableData\"></code-table>',\n    parameter: {\n      methods: {\n        expandHandle: function (row, expanded) {\n          expanded && BrushJsp.highlight();\n        }\n      },\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"isDef\",\n            column2: \"installDemo.samples3.row1column2\",\n            column3: ' /*  @param   : {Object}\\n' +\n              '  *  @return  : {Boolean}\\n  */\\n' +\n              '   VueUtil.isDef(123);  // true\\n' +\n              '   VueUtil.isDef(null); // false'\n          }, {\n            column1: \"isString\",\n            column2: \"installDemo.samples3.row2column2\",\n            column3: ' /*  @param   : {Object}\\n' +\n              '  *  @return  : {Boolean}\\n  */\\n' +\n              '   VueUtil.isString(123);   // false\\n' +\n              '   VueUtil.isString(\\'123\\'); // true'\n          }, {\n            column1: \"isNumber\",\n            column2: \"installDemo.samples3.row3column2\",\n            column3: ' /*  @param   : {Object}\\n' +\n              '  *  @return  : {Boolean}\\n  */\\n' +\n              '   VueUtil.isNumber(123);   // true\\n' +\n              '   VueUtil.isNumber(\\'123\\'); // false'\n          }, {\n            column1: \"isBoolean\",\n            column2: \"installDemo.samples3.row4column2\",\n            column3: ' /*  @param   : {Object}\\n' +\n              '  *  @return  : {Boolean}\\n  */\\n' +\n              '   VueUtil.isBoolean(123);   // false\\n' +\n              '   VueUtil.isBoolean(false); // true'\n          }, {\n            column1: \"isFile\",\n            column2: \"installDemo.samples3.row5column2\",\n            column3: ' /*  @param   : {Object}\\n' +\n              '  *  @return  : {Boolean}\\n  */\\n' +\n              '   VueUtil.isFile(123);   // false'\n          }, {\n            column1: \"isObject\",\n            column2: \"installDemo.samples3.row6column2\",\n            column3: ' /*  @param   : {Object}\\n' +\n              '  *  @return  : {Boolean}\\n  */\\n' +\n              '   VueUtil.isObject(123);     // false\\n' +\n              '   VueUtil.isObject({\"a\":\"a\"}); // true'\n          }, {\n            column1: \"isArray\",\n            column2: \"installDemo.samples3.row7column2\",\n            column3: ' /*  @param   : {Object}\\n' +\n              '  *  @return  : {Boolean}\\n  */\\n' +\n              '   VueUtil.isArray(123);   // false\\n' +\n              '   VueUtil.isArray([1,2]); // true'\n          }, {\n            column1: \"isFunction\",\n            column2: \"installDemo.samples3.row8column2\",\n            column3: ' /*  @param   : {Object}\\n' +\n              '  *  @return  : {Boolean}\\n  */\\n' +\n              '   VueUtil.isFunction(123);   // false\\n' +\n              '   var test = function() {};\\n' +\n              '   VueUtil.isFunction(test); // true'\n          }, {\n            column1: \"isDate\",\n            column2: \"installDemo.samples3.row9column2\",\n            column3: ' /*  @param   : {Object}\\n' +\n              '  *  @return  : {Boolean}\\n  */\\n' +\n              '   VueUtil.isDate(123);    // false\\n' +\n              '   VueUtil.isDate(new Date()); // true'\n          }, {\n            column1: \"isNodeList\",\n            column2: \"installDemo.samples3.row10column2\",\n            column3: ' /*  @param   : {Object}\\n' +\n              '  *  @return  : {Boolean}\\n  */\\n' +\n              '   VueUtil.isNodeList(123);  // false\\n' +\n              '   var test = document.querySelectorAll(\"div\")\\n' +\n              '   VueUtil.isNodeList(test); // true'\n          }, {\n            column1: \"isElement\",\n            column2: \"installDemo.samples3.row11column2\",\n            column3: ' /*  @param   : {Object}\\n' +\n              '  *  @return  : {Boolean}\\n  */\\n' +\n              '   var divAll = document.querySelectorAll(\"div\")\\n' +\n              '   VueUtil.isElement(divAll); // false\\n' +\n              '   var div = document.querySelector(\"div\")\\n' +\n              '   VueUtil.isElement(div);  // true'\n          }, {\n            column1: \"isVNode\",\n            column2: \"installDemo.samples3.row12column2\",\n            column3: ' /*  @param   : {Object}\\n' +\n              '  *  @return  : {Boolean}\\n  */\\n' +\n              '   VueUtil.isVNode(123);  // false'\n          }, {\n            column1: \"toString\",\n            column2: \"installDemo.samples3.row13column2\",\n            column3: ' /*  @param   : {Object}\\n' +\n              '  *  @return  : {String}\\n  */\\n' +\n              '   VueUtil.toString(null); // \"\"\\n' +\n              '   VueUtil.toString(123);  // \"123\"\\n' +\n              '   var test = {\"a\":1};\\n' +\n              '   VueUtil.toString(test); // \"{\"a\": 1}\"\\n' +\n              '   var test = function() {};\\n' +\n              '   VueUtil.toString(test); // \"function() {}\"\\n' +\n              '   var test = [1,2];\\n' +\n              '   VueUtil.toString(test); // \"[1,2]\"'\n          }, {\n            column1: \"toDate\",\n            column2: \"installDemo.samples3.row14column2\",\n            column3: ' /*  @param   : {Object}\\n' +\n              '  *  @return  : {Date}\\n  */\\n' +\n              '   VueUtil.toDate(null);     // null\\n' +\n              '   VueUtil.toDate(123);      // Thu Jan 01 1970 08:00:00 GMT+0800 (中国标准时间)\\n' +\n              '   VueUtil.toDate(\"abc\");    // null\\n' +\n              '   VueUtil.toDate(\"2017-01-01\"); // Sun Jan 01 2017 08:00:00 GMT+0800 (中国标准时间)'\n          }, {\n            column1: \"formatNumber\",\n            column2: \"installDemo.samples3.row58column2\",\n            column3: ' /*  @param   : {Number}\\n' +\n              '  *  @param   : {Number} 保留小数位数, 默认为2\\n' +\n              '  *  @param   : {String} 小数位, 默认为\".\"\\n' +\n              '  *  @param   : {String} 千分位, 默认为\",\"\\n' +\n              '  *  @return  : {String}\\n  */\\n' +\n              '   VueUtil.formatNumber(\"abc\");             // null\\n' +\n              '   VueUtil.formatNumber(12345);             // 12,345.00\\n' +\n              '   VueUtil.formatNumber(12345.6789, 3);         // 12,345.679\\n' +\n              '   VueUtil.formatNumber(12345.6789, 3, \",\", \".\");     // 12.345,679'\n          }, {\n            column1: \"formatDate\",\n            column2: \"installDemo.samples3.row15column2\",\n            column3: ' /*  @param   : {Object}\\n' +\n              '  *  @param   : {String} 转换格式, 默认为\"yyyy-MM-dd\"\\n' +\n              '  *  @return  : {String}\\n  */\\n' +\n              '   VueUtil.formatDate(\"abc\");             // null\\n' +\n              '   VueUtil.formatDate(new Date);            // \"2017-12-21\"\\n' +\n              '   VueUtil.formatDate(new Date, \"yy/MM/dd\");      // \"17/12/21\"\\n' +\n              '   VueUtil.formatDate(1234, \"yyyy-MM-dd HH:mm:ssss\"); // \"1970-01-01 08:00:0101\"'\n          }, {\n            column1: \"parseDate\",\n            column2: \"installDemo.samples3.row16column2\",\n            column3: ' /*  @param   : {Object}\\n' +\n              '  *  @param   : {String} 转换格式, 默认为\"yyyy-MM-dd\"\\n' +\n              '  *  @return  : {Date}\\n  */\\n' +\n              '   VueUtil.parseDate(\"abc\");             // null\\n' +\n              '   VueUtil.parseDate(\"2017-01-01\");          // Sun Jan 01 2017 00:00:00 GMT+0800 (中国标准时间)\\n' +\n              '   VueUtil.parseDate(\"17/11/01\", \"yy/MM/dd\");    // Wed Nov 01 2017 00:00:00 GMT+0800 (中国标准时间)\\n' +\n              '   VueUtil.parseDate(1234, \"yyyy-MM-dd HH:mm:ssss\"); // Thu Jan 01 1970 08:00:01 GMT+0800 (中国标准时间)'\n          }, {\n            column1: \"getDayCountOfMonth\",\n            column2: \"installDemo.samples3.row17column2\",\n            column3: ' /*  @param   : {Number} 年\\n' +\n              '  *  @param   : {Number} 月\\n' +\n              '  *  @return  : {Number}\\n  */\\n' +\n              '   VueUtil.getDayCountOfMonth(\"2017\", 1); // null\\n' +\n              '   VueUtil.getDayCountOfMonth(2017, 1);   // 31\\n' +\n              '   VueUtil.getDayCountOfMonth(2000, 2);   // 29'\n          }, {\n            column1: \"getFirstDayOfMonth\",\n            column2: \"installDemo.samples3.row18column2\",\n            column3: ' /*  @param   : {Date}\\n' +\n              '  *  @return  : {Number}\\n  */\\n' +\n              '   VueUtil.getFirstDayOfMonth(\"abc\");               // null\\n' +\n              '   VueUtil.getFirstDayOfMonth(VueUtil.parseDate(\"2017-01-01\")); // 0 /*周日*/\\n' +\n              '   VueUtil.getFirstDayOfMonth(VueUtil.parseDate(\"2017-12-21\")); // 5 /*周五*/'\n          }, {\n            column1: \"getWeekNumber\",\n            column2: \"installDemo.samples3.row19column2\",\n            column3: ' /*  @param   : {Date}\\n' +\n              '  *  @return  : {Number}\\n  */\\n' +\n              '   VueUtil.getWeekNumber(\"abc\");               // null\\n' +\n              '   VueUtil.getWeekNumber(VueUtil.parseDate(\"2017-01-01\")); // 1 /*第1周*/\\n' +\n              '   VueUtil.getWeekNumber(VueUtil.parseDate(\"2017-12-21\")); // 51 /*第51周*/'\n          }, {\n            column1: \"addDate\",\n            column2: \"installDemo.samples3.row20column2\",\n            column3: ' /*  @param   : {Date}\\n' +\n              '  *  @param   : {Number} 向前或向后的天数\\n' +\n              '  *  @param   : {String} 类型: \"week\", \"day\", \"month\", \"year\", 默认为 \"day\"\\n' +\n              '  *  @return  : {Date}\\n  */\\n' +\n              '   VueUtil.addDate(VueUtil.parseDate(\"2017-01-01\"), 5);      // Fri Jan 06 2017 00:00:00 GMT+0800 (中国标准时间)\\n' +\n              '   VueUtil.addDate(VueUtil.parseDate(\"2017-10-01\"), -1, \"week\"); // Sun Sep 24 2017 00:00:00 GMT+0800 (中国标准时间)\\n' +\n              '   VueUtil.addDate(VueUtil.parseDate(\"2017-10-01\"), 3, \"year\");  // Thu Oct 01 2020 00:00:00 GMT+0800 (中国标准时间)'\n          }, {\n            column1: \"loop\",\n            column2: \"installDemo.samples3.row21column2\",\n            column3: ' /*  @param   : {Object}\\n' +\n              '  *  @param   : {Function}\\n  */\\n' +\n              '   VueUtil.loop([1,2], function(item) {\\n' +\n              '     console.log(item)\\n' +\n              '   });\\n\\n' +\n              '   VueUtil.loop(document.querySelectorAll(\"div\"), function(div) {\\n' +\n              '     console.log(div.className)\\n' +\n              '   });'\n          }, {\n            column1: \"ownPropertyLoop\",\n            column2: \"installDemo.samples3.row22column2\",\n            column3: ' /*  @param   : {Object}\\n' +\n              '  *  @param   : {Function}\\n  */\\n' +\n              '   var test = {\"a\":2, \"b\":1};\\n' +\n              '   VueUtil.ownPropertyLoop(test, function(key) {\\n' +\n              '     console.log(key)    // a b\\n' +\n              '     console.log(test[key]) // 2 1\\n' +\n              '   });'\n          }, {\n            column1: \"trim\",\n            column2: \"installDemo.samples3.row23column2\",\n            column3: ' /*  @param   : {String}\\n' +\n              '  *  @return  : {String}\\n  */\\n' +\n              '   VueUtil.trim(\" abc \"); // \"abc\"\\n' +\n              '   VueUtil.trim(123);   // \"\"'\n          }, {\n            column1: \"deepCopy\",\n            column2: \"installDemo.samples3.row59column2\",\n            column3: ' /*  @param   : {Object}\\n' +\n              '  *  @return  : {Object}\\n  */\\n' +\n              '   var test1 = {\"a\":1, \"b\":2, \"c\":{\"a\":[{\"a\":4, \"b\":function(){}}]}};\\n' +\n              '   var test2 = VueUtil.deepCopy(test1);\\n' +\n              '   test2.c.a[0].a= 2;\\n' +\n              '   console.log(test1) // {\"a\":1, \"b\":2, \"c\":{\"a\":[{\"a\":4, \"b\":function(){}}]}}\\n' +\n              '   console.log(test2) // {\"a\":1, \"b\":2, \"c\":{\"a\":[{\"a\":2, \"b\":function(){}}]}}'\n          }, {\n            column1: \"merge\",\n            column2: \"installDemo.samples3.row24column2\",\n            column3: ' /*  @param   : {Object}\\n' +\n              '  *  @return  : {Object}\\n  */\\n' +\n              '   var test1 = {\"a\":2, \"b\":1};\\n' +\n              '   var test2 = {\"a\":3, \"c\":4};\\n' +\n              '   var test3 = VueUtil.merge(test1, test2);\\n' +\n              '   console.log(test1) // {a: 3, b: 1, c: 4}\\n' +\n              '   console.log(test3) // {a: 3, b: 1, c: 4}'\n          }, {\n            column1: \"mergeArray\",\n            column2: \"installDemo.samples3.row25column2\",\n            column3: ' /*  @param   : {Array}\\n' +\n              '  *  @return  : {Array}\\n  */\\n' +\n              '   var test1 = [1,2,3,[1,2]];\\n' +\n              '   var test2 = VueUtil.mergeArray([], test1);\\n' +\n              '   test2[3][0] = 2;\\n' +\n              '   console.log(test1) // [1,2,3,[1,2]]\\n' +\n              '   console.log(test2) // [1,2,3,[2,2]]'\n          }, {\n            column1: \"on\",\n            column2: \"installDemo.samples3.row26column2\",\n            column3: ' /*  @param   : {Object} 绑定事件对象\\n' +\n              '  *  @param   : {String} 表示绑定事件类型的字符串\\n' +\n              '  *  @param   : {Function} 绑定事件的回调函数\\n  */\\n' +\n              '   VueUtil.on(document.querySelector(\"div\"), \"click\", function() {});'\n          }, {\n            column1: \"off\",\n            column2: \"installDemo.samples3.row27column2\",\n            column3: ' /*  @param   : {Object} 移除事件对象\\n' +\n              '  *  @param   : {String} 表示移除事件类型的字符串\\n' +\n              '  *  @param   : {Function} 移除事件的回调函数\\n  */\\n' +\n              '   VueUtil.off(document.querySelector(\"div\"), \"click\", function() {});'\n          }, {\n            column1: \"once\",\n            column2: \"installDemo.samples3.row28column2\",\n            column3: ' /*  @param   : {Object} 绑定事件对象\\n' +\n              '  *  @param   : {String} 表示绑定事件类型的字符串\\n' +\n              '  *  @param   : {Function} 绑定事件的回调函数\\n  */\\n' +\n              '   VueUtil.once(document.querySelector(\"div\"), \"click\", function() {});'\n          }, {\n            column1: \"removeNode\",\n            column2: \"installDemo.samples3.row41column2\",\n            column3: ' /*  @param   : {Element}  */\\n' +\n              '   VueUtil.removeNode(document.querySelector(\"div\"));'\n          }, {\n            column1: \"insertNodeAt\",\n            column2: \"installDemo.samples3.row42column2\",\n            column3: ' /*  @param   : {Element} 父节点\\n' +\n              '  *  @param   : {Element} 插入节点\\n' +\n              '  *  @param   : {Number} 节点位置  */\\n' +\n              '   VueUtil.insertNodeAt(document.body, document.querySelector(\"div\"), 3);'\n          }, {\n            column1: \"scrollBarWidth\",\n            column2: \"installDemo.samples3.row43column2\",\n            column3: ' /*  @return  : {Number} */\\n' +\n              '   var scrollBarWidth = VueUtil.scrollBarWidth();'\n          }, {\n            column1: \"hasClass\",\n            column2: \"installDemo.samples3.row29column2\",\n            column3: ' /*  @param   : {Element}\\n' +\n              '  *  @param   : {String}\\n' +\n              '  *  @return  : {Boolean}\\n  */\\n' +\n              '   VueUtil.hasClass(document.querySelector(\"div\"), \"test\");'\n          }, {\n            column1: \"addClass\",\n            column2: \"installDemo.samples3.row30column2\",\n            column3: ' /*  @param   : {Element}\\n' +\n              '  *  @param   : {String}\\n  */\\n' +\n              '   VueUtil.addClass(document.querySelector(\"div\"), \"test\");'\n          }, {\n            column1: \"removeClass\",\n            column2: \"installDemo.samples3.row31column2\",\n            column3: ' /*  @param   : {Element}\\n' +\n              '  *  @param   : {String}\\n  */\\n' +\n              '   VueUtil.removeClass(document.querySelector(\"div\"), \"test\");'\n          }, {\n            column1: \"getStyle\",\n            column2: \"installDemo.samples3.row32column2\",\n            column3: ' /*  @param   : {Element}\\n' +\n              '  *  @param   : {String}\\n' +\n              '  *  @return  : {Boolean}\\n  */\\n' +\n              '   VueUtil.getStyle(document.querySelector(\"div\"), \"display\");'\n          }, {\n            column1: \"setStyle\",\n            column2: \"installDemo.samples3.row33column2\",\n            column3: ' /*  @param   : {Element}\\n' +\n              '  *  @param   : {String}\\n' +\n              '  *  @param   : {String}\\n  */\\n' +\n              '   VueUtil.setStyle(document.querySelector(\"div\"), \"display\", \"none\");'\n          }, {\n            column1: \"getCookie\",\n            column2: \"installDemo.samples3.row34column2\",\n            column3: ' /*  @param   : {String}\\n  */\\n' +\n              '   VueUtil.getCookie(\"myCookie\");'\n          }, {\n            column1: \"setCookie\",\n            column2: \"installDemo.samples3.row35column2\",\n            column3: ' /*  @param   : {String}\\n' +\n              '  *  @param   : {String}\\n' +\n              '  *  @param   : {Number} cookie 几天后失效, 默认为1天\\n  */\\n' +\n              '   VueUtil.setCookie(\"myCookie\", \"this is my cookie\", 2);'\n          }, {\n            column1: \"removeCookie\",\n            column2: \"installDemo.samples3.row36column2\",\n            column3: ' /*  @param   : {String}\\n  */\\n' +\n              '   VueUtil.removeCookie(\"myCookie\");'\n          }, {\n            column1: \"throttle\",\n            column2: \"installDemo.samples3.row37column2\",\n            column3: ' /*  @param   : {Number} 可选, 周期时间, 默认16ms\\n' +\n              '  *  @param   : {Function}\\n' +\n              '  *  @return  : {Function}\\n  */\\n' +\n              '   var fn = VueUtil.throttle(100, function() {\\n' +\n              '     console.log(\"throttle\");\\n' +\n              '   });\\n' +\n              '   var fn = VueUtil.throttle(function() {\\n' +\n              '     console.log(\"throttle\");\\n' +\n              '   });\\n'\n          }, {\n            column1: \"debounce\",\n            column2: \"installDemo.samples3.row38column2\",\n            column3: ' /*  @param   : {Number} 可选, 周期时间, 默认16ms\\n' +\n              '  *  @param   : {Function}\\n' +\n              '  *  @return  : {Function}\\n  */\\n' +\n              '   var fn = VueUtil.debounce(100, function() {\\n' +\n              '     console.log(\"debounce\");\\n' +\n              '   });\\n' +\n              '   var fn = VueUtil.debounce(function() {\\n' +\n              '     console.log(\"debounce\");\\n' +\n              '   });\\n'\n          }, {\n            column1: \"addResizeListener\",\n            column2: \"installDemo.samples3.row39column2\",\n            column3: ' /*  @param   : {Object} 绑定resize事件的对象\\n' +\n              '  *  @param   : {Function} 绑定resize事件的回调函数\\n  */\\n' +\n              '   VueUtil.addResizeListener(document.querySelector(\"div\"), function() {\\n' +\n              '     console.log(\"test\");\\n' +\n              '   });\\n'\n          }, {\n            column1: \"removeResizeListener\",\n            column2: \"installDemo.samples3.row40column2\",\n            column3: ' /*  @param   : {Object} 移除resize事件的对象\\n' +\n              '  *  @param   : {Function} 移除resize事件的回调函数\\n  */\\n' +\n              '   VueUtil.removeResizeListener(document.querySelector(\"div\"), function() {\\n' +\n              '     console.log(\"test\");\\n' +\n              '   });\\n'\n          }, {\n            column1: \"addHoverListener\",\n            column2: \"installDemo.samples3.row56column2\",\n            column3: ' /*  @param   : {Object} 绑定hover事件的对象\\n' +\n              '  *  @param   : {Function} 绑定in的回调函数\\n' +\n              '  *  @param   : {Function} 绑定out的回调函数, 可选, 默认为in的回调函数\\n   */\\n' +\n              '   VueUtil.addHoverListener(document.querySelector(\"div\"), function() {\\n' +\n              '     console.log(\"test\");\\n' +\n              '   });\\n'\n          }, {\n            column1: \"removeHoverListener\",\n            column2: \"installDemo.samples3.row57column2\",\n            column3: ' /*  @param   : {Object} 移除hover事件的对象\\n' +\n              '  *  @param   : {Function} 移除in事件的回调函数\\n' +\n              '  *  @param   : {Function} 移除out事件的回调函数, 可选, 默认为in的回调函数\\n  */\\n' +\n              '   VueUtil.removeHoverListener(document.querySelector(\"div\"), function() {\\n' +\n              '     console.log(\"test\");\\n' +\n              '   });\\n'\n          }, {\n            column1: \"addTouchStart\",\n            column2: \"installDemo.samples3.row44column2\",\n            column3: ' /*  @param   : {Object}\\n' +\n              '  *  @param   : {Function}\\n  */\\n' +\n              '   VueUtil.addTouchStart(document.querySelector(\"div\"), function() {\\n' +\n              '     console.log(\"test\");\\n' +\n              '   });\\n'\n          }, {\n            column1: \"addTouchMove\",\n            column2: \"installDemo.samples3.row45column2\",\n            column3: ' /*  @param   : {Object}\\n' +\n              '  *  @param   : {Function}\\n  */\\n' +\n              '   VueUtil.addTouchMove(document.querySelector(\"div\"), function() {\\n' +\n              '     console.log(\"test\");\\n' +\n              '   });\\n'\n          }, {\n            column1: \"addTouchEnd\",\n            column2: \"installDemo.samples3.row46column2\",\n            column3: ' /*  @param   : {Object}\\n' +\n              '  *  @param   : {Function}\\n  */\\n' +\n              '   VueUtil.addTouchEnd(document.querySelector(\"div\"), function() {\\n' +\n              '     console.log(\"test\");\\n' +\n              '   });\\n'\n          }, {\n            column1: \"removeTouchStart\",\n            column2: \"installDemo.samples3.row47column2\",\n            column3: ' /*  @param   : {Object}\\n' +\n              '  *  @param   : {Function}\\n  */\\n' +\n              '   VueUtil.removeTouchStart(document.querySelector(\"div\"), function() {\\n' +\n              '     console.log(\"test\");\\n' +\n              '   });\\n'\n          }, {\n            column1: \"removeTouchMove\",\n            column2: \"installDemo.samples3.row48column2\",\n            column3: ' /*  @param   : {Object}\\n' +\n              '  *  @param   : {Function}\\n  */\\n' +\n              '   VueUtil.removeTouchMove(document.querySelector(\"div\"), function() {\\n' +\n              '     console.log(\"test\");\\n' +\n              '   });\\n'\n          }, {\n            column1: \"removeTouchEnd\",\n            column2: \"installDemo.samples3.row49column2\",\n            column3: ' /*  @param   : {Object}\\n' +\n              '  *  @param   : {Function}\\n  */\\n' +\n              '   VueUtil.removeTouchEnd(document.querySelector(\"div\"), function() {\\n' +\n              '     console.log(\"test\");\\n' +\n              '   });\\n'\n          }, {\n            column1: \"screenfull\",\n            column2: \"installDemo.samples3.row50column2\",\n            column3: ' /*  */\\n' +\n              ' VueUtil.screenfull();'\n          }, {\n            column1: \"getSystemInfo\",\n            column2: \"installDemo.samples3.row51column2\",\n            column3: ' /*  */\\n' +\n              ' VueUtil.getSystemInfo();\\n' +\n              ' // result\\n' +\n              ' // {\\n' +\n              ' //   device:\"PC\"\\n' +\n              ' //   os:\"Windows\"\\n' +\n              ' //   osVersion:\"7\"\\n' +\n              ' //   browser:\"Chrome\"\\n' +\n              ' //   version:\"63.0.3239.84\"\\n' +\n              ' //   language:\"zh_CN\"\\n' +\n              ' // }'\n          }, {\n            column1: \"setLang\",\n            column2: \"installDemo.samples3.row52column2\",\n            column3: ' /*  @param   : {String}  */\\n' +\n              '   VueUtil.setLang(\"zh\");'\n          }, {\n            column1: \"setLocale\",\n            column2: \"installDemo.samples3.row53column2\",\n            column3: ' /*  @param   : {String}\\n' +\n              '  *  @param   : {Object}\\n  */\\n' +\n              '   var locales = {\\n' +\n              '     zh: {\\n' +\n              '       button: {\\n' +\n              '         label1: \"中文\",\\n' +\n              '         label2: \"日文\",\\n' +\n              '         label3: \"英文\"\\n' +\n              '       }\\n' +\n              '     }\\n' +\n              '   };\\n' +\n              '   VueUtil.setLocale(\"zh\", locales.zh);'\n          }, {\n            column1: \"config\",\n            column2: \"installDemo.samples3.row54column2\",\n            column3: ' /*  */\\n' +\n              ' VueUtil.config.produceModel = true; //开启生产模式, 取消Vue代码检查及日志输出\\n' +\n              ' VueUtil.config.notifyStack = true; //开启通知堆叠效果'\n          }, {\n            column1: \"nextZIndex\",\n            column2: \"installDemo.samples3.row55column2\",\n            column3: ' /*  */\\n' +\n              ' var zIndex = VueUtil.nextZIndex();'\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'install4',\n    label: 'installDemo.samples4.label',\n    description: 'installDemo.samples4.description',\n    collapse: [\"item1\"],\n    notshowblock: true,\n    code: '<!-- 挂载方法 -->\\n' +\n      '// 创建并挂载到 #app (会替换 #app)\\n' +\n      'new MyComponent().$mount(\\'#app\\')\\n\\n' +\n      '// 同上\\n' +\n      'new MyComponent({ el: \\'#app\\' })\\n\\n' +\n      '// 在文档之外渲染并且随后挂载\\n' +\n      'var component = new MyComponent().$mount()\\n' +\n      'document.getElementById(\\'app\\').appendChild(component.$el)\\n\\n\\n' +\n      '<!-- 在表单控件或者组件上创建双向绑定 v-model -->\\n' +\n      '<input v-model=\"message\">\\n' +\n      '<p>Message is: {{ message }}</p>\\n\\n\\n' +\n      '<!-- 表单控件或者组件的循环 v-for -->\\n' +\n      '// 遍历当前的元素\\n' +\n      '<div v-for=\"item in items\">\\n' +\n      '  {{ item.text }}\\n' +\n      '</div>\\n\\n' +\n      '// 为数组索引指定别名（或者用于对象的键）\\n' +\n      '<div v-for=\"(item, index) in items\"></div>\\n' +\n      '<div v-for=\"(val, key) in object\"></div>\\n' +\n      '<div v-for=\"(val, key, index) in object\"></div>\\n\\n' +\n      '// v-for 默认行为试着不改变整体，而是替换元素。迫使其重新排序的元素,您需要提供一个 key 的特殊属性\\n' +\n      '<div v-for=\"item in items\" :key=\"item.id\">\\n' +\n      '  {{ item.text }}\\n' +\n      '</div>\\n\\n\\n' +\n      '<!-- 表单控件或者组件的判断 v-if -->\\n' +\n      '// 条件可见\\n' +\n      '<h1 v-if=\"ok\">Yes</h1>\\n\\n' +\n      '// 添加else\\n' +\n      '<h1 v-if=\"ok\">Yes</h1>\\n' +\n      '<h1 v-else>No</h1>\\n\\n' +\n      '// 条件为表达式\\n' +\n      '<div v-if=\"Math.random() > 0.5\">\\n' +\n      '  Now you see me\\n' +\n      '</div>\\n' +\n      '<div v-else>\\n' +\n      '  Now you do not\\n' +\n      '</div>\\n\\n\\n' +\n      '<!-- 表单控件或者组件的事件绑定 \\'v-on\\' 缩写：\\'@\\' -->\\n' +\n      '// 方法处理器\\n' +\n      '<button v-on:click=\"doThis\"></button>\\n\\n' +\n      '// 对象语法 (2.4.0+)\\n' +\n      '<button v-on=\"{ mousedown: doThis, mouseup: doThat }\"></button>\\n\\n' +\n      '// 内联语句\\n' +\n      '<button v-on:click=\"doThat(\\'hello\\', $event)\"></button>\\n\\n' +\n      '// 缩写\\n' +\n      '<button @click=\"doThis\"></button>\\n\\n' +\n      '// 停止冒泡\\n' +\n      '<button @click.stop=\"doThis\"></button>\\n\\n' +\n      '// 阻止默认行为\\n' +\n      '<button @click.prevent=\"doThis\"></button>\\n\\n' +\n      '// 阻止默认行为，没有表达式\\n' +\n      '<form @submit.prevent></form>\\n\\n' +\n      '// 串联修饰符\\n' +\n      '<button @click.stop.prevent=\"doThis\"></button>\\n\\n' +\n      '// 键修饰符，键别名\\n' +\n      '<input @keyup.enter=\"onEnter\">\\n\\n' +\n      '// 键修饰符，键代码\\n' +\n      '<input @keyup.13=\"onEnter\">\\n\\n' +\n      '// 点击回调只会触发一次\\n' +\n      '<button v-on:click.once=\"doThis\"></button>\\n\\n\\n' +\n      '<!-- 表单控件或者组件的绑定 DOM 属性 \\'v-bind\\' 缩写：\\':\\' -->\\n' +\n      '// 绑定一个属性\\n' +\n      '<img v-bind:src=\"imageSrc\">\\n\\n' +\n      '// 缩写\\n' +\n      '<img :src=\"imageSrc\">\\n\\n' +\n      '// 内联字符串拼接\\n' +\n      '<img :src=\"\\'/path/to/images/\\' + fileName\">\\n\\n' +\n      '// class 绑定\\n' +\n      '<div :class=\"{ red: isRed }\"></div>\\n' +\n      '<div :class=\"[classA, classB]\"></div>\\n' +\n      '<div :class=\"[classA, { classB: isB, classC: isC }]\">\\n\\n' +\n      '// style 绑定\\n' +\n      '<div :style=\"{ fontSize: size + \\'px\\' }\"></div>\\n' +\n      '<div :style=\"[styleObjectA, styleObjectB]\"></div>\\n\\n' +\n      '// 绑定一个有属性的对象\\n' +\n      '<div v-bind=\"{ id: someProp, \\'other-attr\\': otherProp }\"></div>\\n\\n' +\n      '// 通过 prop 修饰符绑定 DOM 属性\\n' +\n      '<div v-bind:text-content.prop=\"text\"></div>\\n\\n' +\n      '// prop 绑定。“prop”必须在 my-component 中声明。\\n' +\n      '<my-component :prop=\"someThing\"></my-component>\\n\\n' +\n      '// 通过 $props 将父组件的 props 一起传给子组件\\n' +\n      '<child-component v-bind=\"$props\"></child-component>'\n  }]\n};\nmodule.exports = installDemo;\n","'use strict';\nvar layoutDemo = {\n  path: '/layout',\n  name: 'layout',\n  head: {\n    label: 'layoutDemo.label',\n    description: 'layoutDemo.description'\n  },\n  samples: [{\n    id: 'layout1',\n    label: 'layoutDemo.samples1.label',\n    description: 'layoutDemo.samples1.description',\n    template: '<div class=\"source\"><vue-row class=\"margin-bottom20\"><vue-col :span=\"24\"><div class=\"grid-content bg-purple-dark\"></div></vue-col></vue-row><vue-row class=\"margin-bottom20\"><vue-col :span=\"12\"><div class=\"grid-content bg-purple\"></div></vue-col><vue-col :span=\"12\"><div class=\"grid-content bg-purple-light\"></div></vue-col></vue-row><vue-row class=\"margin-bottom20\"><vue-col :span=\"8\"><div class=\"grid-content bg-purple\"></div></vue-col><vue-col :span=\"8\"><div class=\"grid-content bg-purple-light\"></div></vue-col><vue-col :span=\"8\"><div class=\"grid-content bg-purple\"></div></vue-col></vue-row><vue-row class=\"margin-bottom20\"><vue-col :span=\"6\"><div class=\"grid-content bg-purple\"></div></vue-col><vue-col :span=\"6\"><div class=\"grid-content bg-purple-light\"></div></vue-col><vue-col :span=\"6\"><div class=\"grid-content bg-purple\"></div></vue-col><vue-col :span=\"6\"><div class=\"grid-content bg-purple-light\"></div></vue-col></vue-row><vue-row class=\"margin-bottom20\"><vue-col :span=\"4\"><div class=\"grid-content bg-purple\"></div></vue-col><vue-col :span=\"4\"><div class=\"grid-content bg-purple-light\"></div></vue-col><vue-col :span=\"4\"><div class=\"grid-content bg-purple\"></div></vue-col><vue-col :span=\"4\"><div class=\"grid-content bg-purple-light\"></div></vue-col><vue-col :span=\"4\"><div class=\"grid-content bg-purple\"></div></vue-col><vue-col :span=\"4\"><div class=\"grid-content bg-purple-light\"></div></vue-col></vue-row></div>',\n    code: '<vue-row>\\n  <vue-col :span=\"24\"><div class=\"grid-content bg-purple-dark\"></div></vue-col>\\n</vue-row>\\n<vue-row>\\n  <vue-col :span=\"12\"><div class=\"grid-content bg-purple\"></div></vue-col>\\n  <vue-col :span=\"12\"><div class=\"grid-content bg-purple-light\"></div></vue-col>\\n  </vue-row>\\n<vue-row>\\n  <vue-col :span=\"8\"><div class=\"grid-content bg-purple\"></div></vue-col>\\n  <vue-col :span=\"8\"><div class=\"grid-content bg-purple-light\"></div></vue-col>\\n  <vue-col :span=\"8\"><div class=\"grid-content bg-purple\"></div></vue-col>\\n</vue-row>\\n<vue-row>\\n  <vue-col :span=\"6\"><div class=\"grid-content bg-purple\"></div></vue-col>\\n  <vue-col :span=\"6\"><div class=\"grid-content bg-purple-light\"></div></vue-col>\\n  <vue-col :span=\"6\"><div class=\"grid-content bg-purple\"></div></vue-col>\\n  <vue-col :span=\"6\"><div class=\"grid-content bg-purple-light\"></div></vue-col>\\n</vue-row>\\n<vue-row>\\n  <vue-col :span=\"4\"><div class=\"grid-content bg-purple\"></div></vue-col>\\n  <vue-col :span=\"4\"><div class=\"grid-content bg-purple-light\"></div></vue-col>\\n  <vue-col :span=\"4\"><div class=\"grid-content bg-purple\"></div></vue-col>\\n  <vue-col :span=\"4\"><div class=\"grid-content bg-purple-light\"></div></vue-col>\\n  <vue-col :span=\"4\"><div class=\"grid-content bg-purple\"></div></vue-col>\\n  <vue-col :span=\"4\"><div class=\"grid-content bg-purple-light\"></div></vue-col>\\n</vue-row>'\n  }, {\n    id: 'layout2',\n    label: 'layoutDemo.samples2.label',\n    description: 'layoutDemo.samples2.description',\n    template: '<div class=\"source\"><vue-row :gutter=\"20\"><vue-col :span=\"6\"><div class=\"grid-content bg-purple\"></div></vue-col><vue-col :span=\"6\"><div class=\"grid-content bg-purple\"></div></vue-col><vue-col :span=\"6\"><div class=\"grid-content bg-purple\"></div></vue-col><vue-col :span=\"6\"><div class=\"grid-content bg-purple\"></div></vue-col></vue-row></div>',\n    code: '<vue-row :gutter=\"20\">\\n  <vue-col :span=\"6\"><div class=\"grid-content bg-purple\"></div></vue-col>\\n  <vue-col :span=\"6\"><div class=\"grid-content bg-purple\"></div></vue-col>\\n  <vue-col :span=\"6\"><div class=\"grid-content bg-purple\"></div></vue-col>\\n  <vue-col :span=\"6\"><div class=\"grid-content bg-purple\"></div></vue-col>\\n</vue-row>'\n  }, {\n    id: 'layout3',\n    label: 'layoutDemo.samples3.label',\n    description: 'layoutDemo.samples3.description',\n    template: '<div class=\"source\"><vue-row class=\"margin-bottom20\" :gutter=\"20\"><vue-col :span=\"16\"><div class=\"grid-content bg-purple\"></div></vue-col><vue-col :span=\"8\"><div class=\"grid-content bg-purple\"></div></vue-col></vue-row><vue-row class=\"margin-bottom20\" :gutter=\"20\"><vue-col :span=\"8\"><div class=\"grid-content bg-purple\"></div></vue-col><vue-col :span=\"8\"><div class=\"grid-content bg-purple\"></div></vue-col><vue-col :span=\"4\"><div class=\"grid-content bg-purple\"></div></vue-col><vue-col :span=\"4\"><div class=\"grid-content bg-purple\"></div></vue-col></vue-row><vue-row class=\"margin-bottom20\" :gutter=\"20\"><vue-col :span=\"4\"><div class=\"grid-content bg-purple\"></div></vue-col><vue-col :span=\"16\"><div class=\"grid-content bg-purple\"></div></vue-col><vue-col :span=\"4\"><div class=\"grid-content bg-purple\"></div></vue-col></vue-row></div>',\n    code: '<vue-row :gutter=\"20\">\\n  <vue-col :span=\"16\"><div class=\"grid-content bg-purple\"></div></vue-col>\\n  <vue-col :span=\"8\"><div class=\"grid-content bg-purple\"></div></vue-col>\\n</vue-row>\\n<vue-row :gutter=\"20\">\\n  <vue-col :span=\"8\"><div class=\"grid-content bg-purple\"></div></vue-col>\\n  <vue-col :span=\"8\"><div class=\"grid-content bg-purple\"></div></vue-col>\\n  <vue-col :span=\"4\"><div class=\"grid-content bg-purple\"></div></vue-col>\\n  <vue-col :span=\"4\"><div class=\"grid-content bg-purple\"></div></vue-col>\\n</vue-row>\\n<vue-row :gutter=\"20\">\\n  <vue-col :span=\"4\"><div class=\"grid-content bg-purple\"></div></vue-col>\\n  <vue-col :span=\"16\"><div class=\"grid-content bg-purple\"></div></vue-col>\\n  <vue-col :span=\"4\"><div class=\"grid-content bg-purple\"></div></vue-col>\\n</vue-row>'\n  }, {\n    id: 'layout4',\n    label: 'layoutDemo.samples4.label',\n    description: 'layoutDemo.samples4.description',\n    template: '<div class=\"source\"><vue-row class=\"margin-bottom20 row-bg\" type=\"flex\"><vue-col :span=\"6\"><div class=\"grid-content bg-purple\"></div></vue-col><vue-col :span=\"6\"><div class=\"grid-content bg-purple-light\"></div></vue-col><vue-col :span=\"6\"><div class=\"grid-content bg-purple\"></div></vue-col></vue-row><vue-row class=\"margin-bottom20 row-bg\" type=\"flex\" justify=\"center\"><vue-col :span=\"6\"><div class=\"grid-content bg-purple\"></div></vue-col><vue-col :span=\"6\"><div class=\"grid-content bg-purple-light\"></div></vue-col><vue-col :span=\"6\"><div class=\"grid-content bg-purple\"></div></vue-col></vue-row><vue-row class=\"margin-bottom20 row-bg\" type=\"flex\" justify=\"end\"><vue-col :span=\"6\"><div class=\"grid-content bg-purple\"></div></vue-col><vue-col :span=\"6\"><div class=\"grid-content bg-purple-light\"></div></vue-col><vue-col :span=\"6\"><div class=\"grid-content bg-purple\"></div></vue-col></vue-row><vue-row class=\"margin-bottom20 row-bg\" type=\"flex\" justify=\"space-between\"><vue-col :span=\"6\"><div class=\"grid-content bg-purple\"></div></vue-col><vue-col :span=\"6\"><div class=\"grid-content bg-purple-light\"></div></vue-col><vue-col :span=\"6\"><div class=\"grid-content bg-purple\"></div></vue-col></vue-row><vue-row class=\"margin-bottom20 row-bg\" type=\"flex\" justify=\"space-around\"><vue-col :span=\"6\"><div class=\"grid-content bg-purple\"></div></vue-col><vue-col :span=\"6\"><div class=\"grid-content bg-purple-light\"></div></vue-col><vue-col :span=\"6\"><div class=\"grid-content bg-purple\"></div></vue-col></vue-row></div>',\n    code: '<vue-row class=\"row-bg\" type=\"flex\">\\n  <vue-col :span=\"6\"><div class=\"grid-content bg-purple\"></div></vue-col>\\n  <vue-col :span=\"6\"><div class=\"grid-content bg-purple-light\"></div></vue-col>\\n  <vue-col :span=\"6\"><div class=\"grid-content bg-purple\"></div></vue-col>\\n</vue-row>\\n<vue-row class=\"row-bg\" type=\"flex\" justify=\"center\">\\n  <vue-col :span=\"6\"><div class=\"grid-content bg-purple\"></div></vue-col>\\n  <vue-col :span=\"6\"><div class=\"grid-content bg-purple-light\"></div></vue-col>\\n  <vue-col :span=\"6\"><div class=\"grid-content bg-purple\"></div></vue-col>\\n</vue-row>\\n<vue-row class=\"row-bg\" type=\"flex\" justify=\"end\">\\n  <vue-col :span=\"6\"><div class=\"grid-content bg-purple\"></div></vue-col>\\n  <vue-col :span=\"6\"><div class=\"grid-content bg-purple-light\"></div></vue-col>\\n  <vue-col :span=\"6\"><div class=\"grid-content bg-purple\"></div></vue-col>\\n</vue-row>\\n<vue-row class=\"row-bg\" type=\"flex\" justify=\"space-between\">\\n  <vue-col :span=\"6\"><div class=\"grid-content bg-purple\"></div></vue-col>\\n  <vue-col :span=\"6\"><div class=\"grid-content bg-purple-light\"></div></vue-col>\\n  <vue-col :span=\"6\"><div class=\"grid-content bg-purple\"></div></vue-col>\\n</vue-row>\\n<vue-row class=\"row-bg\" type=\"flex\" justify=\"space-around\">\\n  <vue-col :span=\"6\"><div class=\"grid-content bg-purple\"></div></vue-col>\\n  <vue-col :span=\"6\"><div class=\"grid-content bg-purple-light\"></div></vue-col>\\n  <vue-col :span=\"6\"><div class=\"grid-content bg-purple\"></div></vue-col>\\n</vue-row>'\n  }, {\n    id: 'layout5',\n    label: 'layoutDemo.samples5.label',\n    description: 'layoutDemo.samples5.description',\n    template: '<div class=\"source\"><vue-row :gutter=\"10\"><vue-col :xs=\"8\" :sm=\"6\" :md=\"4\" :lg=\"3\"><div class=\"grid-content bg-purple\"></div></vue-col><vue-col :xs=\"4\" :sm=\"6\" :md=\"8\" :lg=\"9\"><div class=\"grid-content bg-purple-light\"></div></vue-col><vue-col :xs=\"4\" :sm=\"6\" :md=\"8\" :lg=\"9\"><div class=\"grid-content bg-purple\"></div></vue-col><vue-col :xs=\"8\" :sm=\"6\" :md=\"4\" :lg=\"3\"><div class=\"grid-content bg-purple-light\"></div></vue-col></vue-row></div>',\n    code: '<vue-row :gutter=\"10\">\\n  <vue-col :xs=\"8\" :sm=\"6\" :md=\"4\" :lg=\"3\"><div class=\"grid-content bg-purple\"></div></vue-col>\\n  <vue-col :xs=\"4\" :sm=\"6\" :md=\"8\" :lg=\"9\"><div class=\"grid-content bg-purple-light\"></div></vue-col>\\n  <vue-col :xs=\"4\" :sm=\"6\" :md=\"8\" :lg=\"9\"><div class=\"grid-content bg-purple\"></div></vue-col>\\n  <vue-col :xs=\"8\" :sm=\"6\" :md=\"4\" :lg=\"3\"><div class=\"grid-content bg-purple-light\"></div></vue-col>\\n</vue-row>'\n  }, {\n    id: 'layout6',\n    label: 'Row Attributes',\n    template: '<event-table :data=\"tableData\"></event-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"gutter\",\n            column2: \"layoutDemo.samples6.row1column2\",\n            column3: \"Number\",\n            column4: \"\",\n            column5: \"0\"\n          }, {\n            column1: \"type\",\n            column2: \"layoutDemo.samples6.row2column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"justify\",\n            column2: \"layoutDemo.samples6.row3column2\",\n            column3: \"String\",\n            column4: \"start/end/center/space-around/space-between\",\n            column5: \"start\"\n          }, {\n            column1: \"align\",\n            column2: \"layoutDemo.samples6.row4column2\",\n            column3: \"String\",\n            column4: \"top/middle/bottom\",\n            column5: \"top\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'layout7',\n    label: 'Col Attributes',\n    template: '<event-table :data=\"tableData\"></event-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"span\",\n            column2: \"layoutDemo.samples7.row1column2\",\n            column3: \"Number\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"offset\",\n            column2: \"layoutDemo.samples7.row2column2\",\n            column3: \"Number\",\n            column4: \"\",\n            column5: \"0\"\n          }, {\n            column1: \"push\",\n            column2: \"layoutDemo.samples7.row3column2\",\n            column3: \"Number\",\n            column4: \"\",\n            column5: \"0\"\n          }, {\n            column1: \"pull\",\n            column2: \"layoutDemo.samples7.row4column2\",\n            column3: \"Number\",\n            column4: \"\",\n            column5: \"0\"\n          }, {\n            column1: \"xs\",\n            column2: \"layoutDemo.samples7.row5column2\",\n            column3: \"layoutDemo.samples7.row5column3\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"sm\",\n            column2: \"layoutDemo.samples7.row6column2\",\n            column3: \"layoutDemo.samples7.row6column3\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"md\",\n            column2: \"layoutDemo.samples7.row7column2\",\n            column3: \"layoutDemo.samples7.row7column3\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"lg\",\n            column2: \"layoutDemo.samples7.row8column2\",\n            column3: \"layoutDemo.samples7.row8column3\",\n            column4: \"\",\n            column5: \"\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }]\n};\nmodule.exports = layoutDemo;","'use strict';\nvar listDemo = {\n  path: '/list',\n  name: 'list',\n  head: {\n    label: 'listDemo.label',\n    description: 'listDemo.description'\n  },\n  samples: [{\n    id: 'list1',\n    label: 'listDemo.samples1.label',\n    description: 'listDemo.samples1.description',\n    template: '<div class=\"source\"><vue-list :height=\"250\" :default-actived-index=\"5\" scrollbar @scroll=\"scrollHandle\" ref=\"list\"><vue-list-item v-for=\"index of 10000\" :key=\"index\" @select=\"selectHandle\"><vue-button type=\"text\" :icon=\"index%2 ===0 ? \\'vue-icon-check\\' : \\'vue-icon-close\\'\" style=\"width:20px;margin:0 20px;float:left;padding: 9px 0\"></vue-button><div style=\"line-height:35px;\">Item #{{index}}: Content...</div><vue-divider v-if=\"index!==10000\"></vue-divider></vue-list-item></vue-list></div>',\n    parameter: {\n      methods: {\n        selectHandle: function (listItem) {\n          this.$notify({ title: 'Selected Item Index: ' + listItem.index });\n        },\n        scrollHandle: function (event, scrollTop, isTop, isBottom) {\n          if (isTop) {\n            this.$notify({ title: 'Scroll Top' });\n          }\n          if (isBottom) {\n            this.$notify({ title: 'Scroll Bottom' });\n          }\n          console.log(event);\n        }\n      }\n    },\n    code: '<vue-list :height=\"250\" :default-actived-index=\"5\" scrollbar @scroll=\"scrollHandle\" ref=\"list\">\\n' +\n      '  <vue-list-item v-for=\"index of 10000\" :key=\"index\" @select=\"selectHandle\">\\n' +\n      '    <vue-button type=\"text\" :icon=\"index%2 ===0 ? \\'vue-icon-check\\' : \\'vue-icon-close\\'\" style=\"width:20px;margin-left:20px;margin-right:20px;float:left;\"></vue-button>\\n' +\n      '    <div style=\"line-height:35px;\">Item #{{index}}: Content...</div>\\n' +\n      '    <vue-divider v-if=\"index!==10000\"></vue-divider>\\n' +\n      '  </vue-list-item>\\n' +\n      '</vue-list>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    methods: {\\n' +\n      '      selectHandle: function(listItem) {\\n' +\n      '        this.$notify({title: \\'Selected Item Index: \\' + listItem.index});\\n' +\n      '      },\\n' +\n      '      scrollHandle: function(event, scrollTop, isTop, isBottom) {\\n' +\n      '        if (isTop) {\\n' +\n      '          this.$notify({title: \\'Scroll Top\\'});\\n' +\n      '        }\\n' +\n      '        if (isBottom) {\\n' +\n      '          this.$notify({title: \\'Scroll Bottom\\'});\\n' +\n      '        }\\n' +\n      '        console.log(event);\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'list2',\n    label: 'Attributes',\n    template: '<attr-table :data=\"tableData\"></attr-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"height\",\n            column2: \"listDemo.samples2.row1column2\",\n            column3: \"Number\",\n            column4: \"\",\n            column5: \"200\"\n          }, {\n            column1: \"default-selected\",\n            column2: \"listDemo.samples2.row4column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"true\"\n          }, {\n            column1: \"default-actived-index\",\n            column2: \"listDemo.samples2.row3column2\",\n            column3: \"Number\",\n            column4: \"\",\n            column5: \"0\"\n          }, {\n            column1: \"scrollbar\",\n            column2: \"listDemo.samples2.row5column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'list4',\n    label: 'List Events',\n    template: '<event-table :data=\"tableData\"></event-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"scroll\",\n            column2: \"listDemo.samples2.row2column2\",\n            column3: \"event, scrollTop\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'list3',\n    label: 'List Item Events',\n    template: '<event-table :data=\"tableData\"></event-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"select\",\n            column2: \"listDemo.samples3.row1column2\",\n            column3: \"listItem\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }]\n};\nmodule.exports = listDemo;\n","'use strict';\nvar loadingBarDemo = {\n  path: '/loadingBar',\n  name: 'loadingBar',\n  head: {\n    label: 'loadingBarDemo.label',\n    description: 'loadingBarDemo.description'\n  },\n  samples: [{\n    id: 'loadingBar1',\n    label: 'loadingBarDemo.samples1.label',\n    description: 'loadingBarDemo.samples1.description',\n    template: '<div class=\"source\"><vue-button @click=\"start\">Start</vue-button><vue-button @click=\"finish\">Finish</vue-button><vue-button @click=\"error\">Error</vue-button><vue-button @click=\"update\">Update</vue-button></div>',\n    parameter: {\n      methods: {\n        start: function () {\n          Vue.loadingBar.start();\n        },\n        finish: function () {\n          Vue.loadingBar.finish();\n        },\n        error: function () {\n          Vue.loadingBar.error();\n        },\n        update: function () {\n          Vue.loadingBar.update(50);\n        }\n      }\n    },\n    code: '<vue-button @click=\"start\">Start</vue-button>\\n' +\n      '<vue-button @click=\"finish\">Finish</vue-button>\\n' +\n      '<vue-button @click=\"error\">Error</vue-button>\\n' +\n      '<vue-button @click=\"update\">Update</vue-button>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    methods: {\\n' +\n      '      start: function() {\\n' +\n      '        Vue.loadingBar.start();\\n' +\n      '      },\\n' +\n      '      finish: function() {\\n' +\n      '        Vue.loadingBar.finish();\\n' +\n      '      },\\n' +\n      '      error: function() {\\n' +\n      '        Vue.loadingBar.error();\\n' +\n      '      },\\n' +\n      '      update: function() {\\n' +\n      '        Vue.loadingBar.update(50);\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'loadingBar2',\n    label: 'Methods',\n    template: '<method-table :data=\"tableData\"></method-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"start\",\n            column2: \"loadingBarDemo.samples2.row1column2\",\n            column3: \"loadingBarDemo.samples2.row1column3\"\n          }, {\n            column1: \"finish\",\n            column2: \"loadingBarDemo.samples2.row2column2\",\n            column3: \"loadingBarDemo.samples2.row2column3\"\n          }, {\n            column1: \"error\",\n            column2: \"loadingBarDemo.samples2.row3column2\",\n            column3: \"loadingBarDemo.samples2.row3column3\"\n          }, {\n            column1: \"update\",\n            column2: \"loadingBarDemo.samples2.row4column2\",\n            column3: \"loadingBarDemo.samples2.row4column3\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }]\n};\nmodule.exports = loadingBarDemo;\n","'use strict';\nvar loadingDemo = {\n  path: '/loading',\n  name: 'loading',\n  head: {\n    label: 'loadingDemo.label',\n    description: 'loadingDemo.description'\n  },\n  samples: [{\n    id: 'loading1',\n    label: 'loadingDemo.samples1.label',\n    description: 'loadingDemo.samples1.description',\n    template: '<div class=\"source\"><vue-xtable v-loading=\"loading\" vue-loading-text=\"Loading...\" :data=\"tableData\" border stripe><vue-xtable-column prop=\"date\" label=\"Date\" width=\"180\"></vue-xtable-column><vue-xtable-column prop=\"name\" label=\"Name\" width=\"180\"></vue-xtable-column><vue-xtable-column prop=\"address\" label=\"Address\" width=\"350\"></vue-xtable-column></vue-xtable><div style=\"margin-top:30px\"></div><vue-button type=\"primary\" @click=\"openFullScreen1\" v-loading.fullscreen=\"fullscreenLoading1\" vue-loading-text=\"Loading...\" vue-loading-class=\"loading-yellow\">Full screen loading for 3 seconds</vue-button><div style=\"margin-top:10px\"></div><vue-button type=\"primary\" @click=\"openFullScreen2\" v-loading.fullscreen=\"fullscreenLoading2\" vue-loading-text=\"Loading...\" vue-loading-class=\"min-loading\">Min loading for 3 seconds</vue-button></div>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            date: '2016-05-02',\n            name: 'John Smith',\n            address: 'No.1518,  Jinshajiang Road, Putuo District'\n          }, {\n            date: '2016-05-04',\n            name: 'John Smith',\n            address: 'No.1518,  Jinshajiang Road, Putuo District'\n          }, {\n            date: '2016-05-01',\n            name: 'John Smith',\n            address: 'No.1518,  Jinshajiang Road, Putuo District'\n          }],\n          loading: true,\n          fullscreenLoading1: false,\n          fullscreenLoading2: false\n        };\n      },\n      methods: {\n        openFullScreen1: function () {\n          var self = this;\n          self.fullscreenLoading1 = true;\n          setTimeout(function () {\n            self.fullscreenLoading1 = false;\n          }, 3000);\n        },\n        openFullScreen2: function () {\n          var self = this;\n          self.fullscreenLoading2 = true;\n          setTimeout(function () {\n            self.fullscreenLoading2 = false;\n          }, 3000);\n        }\n      }\n    },\n    code: '<vue-xtable v-loading=\"loading\" vue-loading-text=\"Loading...\" :data=\"tableData\" border stripe>\\n' +\n      '  <vue-xtable-column prop=\"date\" label=\"Date\" width=\"180\"></vue-xtable-column>\\n' +\n      '  <vue-xtable-column prop=\"name\" label=\"Name\" width=\"180\"></vue-xtable-column>\\n' +\n      '  <vue-xtable-column prop=\"address\" label=\"Address\" width=\"350\"></vue-xtable-column>\\n' +\n      '</vue-xtable>\\n' +\n      '<vue-button type=\"primary\" @click=\"openFullScreen1\" v-loading.fullscreen=\"fullscreenLoading1\" vue-loading-text=\"Loading...\" vue-loading-class=\"loading-yellow\">\\n  Full screen loading for 3 seconds\\n</vue-button>\\n' +\n      '<vue-button type=\"primary\" @click=\"openFullScreen2\" v-loading.fullscreen=\"fullscreenLoading2\" vue-loading-text=\"Loading...\" vue-loading-class=\"min-loading\">\\n  Min loading for 3 seconds\\n</vue-button>\\n\\n' +\n      '<style>\\n' +\n      '  .loading-yellow {\\n' +\n      '    background-color:yellow;\\n' +\n      '  }\\n' +\n      '  .min-loading {\\n' +\n      '    left: 50%;\\n' +\n      '    top: 50%;\\n' +\n      '    transform: translate(-50%,-50%);\\n' +\n      '    border-radius: 5px;\\n' +\n      '    background: rgba(0,0,0,.7);\\n' +\n      '    width: 120px;\\n' +\n      '    height: 120px;\\n' +\n      '  }\\n' +\n      '  .min-loading .path {\\n' +\n      '    stroke: #fff;\\n' +\n      '  }\\n' +\n      '  .min-loading .vue-loading-text {\\n' +\n      '    color: #fff;\\n' +\n      '  }\\n' +\n      '</style>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function() {\\n' +\n      '      return {\\n' +\n      '        tableData: [{\\n' +\n      '          date: \"2016-05-02\",\\n' +\n      '          name: \"John Smith\",\\n' +\n      '          address: \"No.1518,  Jinshajiang Road, Putuo District\"\\n' +\n      '        }, {\\n' +\n      '          date: \"2016-05-04\",\\n' +\n      '          name: \"John Smith\",\\n' +\n      '          address: \"No.1518,  Jinshajiang Road, Putuo District\"\\n' +\n      '        }, {\\n' +\n      '          date: \"2016-05-01\",\\n' +\n      '          name: \"John Smith\",\\n' +\n      '          address: \"No.1518,  Jinshajiang Road, Putuo District\"\\n' +\n      '        }],\\n' +\n      '        loading: true,\\n' +\n      '        fullscreenLoading1: false,\\n' +\n      '        fullscreenLoading2: false\\n' +\n      '      };\\n' +\n      '    },\\n' +\n      '    methods: {\\n' +\n      '      openFullScreen1: function() {\\n' +\n      '        var self = this;\\n' +\n      '        self.fullscreenLoading1 = true;\\n' +\n      '        setTimeout(function() {\\n' +\n      '          self.fullscreenLoading1 = false;\\n' +\n      '        }, 3000);\\n' +\n      '      },\\n' +\n      '      openFullScreen2: function() {\\n' +\n      '        var self = this;\\n' +\n      '        self.fullscreenLoading2 = true;\\n' +\n      '        setTimeout(function() {\\n' +\n      '          self.fullscreenLoading2 = false;\\n' +\n      '        }, 3000);\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'loading2',\n    label: 'Attributes',\n    template: '<attr-table :data=\"tableData\"></attr-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"vue-loading-text\",\n            column2: \"loadingDemo.samples2.row1column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"vue-loading-class\",\n            column2: \"loadingDemo.samples2.row2column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }]\n};\nmodule.exports = loadingDemo;\n","  'use strict';\n  var messageBoxDemo = {\n    path: '/messageBox',\n    name: 'messageBox',\n    head: {\n      label: 'messageBoxDemo.label',\n      description: 'messageBoxDemo.description'\n    },\n    samples: [{\n      id: 'messageBox1',\n      label: 'messageBoxDemo.samples1.label',\n      description: 'messageBoxDemo.samples1.description',\n      template: '<div class=\"source\"><vue-button type=\"text\" @click=\"open\">Click Me</vue-button></div>',\n      parameter: {\n        methods: {\n          open: function() {\n            var self = this;\n            self.$alert({\n              title: \"Title\",\n              message: \"This is a message\",\n              callback: function(action) {\n                self.$notify({title: action});\n              }\n            });\n          }\n        }\n      },\n      code: '<vue-button type=\"text\" @click=\"open\">Click Me</vue-button>\\n\\n'+\n          '<script>\\n'+\n          '  new Vue({\\n'+\n          '    methods: {\\n'+\n          '      open: function() {\\n'+\n          '        var self = this;\\n'+\n          '        self.$alert({\\n'+\n          '          title: \"Title\",\\n'+\n          '          message: \"This is a message\",\\n'+\n          '          callback: function(action) {\\n'+\n          '            self.$notify({title: action});\\n'+\n          '          }\\n'+\n          '        });\\n'+\n          '      }\\n'+\n          '    }\\n'+\n          '  }).$mount();\\n'+\n          '</script>'\n    }, {\n      id: 'messageBox2',\n      label: 'messageBoxDemo.samples2.label',\n      description: 'messageBoxDemo.samples2.description',\n      template: '<div class=\"source\"><vue-button type=\"text\" @click=\"open\">Click Me</vue-button></div>',\n      parameter: {\n        methods: {\n          open: function() {\n            var self = this;\n            self.$confirm({\n              title: \"Warning\",\n              message: \"This will delete the file. Continue?\",\n              type: \"warning\"\n            }).then(function(action) {\n              self.$notify({\n                title: action\n              });\n            }).catch(function(action) {\n              self.$notify({\n                title: action\n              });\n            });\n          }\n        }\n      },\n      code: '<vue-button type=\"text\" @click=\"open\">Click Me</vue-button>\\n\\n'+\n          '<script>\\n'+\n          '  new Vue({\\n'+\n          '    methods: {\\n'+\n          '      open: function() {\\n'+\n          '        var self = this;\\n'+\n          '        self.$confirm({\\n'+\n          '          title: \"Warning\",\\n'+\n          '          message: \"This will delete the file. Continue?\",\\n'+\n          '          type: \"warning\"\\n'+\n          '        }).then(function(action) {\\n'+\n          '          self.$notify({title: action});\\n'+\n          '        }).catch(function(action) {\\n'+\n          '          self.$notify({title: action});\\n'+\n          '        });\\n'+\n          '      }\\n'+\n          '    }\\n'+\n          '  }).$mount();\\n'+\n          '</script>'\n    }, {\n      id: 'messageBox3',\n      label: 'messageBoxDemo.samples3.label',\n      description: 'messageBoxDemo.samples3.description',\n      template: '<div class=\"source\"><vue-button type=\"text\" @click=\"open\">Click Me</vue-button></div>',\n      parameter: {\n        methods: {\n          open: function() {\n            var self = this;\n            var createElement = self.$createElement;\n            self.$confirm({\n              title: \"Title\",\n              message: createElement('p', null, [createElement('span', null, 'Message can be '), createElement('i', {\n                style: 'color: teal'\n              }, 'VNode')]),\n              beforeClose: function(action, instance, done) {\n                if (action === 'confirm') {\n                  instance.confirmButtonLoading = true;\n                  instance.confirmButtonText = 'Loading...';\n                  setTimeout(function() {\n                    done();\n                    instance.confirmButtonLoading = false;\n                  }, 3000);\n                } else {\n                  done();\n                }\n              },\n              callback: function(action) {\n                self.$notify({title: action});\n              }\n            });\n          }\n        }\n      },\n      code: '<vue-button type=\"text\" @click=\"open\">Click Me</vue-button>\\n\\n'+\n          '<script>\\n'+\n          '  new Vue({\\n'+\n          '    methods: {\\n'+\n          '      open: function() {\\n'+\n          '        var self = this;\\n'+\n          '        var createElement = self.$createElement;\\n'+\n          '        self.$confirm({\\n'+\n          '          title: \"Title\",\\n'+\n          '          message: createElement(\"p\", null, [createElement(\"span\", null, \"Message can be \"), createElement(\"i\", {style: \"color: teal\"}, \"VNode\")]),\\n'+\n          '          beforeClose: function(action, instance, done) {\\n'+\n          '            if (action === \"confirm\") {\\n'+\n          '              instance.confirmButtonLoading = true;\\n'+\n          '              instance.confirmButtonText = \"Loading...\";\\n'+\n          '              setTimeout(function() {\\n'+\n          '                done();\\n'+\n          '                instance.confirmButtonLoading = false;\\n'+\n          '              }, 3000);\\n'+\n          '            } else {\\n'+\n          '              done();\\n'+\n          '            }\\n'+\n          '          },\\n'+\n          '          callback: function(action) {\\n'+\n          '            self.$notify({title: action});\\n'+\n          '          }\\n'+\n          '        });\\n'+\n          '      }\\n'+\n          '    }\\n'+\n          '  }).$mount();\\n'+\n          '</script>'\n    }, {\n      id: 'messageBox4',\n      label: 'Options',\n      template: '<attr-table :data=\"tableData\"></attr-table>',\n      parameter: {\n        data: function() {\n          return {\n            tableData: [{\n              column1: \"title\",\n              column2: \"messageBoxDemo.samples4.row1column2\",\n              column3: \"String\",\n              column4: \"\",\n              column5: \"\"\n            }, {\n              column1: \"message\",\n              column2: \"messageBoxDemo.samples4.row2column2\",\n              column3: \"String / VNode\",\n              column4: \"\",\n              column5: \"\"\n            }, {\n              column1: \"type\",\n              column2: \"messageBoxDemo.samples4.row3column2\",\n              column3: \"String\",\n              column4: \"success, info, warning, error\",\n              column5: \"\"\n            }, {\n              column1: \"customClass\",\n              column2: \"messageBoxDemo.samples4.row4column2\",\n              column3: \"String\",\n              column4: \"\",\n              column5: \"\"\n            }, {\n              column1: \"callback\",\n              column2: \"messageBoxDemo.samples4.row5column2\",\n              column3: \"messageBoxDemo.samples4.row5column3\",\n              column4: \"\",\n              column5: \"\"\n            }, {\n              column1: \"beforeClose\",\n              column2: \"messageBoxDemo.samples4.row6column2\",\n              column3: \"messageBoxDemo.samples4.row6column3\",\n              column4: \"\",\n              column5: \"\"\n            }, {\n              column1: \"cancelButtonText\",\n              column2: \"messageBoxDemo.samples4.row7column2\",\n              column3: \"String\",\n              column4: \"\",\n              column5: \"\"\n            }, {\n              column1: \"confirmButtonText\",\n              column2: \"messageBoxDemo.samples4.row8column2\",\n              column3: \"String\",\n              column4: \"\",\n              column5: \"\"\n            }, {\n              column1: \"cancelButtonClass\",\n              column2: \"messageBoxDemo.samples4.row9column2\",\n              column3: \"String\",\n              column4: \"\",\n              column5: \"\"\n            }, {\n              column1: \"confirmButtonClass\",\n              column2: \"messageBoxDemo.samples4.row10column2\",\n              column3: \"String\",\n              column4: \"\",\n              column5: \"\"\n            }]\n          }\n        }\n      },\n      notshowmeta: true\n    }]\n  };\n  module.exports = messageBoxDemo;\n","'use strict';\nvar actionsheetDemo = {\n    path: '/action-sheet',\n    name: 'mobile_actionsheet',\n    head: {\n        label: 'actionsheetDemo.label',\n        description: '',\n        demoInitUrl:'action-sheet',\n    },\n    samples: [{\n      id: 'actionsheet1',\n      label: 'actionsheetDemo.detail1.label',\n      description: 'actionsheetDemo.detail1.description',\n      template: '',\n      parameter: {\n      },\n      code: '<vue-button\\n'\n          + '      type=\"success\"\\n'\n          + '      style=\"position:absolute;bottom:0;margin: 10px 0;width:100%;text-aligin:center;\"\\n'\n          + '      @click=\"click\">\\n'\n          + '  打开actionSheet\\n'\n          + '</vue-button>\\n'\n          + ' <vue-action-sheet\\n'\n          + '  v-model=\"show\"\\n'\n          + '  :actions=\"actions\"\\n'\n          + '  cancel-text=\"取消\"\\n'\n          + '  @select=\"onSelect\"\\n'\n          + '  @cancel=\"onCancel\"/>\\n'\n          + '<script>\\n'\n          + '  new Vue({\\n'\n          + '    data: function() {\\n'\n          + '      return {\\n'\n          + '       show: false,\\n'\n          + '       actions: [\\n'\n          + '         { name: \\'选项\\' },\\n'\n          + '         { name: \\'选项\\' },\\n'\n          + '         { name: \\'选项\\', subname: \\'描述息\\' },\\n'\n          + '       ],\\n'\n          + '      };\\n'\n          + '    },\\n' +\n          + '    methods:{\\n'\n          + '     click() {\\n'\n          + '       this.show = true;\\n'\n          + '     },\\n'\n          + '     onSelect() {\\n'\n          + '       this.show = false;\\n'\n          + '     },\\n'\n          + '     onCancel() {\\n'\n          + '       this.show = false;\\n'\n          + '     },\\n'\n          + '    }\\n'+\n          + '  }).$mount();\\n'\n          + '</script>'\n    },\n  {\n    id: 'actionsheet_attrs',\n    label: 'Attributes',\n    template: '<attr-table :data=\"tableData\"></attr-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n              column1: \"v-model(value)\",\n              column2: \"actionsheetDemo.attrsInfo.row1column2\",\n              column3: \"Boolean\",\n              column4: \"\",\n              column5: \"false\"\n          }, {\n              column1: \"actions\",\n              column2: \"actionsheetDemo.attrsInfo.row2column2\",\n              column3: \"ArrayObject\",\n              column4: \"\",\n              column5: \"[]\"\n          }, {\n              column1: \"title\",\n              column2: \"actionsheetDemo.attrsInfo.row3column2\",\n              column3: \"String\",\n              column4: \"\",\n              column5: \"\"\n          }, {\n              column1: \"cancel-text\",\n              column2: \"actionsheetDemo.attrsInfo.row4column2\",\n              column3: \"String\",\n              column4: \"\",\n              column5: \"\"\n          }, {\n              column1: \"description \",\n              column2: \"actionsheetDemo.attrsInfo.row5column2\",\n              column3: \"String\",\n              column4: \"\",\n              column5: \"\"\n          }, {\n              column1: \"close-icon\",\n              column2: \"actionsheetDemo.attrsInfo.row6column2\",\n              column3: \"String\",\n              column4: \"\",\n              column5: \"cross\"\n          }, {\n              column1: \"duration\",\n              column2: \"actionsheetDemo.attrsInfo.row7column2\",\n              column3: \"Number\",\n              column4: \"\",\n              column5: \"0.3\"\n          }, {\n              column1: \"round\",\n              column2: \"actionsheetDemo.attrsInfo.row8column2\",\n              column3: \"Boolean\",\n              column4: \"\",\n              column5: \"true\"\n          }, {\n              column1: \"overlay\",\n              column2: \"actionsheetDemo.attrsInfo.row9column2\",\n              column3: \"Boolean\",\n              column4: \"\",\n              column5: \"true\"\n          }, {\n              column1: \"lock-scroll\",\n              column2: \"actionsheetDemo.attrsInfo.row10column2\",\n              column3: \"Boolean\",\n              column4: \"\",\n              column5: \"true\"\n          }, {\n              column1: \"lazy-render\",\n              column2: \"actionsheetDemo.attrsInfo.row11column2\",\n              column3: \"Boolean\",\n              column4: \"\",\n              column5: \"true\"\n          }, {\n              column1: \"close-on-popstate\",\n              column2: \"actionsheetDemo.attrsInfo.row12column2\",\n              column3: \"Boolean\",\n              column4: \"\",\n              column5: \"false\"\n          }, {\n              column1: \"close-on-click-action\",\n              column2: \"actionsheetDemo.attrsInfo.row13column2\",\n              column3: \"Boolean\",\n              column4: \"\",\n              column5: \"false\"\n          }, {\n              column1: \"close-on-click-overlay\",\n              column2: \"actionsheetDemo.attrsInfo.row14column2\",\n              column3: \"Boolean\",\n              column4: \"\",\n              column5: \"true\"\n          }, {\n              column1: \"safe-area-inset-bottom\",\n              column2: \"actionsheetDemo.attrsInfo.row15column2\",\n              column3: \"Boolean\",\n              column4: \"\",\n              column5: \"true\"\n          }, {\n              column1: \"get-container\",\n              column2: \"actionsheetDemo.attrsInfo.row16column2\",\n              column3: \"String | () => Element\",\n              column4: \"\",\n              column5: \"\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n    },{\n      id: 'actions_attrs',\n      label: 'Actions Attributes',\n      template: '<div style=\"padding:20px;\"><div style=\"padding:10px 0;\">{{$t(\"actionsheetDemo.actionsInfo.description\")}}</div><attr-table :data=\"tableData\"></attr-table></div>',\n      parameter: {\n        data: function () {\n          return {\n            tableData: [{\n              column1: \"name\",\n              column2: \"actionsheetDemo.actionsInfo.row1column2\",\n              column3: \"String\",\n              column4: \"\",\n              column5: \"\"\n            },{\n              column1: \"subname\",\n              column2: \"actionsheetDemo.actionsInfo.row2column2\",\n              column3: \"String\",\n              column4: \"\",\n              column5: \"\"\n            },{\n              column1: \"color\",\n              column2: \"actionsheetDemo.actionsInfo.row3column2\",\n              column3: \"String\",\n              column4: \"\",\n              column5: \"\"\n            },{\n              column1: \"className\",\n              column2: \"actionsheetDemo.actionsInfo.row4column2\",\n              column3: \"Any\",\n              column4: \"\",\n              column5: \"\"\n            },{\n              column1: \"loading\",\n              column2: \"actionsheetDemo.actionsInfo.row5column2\",\n              column3: \"Boolean\",\n              column4: \"\",\n              column5: \"\"\n            },{\n              column1: \"disabled\",\n              column2: \"actionsheetDemo.actionsInfo.row6column2\",\n              column3: \"Boolean\",\n              column4: \"\",\n              column5: \"\"\n            }]\n          }\n        }\n      },\n      notshowmeta: true\n    },{\n      id: 'actionsheet_event',\n      label: 'Events',\n      template: '<event-table :data=\"tableData\"></event-table>',\n      parameter: {\n        data: function () {\n          return {\n            tableData: [{\n              column1: \"select\",\n              column2: \"actionsheetDemo.eventInfo.row1column2\",\n              column3: \"Event object\"\n            },{\n              column1: \"cancel\",\n              column2: \"actionsheetDemo.eventInfo.row2column2\",\n              column3: \"Event object\"\n            },{\n              column1: \"open\",\n              column2: \"actionsheetDemo.eventInfo.row3column2\",\n              column3: \"Event object\"\n            },{\n              column1: \"close\",\n              column2: \"actionsheetDemo.eventInfo.row4column2\",\n              column3: \"Event object\"\n            },{\n              column1: \"opened\",\n              column2: \"actionsheetDemo.eventInfo.row5column2\",\n              column3: \"Event object\"\n            },{\n              column1: \"closed\",\n              column2: \"actionsheetDemo.eventInfo.row6column2\",\n              column3: \"Event object\"\n            },{\n              column1: \"click-overlay\",\n              column2: \"actionsheetDemo.eventInfo.row7column2\",\n              column3: \"Event object\"\n            }]\n          }\n        }\n      },\n      notshowmeta: true\n    }]\n};\n\nmodule.exports = actionsheetDemo\n","'use strict';\nvar celllayoutDemo = {\n    path: '/cell-layout',\n    name: 'mobile_celllayout',\n    head: {\n        label: 'celllayoutDemo.label',\n        description: '',\n        demoInitUrl:'cell-layout',\n    },\n    samples: [{\n      id: 'celllayout_top1',\n      label: 'celllayoutDemo.detail1.label',\n      description: 'celllayoutDemo.detail1.description',\n      template: '',\n      code: '',\n      notshowmeta: true\n    },\n    {\n      id: 'celllayout_sample1',\n      label: 'celllayoutDemo.samples1.label',\n      description: 'celllayoutDemo.samples1.description',\n      template: '',\n      code: '<vue-cell-layout>\\n'\n          + '  <vue-cell-layout-item v-for=\"item in mCellLayoutList\" :key=\"item.textLabel\" :icon=\"item.iconName\" :text=\"item.textLabel\" />\\n'\n          + '</vue-cell-layout>\\n'\n          + '<script>\\n'\n          + '  new Vue({\\n'\n          + '    data: function() {\\n'\n          + '      return {\\n'\n          + '       mCellLayoutList: [\\n'\n          + '         { iconName: \\'vue-icon-photo\\', textLabel: \\'选项1\\' },\\n'\n          + '         { iconName: \\'vue-icon-photo\\', textLabel: \\'选项2\\' },\\n'\n          + '         { iconName: \\'vue-icon-photo\\', textLabel: \\'选项3\\' },\\n'\n          + '         { iconName: \\'vue-icon-photo\\', textLabel: \\'选项4\\' },\\n'\n          + '         { iconName: \\'vue-icon-photo\\', textLabel: \\'选项5\\' },\\n'\n          + '         { iconName: \\'vue-icon-photo\\', textLabel: \\'选项6\\' },\\n'\n          + '       ]\\n'\n          + '      };\\n'\n          + '    },\\n'\n          + '    methods:{\\n'\n          + '    }\\n'\n          + '  }).$mount();\\n'\n          + '</script>'\n    },\n    { id: 'celllayout_sample2',\n      label: 'celllayoutDemo.samples2.label',\n      description: 'celllayoutDemo.samples2.description',\n      template: '',\n      code: '<vue-cell-layout :column-num=\"6\">\\n'\n          + '  <vue-cell-layout-item v-for=\"item in mCellLayoutList\" :key=\"item.textLabel\" :icon=\"item.iconName\" :text=\"item.textLabel\" />\\n'\n          + '</vue-cell-layout>\\n'\n          + '<script>\\n'\n          + '  new Vue({\\n'\n          + '    data: function() {\\n'\n          + '      return {\\n'\n          + '       mCellLayoutList: [\\n'\n          + '         { iconName: \\'vue-icon-photo\\', textLabel: \\'选项1\\' },\\n'\n          + '         { iconName: \\'vue-icon-photo\\', textLabel: \\'选项2\\' },\\n'\n          + '         { iconName: \\'vue-icon-photo\\', textLabel: \\'选项3\\' },\\n'\n          + '         { iconName: \\'vue-icon-photo\\', textLabel: \\'选项4\\' },\\n'\n          + '         { iconName: \\'vue-icon-photo\\', textLabel: \\'选项5\\' },\\n'\n          + '         { iconName: \\'vue-icon-photo\\', textLabel: \\'选项6\\' },\\n'\n          + '       ]\\n'\n          + '      };\\n'\n          + '    },\\n'\n          + '    methods:{\\n'\n          + '    }\\n'\n          + '  }).$mount();\\n'\n          + '</script>'\n    },\n    { id: 'celllayout_sample3',\n      label: 'celllayoutDemo.samples3.label',\n      description: 'celllayoutDemo.samples3.description',\n      template: '',\n      code: '<vue-cell-layout :column-num=\"3\">\\n'\n          + '  <vue-cell-layout-item v-for=\"item in mCellLayoutList2\" :key=\"item.textLabel\">\\n'\n          + '      <vue-image :src=\"item.imgUrl\" />\\n'\n          + '      <span style=\"padding:10px;\">{{item.textLabel}}</span>\\n'\n          + '  </vue-cell-layout-item>\\n'\n          + '</vue-cell-layout>'\n          + '<script>\\n'\n          + '  new Vue({\\n'\n          + '    data: function() {\\n'\n          + '      return {\\n'\n          + '       mCellLayoutList2: [\\n'\n          + '         { imgUrl: \\'https://img.yzcdn.cn/vant/apple-1.jpg\\', textLabel: \\'图片1\\' },\\n'\n          + '         { imgUrl: \\'https://img.yzcdn.cn/vant/apple-2.jpg\\', textLabel: \\'图片2\\' },\\n'\n          + '         { imgUrl: \\'https://img.yzcdn.cn/vant/apple-3.jpg\\', textLabel: \\'图片3\\' }\\n'\n          + '       ],\\n'\n          + '      };\\n'\n          + '    },\\n'\n          + '    methods:{\\n'\n          + '    }\\n'\n          + '  }).$mount();\\n'\n          + '</script>'\n    },\n    { id: 'celllayout_sample4',\n      label: 'celllayoutDemo.samples4.label',\n      description: 'celllayoutDemo.samples4.description',\n      template: '',\n      code: '<vue-cell-layout square :gutter=\"10\" :column-num=\"3\">\\n'\n          + '  <vue-cell-layout-item v-for=\"item in mCellLayoutList3\" :key=\"item.textLabel\" :icon=\"item.iconName\"\\n' \n          + '                 :text=\"item.textLabel\" :dot=\"item.isDot\" :badge=\"item.badge\"/>\\n'\n          + '</vue-cell-layout>'\n          + '<script>\\n'\n          + '  new Vue({\\n'\n          + '    data: function() {\\n'\n          + '      return {\\n'\n          + '       mCellLayoutList3: [\\n'\n          + '         { iconName: \\'vue-icon-information\\', textLabel: \\'信息\\', isDot:true, badge:\\'\\'},\\n'\n          + '         { iconName: \\'vue-icon-menu\\', textLabel: \\'菜单\\', isDot:false, badge:\\'99+\\' },\\n'\n          + '         { iconName: \\'vue-icon-upload\\', textLabel: \\'上传\\', isDot:false, badge:\\'\\' },\\n'\n          + '         { iconName: \\'vue-icon-download\\', textLabel: \\'下载\\', isDot:false, badge:\\'\\' },\\n'\n          + '         { iconName: \\'vue-icon-date\\', textLabel: \\'日历\\', isDot:false, badge:\\'\\' },\\n'\n          + '         { iconName: \\'vue-icon-document\\', textLabel: \\'文档\\', isDot:false, badge:\\'8\\' },\\n'\n          + '       ]\\n'\n          + '      };\\n'\n          + '    },\\n'\n          + '    methods:{\\n'\n          + '    }\\n'\n          + '  }).$mount();\\n'\n          + '</script>'\n    },\n    { id: 'celllayout_sample5',\n      label: 'celllayoutDemo.samples5.label',\n      description: 'celllayoutDemo.samples5.description',\n      template: '',\n      code: '<vue-cell-layout :column-num=\"2\">\\n'\n          + '  <vue-cell-layout-item v-for=\"item in mCellLayoutList4\" :key=\"item.textLabel\" :icon=\"item.iconName\" icon-color=\"lightgreen\"\\n' \n          + '                 :text=\"item.textLabel\" :to=\"item.to\" :url=\"item.url\" :replace=\"item.isReplace\" :badge=\"item.badge\" />\\n'\n          + '</vue-cell-layout>\\n'\n          + '<script>\\n'\n          + '  new Vue({\\n'\n          + '    data: function() {\\n'\n          + '      return {\\n'\n          + '       mCellLayoutList4: [\\n'\n          + '         { iconName: \\'vue-icon-document\\', textLabel: \\'文本页\\', to:\\'/input\\' , url:null, isReplace: true, badge: \\'99+\\'},\\n'\n          + '         { iconName: \\'vue-icon-menu\\', textLabel: \\'菜单\\', to:null , url:\\'http://www.baidu.com\\', isReplace: false, badge:\\'\\' }\\n'\n          + '       ]\\n'\n          + '      };\\n'\n          + '    },\\n'\n          + '    methods:{\\n'\n          + '    }\\n'\n          + '  }).$mount();\\n'\n          + '</script>'\n    },\n    {\n      id: 'celllayout_attrs',\n      label: 'CellLayout Attributes',\n      template: '<attr-table :data=\"tableData\"></attr-table>',\n      parameter: {\n          data: function () {\n              return {\n                  tableData: [{\n                      column1: \"column-num\",\n                      column2: \"celllayoutDemo.attrsInfo.row1column2\",\n                      column3: \"Number | String\",\n                      column4: \"\",\n                      column5: \"4\"\n                  }, {\n                      column1: \"icon-size\",\n                      column2: \"celllayoutDemo.attrsInfo.row2column2\",\n                      column3: \"Number | String\",\n                      column4: \"\",\n                      column5: \"28px\"\n                  }, {\n                      column1: \"gutter\",\n                      column2: \"celllayoutDemo.attrsInfo.row3column2\",\n                      column3: \"Number | String\",\n                      column4: \"\",\n                      column5: \"0\"\n                  }, {\n                      column1: \"border\",\n                      column2: \"celllayoutDemo.attrsInfo.row4column2\",\n                      column3: \"Boolean\",\n                      column4: \"\",\n                      column5: \"true\"\n                  }, {\n                      column1: \"center\",\n                      column2: \"celllayoutDemo.attrsInfo.row5column2\",\n                      column3: \"Boolean\",\n                      column4: \"\",\n                      column5: \"true\"\n                  }, {\n                      column1: \"square\",\n                      column2: \"celllayoutDemo.attrsInfo.row6column2\",\n                      column3: \"Boolean\",\n                      column4: \"\",\n                      column5: \"false\"\n                  }, {\n                      column1: \"clickable\",\n                      column2: \"celllayoutDemo.attrsInfo.row7column2\",\n                      column3: \"Boolean\",\n                      column4: \"\",\n                      column5: \"false\"\n                  }]\n              }\n          }\n      },\n      notshowmeta: true\n    },{\n      id: 'celllayoutitem_attrs',\n      label: 'CellLayoutItem Attributes',\n      template: '<attr-table :data=\"tableData\"></attr-table>',\n      parameter: {\n        data: function () {\n          return {\n            tableData: [{\n              column1: \"text\",\n              column2: \"celllayoutDemo.celllayoutitemAttrsInfo.row1column2\",\n              column3: \"String\",\n              column4: \"\",\n              column5: \"\"\n            },{\n              column1: \"icon\",\n              column2: \"celllayoutDemo.celllayoutitemAttrsInfo.row2column2\",\n              column3: \"String\",\n              column4: \"\",\n              column5: \"\"\n            },{\n              column1: \"icon-color\",\n              column2: \"celllayoutDemo.celllayoutitemAttrsInfo.row3column2\",\n              column3: \"String\",\n              column4: \"\",\n              column5: \"\"\n            },{\n              column1: \"dot\",\n              column2: \"celllayoutDemo.celllayoutitemAttrsInfo.row4column2\",\n              column3: \"Boolean\",\n              column4: \"\",\n              column5: \"false\"\n            },{\n              column1: \"badge\",\n              column2: \"celllayoutDemo.celllayoutitemAttrsInfo.row5column2\",\n              column3: \"Number | String\",\n              column4: \"\",\n              column5: \"\"\n            },{\n              column1: \"info\",\n              column2: \"celllayoutDemo.celllayoutitemAttrsInfo.row6column2\",\n              column3: \"Number | String\",\n              column4: \"\",\n              column5: \"\"\n            },{\n              column1: \"url\",\n              column2: \"celllayoutDemo.celllayoutitemAttrsInfo.row7column2\",\n              column3: \"String\",\n              column4: \"\",\n              column5: \"\"\n            },{\n              column1: \"to\",\n              column2: \"celllayoutDemo.celllayoutitemAttrsInfo.row8column2\",\n              column3: \"String | Object\",\n              column4: \"\",\n              column5: \"\"\n            },{\n              column1: \"replace\",\n              column2: \"celllayoutDemo.celllayoutitemAttrsInfo.row9column2\",\n              column3: \"Boolean\",\n              column4: \"\",\n              column5: \"false\"\n            }]\n          }\n        }\n      },\n      notshowmeta: true\n    },{\n      id: 'celllayoutitem_event',\n      label: 'CellLayoutItem Events',\n      template: '<event-table :data=\"tableData\"></event-table>',\n      parameter: {\n        data: function () {\n          return {\n            tableData: [{\n              column1: \"click\",\n              column2: \"celllayoutDemo.celllayoutitemEventInfo.row1column2\",\n              column3: \"Event object\"\n            }]\n          }\n        }\n      },\n      notshowmeta: true\n    },{\n      id: 'celllayoutitem_slots',\n      label: 'CellLayoutItem Slots',\n      template: '<div style=\"padding:20px;\">'\n              + ' <div style=\"font-size:20px;font-weight:500;line-height:1.1;color:inherit;\">default</div>'\n              + ' <div style=\"padding:6px 0;\">{{$t(\"celllayoutDemo.celllayoutitemSlotsInfo.row1column2\")}}</div>'\n              + ' <div style=\"margin-top:15px;font-size:20px;font-weight:500;line-height:1.1;color:inherit;\">icon</div>'\n              + ' <div style=\"padding:6px 0;\">{{$t(\"celllayoutDemo.celllayoutitemSlotsInfo.row2column2\")}}</div>'\n              + ' <div style=\"margin-top:15px;font-size:20px;font-weight:500;line-height:1.1;color:inherit;\">text</div>'\n              + ' <div style=\"padding:6px 0;\">{{$t(\"celllayoutDemo.celllayoutitemSlotsInfo.row3column2\")}}</div>'\n              + '</div>',\n      parameter: {\n      },\n      notshowmeta: true\n    }]\n};\n\nmodule.exports = celllayoutDemo\n","'use strict';\nvar indexbarDemo = {\n    path: '/index-bar',\n    name: 'mobile_indexbar',\n    head: {\n        label: 'indexbarDemo.label',\n        description: '',\n        demoInitUrl:'index-bar',\n    },\n    samples: [{\n      id: 'indexbar_sample1',\n      label: 'indexbarDemo.samples1.label',\n      description: '',\n      template: '',\n      code: '<vue-index-bar>\\n'\n          + '  <div v-for=\"item in indexList\" :key=\"item.index\">\\n'\n          + '    <vue-index-anchor :index=\"item.index\" />\\n'\n          + '    <vue-form-item v-for=\"child in item.child\" :key=\"child\" :label=\"child\"/>\\n'\n          + '  </div>\\n'\n          + '</vue-index-bar>\\n'\n          + '<script>\\n'\n          + '  new Vue({\\n'\n          + '    data: function() {\\n'\n          + '      var indexList = [];\\n'\n          + '      var charCodeOfA = \\'A\\'.charCodeAt(0);\\n'\n          + '      for (let i = 0; i < 26; i++) {\\n'\n          + '        var alphabet = String.fromCharCode(charCodeOfA + i);\\n'\n          + '        var item = {index:alphabet}\\n'\n          + '        var mTextList = [];\\n'\n          + '        for (let j = 0; j < 3; j++) {\\n'\n          + '          var key = j+1;\\n'\n          + '          var text = alphabet+\\'字母\\'+key;\\n'\n          + '          mTextList.push(text);\\n'\n          + '        }\\n'\n          + '        item.child = mTextList;\\n'\n          + '        indexList.push(item);\\n'\n          + '      }\\n'\n          + '      return {\\n'\n          + '       indexList,\\n'\n          + '      };\\n'\n          + '    },\\n'\n          + '    methods:{\\n'\n          + '    }\\n'\n          + '  }).$mount();\\n'\n          + '</script>'\n    },\n    {\n      id: 'indexbar_attrs',\n      label: 'IndexBar Attributes',\n      template: '<attr-table :data=\"tableData\"></attr-table>',\n      parameter: {\n        data: function () {\n          return {\n            tableData: [{\n              column1: \"index-list\",\n              column2: \"indexbarDemo.attrsInfo.row1column2\",\n              column3: \"Array\",\n              column4: \"\",\n              column5: \"A-Z\"\n            },{\n              column1: \"z-index\",\n              column2: \"indexbarDemo.attrsInfo.row2column2\",\n              column3: \"Number | String\",\n              column4: \"\",\n              column5: \"1\"\n            },{\n              column1: \"sticky\",\n              column2: \"indexbarDemo.attrsInfo.row3column2\",\n              column3: \"Boolean\",\n              column4: \"\",\n              column5: \"true\"\n            },{\n              column1: \"sticky-offset-top\",\n              column2: \"indexbarDemo.attrsInfo.row4column2\",\n              column3: \"Number\",\n              column4: \"\",\n              column5: \"0\"\n            },{\n              column1: \"highlight-color\",\n              column2: \"indexbarDemo.attrsInfo.row5column2\",\n              column3: \"String\",\n              column4: \"\",\n              column5: \"#07c160\"\n            }]\n          }\n        }\n      },\n      notshowmeta: true\n    },{\n      id: 'indexbar_event',\n      label: 'IndexBar Events',\n      template: '<event-table :data=\"tableData\"></event-table>',\n      parameter: {\n        data: function () {\n          return {\n            tableData: [{\n              column1: \"select\",\n              column2: \"indexbarDemo.eventInfo.row1column2\",\n              column3: \"indexbarDemo.eventInfo.row2column2\"\n            }]\n          }\n        }\n      },\n      notshowmeta: true\n    },{\n      id: 'indexanchor_attrs',\n      label: 'IndexAnchor Attributes',\n      template: '<attr-table :data=\"tableData\"></attr-table>',\n      parameter: {\n        data: function () {\n          return {\n            tableData: [{\n              column1: \"index\",\n              column2: \"indexbarDemo.indexanchorAttrsInfo.row1column2\",\n              column3: \"Number | String\",\n              column4: \"\",\n              column5: \"\"\n            }]\n          }\n        }\n      },\n      notshowmeta: true\n    },{\n      id: 'indexanchor_slots',\n      label: 'IndexAnchor Slots',\n      template: '<div style=\"padding:20px;\">'\n      + ' <div style=\"font-size:20px;font-weight:500;line-height:1.1;color:inherit;\">default</div>'\n      + ' <div style=\"padding:6px 0;\">{{$t(\"indexbarDemo.indexanchorSlotsInfo.row1column2\")}}</div>'\n      + '</div>',\n      parameter: {},\n      notshowmeta: true\n    }]\n};\n\nmodule.exports = indexbarDemo\n","'use strict';\nvar navbarDemo = {\n    path: '/nav-bar',\n    name: 'mobile_navbar',\n    head: {\n        label: 'navbarDemo.label',\n        description: '',\n        demoInitUrl:'nav-bar',\n    },\n    samples: [{\n      id: 'navbar_sample1',\n      label: 'navbarDemo.samples1.label',\n      description: 'navbarDemo.samples1.description',\n      template: '',\n      code: '<vue-nav-bar\\n'\n          + 'title=\"标题\"\\n'\n          + 'left-text=\"返回\"\\n'\n          + 'right-text=\"按钮\"\\n'\n          + 'left-arrow\\n'\n          + '@click-left=\"onClickLeft\"\\n'\n          + '@click-right=\"onClickRight\"/>\\n'\n          + '<script>\\n'\n          + '  new Vue({\\n'\n          + '    data: function() {\\n'\n          + '      return {\\n'\n          + '      };\\n'\n          + '    },\\n'\n          + '    methods:{\\n'\n          + '     onClickLeft() {\\n'\n          + '       this.$notify({ message: \\'点击了返回按钮\\' });\\n'\n          + '     },\\n'\n          + '     onClickRight() {\\n'\n          + '       this.$notify({ message: \\'点击了右侧按钮\\' });\\n'\n          + '     }\\n'\n          + '    }\\n'\n          + '  }).$mount();\\n'\n          + '</script>'\n    },\n    {\n      id: 'navbar_sample2',\n      label: 'navbarDemo.samples2.label',\n      description: 'navbarDemo.samples2.description',\n      template: '',\n      code: '<vue-nav-bar title=\"标题\" left-text=\"返回\" left-arrow>\\n'\n          + '    <template #right>\\n'\n          + '      <i class=\"vue-icon-search\" style=\"color:#1989fa;\"/>\\n'\n          + '    </template>\\n'\n          + '</vue-nav-bar>\\n'\n    },\n    {\n      id: 'navbar_attrs',\n      label: 'Attributes',\n      template: '<attr-table :data=\"tableData\"></attr-table>',\n      parameter: {\n          data: function () {\n              return {\n                  tableData: [{\n                      column1: \"title\",\n                      column2: \"navbarDemo.attrsInfo.row1column2\",\n                      column3: \"String\",\n                      column4: \"\",\n                      column5: \"\\\"\\\"\"\n                  }, {\n                      column1: \"left-text\",\n                      column2: \"navbarDemo.attrsInfo.row2column2\",\n                      column3: \"String\",\n                      column4: \"\",\n                      column5: \"\\\"\\\"\"\n                  }, {\n                      column1: \"right-text\",\n                      column2: \"navbarDemo.attrsInfo.row3column2\",\n                      column3: \"String\",\n                      column4: \"\",\n                      column5: \"\\\"\\\"\"\n                  }, {\n                      column1: \"left-arrow\",\n                      column2: \"navbarDemo.attrsInfo.row4column2\",\n                      column3: \"Boolean\",\n                      column4: \"\",\n                      column5: \"false\"\n                  }, {\n                      column1: \"border\",\n                      column2: \"navbarDemo.attrsInfo.row5column2\",\n                      column3: \"Boolean\",\n                      column4: \"\",\n                      column5: \"true\"\n                  }, {\n                      column1: \"fixed\",\n                      column2: \"navbarDemo.attrsInfo.row6column2\",\n                      column3: \"Bollean\",\n                      column4: \"\",\n                      column5: \"false\"\n                  }, {\n                      column1: \"placeholder\",\n                      column2: \"navbarDemo.attrsInfo.row7column2\",\n                      column3: \"Boolean\",\n                      column4: \"\",\n                      column5: \"false\"\n                  }, {\n                      column1: \"z-index\",\n                      column2: \"navbarDemo.attrsInfo.row8column2\",\n                      column3: \"Number | String\",\n                      column4: \"\",\n                      column5: \"1\"\n                  }]\n              }\n          }\n      },\n      notshowmeta: true\n    },{\n      id: 'navbar_slots',\n      label: 'Slots',\n      template: '<div style=\"padding:20px;\">'\n              + ' <div style=\"font-size:20px;font-weight:500;line-height:1.1;color:inherit;\">title</div>'\n              + ' <div style=\"padding:6px 0;\">{{$t(\"navbarDemo.slotInfo.row1column2\")}}</div>'\n              + ' <div style=\"margin-top:15px;font-size:20px;font-weight:500;line-height:1.1;color:inherit;\">left</div>'\n              + ' <div style=\"padding:6px 0;\">{{$t(\"navbarDemo.slotInfo.row2column2\")}}</div>'\n              + ' <div style=\"margin-top:15px;font-size:20px;font-weight:500;line-height:1.1;color:inherit;\">right</div>'\n              + ' <div style=\"padding:6px 0;\">{{$t(\"navbarDemo.slotInfo.row3column2\")}}</div>'\n              + '</div>',\n      parameter: {\n      },\n      notshowmeta: true\n    },{\n      id: 'navbar_event',\n      label: 'Events',\n      template: '<event-table :data=\"tableData\"></event-table>',\n      parameter: {\n        data: function () {\n          return {\n            tableData: [{\n              column1: \"click-left\",\n              column2: \"navbarDemo.eventInfo.row1column2\",\n              column3: \"Event object\"\n            },{\n              column1: \"click-right\",\n              column2: \"navbarDemo.eventInfo.row2column2\",\n              column3: \"Event object\"\n            }]\n          }\n        }\n      },\n      notshowmeta: true\n    }]\n};\n\nmodule.exports = navbarDemo\n","'use strict';\nvar scrollviewDemo = {\n    path: '/scroll-view',\n    name: 'mobile_scrollview',\n    head: {\n        label: 'scrollviewDemo.label',\n        description: 'scrollviewDemo.description',\n        demoInitUrl:'scroll-view',\n    },\n    samples: [\n    {\n      id: 'scrollview2',\n      label: 'scrollviewDemo.detail2.label',\n      description: '',\n      template: '<div style=\"padding:20px;\"><li>{{$t(\"scrollviewDemo.detail2.description1\")}}</li><li>{{$t(\"scrollviewDemo.detail2.description2\")}}</li><li>{{$t(\"scrollviewDemo.detail2.description3\")}}</li></div>',\n      parameter: {\n      },\n      notshowmeta: true\n    },\n    {\n      id: 'scrollview_sample1',\n      label: 'scrollviewDemo.samples1.label',\n      description: 'scrollviewDemo.samples1.description',\n      template: '',\n      code: '<vue-scroll-view\\n'+\n              'ref=\"scrollView\"\\n'+\n              ':scrolling-x=\"false\"\\n'+\n              ':autoReflow = \"true\"\\n'+\n              '@scroll=\"onScroll\">\\n'+\n              '  <div\\n'+\n              '    v-for=\"i in list\"\\n'+\n              '    class=\"vue-list-item\"\\n'+\n              '    :key=\"i\"\\n'+\n              '    @click=\"onItemClick(i)\">\\n'+\n              '    item {{i}}\\n'+\n              '  </div>\\n'+\n              '</vue-scroll-view>\\n\\n'+\n              '<script>\\n' +\n            '  new Vue({\\n' +\n            '    data: function() {\\n' +\n            '      return {\\n' +\n            '        list: 100,\\n' +\n            '      };\\n' +\n            '    },\\n' +\n            'methods:{\\n'+\n            ' onItemClick(i) {\\n'+\n            '   var currItem = document.getElementsByClassName(\\'vue-list-item\\')[i-1];\\n'+\n            '   var lastActiveItem = document.getElementsByClassName(\\'is-active\\')[0];\\n'+\n            '   if(lastActiveItem)\\n'+\n            '   lastActiveItem.classList.remove(\\'is-active\\');\\n'+\n            '   currItem.classList.add(\\'is-active\\');\\n'+\n            '   this.$notify({message: `Click ${i}`});\\n'+\n            ' }\\n'+\n            '}\\n'+\n            '  }).$mount();\\n' +\n            '</script>'\n  },\n  {\n    id: 'scrollview_sample2',\n    label: 'scrollviewDemo.samples2.label',\n    description: 'scrollviewDemo.samples2.description',\n    template: '',\n    code: '<vue-scroll-view\\n'+\n            'ref=\"scrollView\"\\n'+\n            ':scrolling-x=\"false\"\\n'+\n            ':autoReflow = \"true\"\\n'+\n            '@scroll=\"onScroll\">\\n'+\n            '  <div\\n'+\n            '    v-for=\"i in list\"\\n'+\n            '    class=\"vue-list-item\"\\n'+\n            '    :key=\"i\"\\n'+\n            '    @click=\"onItemClick(i)\">\\n'+\n            '    item {{i}}\\n'+\n            '  </div>\\n'+\n            '</vue-scroll-view>\\n\\n'+\n            '<script>\\n' +\n          '  new Vue({\\n' +\n          '    data: function() {\\n' +\n          '      return {\\n' +\n          '        list: 100,\\n' +\n          '      };\\n' +\n          '    },\\n' +\n          'methods:{\\n'+\n          ' onItemClick(i) {\\n'+\n          '   var currItem = document.getElementsByClassName(\\'vue-list-item\\')[i-1];\\n'+\n          '   var lastActiveItem = document.getElementsByClassName(\\'is-active\\')[0];\\n'+\n          '   if(lastActiveItem)\\n'+\n          '   lastActiveItem.classList.remove(\\'is-active\\');\\n'+\n          '   currItem.classList.add(\\'is-active\\');\\n'+\n          '   this.$notify({message: `Click ${i}`});\\n'+\n          ' }\\n'+\n          '}\\n'+\n          '  }).$mount();\\n' +\n          '</script>'\n},\n    {\n      id: 'scrollview_sample3',\n      label: 'scrollviewDemo.samples3.label',\n      description: 'scrollviewDemo.samples3.description',\n      template: '',\n      code: '<vue-scroll-view\\n' +\n            '  ref=\"scrollView\"\\n' +\n            '  :scrolling-x=\"false\"\\n' +\n            '  @refreshing=\"onRefresh\">\\n' +\n            '  <vue-scroll-view-refresh\\n' +\n            '    slot=\"refresh\"\\n' +\n            '    slot-scope=\"{ scrollTop, isRefreshActive, isRefreshing }\"\\n' +\n            '    :scroll-top=\"scrollTop\"\\n' +\n            '    :is-refreshing=\"isRefreshing\"\\n' +\n            '    :is-refresh-active=\"isRefreshActive\">\\n' +\n            '  </vue-scroll-view-refresh>\\n' +\n            '  <div\\n' +\n            '    v-for=\"i in list\"\\n' +\n            '    class=\"scroll-view-item\"\\n' +\n            '    :key=\"i\"\\n' +\n            '    @click=\"onItemClick(i)\">\\n' +\n            '    {{i}}\\n' +\n            '  </div>\\n' +\n            '</vue-scroll-view>\\n' +\n              '<script>\\n' +\n                '  new Vue({\\n' +\n                '    data: function() {\\n' +\n                '      return {\\n' +\n                '        list: 100,\\n' +\n                '      };\\n' +\n                '    },\\n' +\n                '   methods:{\\n'+\n                '       onRefresh() {\\n'+\n                '        // async data\\n'+\n                '        setTimeout(() => {\\n'+\n                '          this.list += 5\\n'+\n                '          this.$refs.scrollView.finishRefresh();\\n'+\n                '        }, 2000)\\n'+\n                '       },\\n'+\n                '   onItemClick(i) {\\n'+\n                '     this.$notify({message: `Click ${i}`});\\n'+\n                '   },\\n'+\n            '}\\n'+\n            '  }).$mount();\\n' +\n            '</script>'\n  },\n  {\n    id: 'scrollview_sample4',\n    label: 'scrollviewDemo.samples4.label',\n    description: 'scrollviewDemo.samples4.description',\n    template: '',\n    code: '<vue-scroll-view\\n' +\n          '    ref=\"scrollView\"\\n' +\n          '    :scrolling-x=\"false\"\\n' +\n          '    @end-reached=\"onEndReached\">\\n' +\n          '    <div\\n' +\n          '        v-for=\"i in list\"\\n' +\n          '        class=\"scroll-view-item\"\\n' +\n          '        :key=\"i\"\\n' +\n          '        @click=\"onItemClick(i)\">\\n' +\n          '        {{i}}\\n' +\n          '    </div>\\n' +  \n          '    <vue-scroll-view-more\\n' +\n          '        slot=\"more\"\\n' +\n          '        :is-finished=\"isFinished\">\\n' +\n          '    </vue-scroll-view-more>\\n' +\n          '</vue-scroll-view>\\n' +\n            '<script>\\n' +\n          '  new Vue({\\n' +\n          '    data: function() {\\n' +\n          '      return {\\n' +\n          '        list: 20,\\n' +\n          '        isFinished: false,\\n' +\n          '      };\\n' +\n          '    },\\n' +\n          'methods:{\\n'+\n          ' onEndReached() {\\n'+\n          '   if (this.isFinished) {\\n'+\n          '     return;\\n'+\n          '   }\\n'+\n          '   // async data\\n'+\n          '   setTimeout(() => {\\n'+\n          '     this.list += 5;\\n'+\n          '     if (this.list >= 50) {\\n'+\n          '     this.isFinished = true;\\n'+\n          '   }\\n'+\n          '     this.$refs.scrollView.finishLoadMore();\\n'+\n          '   }, 1000);\\n'+\n          ' },\\n'+\n          ' onItemClick(i) {\\n'+\n          '   this.$notify({message: `Click ${i}`});\\n'+\n          ' },\\n'+\n          '}\\n'+\n          '  }).$mount();\\n' +\n          '</script>'\n    },\n    {\n      id: 'scrollview_sample5',\n      label: 'scrollviewDemo.samples5.label',\n      description: 'scrollviewDemo.samples5.description',\n      template: '',\n      code: '<vue-scroll-view\\n' +\n            '  ref=\"scrollView\"\\n' +\n            '  :scrolling-x=\"false\"\\n' +\n            '  @scroll=\"onScroll\">\\n' +\n            '  <div\\n' +\n            '    v-for=\"i in category\"\\n' +\n            '    :key=\"i\"\\n' +\n            '    class=\"scroll-view-category\">\\n' +\n            '    <p class=\"scroll-view-category-title\">{{ i }}</p>\\n' +\n            '    <div\\n' +\n            '      v-for=\"j in list\"\\n' +\n            '      :key=\"j\"\\n' +\n            '      class=\"scroll-view-item\">\\n' +\n            '      {{`${i} - ${j}`}}\\n' +\n            '    </div>\\n' +\n            '  </div>\\n' +\n            '</vue-scroll-view>\\n' +\n            '<p v-if=\"activeBlockIndex > 0\" class=\"scroll-view-striky-title\">{{ activeBlockIndex }}</p>\\n' +\n              '<script>\\n' +\n            '  new Vue({\\n' +\n            '    data: function() {\\n' +\n            '      return {\\n' +\n            '        category: 20,\\n' +\n            '        list: 5,\\n' +\n            '        dimensions: [],\\n' +\n            '        scrollY: 0,\\n' +\n            '      };\\n' +\n            '    },\\n' +\n            '   methods:{\\n'+\n            '    initScrollBlock() {\\n'+\n            '        var blocks = this.$el.querySelectorAll(\\'.scroll-view-category\\');\\n'+\n            '        let offset = 0;\\n'+\n            '        Array.prototype.slice.call(blocks).forEach((block, index) => {\\n'+\n            '          var innerHeight = block.clientHeight\\n'+\n            '          this.$set(this.dimensions, index, [offset, offset + innerHeight]);\\n'+\n            '          offset += innerHeight;\\n'+\n            '        });\\n'+\n            '      },\\n'+\n            '      onScroll({scrollTop}) {\\n'+\n            '        this.scrollY = scrollTop;\\n'+\n            '      },\\n'+\n            '}\\n'+\n            '  }).$mount();\\n' +\n            '</script>'\n  },\n  {\n    id: 'scrollview_sample6',\n    label: 'scrollviewDemo.samples6.label',\n    description: 'scrollviewDemo.samples6.description',\n    template: '',\n    code: '<vue-tabbar\\n' +\n          'v-model=\"activeBlockIndex\"\\n' +\n          'ref=\"tabBar\"\\n' +\n          ':fixed=\"false\"\\n' +\n          '@change=\"onTabChange\">\\n' +\n          '<vue-tabbar-item v-for=\"item in tabBarItems\" :key=\"item.index\">{{item.label}}</vue-tabbar-item>\\n' +\n          '</vue-tabbar>\\n' +\n          '<vue-scroll-view\\n' +\n          '  id=\"myScrollViewId\"\\n' +\n          '  class=\"scroll-view-with-tab-bar\"\\n' +\n          '  ref=\"scrollView\"\\n' +\n          '  :scrolling-x=\"false\"\\n' +\n          '  @scroll=\"onScroll\"\\n' +\n          '  @mousedown.native=\"onScrollStart\"\\n' +\n          '  @touchstart.native=\"onScrollStart\">\\n' +\n          '  <div\\n' +\n          '    v-for=\"i in category\"\\n' +\n          '    :key=\"i\"\\n' +\n          '    class=\"scroll-view-category\">\\n' +\n          '    <div\\n' +\n          '      v-for=\"j in list\"\\n' +\n          '      :key=\"j\"\\n' +\n          '      class=\"scroll-view-item\">{{`${i} - ${j}`}}\\n' +\n          '    </div>\\n' +\n          '  </div>\\n' +\n          '</vue-scroll-view>\\n' +\n          '<script>\\n' +\n          '  var debounce = function(fn, delay) {\\n' +\n          '    let timer;\\n' +\n          '    return function() {\\n' +\n          '      var context = this;\\n' +\n          '      timer && clearTimeout(timer);\\n' +\n          '      timer = setTimeout(function() {\\n' +\n          '        fn.apply(context, arguments);\\n' +\n          '      }, delay);\\n' +\n          '    };\\n' +\n          '  };\\n' +\n          '  new Vue({\\n' +\n          '    data: function() {\\n' +\n          '      return {\\n' +\n          '        category: 6,\\n' +\n          '        list: 20,\\n' +\n          '        dimensions: [],\\n' +\n          '        scrollY: 0,\\n' +\n          '        isManual: false,\\n' +\n          '        activeBlockIndex: 0,\\n' +\n          '      };\\n' +\n          '    },\\n' +\n          '   computed: {\\n' +\n          '     tabBarItems() {\\n' +\n          '       return this.dimensions.map((item, index) => {\\n' +\n          '         return {name: index, label: `Tab - ${index + 1}`};\\n' +\n          '       });\\n' +\n          '     },\\n' +\n          '   },\\n' +\n          '   mounted() {\\n' +\n          '     // 如果内容发生变化，需重新初始化block和scroller\\n' +\n          '     this.initScrollBlock();\\n' +\n          '   },\\n' +\n          '   methods: {\\n' +\n          '     goBack() {\\n' +\n          '       this.$router.go(-1);\\n' +\n          '     },\\n' +\n          '     initScrollBlock() {\\n' +\n          '       var blocks = this.$el.querySelectorAll(\\'.scroll-view-category\\');\\n' +\n          '       let offset = 0;\\n' +\n          '       Array.prototype.slice.call(blocks).forEach((block, index) => {\\n' +\n          '         var innerHeight = block.clientHeight;\\n' +\n          '         this.$set(this.dimensions, index, [offset, offset + innerHeight]);\\n' +\n          '         offset += innerHeight;\\n' +\n          '       });\\n' +\n          '     },\\n' +\n          '     onScrollStart() {\\n' +\n          '       this.isManual = false;\\n' +\n          '     },\\n' +\n          '     onScroll({scrollTop}) {\\n' +\n          '       if (!this.isManual) {\\n' +\n          '         this.dimensions.some((dimension, index) => {\\n' +\n          '           if (scrollTop >= dimension[0] && scrollTop <= dimension[1]) {\\n' +\n          '             this.activeBlockIndex = index;\\n' +\n          '             return true;\\n' +\n          '           }\\n' +\n          '         });\\n' +\n          '       }\\n' +\n          '     },\\n' +\n          '     onTabChange(index) {\\n' +\n          '       this.isManual = true;\\n' +\n          '       debounce(() => {\\n' +\n          '         var offsetTop = this.dimensions[index][0];\\n' +\n          '         this.$refs.scrollView.scrollTo(0, offsetTop, true);\\n' +\n          '         this.scrollY = offsetTop;\\n' +\n          '       }, 100)();\\n' +\n          '     },\\n' +\n          '    },\\n' +\n          '  }).$mount();\\n' +\n          '</script>'\n    },\n    {\n      id: 'scrollview_sample7',\n      label: 'scrollviewDemo.samples7.label',\n      description: 'scrollviewDemo.samples7.description',\n      template: '',\n      code: '<vue-tabs\\n'+\n            '  v-model=\"activeName\"\\n'+\n            '  @tab-click=\"onTabClick\">\\n'+\n            '  <vue-tab-pane class=\"content\" name=\"scrollView0\" label=\"Block - 1\">\\n'+\n            '    <vue-scroll-view\\n'+\n            '      ref=\"scrollView0\"\\n'+\n            '      :scrolling-x=\"false\"\\n'+\n            '      manual-init\\n'+\n            '      @refreshing=\"onRefresh(0)\">\\n'+\n            '      <vue-scroll-view-refresh\\n'+\n            '        slot=\"refresh\"\\n'+\n            '        slot-scope=\"{ scrollTop, isRefreshActive, isRefreshing }\"\\n'+\n            '        :scroll-top=\"scrollTop\"\\n'+\n            '        :is-refreshing=\"isRefreshing\"\\n'+\n            '        :is-refresh-active=\"isRefreshActive\">\\n'+\n            '      </vue-scroll-view-refresh>\\n'+\n            '      <div\\n'+\n            '        v-for=\"i in list0\"\\n'+\n            '        :key=\"i\"\\n'+\n            '        class=\"scroll-view-item\">{{`1 - ${i}`}}\\n'+\n            '      </div>\\n'+\n            '    </vue-scroll-view>\\n'+\n            '  </vue-tab-pane>\\n'+\n            '  <vue-tab-pane class=\"content\" name=\"scrollView1\" label=\"Block - 2\">\\n'+\n            '    <vue-scroll-view\\n'+\n            '      ref=\"scrollView1\"\\n'+\n            '      :scrolling-x=\"false\"\\n'+\n            '      manual-init\\n'+\n            '      @refreshing=\"onRefresh(1)\">\\n'+\n            '      <vue-scroll-view-refresh\\n'+\n            '        slot=\"refresh\"\\n'+\n            '        slot-scope=\"{ scrollTop, isRefreshActive, isRefreshing }\"\\n'+\n            '        :scroll-top=\"scrollTop\"\\n'+\n            '        :is-refreshing=\"isRefreshing\"\\n'+\n            '        :is-refresh-active=\"isRefreshActive\">\\n'+\n            '      </vue-scroll-view-refresh>\\n'+\n            '      <div\\n'+\n            '        v-for=\"i in list1\"\\n'+\n            '        :key=\"i\"\\n'+\n            '        class=\"scroll-view-item\">{{`2 - ${i}`}}\\n'+\n            '      </div>\\n'+\n            '    </vue-scroll-view>\\n'+\n            '  </vue-tab-pane>\\n'+\n            '</vue-tabs>\\n'+\n            '<script>\\n' +\n            '  new Vue({\\n' +\n            '    data: function() {\\n' +\n            '      return {\\n' +\n            '        list0: 20,\\n' +\n            '        list1: 5,\\n' +\n            '        isFinished: false,\\n' +\n            '        activeName: \\'scrollView0\\',\\n' +\n            '      };\\n' +\n            '    },\\n' +\n            '    mounted() {\\n' +\n            '      //手动初始化\\n' +\n            '      this.$refs[\\'scrollView0\\'].init();\\n' +\n            '    },\\n' +\n            '    methods: {\\n' +\n            '      onRefresh(index) {\\n' +\n            '        // async data\\n' +\n            '        setTimeout(() => {\\n' +\n            '          this[`list${index}`] += 5;\\n' +\n            '          this.$refs[`scrollView${index}`].finishRefresh();\\n' +\n            '        }, 2000);\\n' +\n            '      },\\n' +\n            '      onTabClick(tab) {\\n' +\n            '        console.log(tab.name);\\n' +\n            '        //手动初始化\\n' +\n            '        this.$refs[tab.name].init();\\n' +\n            '      },\\n' +\n            '    },\\n' +\n            '  }).$mount();\\n' +\n            '</script>'\n  },\n  {\n    id: 'scrollview_attrs',\n    label: 'Attributes',\n    template: '<attr-table :data=\"tableData\"></attr-table>',\n    parameter: {\n        data: function () {\n            return {\n                tableData: [{\n                    column1: \"scrolling-x\",\n                    column2: \"scrollviewDemo.attrsinfo.row1column2\",\n                    column3: \"Boolean\",\n                    column4: \"\",\n                    column5: \"true\"\n                }, {\n                    column1: \"scrolling-y\",\n                    column2: \"scrollviewDemo.attrsinfo.row2column2\",\n                    column3: \"Boolean\",\n                    column4: \"\",\n                    column5: \"true\"\n                }, {\n                    column1: \"bouncing\",\n                    column2: \"scrollviewDemo.attrsinfo.row3column2\",\n                    column3: \"Boolean\",\n                    column4: \"\",\n                    column5: \"true\"\n                }, {\n                    column1: \"auto-reflow\",\n                    column2: \"scrollviewDemo.attrsinfo.row4column2\",\n                    column3: \"Boolean\",\n                    column4: \"\",\n                    column5: \"false\"\n                }, {\n                    column1: \"manual-init\",\n                    column2: \"scrollviewDemo.attrsinfo.row5column2\",\n                    column3: \"Boolean\",\n                    column4: \"\",\n                    column5: \"false\"\n                }, {\n                    column1: \"end-reached-threshold\",\n                    column2: \"scrollviewDemo.attrsinfo.row6column2\",\n                    column3: \"Number\",\n                    column4: \"\",\n                    column5: \"0\"\n                }, {\n                    column1: \"immediate-check-end-reaching\",\n                    column2: \"scrollviewDemo.attrsinfo.row7column2\",\n                    column3: \"Boolean\",\n                    column4: \"\",\n                    column5: \"false\"\n                }, {\n                    column1: \"touch-angle\",\n                    column2: \"scrollviewDemo.attrsinfo.row8column2\",\n                    column3: \"Number\",\n                    column4: \"\",\n                    column5: \"45\"\n                }, {\n                    column1: \"is-prevent\",\n                    column2: \"scrollviewDemo.attrsinfo.row9column2\",\n                    column3: \"Boolean\",\n                    column4: \"\",\n                    column5: \"true\"\n                }]\n            }\n        }\n    },\n    notshowmeta: true\n  },{\n    id: 'scrollview_touchangle',\n    label: 'ScrollView TouchAngle',\n    template: '<vue-image src=\"../image/scrollview_touch_ange.png\" ></vue-image>',\n    parameter: {\n      data: function () {\n        return {\n        }\n      }\n    },\n    notshowmeta: true\n  },{\n    id: 'scrollview_refresh_attrs',\n    label: 'ScrollViewRefresh Attributes',\n    template: '<attr-table :data=\"tableData\"></attr-table>',\n    parameter: {\n        data: function () {\n            return {\n                tableData: [{\n                    column1: \"scroll-top\",\n                    column2: \"scrollviewDemo.refreshAttrs.row1column2\",\n                    column3: \"Number\",\n                    column4: \"\",\n                    column5: \"0\"\n                }, {\n                    column1: \"is-refresh-active\",\n                    column2: \"scrollviewDemo.refreshAttrs.row2column2\",\n                    column3: \"Boolean\",\n                    column4: \"\",\n                    column5: \"false\"\n                }, {\n                    column1: \"is-refreshing\",\n                    column2: \"scrollviewDemo.refreshAttrs.row3column2\",\n                    column3: \"Boolean\",\n                    column4: \"\",\n                    column5: \"false\"\n                }, {\n                    column1: \"refresh-text\",\n                    column2: \"scrollviewDemo.refreshAttrs.row4column2\",\n                    column3: \"String\",\n                    column4: \"\",\n                    column5: \"scrollviewDemo.refreshAttrs.row4column5\"\n                }, {\n                    column1: \"refresh-active-text\",\n                    column2: \"scrollviewDemo.refreshAttrs.row5column2\",\n                    column3: \"String\",\n                    column4: \"\",\n                    column5: \"scrollviewDemo.refreshAttrs.row5column5\"\n                }, {\n                    column1: \"refreshing-text\",\n                    column2: \"scrollviewDemo.refreshAttrs.row6column2\",\n                    column3: \"String\",\n                    column4: \"\",\n                    column5: \"scrollviewDemo.refreshAttrs.row6column5\"\n                }, {\n                    column1: \"roller-color\",\n                    column2: \"scrollviewDemo.refreshAttrs.row7column2\",\n                    column3: \"String\",\n                    column4: \"\",\n                    column5: \"#2F86F6\"\n                }]\n            }\n        }\n    },\n    notshowmeta: true\n  },{\n    id: 'scrollview_more_attrs',\n    label: 'ScrollViewMore Attributes',\n    template: '<attr-table :data=\"tableData\"></attr-table>',\n    parameter: {\n        data: function () {\n            return {\n                tableData: [{\n                    column1: \"is-finished\",\n                    column2: \"scrollviewDemo.moreAttrs.row1column2\",\n                    column3: \"Boolean\",\n                    column4: \"\",\n                    column5: \"false\"\n                }, {\n                    column1: \"loading-text\",\n                    column2: \"scrollviewDemo.moreAttrs.row2column2\",\n                    column3: \"String\",\n                    column4: \"\",\n                    column5: \"scrollviewDemo.moreAttrs.row2column5\"\n                }, {\n                    column1: \"finished-text\",\n                    column2: \"scrollviewDemo.moreAttrs.row3column2\",\n                    column3: \"String\",\n                    column4: \"\",\n                    column5: \"scrollviewDemo.moreAttrs.row3column5\"\n                }]\n            }\n        }\n    },\n    notshowmeta: true\n  },\n  {\n    id: 'scrollview_slot',\n    label: 'ScrollView Slots',\n    description: '',\n    template: '<div style=\"padding:20px;\">'\n             +' <div style=\"font-size:20px;font-weight:500;line-height:1.1;color:inherit;\">default</div>'\n             +' <div style=\"padding:6px 0;\">{{$t(\"scrollviewDemo.slotInfo.default\")}}</div>'\n             +' <div style=\"margin-top:15px;font-size:20px;font-weight:500;line-height:1.1;color:inherit;\">refresh</div>'\n             +' <div style=\"padding:6px 0;\">{{$t(\"scrollviewDemo.slotInfo.refresh\")}}</div>'\n             +' <vue-collapse v-model=\"activeNames\" :expand-on-click-header=\"false\">'\n             +' \t<vue-collapse-item class=\"collapse-item-blue\" name=\"refresh_item\">'\n             +' \t\t<template slot=\"title\">'\n             +' \t\t\t<vue-button type=\"text\" icon=\"vue-icon-document\">{{$t(\"main.code\")}}</vue-button>'\n            //  +' \t\t\t<vue-button type=\"text\" :style=\"{float:\\'right\\',marginRight:\\'10px\\',lineHeight:\\'22px\\'}\" @click=\"tryHandle(sample)\">Try it on JSRun</vue-button>'\n             +' \t\t</template>'\n             +' \t\t<pre class=\"toolbar:false;brush:jsp\">{{refresh_code}}</pre>'\n             +' \t</vue-collapse-item>'\n             +' </vue-collapse>'\n             +' <div style=\"margin-top:15px;font-size:20px;font-weight:500;line-height:1.1;color:inherit;\">more</div>'\n             +' <div style=\"padding:6px 0;\">{{$t(\"scrollviewDemo.slotInfo.more\")}}</div>'\n             +' <vue-collapse v-model=\"activeNames2\" :expand-on-click-header=\"false\">'\n             +' \t<vue-collapse-item class=\"collapse-item-blue\" name=\"more_item\">'\n             +' \t\t<template slot=\"title\">'\n             +' \t\t\t<vue-button type=\"text\" icon=\"vue-icon-document\">{{$t(\"main.code\")}}</vue-button>'\n            //  +' \t\t\t<vue-button type=\"text\" :style=\"{float:\\'right\\',marginRight:\\'10px\\',lineHeight:\\'22px\\'}\" @click=\"tryHandle(sample)\">Try it on JSRun</vue-button>'\n             +' \t\t</template>'\n             +' \t\t<pre class=\"toolbar:false;brush:jsp\">{{more_code}}</pre>'\n             +' \t</vue-collapse-item>'\n             +' </vue-collapse>'\n             +'</div>',\n    parameter: {\n      data: function () {\n        return {\n          activeNames:['refresh_item'],\n          activeNames2:['more_item'],\n          refresh_code: '<vue-scroll-view-refresh\\n'\n                       +'  slot=\"refresh\"\\n'\n                       +'  slot-scope=\"{ scrollTop, isRefreshActive, isRefreshing }\"\\n'\n                       +'  :scroll-top=\"scrollTop\"\\n'\n                       +'  :is-refreshing=\"isRefreshing\"\\n'\n                       +'  :is-refresh-active=\"isRefreshActive\">\\n'\n                       +'</vue-scroll-view-refresh>',\n          more_code: '<vue-scroll-view-more\\n'\n                    +'    slot=\"more\"\\n'\n                    +'    :is-finished=\"isFinished\">\\n'\n                    +'</vue-scroll-view-more>\\n'\n        };\n      }\n    },\n    notshowmeta: true\n  },\n  {\n    id: 'scrollview_event',\n    label: 'Scroll Events',\n    template: '<div style=\"padding:20px;\">'\n             +' <div style=\"font-size:20px;font-weight:500;line-height:1.1;color:inherit;\">@scroll({scrollLeft,scrollTop})</div>'\n             +' <div style=\"padding:6px 0;margin:8px 0;\">{{$t(\"scrollviewDemo.eventInfo.detail1\")}}</div>'\n             +' <attr-table :data=\"tableData\"></attr-table>'\n             +' <div style=\"margin-top:20px;font-size:20px;font-weight:500;line-height:1.5;color:inherit;\">@refreshActive()<span style=\"padding-left:15px;font-size:20px;font-weight:500;line-height:1.5;color:inherit;\">{{$t(\"scrollviewDemo.eventInfo.detail2\")}}</span></div>'\n             +' <div style=\"margin-top:20px;font-size:20px;font-weight:500;line-height:1.5;color:inherit;\">@refreshing()<span style=\"padding-left:15px;font-size:20px;font-weight:500;line-height:1.5;color:inherit;\">{{$t(\"scrollviewDemo.eventInfo.detail3\")}}</span></div>'\n             +' <div style=\"margin-top:20px;font-size:20px;font-weight:500;line-height:1.5;color:inherit;\">@end-reached()<span style=\"padding-left:15px;font-size:20px;font-weight:500;line-height:1.5;color:inherit;\">{{$t(\"scrollviewDemo.eventInfo.detail4\")}}</span></div>'          \n             +'</div>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"scrollLeft\",\n            column2: \"scrollviewDemo.eventInfo.row1column2\",\n            column3: \"Number\"\n          },{\n            column1: \"scrollTop\",\n            column2: \"scrollviewDemo.eventInfo.row2column2\",\n            column3: \"Number\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  },\n  {\n    id: 'scrollview_method',\n    label: 'ScrollView Method',\n    description: '',\n    template: '<div style=\"padding:20px;\">'\n             +' <div style=\"font-size:20px;font-weight:500;line-height:1.1;color:inherit;\">init()</div>'\n             +' <div style=\"padding:6px 0;\">{{$t(\"scrollviewDemo.methodInfo.detail1\")}}</div>'\n             +' <div style=\"margin-top:15px;font-size:20px;font-weight:500;line-height:1.1;color:inherit;\">reflowScroller()</div>'\n             +' <div style=\"padding:6px 0;\">{{$t(\"scrollviewDemo.methodInfo.detail2\")}}</div>'\n             +' <div style=\"margin-top:15px;font-size:20px;font-weight:500;line-height:1.1;color:inherit;\">scrollTo(left, top, animate = false)</div>'\n             +' <div style=\"padding:6px 0;\">{{$t(\"scrollviewDemo.methodInfo.detail3\")}}</div>'\n             +' <attr-table :data=\"tableData\"></attr-table>'\n             +' <div style=\"margin-top:15px;margin-top:15px;font-size:20px;font-weight:500;line-height:1.1;color:inherit;\">getOffsets()</div>'\n             +' <div style=\"padding:6px 0;\">{{$t(\"scrollviewDemo.methodInfo.detail4\")}}</div>'\n             +' <div style=\"margin-top:15px;font-size:20px;font-weight:500;line-height:1.1;color:inherit;\">triggerRefresh()</div>'\n             +' <div style=\"padding:6px 0;\">{{$t(\"scrollviewDemo.methodInfo.detail5\")}}</div>'\n             +' <vue-collapse v-model=\"activeNames\" :expand-on-click-header=\"false\">'\n             +' \t<vue-collapse-item class=\"collapse-item-blue\" name=\"trigger_refresh_item\">'\n             +' \t\t<template slot=\"title\">'\n             +' \t\t\t<vue-button type=\"text\" icon=\"vue-icon-document\">{{$t(\"main.code\")}}</vue-button>'\n             +' \t\t</template>'\n             +' \t\t<pre class=\"toolbar:false;brush:jsp\">{{trigger_refresh_code}}</pre>'\n             +' \t</vue-collapse-item>'\n             +' </vue-collapse>'\n\n             +' <div style=\"margin-top:15px;font-size:20px;font-weight:500;line-height:1.1;color:inherit;\">finishRefresh()</div>'\n             +' <div style=\"padding:6px 0;\">{{$t(\"scrollviewDemo.methodInfo.detail6\")}}</div>'\n             +' <vue-collapse v-model=\"activeNames2\" :expand-on-click-header=\"false\">'\n             +' \t<vue-collapse-item class=\"collapse-item-blue\" name=\"finish_refresh_item\">'\n             +' \t\t<template slot=\"title\">'\n             +' \t\t\t<vue-button type=\"text\" icon=\"vue-icon-document\">{{$t(\"main.code\")}}</vue-button>'\n             +' \t\t</template>'\n             +' \t\t<pre class=\"toolbar:false;brush:jsp\">{{finish_refresh_code}}</pre>'\n             +' \t</vue-collapse-item>'\n             +' </vue-collapse>'\n\n             +' <div style=\"margin-top:15px;font-size:20px;font-weight:500;line-height:1.1;color:inherit;\">triggerLoadMore()</div>'\n             +' <div style=\"padding:6px 0;\">{{$t(\"scrollviewDemo.methodInfo.detail7\")}}</div>'\n             +' <vue-collapse v-model=\"activeNames3\" :expand-on-click-header=\"false\">'\n             +' \t<vue-collapse-item class=\"collapse-item-blue\" name=\"trigger_loadmore_item\">'\n             +' \t\t<template slot=\"title\">'\n             +' \t\t\t<vue-button type=\"text\" icon=\"vue-icon-document\">{{$t(\"main.code\")}}</vue-button>'\n             +' \t\t</template>'\n             +' \t\t<pre class=\"toolbar:false;brush:jsp\">{{trigger_loadmore_code}}</pre>'\n             +' \t</vue-collapse-item>'\n             +' </vue-collapse>'\n\n\n             +' <div style=\"margin-top:15px;font-size:20px;font-weight:500;line-height:1.1;color:inherit;\">finishLoadMore()</div>'\n             +' <div style=\"padding:6px 0;\">{{$t(\"scrollviewDemo.methodInfo.detail8\")}}</div>'\n             +' <vue-collapse v-model=\"activeNames4\" :expand-on-click-header=\"false\">'\n             +' \t<vue-collapse-item class=\"collapse-item-blue\" name=\"finish_loadmore_item\">'\n             +' \t\t<template slot=\"title\">'\n             +' \t\t\t<vue-button type=\"text\" icon=\"vue-icon-document\">{{$t(\"main.code\")}}</vue-button>'\n            //  +' \t\t\t<vue-button type=\"text\" :style=\"{float:\\'right\\',marginRight:\\'10px\\',lineHeight:\\'22px\\'}\" @click=\"tryHandle(sample)\">Try it on JSRun</vue-button>'\n             +' \t\t</template>'\n             +' \t\t<pre class=\"toolbar:false;brush:jsp\">{{finish_loadmore_code}}</pre>'\n             +' \t</vue-collapse-item>'\n             +' </vue-collapse>'\n             +'</div>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"left\",\n            column2: \"scrollviewDemo.methodInfo.row1column2\",\n            column3: \"Number\"\n          },{\n            column1: \"top\",\n            column2: \"scrollviewDemo.methodInfo.row2column2\",\n            column3: \"Number\"\n          },{\n            column1: \"animate\",\n            column2: \"scrollviewDemo.methodInfo.row3column2\",\n            column3: \"Boolean\"\n          }],\n          activeNames:['trigger_refresh_item'],\n          activeNames2:['finish_refresh_item'],\n          activeNames3:['trigger_loadmore_item'],\n          activeNames4:['finish_loadmore_item'],\n          trigger_refresh_code: 'this.$refs.scrollView.triggerRefresh();',\n          finish_refresh_code: 'this.$refs.scrollView.finishRefresh();',\n          trigger_loadmore_code: 'this.$refs.scrollView.triggerLoadMore();',\n          finish_loadmore_code: 'this.$refs.scrollView.finishLoadMore();'\n        };\n      }\n    },\n    notshowmeta: true\n  }]\n\n};\n\nmodule.exports = scrollviewDemo\n","'use strict';\nvar skeletonDemo = {\n    path: '/skeleton',\n    name: 'mobile_skeleton',\n    head: {\n        label: 'skeletonDemo.label',\n        description: '',\n        demoInitUrl:'skeleton',\n    },\n    samples: [{\n      id: 'skeleton_sample1',\n      label: 'skeletonDemo.samples1.label',\n      description: 'skeletonDemo.samples1.description',\n      template: '<vue-skeleton title :row=\"3\" />',\n      code: ''\n    },\n    {\n      id: 'skeleton_sample2',\n      label: 'skeletonDemo.samples2.label',\n      description: 'skeletonDemo.samples2.description',\n      template: '',\n      code: '<vue-skeleton title avatar :row=\"3\" />'\n    },\n    {\n      id: 'skeleton_sample3',\n      label: 'skeletonDemo.samples3.label',\n      description: 'skeletonDemo.samples3.description',\n      template: '',\n      code: '<vue-skeleton title avatar :row=\"3\" :loading=\"!mLoading\">\\n'\n          + '  <div style=\"display: flex;padding: 10px;\">\\n'\n          + '    <img style=\"flex-shrink: 0;width: 32px;height: 32px;margin-right:8px;\" src=\"https://dss0.bdstatic.com/70cFuHSh_Q1YnxGkpoWK1HF6hhy/it/u=563868590,2220608420&fm=26&gp=0.jpg\" />\\n'\n          + '    <div style=\"padding-top: 6px;\">\\n'\n          + '      <h3 style=\"margin: 0;font-size: 18px;line-height: 20px;\">{{mTitle}}</h3>\\n'\n          + '      <p style=\"margin: 13px 0 0;font-size: 14px;line-height: 20px;\">{{mDesc}}</p>\\n'\n          + '    </div>\\n'\n          + '  </div>\\n'\n          + '</vue-skeleton>'\n          + '<script>\\n'\n          + '  new Vue({\\n'\n          + '    data: function() {\\n'\n          + '      return {\\n'\n          + '       mLoading: false,\\n'\n          + '       mTitle: \\'骨架屏的应用\\',\\n'\n          + '       mDesc: \\'当前使用的骨架屏组件是应用了第三方组件库vant中的骨架屏，如有疑问请联系开发组\\',\\n'\n          + '      };\\n'\n          + '    },\\n'\n          + '    mounted(){\\n'\n          + '      setTimeout(()=>{\\n'\n          + '        this.mLoading = true;\\n'\n          + '      },1000);\\n'\n          + '    },\\n'\n          + '    methods:{\\n'\n          + '    }\\n'\n          + '  }).$mount();\\n'\n          + '</script>'\n    },\n    {\n      id: 'skeleton_attrs',\n      label: 'Attributes',\n      template: '<attr-table :data=\"tableData\"></attr-table>',\n      parameter: {\n          data: function () {\n              return {\n                  tableData: [{\n                      column1: \"row\",\n                      column2: \"skeletonDemo.attrsInfo.row1column2\",\n                      column3: \"Number | String\",\n                      column4: \"\",\n                      column5: \"0\"\n                  }, {\n                      column1: \"row-width\",\n                      column2: \"skeletonDemo.attrsInfo.row2column2\",\n                      column3: \"Number | String | Array\",\n                      column4: \"\",\n                      column5: \"100%\"\n                  }, {\n                      column1: \"title\",\n                      column2: \"skeletonDemo.attrsInfo.row3column2\",\n                      column3: \"Boolean\",\n                      column4: \"\",\n                      column5: \"false\"\n                  }, {\n                      column1: \"avatar\",\n                      column2: \"skeletonDemo.attrsInfo.row4column2\",\n                      column3: \"Boolean\",\n                      column4: \"\",\n                      column5: \"false\"\n                  }, {\n                      column1: \"loading\",\n                      column2: \"skeletonDemo.attrsInfo.row5column2\",\n                      column3: \"Boolean\",\n                      column4: \"\",\n                      column5: \"true\"\n                  }, {\n                      column1: \"animate\",\n                      column2: \"skeletonDemo.attrsInfo.row6column2\",\n                      column3: \"Boolean\",\n                      column4: \"\",\n                      column5: \"true\"\n                  }, {\n                      column1: \"title-width\",\n                      column2: \"skeletonDemo.attrsInfo.row7column2\",\n                      column3: \"Number | String\",\n                      column4: \"\",\n                      column5: \"40%\"\n                  }, {\n                      column1: \"avatar-size\",\n                      column2: \"skeletonDemo.attrsInfo.row8column2\",\n                      column3: \"Number | String\",\n                      column4: \"\",\n                      column5: \"32px\"\n                  }, {\n                      column1: \"avatar-shape\",\n                      column2: \"skeletonDemo.attrsInfo.row9column2\",\n                      column3: \"String\",\n                      column4: \"\",\n                      column5: \"round\"\n                  }]\n              }\n          }\n      },\n      notshowmeta: true\n    }]\n};\n\nmodule.exports = skeletonDemo\n","'use strict';\nvar stepperDemo = {\n    path: '/stepper',\n    name: 'mobile_stepper',\n    head: {\n        label: 'stepperDemo.label',\n        description: '',\n        demoInitUrl:'stepper',\n    },\n    samples: [{\n      id: 'stepper_top1',\n      label: 'stepperDemo.detail1.label',\n      description: 'stepperDemo.detail1.description',\n      template: '',\n      code: '',\n      notshowmeta: true\n    },{\n      id: 'stepper_sample1',\n      label: 'stepperDemo.samples1.label',\n      description: 'stepperDemo.samples1.description',\n      template: '',\n      code: '<vue-stepper v-model=\"value1\" />\\n'\n          + '<script>\\n'\n          + '  new Vue({\\n'\n          + '    data: function() {\\n'\n          + '      return {\\n'\n          + '       value1:0\\n'\n          + '      };\\n'\n          + '    },\\n'\n          + '    methods:{\\n'\n          + '    }\\n'\n          + '  }).$mount();\\n'\n          + '</script>'\n    },\n    {\n      id: 'stepper_sample2',\n      label: 'stepperDemo.samples2.label',\n      description: 'stepperDemo.samples2.description',\n      template: '',\n      code: '<vue-stepper v-model=\"value2\" step=\"3\" />\\n'\n          + '<script>\\n'\n          + '  new Vue({\\n'\n          + '    data: function() {\\n'\n          + '      return {\\n'\n          + '       value2:0\\n'\n          + '      };\\n'\n          + '    },\\n'\n          + '    methods:{\\n'\n          + '    }\\n'\n          + '  }).$mount();\\n'\n          + '</script>'\n    },\n    {\n      id: 'stepper_sample3',\n      label: 'stepperDemo.samples3.label',\n      description: 'stepperDemo.samples3.description',\n      template: '',\n      code: '<vue-stepper v-model=\"value3\" min=\"3\" max=\"9\"/>\\n'\n          + '<script>\\n'\n          + '  new Vue({\\n'\n          + '    data: function() {\\n'\n          + '      return {\\n'\n          + '       value3:0\\n'\n          + '      };\\n'\n          + '    },\\n'\n          + '    methods:{\\n'\n          + '    }\\n'\n          + '  }).$mount();\\n'\n          + '</script>'\n    },\n    {\n      id: 'stepper_sample4',\n      label: 'stepperDemo.samples4.label',\n      description: 'stepperDemo.samples4.description',\n      template: '',\n      code: '<vue-stepper v-model=\"value4\" integer/>\\n'\n          + '<script>\\n'\n          + '  new Vue({\\n'\n          + '    data: function() {\\n'\n          + '      return {\\n'\n          + '       value4:0\\n'\n          + '      };\\n'\n          + '    },\\n'\n          + '    methods:{\\n'\n          + '    }\\n'\n          + '  }).$mount();\\n'\n          + '</script>'\n    },\n    {\n      id: 'stepper_sample5',\n      label: 'stepperDemo.samples5.label',\n      description: 'stepperDemo.samples5.description',\n      template: '',\n      code: '<vue-stepper v-model=\"value4\" disabled/>\\n'\n          + '<script>\\n'\n          + '  new Vue({\\n'\n          + '    data: function() {\\n'\n          + '      return {\\n'\n          + '       value4:0\\n'\n          + '      };\\n'\n          + '    },\\n'\n          + '    methods:{\\n'\n          + '    }\\n'\n          + '  }).$mount();\\n'\n          + '</script>'\n    },\n    {\n      id: 'stepper_sample6',\n      label: 'stepperDemo.samples6.label',\n      description: 'stepperDemo.samples6.description',\n      template: '',\n      code: '<vue-stepper v-model=\"value5\" disable-input/>\\n'\n          + '<script>\\n'\n          + '  new Vue({\\n'\n          + '    data: function() {\\n'\n          + '      return {\\n'\n          + '       value5:0\\n'\n          + '      };\\n'\n          + '    },\\n'\n          + '    methods:{\\n'\n          + '    }\\n'\n          + '  }).$mount();\\n'\n          + '</script>'\n    },\n    {\n      id: 'stepper_sample7',\n      label: 'stepperDemo.samples7.label',\n      description: 'stepperDemo.samples7.description',\n      template: '',\n      code: '<vue-stepper v-model=\"value6\" step=\"0.01\" :decimal-length=\"2\"/>\\n'\n          + '<script>\\n'\n          + '  new Vue({\\n'\n          + '    data: function() {\\n'\n          + '      return {\\n'\n          + '       value6:0\\n'\n          + '      };\\n'\n          + '    },\\n'\n          + '    methods:{\\n'\n          + '    }\\n'\n          + '  }).$mount();\\n'\n          + '</script>'\n    },\n    {\n      id: 'stepper_sample8',\n      label: 'stepperDemo.samples8.label',\n      description: 'stepperDemo.samples8.description',\n      template: '',\n      code: '<vue-stepper v-model=\"value7\" input-width=\"50px\"  button-size=\"40px\"/>\\n'\n          + '<script>\\n'\n          + '  new Vue({\\n'\n          + '    data: function() {\\n'\n          + '      return {\\n'\n          + '       value7:0\\n'\n          + '      };\\n'\n          + '    },\\n'\n          + '    methods:{\\n'\n          + '    }\\n'\n          + '  }).$mount();\\n'\n          + '</script>'\n    },\n    {\n      id: 'stepper_sample9',\n      label: 'stepperDemo.samples9.label',\n      description: 'stepperDemo.samples9.description',\n      template: '',\n      code: '<vue-stepper :value=\"value8\" async-change @change=\"onChange\" :disabled=\"isDisabled\" />\\n'\n          + '<script>\\n'\n          + '  new Vue({\\n'\n          + '    data: function() {\\n'\n          + '      return {\\n'\n          + '       value8: 0,\\n'\n          + '       isDisabled:false\\n'\n          + '      };\\n'\n          + '    },\\n'\n          + '    methods:{\\n'\n          + '     onChange(value){\\n'\n          + '       // eslint-disable-next-line @typescript-eslint/no-this-alias\\n'\n          + '       var self = this;\\n'\n          + '       self.isDisabled = true;\\n'\n          + '       this.$notify({message: \\'Loading\\',\\n'\n          + '       iconClass: \\'vue-icon-loading\\',\\n'\n          + '       onClose: function() {\\n'\n          + '           self.value8 = value;\\n'\n          + '           self.isDisabled = false;\\n'\n          + '       }\\n'\n          + '       });\\n'\n          + '     }\\n'\n          + '    }\\n'\n          + '  }).$mount();\\n'\n          + '</script>'\n    },\n    {\n      id: 'stepper_attrs',\n      label: 'Attributes',\n      template: '<attr-table :data=\"tableData\"></attr-table>',\n      parameter: {\n          data: function () {\n              return {\n                tableData: [{\n                  column1: \"v-model\",\n                  column2: \"stepperDemo.attrsInfo.row1column2\",\n                  column3: \"Number | String\",\n                  column4: \"\",\n                  column5: \"\"\n                },{\n                  column1: \"min\",\n                  column2: \"stepperDemo.attrsInfo.row2column2\",\n                  column3: \"Number | String\",\n                  column4: \"\",\n                  column5: \"0\"\n                },{\n                  column1: \"max\",\n                  column2: \"stepperDemo.attrsInfo.row3column2\",\n                  column3: \"Number | String\",\n                  column4: \"\",\n                  column5: \"\"\n                },{\n                  column1: \"default-value\",\n                  column2: \"stepperDemo.attrsInfo.row4column2\",\n                  column3: \"Number | String\",\n                  column4: \"\",\n                  column5: \"0\"\n                },{\n                  column1: \"step\",\n                  column2: \"stepperDemo.attrsInfo.row5column2\",\n                  column3: \"Number | String\",\n                  column4: \"\",\n                  column5: \"1\"\n                },{\n                  column1: \"name\",\n                  column2: \"stepperDemo.attrsInfo.row6column2\",\n                  column3: \"Number | String\",\n                  column4: \"\",\n                  column5: \"\"\n                },{\n                  column1: \"input-width\",\n                  column2: \"stepperDemo.attrsInfo.row7column2\",\n                  column3: \"Number | String\",\n                  column4: \"\",\n                  column5: \"32px\"\n                },{\n                  column1: \"button-size\",\n                  column2: \"stepperDemo.attrsInfo.row8column2\",\n                  column3: \"Number | String\",\n                  column4: \"\",\n                  column5: \"28px\"\n                },{\n                  column1: \"decimal-length\",\n                  column2: \"stepperDemo.attrsInfo.row9column2\",\n                  column3: \"Number | String\",\n                  column4: \"\",\n                  column5: \"\"\n                },{\n                  column1: \"integer\",\n                  column2: \"stepperDemo.attrsInfo.row10column2\",\n                  column3: \"Boolean\",\n                  column4: \"\",\n                  column5: \"false\"\n                },{\n                  column1: \"disabled\",\n                  column2: \"stepperDemo.attrsInfo.row11column2\",\n                  column3: \"Boolean\",\n                  column4: \"\",\n                  column5: \"false\"\n                },{\n                  column1: \"disable-plus\",\n                  column2: \"stepperDemo.attrsInfo.row12column2\",\n                  column3: \"Boolean\",\n                  column4: \"\",\n                  column5: \"false\"\n                },{\n                  column1: \"disable-minus\",\n                  column2: \"stepperDemo.attrsInfo.row13column2\",\n                  column3: \"Boolean\",\n                  column4: \"\",\n                  column5: \"false\"\n                },{\n                  column1: \"disable-input\",\n                  column2: \"stepperDemo.attrsInfo.row14column2\",\n                  column3: \"Boolean\",\n                  column4: \"\",\n                  column5: \"false\"\n                },{\n                  column1: \"async-change\",\n                  column2: \"stepperDemo.attrsInfo.row15column2\",\n                  column3: \"Boolean\",\n                  column4: \"\",\n                  column5: \"false\"\n                },{\n                  column1: \"show-plus\",\n                  column2: \"stepperDemo.attrsInfo.row16column2\",\n                  column3: \"Boolean\",\n                  column4: \"\",\n                  column5: \"true\"\n                },{\n                  column1: \"show-minus\",\n                  column2: \"stepperDemo.attrsInfo.row17column2\",\n                  column3: \"Boolean\",\n                  column4: \"\",\n                  column5: \"true\"\n                },{\n                  column1: \"long-press\",\n                  column2: \"stepperDemo.attrsInfo.row18column2\",\n                  column3: \"Boolean\",\n                  column4: \"\",\n                  column5: \"true\"\n                }]\n              }\n          }\n      },\n      notshowmeta: true\n    },{\n      id: 'stepper_event',\n      label: 'Events',\n      template: '<event-table :data=\"tableData\"></event-table>',\n      parameter: {\n        data: function () {\n          return {\n            tableData: [{\n              column1: \"change\",\n              column2: \"stepperDemo.eventInfo.row1column2\",\n              column3: \"value: string, detail: { name: string }\"\n            },{\n              column1: \"overlimit\",\n              column2: \"stepperDemo.eventInfo.row2column2\",\n              column3: \"\"\n            },{\n              column1: \"plus\",\n              column2: \"stepperDemo.eventInfo.row3column2\",\n              column3: \"\"\n            },{\n              column1: \"minus\",\n              column2: \"stepperDemo.eventInfo.row4column2\",\n              column3: \"\"\n            },{\n              column1: \"focus\",\n              column2: \"stepperDemo.eventInfo.row5column2\",\n              column3: \"\"\n            },{\n              column1: \"blur\",\n              column2: \"stepperDemo.eventInfo.row6column2\",\n              column3: \"\"\n            }]\n          }\n        }\n      },\n      notshowmeta: true\n    }]\n};\n\nmodule.exports = stepperDemo\n","'use strict';\nvar swipecellDemo = {\n    path: '/swipe-cell',\n    name: 'mobile_swipecell',\n    head: {\n        label: 'swipecellDemo.label',\n        description: '',\n        demoInitUrl:'swipe-cell',\n    },\n    samples: [{\n      id: 'swipecell_sample1',\n      label: 'swipecellDemo.samples1.label',\n      description: 'swipecellDemo.samples1.description',\n      template: '',\n      code: '       <vue-swipe-cell>\\n'\n          + '  <template #left>\\n'\n          + '    <vue-button type=\"success\" style=\"height:100%;border-radius:0;\" @click=\"clickSelect\">选择</vue-button>\\n'\n          + '  </template>\\n'\n          + '  <vue-form-item label=\"单元格\">\\n'\n          + '    <span style=\"display:block;text-align:right;padding-right:10px;\">内容1</span>\\n'\n          + '  </vue-form-item>\\n'\n          + '  <template #right>\\n'\n          + '    <vue-button type=\"danger\" style=\"height:100%;border-radius:0;\" @click=\"clickDelete\">删除</vue-button>\\n'\n          + '    <vue-button type=\"success\" style=\"height:100%;border-radius:0;margin-left:0;\" @click=\"clickCollect\">收藏</vue-button>\\n'\n          + '  </template>\\n'\n          + '</vue-swipe-cell>\\n'\n          + '<script>\\n'\n          + '  new Vue({\\n'\n          + '    data: function() {\\n'\n          + '      return {\\n'\n          + '      };\\n'\n          + '    },\\n'\n          + '    methods:{\\n'\n          + '     clickSelect() {\\n'\n          + '       this.$notify({message: \\'click the select button\\',position:\\'bottom-center\\'});\\n'\n          + '     },\\n'\n          + '     clickDelete() {\\n'\n          + '       this.$notify({message: \\'click the delete button\\'});\\n'\n          + '     },\\n'\n          + '     clickCollect() {\\n'\n          + '       this.$notify({message: \\'click the collect button\\'});\\n'\n          + '     },\\n'\n          + '    }\\n'\n          + '  }).$mount();\\n'\n          + '</script>'\n    },\n    {\n      id: 'swipecell_sample2',\n      label: 'swipecellDemo.samples2.label',\n      description: 'swipecellDemo.samples2.description',\n      template: '',\n      code: '<vue-swipe-cell>\\n'\n          + '      <div class=\"custom_area\">\\n'\n          + '        <a class=\"thumb_view\">\\n'\n          + '          <img class=\"img_view\" src=\"https://img.yzcdn.cn/vant/cat.jpeg\" />\\n'\n          + '        </a>\\n'\n          + '        <div class=\"right_sub_area\">\\n'\n          + '          <div style=\"margin:4px 0;\">商品标题</div>\\n'\n          + '          <div style=\"margin:6px 0;\">描述信息</div>\\n'\n          + '          <div style=\"display:flex;justify-content:space-between;margin-top:15px;\">\\n'\n          + '            <span>￥2.00</span>\\n'\n          + '            <span>x2</span>\\n'\n          + '          </div>\\n'\n          + '        </div>\\n'\n          + '      </div>\\n'\n          + '    <template #right>\\n'\n          + '      <vue-button type=\"danger\" style=\"height:100%;border-radius:0;\">删除</vue-button>\\n'\n          + '      <vue-button type=\"success\" style=\"height:100%;border-radius:0;margin-left:0;\">收藏</vue-button>\\n'\n          + '    </template>\\n'\n          + '</vue-swipe-cell>\\n'\n          + '<script>\\n'\n          + '  new Vue({\\n'\n          + '    data: function() {\\n'\n          + '      return {\\n'\n          + '      };\\n'\n          + '    },\\n'\n          + '    methods:{\\n'\n          + '    }\\n'\n          + '  }).$mount();\\n'\n          + '</script>'\n    },\n    {\n      id: 'swipecell_sample3',\n      label: 'swipecellDemo.samples3.label',\n      description: 'swipecellDemo.samples3.description',\n      template: '',\n      code: '<vue-swipe-cell :before-close=\"beforeClose\">\\n'\n          + '  <template #left>\\n'\n          + '    <vue-button type=\"success\" style=\"height:100%;border-radius:0;\" @click=\"clickSelect\">选择</vue-button>\\n'\n          + '  </template>\\n'\n          + '  <vue-form-item label=\"单元格2\">\\n'\n          + '    <span style=\"display:block;text-align:right;padding-right:10px;\">内容2</span>\\n'\n          + '  </vue-form-item>\\n'\n          + '  <template #right>\\n'\n          + '    <vue-button type=\"danger\" style=\"height:100%;border-radius:0;\">删除</vue-button>\\n'\n          + '    <vue-button type=\"success\" style=\"height:100%;border-radius:0;margin-left:0;\">收藏</vue-button>\\n'\n          + '  </template>\\n'\n          + '</vue-swipe-cell>\\n'\n          + '<vue-dialog v-model=\"dialogVisible\" size=\"tiny\" show-close :before-close=\"handleClose\">\\n'\n          + '  <span slot=\"header\">This is header</span>\\n'\n          + '  <span>Are you sure delete it?</span>\\n'\n          + '  <span slot=\"footer\" class=\"dialog-footer\">\\n'\n          + '    <vue-button @click=\"dialogVisible = false\">Cancel</vue-button>\\n'\n          + '    <vue-button type=\"primary\" @click=\"dialogVisible = false\">Complete</vue-button>\\n'\n          + '  </span>\\n'\n          + '</vue-dialog>\\n'\n          + '<script>\\n'\n          + '  new Vue({\\n'\n          + '    data: function() {\\n'\n          + '      return {\\n'\n          + '         dialogVisible:false,\\n'\n          + '         handleClose: function(done) {\\n'\n          + '             this.$confirm({\\n'\n          + '               message: \"Are you sure to close this dialog?\"\\n'\n          + '             }).then(function() {\\n'\n          + '               done();\\n'\n          + '             }).catch(function() {\\n'\n          + '               done(false);\\n'\n          + '             });\\n'\n          + '          }\\n'\n          + '      };\\n'\n          + '    },\\n'\n          + '    methods:{\\n'\n          + '       beforeClose({position, instance}) {\\n'\n          + '         // position 为关闭时点击的位置\\n'\n          + '         // instance 为对应的 SwipeCell 实例\\n'\n          + '         switch (position) {\\n'\n          + '           case \\'left\\':\\n'\n          + '             this.$notify({message: \\'click the left position\\'});\\n'\n          + '             break;\\n'\n          + '           case \\'cell\\':\\n'\n          + '             this.$notify({message: \\'click the cell position\\'});\\n'\n          + '             break;\\n'\n          + '           case \\'outside\\':\\n'\n          + '             instance.close();\\n'\n          + '             break;\\n'\n          + '           case \\'right\\':\\n'\n          + '             this.$notify({message: \\'click the right position\\'});\\n'\n          + '             this.dialogVisible = true;\\n'\n          + '             break;\\n'\n          + '         }\\n'\n          + '       }\\n'\n          + '    }\\n'\n          + '  }).$mount();\\n'\n          + '</script>'\n    },\n    {\n      id: 'swipecell_attrs',\n      label: 'Attributes',\n      template: '<attr-table :data=\"tableData\"></attr-table>',\n      parameter: {\n          data: function () {\n              return {\n                  tableData: [{\n                      column1: \"name\",\n                      column2: \"swipecellDemo.attrsInfo.row1column2\",\n                      column3: \"Number | String\",\n                      column4: \"\",\n                      column5: \"false\"\n                  }, {\n                      column1: \"left-width\",\n                      column2: \"swipecellDemo.attrsInfo.row2column2\",\n                      column3: \"Number | String\",\n                      column4: \"\",\n                      column5: \"auto\"\n                  }, {\n                      column1: \"right-width\",\n                      column2: \"swipecellDemo.attrsInfo.row3column2\",\n                      column3: \"Number | String\",\n                      column4: \"\",\n                      column5: \"auto\"\n                  }, {\n                      column1: \"before-close\",\n                      column2: \"swipecellDemo.attrsInfo.row4column2\",\n                      column3: \"Function\",\n                      column4: \"\",\n                      column5: \"\"\n                  }, {\n                      column1: \"disabled\",\n                      column2: \"swipecellDemo.attrsInfo.row5column2\",\n                      column3: \"Boolean\",\n                      column4: \"\",\n                      column5: \"false\"\n                  }, {\n                      column1: \"stop-propagation\",\n                      column2: \"swipecellDemo.attrsInfo.row6column2\",\n                      column3: \"Boolean\",\n                      column4: \"\",\n                      column5: \"false\"\n                  }]\n              }\n          }\n      },\n      notshowmeta: true\n    },{\n      id: 'beforeclose_attrs',\n      label: 'beforeClose Params',\n      template: '<div style=\"padding:20px;\"><div style=\"padding:6px 0;\">{{$t(\"swipecellDemo.beforecloseAttrsInfo.description\")}}</div><attr-table :data=\"tableData\"></attr-table></div>',\n      parameter: {\n        data: function () {\n          return {\n            tableData: [{\n              column1: \"name\",\n              column2: \"swipecellDemo.beforecloseAttrsInfo.row1column2\",\n              column3: \"String\",\n              column4: \"\",\n              column5: \"\"\n            },{\n              column1: \"position\",\n              column2: \"swipecellDemo.beforecloseAttrsInfo.row2column2\",\n              column3: \"String\",\n              column4: \"\",\n              column5: \"\"\n            },{\n              column1: \"instance\",\n              column2: \"swipecellDemo.beforecloseAttrsInfo.row3column2\",\n              column3: \"String\",\n              column4: \"\",\n              column5: \"\"\n            }]\n          }\n        }\n      },\n      notshowmeta: true\n    },\n    {\n      id: 'swipecell_slots',\n      label: 'Slots',\n      template: '<div style=\"padding:20px;\">'\n              + ' <div style=\"font-size:20px;font-weight:500;line-height:1.1;color:inherit;\">default</div>'\n              + ' <div style=\"padding:6px 0;\">{{$t(\"swipecellDemo.slotsInfo.row1column2\")}}</div>'\n              + ' <div style=\"margin-top:15px;font-size:20px;font-weight:500;line-height:1.1;color:inherit;\">left</div>'\n              + ' <div style=\"padding:6px 0;\">{{$t(\"swipecellDemo.slotsInfo.row2column2\")}}</div>'\n              + ' <div style=\"margin-top:15px;font-size:20px;font-weight:500;line-height:1.1;color:inherit;\">right</div>'\n              + ' <div style=\"padding:6px 0;\">{{$t(\"swipecellDemo.slotsInfo.row3column2\")}}</div>'\n              + '</div>',\n      parameter: {\n      },\n      notshowmeta: true\n    },{\n      id: 'swipecell_event',\n      label: 'Events',\n      template: '<event-table :data=\"tableData\"></event-table>',\n      parameter: {\n        data: function () {\n          return {\n            tableData: [{\n              column1: \"click\",\n              column2: \"swipecellDemo.eventInfo.row1column2\",\n              column3: \"swipecellDemo.eventInfo.row1column3\"\n            },{\n              column1: \"open\",\n              column2: \"swipecellDemo.eventInfo.row2column2\",\n              column3: \"{ position: 'left' | 'right' , name: string }\"\n            },{\n              column1: \"close\",\n              column2: \"swipecellDemo.eventInfo.row3column2\",\n              column3: \"{ position: string , name: string }\"\n            }]\n          }\n        }\n      },\n      notshowmeta: true\n    },\n    {\n      id: 'swipecell_methods',\n      label: 'Method',\n      template: '<div style=\"padding:20px;\">'\n              + ' <div style=\"padding:10px 0;\">{{$t(\"swipecellDemo.methodInfo.description\")}}</div>'\n              + ' <div style=\"font-size:20px;font-weight:500;line-height:1.1;color:inherit;\">open()</div>'\n              + ' <div style=\"padding:6px 0;\">{{$t(\"swipecellDemo.methodInfo.row1column2\")}}</div>'\n              + ' <div style=\"margin-top:15px;font-size:20px;font-weight:500;line-height:1.1;color:inherit;\">close()</div>'\n              + ' <div style=\"padding:6px 0;\">{{$t(\"swipecellDemo.methodInfo.row2column2\")}}</div>'\n              + '</div>',\n      parameter: {\n      },\n      notshowmeta: true\n    },]\n};\n\nmodule.exports = swipecellDemo\n","'use strict';\nvar tabbarDemo = {\n    path: '/tab-bar',\n    name: 'mobile_tabbar',\n    head: {\n        label: 'tabbarDemo.label',\n        description: '',\n        demoInitUrl:'tab-bar',\n    },\n    samples: [{\n      id: 'tabbar_sample1',\n      label: 'tabbarDemo.samples1.label',\n      description: 'tabbarDemo.samples1.description',\n      template: '',\n      code: '<vue-tabbar v-model=\"activeIndex\" :fixed=\"isFixed\">\\n'\n          + '    <vue-tabbar-item icon=\"vue-icon-home\">首页</vue-tabbar-item>\\n'\n          + '    <vue-tabbar-item icon=\"vue-icon-search\">搜索</vue-tabbar-item>\\n'\n          + '    <vue-tabbar-item icon=\"vue-icon-user\">通讯录</vue-tabbar-item>\\n'\n          + '    <vue-tabbar-item icon=\"vue-icon-setting\">设置</vue-tabbar-item>\\n'\n          + '</vue-tabbar>\\n'\n          + '<script>\\n'\n          + '  new Vue({\\n'\n          + '    data: function() {\\n'\n          + '      return {\\n'\n          + '       activeIndex:0,\\n'\n          + '       isFixed:false\\n'\n          + '      };\\n'\n          + '    },\\n'\n          + '    methods:{\\n'\n          + '    }\\n'\n          + '  }).$mount();\\n'\n          + '</script>'\n    },\n    {\n      id: 'tabbar_sample2',\n      label: 'tabbarDemo.samples2.label',\n      description: 'tabbarDemo.samples2.description',\n      template: '',\n      code: '<vue-tabbar v-model=\"activeName\" :fixed=\"isFixed\">\\n'\n          + '    <vue-tabbar-item name=\"home\" icon=\"vue-icon-home\">首页</vue-tabbar-item>\\n'\n          + '    <vue-tabbar-item name=\"search\" icon=\"vue-icon-search\">搜索</vue-tabbar-item>\\n'\n          + '    <vue-tabbar-item name=\"user\" icon=\"vue-icon-user\">通讯录</vue-tabbar-item>\\n'\n          + '    <vue-tabbar-item name=\"setting\" icon=\"vue-icon-setting\">设置</vue-tabbar-item>\\n'\n          + '</vue-tabbar>\\n'\n          + '<script>\\n'\n          + '  new Vue({\\n'\n          + '    data: function() {\\n'\n          + '      return {\\n'\n          + '       activeName: \\'search\\',\\n'\n          + '       isFixed:false\\n'\n          + '      };\\n'\n          + '    },\\n'\n          + '    methods:{\\n'\n          + '    }\\n'\n          + '  }).$mount();\\n'\n          + '</script>'\n    },\n    {\n      id: 'tabbar_sample3',\n      label: 'tabbarDemo.samples3.label',\n      description: 'tabbarDemo.samples3.description',\n      template: '',\n      code: '<vue-tabbar v-model=\"activeIndex2\" :fixed=\"isFixed\">\\n'\n          + '    <vue-tabbar-item icon=\"vue-icon-home\" badge=\"8\">首页</vue-tabbar-item>\\n'\n          + '    <vue-tabbar-item icon=\"vue-icon-search\" dot>搜索</vue-tabbar-item>\\n'\n          + '    <vue-tabbar-item icon=\"vue-icon-user\" badge=\"6\">通讯录</vue-tabbar-item>\\n'\n          + '    <vue-tabbar-item icon=\"vue-icon-setting\">设置</vue-tabbar-item>\\n'\n          + '</vue-tabbar>\\n'\n          + '<script>\\n'\n          + '  new Vue({\\n'\n          + '    data: function() {\\n'\n          + '      return {\\n'\n          + '       activeIndex2:0,\\n'\n          + '       isFixed:false\\n'\n          + '      };\\n'\n          + '    },\\n'\n          + '    methods:{\\n'\n          + '    }\\n'\n          + '  }).$mount();\\n'\n          + '</script>'\n    },\n    {\n      id: 'tabbar_sample4',\n      label: 'tabbarDemo.samples4.label',\n      description: 'tabbarDemo.samples4.description',\n      template: '',\n      code: '<vue-tabbar v-model=\"active\" :fixed=\"isFixed\">\\n'\n          + '  <vue-tabbar-item dot>\\n'\n          + '    <span>自定义</span>\\n'\n          + '    <template #icon=\"props\">\\n'\n          + '      <img :src=\"props.active ? mIcon.active:mIcon.inactive\"/>\\n'\n          + '    </template>\\n'\n          + '  </vue-tabbar-item>\\n'\n          + '  <vue-tabbar-item icon=\"vue-icon-search\">搜索</vue-tabbar-item>\\n'\n          + '  <vue-tabbar-item icon=\"vue-icon-user\" badge=\"6\">通讯录</vue-tabbar-item>\\n'\n          + '  <vue-tabbar-item icon=\"vue-icon-setting\">设置</vue-tabbar-item>\\n'\n          + '</vue-tabbar>\\n'\n          + '<script>\\n'\n          + '  new Vue({\\n'\n          + '    data: function() {\\n'\n          + '      return {\\n'\n          + '       isFixed:false,\\n'\n          + '       active:0,\\n'\n          + '       mIcon: {\\n'\n          + '         active: \\'https://img.yzcdn.cn/vant/user-active.png\\',\\n'\n          + '         inactive: \\'https://img.yzcdn.cn/vant/user-inactive.png\\',\\n'\n          + '       }\\n'\n          + '      };\\n'\n          + '    },\\n'\n          + '    methods:{\\n'\n          + '    }\\n'\n          + '  }).$mount();\\n'\n          + '</script>'\n    },\n    {\n      id: 'tabbar_sample5',\n      label: 'tabbarDemo.samples5.label',\n      description: 'tabbarDemo.samples5.description',\n      template: '',\n      code: '<vue-tabbar v-model=\"activeIndex3\" :fixed=\"isFixed\" active-color=\"#07c160\" inactive-color=\"lightblue\" @change=\"onTabChange\">\\n'\n          + '    <vue-tabbar-item v-for=\"item in mItemList\" :key=\"item.iconName\" :icon=\"item.iconName\">{{item.tabLabel}}</vue-tabbar-item>\\n'\n          + '</vue-tabbar>\\n'\n          + '<script>\\n'\n          + '  new Vue({\\n'\n          + '    data: function() {\\n'\n          + '      return {\\n'\n          + '       activeIndex3:3,\\n'\n          + '       isFixed:false,\\n'\n          + '       mItemList:[\\n'\n          + '         {\\n'\n          + '           iconName: \\'vue-icon-home\\',\\n'\n          + '           tabLabel: \\'首页\\'\\n'\n          + '         },\\n'\n          + '         {\\n'\n          + '           iconName: \\'vue-icon-search\\',\\n'\n          + '           tabLabel: \\'搜索\\'\\n'\n          + '         },\\n'\n          + '         {\\n'\n          + '           iconName: \\'vue-icon-user\\',\\n'\n          + '           tabLabel: \\'通讯录\\'\\n'\n          + '         },\\n'\n          + '         {\\n'\n          + '           iconName: \\'vue-icon-setting\\',\\n'\n          + '           tabLabel: \\'设置\\'\\n'\n          + '         },\\n'\n          + '       ],\\n'\n          + '      };\\n'\n          + '    },\\n'\n          + '    methods:{\\n'\n          + '     onTabChange(index) {\\n'\n          + '       var item = this.mItemList[index];\\n'\n          + '       this.$notify({message:\\'当前点击了\\'+item.tabLabel+\\'标签项\\'});\\n'\n          + '     }\\n'\n          + '    }\\n'\n          + '  }).$mount();\\n'\n          + '</script>'\n    },\n    {\n      id: 'tabbar_sample6',\n      label: 'tabbarDemo.samples6.label',\n      description: 'tabbarDemo.samples6.description',\n      template: '',\n      code: '<router-view></router-view>\\n'\n          + '<vue-tabbar v-model=\"activeIndex4\" :fixed=\"isFixed\" route>\\n'\n          + '    <vue-tabbar-item v-for=\"item in mItemList2\" :key=\"item.iconName\" :to=\"item.toUrl\" :icon=\"item.iconName\">{{item.tabLabel}}</vue-tabbar-item>\\n'\n          + '</vue-tabbar>\\n'\n          + '<script>\\n'\n          + '  new Vue({\\n'\n          + '    data: function() {\\n'\n          + '      return {\\n'\n          + '       activeIndex4:0,\\n'\n          + '       isFixed:false,\\n'\n          + '       mItemList2:[\\n'\n          + '         {\\n'\n          + '           toUrl: \\'/form1\\',\\n'\n          + '           iconName: \\'vue-icon-home\\',\\n'\n          + '           tabLabel: \\'表单页\\'\\n'\n          + '         },\\n'\n          + '         {\\n'\n          + '           toUrl: \\'/select\\',\\n'\n          + '           iconName: \\'vue-icon-menu\\',\\n'\n          + '           tabLabel: \\'选择页\\'\\n'\n          + '         },\\n'\n          + '         {\\n'\n          + '           toUrl: \\'/cascader\\',\\n'\n          + '           iconName: \\'vue-icon-user\\',\\n'\n          + '           tabLabel: \\'级联页\\'\\n'\n          + '         },\\n'\n          + '         {\\n'\n          + '           toUrl: \\'/input\\',\\n'\n          + '           iconName: \\'vue-icon-setting\\',\\n'\n          + '           tabLabel: \\'输入页\\'\\n'\n          + '         }\\n'\n          + '       ]\\n'\n          + '      };\\n'\n          + '    },\\n'\n          + '    methods:{\\n'\n          + '    }\\n'\n          + '  }).$mount();\\n'\n          + '</script>'\n    },\n    {\n      id: 'tabbar_attrs',\n      label: 'TabBar Attributes',\n      template: '<attr-table :data=\"tableData\"></attr-table>',\n      parameter: {\n          data: function () {\n              return {\n                  tableData: [{\n                      column1: \"v-model\",\n                      column2: \"tabbarDemo.attrsInfo.row1column2\",\n                      column3: \"Number |String\",\n                      column4: \"\",\n                      column5: \"0\"\n                  }, {\n                      column1: \"fixed\",\n                      column2: \"tabbarDemo.attrsInfo.row2column2\",\n                      column3: \"Boolean\",\n                      column4: \"\",\n                      column5: \"true\"\n                  }, {\n                      column1: \"border\",\n                      column2: \"tabbarDemo.attrsInfo.row3column2\",\n                      column3: \"Boolean\",\n                      column4: \"\",\n                      column5: \"true\"\n                  }, {\n                      column1: \"z-index\",\n                      column2: \"tabbarDemo.attrsInfo.row4column2\",\n                      column3: \"Nubmber | String\",\n                      column4: \"\",\n                      column5: \"\"\n                  }, {\n                      column1: \"active-color\",\n                      column2: \"tabbarDemo.attrsInfo.row5column2\",\n                      column3: \"String\",\n                      column4: \"\",\n                      column5: \"#1989fa\"\n                  }, {\n                      column1: \"inactive-color\",\n                      column2: \"tabbarDemo.attrsInfo.row6column2\",\n                      column3: \"String\",\n                      column4: \"\",\n                      column5: \"#7d7e80\"\n                  }, {\n                      column1: \"placeholder\",\n                      column2: \"tabbarDemo.attrsInfo.row7column2\",\n                      column3: \"Boolean\",\n                      column4: \"\",\n                      column5: \"false\"\n                  }, {\n                      column1: \"safe-area-inset-bottom\",\n                      column2: \"tabbarDemo.attrsInfo.row8column2\",\n                      column3: \"Boolean\",\n                      column4: \"\",\n                      column5: \"false\"\n                  }, {\n                      column1: \"route\",\n                      column2: \"tabbarDemo.attrsInfo.row9column2\",\n                      column3: \"Boolean\",\n                      column4: \"\",\n                      column5: \"\"\n                  }]\n              }\n          }\n      },\n      notshowmeta: true\n    },{\n      id: 'tabbar_event',\n      label: 'TabBar Events',\n      template: '<event-table :data=\"tableData\"></event-table>',\n      parameter: {\n        data: function () {\n          return {\n            tableData: [{\n              column1: \"change\",\n              column2: \"tabbarDemo.eventInfo.row1column2\",\n              column3: \"tabbarDemo.eventInfo.row1column3\"\n            }]\n          }\n        }\n      },\n      notshowmeta: true\n    },\n    {\n      id: 'tabbaritem_attrs',\n      label: 'TabBarItem Attributes',\n      template: '<attr-table :data=\"tableData\"></attr-table>',\n      parameter: {\n          data: function () {\n              return {\n                  tableData: [{\n                      column1: \"name\",\n                      column2: \"tabbarDemo.tabBarItemAttrsInfo.row1column2\",\n                      column3: \"Number |String\",\n                      column4: \"\",\n                      column5: \"tabbarDemo.tabBarItemAttrsInfo.row1column5\"\n                  }, {\n                      column1: \"icon\",\n                      column2: \"tabbarDemo.tabBarItemAttrsInfo.row2column2\",\n                      column3: \"String\",\n                      column4: \"\",\n                      column5: \"\"\n                  }, {\n                      column1: \"dot\",\n                      column2: \"tabbarDemo.tabBarItemAttrsInfo.row3column2\",\n                      column3: \"Boolean\",\n                      column4: \"\",\n                      column5: \"false\"\n                  }, {\n                      column1: \"badge\",\n                      column2: \"tabbarDemo.tabBarItemAttrsInfo.row4column2\",\n                      column3: \"Nubmber | String\",\n                      column4: \"\",\n                      column5: \"\"\n                  }, {\n                      column1: \"info\",\n                      column2: \"tabbarDemo.tabBarItemAttrsInfo.row5column2\",\n                      column3: \"Nubmber | String\",\n                      column4: \"\",\n                      column5: \"\"\n                  }, {\n                      column1: \"url\",\n                      column2: \"tabbarDemo.tabBarItemAttrsInfo.row6column2\",\n                      column3: \"String\",\n                      column4: \"\",\n                      column5: \"\"\n                  }, {\n                      column1: \"to\",\n                      column2: \"tabbarDemo.tabBarItemAttrsInfo.row7column2\",\n                      column3: \"String | Object\",\n                      column4: \"\",\n                      column5: \"\"\n                  }, {\n                      column1: \"replace\",\n                      column2: \"tabbarDemo.tabBarItemAttrsInfo.row8column2\",\n                      column3: \"Boolean\",\n                      column4: \"\",\n                      column5: \"false\"\n                  }]\n              }\n          }\n      },\n      notshowmeta: true\n    },\n    {\n      id: 'tabbaritem_slots',\n      label: 'TabBarItem Slots',\n      template: '<div style=\"padding:20px;\">'\n              + ' <div style=\"font-size:20px;font-weight:500;line-height:1.1;color:inherit;\">icon</div>'\n              + ' <div style=\"padding:6px 0;\">{{$t(\" tabbarDemo.tabBarItemSlotInfo.row1column2\")}}</div>'\n              + '</div>',\n      parameter: {\n      },\n      notshowmeta: true\n    }]\n};\n\nmodule.exports = tabbarDemo\n","'use strict';\nvar texticonDemo = {\n    path: '/text-icon',\n    name: 'mobile_texticon',\n    head: {\n        label: 'texticonDemo.label',\n        description: '',\n        demoInitUrl:'text-icon',\n    },\n    samples: [{\n      id: 'texticon_sample1',\n      label: 'texticonDemo.samples1.label',\n      description: 'texticonDemo.samples1.description',\n      template: '',\n      code: '<vue-text-icon icon-name=\"vue-icon-document\" label=\"文档\"></vue-text-icon>'\n    },\n    {\n      id: 'texticon_sample2',\n      label: 'texticonDemo.samples2.label',\n      description: 'texticonDemo.samples2.description',\n      template: '',\n      code: '<vue-text-icon icon-name=\"vue-icon-upload\" icon-color=\"blue\" icon-size=\"20\" \\n'\n          + '   label=\"上传\" label-color=\"blue\" label-size=\"20\"  @click=\"doThisIcon\">\\n'\n          + '</vue-text-icon>\\n'\n          + '<script>\\n'\n          + '  new Vue({\\n'\n          + '    data: function() {\\n'\n          + '      return {\\n'\n          + '      };\\n'\n          + '    },\\n'\n          + '    methods:{\\n'\n          + '      doThisIcon() {\\n'\n          + '        this.$notify({message: \\'点击了当前图标\\'});\\n'\n          + '      }\\n'\n          + '    }\\n'\n          + '  }).$mount();\\n'\n          + '</script>'\n    },\n    {\n      id: 'texticon_sample3',\n      label: 'texticonDemo.samples3.label',\n      description: 'texticonDemo.samples3.description',\n      template: '',\n      code: '<div style=\"display:flex;justify-content: space-around;\">\\n'\n          + '  <vue-text-icon icon-name=\"vue-icon-arrow-up\" label=\"上方\" labelPosition=\"top\" @click=\"doThisIcon\">\\n'\n          + '  </vue-text-icon>\\n'\n          + '  <vue-text-icon icon-name=\"vue-icon-arrow-right\" label=\"右侧\" labelPosition=\"right\" @click=\"doThisIcon\">\\n'\n          + '  </vue-text-icon>\\n'\n          + '  <vue-text-icon icon-name=\"vue-icon-arrow-down\" label=\"下方\" labelPosition=\"bottom\" @click=\"doThisIcon\">\\n'\n          + '  </vue-text-icon>\\n'\n          + '  <vue-text-icon icon-name=\"vue-icon-arrow-left\" label=\"左侧\" labelPosition=\"left\" @click=\"doThisIcon\">\\n'\n          + '  </vue-text-icon>\\n'\n          + '</div>\\n'\n          + '<script>\\n'\n          + '  new Vue({\\n'\n          + '    data: function() {\\n'\n          + '      return {\\n'\n          + '      };\\n'\n          + '    },\\n'\n          + '    methods:{\\n'\n          + '      doThisIcon() {\\n'\n          + '        this.$notify({message: \\'点击了当前图标\\'});\\n'\n          + '      }\\n'\n          + '    }\\n'\n          + '  }).$mount();\\n'\n          + '</script>'\n    },\n    {\n      id: 'texticon_sample4',\n      label: 'texticonDemo.samples4.label',\n      description: 'texticonDemo.samples4.description',\n      template: '',\n      code: '<div style=\"display:flex;justify-content: space-around;\">\\n'\n          + '  <vue-text-icon icon-name=\"vue-icon-arrow-up\" label=\"上方\" labelPosition=\"top\" labelPadding=\"4\" @click=\"doThisIcon\">\\n'\n          + '  </vue-text-icon>\\n'\n          + '  <vue-text-icon icon-name=\"vue-icon-arrow-right\" label=\"右侧\" labelPosition=\"right\" labelPadding=\"10\" @click=\"doThisIcon\">\\n'\n          + '  </vue-text-icon>\\n'\n          + '  <vue-text-icon icon-name=\"vue-icon-arrow-down\" label=\"下方\" labelPosition=\"bottom\" labelPadding=\"4\" @click=\"doThisIcon\">\\n'\n          + '  </vue-text-icon>\\n'\n          + '  <vue-text-icon icon-name=\"vue-icon-arrow-left\" label=\"左侧\" labelPosition=\"left\" labelPadding=\"10\"  @click=\"doThisIcon\">\\n'\n          + '  </vue-text-icon>\\n'\n          + '</div>\\n'\n          + '<script>\\n'\n          + '  new Vue({\\n'\n          + '    data: function() {\\n'\n          + '      return {\\n'\n          + '      };\\n'\n          + '    },\\n'\n          + '    methods:{\\n'\n          + '      doThisIcon() {\\n'\n          + '        this.$notify({message: \\'点击了当前图标\\'});\\n'\n          + '      }\\n'\n          + '    }\\n'\n          + '  }).$mount();\\n'\n          + '</script>'\n    },\n    {\n      id: 'texticon_attrs',\n      label: 'Attributes',\n      template: '<attr-table :data=\"tableData\"></attr-table>',\n      parameter: {\n          data: function () {\n              return {\n                  tableData: [{\n                      column1: \"icon-name\",\n                      column2: \"texticonDemo.attrsInfo.row1column2\",\n                      column3: \"String\",\n                      column4: \"\",\n                      column5: \"\"\n                  }, {\n                      column1: \"icon-color\",\n                      column2: \"texticonDemo.attrsInfo.row2column2\",\n                      column3: \"String\",\n                      column4: \"\",\n                      column5: \"\"\n                  }, {\n                      column1: \"icon-size\",\n                      column2: \"texticonDemo.attrsInfo.row3column2\",\n                      column3: \"Number | String\",\n                      column4: \"\",\n                      column5: \"\"\n                  }, {\n                      column1: \"dot\",\n                      column2: \"texticonDemo.attrsInfo.row4column2\",\n                      column3: \"Boolean\",\n                      column4: \"\",\n                      column5: \"false\"\n                  }, {\n                      column1: \"badge\",\n                      column2: \"texticonDemo.attrsInfo.row5column2\",\n                      column3: \"Number | String\",\n                      column4: \"\",\n                      column5: \"\"\n                  }, {\n                      column1: \"label\",\n                      column2: \"texticonDemo.attrsInfo.row6column2\",\n                      column3: \"String\",\n                      column4: \"\",\n                      column5: \"\"\n                  }, {\n                      column1: \"label-color\",\n                      column2: \"texticonDemo.attrsInfo.row7column2\",\n                      column3: \"String\",\n                      column4: \"\",\n                      column5: \"\"\n                  }, {\n                      column1: \"label-size\",\n                      column2: \"texticonDemo.attrsInfo.row8column2\",\n                      column3: \"Number | String\",\n                      column4: \"\",\n                      column5: \"true\"\n                  }, {\n                      column1: \"label-position\",\n                      column2: \"texticonDemo.attrsInfo.row9column2\",\n                      column3: \"String\",\n                      column4: \"\",\n                      column5: \"bottom\"\n                  }, {\n                      column1: \"label-padding\",\n                      column2: \"texticonDemo.attrsInfo.row10column2\",\n                      column3: \"Number | String\",\n                      column4: \"\",\n                      column5: \"2\"\n                  }]\n              }\n          }\n      },\n      notshowmeta: true\n    },{\n      id: 'texticon_event',\n      label: 'Events',\n      template: '<event-table :data=\"tableData\"></event-table>',\n      parameter: {\n        data: function () {\n          return {\n            tableData: [{\n              column1: \"click\",\n              column2: \"texticonDemo.eventInfo.row1column2\",\n              column3: \"\"\n            }]\n          }\n        }\n      },\n      notshowmeta: true\n    }]\n};\n\nmodule.exports = texticonDemo\n","'use strict';\r\nvar mobileInstallDemo = {\r\n  path: '/mobile-install',\r\n  name: 'mobileInstall',\r\n  head: {\r\n    label: 'mobileInstallDemo.label',\r\n    description: ''\r\n  },\r\n  samples: [{\r\n    id: 'mobileInstall1',\r\n    label: 'mobileInstallDemo.detail1.label',\r\n    description: 'mobileInstallDemo.detail1.description',\r\n    template: '',\r\n    parameter: {\r\n    },\r\n    code: '<!-- VIY PC -->\\n\\\r\n<link rel=\"stylesheet\" href=\"https://spring21cn.github.io/vue-component/css/component.min.css\">\\n\\\r\n<script src=\"https://spring21cn.github.io/vue-component/js/vue-all.min.js\"></script>\\n\\\r\n<script src=\"https://spring21cn.github.io/vue-component/js/vue-component-all.min.js\"></script>\\n\\\r\n\\n\\\r\n<!-- VIY Mobile Plugin -->\\n\\\r\n<link rel=\"stylesheet\" type=\"text/css\" href=\"./vue-mobile.css\">\\n\\\r\n<script type=\"text/javascript\" src=\"./vue-mobile.umd.js\"></script>'\r\n  }]\r\n};\r\nmodule.exports = mobileInstallDemo;\r\n","'use strict';\nvar navMenuDemo = {\n  path: '/navMenu',\n  name: 'navMenu',\n  head: {\n    label: 'navMenuDemo.label',\n    description: 'navMenuDemo.description'\n  },\n  samples: [{\n    id: 'navMenu1',\n    label: 'navMenuDemo.samples1.label',\n    description: 'navMenuDemo.samples1.description',\n    template: '<div class=\"source\"><vue-menu theme=\"dark\" :default-active=\"activeIndex1\" mode=\"horizontal\" @select=\"handleSelect\" menu-trigger=\"click\"><vue-menu-item index=\"1\">Processing Center</vue-menu-item><vue-submenu index=\"2\"><template slot=\"title\">Workspace</template><vue-menu-item index=\"2-1\">Item one</vue-menu-item><vue-menu-item index=\"2-2\">Item two</vue-menu-item><vue-menu-item index=\"2-3\">Item three</vue-menu-item></vue-submenu><vue-menu-item index=\"3\">Orders</vue-menu-item></vue-menu><div style=\"margin:30px\"></div><vue-menu :default-active=\"activeIndex2\" mode=\"horizontal\" @select=\"handleSelect\"><vue-menu-item index=\"1\">Processing Center</vue-menu-item><vue-submenu index=\"2\"><template slot=\"title\">Workspace</template><vue-menu-item index=\"2-1\">Item one</vue-menu-item><vue-menu-item index=\"2-2\">Item two</vue-menu-item><vue-menu-item index=\"2-3\">Item three</vue-menu-item></vue-submenu><vue-menu-item index=\"3\">Orders</vue-menu-item></vue-menu></div>',\n    parameter: {\n      data: function () {\n        return {\n          activeIndex1: '1',\n          activeIndex2: '3'\n        }\n      },\n      methods: {\n        handleSelect: function (index, indexPath) {\n          this.$notify({ title: 'Selected Index: ' + index });\n          this.$notify({ title: 'Selected Path Index: ' + indexPath.map(function (index) { return index }).join(', ') });\n        }\n      }\n    },\n    code: '<vue-menu theme=\"dark\" :default-active=\"activeIndex1\" mode=\"horizontal\" @select=\"handleSelect\" menu-trigger=\"click\">\\n' +\n      '  <vue-menu-item index=\"1\">Processing Center</vue-menu-item>\\n' +\n      '  <vue-submenu index=\"2\">\\n' +\n      '    <template slot=\"title\">Workspace</template>\\n' +\n      '    <vue-menu-item index=\"2-1\">Item one</vue-menu-item>\\n' +\n      '    <vue-menu-item index=\"2-2\">Item two</vue-menu-item>\\n' +\n      '    <vue-menu-item index=\"2-3\">Item three</vue-menu-item>\\n' +\n      '  </vue-submenu>\\n' +\n      '  <vue-menu-item index=\"3\">Orders</vue-menu-item>\\n' +\n      '</vue-menu>\\n' +\n      '<vue-menu :default-active=\"activeIndex2\" mode=\"horizontal\" @select=\"handleSelect\">\\n' +\n      '  <vue-menu-item index=\"1\">Processing Center</vue-menu-item>\\n' +\n      '  <vue-submenu index=\"2\">\\n' +\n      '    <template slot=\"title\">Workspace</template>\\n' +\n      '    <vue-menu-item index=\"2-1\">Item one</vue-menu-item>\\n' +\n      '    <vue-menu-item index=\"2-2\">Item two</vue-menu-item>\\n' +\n      '    <vue-menu-item index=\"2-3\">Item three</vue-menu-item>\\n' +\n      '  </vue-submenu>\\n' +\n      '  <vue-menu-item index=\"3\">Orders</vue-menu-item>\\n' +\n      '</vue-menu>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function() {\\n' +\n      '      return {\\n' +\n      '        activeIndex1: \"1\",\\n' +\n      '        activeIndex2: \"3\"\\n' +\n      '      }\\n' +\n      '    },\\n' +\n      '    methods: {\\n' +\n      '      handleSelect: function(index, indexPath) {\\n' +\n      '        this.$notify({title: \\'Selected Index: \\' + index});\\n' +\n      '        this.$notify({title: \\'Selected Path Index: \\' + indexPath.map(function(index) {return index}).join(\\', \\')});\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'navMenu2',\n    label: 'navMenuDemo.samples2.label',\n    description: 'navMenuDemo.samples2.description',\n    template: '<div class=\"source\"><vue-row class=\"tac\"><vue-col :span=\"8\"><h4>With icons</h4><vue-menu default-active=\"2\" class=\"vue-menu-vertical-demo\" @open=\"handleOpen\" @close=\"handleClose\"><vue-submenu index=\"1\"><template slot=\"title\"><i class=\"vue-icon-message\"></i>Navigator one</template><vue-menu-item-group><template slot=\"title\">Groups one</template><vue-menu-item index=\"1-1\">Item one</vue-menu-item><vue-menu-item index=\"1-2\">Item two</vue-menu-item></vue-menu-item-group><vue-menu-item-group title=\"Groups2\"><vue-menu-item index=\"1-3\">Item three</vue-menu-item></vue-menu-item-group><vue-submenu index=\"1-4\"><template slot=\"title\">Item four</template><vue-menu-item index=\"1-4-1\">Item one</vue-menu-item></vue-submenu></vue-submenu><vue-menu-item index=\"2\"><i class=\"vue-icon-menu\"></i>Navigator two</vue-menu-item><vue-menu-item index=\"3\"><i class=\"vue-icon-setting\"></i>Navigator three</vue-menu-item></vue-menu></vue-col><vue-col :span=\"8\"><h4>Without icons</h4><vue-menu default-active=\"2\" class=\"vue-menu-vertical-demo\" @open=\"handleOpen\" @close=\"handleClose\" theme=\"dark\"><vue-submenu index=\"1\"><template slot=\"title\">Navigator one</template><vue-menu-item-group title=\"Groups one\"><vue-menu-item index=\"1-1\">Item one</vue-menu-item><vue-menu-item index=\"1-2\">Item two</vue-menu-item></vue-menu-item-group><vue-menu-item-group title=\"Groups2\"><vue-menu-item index=\"1-3\">Item three</vue-menu-item></vue-menu-item-group><vue-submenu index=\"1-4\"><template slot=\"title\">Item four</template><vue-menu-item index=\"1-4-1\">Item one</vue-menu-item></vue-submenu></vue-submenu><vue-menu-item index=\"2\">Navigator two</vue-menu-item><vue-menu-item index=\"3\">Navigator three</vue-menu-item></vue-menu></vue-col><vue-col :span=\"8\"><h4>Groups</h4><vue-menu mode=\"vertical\" default-active=\"1\" class=\"vue-menu-vertical-demo\"><vue-menu-item-group title=\"Groups one\"><vue-menu-item index=\"1\"><i class=\"vue-icon-message\"></i>Navigator one</vue-menu-item><vue-menu-item index=\"2\"><i class=\"vue-icon-message\"></i>Navigator two</vue-menu-item></vue-menu-item-group><vue-menu-item-group title=\"Groups two\"><vue-menu-item index=\"3\"><i class=\"vue-icon-message\"></i>Navigator three</vue-menu-item><vue-menu-item index=\"4\"><i class=\"vue-icon-message\"></i>Navigator four</vue-menu-item></vue-menu-item-group></vue-menu></vue-col></vue-row></div>',\n    parameter: {\n      methods: {\n        handleOpen: function (index, indexPath) {\n          this.$notify({ title: 'Opened Index: ' + index });\n          this.$notify({ title: 'Opened Path Index: ' + indexPath.map(function (index) { return index }).join(', ') });\n        },\n        handleClose: function (index, indexPath) {\n          this.$notify({ title: 'Closed Index: ' + index });\n          this.$notify({ title: 'Closed Path Index: ' + indexPath.map(function (index) { return index }).join(', ') });\n        }\n      }\n    },\n    code: '<vue-row class=\"tac\">\\n' +\n      '  <vue-col :span=\"8\">\\n' +\n      '    <h4>With icons</h4>\\n' +\n      '    <vue-menu default-active=\"2\" class=\"vue-menu-vertical-demo\" @open=\"handleOpen\" @close=\"handleClose\">\\n' +\n      '      <vue-submenu index=\"1\">\\n' +\n      '        <template slot=\"title\"><i class=\"vue-icon-message\"></i>Navigator one</template>\\n' +\n      '        <vue-menu-item-group>\\n' +\n      '          <template slot=\"title\">Groups one</template>\\n' +\n      '          <vue-menu-item index=\"1-1\">Item one</vue-menu-item>\\n' +\n      '          <vue-menu-item index=\"1-2\">Item two</vue-menu-item>\\n' +\n      '        </vue-menu-item-group>\\n' +\n      '        <vue-menu-item-group title=\"Groups2\">\\n' +\n      '          <vue-menu-item index=\"1-3\">Item three</vue-menu-item>\\n' +\n      '        </vue-menu-item-group>\\n' +\n      '        <vue-submenu index=\"1-4\">\\n' +\n      '          <template slot=\"title\">Item four</template>\\n' +\n      '          <vue-menu-item index=\"1-4-1\">Item one</vue-menu-item>\\n' +\n      '        </vue-submenu>\\n' +\n      '      </vue-submenu>\\n' +\n      '      <vue-menu-item index=\"2\"><i class=\"vue-icon-menu\"></i>Navigator two</vue-menu-item>\\n' +\n      '      <vue-menu-item index=\"3\"><i class=\"vue-icon-setting\"></i>Navigator three</vue-menu-item>\\n' +\n      '    </vue-menu>\\n' +\n      '  </vue-col>\\n' +\n      '  <vue-col :span=\"8\">\\n' +\n      '    <h4>Without icons</h4>\\n' +\n      '    <vue-menu default-active=\"2\" class=\"vue-menu-vertical-demo\" @open=\"handleOpen\" @close=\"handleClose\" theme=\"dark\">\\n' +\n      '      <vue-submenu index=\"1\">\\n' +\n      '        <template slot=\"title\">Navigator one</template>\\n' +\n      '        <vue-menu-item-group title=\"Groups one\">\\n' +\n      '          <vue-menu-item index=\"1-1\">Item one</vue-menu-item>\\n' +\n      '          <vue-menu-item index=\"1-2\">Item two</vue-menu-item>\\n' +\n      '        </vue-menu-item-group>\\n' +\n      '        <vue-menu-item-group title=\"Groups2\">\\n' +\n      '          <vue-menu-item index=\"1-3\">Item three</vue-menu-item>\\n' +\n      '        </vue-menu-item-group>\\n' +\n      '        <vue-submenu index=\"1-4\">\\n' +\n      '          <template slot=\"title\">Item four</template>\\n' +\n      '          <vue-menu-item index=\"1-4-1\">Item one</vue-menu-item>\\n' +\n      '        </vue-submenu>\\n' +\n      '      </vue-submenu>\\n' +\n      '      <vue-menu-item index=\"2\">Navigator two</vue-menu-item>\\n' +\n      '      <vue-menu-item index=\"3\">Navigator three</vue-menu-item>\\n' +\n      '    </vue-menu>\\n' +\n      '  </vue-col>\\n' +\n      '  <vue-col :span=\"8\">\\n' +\n      '    <h4>Groups</h4>\\n' +\n      '    <vue-menu mode=\"vertical\" default-active=\"1\" class=\"vue-menu-vertical-demo\">\\n' +\n      '      <vue-menu-item-group title=\"Groups one\">\\n' +\n      '        <vue-menu-item index=\"1\"><i class=\"vue-icon-message\"></i>Navigator one</vue-menu-item>\\n' +\n      '        <vue-menu-item index=\"2\"><i class=\"vue-icon-message\"></i>Navigator two</vue-menu-item>\\n' +\n      '      </vue-menu-item-group>\\n' +\n      '      <vue-menu-item-group title=\"Groups two\">\\n' +\n      '        <vue-menu-item index=\"3\"><i class=\"vue-icon-message\"></i>Navigator three</vue-menu-item>\\n' +\n      '        <vue-menu-item index=\"4\"><i class=\"vue-icon-message\"></i>Navigator four</vue-menu-item>\\n' +\n      '      </vue-menu-item-group>\\n' +\n      '    </vue-menu>\\n' +\n      '  </vue-col>\\n' +\n      '</vue-row>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    methods: {\\n' +\n      '      handleOpen: function(index, indexPath) {\\n' +\n      '        this.$notify({title: \\'Opened Index: \\' + index});\\n' +\n      '        this.$notify({title: \\'Opened Path Index: \\' + indexPath.map(function(index) {return index}).join(\\', \\')});\\n' +\n      '      },\\n' +\n      '      handleClose: function(index, indexPath) {\\n' +\n      '        this.$notify({title: \\'Closed Index: \\' + index});\\n' +\n      '        this.$notify({title: \\'Closed Path Index: \\' + indexPath.map(function(index) {return index}).join(\\', \\')});\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'navMenu8',\n    label: 'navMenuDemo.samples8.label',\n    description: 'navMenuDemo.samples8.description',\n    template: '<div class=\"source\"><vue-radio-group v-model=\"isCollapse\" style=\"margin-bottom: 20px;\"><vue-radio-button :label=\"false\">expand</vue-radio-button><vue-radio-button :label=\"true\">collapse</vue-radio-button></vue-radio-group>'\n    + '<vue-row>'\n    + '  <vue-col :span=\"8\">'\n    + '    <vue-menu theme=\"dark\" class=\"vue-menu-vertical-demo\" :collapse=\"isCollapse\" >'\n    + '    <vue-submenu index=\"1\">'\n    + '      <template slot=\"title\">'\n    + '        <i class=\"vue-icon-user\"></i>'\n    + '        <span slot=\"title\">Navigator One</span>'\n    + '      </template>'\n    + '      <vue-menu-item-group>'\n    + '        <span slot=\"title\">Group One</span>'\n    + '        <vue-menu-item index=\"1-1\">item one</vue-menu-item>'\n    + '        <vue-menu-item index=\"1-2\">item two</vue-menu-item>'\n    + '      </vue-menu-item-group>'\n    + '      <vue-menu-item-group title=\"Group Two\">'\n    + '        <vue-menu-item index=\"1-3\">item three</vue-menu-item>'\n    + '      </vue-menu-item-group>'\n    + '      <vue-submenu index=\"1-4\">'\n    + '        <span slot=\"title\">item four</span>'\n    + '        <vue-menu-item index=\"1-4-1\">item one</vue-menu-item>'\n    + '        <vue-menu-item index=\"1-4-2\">item two</vue-menu-item>'\n    + '        <vue-menu-item index=\"1-4-3\">item three</vue-menu-item>'\n    + '      </vue-submenu>'\n    + '    </vue-submenu>'\n    + '    <vue-menu-item index=\"2\">'\n    + '      <i class=\"vue-icon-menu\"></i>'\n    + '      <span slot=\"title\">Navigator Two</span>'\n    + '    </vue-menu-item>'\n    + '    <vue-menu-item index=\"3\" disabled>'\n    + '      <i class=\"vue-icon-document\"></i>'\n    + '      <span slot=\"title\">Navigator Three</span>'\n    + '    </vue-menu-item>'\n    + '    <vue-menu-item index=\"4\">'\n    + '      <i class=\"vue-icon-setting\"></i>'\n    + '      <span slot=\"title\">Navigator Four</span>'\n    + '    </vue-menu-item>'\n    + '  </vue-menu>'\n    + '  </vue-col>'\n    + '  <vue-col :span=\"16\"></vue-col>'\n    + '</vue-row>'\n    +'</div>',\n    parameter: {\n      data: function () {\n        return {\n          isCollapse: true\n        }\n      },\n      methods: {\n      }\n    },\n    code: '<vue-radio-group v-model=\"isCollapse\" style=\"margin-bottom: 20px;\">\\n' + \n    '  <vue-radio-button :label=\"false\">expand</vue-radio-button>\\n' +\n    '  <vue-radio-button :label=\"true\">collapse</vue-radio-button>\\n' +\n    '</vue-radio-group>\\n' +\n    '<vue-row>\\n' +\n    '  <vue-col :span=\"8\">\\n' +\n    '    <vue-menu theme=\"dark\" class=\"vue-menu-vertical-demo\" :collapse=\"isCollapse\" >\\n' +\n    '    <vue-submenu index=\"1\">\\n' +\n    '      <template slot=\"title\">\\n' +\n    '        <i class=\"vue-icon-user\"></i>\\n' +\n    '        <span slot=\"title\">Navigator One</span>\\n' +\n    '      </template>\\n' +\n    '      <vue-menu-item-group>\\n' +\n    '        <span slot=\"title\">Group One</span>\\n' +\n    '        <vue-menu-item index=\"1-1\">item one</vue-menu-item>\\n' +\n    '        <vue-menu-item index=\"1-2\">item two</vue-menu-item>\\n' +\n    '      </vue-menu-item-group>\\n' +\n    '      <vue-menu-item-group title=\"Group Two\">\\n' +\n    '        <vue-menu-item index=\"1-3\">item three</vue-menu-item>\\n' +\n    '      </vue-menu-item-group>\\n' +\n    '      <vue-submenu index=\"1-4\">\\n' +\n    '        <span slot=\"title\">item four</span>\\n' +\n    '        <vue-menu-item index=\"1-4-1\">item one</vue-menu-item>\\n' +\n    '        <vue-menu-item index=\"1-4-2\">item two</vue-menu-item>\\n' +\n    '        <vue-menu-item index=\"1-4-3\">item three</vue-menu-item>\\n' +\n    '      </vue-submenu>\\n' +\n    '    </vue-submenu>\\n' +\n    '    <vue-menu-item index=\"2\">\\n' +\n    '      <i class=\"vue-icon-menu\"></i>\\n' +\n    '      <span slot=\"title\">Navigator Two</span>\\n' +\n    '    </vue-menu-item>\\n' +\n    '    <vue-menu-item index=\"3\" disabled>\\n' +\n    '      <i class=\"vue-icon-document\"></i>\\n' +\n    '      <span slot=\"title\">Navigator Three</span>\\n' +\n    '    </vue-menu-item>\\n' +\n    '    <vue-menu-item index=\"4\">\\n' +\n    '      <i class=\"vue-icon-setting\"></i>\\n' +\n    '      <span slot=\"title\">Navigator Four</span>\\n' +\n    '    </vue-menu-item>\\n' +\n    '  </vue-menu>\\n' +\n    '  </vue-col>\\n' +\n    '  <vue-col :span=\"16\"></vue-col>\\n' +\n    '</vue-row>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function() {\\n' +\n      '      return {\\n' +\n      '        isCollapse: true\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'navMenu3',\n    label: 'Menu Attributes',\n    template: '<event-table :data=\"tableData\"></event-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"mode\",\n            column2: \"navMenuDemo.samples3.row1column2\",\n            column3: \"String\",\n            column4: \"horizontal, vertical\",\n            column5: \"vertical\"\n          }, {\n            column1: \"theme\",\n            column2: \"navMenuDemo.samples3.row2column2\",\n            column3: \"String\",\n            column4: \"light, dark\",\n            column5: \"light\"\n          }, {\n            column1: \"default-active\",\n            column2: \"navMenuDemo.samples3.row3column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"default-openeds\",\n            column2: \"navMenuDemo.samples3.row4column2\",\n            column3: \"Array\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"unique-opened\",\n            column2: \"navMenuDemo.samples3.row5column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"menu-trigger\",\n            column2: \"navMenuDemo.samples3.row6column2\",\n            column3: \"String\",\n            column4: \"hover, click\",\n            column5: \"hover\"\n          }, {\n            column1: \"router\",\n            column2: \"navMenuDemo.samples3.row7column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'navMenu4',\n    label: 'Menu Events',\n    template: '<event-table :data=\"tableData\"></event-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"select\",\n            column2: \"navMenuDemo.samples4.row1column2\",\n            column3: \"navMenuDemo.samples4.row1column3\"\n          }, {\n            column1: \"open\",\n            column2: \"navMenuDemo.samples4.row2column2\",\n            column3: \"navMenuDemo.samples4.row2column3\"\n          }, {\n            column1: \"close\",\n            column2: \"navMenuDemo.samples4.row3column2\",\n            column3: \"navMenuDemo.samples4.row3column3\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'navMenu5',\n    label: 'SubMenu Attributes',\n    template: '<event-table :data=\"tableData\"></event-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"index\",\n            column2: \"navMenuDemo.samples5.row1column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'navMenu6',\n    label: 'Menu Item Attributes',\n    template: '<event-table :data=\"tableData\"></event-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"index\",\n            column2: \"navMenuDemo.samples6.row1column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"route\",\n            column2: \"navMenuDemo.samples6.row2column2\",\n            column3: \"Object\",\n            column4: \"\",\n            column5: \"\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'navMenu7',\n    label: 'Menu Group Attributes',\n    template: '<event-table :data=\"tableData\"></event-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"title\",\n            column2: \"navMenuDemo.samples7.row1column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }]\n};\nmodule.exports = navMenuDemo;\n\n","'use strict';\nvar noteDemo = {\n  path: '/note',\n  name: 'note',\n  head: {\n    label: 'noteDemo.label',\n    description: 'noteDemo.description'\n  },\n  samples: [{\n    id: 'note1',\n    label: 'noteDemo.samples1.label',\n    description: 'noteDemo.samples1.description',\n    template: '<div class=\"source\"><vue-note title=\"Success Note\" type=\"success\">More text description...</vue-note><vue-note title=\"Info Note\">More text description...</vue-note><vue-note title=\"Warning Note\" type=\"warning\">More text description...</vue-note><vue-note title=\"Error Note\" type=\"error\">More text description...</vue-note><vue-note plain title=\"Success Note\" type=\"success\">More text description...</vue-note><vue-note plain title=\"Info Note\">More text description...</vue-note><vue-note plain title=\"Warning Note\" type=\"warning\">More text description...</vue-note><vue-note plain title=\"Error Note\" type=\"error\">More text description...</vue-note></div>',\n    code: '<vue-note title=\"Success Note\" type=\"success\">More text description...</vue-note>\\n<vue-note title=\"Info Note\">More text description...</vue-note>\\n<vue-note title=\"Warning Note\" type=\"warning\">More text description...</vue-note>\\n<vue-note title=\"Error Note\" type=\"error\">More text description...</vue-note>\\n<vue-note plain title=\"Success Note\" type=\"success\">More text description...</vue-note>\\n<vue-note plain title=\"Info Note\">More text description...</vue-note>\\n<vue-note plain title=\"Warning Note\" type=\"warning\">More text description...</vue-note>\\n<vue-note plain title=\"Error Note\" type=\"error\">More text description...</vue-note>'\n  }, {\n    id: 'note2',\n    label: 'Attributes',\n    template: '<attr-table :data=\"tableData\"></attr-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"title\",\n            column2: \"noteDemo.samples2.row1column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"type\",\n            column2: \"noteDemo.samples2.row2column2\",\n            column3: \"String\",\n            column4: \"success, warning, info, error\",\n            column5: \"info\"\n          }, {\n            column1: \"plain\",\n            column2: \"noteDemo.samples2.row3column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }]\n};\nmodule.exports = noteDemo;\n","'use strict';\nvar notificationDemo = {\n  path: '/notification',\n  name: 'notification',\n  head: {\n    label: 'notificationDemo.label',\n    description: 'notificationDemo.description'\n  },\n  samples: [{\n    id: 'notification1',\n    label: 'notificationDemo.samples1.label',\n    description: 'notificationDemo.samples1.description',\n    template: '<div class=\"source\"><vue-row class=\"margin-bottom20\"><vue-button plain @click=\"open1\">Auto off</vue-button><vue-button plain @click=\"open2\">Can not Auto off</vue-button></vue-row><vue-row><vue-button style=\"width:100px\" plain @click=\"open3\">success</vue-button><vue-button style=\"width:100px\" plain @click=\"open4\">warning</vue-button><vue-button style=\"width:100px\" plain @click=\"open5\">info</vue-button><vue-button style=\"width:100px\" plain @click=\"open6\">error</vue-button></vue-row></div>',\n    parameter: {\n      methods: {\n        open1: function () {\n          var createElement = this.$createElement;\n          this.$notify({\n            title: 'Close',\n            message: createElement('i', {\n              style: 'color: teal'\n            }, 'I can auto off')\n          });\n        },\n        open2: function () {\n          var self = this;\n          self.$notify({\n            title: 'Can not close',\n            message: 'I Can not Auto off',\n            duration: 0,\n            onClose: function () {\n              self.$notify({ message: 'Closing', position: \"center-center\", iconClass: 'vue-icon-loading', customClass: \"notification-demo\" });\n            }\n          });\n        },\n        open3: function () {\n          this.$notify({\n            title: 'Success',\n            message: 'I\\'m success notify',\n            type: 'success'\n          });\n        },\n        open4: function () {\n          this.$notify({\n            title: 'Warning',\n            message: 'I\\'m warning notify',\n            type: 'warning'\n          });\n        },\n        open5: function () {\n          this.$notify.info({\n            title: 'Info',\n            message: 'I\\'m info notify'\n          });\n        },\n        open6: function () {\n          this.$notify.error({\n            title: 'Error',\n            message: 'I\\'m error notify'\n          });\n        }\n      }\n    },\n    code: '<vue-button plain @click=\"open1\">Auto off</vue-button>\\n' +\n      '<vue-button plain @click=\"open2\">Can not Auto off</vue-button>\\n' +\n      '<vue-button style=\"width:100px\" plain @click=\"open3\">success</vue-button>\\n' +\n      '<vue-button style=\"width:100px\" plain @click=\"open4\">warning</vue-button>\\n' +\n      '<vue-button style=\"width:100px\" plain @click=\"open5\">info</vue-button>\\n' +\n      '<vue-button style=\"width:100px\" plain @click=\"open6\">error</vue-button>\\n\\n' +\n      '<style>\\n' +\n      '  .notification-demo {\\n' +\n      '    color: #20a0ff;\\n' +\n      '    background-color:#f0f0f0;\\n' +\n      '  }\\n' +\n      '</style>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    methods: {\\n' +\n      '      open1: function () {\\n' +\n      '        var createElement = this.$createElement;\\n' +\n      '        this.$notify({\\n' +\n      '          title: \"Close\",\\n' +\n      '          message: createElement(\"i\", {\\n' +\n      '            style: \"color: teal\"\\n' +\n      '          }, \"I can auto off\")\\n' +\n      '        });\\n' +\n      '      },\\n' +\n      '      open2: function () {\\n' +\n      '        var self = this;\\n' +\n      '        self.$notify({\\n' +\n      '          title: \"Can not close\",\\n' +\n      '          message: \"I Can not Auto off\",\\n' +\n      '          duration: 0,\\n' +\n      '          onClose: function () {\\n' +\n      '            self.$notify({\\n' +\n      '              message: \"Closing\",\\n' +\n      '              position: \"center-center\",\\n' +\n      '              iconClass: \"vue-icon-loading\",\\n' +\n      '              customClass:\"notification-demo\"\\n' +\n      '            });\\n' +\n      '          }\\n' +\n      '        });\\n' +\n      '      },\\n' +\n      '      open3: function () {\\n' +\n      '        this.$notify({\\n' +\n      '          title: \"Success\",\\n' +\n      '          message: \"I\\'m success notify\",\\n' +\n      '          type: \"success\"\\n' +\n      '        });\\n' +\n      '      },\\n' +\n      '      open4: function () {\\n' +\n      '        this.$notify({\\n' +\n      '          title: \"Warning\",\\n' +\n      '          message: \"I\\'m warning notify\",\\n' +\n      '          type: \"warning\"\\n' +\n      '        });\\n' +\n      '      },\\n' +\n      '      open5: function () {\\n' +\n      '        this.$notify.info({\\n' +\n      '          title: \"Info\",\\n' +\n      '          message: \"I\\'m info notify\"\\n' +\n      '        });\\n' +\n      '      },\\n' +\n      '      open6: function () {\\n' +\n      '        this.$notify.error({\\n' +\n      '          title: \"Error\",\\n' +\n      '          message: \"I\\'m error notify\"\\n' +\n      '        });\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'notification2',\n    label: 'notificationDemo.samples2.label',\n    description: 'notificationDemo.samples2.description',\n    template: '<div class=\"source\"><vue-row class=\"margin-bottom20\"><vue-col :span=\"8\"><vue-button style=\"width:120px\" plain @click=\"open1\">top left</vue-button></vue-col><vue-col :span=\"8\"><vue-button style=\"width:120px\" plain @click=\"open2\">top</vue-button></vue-col><vue-col :span=\"8\"><vue-button style=\"width:120px\" plain @click=\"open3\">top right</vue-button></vue-col></vue-row><vue-row class=\"margin-bottom20\"><vue-col :span=\"8\"><vue-button style=\"width:120px\" plain @click=\"open4\">left</vue-button></vue-col><vue-col :span=\"8\"><vue-button style=\"width:120px\" plain @click=\"open5\">center</vue-button></vue-col><vue-col :span=\"8\"><vue-button style=\"width:120px\" plain @click=\"open6\">right</vue-button></vue-col></vue-row><vue-row><vue-col :span=\"8\"><vue-button style=\"width:120px\" plain @click=\"open7\">bottom left</vue-button></vue-col><vue-col :span=\"8\"><vue-button style=\"width:120px\" plain @click=\"open8\">bottom</vue-button></vue-col><vue-col :span=\"8\"><vue-button style=\"width:120px\" plain @click=\"open9\">bottom right</vue-button></vue-col></vue-row></div>',\n    parameter: {\n      methods: {\n        open1: function () {\n          this.$notify.info({\n            message: 'I\\'m on the top left',\n            position: \"top-left\"\n          });\n        },\n        open2: function () {\n          this.$notify.info({\n            message: 'I\\'m on the top',\n            position: \"top-center\"\n          });\n        },\n        open3: function () {\n          this.$notify.info({\n            message: 'I\\'m on the top right'\n          });\n        },\n        open4: function () {\n          this.$notify.info({\n            message: 'I\\'m on the left',\n            position: \"center-left\"\n          });\n        },\n        open5: function () {\n          this.$notify.info({\n            message: 'I\\'m on the center',\n            position: \"center-center\"\n          });\n        },\n        open6: function () {\n          this.$notify.info({\n            message: 'I\\'m on the right',\n            position: \"center-right\"\n          });\n        },\n        open7: function () {\n          this.$notify.info({\n            message: 'I\\'m on the bottom left',\n            position: \"bottom-left\"\n          });\n        },\n        open8: function () {\n          this.$notify.info({\n            message: 'I\\'m on the bottom',\n            position: \"bottom-center\"\n          });\n        },\n        open9: function () {\n          this.$notify.info({\n            message: 'I\\'m on the bottom right',\n            position: \"bottom-right\"\n          });\n        }\n      }\n    },\n    code: '<vue-button style=\"width:120px\" plain @click=\"open1\">top left</vue-button>\\n' +\n      '<vue-button style=\"width:120px\" plain @click=\"open2\">top</vue-button>\\n' +\n      '<vue-button style=\"width:120px\" plain @click=\"open3\">top right</vue-button>\\n' +\n      '<vue-button style=\"width:120px\" plain @click=\"open4\">left</vue-button>\\n' +\n      '<vue-button style=\"width:120px\" plain @click=\"open5\">center</vue-button>\\n' +\n      '<vue-button style=\"width:120px\" plain @click=\"open6\">right</vue-button>\\n' +\n      '<vue-button style=\"width:120px\" plain @click=\"open7\">bottom left</vue-button>\\n' +\n      '<vue-button style=\"width:120px\" plain @click=\"open8\">bottom</vue-button>\\n' +\n      '<vue-button style=\"width:120px\" plain @click=\"open9\">bottom right</vue-button>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    methods: {\\n' +\n      '      open1: function() {\\n' +\n      '        this.$notify.info({\\n' +\n      '          message: \"I\\'m on the top left\",\\n' +\n      '          position: \"top-left\"\\n' +\n      '        });\\n' +\n      '      },\\n' +\n      '      open2: function() {\\n' +\n      '        this.$notify.info({\\n' +\n      '          message: \"I\\'m on the top\",\\n' +\n      '          position: \"top-center\"\\n' +\n      '        });\\n' +\n      '      },\\n' +\n      '      open3: function() {\\n' +\n      '        this.$notify.info({\\n' +\n      '          message: \"I\\'m on the top right\"\\n' +\n      '        });\\n' +\n      '      },\\n' +\n      '      open4: function() {\\n' +\n      '        this.$notify.info({\\n' +\n      '          message: \"I\\'m on the left\",\\n' +\n      '          position: \"center-left\"\\n' +\n      '        });\\n' +\n      '      },\\n' +\n      '      open5: function() {\\n' +\n      '        this.$notify.info({\\n' +\n      '          message: \"I\\'m on the center\",\\n' +\n      '          position: \"center-center\"\\n' +\n      '        });\\n' +\n      '      },\\n' +\n      '      open6: function() {\\n' +\n      '        this.$notify.info({\\n' +\n      '          message: \"I\\'m on the right\",\\n' +\n      '          position: \"center-right\"\\n' +\n      '        });\\n' +\n      '      },\\n' +\n      '      open7: function() {\\n' +\n      '        this.$notify.info({\\n' +\n      '          message: \"I\\'m on the bottom left\",\\n' +\n      '          position: \"bottom-left\"\\n' +\n      '        });\\n' +\n      '      },\\n' +\n      '      open8: function() {\\n' +\n      '        this.$notify.info({\\n' +\n      '          message: \"I\\'m on the bottom\",\\n' +\n      '          position: \"bottom-center\"\\n' +\n      '        });\\n' +\n      '      },\\n' +\n      '      open9: function() {\\n' +\n      '        this.$notify.info({\\n' +\n      '          message: \"I\\'m on the bottom right\",\\n' +\n      '          position: \"bottom-right\"\\n' +\n      '        });\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'notification3',\n    label: 'Options',\n    template: '<attr-table :data=\"tableData\"></attr-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"title\",\n            column2: \"notificationDemo.samples3.row1column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"message\",\n            column2: \"notificationDemo.samples3.row2column2\",\n            column3: \"String / VNode\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"type\",\n            column2: \"notificationDemo.samples3.row3column2\",\n            column3: \"String\",\n            column4: \"success, info, warning, error\",\n            column5: \"\"\n          }, {\n            column1: \"iconClass\",\n            column2: \"notificationDemo.samples3.row4column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"customClass\",\n            column2: \"notificationDemo.samples3.row5column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"duration\",\n            column2: \"notificationDemo.samples3.row6column2\",\n            column3: \"Number\",\n            column4: \"\",\n            column5: \"3000\"\n          }, {\n            column1: \"showClose\",\n            column2: \"notificationDemo.samples3.row9column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"onClose\",\n            column2: \"notificationDemo.samples3.row7column2\",\n            column3: \"Function\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"position\",\n            column2: \"notificationDemo.samples3.row8column2\",\n            column3: \"String\",\n            column4: \"top-left, top-center, top-right, center-left, center-center, center-right, bottom-left, bottom-center, bottom-right\",\n            column5: \"top-right\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }]\n};\nmodule.exports = notificationDemo;\n","'use strict';\nvar paginationDemo = {\n  path: '/pagination',\n  name: 'pagination',\n  head: {\n    label: 'paginationDemo.label',\n    description: 'paginationDemo.description'\n  },\n  samples: [{\n    id: 'pagination1',\n    label: 'paginationDemo.samples1.label',\n    description: 'paginationDemo.samples1.description',\n    template: '<div class=\"source\"><vue-row class=\"margin-bottom20\" type=\"flex\" justify=\"center\"><vue-col :span=\"6\"><span class=\"demonstration\">{{$t(\\'paginationDemo.samples1.label1\\')}}</span></vue-col><vue-col :span=\"16\"><vue-pagination layout=\"prev, pager, next\" :page-size=\"10\" :total=\"50\"></vue-pagination></vue-col></vue-row><vue-row class=\"margin-bottom20\" type=\"flex\" justify=\"center\"><vue-col :span=\"6\"><span class=\"demonstration\">{{$t(\\'paginationDemo.samples1.label2\\')}}</span></vue-col><vue-col :span=\"16\"><vue-pagination layout=\"prev, pager, next\" :page-size=\"1\" :total=\"50\"></vue-pagination></vue-col></vue-row><vue-row type=\"flex\" justify=\"center\"><vue-col :span=\"6\"><span class=\"demonstration\">{{$t(\\'paginationDemo.samples1.label3\\')}}</span></vue-col><vue-col :span=\"16\"><vue-pagination layout=\"prev, pager, next\" :page-size=\"10\" :total=\"50\" small></vue-pagination></vue-col></vue-row></div>',\n    code: '<span class=\"demonstration\">{{$t(\\'paginationDemo.samples1.label1\\')}}</span>\\n' +\n      '<vue-pagination layout=\"prev, pager, next\" :page-size=\"10\" :total=\"50\">\\n' +\n      '</vue-pagination>\\n' +\n      '<span class=\"demonstration\">{{$t(\\'paginationDemo.samples1.label2\\')}}</span>\\n' +\n      '<vue-pagination layout=\"prev, pager, next\" :page-size=\"1\" :total=\"50\">\\n' +\n      '</vue-pagination>\\n' +\n      '<span class=\"demonstration\">{{$t(\\'paginationDemo.samples1.label3\\')}}</span>\\n' +\n      '<vue-pagination layout=\"prev, pager, next\" :page-size=\"10\" :total=\"50\" small>\\n' +\n      '</vue-pagination>'\n  }, {\n    id: 'pagination2',\n    label: 'paginationDemo.samples2.label',\n    description: 'paginationDemo.samples2.description',\n    template: '<div class=\"source\"><vue-row class=\"margin-bottom20\" type=\"flex\" justify=\"center\"><vue-col :span=\"6\"><span class=\"demonstration\">{{$t(\\'paginationDemo.samples2.label1\\')}}</span></vue-col><vue-col :span=\"16\"><vue-pagination @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\" :current-page.sync=\"currentPage1\" :page-size=\"100\" layout=\"total, prev, pager, next\" :total=\"1000\"></vue-pagination></vue-col></vue-row><vue-row class=\"margin-bottom20\" type=\"flex\" justify=\"center\"><vue-col :span=\"6\"><span class=\"demonstration\">{{$t(\\'paginationDemo.samples2.label2\\')}}</span></vue-col><vue-col :span=\"16\"><vue-pagination @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\" :current-page.sync=\"currentPage2\" :page-sizes=\"[100, 200, 300, 400]\" :page-size=\"100\" layout=\"sizes, prev, pager, next\" :total=\"1000\"></vue-pagination></vue-col></vue-row><vue-row class=\"margin-bottom20\" type=\"flex\" justify=\"center\"><vue-col :span=\"6\"><span class=\"demonstration\">{{$t(\\'paginationDemo.samples2.label3\\')}}</span></vue-col><vue-col :span=\"16\"><vue-pagination @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\" :current-page.sync=\"currentPage3\" :page-size=\"100\" layout=\"prev, pager, next, jumper\" :total=\"1000\"></vue-pagination></vue-col></vue-row><vue-row type=\"flex\" justify=\"center\"><vue-col :span=\"6\"><span class=\"demonstration\">{{$t(\\'paginationDemo.samples2.label4\\')}}</span></vue-col><vue-col :span=\"16\"><vue-pagination @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\" :current-page=\"currentPage4\" :page-sizes=\"[100, 200, 300, 400]\" :page-size=\"100\" layout=\"total, sizes, prev, pager, next, jumper\" :total=\"400\"></vue-pagination></vue-col></vue-row></div>',\n    parameter: {\n      data: function () {\n        return {\n          currentPage1: 5,\n          currentPage2: 5,\n          currentPage3: 5,\n          currentPage4: 4\n        }\n      },\n      methods: {\n        handleSizeChange: function (val) {\n          this.$notify({ title: val + 'items per page' });\n        },\n        handleCurrentChange: function (val) {\n          this.$notify({ title: 'current page: ' + val });\n        }\n      }\n    },\n    code: '<span class=\"demonstration\">{{$t(\\'paginationDemo.samples2.label1\\')}}</span>\\n' +\n      '<vue-pagination @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\" :current-page.sync=\"currentPage1\" :page-size=\"100\" layout=\"total, prev, pager, next\" :total=\"1000\">\\n' +\n      '</vue-pagination>\\n' +\n      '<span class=\"demonstration\">{{$t(\\'paginationDemo.samples2.label2\\')}}</span>\\n' +\n      '<vue-pagination @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\" :current-page.sync=\"currentPage2\" :page-sizes=\"[100, 200, 300, 400]\" :page-size=\"100\" layout=\"sizes, prev, pager, next\" :total=\"1000\">\\n' +\n      '</vue-pagination>\\n' +\n      '<span class=\"demonstration\">{{$t(\\'paginationDemo.samples2.label3\\')}}</span>\\n' +\n      '<vue-pagination @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\" :current-page.sync=\"currentPage3\" :page-size=\"100\" layout=\"prev, pager, next, jumper\" :total=\"1000\">\\n' +\n      '</vue-pagination>\\n' +\n      '<span class=\"demonstration\">{{$t(\\'paginationDemo.samples2.label4\\')}}</span>\\n' +\n      '<vue-pagination @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\" :current-page=\"currentPage4\" :page-sizes=\"[100, 200, 300, 400]\" :page-size=\"100\" layout=\"total, sizes, prev, pager, next, jumper\" :total=\"400\">\\n' +\n      '</vue-pagination>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function() {\\n' +\n      '      return {\\n' +\n      '        currentPage1: 5,\\n' +\n      '        currentPage2: 5,\\n' +\n      '        currentPage3: 5,\\n' +\n      '        currentPage4: 4\\n' +\n      '      }\\n' +\n      '    },\\n' +\n      '    methods: {\\n' +\n      '      handleSizeChange: function(val) {\\n' +\n      '        this.$notify({title: val + \"items per page\"});\\n' +\n      '        },\\n' +\n      '        handleCurrentChange: function(val) {\\n' +\n      '        this.$notify({title: \"current page: \" + val});\\n' +\n      '        }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'pagination3',\n    label: 'Attributes',\n    template: '<attr-table :data=\"tableData\"></attr-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"small\",\n            column2: \"paginationDemo.samples3.row1column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"page-size\",\n            column2: \"paginationDemo.samples3.row2column2\",\n            column3: \"Number\",\n            column4: \"\",\n            column5: \"10\"\n          }, {\n            column1: \"total\",\n            column2: \"paginationDemo.samples3.row3column2\",\n            column3: \"Number\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"page-count\",\n            column2: \"paginationDemo.samples3.row4column2\",\n            column3: \"Number\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"current-page\",\n            column2: \"paginationDemo.samples3.row5column2\",\n            column3: \"Number\",\n            column4: \"\",\n            column5: \"1\"\n          }, {\n            column1: \"layout\",\n            column2: \"paginationDemo.samples3.row6column2\",\n            column3: \"String\",\n            column4: \"sizes, prev, pager, next, jumper, ->, total, slot\",\n            column5: \"prev, pager, next, jumper, ->, total\"\n          }, {\n            column1: \"page-sizes\",\n            column2: \"paginationDemo.samples3.row7column2\",\n            column3: \"[Number]\",\n            column4: \"\",\n            column5: \"[10, 20, 30, 40, 50, 100]\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'pagination4',\n    label: 'Events',\n    template: '<event-table :data=\"tableData\"></event-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"size-change\",\n            column2: \"paginationDemo.samples4.row1column2\",\n            column3: \"paginationDemo.samples4.row1column3\"\n          }, {\n            column1: \"current-change\",\n            column2: \"paginationDemo.samples4.row2column2\",\n            column3: \"paginationDemo.samples4.row2column3\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }]\n};\nmodule.exports = paginationDemo;\n","'use strict';\nvar pinDemo = {\n  path: '/pin',\n  name: 'pin',\n  head: {\n    label: 'pinDemo.label',\n    description: 'pinDemo.description'\n  },\n  samples: [{\n    id: 'pin1',\n    label: 'pinDemo.samples1.label',\n    description: 'pinDemo.samples1.description',\n    template: '<div class=\"source\"><vue-pin @change=\"change\"><vue-button type=\"primary\">Fixed at the top</vue-button></vue-pin></div>',\n    parameter: {\n      methods: {\n        change: function (status) {\n          this.$notify({ title: 'Status: ' + status });\n        }\n      }\n    },\n    code: '<vue-pin @change=\"change\">\\n  <vue-button type=\"primary\">Fixed at the top</vue-button>\\n</vue-pin>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    methods: {\\n' +\n      '      change: function(status) {\\n' +\n      '        this.$notify({title:\"Status: \" + status});\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'pin2',\n    label: 'pinDemo.samples2.label',\n    description: 'pinDemo.samples2.description',\n    template: '<div class=\"source\"><vue-pin :offset-top=\"200\"><vue-button type=\"primary\">Fixed at the top offset 200px</vue-button></vue-pin></div>',\n    code: '<vue-pin :offset-top=\"50\">\\n  <vue-button type=\"primary\">Fixed at the top offset 200px</vue-button>\\n</vue-pin>'\n  }, {\n    id: 'pin3',\n    label: 'pinDemo.samples3.label',\n    description: 'pinDemo.samples3.description',\n    template: '<div class=\"source\"><vue-pin :offset-bottom=\"20\"><vue-button type=\"primary\">Fixed at the bottom offset 20px</vue-button></vue-pin></div>',\n    code: '<vue-pin :offset-bottom=\"20\">\\n  <vue-button type=\"primary\">Fixed at the bottom offset 20px</vue-button>\\n</vue-pin>'\n  }, {\n    id: 'pin4',\n    label: 'pinDemo.samples4.label',\n    description: 'pinDemo.samples4.description',\n    template: '<div class=\"source\"><vue-row type=\"flex\" justify=\"center\"><vue-col :span=\"6\"><vue-pin :offset-bottom=\"0\" fixed><vue-button type=\"primary\">Always fixed at the bottom</vue-button></vue-pin></vue-col></vue-row></div>',\n    code: '<vue-pin :offset-bottom=\"0\" fixed>\\n  <vue-button type=\"primary\">Always fixed at the bottom</vue-button>\\n</vue-pin>'\n  }, {\n    id: 'pin5',\n    label: 'Attributes',\n    template: '<attr-table :data=\"tableData\"></attr-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"offset-top\",\n            column2: \"pinDemo.samples5.row1column2\",\n            column3: \"Number\",\n            column4: \"\",\n            column5: \"0\"\n          }, {\n            column1: \"offset-bottom\",\n            column2: \"pinDemo.samples5.row2column2\",\n            column3: \"Number\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"fixed\",\n            column2: \"pinDemo.samples5.row3column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'pin6',\n    label: 'Events',\n    template: '<event-table :data=\"tableData\"></event-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"change\",\n            column2: \"pinDemo.samples6.row1column2\",\n            column3: \"pinDemo.samples6.row1column3\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }]\n};\nmodule.exports = pinDemo;\n","'use strict';\nvar popoverDemo = {\n  path: '/popover',\n  name: 'popover',\n  head: {\n    label: 'popoverDemo.label',\n    description: 'popoverDemo.description'\n  },\n  samples: [{\n    id: 'popover1',\n    label: 'popoverDemo.samples1.label',\n    description: 'popoverDemo.samples1.description',\n    template: '<div class=\"source\"><vue-row><vue-col :span=\"6\"><vue-popover ref=\"popover1\" placement=\"top-start\" title=\"Title\" width=\"200\" trigger=\"hover\" content=\"This is content。\"></vue-popover><vue-popover ref=\"popover2\" placement=\"bottom\" title=\"Title\" trigger=\"click\" content=\"This is content。\"></vue-popover><vue-button v-popover:popover1>hover to activate</vue-button></vue-col><vue-col :span=\"6\"><vue-button v-popover:popover2>click to activate</vue-button></vue-col><vue-col :span=\"6\"><vue-popover placement=\"right\" title=\"Title\" width=\"200\" trigger=\"focus\" content=\"This is content。\"><vue-input slot=\"reference\" placeholder=\"focus to activate\"></vue-input></vue-popover></vue-col></vue-row></div>',\n    code: '<vue-popover ref=\"popover1\" placement=\"top-start\" title=\"Title\" width=\"200\" trigger=\"hover\" content=\"This is content。\"></vue-popover>\\n' +\n      '<vue-popover ref=\"popover2\" placement=\"bottom\" title=\"Title\" trigger=\"click\" content=\"This is content。\"></vue-popover>\\n' +\n      '<vue-button v-popover:popover1>hover to activate</vue-button>\\n' +\n      '<vue-button v-popover:popover2>click to activate</vue-button>\\n' +\n      '<vue-popover placement=\"right\" title=\"Title\" width=\"200\" trigger=\"focus\" content=\"This is content。\">\\n' +\n      '  <vue-input slot=\"reference\" placeholder=\"focus to activate\"></vue-input>\\n' +\n      '</vue-popover>'\n  }, {\n    id: 'popover2',\n    label: 'popoverDemo.samples2.label',\n    description: 'popoverDemo.samples2.description',\n    template: '<div class=\"source\"><vue-popover ref=\"popover\" placement=\"top-start\" trigger=\"click\" width=\"600\"><vue-xtable :data=\"gridData\"><vue-xtable-column width=\"150\" field=\"date\" title=\"date\"></vue-xtable-column><vue-xtable-column width=\"100\" field=\"name\" title=\"name\"></vue-xtable-column><vue-xtable-column min-width=\"300\" field=\"address\" title=\"address\"></vue-xtable-column></vue-xtable></vue-popover><vue-button v-popover:popover>Click to activate</vue-button></div>',\n    parameter: {\n      data: function () {\n        return {\n          gridData: [{\n            date: \"2016-05-02\",\n            name: \"Jack\",\n            address: \"New York City\"\n          }, {\n            date: \"2016-05-04\",\n            name: \"Jack\",\n            address: \"New York City\"\n          }, {\n            date: \"2016-05-01\",\n            name: \"Jack\",\n            address: \"New York City\"\n          }, {\n            date: \"2016-05-03\",\n            name: \"Jack\",\n            address: \"New York City\"\n          }]\n        };\n      }\n    },\n    code: '<vue-popover ref=\"popover\" placement=\"top-start\" trigger=\"click\" width=\"600\">\\n' +\n      '  <vue-xtable :data=\"gridData\">\\n' +\n      '    <vue-xtable-column width=\"150\" field=\"date\" title=\"date\"></vue-xtable-column>\\n' +\n      '    <vue-xtable-column width=\"100\" field=\"name\" title=\"name\"></vue-xtable-column>\\n' +\n      '    <vue-xtable-column width=\"350\" field=\"address\" title=\"address\"></vue-xtable-column>\\n' +\n      '  </vue-xtable>\\n' +\n      '</vue-popover>\\n' +\n      '<vue-button v-popover:popover>Click to activate</vue-button>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function() {\\n' +\n      '      return {\\n' +\n      '        gridData: [{\\n' +\n      '          date: \"2016-05-02\",\\n' +\n      '          name: \"Jack\",\\n' +\n      '          address: \"New York City\"\\n' +\n      '        }, {\\n' +\n      '          date: \"2016-05-04\",\\n' +\n      '          name: \"Jack\",\\n' +\n      '          address: \"New York City\"\\n' +\n      '        }, {\\n' +\n      '          date: \"2016-05-01\",\\n' +\n      '          name: \"Jack\",\\n' +\n      '          address: \"New York City\"\\n' +\n      '        }, {\\n' +\n      '          date: \"2016-05-03\",\\n' +\n      '          name: \"Jack\",\\n' +\n      '          address: \"New York City\"\\n' +\n      '        }]\\n' +\n      '      };\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'popover3',\n    label: 'popoverDemo.samples3.label',\n    description: 'popoverDemo.samples3.description',\n    template: '<div class=\"source\"><vue-popover ref=\"popover\" placement=\"top-start\" v-model=\"visible\" width=\"230\"><p>Are you sure to delete this?</p><div style=\"text-align: right; margin: 0\"><vue-button size=\"mini\" type=\"text\" @click=\"cancleHandle\">cancel</vue-button><vue-button type=\"primary\" size=\"mini\" @click=\"confirmHandle\">confirm</vue-button></div></vue-popover><vue-button v-popover:popover>Delete</vue-button></div>',\n    parameter: {\n      data: function () {\n        return {\n          visible: false\n        }\n      },\n      methods: {\n        cancleHandle: function () {\n          this.$notify({\n            title: \"Cancel\",\n          });\n          this.visible = false;\n        },\n        confirmHandle: function () {\n          this.$notify({\n            title: \"Confirm\",\n          });\n          this.visible = false;\n        }\n      }\n    },\n    code: '<vue-popover ref=\"popover\" placement=\"top-start\" v-model=\"visible\" width=\"230\">\\n' +\n      '  <p>Are you sure to delete this?</p>\\n' +\n      '  <div style=\"text-align: right; margin: 0\">\\n' +\n      '    <vue-button size=\"mini\" type=\"text\" @click=\"cancleHandle\">cancel</vue-button>\\n' +\n      '    <vue-button type=\"primary\" size=\"mini\" @click=\"confirmHandle\">confirm</vue-button>\\n' +\n      '  </div>\\n' +\n      '</vue-popover>\\n' +\n      '<vue-button v-popover:popover>Delete</vue-button>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '     data: function() {\\n' +\n      '       return {\\n' +\n      '         visible: false\\n' +\n      '       }\\n' +\n      '     },\\n' +\n      '     methods: {\\n' +\n      '       cancleHandle: function() {\\n' +\n      '         this.$notify({\\n' +\n      '           title: \"Cancel\",\\n' +\n      '         });\\n' +\n      '         this.visible = false;\\n' +\n      '       },\\n' +\n      '       confirmHandle: function() {\\n' +\n      '         this.$notify({\\n' +\n      '           title: \"Confirm\",\\n' +\n      '         });\\n' +\n      '         this.visible = false;\\n' +\n      '       }\\n' +\n      '     }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'popover4',\n    label: 'Attributes',\n    template: '<attr-table :data=\"tableData\"></attr-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"trigger\",\n            column2: \"popoverDemo.samples4.row1column2\",\n            column3: \"String\",\n            column4: \"click, focus, hover, manual\",\n            column5: \"click\"\n          }, {\n            column1: \"title\",\n            column2: \"popoverDemo.samples4.row2column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"content\",\n            column2: \"popoverDemo.samples4.row3column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"width\",\n            column2: \"popoverDemo.samples4.row4column2\",\n            column3: \"Number\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"placement\",\n            column2: \"popoverDemo.samples4.row5column2\",\n            column3: \"String\",\n            column4: \"top, top-start, top-end, bottom, bottom-start, bottom-end, left, left-start, left-end, right, right-start, right-end\",\n            column5: \"bottom\"\n          }, {\n            column1: \"disabled\",\n            column2: \"popoverDemo.samples4.row6column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"value(v-model)\",\n            column2: \"popoverDemo.samples4.row7column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"popper-class\",\n            column2: \"popoverDemo.samples4.row8column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"visible-arrow\",\n            column2: \"popoverDemo.samples4.row10column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"true\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'popover5',\n    label: 'Slots',\n    template: '<slot-table :data=\"tableData\"></slot-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"\",\n            column2: \"popoverDemo.samples5.row1column2\"\n          }, {\n            column1: \"reference\",\n            column2: \"popoverDemo.samples5.row2column2\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'popover6',\n    label: 'Events',\n    template: '<event-table :data=\"tableData\"></event-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"show\",\n            column2: \"popoverDemo.samples6.row1column2\",\n            column3: \"\"\n          }, {\n            column1: \"hide\",\n            column2: \"popoverDemo.samples6.row2column2\",\n            column3: \"\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }]\n};\nmodule.exports = popoverDemo;\n","'use strict';\nvar progressDemo = {\n  path: '/progress',\n  name: 'progress',\n  head: {\n    label: 'progressDemo.label',\n    description: 'progressDemo.description'\n  },\n  samples: [{\n    id: 'progress1',\n    label: 'progressDemo.samples1.label',\n    description: 'progressDemo.samples1.description',\n    template: '<div class=\"source\"><vue-row class=\"margin-bottom20\"><vue-progress :percentage=\"0\"></vue-progress></vue-row><vue-row class=\"margin-bottom20\"><vue-progress :percentage=\"50\" status=\"exception\"></vue-progress></vue-row><vue-row class=\"margin-bottom20\"><vue-progress :text-inside=\"true\" :stroke-width=\"18\" :percentage=\"70\"></vue-progress></vue-row><vue-row><vue-progress type=\"circle\" :percentage=\"100\" status=\"success\"></vue-progress></vue-row></div>',\n    code: '<vue-progress :percentage=\"0\"></vue-progress>\\n<vue-progress :percentage=\"50\" status=\"exception\"></vue-progress>\\n<vue-progress :text-inside=\"true\" :stroke-width=\"18\" :percentage=\"70\"></vue-progress>\\n<vue-progress type=\"circle\" :percentage=\"100\" status=\"success\"></vue-progress>\\n'\n  }, {\n    id: 'progress2',\n    label: 'Attributes',\n    template: '<attr-table :data=\"tableData\"></attr-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"percentage\",\n            column2: \"progressDemo.samples2.row1column2\",\n            column3: \"Number\",\n            column4: \"0-100\",\n            column5: \"0\"\n          }, {\n            column1: \"type\",\n            column2: \"progressDemo.samples2.row2column2\",\n            column3: \"String\",\n            column4: \"line, circle\",\n            column5: \"line\"\n          }, {\n            column1: \"stroke-width\",\n            column2: \"progressDemo.samples2.row3column2\",\n            column3: \"Number\",\n            column4: \"\",\n            column5: \"6\"\n          }, {\n            column1: \"text-inside\",\n            column2: \"progressDemo.samples2.row4column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"status\",\n            column2: \"progressDemo.samples2.row5column2\",\n            column3: \"String\",\n            column4: \"success, exception\",\n            column5: \"\"\n          }, {\n            column1: \"width\",\n            column2: \"progressDemo.samples2.row6column2\",\n            column3: \"Number\",\n            column4: \"\",\n            column5: \"126\"\n          }, {\n            column1: \"show-text\",\n            column2: \"progressDemo.samples2.row7column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"true\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }]\n};\nmodule.exports = progressDemo;\n\n","'use strict';\nvar radioDemo = {\n  path: '/radio',\n  name: 'radio',\n  head: {\n    label: 'radioDemo.label',\n    description: 'radioDemo.description'\n  },\n  samples: [{\n    id: 'radio1',\n    label: 'radioDemo.samples1.label',\n    description: 'radioDemo.samples1.description',\n    template: '<div class=\"source\"><vue-radio class=\"radio\" v-model=\"radio\" label=\"1\">Option 1</vue-radio><vue-radio class=\"radio\" v-model=\"radio\" label=\"2\">Option 2</vue-radio></div>',\n    parameter: {\n      data: function () {\n        return {\n          radio: \"1\"\n        }\n      }\n    },\n    code: '<vue-radio class=\"radio\" v-model=\"radio\" label=\"1\">Option 1</vue-radio>\\n<vue-radio class=\"radio\" v-model=\"radio\" label=\"2\">Option 2</vue-radio>\\n\\n<script>\\n  new Vue({\\n    data: function(){\\n      return {\\n        radio: \"1\"\\n      }\\n    }\\n  }).$mount();\\n</script>',\n  }, {\n    id: 'radio2',\n    label: 'radioDemo.samples2.label',\n    description: 'radioDemo.samples2.description',\n    template: '<div class=\"source\"><vue-radio disabled v-model=\"radio\" label=\"Disabled\">Disabled</vue-radio><vue-radio disabled v-model=\"radio\" label=\"Selected and Disabled\">Selected and Disabled</vue-radio></div>',\n    parameter: {\n      data: function () {\n        return {\n          radio: \"Selected and Disabled\"\n        }\n      }\n    },\n    code: '<vue-radio disabled v-model=\"radio\" label=\"Disabled\">Disabled</vue-radio>\\n<vue-radio disabled v-model=\"radio\" label=\"Selected and Disabled\">Selected and Disabled</vue-radio>\\n\\n<script>\\n  new Vue({\\n    data: function(){\\n      return {\\n        radio: \"Selected and Disabled\"\\n      }\\n    }\\n  }).$mount();\\n</script>',\n  }, {\n    id: 'radio3',\n    label: 'radioDemo.samples3.label',\n    description: 'radioDemo.samples3.description',\n    template: '<div class=\"source\"><vue-radio-group v-model=\"radio\"><vue-radio label=\"3\">Option A</vue-radio><vue-radio label=\"6\">Option B</vue-radio><vue-radio label=\"9\">Option C</vue-radio></vue-radio-group></div>',\n    parameter: {\n      data: function () {\n        return {\n          radio: '3'\n        }\n      }\n    },\n    code: '<vue-radio-group v-model=\"radio\">\\n  <vue-radio label=\"3\">Option A</vue-radio>\\n  <vue-radio label=\"6\">Option B</vue-radio>\\n  <vue-radio label=\"9\">Option C</vue-radio>\\n</vue-radio-group>\\n\\n<script>\\n  new Vue({\\n    data: function(){\\n      return {\\n        radio: \"3\"\\n      }\\n    }\\n  }).$mount();\\n</script>',\n  }, {\n    id: 'radio4',\n    label: 'radioDemo.samples4.label',\n    description: 'radioDemo.samples4.description',\n    template: '<div class=\"source\"><vue-radio-group v-model=\"radio1\" size=\"large\" fill=\"#324057\" text-color=\"#a4aebd\"><vue-radio-button label=\"New York\"></vue-radio-button><vue-radio-button label=\"Washington\"></vue-radio-button><vue-radio-button label=\"Los Angeles\"></vue-radio-button><vue-radio-button label=\"Chicago\"></vue-radio-button></vue-radio-group><div style=\"margin: 15px 0;\"></div><vue-radio-group v-model=\"radio2\"><vue-radio-button label=\"New York\"></vue-radio-button><vue-radio-button label=\"Washington\" :disabled=\"true\"></vue-radio-button><vue-radio-button label=\"Los Angeles\"></vue-radio-button><vue-radio-button label=\"Chicago\"></vue-radio-button></vue-radio-group><div style=\"margin: 15px 0;\"></div><vue-radio-group v-model=\"radio3\" :disabled=\"true\"><vue-radio-button label=\"New York\"></vue-radio-button><vue-radio-button label=\"Washington\"></vue-radio-button><vue-radio-button label=\"Los Angeles\"></vue-radio-button><vue-radio-button label=\"Chicago\"></vue-radio-button></vue-radio-group></div>',\n    parameter: {\n      data: function () {\n        return {\n          radio1: 'New York',\n          radio2: 'New York',\n          radio3: 'New York'\n        }\n      }\n    },\n    code: '<vue-radio-group v-model=\"radio1\" size=\"large\" fill=\"#324057\" text-color=\"#a4aebd\">\\n  <vue-radio-button label=\"New York\"></vue-radio-button>\\n  <vue-radio-button label=\"Washington\"></vue-radio-button>\\n  <vue-radio-button label=\"Los Angeles\"></vue-radio-button>\\n  <vue-radio-button label=\"Chicago\"></vue-radio-button>\\n</vue-radio-group>\\n<vue-radio-group v-model=\"radio2\">\\n  <vue-radio-button label=\"New York\"></vue-radio-button>\\n  <vue-radio-button label=\"Washington\" :disabled=\"true\"></vue-radio-button>\\n  <vue-radio-button label=\"Los Angeles\"></vue-radio-button>\\n  <vue-radio-button label=\"Chicago\"></vue-radio-button>\\n</vue-radio-group>\\n<vue-radio-group v-model=\"radio3\" :disabled=\"true\">\\n  <vue-radio-button label=\"New York\"></vue-radio-button>\\n  <vue-radio-button label=\"Washington\"></vue-radio-button>\\n  <vue-radio-button label=\"Los Angeles\"></vue-radio-button>\\n  <vue-radio-button label=\"Chicago\"></vue-radio-button>\\n</vue-radio-group>\\n\\n<script>\\n  new Vue({\\n    data: function(){\\n      return {\\n        radio1: \"New York\",\\n        radio2: \"New York\",\\n        radio3: \"New York\",\\n      }\\n    }\\n  }).$mount();\\n</script>',\n  }, {\n    id: 'radio5',\n    label: 'Radio Attributes',\n    template: '<event-table :data=\"tableData\"></event-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"label\",\n            column2: \"radioDemo.samples5.row1column2\",\n            column3: \"String / Number / Boolean\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"disabled\",\n            column2: \"radioDemo.samples5.row2column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"name\",\n            column2: \"radioDemo.samples5.row3column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'radio6',\n    label: 'Radio-group Attributes',\n    template: '<event-table :data=\"tableData\"></event-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"size\",\n            column2: \"radioDemo.samples6.row1column2\",\n            column3: \"String\",\n            column4: \"large, small, mini\",\n            column5: \"\"\n          }, {\n            column1: \"fill\",\n            column2: \"radioDemo.samples6.row2column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"#20a0ff\"\n          }, {\n            column1: \"text-color\",\n            column2: \"radioDemo.samples6.row3column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"#ffffff\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'radio7',\n    label: 'Radio-group Events',\n    template: '<event-table :data=\"tableData\"></event-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"change\",\n            column2: \"radioDemo.samples7.row1column2\",\n            column3: \"radioDemo.samples7.row1column3\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'radio8',\n    label: 'Radio-button Attributes',\n    template: '<event-table :data=\"tableData\"></event-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"label\",\n            column2: \"radioDemo.samples8.row1column2\",\n            column3: \"String / Number\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"disabled\",\n            column2: \"radioDemo.samples8.row2column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }]\n};\nmodule.exports = radioDemo;","'use strict';\nvar rateDemo = {\n  path: '/rate',\n  name: 'rate',\n  head: {\n    label: 'rateDemo.label',\n    description: 'rateDemo.description'\n  },\n  samples: [{\n    id: 'rate1',\n    label: 'rateDemo.samples1.label',\n    description: 'rateDemo.samples1.description',\n    template: '<div class=\"source\"><vue-row class=\"margin-bottom20\" type=\"flex\" justify=\"center\"><vue-col :span=\"8\"><span class=\"demonstration\">Default</span></vue-col><vue-col :span=\"14\"><vue-rate v-model=\"value1\" class=\"demonstration\"></vue-rate></vue-col></vue-row><vue-row type=\"flex\" justify=\"center\"><vue-col :span=\"8\"><span class=\"demonstration\">Color for different levels</span></vue-col><vue-col :span=\"14\"><vue-rate v-model=\"value2\" class=\"demonstration\" :colors=\"[\\'#99A9BF\\', \\'#F7BA2A\\', \\'#FF99FF\\']\"></vue-rate></vue-col></vue-row></div>',\n    parameter: {\n      data: function () {\n        return {\n          value1: 0,\n          value2: 0\n        }\n      }\n    },\n    code: '<span class=\"demonstration\">Default</span>\\n' +\n      '<vue-rate v-model=\"value1\"></vue-rate>\\n' +\n      '<span class=\"demonstration\">Color for different levels</span>\\n' +\n      '<vue-rate v-model=\"value2\" :colors=\"[\\'#99A9BF\\', \\'#F7BA2A\\', \\'#FF99FF\\']\"></vue-rate>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function() {\\n' +\n      '      return {\\n' +\n      '        value1: 0,\\n' +\n      '        value2: 0\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'rate2',\n    label: 'rateDemo.samples2.label',\n    description: 'rateDemo.samples2.description',\n    template: '<div class=\"source\"><vue-rate v-model=\"value\" show-text :texts=\"texts\" :max=\"4\"></vue-rate></div>',\n    parameter: {\n      data: function () {\n        return {\n          value: 0,\n          texts: ['oops', 'normal', 'good', 'great']\n        }\n      }\n    },\n    code: '<vue-rate v-model=\"value\" show-text :texts=\"texts\" :max=\"4\"></vue-rate>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function() {\\n' +\n      '      return {\\n' +\n      '        value: 0,\\n' +\n      '        texts: [\"oops\", \"disappointed\", \"normal\", \"good\", \"great\"]\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'rate3',\n    label: 'rateDemo.samples3.label',\n    description: 'rateDemo.samples3.description',\n    template: '<div class=\"source\"><vue-rate v-model=\"value\" :icon-classes=\"[\\'vue-icon-error\\', \\'vue-icon-warning\\', \\'vue-icon-success\\']\" void-icon-class=\"vue-icon-information\" :colors=\"[\\'#99A9BF\\', \\'#F7BA2A\\', \\'#FF9900\\']\"></vue-rate></div>',\n    parameter: {\n      data: function () {\n        return {\n          value: 0\n        }\n      }\n    },\n    code: '<vue-rate v-model=\"value\" :icon-classes=\"[\\'vue-icon-error\\', \\'vue-icon-warning\\', \\'vue-icon-success\\']\" void-icon-class=\"vue-icon-information\" :colors=\"[\\'#99A9BF\\', \\'#F7BA2A\\', \\'#FF9900\\']\"></vue-rate>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function() {\\n' +\n      '      return {\\n' +\n      '        value: 0\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'rate4',\n    label: 'rateDemo.samples4.label',\n    description: 'rateDemo.samples4.description',\n    template: '<div class=\"source\"><vue-rate v-model=\"value\" disabled show-text text-color=\"#ff9900\" text-template=\"{value} points\"></vue-rate></div>',\n    parameter: {\n      data: function () {\n        return {\n          value: 2.7\n        }\n      }\n    },\n    code: '<vue-rate v-model=\"value\" disabled show-text text-color=\"#ff9900\" text-template=\"{value} points\"></vue-rate>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function() {\\n' +\n      '      return {\\n' +\n      '        value: 2.7\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'rate5',\n    label: 'Attributes',\n    template: '<attr-table :data=\"tableData\"></attr-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"max\",\n            column2: \"rateDemo.samples5.row1column2\",\n            column3: \"Number\",\n            column4: \"\",\n            column5: \"5\"\n          }, {\n            column1: \"disabled\",\n            column2: \"rateDemo.samples5.row2column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"allow-half\",\n            column2: \"rateDemo.samples5.row3column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"low-threshold\",\n            column2: \"rateDemo.samples5.row4column2\",\n            column3: \"Number\",\n            column4: \"\",\n            column5: \"2\"\n          }, {\n            column1: \"high-threshold\",\n            column2: \"rateDemo.samples5.row5column2\",\n            column3: \"Number\",\n            column4: \"\",\n            column5: \"4\"\n          }, {\n            column1: \"colors\",\n            column2: \"rateDemo.samples5.row6column2\",\n            column3: \"Array\",\n            column4: \"\",\n            column5: \"['#F7BA2A', '#F7BA2A', '#F7BA2A']\"\n          }, {\n            column1: \"void-color\",\n            column2: \"rateDemo.samples5.row7column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"#C6D1DE\"\n          }, {\n            column1: \"disabled-void-color\",\n            column2: \"rateDemo.samples5.row8column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"#EFF2F7\"\n          }, {\n            column1: \"icon-classes\",\n            column2: \"rateDemo.samples5.row9column2\",\n            column3: \"Array\",\n            column4: \"\",\n            column5: \"['vue-icon-star-on', 'vue-icon-star-on','vue-icon-star-on']\"\n          }, {\n            column1: \"void-icon-class\",\n            column2: \"rateDemo.samples5.row10column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"vue-icon-star-off\"\n          }, {\n            column1: \"disabled-void-icon-class\",\n            column2: \"rateDemo.samples5.row11column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"vue-icon-star-on\"\n          }, {\n            column1: \"show-text\",\n            column2: \"rateDemo.samples5.row12column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"text-color\",\n            column2: \"rateDemo.samples5.row13column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"#1F2D3D\"\n          }, {\n            column1: \"texts\",\n            column2: \"rateDemo.samples5.row14column2\",\n            column3: \"Array\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"text-template\",\n            column2: \"rateDemo.samples5.row15column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"{value}\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'rate6',\n    label: 'Events',\n    template: '<event-table :data=\"tableData\"></event-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"change\",\n            column2: \"rateDemo.samples6.row1column2\",\n            column3: \"rateDemo.samples6.row1column3\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }]\n};\nmodule.exports = rateDemo;\n\n","'use strict';\nvar rippleDemo = {\n  path: '/ripple',\n  name: 'ripple',\n  head: {\n    label: 'rippleDemo.label',\n    description: 'rippleDemo.description'\n  },\n  samples: [{\n    id: 'ripple1',\n    label: 'rippleDemo.samples1.label',\n    description: 'rippleDemo.samples1.description',\n    template: '<div class=\"source\"><vue-alert dark v-ripple title=\"Clicke Me\" type=\"success\" :closable=\"false\"></vue-alert><vue-alert dark v-ripple title=\"Clicke Me\" :closable=\"false\"></vue-alert><vue-alert v-ripple title=\"Clicke Me\" type=\"warning\" :closable=\"false\"></vue-alert><vue-alert v-ripple title=\"Clicke Me\" type=\"error\" :closable=\"false\"></vue-alert></div>',\n    code: '<vue-alert dark v-ripple title=\"Clicke Me\" type=\"success\" :closable=\"false\"></vue-alert>\\n<vue-alert dark v-ripple title=\"Clicke Me\" :closable=\"false\"></vue-alert>\\n<vue-alert v-ripple title=\"Clicke Me\" type=\"warning\" :closable=\"false\"></vue-alert>\\n<vue-alert v-ripple title=\"Clicke Me\" type=\"error\" :closable=\"false\"></vue-alert>'\n  }]\n};\nmodule.exports = rippleDemo;\n","'use strict';\nvar selectDemo = {\n  path: '/select',\n  name: 'select',\n  head: {\n    label: 'selectDemo.label',\n    description: 'selectDemo.description'\n  },\n  samples: [{\n    id: 'select1',\n    label: 'selectDemo.samples1.label',\n    description: 'selectDemo.samples1.description',\n    template: '<div class=\"source\"><vue-select v-model=\"value\"><vue-option v-for=\"(item, index) in options\" :key=\"index\" :label=\"item.label\" :value=\"item.value\"></vue-option></vue-select></div>',\n    parameter: {\n      data: function () {\n        return {\n          options: [{\n            value: 'option1',\n            label: 'YAMAHA'\n          }, {\n            value: 'option2',\n            label: 'HONDA'\n          }, {\n            value: 'option3',\n            label: 'TOYOTA'\n          }],\n          value: ''\n        }\n      }\n    },\n    code: '<vue-select v-model=\"value\">\\n  <vue-option v-for=\"(item, index) in options\" :key=\"index\" :label=\"item.label\" :value=\"item.value\">\\n  </vue-option>\\n</vue-select>\\n\\n<script>\\n  new Vue({\\n    data: function(){\\n      return {\\n        options: [{\\n          value: \\'option1\\',\\n          label: \\'YAMAHA\\'\\n        },{\\n          value: \\'option2\\',\\n          label: \\'HONDA\\'\\n        },{\\n          value: \\'option3\\',\\n          label: \\'TOYOTA\\'\\n        }],\\n        value: \\'\\'\\n      }\\n    }\\n  }).$mount();\\n</script>'\n  }, {\n    id: 'select2',\n    label: 'selectDemo.samples2.label',\n    description: 'selectDemo.samples2.description',\n    template: '<div class=\"source\"><vue-select v-model=\"value\"><vue-option v-for=\"(item, index) in options\" :key=\"index\" :label=\"item.label\" :value=\"item.value\" :disabled=\"item.disabled\"></vue-option></vue-select></div>',\n    parameter: {\n      data: function () {\n        return {\n          options: [{\n            value: 'option1',\n            label: 'YAMAHA'\n          }, {\n            value: 'option2',\n            label: 'HONDA',\n            disabled: true\n          }, {\n            value: 'option3',\n            label: 'TOYOTA'\n          }],\n          value: ''\n        }\n      }\n    },\n    code: '<vue-select v-model=\"value\">\\n  <vue-option v-for=\"(item, index) in options\" :key=\"index\" :label=\"item.label\" :value=\"item.value\" :disabled=\"item.disabled\">\\n  </vue-option>\\n</vue-select>\\n\\n<script>\\n  new Vue({\\n    data: function(){\\n      return {\\n        options: [{\\n          value: \\'option1\\',\\n          label: \\'YAMAHA\\'\\n        },{\\n          value: \\'option2\\',\\n          label: \\'HONDA\\',\\n          disabled: true\\n        },{\\n          value: \\'option3\\',\\n          label: \\'TOYOTA\\'\\n        }],\\n        value: \\'\\'\\n      }\\n    }\\n  }).$mount();\\n</script>'\n  }, {\n    id: 'select3',\n    label: 'selectDemo.samples3.label',\n    description: 'selectDemo.samples3.description',\n    template: '<div class=\"source\"><vue-select v-model=\"value\" disabled><vue-option v-for=\"(item, index) in options\" :key=\"index\" :label=\"item.label\" :value=\"item.value\"></vue-option></vue-select></div>',\n    parameter: {\n      data: function () {\n        return {\n          options: [{\n            value: 'option1',\n            label: 'YAMAHA'\n          }, {\n            value: 'option2',\n            label: 'HONDA'\n          }, {\n            value: 'option3',\n            label: 'TOYOTA'\n          }],\n          value: ''\n        }\n      }\n    },\n    code: '<vue-select v-model=\"value\" disabled>\\n  <vue-option v-for=\"(item, index) in options\" :key=\"index\" :label=\"item.label\" :value=\"item.value\">\\n  </vue-option>\\n</vue-select>\\n\\n<script>\\n  new Vue({\\n    data: function(){\\n      return {\\n        options: [{\\n          value: \\'option1\\',\\n          label: \\'YAMAHA\\'\\n        },{\\n          value: \\'option2\\',\\n          label: \\'HONDA\\'\\n        },{\\n          value: \\'option3\\',\\n          label: \\'TOYOTA\\'\\n        }],\\n        value: \\'\\'\\n      }\\n    }\\n  }).$mount();\\n</script>'\n  }, {\n    id: 'select4',\n    label: 'selectDemo.samples4.label',\n    description: 'selectDemo.samples4.description',\n    template: '<div class=\"source\"><vue-select v-model=\"value\" clearable><vue-option v-for=\"(item, index) in options\" :key=\"index\" :label=\"item.label\" :value=\"item.value\"></vue-option></vue-select></div>',\n    parameter: {\n      data: function () {\n        return {\n          options: [{\n            value: 'option1',\n            label: 'YAMAHA'\n          }, {\n            value: 'option2',\n            label: 'HONDA'\n          }, {\n            value: 'option3',\n            label: 'TOYOTA'\n          }],\n          value: ''\n        }\n      }\n    },\n    code: '<vue-select v-model=\"value\" clearable>\\n  <vue-option v-for=\"(item, index) in options\" :key=\"index\" :label=\"item.label\" :value=\"item.value\">\\n  </vue-option>\\n</vue-select>\\n\\n<script>\\n  new Vue({\\n    data: function(){\\n      return {\\n        options: [{\\n          value: \\'option1\\',\\n          label: \\'YAMAHA\\'\\n        },{\\n          value: \\'option2\\',\\n          label: \\'HONDA\\'\\n        },{\\n          value: \\'option3\\',\\n          label: \\'TOYOTA\\'\\n        }],\\n        value: \\'\\'\\n      }\\n    }\\n  }).$mount();\\n</script>'\n  }, {\n    id: 'select5',\n    label: 'selectDemo.samples5.label',\n    description: 'selectDemo.samples5.description',\n    template: '<div class=\"source\"><vue-select v-model=\"value\" multiple clearable :auto-height=\"false\"><vue-option v-for=\"(item, index) in options\" :key=\"index\" :label=\"item.label\" :value=\"item.value\"></vue-option></vue-select></div>',\n    parameter: {\n      data: function () {\n        return {\n          options: [{\n            value: 'option1',\n            label: 'YAMAHA'\n          }, {\n            value: 'option2',\n            label: 'HONDA'\n          }, {\n            value: 'option3',\n            label: 'TOYOTA'\n          }],\n          value: ''\n        }\n      }\n    },\n    code: '<vue-select v-model=\"value\" multiple clearable :auto-height=\"false\">\\n  <vue-option v-for=\"(item, index) in options\" :key=\"index\" :label=\"item.label\" :value=\"item.value\">\\n  </vue-option>\\n</vue-select>\\n\\n<script>\\n  new Vue({\\n    data: function(){\\n      return {\\n        options: [{\\n          value: \\'option1\\',\\n          label: \\'YAMAHA\\'\\n        },{\\n          value: \\'option2\\',\\n          label: \\'HONDA\\'\\n        },{\\n          value: \\'option3\\',\\n          label: \\'TOYOTA\\'\\n        }],\\n        value: \\'\\'\\n      }\\n    }\\n  }).$mount();\\n</script>'\n  }, {\n    id: 'select6',\n    label: 'selectDemo.samples6.label',\n    description: 'selectDemo.samples6.description',\n    template: '<div class=\"source\"><vue-select v-model=\"value\"><vue-option v-for=\"(item, index) in options\" :key=\"index\" :label=\"item.label\" :value=\"item.value\"><span style=\"float:left\">{{item.label}}</span><span style=\"float:right;color:#8492a6;font-size:13px\">{{item.value}}</span></vue-option></vue-select></div>',\n    parameter: {\n      data: function () {\n        return {\n          options: [{\n            value: 'option1',\n            label: 'YAMAHA'\n          }, {\n            value: 'option2',\n            label: 'HONDA'\n          }, {\n            value: 'option3',\n            label: 'TOYOTA'\n          }],\n          value: ''\n        }\n      }\n    },\n    code: '<vue-select v-model=\"value\">\\n  <vue-option v-for=\"(item, index) in options\" :key=\"index\" :label=\"item.label\" :value=\"item.value\">\\n    <span style=\"float:left\">{{item.label}}</span>\\n    <span style=\"float:right;color:#8492a6;font-size:13px\">{{item.value}}</span>\\n  </vue-option>\\n</vue-select>\\n\\n<script>\\n  new Vue({\\n    data: function(){\\n      return {\\n        options: [{\\n          value: \\'option1\\',\\n          label: \\'YAMAHA\\'\\n        },{\\n          value: \\'option2\\',\\n          label: \\'HONDA\\'\\n        },{\\n          value: \\'option3\\',\\n          label: \\'TOYOTA\\'\\n        }],\\n        value: \\'\\'\\n      }\\n    }\\n  }).$mount();\\n</script>'\n  }, {\n    id: 'select7',\n    label: 'selectDemo.samples7.label',\n    description: 'selectDemo.samples7.description',\n    template: '<div class=\"source\"><vue-select v-model=\"value\"><vue-option-group v-for=\"(group, index) in options\" :key=\"index\" :label=\"group.label\"><vue-option v-for=\"(item, index) in group.options\" :key=\"index\" :label=\"item.label\" :value=\"item.value\"></vue-option></vue-option-group></vue-select></div>',\n    parameter: {\n      data: function () {\n        return {\n          options: [{\n            label: 'Popular cities',\n            options: [{\n              value: 'Shanghai',\n              label: 'Shanghai'\n            }, {\n              value: 'Beijing',\n              label: 'Beijing'\n            }]\n          }, {\n            label: 'City name',\n            options: [{\n              value: 'New York',\n              label: 'New York'\n            }, {\n              value: 'Chicago',\n              label: 'Chicago'\n            }, {\n              value: 'Los Angeles',\n              label: 'Los Angeles'\n            }, {\n              value: 'Washington',\n              label: 'Washington'\n            }]\n          }],\n          value: ''\n        }\n      }\n    },\n    code: '<vue-select v-model=\"value\">\\n' +\n      '  <vue-option-group v-for=\"(group, index) in options\" :key=\"index\" :label=\"group.label\">\\n' +\n      '    <vue-option v-for=\"(item, index) in group.options\" :key=\"index\" :label=\"item.label\" :value=\"item.value\">\\n' +\n      '    </vue-option>\\n' +\n      '  </vue-option-group>\\n' +\n      '</vue-select>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function(){\\n' +\n      '      return {\\n' +\n      '        options: [{\\n' +\n      '          label: \"Popular cities\"\\n' +\n      '          options: [{\\n' +\n      '            value: \"Shanghai\",\\n' +\n      '            label: \"Shanghai\"\\n' +\n      '          },{\\n' +\n      '            value: \"Beijing\",\\n' +\n      '            label: \"Beijing\"\\n' +\n      '          }]\\n' +\n      '        },{\\n' +\n      '          label: \"City name\"\\n' +\n      '          options: [{\\n' +\n      '            value: \"New York\",\\n' +\n      '            label: \"New York\"\\n' +\n      '          },{\\n' +\n      '            value: \"Chicago\",\\n' +\n      '            label: \"Chicago\"\\n' +\n      '          },{\\n' +\n      '            value: \"Los Angeles\",\\n' +\n      '            label: \"Los Angeles\"\\n' +\n      '          },{\\n' +\n      '            value: \"Washington\",\\n' +\n      '            label: \"Washington\"\\n' +\n      '          }]\\n' +\n      '        }],\\n' +\n      '        value: \"\"\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'select8',\n    label: 'selectDemo.samples8.label',\n    description: 'selectDemo.samples8.description',\n    template: '<div class=\"source\"><vue-select v-model=\"value\" filterable><vue-option v-for=\"(item, index) in options\" :key=\"index\" :label=\"item.label\" :value=\"item.value\"></vue-option></vue-select></div>',\n    parameter: {\n      data: function () {\n        return {\n          options: [{\n            value: 'option1',\n            label: 'YAMAHA'\n          }, {\n            value: 'option2',\n            label: 'HONDA'\n          }, {\n            value: 'option3',\n            label: 'TOYOTA'\n          }],\n          value: ''\n        }\n      }\n    },\n    code: '<vue-select v-model=\"value\" filterable>\\n  <vue-option v-for=\"(item, index) in options\" :key=\"index\" :label=\"item.label\" :value=\"item.value\">\\n  </vue-option>\\n</vue-select>\\n\\n<script>\\n  new Vue({\\n    data: function(){\\n      return {\\n        options: [{\\n          value: \\'option1\\',\\n          label: \\'YAMAHA\\'\\n        },{\\n          value: \\'option2\\',\\n          label: \\'HONDA\\'\\n        },{\\n          value: \\'option3\\',\\n          label: \\'TOYOTA\\'\\n        }],\\n        value: \\'\\'\\n      }\\n    }\\n  }).$mount();\\n</script>'\n  }, {\n    id: 'select9',\n    label: 'selectDemo.samples9.label',\n    description: 'selectDemo.samples9.description',\n    template: '<div class=\"source\"><vue-select v-model=\"value\" filterable remote :placeholder=\"$t(\\'selectDemo.samples9.placeholderLabel\\')\" :remote-method=\"remoteMethod\" :loading=\"loading\"><vue-option v-for=\"(item, index) in options\" :key=\"index\" :label=\"item.label\" :value=\"item.value\"></vue-option></vue-select></div>',\n    parameter: {\n      data: function () {\n        return {\n          list: [{\n            value: 'option1',\n            label: 'YAMAHA'\n          }, {\n            value: 'option2',\n            label: 'HONDA'\n          }, {\n            value: 'option3',\n            label: 'TOYOTA'\n          }],\n          options: [],\n          loading: false,\n          value: ''\n        }\n      },\n      methods: {\n        remoteMethod: function (query) {\n          var self = this;\n          if (query !== '') {\n            self.loading = true;\n            setTimeout(function () {\n              self.loading = false;\n              self.options = self.list.filter(function (item) {\n                return item.label.toLowerCase().indexOf(query.toLowerCase()) > -1;\n              });\n            }, 300);\n          } else {\n            self.options = [];\n          }\n        }\n      }\n    },\n    code: '<vue-select v-model=\"value\" filterable remote :remote-method=\"remoteMethod\" :loading=\"loading\" :placeholder=\"$t(\\'selectDemo.samples9.placeholderLabel\\')\">\\n' +\n      '  <vue-option v-for=\"(item, index) in options\" :key=\"index\" :label=\"item.label\" :value=\"item.value\">\\n' +\n      '  </vue-option>\\n' +\n      '</vue-select>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function(){\\n' +\n      '      return {\\n' +\n      '        list: [{\\n' +\n      '          value: \"option1\",\\n' +\n      '          label: \"YAMAHA\"\\n' +\n      '        },{\\n' +\n      '          value: \"option2\",\\n' +\n      '          label: \"HONDA\"\\n' +\n      '        },{\\n' +\n      '          label: \"option3\"\\n' +\n      '          value: \"TOYOTA\",\\n' +\n      '        }],\\n' +\n      '        options: [],\\n' +\n      '        loading: false,\\n' +\n      '        value: \"\"\\n' +\n      '      }\\n' +\n      '    },\\n' +\n      '    methods: {\\n' +\n      '      remoteMethod: function(query) {\\n' +\n      '        var self = this;\\n' +\n      '        if (query !== \"\") {\\n' +\n      '          self.loading = true;\\n' +\n      '          setTimeout(function() {\\n' +\n      '            self.loading = false;\\n' +\n      '            self.options = self.list.filter(function(item) {\\n' +\n      '              return item.label.toLowerCase().indexOf(query.toLowerCase()) > -1;\\n' +\n      '            });\\n' +\n      '          }, 300);\\n' +\n      '        } else {\\n' +\n      '          self.options = [];\\n' +\n      '        }\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'select10',\n    label: 'selectDemo.samples10.label',\n    description: 'selectDemo.samples10.description',\n    template: '<div class=\"source\"><vue-select v-model=\"value\" filterable allow-create clearable><vue-option v-for=\"(item, index) in options\" :key=\"index\" :label=\"item.label\" :value=\"item.value\"></vue-option></vue-select></div>',\n    parameter: {\n      data: function () {\n        return {\n          options: [{\n            value: 'option1',\n            label: 'YAMAHA'\n          }, {\n            value: 'option2',\n            label: 'HONDA'\n          }, {\n            value: 'option3',\n            label: 'TOYOTA'\n          }],\n          value: ''\n        }\n      }\n    },\n    code: '<vue-select v-model=\"value\" filterable allow-create clearable>\\n  <vue-option v-for=\"(item, index) in options\" :key=\"index\" :label=\"item.label\" :value=\"item.value\">\\n  </vue-option>\\n</vue-select>\\n\\n<script>\\n  new Vue({\\n    data: function(){\\n      return {\\n        options: [{\\n          value: \\'option1\\',\\n          label: \\'YAMAHA\\'\\n        },{\\n          value: \\'option2\\',\\n          label: \\'HONDA\\'\\n        },{\\n          value: \\'option3\\',\\n          label: \\'TOYOTA\\'\\n        }],\\n        value: \\'\\'\\n      }\\n    }\\n  }).$mount();\\n</script>'\n  }, {\n    id: 'select11',\n    label: 'Select Attributes',\n    template: '<event-table :data=\"tableData\"></event-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"multiple\",\n            column2: \"selectDemo.samples11.row1column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"disabled\",\n            column2: \"selectDemo.samples11.row2column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"size\",\n            column2: \"selectDemo.samples11.row3column2\",\n            column3: \"String\",\n            column4: \"large/small/mini\",\n            column5: \"\"\n          }, {\n            column1: \"clearable\",\n            column2: \"selectDemo.samples11.row4column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"multiple-limit\",\n            column2: \"selectDemo.samples11.row5column2\",\n            column3: \"Number\",\n            column4: \"\",\n            column5: \"0\"\n          }, {\n            column1: \"name\",\n            column2: \"selectDemo.samples11.row6column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"placeholder\",\n            column2: \"selectDemo.samples11.row7column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"vue.select.placeholder\"\n          }, {\n            column1: \"filterable\",\n            column2: \"selectDemo.samples11.row8column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"allow-create\",\n            column2: \"selectDemo.samples11.row9column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"filter-method\",\n            column2: \"selectDemo.samples11.row10column2\",\n            column3: \"Function\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"remote\",\n            column2: \"selectDemo.samples11.row11column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"remote-method\",\n            column2: \"selectDemo.samples11.row12column2\",\n            column3: \"Function\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"loading\",\n            column2: \"selectDemo.samples11.row13column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"loading-text\",\n            column2: \"selectDemo.samples11.row14column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"vue.select.loading\"\n          }, {\n            column1: \"no-match-text\",\n            column2: \"selectDemo.samples11.row15column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"vue.select.noMatch\"\n          }, {\n            column1: \"no-data-text\",\n            column2: \"selectDemo.samples11.row16column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"vue.select.noData\"\n          }, {\n            column1: \"popper-class\",\n            column2: \"selectDemo.samples11.row17column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"default-first-option\",\n            column2: \"selectDemo.samples11.row18column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"autofocus\",\n            column2: \"inputDemo.samples10.row19column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"text-align\",\n            column2: \"inputDemo.samples10.row22column2\",\n            column3: \"String\",\n            column4: \"center, right\",\n            column5: \"\"\n          }, {\n            column1: \"auto-height\",\n            column2: \"selectDemo.samples11.row19column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"true\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'select12',\n    label: 'Select Events',\n    template: '<event-table :data=\"tableData\"></event-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"change\",\n            column2: \"selectDemo.samples12.row1column2\",\n            column3: \"selectDemo.samples12.row1column3\"\n          }, {\n            column1: \"visible-change\",\n            column2: \"selectDemo.samples12.row2column2\",\n            column3: \"selectDemo.samples12.row2column3\"\n          }, {\n            column1: \"remove-tag\",\n            column2: \"selectDemo.samples12.row3column2\",\n            column3: \"selectDemo.samples12.row3column3\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'select13',\n    label: 'Option Group Attributes',\n    template: '<event-table :data=\"tableData\"></event-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"label\",\n            column2: \"selectDemo.samples13.row1column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"disabled\",\n            column2: \"selectDemo.samples13.row2column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'select14',\n    label: 'Option Attributes',\n    template: '<event-table :data=\"tableData\"></event-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"value\",\n            column2: \"selectDemo.samples14.row1column2\",\n            column3: \"String / Number / Object\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"label\",\n            column2: \"selectDemo.samples14.row2column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"disabled\",\n            column2: \"selectDemo.samples14.row3column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'select15',\n    label: 'Methods',\n    template: '<method-table :data=\"tableData\"></method-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"focus\",\n            column2: \"inputDemo.samples16.row1column2\",\n            column3: \"\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }]\n};\nmodule.exports = selectDemo;\n","'use strict';\nvar signatureDemo = {\n  path: '/signature',\n  name: 'signature',\n  head: {\n    label: 'signatureDemo.label',\n    description: 'signatureDemo.description'\n  },\n  samples: [{\n    id: 'signature1',\n    label: 'signatureDemo.samples1.label',\n    description: 'signatureDemo.samples1.description',\n    template: '<div class=\"source\"><vue-signature width=\"400px\" height=\"250px\" :options=\"{backgroundColor: \\'lightgray\\'}\"></vue-signature></div>',\n    parameter: {\n      data: function () {\n        return {\n        }\n      },\n      methods: {\n      }\n    },\n    code: '<vue-signature width=\"400px\" height=\"250px\" :options=\"{backgroundColor: \\'lightgray\\'}\">\\n' +\n    '</vue-signature>\\n\\n' +\n    '<script>\\n' +\n    '  new Vue({\\n' +\n    '    data: function() {\\n' +\n    '      return {\\n' +\n    '      }\\n' +\n    '    },\\n' +\n    '  }).$mount();\\n' +\n    '</script>'\n  }, {\n    id: 'signature2',\n    label: 'signatureDemo.samples2.label',\n    description: 'signatureDemo.samples2.description',\n    template: '<div class=\"source\"><vue-signature ref=\"saveSign\" width=\"400px\" height=\"250px\" :options=\"{backgroundColor: \\'lightgray\\'}\"></vue-signature><vue-button @click=\"saveHandle\">Save</vue-button><vue-input v-model=\"result\" type=\"textarea\" :rows=\"2\"></vue-input><vue-signature ref=\"loadSign\" width=\"400px\" height=\"250px\" :options=\"{backgroundColor: \\'lightgray\\'}\"></vue-signature><vue-button @click=\"loadHandle\">Load</vue-button></div>',\n    parameter: {\n      data: function() {\n        return {\n          result: ''\n        }\n      },\n      methods: {\n        saveHandle: function() {\n          var signResult = this.$refs.saveSign.saveSignature();\n          this.result = signResult.data;\n        },\n        loadHandle: function() {\n         this.$refs.loadSign.fromDataURL(this.result);\n        }\n      }\n    },\n    code: '<vue-signature ref=\"saveSign\" width=\"400px\" height=\"250px\" :options=\"{backgroundColor: \\'lightgray\\'}\">\\n' +\n    '</vue-signature>\\n' +\n    '<vue-button @click=\"saveHandle\">Save</vue-button>\\n' + \n    '<vue-input v-model=\"result\" type=\"textarea\" :rows=\"2\"></vue-input>\\n' +\n    '<vue-signature ref=\"loadSign\" width=\"400px\" height=\"250px\" :options=\"{backgroundColor: \\'lightgray\\'}\">\\n' +\n    '</vue-signature>\\n' +\n    '<vue-button @click=\"loadHandle\">Load</vue-button>\\n\\n' +\n    '<script>\\n' +\n    '  new Vue({\\n' +\n    '    data: function() {\\n' +\n    '      return {\\n' +\n    '      }\\n' +\n    '    },\\n' +\n    '    methods: {\\n' +\n    '      saveHandle: function() {\\n' +\n    '        var signResult = this.$refs.saveSign.saveSignature();\\n' +\n    '        this.result = signResult.data;\\n' +\n    '      },\\n' +\n    '      loadHandle: function() {\\n' +\n    '        this.$refs.loadSign.fromDataURL(this.result);\\n' +\n    '      }\\n' +\n    '    }\\n' +\n    '  }).$mount();\\n' +\n    '</script>'\n  }, {\n    id: 'signature3',\n    label: 'signatureDemo.samples3.label',\n    description: 'signatureDemo.samples3.description',\n    template: '<div class=\"source\"><vue-signature ref=\"sign\" width=\"400px\" height=\"250px\" :options=\"{backgroundColor: \\'lightgray\\'}\"></vue-signature><vue-button @click=\"clearHandle\">Clear</vue-button></div>',\n    parameter: {\n      methods: {\n        clearHandle: function() {\n          this.$refs.sign.clearSignature();\n          this.$notify({title: 'Success'});\n        }\n      }\n    },\n    code: '<vue-signature ref=\"sign\" width=\"400px\" height=\"250px\" :options=\"{backgroundColor: \\'lightgray\\'}\">\\n' +\n    '</vue-signature>\\n' +\n    '<vue-button @click=\"clearHandle\">Clear</vue-button>\\n\\n' +\n    '<script>\\n' +\n    '  new Vue({\\n' +\n    '    data: function() {\\n' +\n    '      return {\\n' +\n    '      }\\n' +\n    '    },\\n' +\n    '    methods: {\\n' +\n    '      clearHandle: function() {\\n' +\n    '        this.$refs.sign.clearSignature();\\n' +\n    '        this.$notify({title: \\'Success\\'});\\n' +\n    '      }\\n' +\n    '    }\\n' +\n    '  }).$mount();\\n' +\n    '</script>'\n  }, {\n    id: 'signature4',\n    label: 'signatureDemo.samples4.label',\n    description: 'signatureDemo.samples4.description',\n    template: '<div class=\"source\"><vue-signature ref=\"sign\" width=\"400px\" height=\"250px\" :options=\"{backgroundColor: \\'lightgray\\'}\"></vue-signature><vue-button @click=\"undoHandle\">Undo</vue-button></div>',\n    parameter: {\n      methods: {\n        undoHandle: function() {\n          this.$refs.sign.undoSignature();\n          this.$notify({title: 'Success'});\n        }\n      }\n    },\n    code: '<vue-signature ref=\"sign\" width=\"400px\" height=\"250px\" :options=\"{backgroundColor: \\'lightgray\\'}\">\\n' +\n    '</vue-signature>\\n' +\n    '<vue-button @click=\"undoHandle\">Undo</vue-button>\\n\\n' +\n    '<script>\\n' +\n    '  new Vue({\\n' +\n    '    data: function() {\\n' +\n    '      return {\\n' +\n    '      }\\n' +\n    '    },\\n' +\n    '    methods: {\\n' +\n    '      undoHandle: function() {\\n' +\n    '        this.$refs.sign.undoSignature();\\n' +\n    '        this.$notify({title: \\'Success\\'});\\n' +\n    '      }\\n' +\n    '    }\\n' +\n    '  }).$mount();\\n' +\n    '</script>'\n  }, {\n    id: 'signature5',\n    label: 'signatureDemo.samples5.label',\n    description: 'signatureDemo.samples5.description',\n    template: '<div class=\"source\"><vue-signature ref=\"sign\" width=\"400px\" height=\"250px\" :options=\"{backgroundColor: \\'lightgray\\'}\"></vue-signature><vue-button @click=\"lockHandle\">Lock</vue-button><vue-button @click=\"openHandle\">Open</vue-button></div>',\n    parameter: {\n      methods: {\n        lockHandle: function() {\n          this.$refs.sign.lockSignaturePad();\n          this.$notify({title: 'lock'});\n        },\n        openHandle: function() {\n          this.$refs.sign.openSignaturePad();\n          this.$notify({title: 'open'});\n        }\n      }\n    },\n    code: '<vue-signature ref=\"sign\" width=\"400px\" height=\"250px\" :options=\"{backgroundColor: \\'lightgray\\'}\">\\n' +\n    '</vue-signature>\\n' +\n    '<vue-button @click=\"lockHandle\">Lock</vue-button>\\n' +\n    '<vue-button @click=\"openHandle\">Open</vue-button>\\n\\n' +\n    '<script>\\n' +\n    '  new Vue({\\n' +\n    '    data: function() {\\n' +\n    '      return {\\n' +\n    '      }\\n' +\n    '    },\\n' +\n    '    methods: {\\n' +\n    '      lockHandle: function() {\\n' +\n    '        this.$refs.sign.lockSignaturePad();\\n' +\n    '        this.$notify({title: \\'lock\\'});\\n' +\n    '      },\\n' +\n    '      openHandle: function() {\\n' +\n    '        this.$refs.sign.openSignaturePad();\\n' +\n    '        this.$notify({title: \\'open\\'});\\n' +\n    '      }\\n' +\n    '    }\\n' +\n    '  }).$mount();\\n' +\n    '</script>'\n  }, {\n    id: 'signature6',\n    label: 'Attributes',\n    template: '<attr-table :data=\"tableData\"></attr-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"width\",\n            column2: \"signatureDemo.samples6.row1column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"100%\"\n          }, {\n            column1: \"height\",\n            column2: \"signatureDemo.samples6.row2column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"100%\"\n          }, {\n            column1: \"saveType\",\n            column2: \"signatureDemo.samples6.row3column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"image/png\"\n          }, {\n            column1: \"options\",\n            column2: \"signatureDemo.samples6.row4column2\",\n            column3: \"Object\",\n            column4: \"\",\n            column5: \"{}\"\n          }, {\n            column1: \"customStyle\",\n            column2: \"signatureDemo.samples6.row5column2\",\n            column3: \"Object\",\n            column4: \"\",\n            column5: \"{}\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'signature7',\n    label: 'Methods',\n    template: '<method-table :data=\"tableData\"></method-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"saveSignature\",\n            column2: \"signatureDemo.samples7.row1column2\",\n            column3: \"\"\n          }, {\n            column1: \"undoSignature\",\n            column2: \"signatureDemo.samples7.row2column2\",\n            column3: \"\"\n          }, {\n            column1: \"clearSignature\",\n            column2: \"signatureDemo.samples7.row3column2\",\n            column3: \"\"\n          }, {\n            column1: \"lockSignaturePad\",\n            column2: \"signatureDemo.samples7.row4column2\",\n            column3: \"\"\n          }, {\n            column1: \"openSignaturePad\",\n            column2: \"signatureDemo.samples7.row5column2\",\n            column3: \"\"\n          }, {\n            column1: \"fromDataURL\",\n            column2: \"signatureDemo.samples7.row6column2\",\n            column3: \"base64data\"\n          }, {\n            column1: \"isEmpty\",\n            column2: \"signatureDemo.samples7.row7column2\",\n            column3: \"\"\n          }, ]\n        }\n      }\n    },\n    notshowmeta: true\n  }]\n};\nmodule.exports = signatureDemo;\n","'use strict';\nvar sliderDemo = {\n  path: '/slider',\n  name: 'slider',\n  head: {\n    label: 'sliderDemo.label',\n    description: 'sliderDemo.description'\n  },\n  samples: [{\n    id: 'slider1',\n    label: 'sliderDemo.samples1.label',\n    description: 'sliderDemo.samples1.description',\n    template: '<div class=\"source\"><vue-row class=\"margin-bottom20\" type=\"flex\" justify=\"center\"><vue-col :span=\"6\"><span class=\"demonstration\">Default</span></vue-col><vue-col :span=\"16\"><vue-slider v-model=\"value1\"></vue-slider></vue-col></vue-row><vue-row class=\"margin-bottom20\" type=\"flex\" justify=\"center\"><vue-col :span=\"6\"><span class=\"demonstration\">Customized initial</span></vue-col><vue-col :span=\"16\"><vue-slider v-model=\"value2\"></vue-slider></vue-col></vue-row><vue-row class=\"margin-bottom20\" type=\"flex\" justify=\"center\"><vue-col :span=\"6\"><span class=\"demonstration\">Hide Tooltip</span></vue-col><vue-col :span=\"16\"><vue-slider v-model=\"value3\" :show-tooltip=\"false\"></vue-slider></vue-col></vue-row><vue-row class=\"margin-bottom20\" type=\"flex\" justify=\"center\"><vue-col :span=\"6\"><span class=\"demonstration\">Format Tooltip</span></vue-col><vue-col :span=\"16\"><vue-slider v-model=\"value4\" :format-tooltip=\"formatTooltip\"></vue-slider></vue-col></vue-row><vue-row type=\"flex\" justify=\"center\"><vue-col :span=\"6\"><span class=\"demonstration\">Disabled</span></vue-col><vue-col :span=\"16\"><vue-slider v-model=\"value5\" disabled></vue-slider></vue-col></vue-row></div>',\n    parameter: {\n      data: function () {\n        return {\n          value1: 0,\n          value2: 50,\n          value3: 36,\n          value4: 48,\n          value5: 42\n        }\n      },\n      methods: {\n        formatTooltip: function (val) {\n          return val / 100;\n        }\n      }\n    },\n    code: '<span class=\"demonstration\">Default</span>\\n' +\n      '<vue-slider v-model=\"value1\"></vue-slider>\\n' +\n      '<span class=\"demonstration\">Customized initial</span>\\n' +\n      '<vue-slider v-model=\"value2\"></vue-slider>\\n' +\n      '<span class=\"demonstration\">Hide Tooltip</span>\\n' +\n      '<vue-slider v-model=\"value3\" :show-tooltip=\"false\"></vue-slider>\\n' +\n      '<span class=\"demonstration\">Format Tooltip</span>\\n' +\n      '<vue-slider v-model=\"value4\" :format-tooltip=\"formatTooltip\"></vue-slider>\\n' +\n      '<span class=\"demonstration\">Disabled</span>\\n' +\n      '<vue-slider v-model=\"value5\" disabled></vue-slider>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function() {\\n' +\n      '      return {\\n' +\n      '        value1: 0,\\n' +\n      '        value2: 50,\\n' +\n      '        value3: 36,\\n' +\n      '        value4: 48,\\n' +\n      '        value5: 42\\n' +\n      '      }\\n' +\n      '    },\\n' +\n      '    methods: {\\n' +\n      '      formatTooltip: function(val) {\\n' +\n      '        return val / 100;\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'slider2',\n    label: 'sliderDemo.samples2.label',\n    description: 'sliderDemo.samples2.description',\n    template: '<div class=\"source\"><vue-row class=\"margin-bottom20\" type=\"flex\" justify=\"center\"><vue-col :span=\"8\"><span class=\"demonstration\">Breakpoints not displayed</span></vue-col><vue-col :span=\"14\"><vue-slider v-model=\"value1\" :step=\"10\"></vue-slider></vue-col></vue-row><vue-row type=\"flex\" justify=\"center\"><vue-col :span=\"8\"><span class=\"demonstration\">Breakpoints displayed</span></vue-col><vue-col :span=\"14\"><vue-slider v-model=\"value2\" :step=\"10\" show-stops></vue-slider></vue-col></vue-row></div>',\n    parameter: {\n      data: function () {\n        return {\n          value1: 0,\n          value2: 0\n        }\n      }\n    },\n    code: '<span class=\"demonstration\">Breakpoints not displayed</span>\\n' +\n      '<vue-slider v-model=\"value1\" :step=\"10\"></vue-slider>\\n' +\n      '<span class=\"demonstration\">Breakpoints displayed</span>\\n' +\n      '<vue-slider v-model=\"value2\" :step=\"10\" show-stops></vue-slider>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function() {\\n' +\n      '      return {\\n' +\n      '        value1: 0,\\n' +\n      '        value2: 0\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'slider3',\n    label: 'sliderDemo.samples3.label',\n    description: 'sliderDemo.samples3.description',\n    template: '<div class=\"source\"><vue-slider v-model=\"value1\" range show-stops :max=\"10\"></vue-slider></div>',\n    parameter: {\n      data: function () {\n        return {\n          value1: [2, 6]\n        }\n      }\n    },\n    code: '<vue-slider v-model=\"value1\" range show-stops :max=\"10\"></vue-slider>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function() {\\n' +\n      '      return {\\n' +\n      '        value1: [2, 6]\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'slider4',\n    label: 'sliderDemo.samples4.label',\n    description: 'sliderDemo.samples4.description',\n    template: '<div class=\"source\"><vue-slider v-model=\"value1\" vertical></vue-slider></div>',\n    parameter: {\n      data: function () {\n        return {\n          value1: 1\n        }\n      }\n    },\n    code: '<vue-slider v-model=\"value1\" vertical></vue-slider>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function() {\\n' +\n      '      return {\\n' +\n      '        value1: 1\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'slider5',\n    label: 'Attributes',\n    template: '<attr-table :data=\"tableData\"></attr-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"min\",\n            column2: \"sliderDemo.samples5.row1column2\",\n            column3: \"Number\",\n            column4: \"\",\n            column5: \"0\"\n          }, {\n            column1: \"max\",\n            column2: \"sliderDemo.samples5.row2column2\",\n            column3: \"Number\",\n            column4: \"\",\n            column5: \"100\"\n          }, {\n            column1: \"disabled\",\n            column2: \"sliderDemo.samples5.row3column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"step\",\n            column2: \"sliderDemo.samples5.row4column2\",\n            column3: \"Number\",\n            column4: \"\",\n            column5: \"1\"\n          }, {\n            column1: \"show-stops\",\n            column2: \"sliderDemo.samples5.row5column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"show-tooltip\",\n            column2: \"sliderDemo.samples5.row6column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"true\"\n          }, {\n            column1: \"format-tooltip\",\n            column2: \"sliderDemo.samples5.row7column2\",\n            column3: \"Function(value)\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"range\",\n            column2: \"sliderDemo.samples5.row8column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"vertical\",\n            column2: \"sliderDemo.samples5.row9column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"height\",\n            column2: \"sliderDemo.samples5.row10column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'slider6',\n    label: 'Events',\n    template: '<event-table :data=\"tableData\"></event-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"change\",\n            column2: \"sliderDemo.samples6.row1column2\",\n            column3: \"sliderDemo.samples6.row1column3\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }]\n};\nmodule.exports = sliderDemo;\n","'use strict';\nvar sortableDemo = {\n  path: '/sortable',\n  name: 'sortable',\n  head: {\n    label: 'sortableDemo.label',\n    description: 'sortableDemo.description'\n  },\n  samples: [{\n    id: 'sortable1',\n    label: 'sortableDemo.samples1.label',\n    description: 'sortableDemo.samples1.description',\n    template: '<div class=\"source\"><vue-row><vue-col :span=\"8\"><vue-sortable element=\"div\" style=\"border: 1px solid;border-radius: 1px; min-height:180px;\" :options=\"sortOptions\" @add=\"addHandle\" @remove=\"removeHandle\" @update=\"updateHandle\" @end=\"endHandle\" @start=\"startHandle\"><vue-note type=\"error\" >list1-test1</vue-note><vue-note type=\"error\" style=\"margin: 0 0 5px 0;\">list1-test2</vue-note></vue-sortable></vue-col><vue-col :span=\"8\"><vue-sortable element=\"div\" style=\"border: 1px solid;border-radius: 1px; min-height:180px;\" :options=\"sortOptions\" @add=\"addHandle\" @remove=\"removeHandle\" @update=\"updateHandle\" @end=\"endHandle\" @start=\"startHandle\"><vue-note style=\"margin: 0 0 5px 0;\">list2-test1</vue-note></vue-sortable></vue-col><vue-col :span=\"8\"><vue-sortable element=\"div\" style=\"border: 1px solid;border-radius: 1px; min-height:180px;\" :options=\"sortOptions\" @add=\"addHandle\" @remove=\"removeHandle\" @update=\"updateHandle\" @end=\"endHandle\" @start=\"startHandle\"></vue-sortable></vue-col></vue-row></div>',\n    parameter: {\n      data: function () {\n        return {\n          sortOptions: {\n            group: 'mysortable1',\n            ghostClass: 'vue-sortable-ghost',\n            chosenClass: 'vue-sortable-chosen',\n            sort: false\n          }\n        }\n      },\n      methods: {\n        endHandle: function (e) {\n          this.$notify({\n            title: 'End move item: ' + e.item.innerText\n          });\n        },\n        startHandle: function (e) {\n          this.$notify({\n            title: 'Start move item: ' + e.item.innerText\n          });\n        },\n        addHandle: function (e) {\n          this.$notify({\n            title: 'Add item: ' + e.item.innerText\n          });\n        },\n        removeHandle: function (e) {\n          this.$notify({\n            title: 'Remove item: ' + e.item.innerText\n          });\n        },\n        updateHandle: function (e) {\n          this.$notify({\n            title: 'Update item: ' + e.item.innerText\n          });\n        }\n      }\n    },\n    code: '<vue-sortable element=\"div\" :options=\"sortOptions\" @add=\"addHandle\" @remove=\"removeHandle\" @update=\"updateHandle\" @end=\"endHandle\" @start=\"startHandle\" style=\"border: 1px solid;border-radius: 1px; min-height:180px;\">\\n' +\n      '  <vue-note type=\"error\">list1-test1</vue-note>\\n' +\n      '  <vue-note type=\"error\">list1-test2</vue-note>\\n' +\n      '</vue-sortable>\\n' +\n      '<vue-sortable element=\"div\" :options=\"sortOptions\" @add=\"addHandle\" @remove=\"removeHandle\" @update=\"updateHandle\" @end=\"endHandle\" @start=\"startHandle\" style=\"border: 1px solid;border-radius: 1px; min-height:180px;\">\\n' +\n      '  <vue-note>list2-test1</vue-note>\\n' +\n      '</vue-sortable>\\n' +\n      '<vue-sortable element=\"div\" :options=\"sortOptions\" @add=\"addHandle\" @remove=\"removeHandle\" @update=\"updateHandle\" @end=\"endHandle\" @start=\"startHandle\" style=\"border: 1px solid;border-radius: 1px; min-height:180px;\">\\n' +\n      '</vue-sortable>\\n\\n' +\n      '<style>\\n' +\n      '  .vue-sortable-chosen {\\n' +\n      '    color: #fff;\\n' +\n      '    background-color: #c00;\\n' +\n      '  }\\n' +\n      '  .vue-sortable-ghost {\\n' +\n      '    opacity: .5;\\n' +\n      '    background: #C8EBFB;\\n' +\n      '  }\\n' +\n      '</style>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function(){\\n' +\n      '      return {\\n' +\n      '        sortOptions: {\\n' +\n      '          group: \\'mysortable1\\',\\n' +\n      '          sort: false,\\n' +\n      '          ghostClass: \\'vue-sortable-ghost\\',\\n' +\n      '          chosenClass: \\'vue-sortable-chosen\\'\\n' +\n      '        }\\n' +\n      '      }\\n' +\n      '    },\\n' +\n      '    methods: {\\n' +\n      '      endHandle: function(e) {\\n' +\n      '        this.$notify({title: \\'End move item: \\' + e.item.innerText});;\\n' +\n      '      },\\n' +\n      '      startHandle: function(e) {\\n' +\n      '        this.$notify({title: \\'start move item: \\' + e.item.innerText});\\n' +\n      '      },\\n' +\n      '      addHandle: function(e) {\\n' +\n      '        this.$notify({title: \\'Add item: \\' + e.item.innerText});;\\n' +\n      '      },\\n' +\n      '      removeHandle: function(e) {\\n' +\n      '        this.$notify({title: \\'Remove item: \\' + e.item.innerText});\\n' +\n      '      },\\n' +\n      '      updateHandle: function(e) {\\n' +\n      '        this.$notify({title: \\'Update item: \\' + e.item.innerText});\\n' +\n      '      }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'sortable2',\n    label: 'sortableDemo.samples2.label',\n    description: 'sortableDemo.samples2.description',\n    template: '<div class=\"source\"><vue-row><vue-col :span=\"8\"><vue-sortable id=\"list1\" v-model=\"list1\" style=\"border: 1px solid;border-radius: 1px; min-height:180px;\" :move=\"moveHandle\" :options=\"sortOptions\"><vue-note type=\"error\" v-for=\"(element, index) in list1\" :key=\"index\" >{{element.name}}</vue-note></vue-sortable></vue-col><vue-col :span=\"8\"><vue-sortable id=\"list2\" v-model=\"list2\" style=\"border: 1px solid;border-radius: 1px; min-height:180px;\" :move=\"moveHandle\" :options=\"sortOptions\"><vue-note v-for=\"(element, index) in list2\" :key=\"index\" >{{element.name}}</vue-note></vue-sortable></vue-col><vue-col :span=\"8\"><vue-sortable id=\"list3\" v-model=\"list3\" style=\"border: 1px solid;border-radius: 1px; min-height:180px;\" :move=\"moveHandle\" :options=\"sortOptions\"><vue-note type=\"success\" v-for=\"(element, index) in list3\" :key=\"index\" >{{element.name}}</vue-note></vue-sortable></vue-col></vue-row><vue-row>list1: {{list1}}</vue-row><vue-row>list2: {{list2}}</vue-row><vue-row>list3: {{list3}}</vue-row></div>',\n    parameter: {\n      data: function () {\n        return {\n          sortOptions: {\n            group: 'mysortable2',\n            filter: '.vue-note__content'\n          },\n          list1: [{\n            id: 11,\n            name: 'list1-test1'\n          }, {\n            id: 12,\n            name: 'list1-test2'\n          }],\n          list2: [{\n            id: 21,\n            name: 'list2-test1'\n          }],\n          list3: []\n        }\n      },\n      methods: {\n        moveHandle: function (e) {\n          this.$notify({\n            title: 'moving item: ' + e.draggedContext.element.name\n          });\n          this.$notify({\n            title: 'move in list: ' + e.relatedContext.component.$el.id\n          });\n        }\n      }\n    },\n    code: '<vue-sortable id=\"list1\" v-model=\"list1\" :move=\"moveHandle\" :options=\"sortOptions\" style=\"border:1px solid;border-radius:1px;min-height:180px;\">\\n' +\n      '  <vue-note type=\"error\" v-for=\"(element, index) in list1\" :key=\"index\">{{element.name}}</vue-note>\\n' +\n      '</vue-sortable>\\n' +\n      '<vue-sortable id=\"list2\" v-model=\"list2\" :move=\"moveHandle\" :options=\"sortOptions\" style=\"border:1px solid;border-radius:1px;min-height:180px;\">\\n' +\n      '  <vue-note v-for=\"(element, index) in list2\" :key=\"index\">{{element.name}}</vue-note>\\n' +\n      '</vue-sortable>\\n' +\n      '<vue-sortable id=\"list3\" v-model=\"list3\" :move=\"moveHandle\" :options=\"sortOptions\" style=\"border:1px solid;border-radius:1px;min-height:180px;\">\\n' +\n      '  <vue-note type=\"success\" v-for=\"(element, index) in list3\" :key=\"index\">{{element.name}}</vue-note>\\n' +\n      '</vue-sortable>\\n' +\n      '<vue-row>list1: {{list1}}</vue-row>\\n' +\n      '<vue-row>list2: {{list2}}</vue-row>\\n' +\n      '<vue-row>list3: {{list3}}</vue-row>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function(){\\n' +\n      '      return {\\n' +\n      '        sortOptions: {group: \\'mysortable2\\'},\\n' +\n      '        list1: [{ id: 11, name: \\'list1-test1\\'}, { id: 12, name: \\'list1-test2\\'}]\\n' +\n      '        list2: [{ id: 21, name: \\'list2-test1\\'}]\\n' +\n      '        list3: []\\n' +\n      '      }\\n' +\n      '    },\\n' +\n      '    methods: {\\n' +\n      '      moveHandle: function(e) {\\n' +\n      '        this.$notify({title: \\'moving item: \\' + e.draggedContext.element.name});\\n' +\n      '        this.$notify({title: \\'move in list: \\' + e.relatedContext.component.$el.id});\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'sortable3',\n    label: 'sortableDemo.samples3.label',\n    description: 'sortableDemo.samples3.description',\n    template: '<div class=\"source\"><vue-row><vue-col :span=\"8\"><vue-sortable id=\"list1\" v-model=\"list1\" style=\"border: 1px solid;border-radius: 1px; min-height:180px;\" :clone=\"cloneHandle\" :options=\"sortOptions\"><vue-note type=\"error\" v-for=\"(element, index) in list1\" :key=\"index\" >{{element.name}}</vue-note></vue-sortable></vue-col><vue-col :span=\"8\"><vue-sortable id=\"list2\" v-model=\"list2\" style=\"border: 1px solid;border-radius: 1px; min-height:180px;\" :clone=\"cloneObjectHandle\" :options=\"sortOptions\"><vue-note v-for=\"(element, index) in list2\" :key=\"index\" >{{element.name}}</vue-note></vue-sortable></vue-col><vue-col :span=\"8\"><vue-sortable id=\"list3\" v-model=\"list3\" style=\"border: 1px solid;border-radius: 1px; min-height:180px;\" :clone=\"cloneObjectHandle\" :options=\"sortOptions\"><vue-note type=\"success\" v-for=\"(element, index) in list3\" :key=\"index\" >{{element.name}}</vue-note></vue-sortable></vue-col></vue-row><vue-row>list1: {{list1}}</vue-row><vue-row>list2: {{list2}}</vue-row><vue-row>list3: {{list3}}</vue-row></div>',\n    parameter: {\n      data: function () {\n        return {\n          sortOptions: {\n            group: { name: 'mysortable3', pull: 'clone' }\n          },\n          list1: [{\n            id: 11,\n            name: 'list1-test1'\n          }, {\n            id: 12,\n            name: 'list1-test2'\n          }],\n          list2: [{\n            id: 21,\n            name: 'list2-test1'\n          }],\n          list3: []\n        }\n      },\n      methods: {\n        cloneHandle: function (original) {\n          this.$notify({\n            title: 'Clone item: ' + original.name\n          });\n          return original\n        },\n        cloneObjectHandle: function (original) {\n          this.$notify({\n            title: 'Clone new object'\n          });\n          return {}\n        }\n      }\n    },\n    code: '<vue-sortable id=\"list1\" v-model=\"list1\" :clone=\"cloneHandle\" :options=\"sortOptions\" style=\"border:1px solid;border-radius:1px;min-height:180px;\">\\n' +\n      '  <vue-note type=\"error\" v-for=\"(element, index) in list1\" :key=\"index\">{{element.name}}</vue-note>\\n' +\n      '</vue-sortable>\\n' +\n      '<vue-sortable id=\"list2\" v-model=\"list2\" :clone=\"cloneObjectHandle\" :options=\"sortOptions\" style=\"border:1px solid;border-radius:1px;min-height:180px;\">\\n' +\n      '  <vue-note v-for=\"(element, index) in list2\" :key=\"index\">{{element.name}}</vue-note>\\n' +\n      '</vue-sortable>\\n' +\n      '<vue-sortable id=\"list3\" v-model=\"list3\" :clone=\"cloneObjectHandle\" :options=\"sortOptions\" style=\"border:1px solid;border-radius:1px;min-height:180px;\">\\n' +\n      '  <vue-note type=\"success\" v-for=\"(element, index) in list3\" :key=\"index\">{{element.name}}</vue-note>\\n' +\n      '</vue-sortable>\\n' +\n      '<vue-row>list1: {{list1}}</vue-row>\\n' +\n      '<vue-row>list2: {{list2}}</vue-row>\\n' +\n      '<vue-row>list3: {{list3}}</vue-row>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function(){\\n' +\n      '      return {\\n' +\n      '        sortOptions: {group: {name: \\'mysortable3\\', pull: \\'clone\\'}},\\n' +\n      '        list1: [{ id: 11, name: \\'list1-test1\\'}, { id: 12, name: \\'list1-test2\\'}]\\n' +\n      '        list2: [{ id: 21, name: \\'list2-test1\\'}]\\n' +\n      '        list3: []\\n' +\n      '      }\\n' +\n      '    },\\n' +\n      '    methods: {\\n' +\n      '      cloneHandle: function(original) {\\n' +\n      '        this.$notify({title: \\'Clone item: \\' + original.name});\\n' +\n      '        return original;\\n' +\n      '      },\\n' +\n      '      cloneObjectHandle: function(original) {\\n' +\n      '        this.$notify({title: \\'Clone new object\\'});\\n' +\n      '        return {};\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'sortable4',\n    label: 'Attributes',\n    template: '<attr-table :data=\"tableData\"></attr-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"v-model\",\n            column2: \"sortableDemo.samples4.row1column2\",\n            column3: \"Array\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"element\",\n            column2: \"sortableDemo.samples4.row2column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"div\"\n          }, {\n            column1: \"clone\",\n            column2: \"sortableDemo.samples4.row3column2\",\n            column3: \"Function\",\n            column4: \"\",\n            column5: \"function(original) {return original;}\"\n          }, {\n            column1: \"move\",\n            column2: \"sortableDemo.samples4.row4column2\",\n            column3: \"Function\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"options\",\n            column2: \"sortableDemo.samples4.row5column2\",\n            column3: \"Object\",\n            column4: \"\",\n            column5: \"\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'sortable5',\n    label: 'Options',\n    template: '<attr-table :data=\"tableData\"></attr-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"group\",\n            column2: \"sortableDemo.samples5.row1column2\",\n            column3: \"String / Object\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"sort\",\n            column2: \"sortableDemo.samples5.row2column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"true\"\n          }, {\n            column1: \"delay\",\n            column2: \"sortableDemo.samples5.row3column2\",\n            column3: \"Number\",\n            column4: \"\",\n            column5: \"0\"\n          }, {\n            column1: \"disabled\",\n            column2: \"sortableDemo.samples5.row4column2\",\n            column3: \"Function\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"handle\",\n            column2: \"sortableDemo.samples5.row5column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"null\"\n          }, {\n            column1: \"filter\",\n            column2: \"sortableDemo.samples5.row6column2\",\n            column3: \"String / Function\",\n            column4: \"\",\n            column5: \"null\"\n          }, {\n            column1: \"ghostClass\",\n            column2: \"sortableDemo.samples5.row7column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"chosenClass\",\n            column2: \"sortableDemo.samples5.row8column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'sortable6',\n    label: 'Group',\n    template: '<attr-table :data=\"tableData\"></attr-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"name\",\n            column2: \"sortableDemo.samples6.row1column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"pull\",\n            column2: \"sortableDemo.samples6.row2column2\",\n            column3: \"Boolean / String / Function\",\n            column4: \"true, false, 'clone', function\",\n            column5: \"true\"\n          }, {\n            column1: \"put\",\n            column2: \"sortableDemo.samples6.row3column2\",\n            column3: \"Boolean / Array / Function\",\n            column4: \"\",\n            column5: \"true\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'sortable7',\n    label: 'Events',\n    template: '<event-table :data=\"tableData\"></event-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"start\",\n            column2: \"sortableDemo.samples7.row1column2\",\n            column3: \"Event Object\"\n          }, {\n            column1: \"add\",\n            column2: \"sortableDemo.samples7.row2column2\",\n            column3: \"Event Object\"\n          }, {\n            column1: \"remove\",\n            column2: \"sortableDemo.samples7.row3column2\",\n            column3: \"Event Object\"\n          }, {\n            column1: \"update\",\n            column2: \"sortableDemo.samples7.row4column2\",\n            column3: \"Event Object\"\n          }, {\n            column1: \"end\",\n            column2: \"sortableDemo.samples7.row5column2\",\n            column3: \"Event Object\"\n          }, {\n            column1: \"choose\",\n            column2: \"sortableDemo.samples7.row6column2\",\n            column3: \"Event Object\"\n          }, {\n            column1: \"sort\",\n            column2: \"sortableDemo.samples7.row7column2\",\n            column3: \"Event Object\"\n          }, {\n            column1: \"filter\",\n            column2: \"sortableDemo.samples7.row8column2\",\n            column3: \"Event Object\"\n          }, {\n            column1: \"clone\",\n            column2: \"sortableDemo.samples7.row9column2\",\n            column3: \"Event Object\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }]\n};\nmodule.exports = sortableDemo;\n","export default {\"path\":\"/SplitPanesDemo\",\"name\":\"SplitPanesDemo\",\"head\":{\"label\":\"SplitPanesDemo.label\",\"description\":\"SplitPanesDemo.description\"},\"samples\":[{\"id\":\"SplitPanesDemo.sample1\",\"label\":\"SplitPanesDemo.sample1.label\",\"description\":\"SplitPanesDemo.sample1.description\",\"code\":\"<vue-split-panes style=\\\"height: 400px\\\">\\r\\n  <vue-split-pane min-size=\\\"20\\\"><span>1</span></vue-split-pane>\\r\\n  <vue-split-pane>\\r\\n    <vue-split-panes horizontal>\\r\\n      <vue-split-pane><span>2</span></vue-split-pane>\\r\\n      <vue-split-pane><span>3</span></vue-split-pane>\\r\\n      <vue-split-pane><span>4</span></vue-split-pane>\\r\\n    </vue-split-panes>\\r\\n  </vue-split-pane>\\r\\n  <vue-split-pane><span>5</span></vue-split-pane>\\r\\n</vue-split-panes>\\n\\n<script>\\nnew Vue({\\r\\n  data: function () {\\r\\n    return {\\r\\r\\r\\r\\n    };\\r\\n  },\\r\\r\\n};)\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-split-panes style=\\\"height: 400px\\\">\\r\\n      <vue-split-pane min-size=\\\"20\\\"><span>1</span></vue-split-pane>\\r\\n      <vue-split-pane>\\r\\n        <vue-split-panes horizontal>\\r\\n          <vue-split-pane><span>2</span></vue-split-pane>\\r\\n          <vue-split-pane><span>3</span></vue-split-pane>\\r\\n          <vue-split-pane><span>4</span></vue-split-pane>\\r\\n        </vue-split-panes>\\r\\n      </vue-split-pane>\\r\\n      <vue-split-pane><span>5</span></vue-split-pane>\\r\\n    </vue-split-panes></div>\",\"parameter\": {\r\n  data: function () {\r\n    return {\r\r\r\r\n    };\r\n  },\r\r\n}},{\"id\":\"SplitPanesDemo.sample2\",\"label\":\"SplitPanesDemo.sample2.label\",\"description\":\"SplitPanesDemo.sample2.description\",\"code\":\"<vue-split-panes horizontal style=\\\"height: 400px\\\">\\r\\n  <vue-split-pane min-size=\\\"20\\\" max-size=\\\"70\\\" size=\\\"65\\\">\\r\\n    <span>1</span>\\r\\n  </vue-split-pane>\\r\\n  <vue-split-pane>\\r\\n    <span>2</span>\\r\\n  </vue-split-pane>\\r\\n  <vue-split-pane max-size=\\\"70\\\">\\r\\n    <span>3</span>\\r\\n  </vue-split-pane>\\r\\n</vue-split-panes>\\n\\n<script>\\nnew Vue({\\r\\n  data: function () {\\r\\n    return {\\r\\r\\r\\r\\n    };\\r\\n  },\\r\\r\\n};)\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-split-panes horizontal style=\\\"height: 400px\\\">\\r\\n      <vue-split-pane min-size=\\\"20\\\" max-size=\\\"70\\\" size=\\\"65\\\">\\r\\n        <span>1</span>\\r\\n      </vue-split-pane>\\r\\n      <vue-split-pane>\\r\\n        <span>2</span>\\r\\n      </vue-split-pane>\\r\\n      <vue-split-pane max-size=\\\"70\\\">\\r\\n        <span>3</span>\\r\\n      </vue-split-pane>\\r\\n    </vue-split-panes></div>\",\"parameter\": {\r\n  data: function () {\r\n    return {\r\r\r\r\n    };\r\n  },\r\r\n}},{\"id\":\"SplitPanesDemo.sample3\",\"label\":\"SplitPanesDemo.sample3.label\",\"description\":\"SplitPanesDemo.sample3.description\",\"code\":\"<vue-split-panes horizontal :push-other-panes=\\\"false\\\" style=\\\"height: 400px\\\">\\r\\n  <vue-split-pane>\\r\\n    <span>1</span>\\r\\n  </vue-split-pane>\\r\\n  <vue-split-pane>\\r\\n    <vue-split-panes :push-other-panes=\\\"false\\\">\\r\\n      <vue-split-pane>\\r\\n        <span>2</span>\\r\\n      </vue-split-pane>\\r\\n      <vue-split-pane>\\r\\n        <span>3</span>\\r\\n      </vue-split-pane>\\r\\n      <vue-split-pane>\\r\\n        <span>4</span>\\r\\n      </vue-split-pane>\\r\\n    </vue-split-panes>\\r\\n  </vue-split-pane>\\r\\n  <vue-split-pane>\\r\\n    <span>5</span>\\r\\n  </vue-split-pane>\\r\\n</vue-split-panes>\\n\\n<script>\\nnew Vue({\\r\\n  data: function () {\\r\\n    return {\\r\\r\\r\\r\\n    };\\r\\n  },\\r\\r\\n};)\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-split-panes horizontal :push-other-panes=\\\"false\\\" style=\\\"height: 400px\\\">\\r\\n      <vue-split-pane>\\r\\n        <span>1</span>\\r\\n      </vue-split-pane>\\r\\n      <vue-split-pane>\\r\\n        <vue-split-panes :push-other-panes=\\\"false\\\">\\r\\n          <vue-split-pane>\\r\\n            <span>2</span>\\r\\n          </vue-split-pane>\\r\\n          <vue-split-pane>\\r\\n            <span>3</span>\\r\\n          </vue-split-pane>\\r\\n          <vue-split-pane>\\r\\n            <span>4</span>\\r\\n          </vue-split-pane>\\r\\n        </vue-split-panes>\\r\\n      </vue-split-pane>\\r\\n      <vue-split-pane>\\r\\n        <span>5</span>\\r\\n      </vue-split-pane>\\r\\n    </vue-split-panes></div>\",\"parameter\": {\r\n  data: function () {\r\n    return {\r\r\r\r\n    };\r\n  },\r\r\n}},{\"id\":\"SplitPanesDemo.sample4\",\"label\":\"SplitPanesDemo.sample4.label\",\"description\":\"SplitPanesDemo.sample4.description\",\"code\":\"<vue-split-panes style=\\\"height: 400px\\\">\\r\\n  <vue-split-pane v-for=\\\"i in 8\\\" :key=\\\"i\\\" min-size=\\\"5\\\">\\r\\n    <span>{{ i }}</span>\\r\\n  </vue-split-pane>\\r\\n</vue-split-panes>\\n\\n<script>\\nnew Vue({\\r\\n  data: function () {\\r\\n    return {\\r\\r\\r\\r\\n    };\\r\\n  },\\r\\r\\n};)\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-split-panes style=\\\"height: 400px\\\">\\r\\n      <vue-split-pane v-for=\\\"i in 8\\\" :key=\\\"i\\\" min-size=\\\"5\\\">\\r\\n        <span>{{ i }}</span>\\r\\n      </vue-split-pane>\\r\\n    </vue-split-panes></div>\",\"parameter\": {\r\n  data: function () {\r\n    return {\r\r\r\r\n    };\r\n  },\r\r\n}},{\"id\":\"SplitPanesDemo.sample5\",\"label\":\"SplitPanesDemo.sample5.label\",\"description\":\"SplitPanesDemo.sample5.description\",\"code\":\"<vue-button @click=\\\"panesNumber++\\\">Add pane</vue-button>\\r\\n<vue-button @click=\\\"panesNumber--\\\">Remove pane</vue-button>\\r\\n\\r\\n<vue-split-panes style=\\\"height: 400px\\\">\\r\\n  <vue-split-pane v-for=\\\"i in panesNumber\\\" :key=\\\"i\\\">\\r\\n    <span>{{ i }}</span>\\r\\n  </vue-split-pane>\\r\\n</vue-split-panes>\\n\\n<script>\\nnew Vue({\\r\\n  data: function () {\\r\\n    return {\\r\\r\\n      panesNumber: 5,\\r\\r\\r\\r\\n    };\\r\\n  },\\r\\r\\n};)\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-button @click=\\\"panesNumber++\\\">Add pane</vue-button>\\r\\n    <vue-button @click=\\\"panesNumber--\\\">Remove pane</vue-button>\\r\\n\\r\\n    <vue-split-panes style=\\\"height: 400px\\\">\\r\\n      <vue-split-pane v-for=\\\"i in panesNumber\\\" :key=\\\"i\\\">\\r\\n        <span>{{ i }}</span>\\r\\n      </vue-split-pane>\\r\\n    </vue-split-panes></div>\",\"parameter\": {\r\n  data: function () {\r\n    return {\r\r\n      panesNumber: 5,\r\r\r\r\n    };\r\n  },\r\r\n}},{\"id\":\"SplitPanesDemo.sample6\",\"label\":\"SplitPanesDemo.sample6.label\",\"description\":\"SplitPanesDemo.sample6.description\",\"code\":\"<vue-split-panes :first-splitter=\\\"true\\\" style=\\\"height: 400px\\\">\\r\\n  <vue-split-pane v-for=\\\"i in 3\\\" :key=\\\"i\\\">\\r\\n    <span>{{ i }}</span>\\r\\n  </vue-split-pane>\\r\\n</vue-split-panes>\\n\\n<script>\\nnew Vue({\\r\\n  data: function () {\\r\\n    return {\\r\\r\\r\\r\\n    };\\r\\n  },\\r\\r\\n};)\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-split-panes :first-splitter=\\\"true\\\" style=\\\"height: 400px\\\">\\r\\n      <vue-split-pane v-for=\\\"i in 3\\\" :key=\\\"i\\\">\\r\\n        <span>{{ i }}</span>\\r\\n      </vue-split-pane>\\r\\n    </vue-split-panes></div>\",\"parameter\": {\r\n  data: function () {\r\n    return {\r\r\r\r\n    };\r\n  },\r\r\n}},{\"id\":\"SplitPanesDemo.sample7\",\"label\":\"SplitPanesDemo.sample7.label\",\"description\":\"SplitPanesDemo.sample7.description\",\"code\":\"<vue-split-panes\\r\\n  @resize=\\\"log('resize', $event)\\\"\\r\\n  @resized=\\\"log('resized', $event)\\\"\\r\\n  @pane-maximize=\\\"log('pane-maximize', $event)\\\"\\r\\n  @pane-click=\\\"log('pane-click', $event)\\\"\\r\\n  @ready=\\\"log('ready', $event)\\\"\\r\\n  @splitter-click=\\\"log('splitter-click', $event)\\\"\\r\\n  style=\\\"height: 400px\\\"\\r\\n>\\r\\n  <vue-split-pane v-for=\\\"i in 3\\\" :key=\\\"i\\\" min-size=\\\"10\\\">\\r\\n    <span>{{ i }}</span>\\r\\n  </vue-split-pane>\\r\\n</vue-split-panes>\\n\\n<script>\\nnew Vue({\\r\\n  data: function () {\\r\\n    return {\\r\\r\\r\\r\\n    };\\r\\n  },\\r\\r\\n  methods: {\\r\\n    log: function (type) {\\r\\n      this.$notify.info({ title: 'Event: ' + type });\\r\\n    },\\r\\n  },\\r\\r\\n};)\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-split-panes\\r\\n      @resize=\\\"log('resize', $event)\\\"\\r\\n      @resized=\\\"log('resized', $event)\\\"\\r\\n      @pane-maximize=\\\"log('pane-maximize', $event)\\\"\\r\\n      @pane-click=\\\"log('pane-click', $event)\\\"\\r\\n      @ready=\\\"log('ready', $event)\\\"\\r\\n      @splitter-click=\\\"log('splitter-click', $event)\\\"\\r\\n      style=\\\"height: 400px\\\"\\r\\n    >\\r\\n      <vue-split-pane v-for=\\\"i in 3\\\" :key=\\\"i\\\" min-size=\\\"10\\\">\\r\\n        <span>{{ i }}</span>\\r\\n      </vue-split-pane>\\r\\n    </vue-split-panes></div>\",\"parameter\": {\r\n  data: function () {\r\n    return {\r\r\r\r\n    };\r\n  },\r\r\n  methods: {\r\n    log: function (type) {\r\n      this.$notify.info({ title: 'Event: ' + type });\r\n    },\r\n  },\r\r\n}},{\"id\":\"SplitPanesDemo.sample8\",\"label\":\"SplitPanesDemo.sample8.label\",\"description\":\"SplitPanesDemo.sample8.description\",\"code\":\"<vue-split-panes theme=\\\"line\\\" style=\\\"height: 400px\\\">\\r\\n  <vue-split-pane v-for=\\\"i in 3\\\" :key=\\\"i\\\">\\r\\n    <span>{{ i }}</span>\\r\\n  </vue-split-pane>\\r\\n</vue-split-panes>\\n\\n<script>\\nnew Vue({\\r\\n  data: function () {\\r\\n    return {\\r\\r\\r\\r\\n    };\\r\\n  },\\r\\r\\n};)\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-split-panes theme=\\\"line\\\" style=\\\"height: 400px\\\">\\r\\n      <vue-split-pane v-for=\\\"i in 3\\\" :key=\\\"i\\\">\\r\\n        <span>{{ i }}</span>\\r\\n      </vue-split-pane>\\r\\n    </vue-split-panes></div>\",\"parameter\": {\r\n  data: function () {\r\n    return {\r\r\r\r\n    };\r\n  },\r\r\n}},{\"id\":\"SplitPanesDemo.sample9\",\"label\":\"SplitPanesDemo.sample9.label\",\"code\":\"<attr-table :data=\\\"tableData\\\" notshowmeta></attr-table>\\n\\n<script>\\nnew Vue({\\r\\n  data: function () {\\r\\n    return {\\r\\r\\r\\n      tableData: [\\r\\n        {\\r\\n          column1: 'horizontal',\\r\\n          column2: 'SplitPanesDemo.sample9.row1column2',\\r\\n          column3: 'Boolean',\\r\\n          column4: '',\\r\\n          column5: 'false',\\r\\n        },\\r\\n        {\\r\\n          column1: 'push-other-panes',\\r\\n          column2: 'SplitPanesDemo.sample9.row2column2',\\r\\n          column3: 'Boolean',\\r\\n          column4: '',\\r\\n          column5: 'true',\\r\\n        },\\r\\n        {\\r\\n          column1: 'dbl-click-splitter',\\r\\n          column2: 'SplitPanesDemo.sample9.row3column2',\\r\\n          column3: 'Boolean',\\r\\n          column4: '',\\r\\n          column5: 'true',\\r\\n        },\\r\\n        {\\r\\n          column1: 'rtl',\\r\\n          column2: 'SplitPanesDemo.sample9.row4column2',\\r\\n          column3: 'Boolean',\\r\\n          column4: '',\\r\\n          column5: 'false',\\r\\n        },\\r\\n        {\\r\\n          column1: 'first-splitter',\\r\\n          column2: 'SplitPanesDemo.sample9.row5column2',\\r\\n          column3: 'Boolean',\\r\\n          column4: '',\\r\\n          column5: 'false',\\r\\n        },\\r\\n      ],\\r\\r\\r\\n    };\\r\\n  },\\r\\r\\n};)\\n</script>\",\"template\":\"    <attr-table :data=\\\"tableData\\\" notshowmeta></attr-table>\",\"parameter\": {\r\n  data: function () {\r\n    return {\r\r\r\n      tableData: [\r\n        {\r\n          column1: 'horizontal',\r\n          column2: 'SplitPanesDemo.sample9.row1column2',\r\n          column3: 'Boolean',\r\n          column4: '',\r\n          column5: 'false',\r\n        },\r\n        {\r\n          column1: 'push-other-panes',\r\n          column2: 'SplitPanesDemo.sample9.row2column2',\r\n          column3: 'Boolean',\r\n          column4: '',\r\n          column5: 'true',\r\n        },\r\n        {\r\n          column1: 'dbl-click-splitter',\r\n          column2: 'SplitPanesDemo.sample9.row3column2',\r\n          column3: 'Boolean',\r\n          column4: '',\r\n          column5: 'true',\r\n        },\r\n        {\r\n          column1: 'rtl',\r\n          column2: 'SplitPanesDemo.sample9.row4column2',\r\n          column3: 'Boolean',\r\n          column4: '',\r\n          column5: 'false',\r\n        },\r\n        {\r\n          column1: 'first-splitter',\r\n          column2: 'SplitPanesDemo.sample9.row5column2',\r\n          column3: 'Boolean',\r\n          column4: '',\r\n          column5: 'false',\r\n        },\r\n      ],\r\r\r\n    };\r\n  },\r\r\n},\"notshowmeta\":true},{\"id\":\"SplitPanesDemo.sample10\",\"label\":\"SplitPanesDemo.sample10.label\",\"code\":\"<event-table :data=\\\"eventData\\\" notshowmeta></event-table>\\n\\n<script>\\nnew Vue({\\r\\n  data: function () {\\r\\n    return {\\r\\r\\r\\r\\n      eventData: [{\\r\\n            column1: \\\"ready\\\",\\r\\n            column2: \\\"SplitPanesDemo.sample10.row1column2\\\",\\r\\n            column3: \\\"SplitPanesDemo.sample10.row1column3\\\"\\r\\n          },\\r\\n          {\\r\\n            column1: \\\"resize\\\",\\r\\n            column2: \\\"SplitPanesDemo.sample10.row2column2\\\",\\r\\n            column3: \\\"SplitPanesDemo.sample10.row2column3\\\"\\r\\n          },\\r\\n          {\\r\\n            column1: \\\"resized\\\",\\r\\n            column2: \\\"SplitPanesDemo.sample10.row3column2\\\",\\r\\n            column3: \\\"SplitPanesDemo.sample10.row3column3\\\"\\r\\n          },\\r\\n          {\\r\\n            column1: \\\"pane-click\\\",\\r\\n            column2: \\\"SplitPanesDemo.sample10.row4column2\\\",\\r\\n            column3: \\\"SplitPanesDemo.sample10.row4column3\\\"\\r\\n          },\\r\\n          {\\r\\n            column1: \\\"pane-maximize\\\",\\r\\n            column2: \\\"SplitPanesDemo.sample10.row5column2\\\",\\r\\n            column3: \\\"SplitPanesDemo.sample10.row5column3\\\"\\r\\n          },\\r\\n          {\\r\\n            column1: \\\"pane-add\\\",\\r\\n            column2: \\\"SplitPanesDemo.sample10.row6column2\\\",\\r\\n            column3: \\\"SplitPanesDemo.sample10.row6column3\\\"\\r\\n          },\\r\\n          {\\r\\n            column1: \\\"pane-remove\\\",\\r\\n            column2: \\\"SplitPanesDemo.sample10.row7column2\\\",\\r\\n            column3: \\\"SplitPanesDemo.sample10.row7column3\\\"\\r\\n          },\\r\\n          {\\r\\n            column1: \\\"splitter-click\\\",\\r\\n            column2: \\\"SplitPanesDemo.sample10.row8column2\\\",\\r\\n            column3: \\\"SplitPanesDemo.sample10.row8column3\\\"\\r\\n          },\\r\\n          ],\\r\\r\\n    };\\r\\n  },\\r\\r\\n};)\\n</script>\",\"template\":\"    <event-table :data=\\\"eventData\\\" notshowmeta></event-table>\",\"parameter\": {\r\n  data: function () {\r\n    return {\r\r\r\r\n      eventData: [{\r\n            column1: \"ready\",\r\n            column2: \"SplitPanesDemo.sample10.row1column2\",\r\n            column3: \"SplitPanesDemo.sample10.row1column3\"\r\n          },\r\n          {\r\n            column1: \"resize\",\r\n            column2: \"SplitPanesDemo.sample10.row2column2\",\r\n            column3: \"SplitPanesDemo.sample10.row2column3\"\r\n          },\r\n          {\r\n            column1: \"resized\",\r\n            column2: \"SplitPanesDemo.sample10.row3column2\",\r\n            column3: \"SplitPanesDemo.sample10.row3column3\"\r\n          },\r\n          {\r\n            column1: \"pane-click\",\r\n            column2: \"SplitPanesDemo.sample10.row4column2\",\r\n            column3: \"SplitPanesDemo.sample10.row4column3\"\r\n          },\r\n          {\r\n            column1: \"pane-maximize\",\r\n            column2: \"SplitPanesDemo.sample10.row5column2\",\r\n            column3: \"SplitPanesDemo.sample10.row5column3\"\r\n          },\r\n          {\r\n            column1: \"pane-add\",\r\n            column2: \"SplitPanesDemo.sample10.row6column2\",\r\n            column3: \"SplitPanesDemo.sample10.row6column3\"\r\n          },\r\n          {\r\n            column1: \"pane-remove\",\r\n            column2: \"SplitPanesDemo.sample10.row7column2\",\r\n            column3: \"SplitPanesDemo.sample10.row7column3\"\r\n          },\r\n          {\r\n            column1: \"splitter-click\",\r\n            column2: \"SplitPanesDemo.sample10.row8column2\",\r\n            column3: \"SplitPanesDemo.sample10.row8column3\"\r\n          },\r\n          ],\r\r\n    };\r\n  },\r\r\n},\"notshowmeta\":true}],\"styles\":\"\"}","'use strict';\nvar stepsDemo = {\n  path: '/steps',\n  name: 'steps',\n  head: {\n    label: 'stepsDemo.label',\n    description: 'stepsDemo.description'\n  },\n  samples: [{\n    id: 'steps1',\n    label: 'stepsDemo.samples1.label',\n    description: 'stepsDemo.samples1.description',\n    template: '<div class=\"source\"><vue-steps :space=\"200\" :active=\"active\" finish-status=\"success\"><vue-step title=\"Step 1\"></vue-step><vue-step title=\"Step 2\"></vue-step><vue-step title=\"Step 3\"></vue-step></vue-steps><vue-button style=\"margin-top: 12px;\" @click=\"next\">Next</vue-button></div>',\n    parameter: {\n      data: function () {\n        return {\n          active: 0\n        }\n      },\n      methods: {\n        next: function (tab, event) {\n          if (this.active++ > 2) this.active = 0;\n        }\n      }\n    },\n    code: '<vue-steps :space=\"200\" :active=\"active\" finish-status=\"success\">\\n' +\n      '  <vue-step title=\"Step 1\"></vue-step>\\n' +\n      '  <vue-step title=\"Step 2\"></vue-step>\\n' +\n      '  <vue-step title=\"Step 3\"></vue-step>\\n' +\n      '</vue-steps>\\n' +\n      '<vue-button style=\"margin-top: 12px;\" @click=\"next\">Next</vue-button>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function() {\\n' +\n      '      return {\\n' +\n      '        active: 0\\n' +\n      '      }\\n' +\n      '    },\\n' +\n      '    methods: {\\n' +\n      '      next: function() {\\n' +\n      '        if (this.active++ > 2) this.active = 0;\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'steps2',\n    label: 'stepsDemo.samples2.label',\n    description: 'stepsDemo.samples2.description',\n    template: '<div class=\"source\"><vue-steps :space=\"250\" :active=\"1\"><vue-step><span slot=\"title\">Step 1</span><span>Some description</span></vue-step><vue-step title=\"Step 2\"><vue-button>Button</vue-button></vue-step><vue-step title=\"Step 3\"><vue-button type=\"primary\" icon=\"vue-icon-search\">Search</vue-button></vue-step></vue-steps></div>',\n    code: '<vue-steps :space=\"250\" :active=\"1\">\\n' +\n      '  <vue-step>\\n' +\n      '    <span slot=\"title\">Step 1</span>\\n' +\n      '    <span>Some description</span>\\n' +\n      '  </vue-step>\\n' +\n      '  <vue-step title=\"Step 2\">\\n' +\n      '    <vue-button>Button</vue-button>\\n' +\n      '  </vue-step>\\n' +\n      '  <vue-step title=\"Step 3\">\\n' +\n      '    <vue-button type=\"primary\" icon=\"vue-icon-search\">Search</vue-button>\\n' +\n      '  </vue-step>\\n' +\n      '</vue-steps>'\n  }, {\n    id: 'steps3',\n    label: 'stepsDemo.samples3.label',\n    description: 'stepsDemo.samples3.description',\n    template: '<div class=\"source\"><vue-steps :space=\"250\" :active=\"1\" ><vue-step title=\"Step 1\" icon=\"vue-icon-edit\"></vue-step><vue-step title=\"Step 2\" icon=\"vue-icon-upload\"></vue-step><vue-step title=\"Step 3\" icon=\"vue-icon-picture\"></vue-step></vue-steps></div>',\n    code: '<vue-steps :space=\"250\" :active=\"1\">\\n' +\n      '  <vue-step title=\"Step 1\" icon=\"vue-icon-edit\">\\n' +\n      '  </vue-step>\\n' +\n      '  <vue-step title=\"Step 2\" icon=\"vue-icon-upload\">\\n' +\n      '  </vue-step>\\n' +\n      '  <vue-step title=\"Step 3\" icon=\"vue-icon-picture\">\\n' +\n      '  </vue-step>\\n' +\n      '</vue-steps>'\n  }, {\n    id: 'steps4',\n    label: 'stepsDemo.samples4.label',\n    description: 'stepsDemo.samples4.description',\n    template: '<div class=\"source\"><vue-steps :space=\"100\" :active=\"1\" direction=\"vertical\"><vue-step><span slot=\"title\">Step 1</span><span>Some description</span></vue-step><vue-step title=\"Step 2\"><vue-button>Button</vue-button></vue-step><vue-step title=\"Step 3\"><vue-button type=\"primary\" icon=\"vue-icon-search\">Search</vue-button></vue-step></vue-steps></div>',\n    code: '<vue-steps :space=\"100\" :active=\"1\" direction=\"vertical\">\\n' +\n      '  <vue-step>\\n' +\n      '    <span slot=\"title\">Step 1</span>\\n' +\n      '    <span>Some description</span>\\n' +\n      '  </vue-step>\\n' +\n      '  <vue-step title=\"Step 2\">\\n' +\n      '    <vue-button>Button</vue-button>\\n' +\n      '  </vue-step>\\n' +\n      '  <vue-step title=\"Step 3\">\\n' +\n      '    <vue-button type=\"primary\" icon=\"vue-icon-search\">Search</vue-button>\\n' +\n      '  </vue-step>\\n' +\n      '</vue-steps>'\n  }, {\n    id: 'steps5',\n    label: 'Steps Attributes',\n    template: '<event-table :data=\"tableData\"></event-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"space\",\n            column2: \"stepsDemo.samples5.row1column2\",\n            column3: \"Number / String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"direction\",\n            column2: \"stepsDemo.samples5.row2column2\",\n            column3: \"String\",\n            column4: \"vertical, horizontal\",\n            column5: \"horizontal\"\n          }, {\n            column1: \"active\",\n            column2: \"stepsDemo.samples5.row3column2\",\n            column3: \"Number\",\n            column4: \"\",\n            column5: \"0\"\n          }, {\n            column1: \"process-status\",\n            column2: \"stepsDemo.samples5.row4column2\",\n            column3: \"String\",\n            column4: \"wait, process, finish, error, success\",\n            column5: \"process\"\n          }, {\n            column1: \"finish-status\",\n            column2: \"stepsDemo.samples5.row5column2\",\n            column3: \"String\",\n            column4: \"wait, process, finish, error, success\",\n            column5: \"finish\"\n          }, {\n            column1: \"align-center\",\n            column2: \"stepsDemo.samples5.row6column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"center\",\n            column2: \"stepsDemo.samples5.row7column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'steps6',\n    label: 'Step Attributes',\n    template: '<event-table :data=\"tableData\"></event-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"title\",\n            column2: \"stepsDemo.samples6.row1column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"icon\",\n            column2: \"stepsDemo.samples6.row2column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"status\",\n            column2: \"stepsDemo.samples6.row3column2\",\n            column3: \"String\",\n            column4: \"wait, process, finish, error, success\",\n            column5: \"\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'steps7',\n    label: 'Slots',\n    template: '<slot-table :data=\"tableData\"></slot-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"\",\n            column2: \"stepsDemo.samples7.row1column2\"\n          }, {\n            column1: \"title\",\n            column2: \"stepsDemo.samples7.row2column2\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }]\n};\nmodule.exports = stepsDemo;\n\n","export default {\"path\":\"/SvgIconDemo\",\"name\":\"SvgIconDemo\",\"head\":{\"label\":\"SvgIconDemo.label\",\"description\":\"SvgIconDemo.description\"},\"samples\":[{\"id\":\"SvgIconDemo.sample1\",\"label\":\"SvgIconDemo.sample1.label\",\"description\":\"SvgIconDemo.sample1.description\",\"code\":\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" style=\\\"position: absolute; width: 0; height: 0\\\">\\r\\n  <symbol xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 128 128\\\" id=\\\"icon-clipboard\\\"><path d=\\\"M54.857 118.857h64V73.143H89.143c-1.902 0-3.52-.668-4.855-2.002-1.335-1.335-2.002-2.954-2.002-4.855V36.57H54.857v82.286zM73.143 16v-4.571a2.2 2.2 0 0 0-.677-1.61 2.198 2.198 0 0 0-1.609-.676H20.571c-.621 0-1.158.225-1.609.676a2.198 2.198 0 0 0-.676 1.61V16a2.2 2.2 0 0 0 .676 1.61c.451.45.988.676 1.61.676h50.285c.622 0 1.158-.226 1.61-.677.45-.45.676-.987.676-1.609zm18.286 48h21.357L91.43 42.642V64zM128 73.143v48c0 1.902-.667 3.52-2.002 4.855-1.335 1.335-2.953 2.002-4.855 2.002H52.57c-1.901 0-3.52-.667-4.854-2.002-1.335-1.335-2.003-2.953-2.003-4.855v-11.429H6.857c-1.902 0-3.52-.667-4.855-2.002C.667 106.377 0 104.759 0 102.857v-96c0-1.902.667-3.52 2.002-4.855C3.337.667 4.955 0 6.857 0h77.714c1.902 0 3.52.667 4.855 2.002 1.335 1.335 2.003 2.953 2.003 4.855V30.29c1 .622 1.856 1.29 2.569 2.003l29.147 29.147c1.335 1.335 2.478 3.145 3.429 5.43.95 2.287 1.426 4.383 1.426 6.291v-.018z\\\"></path></symbol>\\r\\n</svg>\\r\\n\\r\\n<vue-svg-icon icon-class=\\\"clipboard\\\"></vue-svg-icon>\\r\\n<vue-svg-icon icon-class=\\\"clipboard\\\" style=\\\"font-size: 32px\\\"></vue-svg-icon>\\n\\n<script>\\nnew Vue({\\r\\n  data: function () {\\r\\n    return {\\r\\r\\r\\n    }\\r\\n  }\\r\\n};)\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" style=\\\"position: absolute; width: 0; height: 0\\\">\\r\\n      <symbol xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 128 128\\\" id=\\\"icon-clipboard\\\"><path d=\\\"M54.857 118.857h64V73.143H89.143c-1.902 0-3.52-.668-4.855-2.002-1.335-1.335-2.002-2.954-2.002-4.855V36.57H54.857v82.286zM73.143 16v-4.571a2.2 2.2 0 0 0-.677-1.61 2.198 2.198 0 0 0-1.609-.676H20.571c-.621 0-1.158.225-1.609.676a2.198 2.198 0 0 0-.676 1.61V16a2.2 2.2 0 0 0 .676 1.61c.451.45.988.676 1.61.676h50.285c.622 0 1.158-.226 1.61-.677.45-.45.676-.987.676-1.609zm18.286 48h21.357L91.43 42.642V64zM128 73.143v48c0 1.902-.667 3.52-2.002 4.855-1.335 1.335-2.953 2.002-4.855 2.002H52.57c-1.901 0-3.52-.667-4.854-2.002-1.335-1.335-2.003-2.953-2.003-4.855v-11.429H6.857c-1.902 0-3.52-.667-4.855-2.002C.667 106.377 0 104.759 0 102.857v-96c0-1.902.667-3.52 2.002-4.855C3.337.667 4.955 0 6.857 0h77.714c1.902 0 3.52.667 4.855 2.002 1.335 1.335 2.003 2.953 2.003 4.855V30.29c1 .622 1.856 1.29 2.569 2.003l29.147 29.147c1.335 1.335 2.478 3.145 3.429 5.43.95 2.287 1.426 4.383 1.426 6.291v-.018z\\\"></path></symbol>\\r\\n    </svg>\\r\\n\\r\\n    <vue-svg-icon icon-class=\\\"clipboard\\\"></vue-svg-icon>\\r\\n    <vue-svg-icon icon-class=\\\"clipboard\\\" style=\\\"font-size: 32px\\\"></vue-svg-icon></div>\",\"parameter\": {\r\n  data: function () {\r\n    return {\r\r\r\n    }\r\n  }\r\n}},{\"id\":\"SvgIconDemo.sample2\",\"label\":\"SvgIconDemo.sample2.label\",\"description\":\"SvgIconDemo.sample2.description\",\"code\":\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" style=\\\"position: absolute; width: 0; height: 0\\\">\\r\\n  <symbol xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 128 128\\\" id=\\\"icon-clipboard\\\"><path d=\\\"M54.857 118.857h64V73.143H89.143c-1.902 0-3.52-.668-4.855-2.002-1.335-1.335-2.002-2.954-2.002-4.855V36.57H54.857v82.286zM73.143 16v-4.571a2.2 2.2 0 0 0-.677-1.61 2.198 2.198 0 0 0-1.609-.676H20.571c-.621 0-1.158.225-1.609.676a2.198 2.198 0 0 0-.676 1.61V16a2.2 2.2 0 0 0 .676 1.61c.451.45.988.676 1.61.676h50.285c.622 0 1.158-.226 1.61-.677.45-.45.676-.987.676-1.609zm18.286 48h21.357L91.43 42.642V64zM128 73.143v48c0 1.902-.667 3.52-2.002 4.855-1.335 1.335-2.953 2.002-4.855 2.002H52.57c-1.901 0-3.52-.667-4.854-2.002-1.335-1.335-2.003-2.953-2.003-4.855v-11.429H6.857c-1.902 0-3.52-.667-4.855-2.002C.667 106.377 0 104.759 0 102.857v-96c0-1.902.667-3.52 2.002-4.855C3.337.667 4.955 0 6.857 0h77.714c1.902 0 3.52.667 4.855 2.002 1.335 1.335 2.003 2.953 2.003 4.855V30.29c1 .622 1.856 1.29 2.569 2.003l29.147 29.147c1.335 1.335 2.478 3.145 3.429 5.43.95 2.287 1.426 4.383 1.426 6.291v-.018z\\\"></path></symbol>\\r\\n  <symbol xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 128 64\\\" id=\\\"icon-eye\\\"><path d=\\\"M127.072 7.994c1.37-2.208.914-5.152-.914-6.87-2.056-1.717-4.797-1.226-6.396.982-.229.245-25.586 32.382-55.74 32.382-29.24 0-55.74-32.382-55.968-32.627-1.6-1.963-4.57-2.208-6.397-.49C-.17 3.086-.399 6.275 1.2 8.238c.457.736 5.94 7.36 14.62 14.72L4.17 35.96c-1.828 1.963-1.6 5.152.228 6.87.457.98 1.6 1.471 2.742 1.471s2.284-.49 3.198-1.472l12.564-13.983c5.94 4.416 13.021 8.587 20.788 11.53l-4.797 17.418c-.685 2.699.686 5.397 3.198 6.133h1.37c2.057 0 3.884-1.472 4.341-3.68L52.6 42.83c3.655.736 7.538 1.227 11.422 1.227 3.883 0 7.767-.49 11.422-1.227l4.797 17.173c.457 2.208 2.513 3.68 4.34 3.68.457 0 .914 0 1.143-.246 2.513-.736 3.883-3.434 3.198-6.133l-4.797-17.172c7.767-2.944 14.848-7.114 20.788-11.53l12.336 13.738c.913.981 2.056 1.472 3.198 1.472s2.284-.49 3.198-1.472c1.828-1.963 1.828-4.906.228-6.87l-11.65-13.001c9.366-7.36 14.849-14.474 14.849-14.474z\\\"></path></symbol>\\r\\n  <symbol xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 128 128\\\" id=\\\"icon-theme\\\"><path d=\\\"M125.5 36.984L95.336 2.83C93.735 1.018 91.565 0 89.3 0c-2.263 0-4.433 1.018-6.033 2.83l-3.786 4.286c-1.6 1.812-3.77 2.83-6.032 2.831H54.553c-2.263 0-4.434-1.018-6.033-2.83L44.734 2.83C43.134 1.018 40.964 0 38.701 0c-2.263 0-4.434 1.018-6.034 2.83L2.5 36.984C.9 38.796 0 41.254 0 43.815c0 2.562.899 5.02 2.5 6.831L14.565 64.31c2.178 2.468 5.367 3.403 8.33 2.444 1.35-.435 2.709.592 2.709 2.18v49.407c0 5.313 3.84 9.66 8.532 9.66h59.726c4.693 0 8.532-4.347 8.532-9.66V68.934c0-1.59 1.36-2.616 2.71-2.181 2.962.96 6.15.024 8.329-2.444L125.5 50.646c1.6-1.811 2.499-4.269 2.499-6.83 0-2.563-.899-5.02-2.5-6.832z\\\"></path></symbol>\\r\\n</svg>\\r\\n\\r\\n<div class=\\\"margin-bottom20\\\">\\r\\n  <vue-button>\\r\\n    <vue-svg-icon icon-class=\\\"theme\\\"></vue-svg-icon>\\r\\n  </vue-button>\\r\\n\\r\\n  <vue-button type=\\\"primary\\\">\\r\\n    <vue-svg-icon icon-class=\\\"clipboard\\\"></vue-svg-icon><span>复制数据</span>\\r\\n  </vue-button>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"margin-bottom20\\\">\\r\\n  <vue-input>\\r\\n    <i class=\\\"vue-input__icon\\\" slot=\\\"icon\\\">\\r\\n      <vue-svg-icon icon-class=\\\"eye\\\"></vue-svg-icon>\\r\\n    </i>\\r\\n  </vue-input>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"margin-bottom20\\\">\\r\\n  <vue-input>\\r\\n    <vue-button slot=\\\"append\\\">\\r\\n      <vue-svg-icon icon-class=\\\"clipboard\\\"></vue-svg-icon>\\r\\n    </vue-button>\\r\\n  </vue-input>\\r\\n</div>\\n\\n<script>\\nnew Vue({\\r\\n  data: function () {\\r\\n    return {\\r\\r\\r\\n    }\\r\\n  }\\r\\n};)\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" style=\\\"position: absolute; width: 0; height: 0\\\">\\r\\n      <symbol xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 128 128\\\" id=\\\"icon-clipboard\\\"><path d=\\\"M54.857 118.857h64V73.143H89.143c-1.902 0-3.52-.668-4.855-2.002-1.335-1.335-2.002-2.954-2.002-4.855V36.57H54.857v82.286zM73.143 16v-4.571a2.2 2.2 0 0 0-.677-1.61 2.198 2.198 0 0 0-1.609-.676H20.571c-.621 0-1.158.225-1.609.676a2.198 2.198 0 0 0-.676 1.61V16a2.2 2.2 0 0 0 .676 1.61c.451.45.988.676 1.61.676h50.285c.622 0 1.158-.226 1.61-.677.45-.45.676-.987.676-1.609zm18.286 48h21.357L91.43 42.642V64zM128 73.143v48c0 1.902-.667 3.52-2.002 4.855-1.335 1.335-2.953 2.002-4.855 2.002H52.57c-1.901 0-3.52-.667-4.854-2.002-1.335-1.335-2.003-2.953-2.003-4.855v-11.429H6.857c-1.902 0-3.52-.667-4.855-2.002C.667 106.377 0 104.759 0 102.857v-96c0-1.902.667-3.52 2.002-4.855C3.337.667 4.955 0 6.857 0h77.714c1.902 0 3.52.667 4.855 2.002 1.335 1.335 2.003 2.953 2.003 4.855V30.29c1 .622 1.856 1.29 2.569 2.003l29.147 29.147c1.335 1.335 2.478 3.145 3.429 5.43.95 2.287 1.426 4.383 1.426 6.291v-.018z\\\"></path></symbol>\\r\\n      <symbol xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 128 64\\\" id=\\\"icon-eye\\\"><path d=\\\"M127.072 7.994c1.37-2.208.914-5.152-.914-6.87-2.056-1.717-4.797-1.226-6.396.982-.229.245-25.586 32.382-55.74 32.382-29.24 0-55.74-32.382-55.968-32.627-1.6-1.963-4.57-2.208-6.397-.49C-.17 3.086-.399 6.275 1.2 8.238c.457.736 5.94 7.36 14.62 14.72L4.17 35.96c-1.828 1.963-1.6 5.152.228 6.87.457.98 1.6 1.471 2.742 1.471s2.284-.49 3.198-1.472l12.564-13.983c5.94 4.416 13.021 8.587 20.788 11.53l-4.797 17.418c-.685 2.699.686 5.397 3.198 6.133h1.37c2.057 0 3.884-1.472 4.341-3.68L52.6 42.83c3.655.736 7.538 1.227 11.422 1.227 3.883 0 7.767-.49 11.422-1.227l4.797 17.173c.457 2.208 2.513 3.68 4.34 3.68.457 0 .914 0 1.143-.246 2.513-.736 3.883-3.434 3.198-6.133l-4.797-17.172c7.767-2.944 14.848-7.114 20.788-11.53l12.336 13.738c.913.981 2.056 1.472 3.198 1.472s2.284-.49 3.198-1.472c1.828-1.963 1.828-4.906.228-6.87l-11.65-13.001c9.366-7.36 14.849-14.474 14.849-14.474z\\\"></path></symbol>\\r\\n      <symbol xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 128 128\\\" id=\\\"icon-theme\\\"><path d=\\\"M125.5 36.984L95.336 2.83C93.735 1.018 91.565 0 89.3 0c-2.263 0-4.433 1.018-6.033 2.83l-3.786 4.286c-1.6 1.812-3.77 2.83-6.032 2.831H54.553c-2.263 0-4.434-1.018-6.033-2.83L44.734 2.83C43.134 1.018 40.964 0 38.701 0c-2.263 0-4.434 1.018-6.034 2.83L2.5 36.984C.9 38.796 0 41.254 0 43.815c0 2.562.899 5.02 2.5 6.831L14.565 64.31c2.178 2.468 5.367 3.403 8.33 2.444 1.35-.435 2.709.592 2.709 2.18v49.407c0 5.313 3.84 9.66 8.532 9.66h59.726c4.693 0 8.532-4.347 8.532-9.66V68.934c0-1.59 1.36-2.616 2.71-2.181 2.962.96 6.15.024 8.329-2.444L125.5 50.646c1.6-1.811 2.499-4.269 2.499-6.83 0-2.563-.899-5.02-2.5-6.832z\\\"></path></symbol>\\r\\n    </svg>\\r\\n\\r\\n    <div class=\\\"margin-bottom20\\\">\\r\\n      <vue-button>\\r\\n        <vue-svg-icon icon-class=\\\"theme\\\"></vue-svg-icon>\\r\\n      </vue-button>\\r\\n\\r\\n      <vue-button type=\\\"primary\\\">\\r\\n        <vue-svg-icon icon-class=\\\"clipboard\\\"></vue-svg-icon><span>复制数据</span>\\r\\n      </vue-button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"margin-bottom20\\\">\\r\\n      <vue-input>\\r\\n        <i class=\\\"vue-input__icon\\\" slot=\\\"icon\\\">\\r\\n          <vue-svg-icon icon-class=\\\"eye\\\"></vue-svg-icon>\\r\\n        </i>\\r\\n      </vue-input>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"margin-bottom20\\\">\\r\\n      <vue-input>\\r\\n        <vue-button slot=\\\"append\\\">\\r\\n          <vue-svg-icon icon-class=\\\"clipboard\\\"></vue-svg-icon>\\r\\n        </vue-button>\\r\\n      </vue-input>\\r\\n    </div></div>\",\"parameter\": {\r\n  data: function () {\r\n    return {\r\r\r\n    }\r\n  }\r\n}},{\"id\":\"SvgIconDemo.sample3\",\"label\":\"SvgIconDemo.sample3.label\",\"description\":\"SvgIconDemo.sample3.description\",\"code\":\"<vue-svg-icon icon-class=\\\"./image/form.svg\\\"></vue-svg-icon>\\n\\n<script>\\nnew Vue({\\r\\n  data: function () {\\r\\n    return {\\r\\r\\r\\n    }\\r\\n  }\\r\\n};)\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-svg-icon icon-class=\\\"./image/form.svg\\\"></vue-svg-icon></div>\",\"parameter\": {\r\n  data: function () {\r\n    return {\r\r\r\n    }\r\n  }\r\n}},{\"id\":\"SvgIconDemo.sample4\",\"label\":\"SvgIconDemo.sample4.label\",\"code\":\"<attr-table :data=\\\"tableData\\\" notshowmeta></attr-table>\\n\\n<script>\\nnew Vue({\\r\\n  data: function () {\\r\\n    return {\\r\\r\\n      tableData: [\\r\\n        {\\r\\n          column1: 'iconClass',\\r\\n          column2: 'SvgIconDemo.sample4.row1column2',\\r\\n          column3: 'String',\\r\\n          column4: '',\\r\\n          column5: '',\\r\\n        },\\r\\n        {\\r\\n          column1: 'className',\\r\\n          column2: 'SvgIconDemo.sample4.row2column2',\\r\\n          column3: 'String',\\r\\n          column4: '',\\r\\n          column5: '',\\r\\n        },\\r\\n        {\\r\\n          column1: 'customClass',\\r\\n          column2: 'SvgIconDemo.sample4.row3column2',\\r\\n          column3: 'String',\\r\\n          column4: '',\\r\\n          column5: '',\\r\\n        },\\r\\n      ],\\r\\r\\r\\n    }\\r\\n  }\\r\\n};)\\n</script>\",\"template\":\"    <attr-table :data=\\\"tableData\\\" notshowmeta></attr-table>\",\"parameter\": {\r\n  data: function () {\r\n    return {\r\r\n      tableData: [\r\n        {\r\n          column1: 'iconClass',\r\n          column2: 'SvgIconDemo.sample4.row1column2',\r\n          column3: 'String',\r\n          column4: '',\r\n          column5: '',\r\n        },\r\n        {\r\n          column1: 'className',\r\n          column2: 'SvgIconDemo.sample4.row2column2',\r\n          column3: 'String',\r\n          column4: '',\r\n          column5: '',\r\n        },\r\n        {\r\n          column1: 'customClass',\r\n          column2: 'SvgIconDemo.sample4.row3column2',\r\n          column3: 'String',\r\n          column4: '',\r\n          column5: '',\r\n        },\r\n      ],\r\r\r\n    }\r\n  }\r\n},\"notshowmeta\":true},{\"id\":\"SvgIconDemo.sample5\",\"label\":\"SvgIconDemo.sample5.label\",\"code\":\"<event-table :data=\\\"eventData\\\" notshowmeta></event-table>\\n\\n<script>\\nnew Vue({\\r\\n  data: function () {\\r\\n    return {\\r\\r\\r\\n      eventData: [{\\r\\n        column1: \\\"Native events\\\",\\r\\n        column2: \\\"SvgIconDemo.sample5.row1column2\\\",\\r\\n        column3: \\\"SvgIconDemo.sample5.row1column3\\\"\\r\\n      }],\\r\\r\\n    }\\r\\n  }\\r\\n};)\\n</script>\",\"template\":\"    <event-table :data=\\\"eventData\\\" notshowmeta></event-table>\",\"parameter\": {\r\n  data: function () {\r\n    return {\r\r\r\n      eventData: [{\r\n        column1: \"Native events\",\r\n        column2: \"SvgIconDemo.sample5.row1column2\",\r\n        column3: \"SvgIconDemo.sample5.row1column3\"\r\n      }],\r\r\n    }\r\n  }\r\n},\"notshowmeta\":true}],\"styles\":\"\"}","'use strict';\nvar switchDemo = {\n  path: '/switch',\n  name: 'switch',\n  head: {\n    label: 'switchDemo.label',\n    description: 'switchDemo.description'\n  },\n  samples: [{\n    id: 'switch1',\n    label: 'switchDemo.samples1.label',\n    description: 'switchDemo.samples1.description',\n    template: '<div class=\"source\"><vue-row><vue-col :span=\"4\"><vue-switch v-model=\"value1\" on-text=\"Open\" off-text=\"\" :width=\"70\" @change=\"changeHandle\"></vue-switch></vue-col><vue-col :span=\"4\"><vue-switch v-model=\"value2\" on-color=\"#13ce66\" off-color=\"#ff4949\"></vue-switch></vue-col></vue-row></div>',\n    parameter: {\n      data: function () {\n        return {\n          value1: true,\n          value2: false\n        };\n      },\n      methods: {\n        changeHandle: function (val) {\n          this.$notify({ title: val.toString() });\n        }\n      }\n    },\n    code: '<vue-switch v-model=\"value1\" on-text=\"Open\" off-text=\"\" :width=\"70\" @change=\"changeHandle\"></vue-switch>\\n' +\n      '<vue-switch v-model=\"value2\" on-color=\"#13ce66\" off-color=\"#ff4949\"></vue-switch>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function() {\\n' +\n      '      return {\\n' +\n      '        value1: true,\\n' +\n      '        value2: false\\n' +\n      '      };\\n' +\n      '    },\\n' +\n      '    methods: {\\n' +\n      '      changeHandle: function(val) {\\n' +\n      '        this.$notify({title: val.toString()});\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'switch2',\n    label: 'switchDemo.samples2.label',\n    description: 'switchDemo.samples2.description',\n    template: '<div class=\"source\"><vue-row><vue-col :span=\"4\"><vue-switch v-model=\"value1\" disabled></vue-switch></vue-col><vue-col :span=\"4\"><vue-switch v-model=\"value2\" disabled></vue-switch></vue-col></vue-row></div>',\n    parameter: {\n      data: function () {\n        return {\n          value1: true,\n          value2: false\n        };\n      }\n    },\n    code: '<vue-switch v-model=\"value1\" disabled></vue-switch>\\n' +\n      '<vue-switch v-model=\"value2\" disabled></vue-switch>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function(){\\n' +\n      '      return {\\n' +\n      '        value1: true,\\n' +\n      '        value2: false\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'switch3',\n    label: 'Attributes',\n    template: '<attr-table :data=\"tableData\"></attr-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"disabled\",\n            column2: \"switchDemo.samples3.row1column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"width\",\n            column2: \"switchDemo.samples3.row2column2\",\n            column3: \"Number\",\n            column4: \"\",\n            column5: \"switchDemo.samples3.row2column5\"\n          }, {\n            column1: \"on-icon-class\",\n            column2: \"switchDemo.samples3.row3column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"off-icon-class\",\n            column2: \"switchDemo.samples3.row4column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"on-text\",\n            column2: \"switchDemo.samples3.row5column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"ON\"\n          }, {\n            column1: \"off-text\",\n            column2: \"switchDemo.samples3.row6column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"OFF\"\n          }, {\n            column1: \"on-color\",\n            column2: \"switchDemo.samples3.row7column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"#20A0FF\"\n          }, {\n            column1: \"off-color\",\n            column2: \"switchDemo.samples3.row8column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"#C0CCDA\"\n          }, {\n            column1: \"name\",\n            column2: \"switchDemo.samples3.row9column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'switch4',\n    label: 'Events',\n    template: '<event-table :data=\"tableData\"></event-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"change\",\n            column2: \"switchDemo.samples4.row1column2\",\n            column3: \"value after changing\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }]\n};\nmodule.exports = switchDemo;\n","var XRegExp = require('./XRegExp');\n'use strict';\nvar SyntaxHighlighter = function () {\n  var sh = {\n    defaults: {\n      'class-name': '',\n      'first-line': 1,\n      'pad-line-numbers': false,\n      'highlight': null,\n      'title': null,\n      'smart-tabs': true,\n      'tab-size': 4,\n      'gutter': true,\n      'toolbar': true,\n      'quick-code': false,\n      'collapse': false,\n      'auto-links': true,\n      'light': false,\n      'html-script': false\n    },\n    config: {\n      space: '&nbsp;',\n      useScriptTags: true,\n      bloggerMode: false,\n      stripBrs: false,\n      tagName: 'pre',\n      strings: {\n        expandSource: 'expand source',\n        help: '?',\n        alert: 'SyntaxHighlighter\\n\\n',\n        noBrush: 'Can\\'t find brush for: ',\n        brushNotHtmlScript: 'Brush wasn\\'t configured for html-script option: ',\n        aboutDialog: '@ABOUT@'\n      }\n    },\n    vars: {\n      discoveredBrushes: null,\n      highlighters: {}\n    },\n    brushes: {},\n    regexLib: {\n      multiLineCComments: /\\/\\*[\\s\\S]*?\\*\\//gm,\n      singleLineCComments: /\\/\\/.*$/gm,\n      singleLinePerlComments: /#.*$/gm,\n      doubleQuotedString: /\"([^\\\\\"\\n]|\\\\.)*\"/g,\n      singleQuotedString: /'([^\\\\'\\n]|\\\\.)*'/g,\n      multiLineDoubleQuotedString: new XRegExp('\"([^\\\\\\\\\"]|\\\\\\\\.)*\"', 'gs'),\n      multiLineSingleQuotedString: new XRegExp(\"'([^\\\\\\\\']|\\\\\\\\.)*'\", 'gs'),\n      xmlComments: /(&lt;|<)!--[\\s\\S]*?--(&gt;|>)/gm,\n      url: /\\w+:\\/\\/[\\w-.\\/?%&=:@;]*/g,\n      phpScriptTags: {\n        left: /(&lt;|<)\\?=?/g,\n        right: /\\?(&gt;|>)/g\n      },\n      aspScriptTags: {\n        left: /(&lt;|<)%=?/g,\n        right: /%(&gt;|>)/g\n      },\n      scriptScriptTags: {\n        left: /(&lt;|<)\\s*script.*?(&gt;|>)/gi,\n        right: /(&lt;|<)\\/\\s*script\\s*(&gt;|>)/gi\n      }\n    },\n    toolbar: {\n      getHtml: function (highlighter) {\n        var html = '<div class=\"toolbar\">'\n          , items = sh.toolbar.items\n          , list = items.list;\n        function defaultGetHtml(highlighter, name) {\n          return sh.toolbar.getButtonHtml(highlighter, name, sh.config.strings[name]);\n        }\n        for (var i = 0; i < list.length; i++)\n          html += (items[list[i]].getHtml || defaultGetHtml)(highlighter, list[i]);\n        html += '</div>';\n        return html;\n      },\n      getButtonHtml: function (highlighter, commandName, label) {\n        return '<span><a href=\"#\" class=\"toolbar_item command_' + commandName + ' ' + commandName + '\">' + label + '</a></span>';\n      },\n      handler: function (e) {\n        var target = e.target\n          , className = target.className || '';\n        function getValue(name) {\n          var r = new RegExp(name + '_(\\\\w+)')\n            , match = r.exec(className);\n          return match ? match[1] : null;\n        }\n        var highlighter = getHighlighterById(findParentElement(target, '.syntaxhighlighter').id)\n          , commandName = getValue('command');\n        if (highlighter && commandName)\n          sh.toolbar.items[commandName].execute(highlighter);\n        e.preventDefault();\n      },\n      items: {\n        list: ['expandSource', 'help'],\n        expandSource: {\n          getHtml: function (highlighter) {\n            if (highlighter.getParam('collapse') != true)\n              return '';\n            var title = highlighter.getParam('title');\n            return sh.toolbar.getButtonHtml(highlighter, 'expandSource', title ? title : sh.config.strings.expandSource);\n          },\n          execute: function (highlighter) {\n            var div = getHighlighterDivById(highlighter.id);\n            removeClass(div, 'collapsed');\n          }\n        },\n        help: {\n          execute: function (highlighter) {\n            var wnd = popup('', '_blank', 500, 250, 'scrollbars=0')\n              , doc = wnd.document;\n            doc.write(sh.config.strings.aboutDialog);\n            doc.close();\n            wnd.focus();\n          }\n        }\n      }\n    },\n    findElements: function (globalParams, element) {\n      var elements = element ? [element] : toArray(document.getElementsByTagName(sh.config.tagName))\n        , conf = sh.config\n        , result = [];\n      if (conf.useScriptTags)\n        elements = elements.concat(getSyntaxHighlighterScriptTags());\n      if (elements.length === 0)\n        return result;\n      for (var i = 0; i < elements.length; i++) {\n        var item = {\n          target: elements[i],\n          params: merge(globalParams, parseParams(elements[i].className))\n        };\n        if (item.params['brush'] == null)\n          continue;\n        result.push(item);\n      }\n      return result;\n    },\n    highlight: function (globalParams, element) {\n      var elements = this.findElements(globalParams, element)\n        , propertyName = 'innerHTML'\n        , highlighter = null\n        , conf = sh.config;\n      if (elements.length === 0)\n        return;\n      for (var i = 0; i < elements.length; i++) {\n        var element = elements[i], target = element.target, params = element.params, brushName = params.brush, code;\n        if (brushName == null)\n          continue;\n        if (params['html-script'] == 'true' || sh.defaults['html-script'] == true) {\n          highlighter = new sh.HtmlScript(brushName);\n          brushName = 'htmlscript';\n        } else {\n          var brush = findBrush(brushName);\n          if (brush)\n            highlighter = new brush();\n          else\n            continue;\n        }\n        code = target[propertyName];\n        if (conf.useScriptTags)\n          code = stripCData(code);\n        if ((target.title || '') != '')\n          params.title = target.title;\n        params['brush'] = brushName;\n        highlighter.init(params);\n        element = highlighter.getDiv(code);\n        if ((target.id || '') != '')\n          element.id = target.id;\n        target.parentNode.replaceChild(element, target);\n      }\n    },\n    all: function (params) {\n      attachEvent(window, 'load', function () {\n        sh.highlight(params);\n      });\n    }\n  };\n  function hasClass(target, className) {\n    return target.className.indexOf(className) != -1;\n  }\n  function addClass(target, className) {\n    if (!hasClass(target, className))\n      target.className += ' ' + className;\n  }\n  function removeClass(target, className) {\n    target.className = target.className.replace(className, '');\n  }\n  function toArray(source) {\n    var result = [];\n    for (var i = 0; i < source.length; i++)\n      result.push(source[i]);\n    return result;\n  }\n  function splitLines(block) {\n    return block.split('\\n');\n  }\n  function getHighlighterId(id) {\n    var prefix = 'highlighter_';\n    return id.indexOf(prefix) == 0 ? id : prefix + id;\n  }\n  function getHighlighterById(id) {\n    return sh.vars.highlighters[getHighlighterId(id)];\n  }\n  function getHighlighterDivById(id) {\n    return document.getElementById(getHighlighterId(id));\n  }\n  function storeHighlighter(highlighter) {\n    sh.vars.highlighters[getHighlighterId(highlighter.id)] = highlighter;\n  }\n  function findElement(target, search, reverse) {\n    if (target == null)\n      return null;\n    var nodes = reverse != true ? target.childNodes : [target.parentNode], propertyToFind = {\n      '#': 'id',\n      '.': 'className'\n    }[search.substr(0, 1)] || 'nodeName', expectedValue, found;\n    expectedValue = propertyToFind != 'nodeName' ? search.substr(1) : search.toUpperCase();\n    if ((target[propertyToFind] || '').indexOf(expectedValue) != -1)\n      return target;\n    for (var i = 0; nodes && i < nodes.length && found == null; i++)\n      found = findElement(nodes[i], search, reverse);\n    return found;\n  }\n  function findParentElement(target, className) {\n    return findElement(target, className, true);\n  }\n  function indexOf(array, searchElement, fromIndex) {\n    fromIndex = Math.max(fromIndex || 0, 0);\n    for (var i = fromIndex; i < array.length; i++)\n      if (array[i] == searchElement)\n        return i;\n    return -1;\n  }\n  function guid(prefix) {\n    return (prefix || '') + Math.round(Math.random() * 1000000).toString();\n  }\n  function merge(obj1, obj2) {\n    var result = {}, name;\n    for (name in obj1)\n      result[name] = obj1[name];\n    for (name in obj2)\n      result[name] = obj2[name];\n    return result;\n  }\n  function toBoolean(value) {\n    var result = {\n      \"true\": true,\n      \"false\": false\n    }[value];\n    return result == null ? value : result;\n  }\n  function popup(url, name, width, height, options) {\n    var x = (screen.width - width) / 2\n      , y = (screen.height - height) / 2;\n    options += ', left=' + x + ', top=' + y + ', width=' + width + ', height=' + height;\n    options = options.replace(/^,/, '');\n    var win = window.open(url, name, options);\n    win.focus();\n    return win;\n  }\n  function attachEvent(obj, type, func, scope) {\n    function handler(e) {\n      e = e || window.event;\n      if (!e.target) {\n        e.target = e.srcElement;\n        e.preventDefault = function () {\n          this.returnValue = false;\n        }\n      }\n      func.call(scope || window, e);\n    }\n    if (obj.attachEvent) {\n      obj.attachEvent('on' + type, handler);\n    } else {\n      obj.addEventListener(type, handler, false);\n    }\n  }\n  function alert(str) {\n    window.alert(sh.config.strings.alert + str);\n  }\n  function findBrush(alias, showAlert) {\n    var brushes = sh.vars.discoveredBrushes\n      , result = null;\n    if (brushes == null) {\n      brushes = {};\n      for (var brush in sh.brushes) {\n        var info = sh.brushes[brush]\n          , aliases = info.aliases;\n        if (aliases == null)\n          continue;\n        info.brushName = brush.toLowerCase();\n        for (var i = 0; i < aliases.length; i++)\n          brushes[aliases[i]] = brush;\n      }\n      sh.vars.discoveredBrushes = brushes;\n    }\n    result = sh.brushes[brushes[alias]];\n    if (result == null && showAlert != false)\n      alert(sh.config.strings.noBrush + alias);\n    return result;\n  }\n  function eachLine(str, callback) {\n    var lines = splitLines(str);\n    for (var i = 0; i < lines.length; i++)\n      lines[i] = callback(lines[i], i);\n    return lines.join('\\n');\n  }\n  function trimFirstAndLastLines(str) {\n    return str.replace(/^[ ]*[\\n]+|[\\n]*[ ]*$/g, '');\n  }\n  function parseParams(str) {\n    var match, result = {}, arrayRegex = new XRegExp(\"^\\\\[(?<values>(.*?))\\\\]$\"), regex = new XRegExp(\"(?<name>[\\\\w-]+)\" + \"\\\\s*:\\\\s*\" + \"(?<value>\" + \"[\\\\w-%#]+|\" + \"\\\\[.*?\\\\]|\" + '\".*?\"|' + \"'.*?'\" + \")\\\\s*;?\", \"g\");\n    while ((match = regex.exec(str)) != null) {\n      var value = match.value.replace(/^['\"]|['\"]$/g, '');\n      if (value != null && arrayRegex.test(value)) {\n        var m = arrayRegex.exec(value);\n        value = m.values.length > 0 ? m.values.split(/\\s*,\\s*/) : [];\n      }\n      result[match.name] = value;\n    }\n    return result;\n  }\n  function wrapLinesWithCode(str, css) {\n    if (str == null || str.length == 0 || str == '\\n')\n      return str;\n    str = str.replace(/</g, '&lt;');\n    str = str.replace(/ {2,}/g, function (m) {\n      var spaces = '';\n      for (var i = 0; i < m.length - 1; i++)\n        spaces += sh.config.space;\n      return spaces + ' ';\n    });\n    if (css != null)\n      str = eachLine(str, function (line) {\n        if (line.length == 0)\n          return '';\n        var spaces = '';\n        line = line.replace(/^(&nbsp;| )+/, function (s) {\n          spaces = s;\n          return '';\n        });\n        if (line.length == 0)\n          return spaces;\n        return spaces + '<code class=\"' + css + '\">' + line + '</code>';\n      });\n    return str;\n  }\n  function padNumber(number, length) {\n    var result = number.toString();\n    while (result.length < length)\n      result = '0' + result;\n    return result;\n  }\n  function processTabs(code, tabSize) {\n    var tab = '';\n    for (var i = 0; i < tabSize; i++)\n      tab += ' ';\n    return code.replace(/\\t/g, tab);\n  }\n  function processSmartTabs(code, tabSize) {\n    var lines = splitLines(code)\n      , tab = '\\t'\n      , spaces = '';\n    for (var i = 0; i < 50; i++)\n      spaces += '\t\t\t\t ';\n    function insertSpaces(line, pos, count) {\n      return line.substr(0, pos) + spaces.substr(0, count) + line.substr(pos + 1, line.length);\n    }\n    code = eachLine(code, function (line) {\n      if (line.indexOf(tab) == -1)\n        return line;\n      var pos = 0;\n      while ((pos = line.indexOf(tab)) != -1) {\n        var spaces = tabSize - pos % tabSize;\n        line = insertSpaces(line, pos, spaces);\n      }\n      return line;\n    });\n    return code;\n  }\n  function fixInputString(str) {\n    var br = /<br\\s*\\/?>|&lt;br\\s*\\/?&gt;/gi;\n    if (sh.config.bloggerMode == true)\n      str = str.replace(br, '\\n');\n    if (sh.config.stripBrs == true)\n      str = str.replace(br, '');\n    return str;\n  }\n  function trim(str) {\n    return str.replace(/^\\s+|\\s+$/g, '');\n  }\n  function unindent(str) {\n    var lines = splitLines(fixInputString(str))\n      , indents = new Array()\n      , regex = /^\\s*/\n      , min = 1000;\n    for (var i = 0; i < lines.length && min > 0; i++) {\n      var line = lines[i];\n      if (trim(line).length == 0)\n        continue;\n      var matches = regex.exec(line);\n      if (matches == null)\n        return str;\n      min = Math.min(matches[0].length, min);\n    }\n    if (min > 0)\n      for (var i = 0; i < lines.length; i++)\n        lines[i] = lines[i].substr(min);\n    return lines.join('\\n');\n  }\n  function matchesSortCallback(m1, m2) {\n    if (m1.index < m2.index)\n      return -1;\n    else if (m1.index > m2.index)\n      return 1;\n    else {\n      if (m1.length < m2.length)\n        return -1;\n      else if (m1.length > m2.length)\n        return 1;\n    }\n    return 0;\n  }\n  function getMatches(code, regexInfo) {\n    function defaultAdd(match, regexInfo) {\n      return match[0];\n    }\n    var index = 0\n      , match = null\n      , matches = []\n      , func = regexInfo.func ? regexInfo.func : defaultAdd;\n    while ((match = regexInfo.regex.exec(code)) != null) {\n      var resultMatch = func(match, regexInfo);\n      if (typeof (resultMatch) == 'string')\n        resultMatch = [new sh.Match(resultMatch, match.index, regexInfo.css)];\n      matches = matches.concat(resultMatch);\n    }\n    return matches;\n  }\n  function processUrls(code) {\n    var gt = /(.*)((&gt;|&lt;).*)/;\n    return code.replace(sh.regexLib.url, function (m) {\n      var suffix = ''\n        , match = null;\n      if (match = gt.exec(m)) {\n        m = match[1];\n        suffix = match[2];\n      }\n      return '<a href=\"' + m + '\">' + m + '</a>' + suffix;\n    });\n  }\n  function getSyntaxHighlighterScriptTags() {\n    var tags = document.getElementsByTagName('script')\n      , result = [];\n    for (var i = 0; i < tags.length; i++)\n      if (tags[i].type == 'syntaxhighlighter')\n        result.push(tags[i]);\n    return result;\n  }\n  function stripCData(original) {\n    var left = '<![CDATA['\n      , right = ']]>'\n      , copy = trim(original)\n      , changed = false\n      , leftLength = left.length\n      , rightLength = right.length;\n    if (copy.indexOf(left) == 0) {\n      copy = copy.substring(leftLength);\n      changed = true;\n    }\n    var copyLength = copy.length;\n    if (copy.indexOf(right) == copyLength - rightLength) {\n      copy = copy.substring(0, copyLength - rightLength);\n      changed = true;\n    }\n    return changed ? copy : original;\n  }\n  function quickCodeHandler(e) {\n    var target = e.target, highlighterDiv = findParentElement(target, '.syntaxhighlighter'), container = findParentElement(target, '.container'), textarea = document.createElement('textarea'), highlighter;\n    if (!container || !highlighterDiv || findElement(container, 'textarea'))\n      return;\n    highlighter = getHighlighterById(highlighterDiv.id);\n    addClass(highlighterDiv, 'source');\n    var lines = container.childNodes\n      , code = [];\n    for (var i = 0; i < lines.length; i++)\n      code.push(lines[i].innerText || lines[i].textContent);\n    code = code.join('\\r');\n    textarea.appendChild(document.createTextNode(code));\n    container.appendChild(textarea);\n    textarea.focus();\n    textarea.select();\n    attachEvent(textarea, 'blur', function (e) {\n      textarea.parentNode.removeChild(textarea);\n      removeClass(highlighterDiv, 'source');\n    });\n  }\n  sh.Match = function (value, index, css) {\n    this.value = value;\n    this.index = index;\n    this.length = value.length;\n    this.css = css;\n    this.brushName = null;\n  }\n  sh.Match.prototype.toString = function () {\n    return this.value;\n  }\n  sh.HtmlScript = function (scriptBrushName) {\n    var brushClass = findBrush(scriptBrushName), scriptBrush, xmlBrush = new sh.brushes.Xml(), bracketsRegex = null, ref = this, methodsToExpose = 'getDiv getHtml init'.split(' ');\n    if (brushClass == null)\n      return;\n    scriptBrush = new brushClass();\n    for (var i = 0; i < methodsToExpose.length; i++)\n      (function () {\n        var name = methodsToExpose[i];\n        ref[name] = function () {\n          return xmlBrush[name].apply(xmlBrush, arguments);\n        }\n      }\n      )();\n    if (scriptBrush.htmlScript == null) {\n      alert(sh.config.strings.brushNotHtmlScript + scriptBrushName);\n      return;\n    }\n    xmlBrush.regexList.push({\n      regex: scriptBrush.htmlScript.code,\n      func: process\n    });\n    function offsetMatches(matches, offset) {\n      for (var j = 0; j < matches.length; j++)\n        matches[j].index += offset;\n    }\n    function process(match, info) {\n      var code = match.code, matches = [], regexList = scriptBrush.regexList, offset = match.index + match.left.length, htmlScript = scriptBrush.htmlScript, result;\n      for (var i = 0; i < regexList.length; i++) {\n        result = getMatches(code, regexList[i]);\n        offsetMatches(result, offset);\n        matches = matches.concat(result);\n      }\n      if (htmlScript.left != null && match.left != null) {\n        result = getMatches(match.left, htmlScript.left);\n        offsetMatches(result, match.index);\n        matches = matches.concat(result);\n      }\n      if (htmlScript.right != null && match.right != null) {\n        result = getMatches(match.right, htmlScript.right);\n        offsetMatches(result, match.index + match[0].lastIndexOf(match.right));\n        matches = matches.concat(result);\n      }\n      for (var j = 0; j < matches.length; j++)\n        matches[j].brushName = brushClass.brushName;\n      return matches;\n    }\n  }\n  sh.Highlighter = function () { }\n  sh.Highlighter.prototype = {\n    getParam: function (name, defaultValue) {\n      var result = this.params[name];\n      return toBoolean(result == null ? defaultValue : result);\n    },\n    create: function (name) {\n      return document.createElement(name);\n    },\n    findMatches: function (regexList, code) {\n      var result = [];\n      if (regexList != null)\n        for (var i = 0; i < regexList.length; i++)\n          if (typeof (regexList[i]) == \"object\")\n            result = result.concat(getMatches(code, regexList[i]));\n      return this.removeNestedMatches(result.sort(matchesSortCallback));\n    },\n    removeNestedMatches: function (matches) {\n      for (var i = 0; i < matches.length; i++) {\n        if (matches[i] === null)\n          continue;\n        var itemI = matches[i]\n          , itemIEndPos = itemI.index + itemI.length;\n        for (var j = i + 1; j < matches.length && matches[i] !== null; j++) {\n          var itemJ = matches[j];\n          if (itemJ === null)\n            continue;\n          else if (itemJ.index > itemIEndPos)\n            break;\n          else if (itemJ.index == itemI.index && itemJ.length > itemI.length)\n            matches[i] = null;\n          else if (itemJ.index >= itemI.index && itemJ.index < itemIEndPos)\n            matches[j] = null;\n        }\n      }\n      return matches;\n    },\n    figureOutLineNumbers: function (code) {\n      var lines = []\n        , firstLine = parseInt(this.getParam('first-line'));\n      eachLine(code, function (line, index) {\n        lines.push(index + firstLine);\n      });\n      return lines;\n    },\n    isLineHighlighted: function (lineNumber) {\n      var list = this.getParam('highlight', []);\n      if (typeof (list) != 'object' && list.push == null)\n        list = [list];\n      return indexOf(list, lineNumber.toString()) != -1;\n    },\n    getLineHtml: function (lineIndex, lineNumber, code) {\n      var classes = ['line', 'number' + lineNumber, 'index' + lineIndex, 'alt' + (lineNumber % 2 == 0 ? 1 : 2).toString()];\n      if (this.isLineHighlighted(lineNumber))\n        classes.push('highlighted');\n      if (lineNumber == 0)\n        classes.push('break');\n      return '<div class=\"' + classes.join(' ') + '\">' + code + '</div>';\n    },\n    getLineNumbersHtml: function (code, lineNumbers) {\n      var html = ''\n        , count = splitLines(code).length\n        , firstLine = parseInt(this.getParam('first-line'))\n        , pad = this.getParam('pad-line-numbers');\n      if (pad == true)\n        pad = (firstLine + count - 1).toString().length;\n      else if (isNaN(pad) == true)\n        pad = 0;\n      for (var i = 0; i < count; i++) {\n        var lineNumber = lineNumbers ? lineNumbers[i] : firstLine + i\n          , code = lineNumber == 0 ? sh.config.space : padNumber(lineNumber, pad);\n        html += this.getLineHtml(i, lineNumber, code);\n      }\n      return html;\n    },\n    getCodeLinesHtml: function (html, lineNumbers) {\n      html = trim(html);\n      var lines = splitLines(html)\n        , padLength = this.getParam('pad-line-numbers')\n        , firstLine = parseInt(this.getParam('first-line'))\n        , html = ''\n        , brushName = this.getParam('brush');\n      for (var i = 0; i < lines.length; i++) {\n        var line = lines[i]\n          , indent = /^(&nbsp;|\\s)+/.exec(line)\n          , spaces = null\n          , lineNumber = lineNumbers ? lineNumbers[i] : firstLine + i;\n        if (indent != null) {\n          spaces = indent[0].toString();\n          line = line.substr(spaces.length);\n          spaces = spaces.replace(' ', sh.config.space);\n        }\n        line = trim(line);\n        if (line.length == 0)\n          line = sh.config.space;\n        html += this.getLineHtml(i, lineNumber, (spaces != null ? '<code class=\"' + brushName + ' spaces\">' + spaces + '</code>' : '') + line);\n      }\n      return html;\n    },\n    getTitleHtml: function (title) {\n      return title ? '<caption>' + title + '</caption>' : '';\n    },\n    getMatchesHtml: function (code, matches) {\n      var pos = 0\n        , result = ''\n        , brushName = this.getParam('brush', '');\n      function getBrushNameCss(match) {\n        var result = match ? (match.brushName || brushName) : brushName;\n        return result ? result + ' ' : '';\n      }\n      for (var i = 0; i < matches.length; i++) {\n        var match = matches[i], matchBrushName;\n        if (match === null || match.length === 0)\n          continue;\n        matchBrushName = getBrushNameCss(match);\n        result += wrapLinesWithCode(code.substr(pos, match.index - pos), matchBrushName + 'plain') + wrapLinesWithCode(match.value, matchBrushName + match.css);\n        pos = match.index + match.length + (match.offset || 0);\n      }\n      result += wrapLinesWithCode(code.substr(pos), getBrushNameCss() + 'plain');\n      return result;\n    },\n    getHtml: function (code) {\n      var html = '', classes = ['syntaxhighlighter'], tabSize, matches, lineNumbers, gutter;\n      if (this.getParam('light') == true)\n        this.params.toolbar = this.params.gutter = false;\n      if (this.getParam('collapse') == true)\n        classes.push('collapsed');\n      if ((gutter = this.getParam('gutter')) == false)\n        classes.push('nogutter');\n      classes.push(this.getParam('class-name'));\n      classes.push(this.getParam('brush'));\n      code = trimFirstAndLastLines(code).replace(/\\r/g, ' ');\n      tabSize = this.getParam('tab-size');\n      code = this.getParam('smart-tabs') == true ? processSmartTabs(code, tabSize) : processTabs(code, tabSize);\n      code = unindent(code);\n      if (gutter)\n        lineNumbers = this.figureOutLineNumbers(code);\n      matches = this.findMatches(this.regexList, code);\n      html = this.getMatchesHtml(code, matches);\n      html = this.getCodeLinesHtml(html, lineNumbers);\n      if (this.getParam('auto-links'))\n        html = processUrls(html);\n      if (typeof (navigator) != 'undefined' && navigator.userAgent && navigator.userAgent.match(/MSIE/))\n        classes.push('ie');\n      html = '<div id=\"' + getHighlighterId(this.id) + '\" class=\"' + classes.join(' ') + '\">' + (this.getParam('toolbar') ? sh.toolbar.getHtml(this) : '') + '<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">' + this.getTitleHtml(this.getParam('title')) + '<tbody><tr>' + (gutter ? '<td class=\"gutter\">' + this.getLineNumbersHtml(code) + '</td>' : '') + '<td class=\"code\"><div class=\"container\">' + html + '</div></td></tr></tbody></table></div>';\n      return html;\n    },\n    getDiv: function (code) {\n      if (code === null)\n        code = '';\n      this.code = code;\n      var div = this.create('div');\n      div.innerHTML = this.getHtml(code);\n      if (this.getParam('toolbar'))\n        attachEvent(findElement(div, '.toolbar'), 'click', sh.toolbar.handler);\n      if (this.getParam('quick-code'))\n        attachEvent(findElement(div, '.code'), 'dblclick', quickCodeHandler);\n      return div;\n    },\n    init: function (params) {\n      this.id = guid();\n      storeHighlighter(this);\n      this.params = merge(sh.defaults, params || {})\n      if (this.getParam('light') == true)\n        this.params.toolbar = this.params.gutter = false;\n    },\n    getKeywords: function (str) {\n      str = str.replace(/^\\s+|\\s+$/g, '').replace(/\\s+/g, '|');\n      return '\\\\b(?:' + str + ')\\\\b';\n    },\n    forHtmlScript: function (regexGroup) {\n      this.htmlScript = {\n        left: {\n          regex: regexGroup.left,\n          css: 'script'\n        },\n        right: {\n          regex: regexGroup.right,\n          css: 'script'\n        },\n        code: new XRegExp(\"(?<left>\" + regexGroup.left.source + \")\" + \"(?<code>.*?)\" + \"(?<right>\" + regexGroup.right.source + \")\", \"sgi\")\n      };\n    }\n  };\n  return sh;\n}();\nmodule.exports = SyntaxHighlighter;","'use strict';\nvar tableDemo = {\n  path: '/table',\n  name: 'table',\n  head: {\n    label: 'tableDemo.label',\n    description: 'tableDemo.description'\n  },\n  samples: [{\n    id: 'table1',\n    label: 'tableDemo.samples1.label',\n    description: 'tableDemo.samples1.description',\n    template: '<div class=\"source\"><vue-table :data=\"tableData\" border stripe style=\"width: 100%\"><vue-table-column prop=\"date\" label=\"Date\" width=\"180\"></vue-table-column><vue-table-column prop=\"name\" label=\"Name\" width=\"180\"></vue-table-column><vue-table-column prop=\"address\" label=\"Address\"></vue-table-column></vue-table></div>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            date: '2017-07-03',\n            name: 'Tom',\n            address: 'No. 189, Grove St, Los Angeles'\n          }, {\n            date: '2018-08-02',\n            name: 'Tom',\n            address: 'No. 189, Grove St, Los Angeles'\n          }, {\n            date: '2019-09-04',\n            name: 'Tom',\n            address: 'No. 189, Grove St, Los Angeles'\n          }, {\n            date: '2020-10-01',\n            name: 'Tom',\n            address: 'No. 189, Grove St, Los Angeles'\n          }]\n        };\n      }\n    },\n    code: '<vue-table :data=\"tableData\" border stripe style=\"width: 100%\">\\n' +\n      '  <vue-table-column prop=\"date\" label=\"Date\" width=\"180\"></vue-table-column>\\n' +\n      '  <vue-table-column prop=\"name\" label=\"Name\" width=\"180\"></vue-table-column>\\n' +\n      '  <vue-table-column prop=\"address\" label=\"Address\"></vue-table-column>\\n' +\n      '</vue-table>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function() {\\n' +\n      '      return {\\n' +\n      '        tableData: [{\\n' +\n      '          date: \"2017-07-03\",\\n' +\n      '          name: \"Tom\",\\n' +\n      '          address: \"No. 189, Grove St, Los Angeles\"\\n' +\n      '        }, {\\n' +\n      '          date: \"2018-08-02\",\\n' +\n      '          name: \"Tom\",\\n' +\n      '          address: \"No. 189, Grove St, Los Angeles\"\\n' +\n      '        }, {\\n' +\n      '          date: \"2019-09-04\",\\n' +\n      '          name: \"Tom\",\\n' +\n      '          address: \"No. 189, Grove St, Los Angeles\"\\n' +\n      '        }, {\\n' +\n      '          date: \"2020-10-01\",\\n' +\n      '          name: \"Tom\",\\n' +\n      '          address: \"No. 189, Grove St, Los Angeles\"\\n' +\n      '        }]\\n' +\n      '      };\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'table2',\n    label: 'tableDemo.samples2.label',\n    description: 'tableDemo.samples2.description',\n    template: '<div class=\"source\"><vue-table :data=\"tableData\" border style=\"width: 100%\"><vue-table-column fixed prop=\"date\" label=\"Date\" width=\"150\"></vue-table-column><vue-table-column prop=\"name\" label=\"Name\" width=\"100\"></vue-table-column><vue-table-column prop=\"state\" label=\"State\" width=\"150\"></vue-table-column><vue-table-column prop=\"city\" label=\"City\" width=\"150\"></vue-table-column><vue-table-column prop=\"address\" label=\"Address\" width=\"300\"></vue-table-column><vue-table-column prop=\"zip\" label=\"Zip\" width=\"120\"></vue-table-column><vue-table-column fixed=\"right\" label=\"Operations\" width=\"150\"><template slot-scope=\"scope\"><vue-button @click=\"detailHandle\" type=\"text\" size=\"small\">Detail</vue-button><vue-button @click=\"editHandle\" type=\"text\" size=\"small\">Edit</vue-button></template></vue-table-column></vue-table></div>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            date: '2016-05-03',\n            name: 'Tom',\n            state: 'California',\n            city: 'Los Angeles',\n            address: 'No. 189, Grove St, Los Angeles',\n            zip: 'CA 90036'\n          }, {\n            date: '2016-05-02',\n            name: 'Tom',\n            state: 'California',\n            city: 'Los Angeles',\n            address: 'No. 189, Grove St, Los Angeles',\n            zip: 'CA 90036'\n          }, {\n            date: '2016-05-04',\n            name: 'Tom',\n            state: 'California',\n            city: 'Los Angeles',\n            address: 'No. 189, Grove St, Los Angeles',\n            zip: 'CA 90036'\n          }, {\n            date: '2016-05-01',\n            name: 'Tom',\n            state: 'California',\n            city: 'Los Angeles',\n            address: 'No. 189, Grove St, Los Angeles',\n            zip: 'CA 90036'\n          }]\n        }\n      },\n      methods: {\n        detailHandle: function () {\n          this.$notify({\n            title: \"Detail\"\n          });\n        },\n        editHandle: function () {\n          this.$notify({\n            title: \"Edit\"\n          });\n        }\n      }\n    },\n    code: '<vue-table :data=\"tableData\" border style=\"width: 100%\">\\n' +\n      '  <vue-table-column fixed prop=\"date\" label=\"Date\" width=\"150\">\\n' +\n      '  </vue-table-column>\\n' +\n      '  <vue-table-column prop=\"name\" label=\"Name\" width=\"100\">\\n' +\n      '  </vue-table-column>\\n' +\n      '  <vue-table-column prop=\"state\" label=\"State\" width=\"150\">\\n' +\n      '  </vue-table-column>\\n' +\n      '  <vue-table-column prop=\"city\" label=\"City\" width=\"150\">\\n' +\n      '  </vue-table-column>\\n' +\n      '  <vue-table-column prop=\"address\" label=\"Address\" width=\"300\">\\n' +\n      '  </vue-table-column>\\n' +\n      '  <vue-table-column prop=\"zip\" label=\"Zip\" width=\"120\">\\n' +\n      '  </vue-table-column>\\n' +\n      '  <vue-table-column fixed=\"right\" label=\"Operations\" width=\"150\">\\n' +\n      '    <template slot-scope=\"scope\">\\n' +\n      '      <vue-button @click=\"detailHandle\" type=\"text\" size=\"small\">Detail</vue-button>\\n' +\n      '      <vue-button @click=\"editHandle\" type=\"text\" size=\"small\">Edit</vue-button>\\n' +\n      '    </template>\\n' +\n      '  </vue-table-column>\\n' +\n      '</vue-table>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function() {\\n' +\n      '      return {\\n' +\n      '        tableData: [{\\n' +\n      '          date: \"2016-05-03\",\\n' +\n      '          name: \"Tom\",\\n' +\n      '          state: \"California\",\\n' +\n      '          city: \"Los Angeles\",\\n' +\n      '          address: \"No. 189, Grove St, Los Angeles\",\\n' +\n      '          zip: \"CA 90036\"\\n' +\n      '        }, {\\n' +\n      '          date: \"2016-05-02\",\\n' +\n      '          name: \"Tom\",\\n' +\n      '          state: \"California\",\\n' +\n      '          city: \"Los Angeles\",\\n' +\n      '          address: \"No. 189, Grove St, Los Angeles\",\\n' +\n      '          zip: \"CA 90036\"\\n' +\n      '        }, {\\n' +\n      '          date: \"2016-05-04\",\\n' +\n      '          name: \"Tom\",\\n' +\n      '          state: \"California\",\\n' +\n      '          city: \"Los Angeles\",\\n' +\n      '          address: \"No. 189, Grove St, Los Angeles\",\\n' +\n      '          zip: \"CA 90036\"\\n' +\n      '        }, {\\n' +\n      '          date: \"2016-05-01\",\\n' +\n      '          name: \"Tom\",\\n' +\n      '          state: \"California\",\\n' +\n      '          city: \"Los Angeles\",\\n' +\n      '          address: \"No. 189, Grove St, Los Angeles\",\\n' +\n      '          zip: \"CA 90036\"\\n' +\n      '        }]\\n' +\n      '      }\\n' +\n      '    },\\n' +\n      '    methods: {\\n' +\n      '      detailHandle: function() {\\n' +\n      '        this.$notify({title: \"Detail\"});\\n' +\n      '      },\\n' +\n      '      editHandle: function() {\\n' +\n      '        this.$notify({title: \"Edit\"});\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'table3',\n    label: 'tableDemo.samples3.label',\n    description: 'tableDemo.samples3.description',\n    template: '<div class=\"source\"><vue-table :data=\"tableData\" border stripe style=\"width: 100%\"><vue-table-column label=\"Info\" prop=\"id\" width=\"200\" label-class-name=\"table-demo\"><template slot-scope=\"scope\" slot=\"header\"><vue-row><vue-col :span=\"24\"><span>Info</span></vue-col></vue-row><vue-divider></vue-divider><vue-row><vue-col :span=\"12\"><span>Info Id</span></vue-col><vue-col :span=\"12\"><span>Info Name</span></vue-col></vue-row></template></vue-table-column><vue-table-column prop=\"name\" width=\"200\" label-colspan></vue-table-column><vue-table-column class-name=\"table-demo\" label-class-name=\"table-demo\"><template slot-scope=\"scope\" slot=\"header\"><vue-row><vue-col :span=\"12\"><span>Shop Id</span></vue-col><vue-col :span=\"12\"><span>Shop Name</span></vue-col></vue-row><vue-divider></vue-divider><vue-row><vue-col :span=\"24\"><span>Shop Address</span></vue-col></vue-row></template><template slot-scope=\"scope\"><vue-row><vue-col :span=\"12\"><span>{{ scope.row.shopId }}</span></vue-col><vue-col :span=\"12\"><span>{{ scope.row.shopName }}</span></vue-col></vue-row><vue-divider></vue-divider><vue-row><vue-col :span=\"24\"><span>{{ scope.row.shopAddr }}</span></vue-col></vue-row></template></vue-table-column></vue-table></div>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            id: \"12987122\",\n            name: \"Tom\",\n            shopName: \"Los Angeles\",\n            shopId: \"10332\",\n            shopAddr: \"No. 189, Grove St, Los Angeles\"\n          }, {\n            id: \"12987123\",\n            name: \"Tom\",\n            shopName: \"Los Angeles\",\n            shopId: \"10333\",\n            shopAddr: \"No. 189, Grove St, Los Angeles\"\n          }, {\n            id: \"12987125\",\n            name: \"Tom\",\n            shopName: \"Los Angeles\",\n            shopId: \"10331\",\n            shopAddr: \"No. 189, Grove St, Los Angeles\"\n          }]\n        }\n      }\n    },\n    code: '<vue-table :data=\"tableData\" border stripe style=\"width: 100%\">\\n' +\n      '  <vue-table-column label=\"Info\" prop=\"id\" width=\"200\" label-class-name=\"table-demo\">\\n' +\n      '    <template slot-scope=\"scope\" slot=\"header\">\\n' +\n      '      <vue-row>\\n' +\n      '        <vue-col :span=\"24\">\\n' +\n      '          <span>Info</span></vue-col>\\n' +\n      '      </vue-row>\\n' +\n      '      <vue-divider></vue-divider>\\n' +\n      '      <vue-row>\\n' +\n      '        <vue-col :span=\"12\">\\n' +\n      '          <span>Info Id</span></vue-col>\\n' +\n      '        <vue-col :span=\"12\">\\n' +\n      '          <span>Info Name</span></vue-col>\\n' +\n      '      </vue-row>\\n' +\n      '    </template>\\n' +\n      '  </vue-table-column>\\n' +\n      '  <vue-table-column prop=\"name\" width=\"200\" label-colspan></vue-table-column>\\n' +\n      '  <vue-table-column class-name=\"table-demo\" label-class-name=\"table-demo\">\\n' +\n      '    <template slot-scope=\"scope\" slot=\"header\">\\n' +\n      '      <vue-row>\\n' +\n      '        <vue-col :span=\"12\">\\n' +\n      '          <span>Shop Id</span></vue-col>\\n' +\n      '        <vue-col :span=\"12\">\\n' +\n      '          <span>Shop Name</span></vue-col>\\n' +\n      '      </vue-row>\\n' +\n      '      <vue-divider></vue-divider>\\n' +\n      '      <vue-row>\\n' +\n      '        <vue-col :span=\"24\">\\n' +\n      '          <span>Shop Address</span></vue-col>\\n' +\n      '      </vue-row>\\n' +\n      '    </template>\\n' +\n      '    <template slot-scope=\"scope\">\\n' +\n      '      <vue-row>\\n' +\n      '        <vue-col :span=\"12\">\\n' +\n      '          <span>{{ scope.row.shopId }}</span></vue-col>\\n' +\n      '        <vue-col :span=\"12\">\\n' +\n      '          <span>{{ scope.row.shopName }}</span></vue-col>\\n' +\n      '      </vue-row>\\n' +\n      '      <vue-divider></vue-divider>\\n' +\n      '      <vue-row>\\n' +\n      '        <vue-col :span=\"24\">\\n' +\n      '          <span>{{ scope.row.shopAddr }}</span></vue-col>\\n' +\n      '      </vue-row>\\n' +\n      '    </template>\\n' +\n      '  </vue-table-column>\\n' +\n      '</vue-table>\\n\\n' +\n      '<style>\\n' +\n      '  .table-demo .cell {\\n' +\n      '    padding: 0;\\n' +\n      '  }\\n' +\n      '  .table-demo .vue-col {\\n' +\n      '    padding: 0 18px;\\n' +\n      '    height: 30px;\\n' +\n      '    line-height: 30px;\\n' +\n      '  }\\n' +\n      '  .table-demo .vue-col + .vue-col {\\n' +\n      '    border-left: 1px solid rgb(223, 230, 236);\\n' +\n      '  }\\n' +\n      '</style>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '     data: function() {\\n' +\n      '      return {\\n' +\n      '        tableData: [{\\n' +\n      '          id: \"12987122\",\\n' +\n      '          name: \"Tom\",\\n' +\n      '          shopName: \"Los Angeles\",\\n' +\n      '          shopId: \"10332\",\\n' +\n      '          shopAddr: \"No. 189, Grove St, Los Angeles\"\\n' +\n      '        }, {\\n' +\n      '          id: \"12987123\",\\n' +\n      '          name: \"Tom\",\\n' +\n      '          shopName: \"Los Angeles\",\\n' +\n      '          shopId: \"10333\",\\n' +\n      '          shopAddr: \"No. 189, Grove St, Los Angeles\"\\n' +\n      '        }, {\\n' +\n      '          id: \"12987125\",\\n' +\n      '          name: \"Tom\",\\n' +\n      '          shopName: \"Los Angeles\",\\n' +\n      '          shopId: \"10331\",\\n' +\n      '          shopAddr: \"No. 189, Grove St, Los Angeles\"\\n' +\n      '        }]\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'table4',\n    label: 'tableDemo.samples4.label',\n    description: '',\n    template: '<div class=\"source\"><vue-table :data=\"tableData\" border style=\"width: 100%\"><vue-table-column label=\"Operations\" width=\"160\"><template slot-scope=\"scope\"><vue-button @click=\"editHandle(scope.row)\" type=\"primary\" icon=\"vue-icon-edit\"></vue-button><vue-button @click=\"delHandle(scope.row)\" type=\"primary\" icon=\"vue-icon-delete\"></vue-button></template></vue-table-column><vue-table-column prop=\"city\" label=\"City\" width=\"150\"></vue-table-column><vue-table-column prop=\"name\" label=\"Name\" width=\"120\"></vue-table-column><vue-table-column prop=\"address\" label=\"Address\" ></vue-table-column></vue-table><vue-button @click=\"addHandle\" >Add Row</vue-button><vue-dialog  v-model=\"dialogVisible\"><vue-form :model=\"currentData\" label-width=\"100px\" ><vue-form-item label=\"City\" prop=\"city\"><vue-input v-model=\"currentData.city\"></vue-input></vue-form-item><vue-form-item label=\"Name\" prop=\"name\"><vue-input v-model=\"currentData.name\"></vue-input></vue-form-item><vue-form-item label=\"Address\" prop=\"address\"><vue-input v-model=\"currentData.address\"></vue-input></vue-form-item></vue-form><span slot=\"footer\" class=\"dialog-footer\"><vue-button @click=\"dialogVisible = false\">Cancel</vue-button><vue-button type=\"primary\" @click=\"saveHandle\">OK</vue-button></span></vue-dialog></div>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            name: 'Tom',\n            city: 'Los Angeles',\n            address: 'No. 189, Grove St, Los Angeles',\n          }, {\n            name: 'Mac',\n            city: 'Los Alamos',\n            address: 'No. 199, Grove St, Los Angeles',\n          }, {\n            name: 'Jesse',\n            city: 'Los Angeles',\n            address: 'No. 188, Grove St, Los Angeles',\n          }],\n          currentIndex: -1,\n          currentData: {},\n          dialogVisible: false\n        }\n      },\n      methods: {\n        addHandle: function () {\n          this.currentData = {};\n          this.currentIndex = this.tableData.length;\n          this.dialogVisible = true;\n        },\n        editHandle: function (rowData) {\n          this.currentData = VueUtil.merge({}, rowData);\n          this.currentIndex = this.tableData.indexOf(rowData);\n          this.dialogVisible = true;\n        },\n        delHandle: function (rowData) {\n          var index = this.tableData.indexOf(rowData);\n          this.tableData.splice(index, 1);\n        },\n        saveHandle: function () {\n          Vue.set(this.tableData, this.currentIndex, this.currentData);\n          this.dialogVisible = false;\n        }\n      }\n    },\n    code: '<vue-table :data=\"tableData\" border style=\"width: 100%\">\\n' +\n      '  <vue-table-column label=\"Operations\" width=\"160\">\\n' +\n      '    <template slot-scope=\"scope\">\\n' +\n      '      <vue-button @click=\"editHandle(scope.row)\" type=\"primary\" icon=\"vue-icon-edit\"></vue-button>\\n' +\n      '      <vue-button @click=\"delHandle(scope.row)\" type=\"primary\" icon=\"vue-icon-delete\"></vue-button>\\n' +\n      '    </template>\\n' +\n      '  </vue-table-column>\\n' +\n      '  <vue-table-column prop=\"date\" label=\"Date\" width=\"150\">\\n' +\n      '  </vue-table-column>\\n' +\n      '  <vue-table-column prop=\"name\" label=\"Name\" width=\"120\">\\n' +\n      '  </vue-table-column>\\n' +\n      '  <vue-table-column prop=\"address\" label=\"Address\" width=\"300\">\\n' +\n      '  </vue-table-column>\\n' +\n      '</vue-table>\\n' +\n      '<vue-button @click=\"addHandle\" >Add Row</vue-button>\\n' +\n      '<vue-dialog v-model=\"dialogVisible\">\\n' +\n      '  <vue-form :model=\"currentData\" label-width=\"100px\" >\\n' +\n      '    <vue-form-item label=\"City\" prop=\"city\">\\n' +\n      '      <vue-input v-model=\"currentData.city\"></vue-input>\\n' +\n      '    </vue-form-item>\\n' +\n      '    <vue-form-item label=\"Name\" prop=\"name\">\\n' +\n      '      <vue-input v-model=\"currentData.name\"></vue-input>\\n' +\n      '    </vue-form-item>\\n' +\n      '    <vue-form-item label=\"Address\" prop=\"address\">\\n' +\n      '      <vue-input v-model=\"currentData.address\"></vue-input>\\n' +\n      '    </vue-form-item>\\n' +\n      '  </vue-form>\\n' +\n      '  <span slot=\"footer\" class=\"dialog-footer\">\\n' +\n      '    <vue-button @click=\"dialogVisible = false\">Cancel</vue-button>\\n' +\n      '    <vue-button type=\"primary\" @click=\"saveHandle\">OK</vue-button>\\n' +\n      '  </span>\\n' +\n      '</vue-dialog>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function() {\\n' +\n      '      return {\\n' +\n      '        tableData: [{\\n' +\n      '          name: \"Tom\",\\n' +\n      '          city: \"Los Angeles\",\\n' +\n      '          address: \"No. 189, Grove St, Los Angeles\",\\n' +\n      '        }, {\\n' +\n      '          name: \"Mac\",\\n' +\n      '          city: \"Los Alamos\",\\n' +\n      '          address: \"No. 199, Grove St, Los Angeles\",\\n' +\n      '        }, {\\n' +\n      '          name: \"Jesse\",\\n' +\n      '          city: \"Los Angeles\",\\n' +\n      '          address: \"No. 188, Grove St, Los Angeles\",\\n' +\n      '        }],\\n' +\n      '        currentIndex: -1,\\n' +\n      '        currentData: {},\\n' +\n      '        dialogVisible: false\\n' +\n      '      }\\n' +\n      '    },\\n' +\n      '    methods: {\\n' +\n      '      addHandle: function() {\\n' +\n      '        this.currentData = {};\\n' +\n      '        this.currentIndex = this.tableData.length;\\n' +\n      '        this.dialogVisible = true;\\n' +\n      '      },\\n' +\n      '      editHandle: function(rowData) {\\n' +\n      '        this.currentData = VueUtil.merge({}, rowData);\\n' +\n      '        this.currentIndex = this.tableData.indexOf(rowData);\\n' +\n      '        this.dialogVisible = true;\\n' +\n      '      },\\n' +\n      '      delHandle: function(rowData) {\\n' +\n      '        var index = this.tableData.indexOf(rowData);\\n' +\n      '        this.tableData.splice(index, 1);\\n' +\n      '      },\\n' +\n      '      saveHandle: function() {\\n' +\n      '        Vue.set(this.tableData, this.currentIndex, this.currentData);\\n' +\n      '        this.dialogVisible = false;\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'table5',\n    label: 'tableDemo.samples5.label',\n    description: 'tableDemo.samples5.description',\n    template: '<div class=\"source\"><vue-table  ref=\"singleTable\" :data=\"tableData\" border stripe style=\"width: 100%\" :default-sort = \"[{prop: \\'column1\\', order: \\'descending\\'}]\"><vue-table-column v-for=\"item in 5\" :key=\"item\" :prop=\"\\'column\\'+item\" :label=\"\\'column\\'+item\" min-width=\"150\" sortable ></vue-table-column></vue-table><vue-button @click=\"clearSortsHandel\">Clear Sorts</vue-button></div>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: null\n        }\n      },\n      methods: {\n        clearSortsHandel: function() {\n          this.$refs.singleTable.clearSorts();\n        }\n      },\n      mounted: function () {\n        var tableData = [];\n        for (var i = 0; i < 5; i++) {\n          var DateOption = {};\n          for (var j = 1; j < 6; j++) {\n            DateOption['column' + j] = \"value-\" + j + \"-\" + (i + 1);\n          }\n          tableData[i] = DateOption;\n        }\n        this.tableData = tableData;\n      }\n    },\n    code: '<vue-table ref=\"singleTable\" :data=\"tableData\" border stripe style=\"width: 100%\" :default-sort = \"[{prop: \\'column1\\', order: \\'descending\\'}]\">\\n' +\n      '  <vue-table-column v-for=\"item in 5\" :key=\"item\" :prop=\"\\'column\\'+item\" :label=\"\\'column\\'+item\" min-width=\"150\" sortable >\\n' +\n      '  </vue-table-column>\\n' +\n      '</vue-table>\\n' +\n      '<vue-button @click=\"clearSortsHandel\">Clear Sorts</vue-button>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function(){\\n' +\n      '      return {\\n' +\n      '        tableData: null\\n' +\n      '      }\\n' +\n      '    },\\n' +\n      '    method: {\\n' +\n      '      clearSortsHandel: function() {\\n' +\n      '        this.$refs.singleTable.clearSorts();\\n' +\n      '      }\\n' + \n      '    },\\n' +\n      '    mounted: function() {\\n' +\n      '      var tableData = [];\\n' +\n      '      for (var i = 0; i < 5; i++) {\\n' +\n      '        var DateOption = {};\\n' +\n      '        for (var j = 1; j < 6; j++) {\\n' +\n      '          DateOption[\\'column\\'+j] = \"value-\"+j+\"-\"+(i+1);\\n' +\n      '        }\\n' +\n      '        tableData[i] = DateOption;\\n' +\n      '      }\\n' +\n      '      this.tableData = tableData;\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'table6',\n    label: 'tableDemo.samples6.label',\n    description: 'tableDemo.samples6.description',\n    template: '<div class=\"source\"><vue-table :data=\"tableData\" border stripe style=\"width: 100%\" ref=\"singleTable\"><vue-table-column v-for=\"item in 3\" :key=\"item\" :prop=\"\\'column\\'+item\" :label=\"\\'column\\'+item\" min-width=\"150\" ></vue-table-column><vue-table-column prop=\"column4\" label=\"column4\" min-width=\"150\" filterable :filters=\"[{ text: \\'V41\\', value: \\'value-4-1\\' }, { text: \\'V43\\', value: \\'value-4-3\\' }]\"></vue-table-column><vue-table-column prop=\"column5\" label=\"column5\" min-width=\"150\" filterable></vue-table-column></vue-table><vue-button @click=\"clearFiltersHandel\">Clear Filters</vue-button></div>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: null\n        }\n      },\n      methods: {\n        clearFiltersHandel: function() {\n          this.$refs.singleTable.clearFilters();\n        }\n      },\n      mounted: function () {\n        var tableData = [];\n        for (var i = 0; i < 5; i++) {\n          var DateOption = {};\n          for (var j = 1; j < 6; j++) {\n            DateOption['column' + j] = \"value-\" + j + \"-\" + (i + 1);\n          }\n          tableData[i] = DateOption;\n        }\n        this.tableData = tableData;\n      }\n    },\n    code: '<vue-table ref=\"singleTable\" :data=\"tableData\" border stripe style=\"width: 100%\">\\n' +\n      '  <vue-table-column v-for=\"item in 3\" :key=\"item\" :prop=\"\\'column\\'+item\" :label=\"\\'column\\'+item\" min-width=\"150\" >\\n' +\n      '  </vue-table-column>\\n' +\n      '  <vue-table-column filterable :filters=\"[{ text: \\'V41\\', value: \\'value-4-1\\' }, { text: \\'V43\\', value: \\'value-4-3\\' }]\" prop=\"column4\" label=\"column4\" min-width=\"150\">\\n' +\n      '  </vue-table-column>\\n' +\n      '  <vue-table-column filterable prop=\"column5\" label=\"column5\" min-width=\"150\">\\n' +\n      '  </vue-table-column>\\n' +\n      '</vue-table>\\n' +\n      '<vue-button @click=\"clearFiltersHandel\">Clear Filters</vue-button></div>\\n\\n' + \n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function(){\\n' +\n      '      return {\\n' +\n      '        tableData: null\\n' +\n      '      }\\n' +\n      '    },\\n' +\n      '    method: {\\n' +\n      '      clearFiltersHandel: function() {\\n' +\n      '        this.$refs.singleTable.clearFilters();\\n' +\n      '      }\\n' + \n      '    },\\n' +\n      '    mounted: function() {\\n' +\n      '      var tableData = [];\\n' +\n      '      for (var i = 0; i < 5; i++) {\\n' +\n      '        var DateOption = {};\\n' +\n      '        for (var j = 1; j < 6; j++) {\\n' +\n      '          DateOption[\\'column\\'+j] = \"value-\"+j+\"-\"+(i+1);\\n' +\n      '        }\\n' +\n      '        tableData[i] = DateOption;\\n' +\n      '      }\\n' +\n      '      this.tableData = tableData;\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'table7',\n    label: 'tableDemo.samples7.label',\n    description: 'tableDemo.samples7.description',\n    template: '<div class=\"source\"><vue-table :data=\"tableData\" border stripe style=\"width: 100%\" :row-class-name=\\'getRowClass\\'><vue-table-column v-for=\"item in 4\" :key=\"item\" :prop=\"\\'column\\'+item\" :label=\"\\'column\\'+item\" min-width=\"150\" :class-name=\\'getCellClass\\'></vue-table-column><vue-table-column prop=\"column5\" label=\"column5\" min-width=\"150\"></vue-table-column></vue-table><br/><vue-table :data=\"tableData\" border stripe style=\"width: 100%\" row-class-name=\"rowClass1\"><vue-table-column v-for=\"item in 4\" :key=\"item\" :prop=\"\\'column\\'+item\" :label=\"\\'column\\'+item\" min-width=\"150\" class-name=\"cellClass\" label-class-name=\"rowClass cellClass1\"></vue-table-column><vue-table-column prop=\"column5\" label=\"column5\" min-width=\"150\"></vue-table-column></vue-table></div>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: null\n        }\n      },\n      methods: {\n        getRowClass: function (rowData, rowIndex) {\n          if (rowIndex % 2 === 0) {\n            return 'rowClass1'\n          }\n          return 'rowClass'\n        },\n        getCellClass: function (rowIndex, cellIndex, rowData) {\n          if (rowIndex % 2 === 0 && cellIndex % 2 === 0) {\n            return 'cellClass1'\n          }\n          if (rowIndex % 2 !== 0 && cellIndex % 2 !== 0) {\n            return 'cellClass'\n          }\n        }\n      },\n      mounted: function () {\n        var tableData = [];\n        for (var i = 0; i < 5; i++) {\n          var DateOption = {};\n          for (var j = 1; j < 6; j++) {\n            DateOption['column' + j] = \"value-\" + j + \"-\" + (i + 1);\n          }\n          tableData[i] = DateOption;\n        }\n        this.tableData = tableData;\n      }\n    },\n    code: '<vue-table :data=\"tableData\" border stripe style=\"width: 100%\" :row-class-name=\"getRowClass\">\\n' +\n      '  <vue-table-column v-for=\"item in 4\" :key=\"item\" :prop=\"\\'column\\'+item\" :label=\"\\'column\\'+item\" min-width=\"150\" :class-name=\"getCellClass\">\\n' +\n      '  </vue-table-column>\\n' +\n      '  <vue-table-column prop=\"column5\" label=\"column5\" min-width=\"150\">\\n' +\n      '  </vue-table-column>\\n' +\n      '</vue-table>\\n\\n' +\n      '<vue-table :data=\"tableData\" border stripe style=\"width: 100%\" row-class-name=\"rowClass1\">\\n' +\n      '  <vue-table-column v-for=\"item in 4\" :key=\"item\" :prop=\"\\'column\\'+item\" :label=\"\\'column\\'+item\" min-width=\"150\" class-name=\"cellClass\" label-class-name=\"rowClass cellClass1\">\\n' +\n      '  </vue-table-column>\\n' +\n      '  <vue-table-column prop=\"column5\" label=\"column5\" min-width=\"150\">\\n' +\n      '  </vue-table-column>\\n' +\n      '</vue-table>\\n\\n' +\n      '<style>\\n' +\n      '  .rowClass {\\n' +\n      '    color: #f00 !important;\\n' +\n      '  }\\n' +\n      '  .rowClass1 {\\n' +\n      '    color: #00f !important;\\n' +\n      '  }\\n' +\n      '  .cellClass {\\n' +\n      '    background-color: #ff0 !important;\\n' +\n      '  }\\n' +\n      '  .cellClass1 {\\n' +\n      '    background-color: #0ff !important;\\n' +\n      '  }\\n' +\n      '</style>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function(){\\n' +\n      '      return {\\n' +\n      '        tableData: null\\n' +\n      '      }\\n' +\n      '    },\\n' +\n      '    methods: {\\n' +\n      '      getRowClass: function(rowData, rowIndex) {\\n' +\n      '        if (rowIndex%2 === 0) {\\n' +\n      '          return \"rowClass1\"\\n' +\n      '        }\\n' +\n      '        return \"rowClass\"\\n' +\n      '      },\\n' +\n      '      getCellClass: function(rowIndex, cellIndex, rowData) {\\n' +\n      '        if (rowIndex%2 === 0 && cellIndex%2 === 0) {\\n' +\n      '          return \"cellClass1\"\\n' +\n      '        }\\n' +\n      '        if (rowIndex%2 !== 0 && cellIndex%2 !== 0) {\\n' +\n      '          return \"cellClass\"\\n' +\n      '        }\\n' +\n      '      }\\n' +\n      '    },\\n' +\n      '    mounted: function() {\\n' +\n      '      var tableData = [];\\n' +\n      '      for (var i = 0; i < 5; i++) {\\n' +\n      '        var DateOption = {};\\n' +\n      '        for (var j = 1; j < 6; j++) {\\n' +\n      '          DateOption[\\'column\\'+j] = \"value-\"+j+\"-\"+(i+1);\\n' +\n      '        }\\n' +\n      '        tableData[i] = DateOption;\\n' +\n      '      }\\n' +\n      '      this.tableData = tableData;\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'table8',\n    label: 'tableDemo.samples8.label',\n    description: 'tableDemo.samples8.description',\n    template: '<div class=\"source\"><vue-table :data=\"tableData\" style=\"width: 100%\" :expand-class-name=\"getExpandClass\"><vue-table-column type=\"expand\"><template slot-scope=\"scope\"><p>State: {{ scope.row.state }}</p><p>City: {{ scope.row.city }}</p><p>Address: {{ scope.row.address }}</p><p>Zip: {{ scope.row.zip }}</p></template></vue-table-column><vue-table-column label=\"Date\" prop=\"date\" header-align=\"left\"></vue-table-column><vue-table-column label=\"Name\" prop=\"name\" header-align=\"left\"></vue-table-column></vue-table></div>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            date: \"2017-05-03\",\n            name: \"Tom\",\n            state: \"California\",\n            city: \"Los Angeles\",\n            address: \"No. 189, Grove St, Los Angeles\",\n            zip: \"CA 90036\"\n          }, {\n            date: \"2017-06-02\",\n            name: \"Tom\",\n            state: \"California\",\n            city: \"Los Angeles\",\n            address: \"No. 189, Grove St, Los Angeles\",\n            zip: \"CA 90036\"\n          }, {\n            date: \"2017-07-04\",\n            name: \"Tom\",\n            state: \"California\",\n            city: \"Los Angeles\",\n            address: \"No. 189, Grove St, Los Angeles\",\n            zip: \"CA 90036\"\n          }]\n        }\n      },\n      methods: {\n        getExpandClass: function (rowData, rowIndex) {\n          if (rowIndex % 2 === 0) {\n            return 'rowClass1'\n          }\n          return 'rowClass'\n        }\n      }\n    },\n    code: '<vue-table :data=\"tableData\" style=\"width: 100%\" :expand-class-name=\"getExpandClass\">\\n' +\n      '  <vue-table-column type=\"expand\">\\n' +\n      '    <template slot-scope=\"scope\">\\n' +\n      '      <p>State: {{ scope.row.state }}</p>\\n' +\n      '      <p>City: {{ scope.row.city }}</p>\\n' +\n      '      <p>Address: {{ scope.row.address }}</p>\\n' +\n      '      <p>Zip: {{ scope.row.zip }}</p>\\n' +\n      '    </template>\\n' +\n      '  </vue-table-column>\\n' +\n      '  <vue-table-column label=\"Date\" prop=\"date\" header-align=\"left\"></vue-table-column>\\n' +\n      '  <vue-table-column label=\"Name\" prop=\"name\" header-align=\"left\"></vue-table-column>\\n' +\n      '</vue-table>\\n\\n' +\n      '<style>\\n' +\n      '  .rowClass {\\n' +\n      '    color: #f00 !important;\\n' +\n      '  }\\n' +\n      '  .rowClass1 {\\n' +\n      '    color: #00f !important;\\n' +\n      '  }\\n' +\n      '</style>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function(){\\n' +\n      '      return {\\n' +\n      '        tableData: [{\\n' +\n      '          date: \"2017-05-03\",\\n' +\n      '          name: \"Tom\",\\n' +\n      '          state: \"California\",\\n' +\n      '          city: \"Los Angeles\",\\n' +\n      '          address: \"No. 189, Grove St, Los Angeles\",\\n' +\n      '          zip: \"CA 90036\",\\n' +\n      '        }, {\\n' +\n      '          date: \"2017-06-02\",\\n' +\n      '          name: \"Tom\",\\n' +\n      '          state: \"California\",\\n' +\n      '          city: \"Los Angeles\",\\n' +\n      '          address: \"No. 189, Grove St, Los Angeles\",\\n' +\n      '          zip: \"CA 90036\",\\n' +\n      '        }, {\\n' +\n      '          date: \"2017-07-04\",\\n' +\n      '          name: \"Tom\",\\n' +\n      '          state: \"California\",\\n' +\n      '          city: \"Los Angeles\",\\n' +\n      '          address: \"No. 189, Grove St, Los Angeles\",\\n' +\n      '          zip: \"CA 90036\",\\n' +\n      '        }]\\n' +\n      '      }\\n' +\n      '    },\\n' +\n      '    methods: {\\n' +\n      '      getExpandClass: function(rowData, rowIndex) {\\n' +\n      '        if (rowIndex%2 === 0) {\\n' +\n      '          return \"rowClass1\"\\n' +\n      '        }\\n' +\n      '        return \"rowClass\"\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'table14',\n    label: 'tableDemo.samples14.label',\n    description: 'tableDemo.samples14.description',\n    template: '<div class=\"source\"><vue-table :data=\"tableData\" highlight-current-row ref=\"singleTable\" @current-change=\"handleCurrentChange\" style=\"width: 100%\"><vue-table-column type=\"index\" width=\"50\"></vue-table-column><vue-table-column prop=\"date\" label=\"Date\" width=\"180\"></vue-table-column><vue-table-column prop=\"name\" label=\"Name\" width=\"180\"></vue-table-column><vue-table-column prop=\"address\" label=\"Address\"></vue-table-column></vue-table><vue-button-group><vue-button @click=\"setCurrent(tableData[1])\">Select second row</vue-button><vue-button @click=\"setCurrent(null)\">Clear selection</vue-button></vue-button-group></div>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            date: '2017-07-03',\n            name: 'Tom',\n            address: 'No. 189, Grove St, Los Angeles'\n          }, {\n            date: '2018-08-02',\n            name: 'Tom',\n            address: 'No. 189, Grove St, Los Angeles'\n          }, {\n            date: '2019-09-04',\n            name: 'Tom',\n            address: 'No. 189, Grove St, Los Angeles'\n          }, {\n            date: '2020-10-01',\n            name: 'Tom',\n            address: 'No. 189, Grove St, Los Angeles'\n          }]\n        };\n      },\n      methods: {\n        setCurrent: function (row) {\n          this.$refs.singleTable.setCurrentRow(row);\n        },\n        handleCurrentChange: function (currentRow, oldCurrentRow) {\n          this.$notify({\n            title: 'Select Data: ' + JSON.stringify(currentRow)\n          });\n          this.$notify({\n            title: 'Old select Data: ' + JSON.stringify(oldCurrentRow)\n          });\n        }\n      }\n    },\n    code: '<vue-table :data=\"tableData\" highlight-current-row ref=\"singleTable\" @current-change=\"handleCurrentChange\" style=\"width: 100%\">\\n' +\n      '  <vue-table-column type=\"index\" width=\"50\"></vue-table-column>\\n' +\n      '  <vue-table-column prop=\"date\" label=\"Date\" width=\"180\"></vue-table-column>\\n' +\n      '  <vue-table-column prop=\"name\" label=\"Name\" width=\"180\"></vue-table-column>\\n' +\n      '  <vue-table-column prop=\"address\" label=\"Address\"></vue-table-column>\\n' +\n      '</vue-table>\\n' +\n      '<vue-button-group>\\n' +\n      '  <vue-button @click=\"setCurrent(tableData[1])\">Select second row</vue-button>\\n' +\n      '  <vue-button @click=\"setCurrent(null)\">Clear selection</vue-button>\\n' +\n      '</vue-button-group>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function() {\\n' +\n      '      return {\\n' +\n      '        tableData: [{\\n' +\n      '          date: \"2017-07-03\",\\n' +\n      '          name: \"Tom\",\\n' +\n      '          address: \"No. 189, Grove St, Los Angeles\"\\n' +\n      '        }, {\\n' +\n      '          date: \"2018-08-02\",\\n' +\n      '          name: \"Tom\",\\n' +\n      '          address: \"No. 189, Grove St, Los Angeles\"\\n' +\n      '        }, {\\n' +\n      '          date: \"2019-09-04\",\\n' +\n      '          name: \"Tom\",\\n' +\n      '          address: \"No. 189, Grove St, Los Angeles\"\\n' +\n      '        }, {\\n' +\n      '          date: \"2020-10-01\",\\n' +\n      '          name: \"Tom\",\\n' +\n      '          address: \"No. 189, Grove St, Los Angeles\"\\n' +\n      '        }]\\n' +\n      '      };\\n' +\n      '    },\\n' +\n      '    methods: {\\n' +\n      '      setCurrent: function(row) {\\n' +\n      '        this.$refs.singleTable.setCurrentRow(row);\\n' +\n      '      },\\n' +\n      '      handleCurrentChange: function(currentRow, oldCurrentRow) {\\n' +\n      '        this.$notify({title: \\'Select Data: \\' + JSON.stringify(currentRow)});\\n' +\n      '        this.$notify({title: \\'Old select Data: \\' + JSON.stringify(oldCurrentRow)});\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'table15',\n    label: 'tableDemo.samples15.label',\n    description: 'tableDemo.samples15.description',\n    template: '<div class=\"source\"><vue-table :data=\"tableData\" ref=\"multipleTable\" @selection-change=\"handleSlectionChange\" style=\"width: 100%\"><vue-table-column type=\"selection\" width=\"50\" align=\"center\"></vue-table-column><vue-table-column prop=\"date\" label=\"Date\" width=\"180\"></vue-table-column><vue-table-column prop=\"name\" label=\"Name\" width=\"180\"></vue-table-column><vue-table-column prop=\"address\" label=\"Address\"></vue-table-column></vue-table><vue-button-group><vue-button @click=\"toggleSelection([tableData[1], tableData[2]])\">Select second row</vue-button><vue-button @click=\"toggleSelection()\">Clear selection</vue-button></vue-button-group></div>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            date: '2017-07-03',\n            name: 'Tom',\n            address: 'No. 189, Grove St, Los Angeles'\n          }, {\n            date: '2018-08-02',\n            name: 'Tom',\n            address: 'No. 189, Grove St, Los Angeles'\n          }, {\n            date: '2019-09-04',\n            name: 'Tom',\n            address: 'No. 189, Grove St, Los Angeles'\n          }, {\n            date: '2020-10-01',\n            name: 'Tom',\n            address: 'No. 189, Grove St, Los Angeles'\n          }]\n        };\n      },\n      methods: {\n        toggleSelection: function (rows) {\n          if (rows) {\n            var self = this;\n            rows.forEach(function (row) {\n              self.$refs.multipleTable.toggleRowSelection(row);\n            });\n          } else {\n            this.$refs.multipleTable.clearSelection();\n          }\n        },\n        handleSlectionChange: function (selectionRows) {\n          this.$notify({\n            title: 'Select Data: ' + JSON.stringify(selectionRows)\n          });\n        }\n      }\n    },\n    code: '<vue-table :data=\"tableData\" ref=\"singleTable\" @selection-change=\"handleSlectionChange\" style=\"width: 100%\">\\n' +\n      '  <vue-table-column type=\"selection\" width=\"50\" align=\"center\"></vue-table-column>\\n' +\n      '  <vue-table-column prop=\"date\" label=\"Date\" width=\"180\"></vue-table-column>\\n' +\n      '  <vue-table-column prop=\"name\" label=\"Name\" width=\"180\"></vue-table-column>\\n' +\n      '  <vue-table-column prop=\"address\" label=\"Address\"></vue-table-column>\\n' +\n      '</vue-table>\\n' +\n      '<vue-button-group>\\n' +\n      '  <vue-button @click=\"toggleSelection([tableData[1], tableData[2]])\">Select second row</vue-button>\\n' +\n      '  <vue-button @click=\"toggleSelection()\">Clear selection</vue-button>\\n' +\n      '</vue-button-group>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function() {\\n' +\n      '      return {\\n' +\n      '        tableData: [{\\n' +\n      '          date: \"2017-07-03\",\\n' +\n      '          name: \"Tom\",\\n' +\n      '          address: \"No. 189, Grove St, Los Angeles\"\\n' +\n      '        }, {\\n' +\n      '          date: \"2018-08-02\",\\n' +\n      '          name: \"Tom\",\\n' +\n      '          address: \"No. 189, Grove St, Los Angeles\"\\n' +\n      '        }, {\\n' +\n      '          date: \"2019-09-04\",\\n' +\n      '          name: \"Tom\",\\n' +\n      '          address: \"No. 189, Grove St, Los Angeles\"\\n' +\n      '        }, {\\n' +\n      '          date: \"2020-10-01\",\\n' +\n      '          name: \"Tom\",\\n' +\n      '          address: \"No. 189, Grove St, Los Angeles\"\\n' +\n      '        }]\\n' +\n      '      };\\n' +\n      '    },\\n' +\n      '    methods: {\\n' +\n      '      toggleSelection: function(rows) {\\n' +\n      '        if (rows) {\\n' +\n      '          var self = this;\\n' +\n      '          rows.forEach(function(row) {\\n' +\n      '            self.$refs.multipleTable.toggleRowSelection(row);\\n' +\n      '          });\\n' +\n      '        } else {\\n' +\n      '          this.$refs.multipleTable.clearSelection();\\n' +\n      '        }\\n' +\n      '      },\\n' +\n      '      handleSlectionChange: function(selectionRows) {\\n' +\n      '        this.$notify({\\n' +\n      '          title: \"Select Data: \" + JSON.stringify(selectionRows)\\n' +\n      '        });\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'table16',\n    label: 'tableDemo.samples16.label',\n    description: 'tableDemo.samples16.description',\n    template: '<div class=\"source\"><vue-table :data=\"tableData\" border show-footer style=\"width: 100%\"><vue-table-column type=\"index\" align=\"right\"></vue-table-column><vue-table-column prop=\"cost1\" label=\"Cost 1\" min-width=\"150\" align=\"right\" aggregate=\"max\"></vue-table-column><vue-table-column prop=\"cost2\" label=\"Cost 2\" min-width=\"150\" align=\"right\" aggregate=\"average\"></vue-table-column><vue-table-column prop=\"cost3\" label=\"Cost 3\" min-width=\"150\" align=\"right\" aggregate=\"min\"></vue-table-column><vue-table-column prop=\"cost4\" label=\"Cost 4\" min-width=\"150\" align=\"right\" aggregate=\"count\"></vue-table-column></vue-table><br/><vue-table :data=\"tableData\" border show-footer style=\"width: 100%\"><vue-table-column type=\"index\" width=\"150\" align=\"right\" aggregate-label=\"Sum\"></vue-table-column><vue-table-column prop=\"cost1\" label=\"Cost 1\" min-width=\"150\" align=\"right\" aggregate=\"sum\" aggregate-label=\"\"></vue-table-column><vue-table-column prop=\"cost2\" label=\"Cost 2\" min-width=\"150\" align=\"right\" aggregate=\"sum\" aggregate-label=\"\"></vue-table-column><vue-table-column prop=\"cost3\" label=\"Cost 3\" min-width=\"150\" align=\"right\" aggregate=\"sum\" aggregate-label=\"\"></vue-table-column><vue-table-column prop=\"cost4\" label=\"Cost 4\" min-width=\"150\" align=\"right\" aggregate=\"sum\" aggregate-label=\"\"></vue-table-column></vue-table></div>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            cost1: '234',\n            cost2: '3.2',\n            cost3: 10,\n            cost4: 'value-1-1'\n          }, {\n            cost1: '165',\n            cost2: '4.43',\n            cost3: 12,\n            cost4: 'value-1-2'\n          }, {\n            cost1: '324',\n            cost2: '1.9',\n            cost3: 9,\n            cost4: 'value-1-3'\n          }, {\n            cost1: '621',\n            cost2: '2.2',\n            cost3: 17,\n            cost4: 'value-1-4'\n          }, {\n            cost1: '539',\n            cost2: '4.1',\n            cost3: 15,\n            cost4: 'value-1-5'\n          }]\n        };\n      }\n    },\n    code: '<vue-table :data=\"tableData\" border show-footer style=\"width: 100%\">\\n' +\n      '  <vue-table-column type=\"index\" align=\"right\"></vue-table-column>\\n' +\n      '  <vue-table-column prop=\"cost1\" label=\"Cost 1\" min-width=\"150\" align=\"right\" aggregate=\"max\"></vue-table-column>\\n' +\n      '  <vue-table-column prop=\"cost2\" label=\"Cost 2\" min-width=\"150\" align=\"right\" aggregate=\"average\"></vue-table-column>\\n' +\n      '  <vue-table-column prop=\"cost3\" label=\"Cost 3\" min-width=\"150\" align=\"right\" aggregate=\"min\"></vue-table-column>\\n' +\n      '  <vue-table-column prop=\"cost4\" label=\"Cost 4\" min-width=\"150\" align=\"right\" aggregate=\"count\"></vue-table-column>\\n' +\n      '</vue-table>\\n\\n' +\n      '<vue-table :data=\"tableData\" border show-footer style=\"width: 100%\">\\n' +\n      '  <vue-table-column type=\"index\" width=\"150\" align=\"right\" aggregate-label=\"Sum\"></vue-table-column>\\n' +\n      '  <vue-table-column prop=\"cost1\" label=\"Cost 1\" min-width=\"150\" align=\"right\" aggregate=\"sum\" aggregate-label=\"\"></vue-table-column>\\n' +\n      '  <vue-table-column prop=\"cost2\" label=\"Cost 2\" min-width=\"150\" align=\"right\" aggregate=\"sum\" aggregate-label=\"\"></vue-table-column>\\n' +\n      '  <vue-table-column prop=\"cost3\" label=\"Cost 3\" min-width=\"150\" align=\"right\" aggregate=\"sum\" aggregate-label=\"\"></vue-table-column>\\n' +\n      '  <vue-table-column prop=\"cost4\" label=\"Cost 4\" min-width=\"150\" align=\"right\" aggregate=\"sum\" aggregate-label=\"\"></vue-table-column>\\n' +\n      '</vue-table>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function() {\\n' +\n      '      return {\\n' +\n      '        tableData: [{\\n' +\n      '          cost1: \"234\",\\n' +\n      '          cost2: \"3.2\",\\n' +\n      '          cost3: 10,\\n' +\n      '          cost4: \"value-1-1\"\\n' +\n      '        }, {\\n' +\n      '          cost1: \"165\",\\n' +\n      '          cost2: \"4.43\",\\n' +\n      '          cost3: 12,\\n' +\n      '          cost4: \"value-1-2\"\\n' +\n      '        }, {\\n' +\n      '          cost1: \"324\",\\n' +\n      '          cost2: \"1.9\",\\n' +\n      '          cost3: 9,\\n' +\n      '          cost4: \"value-1-3\"\\n' +\n      '        }, {\\n' +\n      '          cost1: \"621\",\\n' +\n      '          cost2: \"2.2\",\\n' +\n      '          cost3: 17,\\n' +\n      '          cost4: \"value-1-4\"\\n' +\n      '        }, {\\n' +\n      '          cost1: \"539\",\\n' +\n      '          cost2: \"4.1\",\\n' +\n      '          cost3: 15,\\n' +\n      '          cost4: \"value-1-5\"\\n' +\n      '        }]\\n' +\n      '      };\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'table17',\n    label: 'tableDemo.samples17.label',\n    description: 'tableDemo.samples17.description',\n    template: '<div class=\"source\"><vue-table :data=\"tableData\" border stripe style=\"width: 100%\"><vue-table-column v-for=\"item in 4\" :key=\"item\" :prop=\"\\'column\\'+item\" :label=\"\\'column\\'+item\" min-width=\"150\" ></vue-table-column><vue-table-column prop=\"column5\" label=\"column5\" min-width=\"150\" :visible=\"visible\"></vue-table-column></vue-table><vue-button @click=\"showHiddenColumn\">Show / Hidden Column5</vue-button></div>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: null,\n          visible: true\n        }\n      },\n      methods: {\n        showHiddenColumn: function () {\n          this.visible = !this.visible\n        }\n      },\n      mounted: function () {\n        var tableData = [];\n        for (var i = 0; i < 5; i++) {\n          var DateOption = {};\n          for (var j = 1; j < 6; j++) {\n            DateOption['column' + j] = \"value-\" + j + \"-\" + (i + 1);\n          }\n          tableData[i] = DateOption;\n        }\n        this.tableData = tableData;\n      }\n    },\n    code: '<vue-table :data=\"tableData\" border stripe style=\"width: 100%\">\\n' +\n      '  <vue-table-column v-for=\"item in 4\" :key=\"item\" :prop=\"\\'column\\'+item\" :label=\"\\'column\\'+item\" min-width=\"150\" >\\n' +\n      '  </vue-table-column>\\n' +\n      '  <vue-table-column prop=\"column5\" label=\"column5\" min-width=\"150\" :visible=\"visible\">\\n' +\n      '  </vue-table-column>\\n' +\n      '</vue-table>\\n' +\n      '<vue-button @click=\"showHiddenColumn\">Show / Hidden Column5</vue-button>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function() {\\n' +\n      '      return {\\n' +\n      '        tableData: null,\\n' +\n      '        visible: true\\n' +\n      '      }\\n' +\n      '    },\\n' +\n      '    methods: {\\n' +\n      '      showHiddenColumn: function() {\\n' +\n      '        this.visible = !this.visible\\n' +\n      '      }\\n' +\n      '    },\\n' +\n      '    mounted: function() {\\n' +\n      '      var tableData = [];\\n' +\n      '      for (var i = 0; i < 5; i++) {\\n' +\n      '        var DateOption = {};\\n' +\n      '        for (var j = 1; j < 6; j++) {\\n' +\n      '          DateOption[\\'column\\' + j] = \"value-\" + j + \"-\" + (i + 1);\\n' +\n      '        }\\n' +\n      '        tableData[i] = DateOption;\\n' +\n      '      }\\n' +\n      '      this.tableData = tableData;\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'table18',\n    label: 'tableDemo.samples18.label',\n    description: 'tableDemo.samples18.description',\n    template: '<div class=\"source\"><vue-table :data=\"tableData\" border stripe style=\"width: 100%\" context-menu ref=\"table\"><vue-table-column v-for=\"item in 5\" :key=\"item\" :prop=\"\\'column\\'+item\" :label=\"\\'column\\'+item\" min-width=\"150\" ></vue-table-column></vue-table><vue-button @click=\"contextMenuHandel\">Context Menu</vue-button><vue-button @click=\"getUserSetting\">getUserSetting</vue-button><vue-button @click=\"setUserSetting\">setUserSetting</vue-button><vue-input type=\"textarea\" :rows=\"6\" v-model=\"us\"></vue-input></div>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: null,\n          us: ''\n        }\n      },\n      methods: {\n        contextMenuHandel: function () {\n          this.$refs.table.toggleContextMenu();\n        },\n        getUserSetting: function() {\n          this.us = JSON.stringify(this.$refs.table.getUserSetting());\n        },\n        setUserSetting: function() {\n          this.$refs.table.setUserSetting(JSON.parse(this.us));\n        }\n      },\n      mounted: function () {\n        var tableData = [];\n        for (var i = 0; i < 5; i++) {\n          var DateOption = {};\n          for (var j = 1; j < 6; j++) {\n            DateOption['column' + j] = \"value-\" + j + \"-\" + (i + 1);\n          }\n          tableData[i] = DateOption;\n        }\n        this.tableData = tableData;\n      }\n    },\n    code: '<vue-table :data=\"tableData\" border stripe style=\"width: 100%\" context-menu ref=\"table\">\\n' +\n      '  <vue-table-column v-for=\"item in 5\" :key=\"item\" :prop=\"\\'column\\'+item\" :label=\"\\'column\\'+item\" min-width=\"150\" >\\n' +\n      '  </vue-table-column>\\n' +\n      '</vue-table>\\n' +\n      '<vue-button @click=\"contextMenuHandel\">Context Menu</vue-button>\\n' +\n      '<vue-button @click=\"getUserSetting\">getUserSetting</vue-button>\\n' +\n      '<vue-button @click=\"setUserSetting\">setUserSetting</vue-button>\\n' +\n      '<vue-input type=\"textarea\" :rows=\"6\" v-model=\"us\"></vue-input>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function() {\\n' +\n      '      return {\\n' +\n      '        tableData: null,\\n' +\n      '        us: \"\"\\n' +\n      '      }\\n' +\n      '    },\\n' +\n      '    methods: {\\n' +\n      '      contextMenuHandel: function() {\\n' +\n      '        this.$refs.table.toggleContextMenu();\\n' +\n      '      }\\n' +\n      '      getUserSetting: function() {\\n' +\n      '        this.us = JSON.stringify(this.$refs.table.getUserSetting());\\n' +\n      '      },\\n' +\n      '      setUserSetting: function() {\\n' +\n      '        this.$refs.table.setUserSetting(JSON.parse(this.us));\\n' +\n      '      }\\n' +\n      '    },\\n' +\n      '    mounted: function() {\\n' +\n      '      var tableData = [];\\n' +\n      '      for (var i = 0; i < 5; i++) {\\n' +\n      '        var DateOption = {};\\n' +\n      '        for (var j = 1; j < 6; j++) {\\n' +\n      '          DateOption[\\'column\\' + j] = \"value-\" + j + \"-\" + (i + 1);\\n' +\n      '        }\\n' +\n      '        tableData[i] = DateOption;\\n' +\n      '      }\\n' +\n      '      this.tableData = tableData;\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'table19',\n    label: 'tableDemo.samples19.label',\n    description: 'tableDemo.samples19.description',\n    template: '<div class=\"source\"><vue-table :data=\"tableData\" border stripe style=\"width: 100%\" context-menu ref=\"table\" height=\"300\" highlight-current-row lazyload show-footer><vue-table-column v-for=\"item in 5\" :key=\"item\" :prop=\"\\'column\\'+item\" :label=\"\\'column\\'+item\" min-width=\"150\" :aggregate=\"aggregate(item)\" align=\"right\"></vue-table-column></vue-table><vue-button @click=\"getData\">Add 100 Rows</vue-button></div>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: []\n        }\n      },\n      methods: {\n        getData: function () {\n          var tableData = this.tableData;\n          var i = 100;\n          while (i--) {\n            var column = {};\n            for (var j = 1; j <= 5; j++) {\n              column['column' + j] = (Math.random() * 100).toFixed(2);\n            }\n            tableData.push(column);\n          }\n        },\n        aggregate: function (item) {\n          var result;\n          switch (item) {\n            case 1:\n              result = 'sum';\n              break;\n            case 2:\n              result = 'average';\n              break;\n            case 3:\n              result = 'min';\n              break;\n            case 4:\n              result = 'max';\n              break;\n            case 5:\n              result = 'count';\n              break;\n          }\n          return result;\n        }\n      },\n      mounted: function () {\n        this.getData();\n      }\n    },\n    code: '<vue-table :data=\"tableData\" height=\"300\" lazyload highlight-current-row show-footer border stripe style=\"width: 100%\" context-menu ref=\"table\">\\n' +\n      '  <vue-table-column v-for=\"item in 5\" :key=\"item\" :prop=\"\\'column\\'+item\" :label=\"\\'column\\'+item\" min-width=\"150\" :aggregate=\"aggregate(item)\" align=\"right\">\\n' +\n      '  </vue-table-column>\\n' +\n      '</vue-table>\\n' +\n      '<vue-button @click=\"getData\">Add 100 Rows</vue-button>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function() {\\n' +\n      '      return {\\n' +\n      '        tableData: []\\n' +\n      '      }\\n' +\n      '    },\\n' +\n      '    methods: {\\n' +\n      '      getData: function() {\\n' +\n      '        var tableData = this.tableData;\\n' +\n      '        var i = 100;\\n' +\n      '        while (i--) {\\n' +\n      '          var column = {};\\n' +\n      '          for (var j = 1; j <= 5; j++) {\\n' +\n      '            column[\"column\" + j] = (Math.random()*100).toFixed(2);\\n' +\n      '          }\\n' +\n      '          tableData.push(column);\\n' +\n      '        }\\n' +\n      '      },\\n' +\n      '      aggregate: function(item) {\\n' +\n      '        var result;\\n' +\n      '        switch (item) {\\n' +\n      '          case 1:\\n' +\n      '            result = \"sum\";\\n' +\n      '            break;\\n' +\n      '          case 2:\\n' +\n      '            result = \"average\";\\n' +\n      '            break;\\n' +\n      '          case 3:\\n' +\n      '            result = \"min\";\\n' +\n      '            break;\\n' +\n      '          case 4:\\n' +\n      '            result = \"max\";\\n' +\n      '            break;\\n' +\n      '          case 5:\\n' +\n      '            result = \"count\";\\n' +\n      '            break;\\n' +\n      '        }\\n' +\n      '        return result;\\n' +\n      '      }\\n' +\n      '    },\\n' +\n      '    mounted: function() {\\n' +\n      '      this.getData();\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  },{\n    id: 'table20',\n    label: 'tableDemo.samples20.label',\n    description: 'tableDemo.samples20.description',\n    template: '<div class=\"source\"><vue-table :highlight-first-after-sort=\"highlightFirstAfterSort\" :highlight-first-after-filter=\"highlightFirstAfterFilter\" highlight-current-row :data=\"tableData\" border stripe style=\"width: 100%\" ref=\"singleTable\"><vue-table-column v-for=\"item in 3\" :key=\"item\" :prop=\"\\'column\\'+item\" :label=\"\\'column\\'+item\" min-width=\"150\" sortable></vue-table-column><vue-table-column prop=\"column4\" label=\"column4\" min-width=\"150\" filterable :filters=\"[{ text: \\'V41\\', value: \\'value-4-1\\' }, { text: \\'V43\\', value: \\'value-4-3\\' }]\"></vue-table-column><vue-table-column prop=\"column5\" label=\"column5\" min-width=\"150\" filterable></vue-table-column></vue-table><vue-checkbox v-model=\"highlightFirstAfterSort\">highlightFirstAfterSort</vue-checkbox><vue-checkbox v-model=\"highlightFirstAfterFilter\">highlightFirstAfterFilter</vue-checkbox></div>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: null,\n          highlightFirstAfterSort: false,\n          highlightFirstAfterFilter: false\n        }\n      },\n      methods: {\n        clearFiltersHandel: function() {\n          this.$refs.singleTable.clearFilters();\n        }\n      },\n      mounted: function () {\n        var tableData = [];\n        for (var i = 0; i < 5; i++) {\n          var DateOption = {};\n          for (var j = 1; j < 6; j++) {\n            DateOption['column' + j] = \"value-\" + j + \"-\" + (i + 1);\n          }\n          tableData[i] = DateOption;\n        }\n        this.tableData = tableData;\n      }\n    },\n    code: '<vue-table ref=\"singleTable\" :highlight-first-after-sort=\"highlightFirstAfterSort\" :highlight-first-after-filter=\"highlightFirstAfterFilter\" \\n'+\n      '    highlight-current-row :data=\"tableData\" border stripe style=\"width: 100%\">\\n' +\n      '  <vue-table-column v-for=\"item in 3\" :key=\"item\" :prop=\"\\'column\\'+item\" :label=\"\\'column\\'+item\" min-width=\"150\" sortable>\\n' +\n      '  </vue-table-column>\\n' +\n      '  <vue-table-column filterable :filters=\"[{ text: \\'V41\\', value: \\'value-4-1\\' }, { text: \\'V43\\', value: \\'value-4-3\\' }]\" prop=\"column4\" label=\"column4\" min-width=\"150\">\\n' +\n      '  </vue-table-column>\\n' +\n      '  <vue-table-column filterable prop=\"column5\" label=\"column5\" min-width=\"150\">\\n' +\n      '  </vue-table-column>\\n' +\n      '</vue-table>\\n' +\n      '<vue-checkbox v-model=\"highlightFirstAfterSort\">highlightFirstAfterSort</vue-checkbox>\\n' +\n      '<vue-checkbox v-model=\"highlightFirstAfterFilter\">highlightFirstAfterFilter</vue-checkbox>\\n\\n' + \n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function(){\\n' +\n      '      return {\\n' +\n      '        tableData: null\\n' +\n      '        highlightFirstAfterSort: false,\\n' +\n      '        highlightFirstAfterFilter: false\\n' +\n      '      }\\n' +\n      '    },\\n' +\n      '    method: {\\n' +\n      '      clearFiltersHandel: function() {\\n' +\n      '        this.$refs.singleTable.clearFilters();\\n' +\n      '      }\\n' + \n      '    },\\n' +\n      '    mounted: function() {\\n' +\n      '      var tableData = [];\\n' +\n      '      for (var i = 0; i < 5; i++) {\\n' +\n      '        var DateOption = {};\\n' +\n      '        for (var j = 1; j < 6; j++) {\\n' +\n      '          DateOption[\\'column\\'+j] = \"value-\"+j+\"-\"+(i+1);\\n' +\n      '        }\\n' +\n      '        tableData[i] = DateOption;\\n' +\n      '      }\\n' +\n      '      this.tableData = tableData;\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'table9',\n    label: 'Table Attributes',\n    template: '<attr-table :data=\"tableData\"></attr-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"data\",\n            column2: \"tableDemo.samples9.row1column2\",\n            column3: \"Array\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"height\",\n            column2: \"tableDemo.samples9.row2column2\",\n            column3: \"Number\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"lazyload\",\n            column2: \"tableDemo.samples9.row17column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"stripe\",\n            column2: \"tableDemo.samples9.row3column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"border\",\n            column2: \"tableDemo.samples9.row4column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"fit\",\n            column2: \"tableDemo.samples9.row5column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"true\"\n          }, {\n            column1: \"show-header\",\n            column2: \"tableDemo.samples9.row6column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"true\"\n          }, {\n            column1: \"highlight-current-row\",\n            column2: \"tableDemo.samples9.row7column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"highlight-hover-row\",\n            column2: \"tableDemo.samples9.row18column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"true\"\n          }, {\n            column1: \"highlight-first-after-filter\",\n            column2: \"tableDemo.samples9.row19column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"highlight-first-after-sort\",\n            column2: \"tableDemo.samples9.row20column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"row-class-name\",\n            column2: \"tableDemo.samples9.row8column2\",\n            column3: \"Function(row, index) / String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"empty-text\",\n            column2: \"tableDemo.samples9.row9column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"vue.table.emptyText\"\n          }, {\n            column1: \"default-expand-all\",\n            column2: \"tableDemo.samples9.row10column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"expand-class-name\",\n            column2: \"tableDemo.samples9.row11column2\",\n            column3: \"Function(row, index) / String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"default-sort\",\n            column2: \"tableDemo.samples9.row12column2\",\n            column3: \"Array\",\n            column4: \"order: ascending, descending\",\n            column5: \"tableDemo.samples9.row12column5\"\n          }, {\n            column1: \"tooltip-effect\",\n            column2: \"tableDemo.samples9.row13column2\",\n            column3: \"String\",\n            column4: \"dark, light\",\n            column5: \"light\"\n          }, {\n            column1: \"show-footer\",\n            column2: \"tableDemo.samples9.row14column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'table10',\n    label: 'Table Events',\n    template: '<event-table :data=\"tableData\"></event-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"select\",\n            column2: \"tableDemo.samples10.row1column2\",\n            column3: \"selection, row\"\n          }, {\n            column1: \"select-all\",\n            column2: \"tableDemo.samples10.row2column2\",\n            column3: \"selection\"\n          }, {\n            column1: \"selection-change\",\n            column2: \"tableDemo.samples10.row3column2\",\n            column3: \"selection\"\n          }, {\n            column1: \"cell-mouse-enter\",\n            column2: \"tableDemo.samples10.row4column2\",\n            column3: \"row, column, cell, event\"\n          }, {\n            column1: \"cell-mouse-leave\",\n            column2: \"tableDemo.samples10.row5column2\",\n            column3: \"row, column, cell, event\"\n          }, {\n            column1: \"cell-click\",\n            column2: \"tableDemo.samples10.row6column2\",\n            column3: \"row, column, cell, event\"\n          }, {\n            column1: \"cell-dblclick\",\n            column2: \"tableDemo.samples10.row7column2\",\n            column3: \"row, column, cell, event\"\n          }, {\n            column1: \"row-click\",\n            column2: \"tableDemo.samples10.row8column2\",\n            column3: \"row, event, column\"\n          }, {\n            column1: \"row-contextmenu\",\n            column2: \"tableDemo.samples10.row9column2\",\n            column3: \"row, event\"\n          }, {\n            column1: \"row-dblclick\",\n            column2: \"tableDemo.samples10.row10column2\",\n            column3: \"row, event\"\n          }, {\n            column1: \"header-click\",\n            column2: \"tableDemo.samples10.row11column2\",\n            column3: \"column, event\"\n          }, {\n            column1: \"header-dragend\",\n            column2: \"tableDemo.samples10.row12column2\",\n            column3: \"newWidth, oldWidth, column, event\"\n          }, {\n            column1: \"sort-change\",\n            column2: \"tableDemo.samples10.row13column2\",\n            column3: \"{column, prop, order}\"\n          }, {\n            column1: \"filter-change\",\n            column2: \"tableDemo.samples10.row14column2\",\n            column3: \"filters\"\n          }, {\n            column1: \"current-change\",\n            column2: \"tableDemo.samples10.row15column2\",\n            column3: \"currentRow, oldCurrentRow\"\n          }, {\n            column1: \"expand\",\n            column2: \"tableDemo.samples10.row16column2\",\n            column3: \"row, expanded\"\n          }, {\n            column1: \"scroll-top\",\n            column2: \"tableDemo.samples10.row17column2\",\n            column3: \"\"\n          }, {\n            column1: \"scroll-bottom\",\n            column2: \"tableDemo.samples10.row18column2\",\n            column3: \"\"\n          }, {\n            column1: \"scroll-left\",\n            column2: \"tableDemo.samples10.row19column2\",\n            column3: \"\"\n          }, {\n            column1: \"scroll-right\",\n            column2: \"tableDemo.samples10.row20column2\",\n            column3: \"\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'table11',\n    label: 'Table Methods',\n    template: '<method-table :data=\"tableData\"></method-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"getSelection\",\n            column2: \"tableDemo.samples11.row11column2\",\n            column3: \"selection\"\n          }, {\n            column1: \"clearSelection\",\n            column2: \"tableDemo.samples11.row1column2\",\n            column3: \"selection\"\n          }, {\n            column1: \"toggleRowSelection\",\n            column2: \"tableDemo.samples11.row2column2\",\n            column3: \"row, selected\"\n          }, {\n            column1: \"setCurrentRow\",\n            column2: \"tableDemo.samples11.row3column2\",\n            column3: \"row\"\n          }, {\n            column1: \"getCurrentRow\",\n            column2: \"tableDemo.samples11.row8column2\",\n            column3: \"\"\n          }, {\n            column1: \"toggleContextMenu\",\n            column2: \"tableDemo.samples11.row4column2\",\n            column3: \"\"\n          }, {\n            column1: \"columnFilter\",\n            column2: \"tableDemo.samples11.row5column2\",\n            column3: \"column, value\"\n          }, {\n            column1: \"multipleColumnSort\",\n            column2: \"tableDemo.samples11.row6column2\",\n            column3: \"columnList\"\n          }, {\n            column1: \"exportCsv\",\n            column2: \"tableDemo.samples11.row7column2\",\n            column3: \"tableDemo.samples11.row7column3\"\n          }, {\n            column1: \"clearFilters\",\n            column2: \"tableDemo.samples11.row9column2\",\n            column3: \"\"\n          }, {\n            column1: \"clearSorts\",\n            column2: \"tableDemo.samples11.row10column2\",\n            column3: \"\"\n          }, {\n            column1: \"getUserSetting\",\n            column2: \"tableDemo.samples11.row12column2\",\n            column3: \"\"\n          }, {\n            column1: \"setUserSetting\",\n            column2: \"tableDemo.samples11.row13column2\",\n            column3: \"\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'table12',\n    label: 'slot-scope',\n    template: '<slot-table :data=\"tableData\"></slot-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"\",\n            column2: \"tableDemo.samples12.row1column2\"\n          }, {\n            column1: \"header\",\n            column2: \"tableDemo.samples12.row2column2\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'table13',\n    label: 'Table Column Attributes',\n    template: '<attr-table :data=\"tableData\"></attr-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"type\",\n            column2: \"tableDemo.samples13.row1column2\",\n            column3: \"String\",\n            column4: \"selection, index, expand\",\n            column5: \"\"\n          }, {\n            column1: \"label\",\n            column2: \"tableDemo.samples13.row3column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"prop\",\n            column2: \"tableDemo.samples13.row4column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"width\",\n            column2: \"tableDemo.samples13.row5column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"min-width\",\n            column2: \"tableDemo.samples13.row6column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"fixed\",\n            column2: \"tableDemo.samples13.row7column2\",\n            column3: \"Boolean / String\",\n            column4: \"true, false, 'left', 'right'\",\n            column5: \"false\"\n          }, {\n            column1: \"render-header\",\n            column2: \"tableDemo.samples13.row8column2\",\n            column3: \"Function(createElement, {column, $index})\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"sortable\",\n            column2: \"tableDemo.samples13.row9column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"sort-method\",\n            column2: \"tableDemo.samples13.row10column2\",\n            column3: \"Function(a, b)\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"resizable\",\n            column2: \"tableDemo.samples13.row11column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"true\"\n          }, {\n            column1: \"formatter\",\n            column2: \"tableDemo.samples13.row12column2\",\n            column3: \"Function(row, column, cellValue)\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"show-overflow-tooltip\",\n            column2: \"tableDemo.samples13.row13column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"align\",\n            column2: \"tableDemo.samples13.row14column2\",\n            column3: \"String\",\n            column4: \"left, center, right\",\n            column5: \"left\"\n          }, {\n            column1: \"header-align\",\n            column2: \"tableDemo.samples13.row15column2\",\n            column3: \"String\",\n            column4: \"left, center, right\",\n            column5: \"center\"\n          }, {\n            column1: \"class-name\",\n            column2: \"tableDemo.samples13.row16column2\",\n            column3: \"String / Function(rowIndex, cellIndex, row)\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"label-class-name\",\n            column2: \"tableDemo.samples13.row17column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"selectable\",\n            column2: \"tableDemo.samples13.row18column2\",\n            column3: \"Function(row, index)\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"filterable\",\n            column2: \"tableDemo.samples13.row19column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          },{\n            column1: \"filters\",\n            column2: \"tableDemo.samples13.row20column2\",\n            column3: \"Array\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"filter-method\",\n            column2: \"tableDemo.samples13.row22column2\",\n            column3: \"Function(value, row)\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"visible\",\n            column2: \"tableDemo.samples13.row23column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"true\"\n          }, {\n            column1: \"aggregate\",\n            column2: \"tableDemo.samples13.row24column2\",\n            column3: \"String\",\n            column4: \"sum, count, average, min, max\",\n            column5: \"\"\n          }, {\n            column1: \"aggregate-label\",\n            column2: \"tableDemo.samples13.row25column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"print-label\",\n            column2: \"tableDemo.samples13.row26column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"label-colspan\",\n            column2: \"tableDemo.samples13.row27column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"rowspan\",\n            column2: \"tableDemo.samples13.row28column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }]\n};\nmodule.exports = tableDemo;\n","'use strict';\nvar tabsDemo = {\n  path: '/tabs',\n  name: 'tabs',\n  head: {\n    label: 'tabsDemo.label',\n    description: 'tabsDemo.description'\n  },\n  samples: [{\n    id: 'tabs1',\n    label: 'tabsDemo.samples1.label',\n    description: 'tabsDemo.samples1.description',\n    template: '<div class=\"source\"><vue-tabs v-model=\"activeName\" @tab-click=\"handleClick\"><vue-tab-pane label=\"User\" name=\"first\">User</vue-tab-pane><vue-tab-pane label=\"Config\" name=\"second\">Config</vue-tab-pane><vue-tab-pane label=\"Role\" name=\"third\">Role</vue-tab-pane><vue-tab-pane label=\"Task\" name=\"fourth\">Task</vue-tab-pane></vue-tabs></div>',\n    parameter: {\n      data: function () {\n        return {\n          activeName: \"second\"\n        }\n      },\n      methods: {\n        handleClick: function (tab, event) {\n          this.$notify({\n            title: tab.name,\n            message: event.target.innerText\n          })\n        }\n      }\n    },\n    code: '<vue-tabs v-model=\"activeName\" @tab-click=\"handleClick\">\\n' +\n      '  <vue-tab-pane label=\"User\" name=\"first\">User</vue-tab-pane>\\n' +\n      '  <vue-tab-pane label=\"Config\" name=\"second\">Config</vue-tab-pane>\\n' +\n      '  <vue-tab-pane label=\"Role\" name=\"third\">Role</vue-tab-pane>\\n' +\n      '  <vue-tab-pane label=\"Task\" name=\"fourth\">Task</vue-tab-pane>\\n' +\n      '</vue-tabs>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function() {\\n' +\n      '      return {\\n' +\n      '        activeName: \"second\"\\n' +\n      '      }\\n' +\n      '    },\\n' +\n      '    methods: {\\n' +\n      '      handleClick: function(tab, event) {\\n' +\n      '        this.$notify({\\n' +\n      '          title: tab.name,\\n' +\n      '          message: event.target.innerText\\n' +\n      '        })\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'tabs2',\n    label: 'tabsDemo.samples2.label',\n    description: 'tabsDemo.samples2.description',\n    template: '<div class=\"source\"><vue-tabs type=\"card\"><vue-tab-pane label=\"User\">User</vue-tab-pane><vue-tab-pane label=\"Config\">Config</vue-tab-pane><vue-tab-pane label=\"Role\">Role</vue-tab-pane><vue-tab-pane label=\"Task\">Task</vue-tab-pane></vue-tabs></div>',\n    code: '<vue-tabs type=\"card\">\\n' +\n      '  <vue-tab-pane label=\"User\">User</vue-tab-pane>\\n' +\n      '  <vue-tab-pane label=\"Config\">Config</vue-tab-pane>\\n' +\n      '  <vue-tab-pane label=\"Role\">Role</vue-tab-pane>\\n' +\n      '  <vue-tab-pane label=\"Task\">Task</vue-tab-pane>\\n' +\n      '</vue-tabs>'\n  }, {\n    id: 'tabs3',\n    label: 'tabsDemo.samples3.label',\n    description: 'tabsDemo.samples3.description',\n    template: '<div class=\"source\"><vue-tabs type=\"border-card\"><vue-tab-pane label=\"User\">User</vue-tab-pane><vue-tab-pane label=\"Config\">Config</vue-tab-pane><vue-tab-pane label=\"Role\">Role</vue-tab-pane><vue-tab-pane label=\"Task\">Task</vue-tab-pane></vue-tabs></div>',\n    code: '<vue-tabs type=\"border-card\">\\n' +\n      '  <vue-tab-pane label=\"User\">User</vue-tab-pane>\\n' +\n      '  <vue-tab-pane label=\"Config\">Config</vue-tab-pane>\\n' +\n      '  <vue-tab-pane label=\"Role\">Role</vue-tab-pane>\\n' +\n      '  <vue-tab-pane label=\"Task\">Task</vue-tab-pane>\\n' +\n      '</vue-tabs>'\n  }, {\n    id: 'tabs4',\n    label: 'tabsDemo.samples4.label',\n    description: 'tabsDemo.samples4.description',\n    template: '<div class=\"source\"><vue-tabs><vue-tab-pane><span slot=\"label\">User<i style=\"margin-left:5px;\" class=\"vue-icon-information\"></i></span>User</vue-tab-pane><vue-tab-pane label=\"Config\">Config</vue-tab-pane><vue-tab-pane label=\"Role\">Role</vue-tab-pane><vue-tab-pane label=\"Task\">Task</vue-tab-pane></vue-tabs></div>',\n    code: '<vue-tabs>\\n' +\n      '  <vue-tab-pane>\\n' +\n      '    <span slot=\"label\">\\n' +\n      '      User\\n' +\n      '      <i style=\"margin-left:5px;\" class=\"vue-icon-information\"></i>\\n' +\n      '    </span>\\n' +\n      '    User\\n' +\n      '  </vue-tab-pane>\\n' +\n      '  <vue-tab-pane label=\"Config\">Config</vue-tab-pane>\\n' +\n      '  <vue-tab-pane label=\"Role\">Role</vue-tab-pane>\\n' +\n      '  <vue-tab-pane label=\"Task\">Task</vue-tab-pane>\\n' +\n      '</vue-tabs>'\n  }, {\n    id: 'tabs5',\n    label: 'tabsDemo.samples5.label',\n    template: '<div class=\"source\"><vue-tabs v-model=\"editableTabsValue\" type=\"card\" editable @edit=\"handleTabsEdit\"><vue-tab-pane v-for=\"(item, index) in editableTabs\" :key=\"item.name\" :label=\"item.title\" :name=\"item.name\">{{item.content}}</vue-tab-pane></vue-tabs></div>',\n    parameter: {\n      data: function () {\n        return {\n          editableTabsValue: '2',\n          editableTabs: [{\n            title: 'Tab 1',\n            name: '1',\n            content: 'Tab 1 content'\n          }, {\n            title: 'Tab 2',\n            name: '2',\n            content: 'Tab 2 content'\n          }],\n          tabIndex: 2\n        }\n      },\n      methods: {\n        handleTabsEdit: function (targetName, action) {\n          if (action === 'add') {\n            var newTabName = ++this.tabIndex + '';\n            this.editableTabs.push({\n              title: 'Tab ' + newTabName,\n              name: newTabName,\n              content: 'Tab ' + newTabName + ' content'\n            });\n            this.editableTabsValue = newTabName;\n          }\n          if (action === 'remove') {\n            var tabs = this.editableTabs;\n            var activeName = this.editableTabsValue;\n            if (activeName === targetName) {\n              tabs.forEach(function (tab, index) {\n                if (tab.name === targetName) {\n                  var nextTab = tabs[index + 1] || tabs[index - 1];\n                  if (nextTab) {\n                    activeName = nextTab.name;\n                  }\n                }\n              });\n            }\n            this.editableTabsValue = activeName;\n            this.editableTabs = tabs.filter(function (tab) {\n              return tab.name !== targetName\n            });\n          }\n        }\n      }\n    },\n    code: '<vue-tabs v-model=\"editableTabsValue\" type=\"card\" editable @edit=\"handleTabsEdit\">\\n' +\n      '  <vue-tab-pane v-for=\"(item, index) in editableTabs\" :key=\"index\" :label=\"item.title\" :name=\"item.name\">\\n' +\n      '    {{item.content}}\\n' +\n      '  </vue-tab-pane>\\n' +\n      '</vue-tabs>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '     data: function() {\\n' +\n      '       return {\\n' +\n      '         editableTabsValue: \"2\",\\n' +\n      '         editableTabs: [{\\n' +\n      '           title: \"Tab 1\",\\n' +\n      '           name: \"1\",\\n' +\n      '           content: \"Tab 1 content\"\\n' +\n      '         }, {\\n' +\n      '           title: \"Tab 2\",\\n' +\n      '           name: \"2\",\\n' +\n      '           content: \"Tab 2 content\"\\n' +\n      '         }],\\n' +\n      '         tabIndex: 2\\n' +\n      '       }\\n' +\n      '     },\\n' +\n      '     methods: {\\n' +\n      '       handleTabsEdit: function(targetName, action) {\\n' +\n      '         if (action === \"add\") {\\n' +\n      '           var newTabName = ++this.tabIndex + \"\";\\n' +\n      '           this.editableTabs.push({\\n' +\n      '             title: \"Tab \" + newTabName,\\n' +\n      '             name: newTabName,\\n' +\n      '             content: \"Tab \" + newTabName + \" content\"\\n' +\n      '           });\\n' +\n      '           this.editableTabsValue = newTabName;\\n' +\n      '         }\\n' +\n      '         if (action === \"remove\") {\\n' +\n      '           var tabs = this.editableTabs;\\n' +\n      '           var activeName = this.editableTabsValue;\\n' +\n      '           if (activeName === targetName) {\\n' +\n      '             tabs.forEach(function(tab, index) {\\n' +\n      '               if (tab.name === targetName) {\\n' +\n      '                 var nextTab = tabs[index + 1] || tabs[index - 1];\\n' +\n      '                 if (nextTab) {\\n' +\n      '                   activeName = nextTab.name;\\n' +\n      '                 }\\n' +\n      '               }\\n' +\n      '             });\\n' +\n      '           }\\n' +\n      '           this.editableTabsValue = activeName;\\n' +\n      '           this.editableTabs = tabs.filter(function(tab) {\\n' +\n      '             return tab.name !== targetName\\n' +\n      '           });\\n' +\n      '         }\\n' +\n      '       }\\n' +\n      '     }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'tabs6',\n    label: 'tabsDemo.samples6.label',\n    template: '<div class=\"source\"><div style=\"margin-bottom: 20px;\"><vue-button size=\"small\" @click=\"addTab(editableTabsValue)\">add tab</vue-button></div><vue-tabs v-model=\"editableTabsValue\" type=\"card\" closable @tab-remove=\"removeTab\"><vue-tab-pane v-for=\"(item, index) in editableTabs\" :key=\"item.name\" :label=\"item.title\" :name=\"item.name\">{{item.content}}</vue-tab-pane></vue-tabs></div>',\n    parameter: {\n      data: function () {\n        return {\n          editableTabsValue: '2',\n          editableTabs: [{\n            title: 'Tab 1',\n            name: '1',\n            content: 'Tab 1 content'\n          }, {\n            title: 'Tab 2',\n            name: '2',\n            content: 'Tab 2 content'\n          }],\n          tabIndex: 2\n        }\n      },\n      methods: {\n        addTab: function () {\n          var newTabName = ++this.tabIndex + '';\n          this.editableTabs.push({\n            title: 'Tab ' + newTabName,\n            name: newTabName,\n            content: 'Tab ' + newTabName + ' content'\n          });\n          this.editableTabsValue = newTabName;\n        },\n        removeTab: function (targetName) {\n          var tabs = this.editableTabs;\n          var activeName = this.editableTabsValue;\n          if (activeName === targetName) {\n            tabs.forEach(function (tab, index) {\n              if (tab.name === targetName) {\n                var nextTab = tabs[index + 1] || tabs[index - 1];\n                if (nextTab) {\n                  activeName = nextTab.name;\n                }\n              }\n            });\n          }\n          this.editableTabsValue = activeName;\n          this.editableTabs = tabs.filter(function (tab) {\n            return tab.name !== targetName\n          });\n        }\n      }\n    },\n    code: '<div style=\"margin-bottom: 20px;\">\\n' +\n      '  <vue-button size=\"small\" @click=\"addTab(editableTabsValue)\">add tab</vue-button>\\n' +\n      '</div>\\n' +\n      '<vue-tabs v-model=\"editableTabsValue\" type=\"card\" closable @tab-remove=\"removeTab\">\\n' +\n      '  <vue-tab-pane v-for=\"(item, index) in editableTabs\" :key=\"index\" :label=\"item.title\" :name=\"item.name\">\\n' +\n      '    {{item.content}}\\n' +\n      '  </vue-tab-pane>\\n' +\n      '</vue-tabs>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function() {\\n' +\n      '      return {\\n' +\n      '        editableTabsValue: \"2\",\\n' +\n      '        editableTabs: [{\\n' +\n      '          title: \"Tab 1\",\\n' +\n      '          name: \"1\",\\n' +\n      '          content: \"Tab 1 content\"\\n' +\n      '        }, {\\n' +\n      '          title: \"Tab 2\",\\n' +\n      '          name: \"2\",\\n' +\n      '          content: \"Tab 2 content\"\\n' +\n      '        }],\\n' +\n      '        tabIndex: 2\\n' +\n      '      }\\n' +\n      '    },\\n' +\n      '    methods: {\\n' +\n      '      addTab: function() {\\n' +\n      '        var newTabName = ++this.tabIndex + \"\";\\n' +\n      '        this.editableTabs.push({\\n' +\n      '          title: \"Tab \" + newTabName,\\n' +\n      '          name: newTabName,\\n' +\n      '          content: \"Tab \" + newTabName + \" content\"\\n' +\n      '        });\\n' +\n      '        this.editableTabsValue = newTabName;\\n' +\n      '      },\\n' +\n      '      removeTab: function(targetName) {\\n' +\n      '        var tabs = this.editableTabs;\\n' +\n      '        var activeName = this.editableTabsValue;\\n' +\n      '        if (activeName === targetName) {\\n' +\n      '          tabs.forEach(function(tab, index) {\\n' +\n      '            if (tab.name === targetName) {\\n' +\n      '              var nextTab = tabs[index + 1] || tabs[index - 1];\\n' +\n      '              if (nextTab) {\\n' +\n      '                activeName = nextTab.name;\\n' +\n      '              }\\n' +\n      '            }\\n' +\n      '          });\\n' +\n      '        }\\n' +\n      '        this.editableTabsValue = activeName;\\n' +\n      '        this.editableTabs = tabs.filter(function(tab) {\\n' +\n      '          return tab.name !== targetName\\n' +\n      '        });\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'tabs10',\n    label: 'tabsDemo.samples10.label',\n    description: 'tabsDemo.samples10.description',\n    template: '<div class=\"source\"><vue-tabs type=\"border-card\" tab-bottom><vue-tab-pane label=\"User\">User</vue-tab-pane><vue-tab-pane label=\"Config\">Config</vue-tab-pane><vue-tab-pane label=\"Role\">Role</vue-tab-pane><vue-tab-pane label=\"Task\">Task</vue-tab-pane></vue-tabs></div>',\n    code: '<vue-tabs type=\"border-card\" tab-bottom>\\n' +\n      '  <vue-tab-pane label=\"User\">User</vue-tab-pane>\\n' +\n      '  <vue-tab-pane label=\"Config\">Config</vue-tab-pane>\\n' +\n      '  <vue-tab-pane label=\"Role\">Role</vue-tab-pane>\\n' +\n      '  <vue-tab-pane label=\"Task\">Task</vue-tab-pane>\\n' +\n      '</vue-tabs>'\n  }, {\n    id: 'tabs7',\n    label: 'Tabs Attributes',\n    template: '<attr-table class=\"api\" :data=\"tableData\"></attr-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"type\",\n            column2: \"tabsDemo.samples7.row1column2\",\n            column3: \"String\",\n            column4: \"card/border-card\",\n            column5: \"\"\n          }, {\n            column1: \"closable\",\n            column2: \"tabsDemo.samples7.row2column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"addable\",\n            column2: \"tabsDemo.samples7.row3column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"editable\",\n            column2: \"tabsDemo.samples7.row4column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"tab-bottom\",\n            column2: \"tabsDemo.samples7.row6column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"value(v-model)\",\n            column2: \"tabsDemo.samples7.row5column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"tabsDemo.samples7.row5column5\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'tabs8',\n    label: 'Tabs Events',\n    template: '<event-table :data=\"tableData\"></event-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"tab-click\",\n            column2: \"tabsDemo.samples8.row1column2\",\n            column3: \"tabsDemo.samples8.row1column3\"\n          }, {\n            column1: \"tab-remove\",\n            column2: \"tabsDemo.samples8.row2column2\",\n            column3: \"tabsDemo.samples8.row2column3\"\n          }, {\n            column1: \"tab-add\",\n            column2: \"tabsDemo.samples8.row3column2\",\n            column3: \"\"\n          }, {\n            column1: \"edit\",\n            column2: \"tabsDemo.samples8.row4column2\",\n            column3: \"tabsDemo.samples8.row4column3\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'tabs9',\n    label: 'Tab-pane Attributes',\n    template: '<attr-table :data=\"tableData\"></attr-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"label\",\n            column2: \"tabsDemo.samples9.row1column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"disabled\",\n            column2: \"tabsDemo.samples9.row2column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"name\",\n            column2: \"tabsDemo.samples9.row3column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"closable\",\n            column2: \"tabsDemo.samples9.row4column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }]\n};\nmodule.exports = tabsDemo;\n","'use strict';\nvar tagDemo = {\n  path: '/tag',\n  name: 'tag',\n  head: {\n    label: 'tagDemo.label',\n    description: 'tagDemo.description'\n  },\n  samples: [{\n    id: 'tag1',\n    label: 'tagDemo.samples1.label',\n    description: 'tagDemo.samples1.description',\n    template: '<div class=\"source\"><vue-tag style=\"margin-right:10px;\" :width=\"tag.width\" v-for=\"(tag, index) in tags\" :key=\"index\" :closable=\"tag.closable\" :type=\"tag.type\" :hit=\"tag.hit\" @close=\"closeHandle(tag)\">{{tag.name}}</vue-tag></div>',\n    parameter: {\n      data: function () {\n        return {\n          tags: [{\n            name: \"Tag one\",\n            type: \"\",\n            closable: false,\n            hit: false\n          }, {\n            name: \"Tag two\",\n            type: \"success\",\n            closable: true,\n            hit: true\n          }, {\n            name: \"Tag three\",\n            type: \"info\",\n            closable: false,\n            hit: true,\n            width: 40\n          }, {\n            name: \"Tag four\",\n            type: \"warning\",\n            closable: true,\n            hit: false,\n            width: 40\n          }, {\n            name: \"Tag five\",\n            type: \"danger\",\n            closable: true,\n            hit: false\n          }]\n        };\n      },\n      methods: {\n        closeHandle: function (tag) {\n          this.tags.splice(this.tags.indexOf(tag), 1);\n        }\n      }\n    },\n    code: '<vue-tag style=\"margin-right:10px;\" v-for=\"(tag, index) in tags\" :width=\"tag.width\" :closable=\"tag.closable\" :type=\"tag.type\" :hit=\"tag.hit\" @close=\"closeHandle(tag)\" :key=\"index\">\\n' +\n      '  {{tag.name}}\\n' +\n      '</vue-tag>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function(){\\n' +\n      '      return {\\n' +\n      '        tags: [\\n' +\n      '          { name: \"Tag one\", type: \"\" , closable: false, hit: false},\\n' +\n      '          { name: \"Tag two\", type: \"success\", closable: true, hit: true },\\n' +\n      '          { name: \"Tag three\", type: \"info\", closable: false, hit: true, width: 40 },\\n' +\n      '          { name: \"Tag four\", type: \"warning\", closable: true, hit: false, width: 40 },\\n' +\n      '          { name: \"Tag five\", type: \"danger\", closable: true, hit: false }\\n' +\n      '        ]\\n' +\n      '      }\\n' +\n      '    },\\n' +\n      '    methods: {\\n' +\n      '      closeHandle: function(tag) {\\n' +\n      '        this.tags.splice(this.tags.indexOf(tag), 1);\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'tag2',\n    label: 'tagDemo.samples2.label',\n    template: '<div class=\"source\"><div style=\"float: left;margin-top: 2px;\" :key=\"index\" v-for=\"(tag,index) in dynamicTags\"><vue-tag style=\"margin-right:10px;\" :closable=\"true\" :close-hit=\"false\" @close=\"handleClose(tag)\" hit>{{tag}}</vue-tag></div><vue-input style=\"margin-top:10px;\" v-if=\"inputVisible\" v-model=\"inputValue\" ref=\"saveTagInput\" size=\"small\" @keyup.enter.native=\"handleInputConfirm\" @blur=\"handleInputConfirm\"></vue-input><vue-button v-else size=\"small\" @click=\"showInput\">+ New Tag</vue-button></div>',\n    parameter: {\n      data: function () {\n        return {\n          dynamicTags: [\"Tag one\", \"Tag two\", \"Tag three\"],\n          inputVisible: false,\n          inputValue: \"\"\n        };\n      },\n      methods: {\n        handleClose: function (tag) {\n          this.dynamicTags.splice(this.dynamicTags.indexOf(tag), 1);\n        },\n        showInput: function () {\n          var self = this;\n          self.inputVisible = true;\n          self.$nextTick(function () {\n            self.$refs.saveTagInput.$refs.input.focus();\n          });\n        },\n        handleInputConfirm: function () {\n          var inputValue = this.inputValue;\n          if (inputValue) {\n            this.dynamicTags.push(inputValue);\n          }\n          this.inputVisible = false;\n          this.inputValue = \"\";\n        }\n      }\n    },\n    code: '<vue-tag style=\"margin-right:10px;\" :key=\"index\" v-for=\"(tag,index) in dynamicTags\" :closable=\"true\" :close-hit=\"false\" @close=\"handleClose(tag)\" hit>\\n' +\n      '  {{tag}}\\n' +\n      '</vue-tag>\\n' +\n      '<vue-input style=\"margin-top:10px;\" v-if=\"inputVisible\" v-model=\"inputValue\" ref=\"saveTagInput\" @keyup.enter.native=\"handleInputConfirm\" @blur=\"handleInputConfirm\">\\n' +\n      '</vue-input>\\n' +\n      '<vue-button v-else size=\"small\" @click=\"showInput\">+ New Tag</vue-button>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function() {\\n' +\n      '      return {\\n' +\n      '        dynamicTags: [\"Tag one\", \"Tag two\", \"Tag three\"],\\n' +\n      '        inputVisible: false,\\n' +\n      '        inputValue: \"\"\\n' +\n      '      };\\n' +\n      '    },\\n' +\n      '    methods: {\\n' +\n      '      handleClose: function(tag) {\\n' +\n      '        this.dynamicTags.splice(this.dynamicTags.indexOf(tag), 1);\\n' +\n      '      },\\n' +\n      '      showInput: function() {\\n' +\n      '        var self = this;\\n' +\n      '        self.inputVisible = true;\\n' +\n      '        self.$nextTick(function() {\\n' +\n      '          self.$refs.saveTagInput.$refs.input.focus();\\n' +\n      '        });\\n' +\n      '      },\\n' +\n      '      handleInputConfirm: function() {\\n' +\n      '        var inputValue = this.inputValue;\\n' +\n      '        if (inputValue) {\\n' +\n      '          this.dynamicTags.push(inputValue);\\n' +\n      '        }\\n' +\n      '        this.inputVisible = false;\\n' +\n      '        this.inputValue = \"\";\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'tag3',\n    label: 'Attributes',\n    template: '<attr-table :data=\"tableData\"></attr-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"type\",\n            column2: \"tagDemo.samples3.row1column2\",\n            column3: \"String\",\n            column4: \"success, info, warning, danger\",\n            column5: \"\"\n          }, {\n            column1: \"closable\",\n            column2: \"tagDemo.samples3.row2column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"hit\",\n            column2: \"tagDemo.samples3.row4column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"width\",\n            column2: \"tagDemo.samples3.row5column2\",\n            column3: \"Number\",\n            column4: \"\",\n            column5: \"\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'tag4',\n    label: 'Events',\n    template: '<event-table :data=\"tableData\"></event-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"close\",\n            column2: \"tagDemo.samples4.row1column2\",\n            column3: \"\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }]\n};\nmodule.exports = tagDemo;","'use strict';\nvar timeDemo = {\n  path: '/time',\n  name: 'time',\n  head: {\n    label: 'timeDemo.label',\n    description: 'timeDemo.description'\n  },\n  samples: [{\n    id: 'time1',\n    label: 'timeDemo.samples1.label',\n    description: 'timeDemo.samples1.description',\n    template: '<div class=\"source\"><vue-row class=\"margin-bottom20\" type=\"flex\" justify=\"center\"><vue-col :span=\"6\"><span class=\"demonstration\">{{$t(\\'timeDemo.samples1.timelabel1\\')}}</span></vue-col><vue-col :span=\"16\"><vue-time-select v-model=\"value1\" :picker-options=\"{ start: \\'08:30\\', step: \\'00:15\\', end: \\'18:30\\'}\" :placeholder=\"$t(\\'timeDemo.samples1.timePlaceholder1\\')\"></vue-time-select></vue-col></vue-row><vue-row type=\"flex\" justify=\"center\"><vue-col :span=\"6\"><span class=\"demonstration\">{{$t(\\'timeDemo.samples1.timelabel2\\')}}</span></vue-col><vue-col :span=\"16\"><vue-time-picker v-model=\"value2\" :picker-options=\"{selectableRange: \\'18:30:00 - 20:30:00\\'}\" :placeholder=\"$t(\\'timeDemo.samples1.timePlaceholder2\\')\"></vue-time-picker></vue-col></vue-row></div>',\n    parameter: {\n      data: function () {\n        return {\n          value1: '',\n          value2: new Date(2000, 10, 10, 19, 40, 33)\n        };\n      }\n    },\n    code: '<span class=\"demonstration\">{{$t(\\'timeDemo.samples1.timelabel1\\')}}</span>\\n' +\n      '<vue-time-select v-model=\"value1\" :picker-options=\"{ start: \\'08:30\\', step: \\'00:15\\', end: \\'18:30\\'}\" :placeholder=\"$t(\\'timeDemo.samples1.timePlaceholder1\\')\"></vue-time-select>\\n' +\n      '<span class=\"demonstration\">{{$t(\\'timeDemo.samples1.timelabel2\\')}}</span>\\n' +\n      '<vue-time-picker v-model=\"value2\" :picker-options=\"{selectableRange: \\'18:30:00 - 20:30:00\\'}\" :placeholder=\"$t(\\'timeDemo.samples1.timePlaceholder2\\')\"></vue-time-picker>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function(){\\n' +\n      '      return {\\n' +\n      '        value1: \"\",\\n' +\n      '        value2: new Date(2000,10,10,19,40,33)\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'time2',\n    label: 'timeDemo.samples2.label',\n    description: 'timeDemo.samples2.description',\n    template: '<div class=\"source\"><vue-row class=\"margin-bottom20\" type=\"flex\" justify=\"center\"><vue-col :span=\"6\"><span class=\"demonstration\">{{$t(\\'timeDemo.samples2.timelabel1\\')}}</span></vue-col><vue-col :span=\"16\"><vue-time-select style=\"width:50%\" :placeholder=\"$t(\\'timeDemo.samples2.timePlaceholder1\\')\" v-model=\"startTime\" :picker-options=\"{ start: \\'08:30\\', step: \\'00:15\\', end: \\'18:30\\'}\"></vue-time-select><vue-time-select style=\"width:50%\" :placeholder=\"$t(\\'timeDemo.samples2.timePlaceholder2\\')\" v-model=\"endTime\" :picker-options=\"{start: \\'08:30\\', step: \\'00:15\\', end: \\'18:30\\', minTime: startTime}\"></vue-time-select></vue-col></vue-row><vue-row type=\"flex\" justify=\"center\"><vue-col :span=\"6\"><span class=\"demonstration\">{{$t(\\'timeDemo.samples2.timelabel2\\')}}</span></vue-col><vue-col :span=\"16\"><vue-time-picker is-range v-model=\"time\" :placeholder=\"$t(\\'timeDemo.samples2.timePlaceholder3\\')\"></vue-time-picker></vue-col></vue-row></div>',\n    parameter: {\n      data: function () {\n        return {\n          startTime: '',\n          endTime: '',\n          time: [new Date, VueUtil.toDate((new Date).getTime() + 3 * 60 * 1000)]\n        };\n      }\n    },\n    code: '<span class=\"demonstration\">{{$t(\\'timeDemo.samples2.timelabel1\\')}}</span>\\n' +\n      '<vue-time-select style=\"width:50%\" :placeholder=\"$t(\\'timeDemo.samples2.timePlaceholder1\\')\" v-model=\"startTime\" :picker-options=\"{ start: \\'08:30\\', step: \\'00:15\\', end: \\'18:30\\'}\"></vue-time-select>\\n' +\n      '<vue-time-select style=\"width:50%\" :placeholder=\"$t(\\'timeDemo.samples2.timePlaceholder2\\')\" v-model=\"endTime\" :picker-options=\"{start: \\'08:30\\', step: \\'00:15\\', end: \\'18:30\\', minTime: startTime}\"></vue-time-select>\\n' +\n      '<span class=\"demonstration\">{{$t(\\'timeDemo.samples2.timelabel2\\')}}</span>\\n' +\n      '<vue-time-picker is-range v-model=\"time\" :placeholder=\"$t(\\'timeDemo.samples2.timePlaceholder3\\')\"></vue-time-picker>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function(){\\n' +\n      '      return {\\n' +\n      '        startTime: \"\",\\n' +\n      '        endTime: \"\",\\n' +\n      '        time: [new Date, VueUtil.toDate((new Date).getTime() + 3 * 60 * 1000)]\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'time3',\n    label: 'Attributes',\n    template: '<attr-table :data=\"tableData\"></attr-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"readonly\",\n            column2: \"timeDemo.samples3.row1column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"true\"\n          }, {\n            column1: \"disabled\",\n            column2: \"timeDemo.samples3.row2column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          },{\n            column1: \"editable\",\n            column2: \"timeDemo.samples3.row21column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"true\"\n          }, {\n            column1: \"clearable\",\n            column2: \"timeDemo.samples3.row3column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"true\"\n          }, {\n            column1: \"size\",\n            column2: \"timeDemo.samples3.row4column2\",\n            column3: \"String\",\n            column4: \"large, small, mini\",\n            column5: \"\"\n          }, {\n            column1: \"placeholder\",\n            column2: \"timeDemo.samples3.row5column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"start-placeholder\",\n            column2: \"timeDemo.samples3.row51column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"end-placeholder\",\n            column2: \"timeDemo.samples3.row52column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"is-range\",\n            column2: \"timeDemo.samples3.row53column2\",\n            column3: \"boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"arrow-control\",\n            column2: \"timeDemo.samples3.row54column2\",\n            column3: \"boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"range-separator\",\n            column2: \"timeDemo.samples3.row55column2\",\n            column3: \"string\",\n            column4: \"\",\n            column5: \"-\"\n          }, {\n            column1: \"value-format\",\n            column2: \"timeDemo.samples3.row56column2\",\n            column3: \"string\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"align\",\n            column2: \"timeDemo.samples3.row6column2\",\n            column3: \"String\",\n            column4: \"left, center, right\",\n            column5: \"left\"\n          }, {\n            column1: \"popper-class\",\n            column2: \"timeDemo.samples3.row7column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"picker-options\",\n            column2: \"timeDemo.samples3.row8column2\",\n            column3: \"Object\",\n            column4: \"\",\n            column5: \"{}\"\n          }, {\n            column1: \"autofocus\",\n            column2: \"timeDemo.samples3.row9column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"show-mobile-ui\",\n            column2: \"dateDemo.samples8.row1column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"true\"\n          }, {\n            column1: \"value\",\n            column2: \"dateDemo.samples8.row2column2\",\n            column3: \"Date | String | Number | Array\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"text-align\",\n            column2: \"dateDemo.samples8.row3column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"min-hour\",\n            column2: \"timeDemo.samples3.row10column2\",\n            column3: \"Number | String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"max-hour\",\n            column2: \"timeDemo.samples3.row11column2\",\n            column3: \"Number | String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"min-minute\",\n            column2: \"timeDemo.samples3.row12column2\",\n            column3: \"Number | String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"max-minute\",\n            column2: \"timeDemo.samples3.row13column2\",\n            column3: \"Number | String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"min-second\",\n            column2: \"timeDemo.samples3.row14column2\",\n            column3: \"Number | String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"max-second\",\n            column2: \"timeDemo.samples3.row15column2\",\n            column3: \"Number | String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"prefix-icon\",\n            column2: \"dateDemo.samples8.row5column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"clear-icon\",\n            column2: \"dateDemo.samples8.row5column3\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"vue-icon-close\"\n          }, {\n            column1: \"title\",\n            column2: \"dateDemo.samples8.row8column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"start-title\",\n            column2: \"dateDemo.samples8.row9column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"end-title\",\n            column2: \"dateDemo.samples8.row9column3\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"confirm-button-text\",\n            column2: \"dateDemo.samples8.row10column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"cancel-button-text\",\n            column2: \"dateDemo.samples8.row10column3\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"item-height\",\n            column2: \"dateDemo.samples8.row12column2\",\n            column3: \"String | Number\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"visible-item-count\",\n            column2: \"dateDemo.samples8.row13column2\",\n            column3: \"Number\",\n            column4: \"\",\n            column5: \"5\"\n          }, {\n            column1: \"swipe-duration\",\n            column2: \"dateDemo.samples8.row14column2\",\n            column3: \"String | Number\",\n            column4: \"\",\n            column5: \"1000\"\n          }, {\n            column1: \"formatter\",\n            column2: \"dateDemo.samples8.row15column2\",\n            column3: \"Function\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"filter\",\n            column2: \"dateDemo.samples8.row16column2\",\n            column3: \"Function\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"default-pick\",\n            column2: \"dateDemo.samples8.row17column2\",\n            column3: \"Date | String | Number | Array\",\n            column4: \"\",\n            column5: \"\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'time4',\n    label: 'vue-time-select Picker Options',\n    template: '<attr-table :data=\"tableData\"></attr-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"start\",\n            column2: \"timeDemo.samples4.row1column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"09:00\"\n          }, {\n            column1: \"end\",\n            column2: \"timeDemo.samples4.row2column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"18:00\"\n          }, {\n            column1: \"step\",\n            column2: \"timeDemo.samples4.row3column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"00:30\"\n          }, {\n            column1: \"minTime\",\n            column2: \"timeDemo.samples4.row4column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"00:00\"\n          }, {\n            column1: \"maxTime\",\n            column2: \"timeDemo.samples4.row5column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'time5',\n    label: 'vue-time-picker Picker Options',\n    template: '<attr-table :data=\"tableData\"></attr-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"selectableRange\",\n            column2: \"timeDemo.samples5.row1column2\",\n            column3: \"String / Array\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"format\",\n            column2: \"timeDemo.samples5.row2column2\",\n            column3: \"String\",\n            column4: \"timeDemo.samples5.row2column4\",\n            column5: \"'HH:mm:ss'\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'time6',\n    label: 'Events',\n    template: '<event-table :data=\"tableData\"></event-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"change\",\n            column2: \"timeDemo.samples6.row1column2\",\n            column3: \"timeDemo.samples6.row1column3\"\n          },\n          {\n            column1: \"confirm\",\n            column2: \"dateDemo.samples8.row16column2\",\n            column3: \"dateDemo.samples8.row16column3\"\n          },\n          {\n            column1: \"cancel\",\n            column2: \"dateDemo.samples8.row17column2\",\n            column3: \"dateDemo.samples8.row16column3\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'time7',\n    label: 'Methods',\n    template: '<method-table :data=\"tableData\"></method-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"focus\",\n            column2: \"inputDemo.samples16.row1column2\",\n            column3: \"\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }]\n};\nmodule.exports = timeDemo;\n","'use strict';\nvar tooltipDemo = {\n  path: '/tooltip',\n  name: 'tooltip',\n  head: {\n    label: 'tooltipDemo.label',\n    description: 'tooltipDemo.description'\n  },\n  samples: [{\n    id: 'tooltip1',\n    label: 'tooltipDemo.samples1.label',\n    description: 'tooltipDemo.samples1.description',\n    template: '<div class=\"source\"><div class=\"box\"><div class=\"top\"><vue-tooltip class=\"item\" effect=\"dark\" content=\"top start prompts message\" placement=\"top-start\"><vue-button>Top Start</vue-button></vue-tooltip><vue-tooltip class=\"item\" effect=\"dark\" content=\"top prompts message\" placement=\"top\"><vue-button>Top</vue-button></vue-tooltip><vue-tooltip class=\"item\" effect=\"dark\" content=\"top end prompts message\" placement=\"top-end\"><vue-button>Top End</vue-button></vue-tooltip></div><div class=\"left\"><vue-tooltip class=\"item\" effect=\"dark\" content=\"left start prompts message\" placement=\"left-start\"><vue-button>Left Start</vue-button></vue-tooltip><vue-tooltip class=\"item\" effect=\"dark\" content=\"left prompts message\" placement=\"left\"><vue-button>Left</vue-button></vue-tooltip><vue-tooltip class=\"item\" effect=\"dark\" content=\"left end prompts message\" placement=\"left-end\"><vue-button>Left End</vue-button></vue-tooltip></div><div class=\"right\"><vue-tooltip class=\"item\" effect=\"dark\" content=\"right start prompts message\" placement=\"right-start\"><vue-button>Right Start</vue-button></vue-tooltip><vue-tooltip class=\"item\" effect=\"dark\" content=\"right prompts message\" placement=\"right\"><vue-button>Right</vue-button></vue-tooltip><vue-tooltip class=\"item\" effect=\"dark\" content=\"right end prompts message\" placement=\"right-end\"><vue-button>Right End</vue-button></vue-tooltip></div><div class=\"bottom\"><vue-tooltip class=\"item\" effect=\"dark\" content=\"bottom start prompts message\" placement=\"bottom-start\"><vue-button>Bottom Start</vue-button></vue-tooltip><vue-tooltip class=\"item\" effect=\"dark\" content=\"bottom prompts message\" placement=\"bottom\"><vue-button>Bottom</vue-button></vue-tooltip><vue-tooltip class=\"item\" effect=\"dark\" content=\"bottom end prompts message\" placement=\"bottom-end\"><vue-button>Bottom End</vue-button></vue-tooltip></div></div></div>',\n    code: '<div class=\"box\">\\n' +\n      '  <div class=\"top\">\\n' +\n      '    <vue-tooltip class=\"item\" effect=\"dark\" content=\"top start prompts message\" placement=\"top-start\">\\n' +\n      '      <vue-button>Top Start</vue-button>\\n' +\n      '    </vue-tooltip>\\n' +\n      '    <vue-tooltip class=\"item\" effect=\"dark\" content=\"top prompts message\" placement=\"top\">\\n' +\n      '      <vue-button>Top</vue-button>\\n' +\n      '    </vue-tooltip>\\n' +\n      '    <vue-tooltip class=\"item\" effect=\"dark\" content=\"top end prompts message\" placement=\"top-end\">\\n' +\n      '      <vue-button>Top End</vue-button>\\n' +\n      '    </vue-tooltip>\\n' +\n      '  </div>\\n' +\n      '  <div class=\"left\">\\n' +\n      '    <vue-tooltip class=\"item\" effect=\"dark\" content=\"left start prompts message\" placement=\"left-start\">\\n' +\n      '      <vue-button>Left Start</vue-button>\\n' +\n      '    </vue-tooltip>\\n' +\n      '    <vue-tooltip class=\"item\" effect=\"dark\" content=\"left prompts message\" placement=\"left\">\\n' +\n      '      <vue-button>Left</vue-button>\\n' +\n      '    </vue-tooltip>\\n' +\n      '    <vue-tooltip class=\"item\" effect=\"dark\" content=\"left end prompts message\" placement=\"left-end\">\\n' +\n      '      <vue-button>Left End</vue-button>\\n' +\n      '    </vue-tooltip>\\n' +\n      '  </div>\\n' +\n      '  <div class=\"right\">\\n' +\n      '    <vue-tooltip class=\"item\" effect=\"dark\" content=\"right start prompts message\" placement=\"right-start\">\\n' +\n      '      <vue-button>Right Start</vue-button>\\n' +\n      '    </vue-tooltip>\\n' +\n      '    <vue-tooltip class=\"item\" effect=\"dark\" content=\"right prompts message\" placement=\"right\">\\n' +\n      '      <vue-button>Right</vue-button>\\n' +\n      '    </vue-tooltip>\\n' +\n      '    <vue-tooltip class=\"item\" effect=\"dark\" content=\"right end prompts message\" placement=\"right-end\">\\n' +\n      '      <vue-button>Right End</vue-button>\\n' +\n      '    </vue-tooltip>\\n' +\n      '  </div>\\n' +\n      '  <div class=\"bottom\">\\n' +\n      '    <vue-tooltip class=\"item\" effect=\"dark\" content=\"bottom start prompts message\" placement=\"bottom-start\">\\n' +\n      '      <vue-button>Bottom Start</vue-button>\\n' +\n      '    </vue-tooltip>\\n' +\n      '    <vue-tooltip class=\"item\" effect=\"dark\" content=\"bottom prompts message\" placement=\"bottom\">\\n' +\n      '      <vue-button>Bottom</vue-button>\\n' +\n      '    </vue-tooltip>\\n' +\n      '    <vue-tooltip class=\"item\" effect=\"dark\" content=\"bottom end prompts message\" placement=\"bottom-end\">\\n' +\n      '      <vue-button>Bottom End</vue-button>\\n' +\n      '    </vue-tooltip>\\n' +\n      '  </div>\\n' +\n      '</div>\\n\\n' +\n      '<style>\\n' +\n      '   .box {\\n' +\n      '     width: 600px\\n' +\n      '   }\\n' +\n      '   .top {\\n' +\n      '     text-align: center\\n' +\n      '   }\\n' +\n      '   .left {\\n' +\n      '     float: left;\\n' +\n      '     width: 120px\\n' +\n      '   }\\n' +\n      '   .right {\\n' +\n      '     float: right;\\n' +\n      '     width: 135px\\n' +\n      '   }\\n' +\n      '   .bottom {\\n' +\n      '     clear: both;\\n' +\n      '     text-align: center\\n' +\n      '   }\\n' +\n      '   .left.vue-button,\\n' +\n      '   .right.vue-button {\\n' +\n      '     height: 45px;\\n' +\n      '   }\\n' +\n      '   .item {\\n' +\n      '     width: 120px;\\n' +\n      '     margin: 10px;\\n' +\n      '   }\\n' +\n      '</style>'\n  }, {\n    id: 'tooltip2',\n    label: 'tooltipDemo.samples2.label',\n    description: 'tooltipDemo.samples2.description',\n    template: '<div class=\"source\"><vue-tooltip content=\"Top center\" placement=\"top\"><vue-button>Dark</vue-button></vue-tooltip><vue-tooltip content=\"Bottom center\" placement=\"bottom\" effect=\"light\"><vue-button>Light</vue-button></vue-tooltip></div>',\n    code: '<vue-tooltip content=\"Top center\" placement=\"top\">\\n' +\n      '  <vue-button>Dark</vue-button>\\n' +\n      '</vue-tooltip>\\n' +\n      '<vue-tooltip content=\"Bottom center\" placement=\"bottom\" effect=\"light\">\\n' +\n      '  <vue-button>Light</vue-button>\\n' +\n      '</vue-tooltip>'\n  }, {\n    id: 'tooltip3',\n    label: 'tooltipDemo.samples3.label',\n    description: 'tooltipDemo.samples3.description',\n    template: '<div class=\"source\"><vue-tooltip placement=\"top\"><div slot=\"content\">multiple lines<br/>second line</div><vue-button>Top center</vue-button></vue-tooltip></div>',\n    code: '<vue-tooltip placement=\"top\">\\n' +\n      '  <div slot=\"content\">multiple lines<br/>second line</div>\\n' +\n      '  <vue-button>Top center</vue-button>\\n' +\n      '</vue-tooltip>'\n  }, {\n    id: 'tooltip4',\n    label: 'tooltipDemo.samples4.label',\n    description: 'tooltipDemo.samples4.description',\n    template: '<div class=\"source\"><vue-tooltip :disabled=\"disabled\" content=\"click to close tooltip\" placement=\"top\"><vue-button @click=\"disabled = !disabled\">click to {{disabled ? \"active\" : \"close\"}} tooltip</vue-button></vue-tooltip></div>',\n    parameter: {\n      data: function () {\n        return {\n          disabled: false\n        }\n      }\n    },\n    code: '<vue-tooltip :disabled=\"disabled\" content=\"click to close tooltip\" placement=\"top\">\\n' +\n      '  <vue-button @click=\"disabled = !disabled\">click to {{disabled ? \"active\" : \"close\"}} tooltip</vue-button>\\n' +\n      '</vue-tooltip>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '     data: function() {\\n' +\n      '       return {\\n' +\n      '         disabled: false\\n' +\n      '       }\\n' +\n      '     }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'popover5',\n    label: 'Attributes',\n    template: '<attr-table :data=\"tableData\"></attr-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"effect\",\n            column2: \"tooltipDemo.samples5.row1column2\",\n            column3: \"String\",\n            column4: \"dark, light\",\n            column5: \"dark\"\n          }, {\n            column1: \"enterable\",\n            column2: \"tooltipDemo.samples5.row2column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"content\",\n            column2: \"tooltipDemo.samples5.row3column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"placement\",\n            column2: \"tooltipDemo.samples5.row4column2\",\n            column3: \"String\",\n            column4: \"top, top-start, top-end, bottom, bottom-start, bottom-end, left, left-start, left-end, right, right-start, right-end\",\n            column5: \"bottom\"\n          }, {\n            column1: \"disabled\",\n            column2: \"tooltipDemo.samples5.row5column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"value(v-model)\",\n            column2: \"tooltipDemo.samples5.row6column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"popper-class\",\n            column2: \"tooltipDemo.samples5.row7column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"visible-arrow\",\n            column2: \"tooltipDemo.samples5.row9column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"true\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }]\n};\nmodule.exports = tooltipDemo;\n","'use strict';\nvar treeDemo = {\n  path: '/tree',\n  name: 'tree',\n  head: {\n    label: 'treeDemo.label',\n    description: 'treeDemo.description'\n  },\n  samples: [{\n    id: 'tree1',\n    label: 'treeDemo.samples1.label',\n    description: 'treeDemo.samples1.description',\n    template: '<div class=\"source\"><vue-tree :data=\"data\" :props=\"defaultProps\" @node-click=\"handleNodeClick\"></vue-tree></div>',\n    parameter: {\n      data: function () {\n        return {\n          data: [{\n            label: \"Level one 1\",\n            children: [{\n              label: \"Level two 1-1\",\n              children: [{\n                label: \"Level three 1-1-1\"\n              }]\n            }]\n          }, {\n            label: \"Level one 2\",\n            children: [{\n              label: \"Level two 2-1\",\n              children: [{\n                label: \"Level three 2-1-1\"\n              }]\n            }, {\n              label: \"Level two 2-2\",\n              children: [{\n                label: \"Level three 2-2-1\"\n              }]\n            }]\n          }, {\n            label: \"Level one 3\",\n            children: [{\n              label: \"Level two 3-1\",\n              children: [{\n                label: \"Level three 3-1-1\"\n              }]\n            }, {\n              label: \"Level two 3-2\",\n              children: [{\n                label: \"Level three 3-2-1\"\n              }]\n            }]\n          }],\n          defaultProps: {\n            children: \"children\",\n            label: \"label\"\n          }\n        }\n      },\n      methods: {\n        handleNodeClick: function (data) {\n          this.$notify({ title: data.label });\n        }\n      }\n    },\n    code: '<vue-tree :data=\"data\" :props=\"defaultProps\" @node-click=\"handleNodeClick\"></vue-tree>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function() {\\n' +\n      '      return {\\n' +\n      '        data: [{\\n' +\n      '          label: \"Level one 1\",\\n' +\n      '          children: [{\\n' +\n      '            label: \"Level two 1-1\",\\n' +\n      '            children: [{\\n' +\n      '              label: \"Level three 1-1-1\"\\n' +\n      '            }]\\n' +\n      '          }]\\n' +\n      '        }, {\\n' +\n      '          label: \"Level one 2\",\\n' +\n      '          children: [{\\n' +\n      '            label: \"Level two 2-1\",\\n' +\n      '            children: [{\\n' +\n      '              label: \"Level three 2-1-1\"\\n' +\n      '            }]\\n' +\n      '          }, {\\n' +\n      '            label: \"Level two 2-2\",\\n' +\n      '            children: [{\\n' +\n      '              label: \"Level three 2-2-1\"\\n' +\n      '            }]\\n' +\n      '          }]\\n' +\n      '        }, {\\n' +\n      '          label: \"Level one 3\",\\n' +\n      '          children: [{\\n' +\n      '            label: \"Level two 3-1\",\\n' +\n      '            children: [{\\n' +\n      '              label: \"Level three 3-1-1\"\\n' +\n      '            }]\\n' +\n      '          }, {\\n' +\n      '            label: \"Level two 3-2\",\\n' +\n      '            children: [{\\n' +\n      '              label: \"Level three 3-2-1\"\\n' +\n      '            }]\\n' +\n      '          }]\\n' +\n      '        }],\\n' +\n      '        defaultProps: {\\n' +\n      '          children: \"children\",\\n' +\n      '          label: \"label\"\\n' +\n      '        }\\n' +\n      '      }\\n' +\n      '    },\\n' +\n      '    methods: {\\n' +\n      '      handleNodeClick: function(data) {\\n' +\n      '        this.$notify({title: data.label});\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'tree2',\n    label: 'treeDemo.samples2.label',\n    description: 'treeDemo.samples2.description',\n    template: '<div class=\"source\"><vue-tree :props=\"props\" :load=\"loadNode\" lazy show-checkbox @check-change=\"handleCheckChange\"></vue-tree></div>',\n    parameter: {\n      data: function () {\n        return {\n          props: {\n            label: 'name',\n            children: 'zones'\n          },\n          count: 1\n        };\n      },\n      methods: {\n        handleCheckChange: function (data, checked, indeterminate) {\n          this.$notify({ title: data.name + ', ' + checked + ', ' + indeterminate });\n        },\n        loadNode: function (node, resolve) {\n          var self = this;\n          if (node.level === 0) {\n            return resolve([{\n              name: 'region1'\n            }, {\n              name: 'region2'\n            }]);\n          }\n          if (node.level > 3)\n            return resolve([]);\n          var hasChild;\n          if (node.data.name === 'region1') {\n            hasChild = true;\n          } else if (node.data.name === 'region2') {\n            hasChild = false;\n          } else {\n            hasChild = Math.random() > 0.5;\n          }\n          setTimeout(function () {\n            var data;\n            if (hasChild) {\n              data = [{\n                name: 'zone' + self.count++\n              }, {\n                name: 'zone' + self.count++\n              }];\n            } else {\n              data = [];\n            }\n            resolve(data);\n          }, 500);\n        }\n      }\n    },\n    code: '<vue-tree :props=\"props\" :load=\"loadNode\" lazy show-checkbox @check-change=\"handleCheckChange\"></vue-tree>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function() {\\n' +\n      '      return {\\n' +\n      '        props: {\\n' +\n      '          label: \"name\",\\n' +\n      '          children: \"zones\"\\n' +\n      '        },\\n' +\n      '        count: 1\\n' +\n      '      };\\n' +\n      '    },\\n' +\n      '    methods: {\\n' +\n      '      handleCheckChange: function(data, checked, indeterminate) {\\n' +\n      '        this.$notify({title: data.name + \", \" + checked + \", \" + indeterminate});\\n' +\n      '      },\\n' +\n      '      loadNode: function(node, resolve) {\\n' +\n      '        var self = this;\\n' +\n      '        if (node.level === 0) {\\n' +\n      '          return resolve([{\\n' +\n      '            name: \"region1\"\\n' +\n      '          }, {\\n' +\n      '            name: \"region2\"\\n' +\n      '          }]);\\n' +\n      '        }\\n' +\n      '        if (node.level > 3)\\n' +\n      '          return resolve([]);\\n' +\n      '        var hasChild;\\n' +\n      '        if (node.data.name === \"region1\") {\\n' +\n      '          hasChild = true;\\n' +\n      '        } else if (node.data.name === \"region2\") {\\n' +\n      '          hasChild = false;\\n' +\n      '        } else {\\n' +\n      '          hasChild = Math.random() > 0.5;\\n' +\n      '        }\\n' +\n      '        setTimeout(function() {\\n' +\n      '          var data;\\n' +\n      '          if (hasChild) {\\n' +\n      '            data = [{\\n' +\n      '              name: \"zone\" + self.count++\\n' +\n      '            }, {\\n' +\n      '              name: \"zone\" + self.count++\\n' +\n      '            }];\\n' +\n      '          } else {\\n' +\n      '            data = [];\\n' +\n      '          }\\n' +\n      '          resolve(data);\\n' +\n      '        }, 500);\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'tree3',\n    label: 'treeDemo.samples3.label',\n    description: 'treeDemo.samples3.description',\n    template: '<div class=\"source\"><vue-tree :data=\"data\" show-checkbox node-key=\"id\" :default-expanded-keys=\"[2, 3]\" :default-checked-keys=\"[5]\" :props=\"defaultProps\"></vue-tree></div>',\n    parameter: {\n      data: function () {\n        return {\n          data: [{\n            id: 1,\n            label: 'Level one 1',\n            children: [{\n              id: 4,\n              label: 'Level two 1-1',\n              children: [{\n                id: 9,\n                label: 'Level three 1-1-1'\n              }, {\n                id: 10,\n                label: 'Level three 1-1-2'\n              }]\n            }]\n          }, {\n            id: 2,\n            label: 'Level one 2',\n            children: [{\n              id: 5,\n              label: 'Level two 2-1'\n            }, {\n              id: 6,\n              label: 'Level two 2-2'\n            }]\n          }, {\n            id: 3,\n            label: 'Level one 3',\n            children: [{\n              id: 7,\n              label: 'Level two 3-1'\n            }, {\n              id: 8,\n              label: 'Level two 3-2'\n            }]\n          }],\n          defaultProps: {\n            children: 'children',\n            label: 'label'\n          }\n        };\n      }\n    },\n    code: '<vue-tree :data=\"data\" show-checkbox node-key=\"id\" :default-expanded-keys=\"[2, 3]\" :default-checked-keys=\"[5]\" :props=\"defaultProps\"></vue-tree>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function() {\\n' +\n      '      return {\\n' +\n      '        data: [{\\n' +\n      '          id: 1,\\n' +\n      '          label: \"Level one 1\",\\n' +\n      '          children: [{\\n' +\n      '            id: 4,\\n' +\n      '            label: \"Level two 1-1\",\\n' +\n      '            children: [{\\n' +\n      '              id: 9,\\n' +\n      '              label: \"Level three 1-1-1\"\\n' +\n      '            }, {\\n' +\n      '              id: 10,\\n' +\n      '              label: \"Level three 1-1-2\"\\n' +\n      '            }]\\n' +\n      '          }]\\n' +\n      '        }, {\\n' +\n      '          id: 2,\\n' +\n      '          label: \"Level one 2\",\\n' +\n      '          children: [{\\n' +\n      '            id: 5,\\n' +\n      '            label: \"Level two 2-1\"\\n' +\n      '          }, {\\n' +\n      '            id: 6,\\n' +\n      '            label: \"Level two 2-2\"\\n' +\n      '          }]\\n' +\n      '        }, {\\n' +\n      '          id: 3,\\n' +\n      '          label: \"Level one 3\",\\n' +\n      '          children: [{\\n' +\n      '            id: 7,\\n' +\n      '            label: \"Level two 3-1\"\\n' +\n      '          }, {\\n' +\n      '            id: 8,\\n' +\n      '            label: \"Level two 3-2\"\\n' +\n      '          }]\\n' +\n      '        }],\\n' +\n      '        defaultProps: {\\n' +\n      '          children: \"children\",\\n' +\n      '          label: \"label\"\\n' +\n      '        }\\n' +\n      '      };\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'tree4',\n    label: 'treeDemo.samples4.label',\n    description: 'treeDemo.samples4.description',\n    template: '<div class=\"source\"><vue-tree :data=\"data\" show-checkbox node-key=\"id\" :default-expanded-keys=\"[2, 3]\" :default-checked-keys=\"[5]\" :props=\"defaultProps\"></vue-tree></div>',\n    parameter: {\n      data: function () {\n        return {\n          data: [{\n            id: 1,\n            label: 'Level one 1',\n            children: [{\n              id: 4,\n              label: 'Level two 1-1',\n              children: [{\n                id: 9,\n                label: 'Level three 1-1-1'\n              }, {\n                id: 10,\n                label: 'Level three 1-1-2',\n                disabled: true\n              }]\n            }]\n          }, {\n            id: 2,\n            label: 'Level one 2',\n            children: [{\n              id: 5,\n              label: 'Level two 2-1',\n              disabled: true\n            }, {\n              id: 6,\n              label: 'Level two 2-2'\n            }]\n          }, {\n            id: 3,\n            label: 'Level one 3',\n            children: [{\n              id: 7,\n              label: 'Level two 3-1',\n              disabled: true\n            }, {\n              id: 8,\n              label: 'Level two 3-2'\n            }]\n          }],\n          defaultProps: {\n            children: 'children',\n            label: 'label',\n            disabled: 'disabled'\n          }\n        };\n      }\n    },\n    code: '<vue-tree :data=\"data\" show-checkbox node-key=\"id\" :default-expanded-keys=\"[2, 3]\" :default-checked-keys=\"[5]\" :props=\"defaultProps\"></vue-tree>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function() {\\n' +\n      '      return {\\n' +\n      '        data: [{\\n' +\n      '          id: 1,\\n' +\n      '          label: \"Level one 1\",\\n' +\n      '          children: [{\\n' +\n      '            id: 4,\\n' +\n      '            label: \"Level two 1-1\",\\n' +\n      '            children: [{\\n' +\n      '              id: 9,\\n' +\n      '              label: \"Level three 1-1-1\"\\n' +\n      '            }, {\\n' +\n      '              id: 10,\\n' +\n      '              label: \"Level three 1-1-2\",\\n' +\n      '              disabled: true\\n' +\n      '            }]\\n' +\n      '          }]\\n' +\n      '        }, {\\n' +\n      '          id: 2,\\n' +\n      '          label: \"Level one 2\",\\n' +\n      '          children: [{\\n' +\n      '            id: 5,\\n' +\n      '            label: \"Level two 2-1\",\\n' +\n      '            disabled: true\\n' +\n      '          }, {\\n' +\n      '            id: 6,\\n' +\n      '            label: \"Level two 2-2\"\\n' +\n      '          }]\\n' +\n      '        }, {\\n' +\n      '          id: 3,\\n' +\n      '          label: \"Level one 3\",\\n' +\n      '          children: [{\\n' +\n      '            id: 7,\\n' +\n      '            label: \"Level two 3-1\",\\n' +\n      '            disabled: true\\n' +\n      '          }, {\\n' +\n      '            id: 8,\\n' +\n      '            label: \"Level two 3-2\"\\n' +\n      '          }]\\n' +\n      '        }],\\n' +\n      '        defaultProps: {\\n' +\n      '          children: \"children\",\\n' +\n      '          label: \"label\",\\n' +\n      '          disabled: \"disabled\"\\n' +\n      '        }\\n' +\n      '      };\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'tree5',\n    label: 'treeDemo.samples5.label',\n    description: 'treeDemo.samples5.description',\n    template: '<div class=\"source\"><vue-tree :data=\"data\" show-checkbox default-expand-all node-key=\"id\" ref=\"tree\" :props=\"defaultProps\" :expand-on-click-node=\"false\"></vue-tree><vue-button-group><vue-button @click=\"getCheckedNodes\">get by node</vue-button><vue-button @click=\"getCheckedKeys\">get by key</vue-button><vue-button @click=\"setCheckedNodes\">set by node</vue-button><vue-button @click=\"setCheckedKeys\">set by key</vue-button><vue-button @click=\"resetChecked\">reset</vue-button></vue-button-group></div>',\n    parameter: {\n      methods: {\n        getCheckedNodes: function () {\n          this.$notify({ title: this.$refs.tree.getCheckedNodes().map(function (checkedNode) { return checkedNode.label }).join(', ') });\n        },\n        getCheckedKeys: function () {\n          this.$notify({ title: this.$refs.tree.getCheckedKeys().toString() });\n        },\n        setCheckedNodes: function () {\n          this.$refs.tree.setCheckedNodes([{\n            id: 5,\n            label: 'Level two 2-1'\n          }, {\n            id: 9,\n            label: 'Level three 1-1-1'\n          }]);\n        },\n        setCheckedKeys: function () {\n          this.$refs.tree.setCheckedKeys([3]);\n        },\n        resetChecked: function () {\n          this.$refs.tree.setCheckedKeys([]);\n        }\n      },\n      data: function () {\n        return {\n          data: [{\n            id: 1,\n            label: 'Level one 1',\n            children: [{\n              id: 4,\n              label: 'Level two 1-1',\n              children: [{\n                id: 9,\n                label: 'Level three 1-1-1'\n              }, {\n                id: 10,\n                label: 'Level three 1-1-2'\n              }]\n            }]\n          }, {\n            id: 2,\n            label: 'Level one 2',\n            children: [{\n              id: 5,\n              label: 'Level two 2-1'\n            }, {\n              id: 6,\n              label: 'Level two 2-2'\n            }]\n          }, {\n            id: 3,\n            label: 'Level one 3',\n            children: [{\n              id: 7,\n              label: 'Level two 3-1'\n            }, {\n              id: 8,\n              label: 'Level two 3-2'\n            }]\n          }],\n          defaultProps: {\n            children: 'children',\n            label: 'label'\n          }\n        };\n      }\n    },\n    code: '<vue-tree :data=\"data\" show-checkbox default-expand-all node-key=\"id\" ref=\"tree\" :props=\"defaultProps\" :expand-on-click-node=\"false\"></vue-tree>\\n' +\n      '<vue-button-group>\\n' +\n      '  <vue-button @click=\"getCheckedNodes\">get by node</vue-button>\\n' +\n      '  <vue-button @click=\"getCheckedKeys\">get by key</vue-button>\\n' +\n      '  <vue-button @click=\"setCheckedNodes\">set by node</vue-button>\\n' +\n      '  <vue-button @click=\"setCheckedKeys\">set by key</vue-button>\\n' +\n      '  <vue-button @click=\"resetChecked\">reset</vue-button>\\n' +\n      '</vue-button-group>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    methods: {\\n' +\n      '      getCheckedNodes: function() {\\n' +\n      '        this.$notify({title: this.$refs.tree.getCheckedNodes().map(function(checkedNode){return checkedNode.label}).join(\", \")});\\n' +\n      '      },\\n' +\n      '      getCheckedKeys: function() {\\n' +\n      '        this.$notify({title: this.$refs.tree.getCheckedKeys().toString()});\\n' +\n      '      },\\n' +\n      '      setCheckedNodes: function() {\\n' +\n      '        this.$refs.tree.setCheckedNodes([{\\n' +\n      '          id: 5,\\n' +\n      '          label: \"Level two 2-1\"\\n' +\n      '        }, {\\n' +\n      '          id: 9,\\n' +\n      '          label: \"Level three 1-1-1\"\\n' +\n      '        }]);\\n' +\n      '      },\\n' +\n      '      setCheckedKeys: function() {\\n' +\n      '        this.$refs.tree.setCheckedKeys([3]);\\n' +\n      '      },\\n' +\n      '      resetChecked: function() {\\n' +\n      '        this.$refs.tree.setCheckedKeys([]);\\n' +\n      '      }\\n' +\n      '    },\\n' +\n      '    data: function() {\\n' +\n      '      return {\\n' +\n      '        data: [{\\n' +\n      '          id: 1,\\n' +\n      '          label: \"Level one 1\",\\n' +\n      '          children: [{\\n' +\n      '            id: 4,\\n' +\n      '            label: \"Level two 1-1\",\\n' +\n      '            children: [{\\n' +\n      '              id: 9,\\n' +\n      '              label: \"Level three 1-1-1\"\\n' +\n      '            }, {\\n' +\n      '              id: 10,\\n' +\n      '              label: \"Level three 1-1-2\"\\n' +\n      '            }]\\n' +\n      '          }]\\n' +\n      '        }, {\\n' +\n      '          id: 2,\\n' +\n      '          label: \"Level one 2\",\\n' +\n      '          children: [{\\n' +\n      '            id: 5,\\n' +\n      '            label: \"Level two 2-1\"\\n' +\n      '          }, {\\n' +\n      '            id: 6,\\n' +\n      '            label: \"Level two 2-2\"\\n' +\n      '          }]\\n' +\n      '        }, {\\n' +\n      '          id: 3,\\n' +\n      '          label: \"Level one 3\",\\n' +\n      '          children: [{\\n' +\n      '            id: 7,\\n' +\n      '            label: \"Level two 3-1\"\\n' +\n      '          }, {\\n' +\n      '            id: 8,\\n' +\n      '            label: \"Level two 3-2\"\\n' +\n      '          }]\\n' +\n      '        }],\\n' +\n      '        defaultProps: {\\n' +\n      '          children: \"children\",\\n' +\n      '          label: \"label\"\\n' +\n      '        }\\n' +\n      '      };\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'tree13',\n    label: 'treeDemo.samples13.label',\n    description: 'treeDemo.samples13.description',\n    template: '<div class=\"source\"><vue-tree :data=\"data\" default-expand-all node-key=\"id\" ref=\"tree\" highlight-current :props=\"defaultProps\" :expand-on-click-node=\"false\"></vue-tree><vue-button-group><vue-button @click=\"getCurrentNode\">get by node</vue-button><vue-button @click=\"getCurrentKey\">get by key</vue-button><vue-button @click=\"setCurrentNode\">set by node</vue-button><vue-button @click=\"setCurrentKey\">set by key</vue-button><vue-button @click=\"resetCurrent\">reset</vue-button></vue-button-group></div>',\n    parameter: {\n      methods: {\n        getCurrentNode: function () {\n          var currentNode = this.$refs.tree.getCurrentNode();\n          if (currentNode) {\n            this.$notify({ title: currentNode.label });\n          }\n        },\n        getCurrentKey: function () {\n          var currentKey = this.$refs.tree.getCurrentKey();\n          if (currentKey) {\n            this.$notify({ title: currentKey.toString() });\n          }\n        },\n        setCurrentNode: function () {\n          this.$refs.tree.setCurrentNode({\n            id: 5,\n            label: 'Level two 2-1'\n          });\n        },\n        setCurrentKey: function () {\n          this.$refs.tree.setCurrentKey(9);\n        },\n        resetCurrent: function () {\n          this.$refs.tree.setCurrentNode(null);\n        }\n      },\n      data: function () {\n        return {\n          data: [{\n            id: 1,\n            label: 'Level one 1',\n            children: [{\n              id: 4,\n              label: 'Level two 1-1',\n              children: [{\n                id: 9,\n                label: 'Level three 1-1-1'\n              }, {\n                id: 10,\n                label: 'Level three 1-1-2'\n              }]\n            }]\n          }, {\n            id: 2,\n            label: 'Level one 2',\n            children: [{\n              id: 5,\n              label: 'Level two 2-1'\n            }, {\n              id: 6,\n              label: 'Level two 2-2'\n            }]\n          }, {\n            id: 3,\n            label: 'Level one 3',\n            children: [{\n              id: 7,\n              label: 'Level two 3-1'\n            }, {\n              id: 8,\n              label: 'Level two 3-2'\n            }]\n          }],\n          defaultProps: {\n            children: 'children',\n            label: 'label'\n          }\n        };\n      }\n    },\n    code: '<vue-tree :data=\"data\" default-expand-all node-key=\"id\" ref=\"tree\" highlight-current :props=\"defaultProps\" :expand-on-click-node=\"false\"></vue-tree>\\n' +\n      '<vue-button-group>\\n' +\n      '  <vue-button @click=\"getCurrentNode\">get by node</vue-button>\\n' +\n      '  <vue-button @click=\"getCurrentKey\">get by key</vue-button>\\n' +\n      '  <vue-button @click=\"setCurrentNode\">set by node</vue-button>\\n' +\n      '  <vue-button @click=\"setCurrentKey\">set by key</vue-button>\\n' +\n      '  <vue-button @click=\"resetCurrent\">reset</vue-button>\\n' +\n      '</vue-button-group>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    methods: {\\n' +\n      '      getCurrentNode: function() {\\n' +\n      '        var currentNode = this.$refs.tree.getCurrentNode();\\n' +\n      '        if (currentNode) {\\n' +\n      '          this.$notify({title: currentNode.label});\\n' +\n      '        }\\n' +\n      '      },\\n' +\n      '      getCurrentKey: function() {\\n' +\n      '        var currentKey = this.$refs.tree.getCurrentKey();\\n' +\n      '        if (currentKey) {\\n' +\n      '          this.$notify({title: currentKey.toString()});\\n' +\n      '        }\\n' +\n      '      },\\n' +\n      '      setCurrentNode: function() {\\n' +\n      '        this.$refs.tree.setCurrentNode({\\n' +\n      '          id: 5,\\n' +\n      '          label: \"Level two 2-1\"\\n' +\n      '        });\\n' +\n      '      },\\n' +\n      '      setCurrentKey: function() {\\n' +\n      '        this.$refs.tree.setCurrentKey(9);\\n' +\n      '      },\\n' +\n      '      resetCurrent: function() {\\n' +\n      '        this.$refs.tree.setCurrentKey(null);\\n' +\n      '      }\\n' +\n      '    },\\n' +\n      '    data: function() {\\n' +\n      '      return {\\n' +\n      '        data: [{\\n' +\n      '          id: 1,\\n' +\n      '          label: \"Level one 1\",\\n' +\n      '          children: [{\\n' +\n      '            id: 4,\\n' +\n      '            label: \"Level two 1-1\",\\n' +\n      '            children: [{\\n' +\n      '              id: 9,\\n' +\n      '              label: \"Level three 1-1-1\"\\n' +\n      '            }, {\\n' +\n      '              id: 10,\\n' +\n      '              label: \"Level three 1-1-2\"\\n' +\n      '            }]\\n' +\n      '          }]\\n' +\n      '        }, {\\n' +\n      '          id: 2,\\n' +\n      '          label: \"Level one 2\",\\n' +\n      '          children: [{\\n' +\n      '            id: 5,\\n' +\n      '            label: \"Level two 2-1\"\\n' +\n      '          }, {\\n' +\n      '            id: 6,\\n' +\n      '            label: \"Level two 2-2\"\\n' +\n      '          }]\\n' +\n      '        }, {\\n' +\n      '          id: 3,\\n' +\n      '          label: \"Level one 3\",\\n' +\n      '          children: [{\\n' +\n      '            id: 7,\\n' +\n      '            label: \"Level two 3-1\"\\n' +\n      '          }, {\\n' +\n      '            id: 8,\\n' +\n      '            label: \"Level two 3-2\"\\n' +\n      '          }]\\n' +\n      '        }],\\n' +\n      '        defaultProps: {\\n' +\n      '          children: \"children\",\\n' +\n      '          label: \"label\"\\n' +\n      '        }\\n' +\n      '      };\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'tree6',\n    label: 'treeDemo.samples6.label',\n    description: 'treeDemo.samples6.description',\n    template: '<div class=\"source\"><vue-tree :data=\"data\" :props=\"defaultProps\" show-checkbox node-key=\"id\" default-expand-all :expand-on-click-node=\"false\" :render-content=\"renderContent\"></vue-tree></div>',\n    parameter: {\n      data: function () {\n        return {\n          data: [{\n            id: 1,\n            label: 'Level one 1',\n            children: [{\n              id: 4,\n              label: 'Level two 1-1',\n              children: [{\n                id: 9,\n                label: 'Level three 1-1-1'\n              }, {\n                id: 10,\n                label: 'Level three 1-1-2'\n              }]\n            }]\n          }, {\n            id: 2,\n            label: 'Level one 2',\n            children: [{\n              id: 5,\n              label: 'Level two 2-1'\n            }, {\n              id: 6,\n              label: 'Level two 2-2'\n            }]\n          }, {\n            id: 3,\n            label: 'Level one 3',\n            children: [{\n              id: 7,\n              label: 'Level two 3-1'\n            }, {\n              id: 8,\n              label: 'Level two 3-2'\n            }]\n          }],\n          id: 11,\n          defaultProps: {\n            children: 'children',\n            label: 'label'\n          }\n        }\n      },\n      methods: {\n        append: function (store, data) {\n          var self = this;\n          store.append({\n            id: self.id++,\n            label: 'Level Test',\n            children: []\n          }, data);\n        },\n        remove: function (store, data) {\n          store.remove(data);\n        },\n        renderContent: function (createElement, nodeObj) {\n          var self = this;\n          var node = nodeObj.node;\n          var data = nodeObj.data;\n          var store = nodeObj.store;\n          return createElement(\"span\", {\n            style: \"white-space: normal\"\n          }, [createElement(\"span\", null, [createElement(\"span\", null, [node.label])]), createElement(\"span\", {\n            style: \"float: right; margin-right: 20px\"\n          }, [createElement(\"vue-button\", {\n            attrs: {\n              size: \"mini\"\n            },\n            on: {\n              click: function () {\n                return self.append(store, data)\n              }\n            }\n          }, [\"Append\"]), createElement(\"vue-button\", {\n            attrs: {\n              size: \"mini\"\n            },\n            on: {\n              click: function () {\n                return self.remove(store, data)\n              }\n            }\n          }, [\"Delete\"])])])\n        }\n      }\n    },\n    code: '<vue-tree :data=\"data\" :props=\"defaultProps\" show-checkbox node-key=\"id\" default-expand-all :expand-on-click-node=\"false\" :render-content=\"renderContent\"></vue-tree>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function() {\\n' +\n      '      return {\\n' +\n      '        data: [{\\n' +\n      '          id: 1,\\n' +\n      '          label: \"Level one 1\",\\n' +\n      '          children: [{\\n' +\n      '            id: 4,\\n' +\n      '            label: \"Level two 1-1\",\\n' +\n      '            children: [{\\n' +\n      '              id: 9,\\n' +\n      '              label: \"Level three 1-1-1\"\\n' +\n      '            }, {\\n' +\n      '              id: 10,\\n' +\n      '              label: \"Level three 1-1-2\"\\n' +\n      '            }]\\n' +\n      '          }]\\n' +\n      '        }, {\\n' +\n      '          id: 2,\\n' +\n      '          label: \"Level one 2\",\\n' +\n      '          children: [{\\n' +\n      '            id: 5,\\n' +\n      '            label: \"Level two 2-1\"\\n' +\n      '          }, {\\n' +\n      '            id: 6,\\n' +\n      '            label: \"Level two 2-2\"\\n' +\n      '          }]\\n' +\n      '        }, {\\n' +\n      '          id: 3,\\n' +\n      '          label: \"Level one 3\",\\n' +\n      '          children: [{\\n' +\n      '            id: 7,\\n' +\n      '            label: \"Level two 3-1\"\\n' +\n      '          }, {\\n' +\n      '            id: 8,\\n' +\n      '            label: \"Level two 3-2\"\\n' +\n      '          }]\\n' +\n      '        }],\\n' +\n      '        id: 11,\\n' +\n      '        defaultProps: {\\n' +\n      '          children: \"children\",\\n' +\n      '          label: \"label\"\\n' +\n      '        }\\n' +\n      '      }\\n' +\n      '    },\\n' +\n      '    methods: {\\n' +\n      '      append: function(store, data) {\\n' +\n      '        var self = this;\\n' +\n      '        store.append({\\n' +\n      '          id: self.id++,\\n' +\n      '          label: \"Level Test\",\\n' +\n      '          children: []\\n' +\n      '        }, data);\\n' +\n      '      },\\n' +\n      '      remove: function(store, data) {\\n' +\n      '        store.remove(data);\\n' +\n      '      },\\n' +\n      '      renderContent: function(createElement, nodeObj) {\\n' +\n      '        var self = this;\\n' +\n      '        var node = nodeObj.node;\\n' +\n      '        var data = nodeObj.data;\\n' +\n      '        var store = nodeObj.store;\\n' +\n      '        return createElement(\"span\", {\\n' +\n      '          style: \"white-space: normal\"\\n' +\n      '        }, [createElement(\"span\", null, [createElement(\"span\", null, [node.label])]), createElement(\"span\", {\\n' +\n      '          style: \"float: right; margin-right: 20px\"\\n' +\n      '        }, [createElement(\"vue-button\", {\\n' +\n      '          attrs: {\\n' +\n      '            size: \"mini\"\\n' +\n      '          },\\n' +\n      '          on: {\\n' +\n      '            click: function() {\\n' +\n      '              return self.append(store, data)\\n' +\n      '            }\\n' +\n      '          }\\n' +\n      '        }, [\"Append\"]), createElement(\"vue-button\", {\\n' +\n      '          attrs: {\\n' +\n      '            size: \"mini\"\\n' +\n      '          },\\n' +\n      '          on: {\\n' +\n      '            click: function() {\\n' +\n      '              return self.remove(store, data)\\n' +\n      '            }\\n' +\n      '          }\\n' +\n      '        }, [\"Delete\"])])])\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'tree7',\n    label: 'treeDemo.samples7.label',\n    description: 'treeDemo.samples7.description',\n    template: '<div class=\"source\"><vue-input placeholder=\"Filter keyword\" v-model=\"filterText\"></vue-input><vue-tree :data=\"data\" :props=\"defaultProps\" default-expand-all :filter-node-method=\"filterNode\" ref=\"tree\"></vue-tree></div>',\n    parameter: {\n      watch: {\n        filterText: function (val) {\n          this.$refs.tree.filter(val);\n        }\n      },\n      methods: {\n        filterNode: function (value, data) {\n          if (!value)\n            return true;\n          return data.label.indexOf(value) !== -1;\n        }\n      },\n      data: function () {\n        return {\n          filterText: '',\n          data: [{\n            id: 1,\n            label: 'Level one 1',\n            children: [{\n              id: 4,\n              label: 'Level two 1-1',\n              children: [{\n                id: 9,\n                label: 'Level three 1-1-1'\n              }, {\n                id: 10,\n                label: 'Level three 1-1-2'\n              }]\n            }]\n          }, {\n            id: 2,\n            label: 'Level one 2',\n            children: [{\n              id: 5,\n              label: 'Level two 2-1'\n            }, {\n              id: 6,\n              label: 'Level two 2-2'\n            }]\n          }, {\n            id: 3,\n            label: 'Level one 3',\n            children: [{\n              id: 7,\n              label: 'Level two 3-1'\n            }, {\n              id: 8,\n              label: 'Level two 3-2'\n            }]\n          }],\n          defaultProps: {\n            children: 'children',\n            label: 'label'\n          }\n        };\n      }\n    },\n    code: '<vue-input placeholder=\"Filter keyword\" v-model=\"filterText\"></vue-input>\\n<vue-tree :data=\"data\" :props=\"defaultProps\" default-expand-all :filter-node-method=\"filterNode\" ref=\"tree\"></vue-tree>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    watch: {\\n' +\n      '      filterText: function(val) {\\n' +\n      '        this.$refs.tree.filter(val);\\n' +\n      '      }\\n' +\n      '    },\\n' +\n      '    methods: {\\n' +\n      '      filterNode: function(value, data) {\\n' +\n      '        if (!value)\\n' +\n      '          return true;\\n' +\n      '        return data.label.indexOf(value) !== -1;\\n' +\n      '      }\\n' +\n      '    },\\n' +\n      '    data: function() {\\n' +\n      '      return {\\n' +\n      '        filterText: \"\",\\n' +\n      '        data: [{\\n' +\n      '          id: 1,\\n' +\n      '          label: \"Level one 1\",\\n' +\n      '          children: [{\\n' +\n      '            id: 4,\\n' +\n      '            label: \"Level two 1-1\",\\n' +\n      '            children: [{\\n' +\n      '              id: 9,\\n' +\n      '              label: \"Level three 1-1-1\"\\n' +\n      '            }, {\\n' +\n      '              id: 10,\\n' +\n      '              label: \"Level three 1-1-2\"\\n' +\n      '            }]\\n' +\n      '          }]\\n' +\n      '        }, {\\n' +\n      '          id: 2,\\n' +\n      '          label: \"Level one 2\",\\n' +\n      '          children: [{\\n' +\n      '            id: 5,\\n' +\n      '            label: \"Level two 2-1\"\\n' +\n      '          }, {\\n' +\n      '            id: 6,\\n' +\n      '            label: \"Level two 2-2\"\\n' +\n      '          }]\\n' +\n      '        }, {\\n' +\n      '          id: 3,\\n' +\n      '          label: \"Level one 3\",\\n' +\n      '          children: [{\\n' +\n      '            id: 7,\\n' +\n      '            label: \"Level two 3-1\"\\n' +\n      '          }, {\\n' +\n      '            id: 8,\\n' +\n      '            label: \"Level two 3-2\"\\n' +\n      '          }]\\n' +\n      '        }],\\n' +\n      '        defaultProps: {\\n' +\n      '          children: \"children\",\\n' +\n      '          label: \"label\"\\n' +\n      '        }\\n' +\n      '      };\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'tree8',\n    label: 'treeDemo.samples8.label',\n    description: 'treeDemo.samples8.description',\n    template: '<div class=\"source\"><vue-tree :data=\"data\" :props=\"defaultProps\" accordion @node-click=\"handleNodeClick\"></vue-tree></div>',\n    parameter: {\n      data: function () {\n        return {\n          data: [{\n            label: 'Level one 1',\n            children: [{\n              label: 'Level two 1-1',\n              children: [{\n                label: 'Level three 1-1-1'\n              }]\n            }]\n          }, {\n            label: 'Level one 2',\n            children: [{\n              label: 'Level two 2-1',\n              children: [{\n                label: 'Level three 2-1-1'\n              }]\n            }, {\n              label: 'Level two 2-2',\n              children: [{\n                label: 'Level three 2-2-1'\n              }]\n            }]\n          }, {\n            label: 'Level one 3',\n            children: [{\n              label: 'Level two 3-1',\n              children: [{\n                label: 'Level three 3-1-1'\n              }]\n            }, {\n              label: 'Level two 3-2',\n              children: [{\n                label: 'Level three 3-2-1'\n              }]\n            }]\n          }],\n          defaultProps: {\n            children: 'children',\n            label: 'label'\n          }\n        };\n      },\n      methods: {\n        handleNodeClick: function (data) {\n          this.$notify({ title: data.label });\n        }\n      }\n    },\n    code: '<vue-tree :data=\"data\" :props=\"defaultProps\" accordion @node-click=\"handleNodeClick\"></vue-tree>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function() {\\n' +\n      '      return {\\n' +\n      '        data: [{\\n' +\n      '          label: \"Level one 1\",\\n' +\n      '          children: [{\\n' +\n      '            label: \"Level two 1-1\",\\n' +\n      '            children: [{\\n' +\n      '              label: \"Level three 1-1-1\"\\n' +\n      '            }]\\n' +\n      '          }]\\n' +\n      '        }, {\\n' +\n      '          label: \"Level one 2\",\\n' +\n      '          children: [{\\n' +\n      '            label: \"Level two 2-1\",\\n' +\n      '            children: [{\\n' +\n      '              label: \"Level three 2-1-1\"\\n' +\n      '            }]\\n' +\n      '          }, {\\n' +\n      '            label: \"Level two 2-2\",\\n' +\n      '            children: [{\\n' +\n      '              label: \"Level three 2-2-1\"\\n' +\n      '            }]\\n' +\n      '          }]\\n' +\n      '        }, {\\n' +\n      '          label: \"Level one 3\",\\n' +\n      '          children: [{\\n' +\n      '            label: \"Level two 3-1\",\\n' +\n      '            children: [{\\n' +\n      '              label: \"Level three 3-1-1\"\\n' +\n      '            }]\\n' +\n      '          }, {\\n' +\n      '            label: \"Level two 3-2\",\\n' +\n      '            children: [{\\n' +\n      '              label: \"Level three 3-2-1\"\\n' +\n      '            }]\\n' +\n      '          }]\\n' +\n      '        }],\\n' +\n      '        defaultProps: {\\n' +\n      '          children: \"children\",\\n' +\n      '          label: \"label\"\\n' +\n      '        }\\n' +\n      '      };\\n' +\n      '    },\\n' +\n      '    methods: {\\n' +\n      '      handleNodeClick: function(data) {\\n' +\n      '        this.$notify({title: data.label});\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'tree9',\n    label: 'Attributes',\n    template: '<attr-table :data=\"tableData\"></attr-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"data\",\n            column2: \"treeDemo.samples9.row1column2\",\n            column3: \"Array\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"node-key\",\n            column2: \"treeDemo.samples9.row2column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"lazy\",\n            column2: \"treeDemo.samples9.row3column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"load\",\n            column2: \"treeDemo.samples9.row4column2\",\n            column3: \"Function(node, resolve)\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"render-content\",\n            column2: \"treeDemo.samples9.row5column2\",\n            column3: \"Function(createElement, nodeObj)\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"highlight-current\",\n            column2: \"treeDemo.samples9.row6column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"current-node-key\",\n            column2: \"treeDemo.samples9.row7column2\",\n            column3: \"String / Number\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"default-expand-all\",\n            column2: \"treeDemo.samples9.row8column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"expand-on-click-node\",\n            column2: \"treeDemo.samples9.row9column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"true\"\n          }, {\n            column1: \"auto-expand-parent\",\n            column2: \"treeDemo.samples9.row10column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"true\"\n          }, {\n            column1: \"default-expanded-keys\",\n            column2: \"treeDemo.samples9.row11column2\",\n            column3: \"Array\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"show-checkbox\",\n            column2: \"treeDemo.samples9.row12column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"check-strictly\",\n            column2: \"treeDemo.samples9.row13column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"default-checked-keys\",\n            column2: \"treeDemo.samples9.row14column2\",\n            column3: \"Array\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"filter-node-method\",\n            column2: \"treeDemo.samples9.row15column2\",\n            column3: \"Function(value, data, node)\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"accordion\",\n            column2: \"treeDemo.samples9.row16column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"indent\",\n            column2: \"treeDemo.samples9.row17column2\",\n            column3: \"Number\",\n            column4: \"\",\n            column5: \"16\"\n          }, {\n            column1: \"props\",\n            column2: \"treeDemo.samples9.row18column2\",\n            column3: \"Object\",\n            column4: \"\",\n            column5: \"\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'tree10',\n    label: 'props',\n    template: '<attr-table :data=\"tableData\"></attr-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"label\",\n            column2: \"treeDemo.samples10.row1column2\",\n            column3: \"String / Function(data, node)\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"children\",\n            column2: \"treeDemo.samples10.row2column2\",\n            column3: \"String / Function(data, node)\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"disabled\",\n            column2: \"treeDemo.samples10.row3column2\",\n            column3: \"Boolean / Function(data, node)\",\n            column4: \"\",\n            column5: \"\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'tree11',\n    label: 'Methods',\n    template: '<method-table :data=\"tableData\"></method-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"filter\",\n            column2: \"treeDemo.samples11.row1column2\",\n            column3: \"treeDemo.samples11.row1column3\"\n          }, {\n            column1: \"getCheckedNodes\",\n            column2: \"treeDemo.samples11.row2column2\",\n            column3: \"treeDemo.samples11.row2column3\"\n          }, {\n            column1: \"setCheckedNodes\",\n            column2: \"treeDemo.samples11.row3column2\",\n            column3: \"treeDemo.samples11.row3column3\"\n          }, {\n            column1: \"getCheckedKeys\",\n            column2: \"treeDemo.samples11.row4column2\",\n            column3: \"treeDemo.samples11.row4column3\"\n          }, {\n            column1: \"setCheckedKeys\",\n            column2: \"treeDemo.samples11.row5column2\",\n            column3: \"treeDemo.samples11.row5column3\"\n          }, {\n            column1: \"setChecked\",\n            column2: \"treeDemo.samples11.row6column2\",\n            column3: \"treeDemo.samples11.row6column3\"\n          }, {\n            column1: \"getCurrentNode\",\n            column2: \"treeDemo.samples11.row7column2\",\n            column3: \"\"\n          }, {\n            column1: \"getCurrentKey\",\n            column2: \"treeDemo.samples11.row8column2\",\n            column3: \"\"\n          }, {\n            column1: \"setCurrentNode\",\n            column2: \"treeDemo.samples11.row9column2\",\n            column3: \"(node)\"\n          }, {\n            column1: \"setCurrentKey\",\n            column2: \"treeDemo.samples11.row10column2\",\n            column3: \"(key)\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'tree12',\n    label: 'Events',\n    template: '<event-table :data=\"tableData\"></event-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"node-click\",\n            column2: \"treeDemo.samples12.row1column2\",\n            column3: \"treeDemo.samples12.row1column3\"\n          }, {\n            column1: \"check-change\",\n            column2: \"treeDemo.samples12.row2column2\",\n            column3: \"treeDemo.samples12.row2column3\"\n          }, {\n            column1: \"current-change\",\n            column2: \"treeDemo.samples12.row3column2\",\n            column3: \"treeDemo.samples12.row3column3\"\n          }, {\n            column1: \"node-expand\",\n            column2: \"treeDemo.samples12.row4column2\",\n            column3: \"treeDemo.samples12.row4column3\"\n          }, {\n            column1: \"node-collapse\",\n            column2: \"treeDemo.samples12.row5column2\",\n            column3: \"treeDemo.samples12.row5column3\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }]\n};\nmodule.exports = treeDemo;\n","'use strict';\nvar uploadDemo = {\n  path: '/upload',\n  name: 'upload',\n  head: {\n    label: 'uploadDemo.label',\n    description: 'uploadDemo.description'\n  },\n  samples: [{\n    id: 'upload1',\n    label: 'uploadDemo.samples1.label',\n    description: 'uploadDemo.samples1.description',\n    template: '<div class=\"source\"><vue-upload :on-preview=\"handlePreview\" :on-remove=\"handleRemove\" :before-upload=\"beforeAvatarUpload\"><vue-button size=\"small\" type=\"primary\">Click to upload</vue-button><div slot=\"tip\" class=\"vue-upload__tip\">Text files with a size less than than 2MB</div></vue-upload></div>',\n    parameter: {\n      methods: {\n        handleRemove: function (file, fileList) {\n          this.$notify({\n            title: 'Removed File: ' + file.name\n          });\n          this.$notify({\n            title: 'File List: ' + fileList.map(function (file) {\n              return file.name\n            }).join(', ')\n          });\n        },\n        handlePreview: function (file) {\n          this.$notify({\n            title: 'Select File: ' +\n              file.name\n          });\n        },\n        beforeAvatarUpload: function (file) {\n          var isTXT = file.type === 'text/plain';\n          var isLt2M = file.size / 1024 / 1024 < 2;\n          if (!isTXT) {\n            this.$notify.error({\n              message: 'Must be a text file'\n            });\n          }\n          if (!isLt2M) {\n            this.$notify.error({\n              message: 'File with a size less than 2MB'\n            });\n          }\n          return isTXT && isLt2M;\n        }\n      }\n    },\n    code: '<vue-upload :on-preview=\"handlePreview\" :on-remove=\"handleRemove\" :before-upload=\"beforeAvatarUpload\">\\n' +\n      '  <vue-button size=\"small\" type=\"primary\">Click to upload</vue-button>\\n' +\n      '  <div slot=\"tip\" class=\"vue-upload__tip\">Text files with a size less than than 2MB</div>\\n' +\n      '</vue-upload>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    methods: {\\n' +\n      '      handleRemove: function(file, fileList) {\\n' +\n      '        this.$notify({title: \\'Removed File: \\' + file.name});\\n' +\n      '        this.$notify({title: \\'File List: \\' + fileList.map(function(file){return file.name}).join(\\', \\')});\\n' +\n      '      },\\n' +\n      '      handlePreview: function(file) {\\n' +\n      '        this.$notify({title: \\'Select File: \\' + file.name});\\n' +\n      '      },\\n' +\n      '      beforeAvatarUpload: function(file, fileList) {\\n' +\n      '        var isTXT = file.type === \"text/plain\";\\n' +\n      '        var isLt2M = file.size / 1024 / 1024 < 2;\\n' +\n      '        if (!isTXT) {\\n' +\n      '          this.$notify.error(\\'Must be a text file\\');\\n' +\n      '        }\\n' +\n      '        if (!isLt2M) {\\n' +\n      '          this.$notify.error(\\'File with a size less than 2MB\\');\\n' +\n      '        }\\n' +\n      '        return isTXT && isLt2M;\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'upload2',\n    label: 'uploadDemo.samples2.label',\n    description: 'uploadDemo.samples2.description',\n    template: '<div class=\"source\"><vue-upload list-type=\"picture-card\" :on-preview=\"handlePictureCardPreview\" :before-upload=\"beforeAvatarUpload\"><i class=\"vue-icon-plus\"></i></vue-upload><vue-dialog v-model=\"dialogVisible\" show-close><img width=\"100%\" :src=\"dialogImageUrl\"></vue-dialog></div>',\n    parameter: {\n      data: function () {\n        return {\n          dialogImageUrl: '',\n          dialogVisible: false\n        }\n      },\n      methods: {\n        handlePictureCardPreview: function (file) {\n          this.dialogImageUrl = file.url;\n          this.dialogVisible = true;\n        },\n        beforeAvatarUpload: function (file) {\n          var isJPG = file.type === 'image/jpeg';\n          if (!isJPG) {\n            this.$notify.error({\n              message: 'Must be a JPG file!'\n            });\n          }\n          return isJPG;\n        }\n      }\n    },\n    code: '<vue-upload list-type=\"picture-card\" :on-preview=\"handlePictureCardPreview\" :before-upload=\"beforeAvatarUpload\">\\n' +\n      '  <i class=\"vue-icon-plus\"></i>\\n' +\n      '</vue-upload>\\n' +\n      '<vue-dialog v-model=\"dialogVisible\" show-close>\\n' +\n      '  <img width=\"100%\" :src=\"dialogImageUrl\">\\n' +\n      '</vue-dialog>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function() {\\n' +\n      '      return {\\n' +\n      '        dialogImageUrl: \"\",\\n' +\n      '        dialogVisible: false\\n' +\n      '      }\\n' +\n      '    },\\n' +\n      '    methods: {\\n' +\n      '      handlePictureCardPreview: function(file) {\\n' +\n      '        this.dialogImageUrl = file.url;\\n' +\n      '        this.dialogVisible = true;\\n' +\n      '      },\\n' +\n      '      beforeAvatarUpload: function(file, fileList) {\\n' +\n      '        var isJPG = file.type === \"image/jpeg\";\\n' +\n      '        if (!isJPG) {\\n' +\n      '          this.$notify.error({message: \\'Must be a JPG file!\\'});\\n' +\n      '        }\\n' +\n      '        return isJPG;\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'upload3',\n    label: 'uploadDemo.samples3.label',\n    description: 'uploadDemo.samples3.description',\n    template: '<div class=\"source\"><vue-upload list-type=\"picture\" :on-preview=\"handlePreview\" :on-remove=\"handleRemove\" :before-upload=\"beforeAvatarUpload\"><vue-button size=\"small\" type=\"primary\">Click to upload</vue-button><div slot=\"tip\" class=\"vue-upload__tip\">JPG files with a size less than than 2MB</div></vue-upload></div>',\n    parameter: {\n      methods: {\n        handleRemove: function (file, fileList) {\n          this.$notify({\n            title: 'Removed File: ' + file.name\n          });\n          this.$notify({\n            title: 'File List: ' + fileList.map(function (file) {\n              return file.name\n            }).join(', ')\n          });\n        },\n        handlePreview: function (file) {\n          this.$notify({\n            title: 'Select File: ' + file.name\n          });\n        },\n        beforeAvatarUpload: function (file) {\n          var isJPG = file.type === 'image/jpeg';\n          var isLt2M = file.size / 1024 / 1024 < 2;\n          if (!isJPG) {\n            this.$notify.error({\n              message: 'Must be a JPG file!'\n            });\n          }\n          if (!isLt2M) {\n            this.$notify.error({\n              message: 'File with a size less than 2MB'\n            });\n          }\n          return isJPG && isLt2M;\n        }\n      }\n    },\n    code: '<vue-upload list-type=\"picture\" :on-preview=\"handlePreview\" :on-remove=\"handleRemove\" :before-upload=\"beforeAvatarUpload\">\\n' +\n      '  <vue-button size=\"small\" type=\"primary\">Click to upload</vue-button>\\n' +\n      '  <div slot=\"tip\" class=\"vue-upload__tip\">JPG files with a size less than than 2MB</div>\\n' +\n      '</vue-upload>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    methods: {\\n' +\n      '      handleRemove: function(file, fileList) {\\n' +\n      '        this.$notify({title: \\'Removed File: \\' + file.name});\\n' +\n      '        this.$notify({title: \\'File List: \\' + fileList.map(function(file){return file.name}).join(\\', \\')});\\n' +\n      '      },\\n' +\n      '      handlePreview: function(file) {\\n' +\n      '        this.$notify({title: \\'Select File: \\' + file.name});\\n' +\n      '      },\\n' +\n      '      beforeAvatarUpload: function(file, fileList) {\\n' +\n      '        var isJPG = file.type === \"image/jpeg\";\\n' +\n      '        var isLt2M = file.size / 1024 / 1024 < 2;\\n' +\n      '        if (!isJPG) {\\n' +\n      '          this.$notify.error(\\'Must be a JPG file\\');\\n' +\n      '        }\\n' +\n      '        if (!isLt2M) {\\n' +\n      '          this.$notify.error(\\'File with a size less than 2MB\\');\\n' +\n      '        }\\n' +\n      '        return isJPG && isLt2M;\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'upload4',\n    label: 'uploadDemo.samples4.label',\n    description: 'uploadDemo.samples4.description',\n    template: '<div class=\"source\"><vue-upload :on-change=\"handleChange\" :file-list=\"fileList\"><vue-button size=\"small\" type=\"primary\">Click to upload</vue-button></vue-upload></div>',\n    parameter: {\n      data: function () {\n        return {\n          fileList: []\n        }\n      },\n      methods: {\n        handleChange: function (file, fileList) {\n          this.fileList = fileList.slice(-1);\n          this.$notify({\n            title: 'File List: ' + fileList.map(function (file) {\n              return file.name\n            }).join(', ')\n          });\n        }\n      }\n    },\n    code: '<vue-upload :on-change=\"handleChange\" :file-list=\"fileList\">\\n' +\n      '  <vue-button size=\"small\" type=\"primary\">Click to upload</vue-button>\\n' +\n      '</vue-upload>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    data: function() {\\n' +\n      '      return {\\n' +\n      '        fileList: []\\n' +\n      '      }\\n' +\n      '    },\\n' +\n      '    methods: {\\n' +\n      '      handleChange: function(file, fileList) {\\n' +\n      '        this.fileList = fileList.slice(-1);\\n' +\n      '        this.$notify({title: \\'File List: \\' + fileList.map(function(file){return file.name}).join(\\', \\')});\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'upload5',\n    label: 'uploadDemo.samples5.label',\n    description: 'uploadDemo.samples5.description',\n    template: '<div class=\"source\"><vue-upload drag multiple><i class=\"vue-icon-upload\"></i><div class=\"vue-upload__text\">Drop file here or <em>click to upload</em></div></vue-upload></div>',\n    code: '<vue-upload drag multiple>\\n' +\n      '  <i class=\"vue-icon-upload\"></i>\\n' +\n      '  <div class=\"vue-upload__text\">Drop file here or <em>click to upload</em></div>\\n' +\n      '</vue-upload>'\n  }, {\n    id: 'upload6',\n    label: 'uploadDemo.samples6.label',\n    template: '<div class=\"source\"><vue-upload ref=\"upload\" :auto-upload=\"false\"><vue-button slot=\"trigger\" size=\"small\" type=\"primary\">select file</vue-button><vue-button style=\"margin-left: 10px;\" size=\"small\" type=\"success\" @click=\"submitUpload\">upload to server</vue-button></vue-upload></div>',\n    parameter: {\n      methods: {\n        submitUpload: function () {\n          this.$refs.upload.submit();\n        }\n      }\n    },\n    code: '<vue-upload ref=\"upload\" :auto-upload=\"false\">\\n' +\n      '  <vue-button slot=\"trigger\" size=\"small\" type=\"primary\">select file</vue-button>\\n' +\n      '  <vue-button style=\"margin-left: 10px;\" size=\"small\" type=\"success\" @click=\"submitUpload\">upload to server</vue-button>\\n' +\n      '</vue-upload>\\n\\n' +\n      '<script>\\n' +\n      '  new Vue({\\n' +\n      '    methods: {\\n' +\n      '      submitUpload: function() {\\n' +\n      '        this.$refs.upload.submit();\\n' +\n      '      }\\n' +\n      '    }\\n' +\n      '  }).$mount();\\n' +\n      '</script>'\n  }, {\n    id: 'upload7',\n    label: 'Attributes',\n    template: '<attr-table :data=\"tableData\"></attr-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"action\",\n            column2: \"uploadDemo.samples7.row1column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"window.location.href\"\n          }, {\n            column1: \"headers\",\n            column2: \"uploadDemo.samples7.row2column2\",\n            column3: \"Object\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"multiple\",\n            column2: \"uploadDemo.samples7.row3column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"max\",\n            column2: \"uploadDemo.samples7.row22column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"data\",\n            column2: \"uploadDemo.samples7.row4column2\",\n            column3: \"Object\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"name\",\n            column2: \"uploadDemo.samples7.row5column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"file\"\n          }, {\n            column1: \"with-credentials\",\n            column2: \"uploadDemo.samples7.row6column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"show-file-list\",\n            column2: \"uploadDemo.samples7.row7column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"true\"\n          }, {\n            column1: \"drag\",\n            column2: \"uploadDemo.samples7.row8column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }, {\n            column1: \"accept\",\n            column2: \"uploadDemo.samples7.row9column2\",\n            column3: \"String\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"on-preview\",\n            column2: \"uploadDemo.samples7.row10column2\",\n            column3: \"Function(file)\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"on-remove\",\n            column2: \"uploadDemo.samples7.row11column2\",\n            column3: \"Function(file, fileList)\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"on-success\",\n            column2: \"uploadDemo.samples7.row12column2\",\n            column3: \"Function(response, file)\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"on-error\",\n            column2: \"uploadDemo.samples7.row13column2\",\n            column3: \"Function(response, file)\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"on-progress\",\n            column2: \"uploadDemo.samples7.row14column2\",\n            column3: \"Function(response, file)\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"on-change\",\n            column2: \"uploadDemo.samples7.row15column2\",\n            column3: \"Function(file, fileList)\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"before-upload\",\n            column2: \"uploadDemo.samples7.row16column2\",\n            column3: \"Function(file)\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"list-type\",\n            column2: \"uploadDemo.samples7.row17column2\",\n            column3: \"String\",\n            column4: \"text, picture, picture-card\",\n            column5: \"text\"\n          }, {\n            column1: \"auto-upload\",\n            column2: \"uploadDemo.samples7.row18column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"true\"\n          }, {\n            column1: \"file-list\",\n            column2: \"uploadDemo.samples7.row19column2\",\n            column3: \"Array\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"http-request\",\n            column2: \"uploadDemo.samples7.row20column2\",\n            column3: \"Function\",\n            column4: \"\",\n            column5: \"\"\n          }, {\n            column1: \"disabled\",\n            column2: \"uploadDemo.samples7.row21column2\",\n            column3: \"Boolean\",\n            column4: \"\",\n            column5: \"false\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }, {\n    id: 'upload8',\n    label: 'Methods',\n    template: '<method-table :data=\"tableData\"></method-table>',\n    parameter: {\n      data: function () {\n        return {\n          tableData: [{\n            column1: \"clearFiles\",\n            column2: \"uploadDemo.samples8.row1column2\",\n            column3: \"\"\n          }]\n        }\n      }\n    },\n    notshowmeta: true\n  }]\n};\nmodule.exports = uploadDemo;\n","'use strict';\nvar XRegExp = function (pattern, flags) {\n  var output = [], currScope = XRegExp.OUTSIDE_CLASS, pos = 0, context, tokenResult, match, chr, regex;\n  if (XRegExp.isRegExp(pattern)) {\n    if (flags !== undefined)\n      throw TypeError(\"can't supply flags when constructing one RegExp from another\");\n    return clone(pattern);\n  }\n  if (isInsideConstructor)\n    throw Error(\"can't call the XRegExp constructor within token definition functions\");\n  flags = flags || \"\";\n  context = {\n    hasNamedCapture: false,\n    captureNames: [],\n    hasFlag: function (flag) {\n      return flags.indexOf(flag) > -1;\n    },\n    setFlag: function (flag) {\n      flags += flag;\n    }\n  };\n  while (pos < pattern.length) {\n    tokenResult = runTokens(pattern, pos, currScope, context);\n    if (tokenResult) {\n      output.push(tokenResult.output);\n      pos += (tokenResult.match[0].length || 1);\n    } else {\n      if (match = real.exec.call(nativeTokens[currScope], pattern.slice(pos))) {\n        output.push(match[0]);\n        pos += match[0].length;\n      } else {\n        chr = pattern.charAt(pos);\n        if (chr === \"[\")\n          currScope = XRegExp.INSIDE_CLASS;\n        else if (chr === \"]\")\n          currScope = XRegExp.OUTSIDE_CLASS;\n        output.push(chr);\n        pos++;\n      }\n    }\n  }\n  regex = RegExp(output.join(\"\"), real.replace.call(flags, flagClip, \"\"));\n  regex._xregexp = {\n    source: pattern,\n    captureNames: context.hasNamedCapture ? context.captureNames : null\n  };\n  return regex;\n};\nXRegExp.INSIDE_CLASS = 1;\nXRegExp.OUTSIDE_CLASS = 2;\nvar replacementToken = /\\$(?:(\\d\\d?|[$&`'])|{([$\\w]+)})/g\n  , flagClip = /[^gimy]+|([\\s\\S])(?=[\\s\\S]*\\1)/g\n  , quantifier = /^(?:[?*+]|{\\d+(?:,\\d*)?})\\??/\n  , isInsideConstructor = false\n  , tokens = []\n  , real = {\n    exec: RegExp.prototype.exec,\n    test: RegExp.prototype.test,\n    match: String.prototype.match,\n    replace: String.prototype.replace,\n    split: String.prototype.split\n  }\n  , compliantExecNpcg = real.exec.call(/()??/, \"\")[1] === undefined\n  , compliantLastIndexIncrement = function () {\n    var x = /^/g;\n    real.test.call(x, \"\");\n    return !x.lastIndex;\n  }()\n  , compliantLastIndexReset = function () {\n    var x = /x/g;\n    real.replace.call(\"x\", x, \"\");\n    return !x.lastIndex;\n  }()\n  , hasNativeY = RegExp.prototype.sticky !== undefined\n  , nativeTokens = {};\nnativeTokens[XRegExp.INSIDE_CLASS] = /^(?:\\\\(?:[0-3][0-7]{0,2}|[4-7][0-7]?|x[\\dA-Fa-f]{2}|u[\\dA-Fa-f]{4}|c[A-Za-z]|[\\s\\S]))/;\nnativeTokens[XRegExp.OUTSIDE_CLASS] = /^(?:\\\\(?:0(?:[0-3][0-7]{0,2}|[4-7][0-7]?)?|[1-9]\\d*|x[\\dA-Fa-f]{2}|u[\\dA-Fa-f]{4}|c[A-Za-z]|[\\s\\S])|\\(\\?[:=!]|[?*+]\\?|{\\d+(?:,\\d*)?}\\??)/;\nXRegExp.addToken = function (regex, handler, scope, trigger) {\n  tokens.push({\n    pattern: clone(regex, \"g\" + (hasNativeY ? \"y\" : \"\")),\n    handler: handler,\n    scope: scope || XRegExp.OUTSIDE_CLASS,\n    trigger: trigger || null\n  });\n}\nXRegExp.cache = function (pattern, flags) {\n  var key = pattern + \"/\" + (flags || \"\");\n  return XRegExp.cache[key] || (XRegExp.cache[key] = XRegExp(pattern, flags));\n}\nXRegExp.copyAsGlobal = function (regex) {\n  return clone(regex, \"g\");\n}\nXRegExp.escape = function (str) {\n  return str.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\");\n}\nXRegExp.execAt = function (str, regex, pos, anchored) {\n  regex = clone(regex, \"g\" + ((anchored && hasNativeY) ? \"y\" : \"\"));\n  regex.lastIndex = pos = pos || 0;\n  var match = regex.exec(str);\n  if (anchored)\n    return (match && match.index === pos) ? match : null;\n  else\n    return match;\n}\nXRegExp.freezeTokens = function () {\n  XRegExp.addToken = function () {\n    throw Error(\"can't run addToken after freezeTokens\");\n  }\n}\nXRegExp.isRegExp = function (o) {\n  return Object.prototype.toString.call(o) === \"[object RegExp]\";\n}\nXRegExp.iterate = function (str, origRegex, callback, context) {\n  var regex = clone(origRegex, \"g\"), i = -1, match;\n  while (match = regex.exec(str)) {\n    callback.call(context, match, ++i, str, regex);\n    if (regex.lastIndex === match.index)\n      regex.lastIndex++;\n  }\n  if (origRegex.global)\n    origRegex.lastIndex = 0;\n}\nXRegExp.matchChain = function (str, chain) {\n  return function recurseChain(values, level) {\n    var item = chain[level].regex ? chain[level] : {\n      regex: chain[level]\n    }, regex = clone(item.regex, \"g\"), matches = [], i;\n    for (i = 0; i < values.length; i++) {\n      XRegExp.iterate(values[i], regex, function (match) {\n        matches.push(item.backref ? (match[item.backref] || \"\") : match[0]);\n      });\n    }\n    return ((level === chain.length - 1) || !matches.length) ? matches : recurseChain(matches, level + 1);\n  }([str], 0);\n}\nRegExp.prototype.apply = function (context, args) {\n  return this.exec(args[0]);\n}\nRegExp.prototype.call = function (context, str) {\n  return this.exec(str);\n}\nRegExp.prototype.exec = function (str) {\n  var match = real.exec.apply(this, arguments), name, r2;\n  if (match) {\n    if (!compliantExecNpcg && match.length > 1 && indexOf(match, \"\") > -1) {\n      r2 = RegExp(this.source, real.replace.call(getNativeFlags(this), \"g\", \"\"));\n      real.replace.call(str.slice(match.index), r2, function () {\n        for (var i = 1; i < arguments.length - 2; i++) {\n          if (arguments[i] === undefined)\n            match[i] = undefined;\n        }\n      });\n    }\n    if (this._xregexp && this._xregexp.captureNames) {\n      for (var i = 1; i < match.length; i++) {\n        name = this._xregexp.captureNames[i - 1];\n        if (name)\n          match[name] = match[i];\n      }\n    }\n    if (!compliantLastIndexIncrement && this.global && !match[0].length && (this.lastIndex > match.index))\n      this.lastIndex--;\n  }\n  return match;\n}\nif (!compliantLastIndexIncrement) {\n  RegExp.prototype.test = function (str) {\n    var match = real.exec.call(this, str);\n    if (match && this.global && !match[0].length && (this.lastIndex > match.index))\n      this.lastIndex--;\n    return !!match;\n  }\n}\nString.prototype.match = function (regex) {\n  if (!XRegExp.isRegExp(regex))\n    regex = RegExp(regex);\n  if (regex.global) {\n    var result = real.match.apply(this, arguments);\n    regex.lastIndex = 0;\n    return result;\n  }\n  return regex.exec(this);\n}\nString.prototype.replace = function (search, replacement) {\n  var isRegex = XRegExp.isRegExp(search), captureNames, result, str;\n  if (isRegex && typeof replacement.valueOf() === \"string\" && replacement.indexOf(\"${\") === -1 && compliantLastIndexReset)\n    return real.replace.apply(this, arguments);\n  if (!isRegex)\n    search = search + \"\";\n  else if (search._xregexp)\n    captureNames = search._xregexp.captureNames;\n  if (typeof replacement === \"function\") {\n    result = real.replace.call(this, search, function () {\n      if (captureNames) {\n        arguments[0] = new String(arguments[0]);\n        for (var i = 0; i < captureNames.length; i++) {\n          if (captureNames[i])\n            arguments[0][captureNames[i]] = arguments[i + 1];\n        }\n      }\n      if (isRegex && search.global)\n        search.lastIndex = arguments[arguments.length - 2] + arguments[0].length;\n      return replacement.apply(null, arguments);\n    });\n  } else {\n    str = this + \"\";\n    result = real.replace.call(str, search, function () {\n      var args = arguments;\n      return real.replace.call(replacement, replacementToken, function ($0, $1, $2) {\n        if ($1) {\n          switch ($1) {\n            case \"$\":\n              return \"$\";\n            case \"&\":\n              return args[0];\n            case \"`\":\n              return args[args.length - 1].slice(0, args[args.length - 2]);\n            case \"'\":\n              return args[args.length - 1].slice(args[args.length - 2] + args[0].length);\n            default:\n              var literalNumbers = \"\";\n              $1 = +$1;\n              if (!$1)\n                return $0;\n              while ($1 > args.length - 3) {\n                literalNumbers = String.prototype.slice.call($1, -1) + literalNumbers;\n                $1 = Math.floor($1 / 10);\n              }\n              return ($1 ? args[$1] || \"\" : \"$\") + literalNumbers;\n          }\n        } else {\n          var n = +$2;\n          if (n <= args.length - 3)\n            return args[n];\n          n = captureNames ? indexOf(captureNames, $2) : -1;\n          return n > -1 ? args[n + 1] : $0;\n        }\n      });\n    });\n  }\n  if (isRegex && search.global)\n    search.lastIndex = 0;\n  return result;\n}\nString.prototype.split = function (s, limit) {\n  if (!XRegExp.isRegExp(s))\n    return real.split.apply(this, arguments);\n  var str = this + \"\", output = [], lastLastIndex = 0, match, lastLength;\n  if (limit === undefined || +limit < 0) {\n    limit = Infinity;\n  } else {\n    limit = Math.floor(+limit);\n    if (!limit)\n      return [];\n  }\n  s = XRegExp.copyAsGlobal(s);\n  while (match = s.exec(str)) {\n    if (s.lastIndex > lastLastIndex) {\n      output.push(str.slice(lastLastIndex, match.index));\n      if (match.length > 1 && match.index < str.length)\n        Array.prototype.push.apply(output, match.slice(1));\n      lastLength = match[0].length;\n      lastLastIndex = s.lastIndex;\n      if (output.length >= limit)\n        break;\n    }\n    if (s.lastIndex === match.index)\n      s.lastIndex++;\n  }\n  if (lastLastIndex === str.length) {\n    if (!real.test.call(s, \"\") || lastLength)\n      output.push(\"\");\n  } else {\n    output.push(str.slice(lastLastIndex));\n  }\n  return output.length > limit ? output.slice(0, limit) : output;\n}\nfunction clone(regex, additionalFlags) {\n  if (!XRegExp.isRegExp(regex))\n    throw TypeError(\"type RegExp expected\");\n  var x = regex._xregexp;\n  regex = XRegExp(regex.source, getNativeFlags(regex) + (additionalFlags || \"\"));\n  if (x) {\n    regex._xregexp = {\n      source: x.source,\n      captureNames: x.captureNames ? x.captureNames.slice(0) : null\n    };\n  }\n  return regex;\n}\nfunction getNativeFlags(regex) {\n  return (regex.global ? \"g\" : \"\") + (regex.ignoreCase ? \"i\" : \"\") + (regex.multiline ? \"m\" : \"\") + (regex.extended ? \"x\" : \"\") + (regex.sticky ? \"y\" : \"\");\n}\nfunction runTokens(pattern, index, scope, context) {\n  var i = tokens.length, result, match, t;\n  isInsideConstructor = true;\n  try {\n    while (i--) {\n      t = tokens[i];\n      if ((scope & t.scope) && (!t.trigger || t.trigger.call(context))) {\n        t.pattern.lastIndex = index;\n        match = t.pattern.exec(pattern);\n        if (match && match.index === index) {\n          result = {\n            output: t.handler.call(context, match, scope),\n            match: match\n          };\n          break;\n        }\n      }\n    }\n  } catch (err) {\n    throw err;\n  } finally {\n    isInsideConstructor = false;\n  }\n  return result;\n}\nfunction indexOf(array, item, from) {\n  if (Array.prototype.indexOf)\n    return array.indexOf(item, from);\n  for (var i = from || 0; i < array.length; i++) {\n    if (array[i] === item)\n      return i;\n  }\n  return -1;\n}\nXRegExp.addToken(/\\(\\?#[^)]*\\)/, function (match) {\n  return real.test.call(quantifier, match.input.slice(match.index + match[0].length)) ? \"\" : \"(?:)\";\n});\nXRegExp.addToken(/\\((?!\\?)/, function () {\n  this.captureNames.push(null);\n  return \"(\";\n});\nXRegExp.addToken(/\\(\\?<([$\\w]+)>/, function (match) {\n  this.captureNames.push(match[1]);\n  this.hasNamedCapture = true;\n  return \"(\";\n});\nXRegExp.addToken(/\\\\k<([\\w$]+)>/, function (match) {\n  var index = indexOf(this.captureNames, match[1]);\n  return index > -1 ? \"\\\\\" + (index + 1) + (isNaN(match.input.charAt(match.index + match[0].length)) ? \"\" : \"(?:)\") : match[0];\n});\nXRegExp.addToken(/\\[\\^?]/, function (match) {\n  return match[0] === \"[]\" ? \"\\\\b\\\\B\" : \"[\\\\s\\\\S]\";\n});\nXRegExp.addToken(/^\\(\\?([imsx]+)\\)/, function (match) {\n  this.setFlag(match[1]);\n  return \"\";\n});\nXRegExp.addToken(/(?:\\s+|#.*)+/, function (match) {\n  return real.test.call(quantifier, match.input.slice(match.index + match[0].length)) ? \"\" : \"(?:)\";\n}, XRegExp.OUTSIDE_CLASS, function () {\n  return this.hasFlag(\"x\");\n});\nXRegExp.addToken(/\\./, function () {\n  return \"[\\\\s\\\\S]\";\n}, XRegExp.OUTSIDE_CLASS, function () {\n  return this.hasFlag(\"s\");\n});\nmodule.exports = XRegExp;","var map = {\n\t\"./advanced/ColumnDrag.vue\": \"./demo/XtableDemo/advanced/ColumnDrag.vue\",\n\t\"./advanced/CopyPaste.vue\": \"./demo/XtableDemo/advanced/CopyPaste.vue\",\n\t\"./advanced/Custom.vue\": \"./demo/XtableDemo/advanced/Custom.vue\",\n\t\"./advanced/CustomStorage.vue\": \"./demo/XtableDemo/advanced/CustomStorage.vue\",\n\t\"./advanced/CustomlWidthStorage.vue\": \"./demo/XtableDemo/advanced/CustomlWidthStorage.vue\",\n\t\"./advanced/Dynamic.vue\": \"./demo/XtableDemo/advanced/Dynamic.vue\",\n\t\"./advanced/Event.vue\": \"./demo/XtableDemo/advanced/Event.vue\",\n\t\"./advanced/Expand.vue\": \"./demo/XtableDemo/advanced/Expand.vue\",\n\t\"./advanced/Export.vue\": \"./demo/XtableDemo/advanced/Export.vue\",\n\t\"./advanced/FixedType.vue\": \"./demo/XtableDemo/advanced/FixedType.vue\",\n\t\"./advanced/Footer.vue\": \"./demo/XtableDemo/advanced/Footer.vue\",\n\t\"./advanced/FooterSpan.vue\": \"./demo/XtableDemo/advanced/FooterSpan.vue\",\n\t\"./advanced/Highlight.vue\": \"./demo/XtableDemo/advanced/Highlight.vue\",\n\t\"./advanced/Import.vue\": \"./demo/XtableDemo/advanced/Import.vue\",\n\t\"./advanced/ManualFilter.vue\": \"./demo/XtableDemo/advanced/ManualFilter.vue\",\n\t\"./advanced/Menu.vue\": \"./demo/XtableDemo/advanced/Menu.vue\",\n\t\"./advanced/MenuPrivilege.vue\": \"./demo/XtableDemo/advanced/MenuPrivilege.vue\",\n\t\"./advanced/Page.vue\": \"./demo/XtableDemo/advanced/Page.vue\",\n\t\"./advanced/Print.vue\": \"./demo/XtableDemo/advanced/Print.vue\",\n\t\"./advanced/RowDrag.vue\": \"./demo/XtableDemo/advanced/RowDrag.vue\",\n\t\"./advanced/Search.vue\": \"./demo/XtableDemo/advanced/Search.vue\",\n\t\"./advanced/Span.vue\": \"./demo/XtableDemo/advanced/Span.vue\",\n\t\"./advanced/SpanRow.vue\": \"./demo/XtableDemo/advanced/SpanRow.vue\",\n\t\"./advanced/Template.vue\": \"./demo/XtableDemo/advanced/Template.vue\",\n\t\"./advanced/Toolbar.vue\": \"./demo/XtableDemo/advanced/Toolbar.vue\",\n\t\"./base/AutoHeight.vue\": \"./demo/XtableDemo/base/AutoHeight.vue\",\n\t\"./base/Basic.vue\": \"./demo/XtableDemo/base/Basic.vue\",\n\t\"./base/Border.vue\": \"./demo/XtableDemo/base/Border.vue\",\n\t\"./base/Current.vue\": \"./demo/XtableDemo/base/Current.vue\",\n\t\"./base/DynamicStyle.vue\": \"./demo/XtableDemo/base/DynamicStyle.vue\",\n\t\"./base/Empty.vue\": \"./demo/XtableDemo/base/Empty.vue\",\n\t\"./base/Filter.vue\": \"./demo/XtableDemo/base/Filter.vue\",\n\t\"./base/Fixed.vue\": \"./demo/XtableDemo/base/Fixed.vue\",\n\t\"./base/FixedFull.vue\": \"./demo/XtableDemo/base/FixedFull.vue\",\n\t\"./base/Format.vue\": \"./demo/XtableDemo/base/Format.vue\",\n\t\"./base/Group.vue\": \"./demo/XtableDemo/base/Group.vue\",\n\t\"./base/Header.vue\": \"./demo/XtableDemo/base/Header.vue\",\n\t\"./base/HeaderHighlight.vue\": \"./demo/XtableDemo/base/HeaderHighlight.vue\",\n\t\"./base/Height.vue\": \"./demo/XtableDemo/base/Height.vue\",\n\t\"./base/Index.vue\": \"./demo/XtableDemo/base/Index.vue\",\n\t\"./base/Loading.vue\": \"./demo/XtableDemo/base/Loading.vue\",\n\t\"./base/MaxHeight.vue\": \"./demo/XtableDemo/base/MaxHeight.vue\",\n\t\"./base/Overflow.vue\": \"./demo/XtableDemo/base/Overflow.vue\",\n\t\"./base/Radio.vue\": \"./demo/XtableDemo/base/Radio.vue\",\n\t\"./base/Resizable.vue\": \"./demo/XtableDemo/base/Resizable.vue\",\n\t\"./base/Selection.vue\": \"./demo/XtableDemo/base/Selection.vue\",\n\t\"./base/Size.vue\": \"./demo/XtableDemo/base/Size.vue\",\n\t\"./base/Sort.vue\": \"./demo/XtableDemo/base/Sort.vue\",\n\t\"./base/Stripe.vue\": \"./demo/XtableDemo/base/Stripe.vue\",\n\t\"./base/Style.vue\": \"./demo/XtableDemo/base/Style.vue\",\n\t\"./edit/AutoClear.vue\": \"./demo/XtableDemo/edit/AutoClear.vue\",\n\t\"./edit/CascadingSelect.vue\": \"./demo/XtableDemo/edit/CascadingSelect.vue\",\n\t\"./edit/CellDisable.vue\": \"./demo/XtableDemo/edit/CellDisable.vue\",\n\t\"./edit/CellValid.vue\": \"./demo/XtableDemo/edit/CellValid.vue\",\n\t\"./edit/Click.vue\": \"./demo/XtableDemo/edit/Click.vue\",\n\t\"./edit/DBLClick.vue\": \"./demo/XtableDemo/edit/DBLClick.vue\",\n\t\"./edit/Events.vue\": \"./demo/XtableDemo/edit/Events.vue\",\n\t\"./edit/Expand.vue\": \"./demo/XtableDemo/edit/Expand.vue\",\n\t\"./edit/Footer.vue\": \"./demo/XtableDemo/edit/Footer.vue\",\n\t\"./edit/FooterImmediately.vue\": \"./demo/XtableDemo/edit/FooterImmediately.vue\",\n\t\"./edit/Insert.vue\": \"./demo/XtableDemo/edit/Insert.vue\",\n\t\"./edit/Keyboard.vue\": \"./demo/XtableDemo/edit/Keyboard.vue\",\n\t\"./edit/Manual.vue\": \"./demo/XtableDemo/edit/Manual.vue\",\n\t\"./edit/Menu.vue\": \"./demo/XtableDemo/edit/Menu.vue\",\n\t\"./edit/Remove.vue\": \"./demo/XtableDemo/edit/Remove.vue\",\n\t\"./edit/Revert.vue\": \"./demo/XtableDemo/edit/Revert.vue\",\n\t\"./edit/RowDisable.vue\": \"./demo/XtableDemo/edit/RowDisable.vue\",\n\t\"./edit/RowValid.vue\": \"./demo/XtableDemo/edit/RowValid.vue\",\n\t\"./edit/Select.vue\": \"./demo/XtableDemo/edit/Select.vue\",\n\t\"./edit/Span.vue\": \"./demo/XtableDemo/edit/Span.vue\",\n\t\"./edit/Status.vue\": \"./demo/XtableDemo/edit/Status.vue\",\n\t\"./edit/Template.vue\": \"./demo/XtableDemo/edit/Template.vue\",\n\t\"./edit/UniqueSelect.vue\": \"./demo/XtableDemo/edit/UniqueSelect.vue\",\n\t\"./grid/Basic.vue\": \"./demo/XtableDemo/grid/Basic.vue\",\n\t\"./grid/CustomToolbar.vue\": \"./demo/XtableDemo/grid/CustomToolbar.vue\",\n\t\"./grid/Dynamic.vue\": \"./demo/XtableDemo/grid/Dynamic.vue\",\n\t\"./grid/Edit.vue\": \"./demo/XtableDemo/grid/Edit.vue\",\n\t\"./grid/Footer.vue\": \"./demo/XtableDemo/grid/Footer.vue\",\n\t\"./grid/FullEdit.vue\": \"./demo/XtableDemo/grid/FullEdit.vue\",\n\t\"./grid/FullQuery.vue\": \"./demo/XtableDemo/grid/FullQuery.vue\",\n\t\"./grid/Group.vue\": \"./demo/XtableDemo/grid/Group.vue\",\n\t\"./grid/Menu.vue\": \"./demo/XtableDemo/grid/Menu.vue\",\n\t\"./grid/Page.vue\": \"./demo/XtableDemo/grid/Page.vue\",\n\t\"./grid/PageProxy.vue\": \"./demo/XtableDemo/grid/PageProxy.vue\",\n\t\"./grid/Proxy.vue\": \"./demo/XtableDemo/grid/Proxy.vue\",\n\t\"./grid/Reverse.vue\": \"./demo/XtableDemo/grid/Reverse.vue\",\n\t\"./grid/Template.vue\": \"./demo/XtableDemo/grid/Template.vue\",\n\t\"./grid/Toolbar.vue\": \"./demo/XtableDemo/grid/Toolbar.vue\",\n\t\"./grid/Tree.vue\": \"./demo/XtableDemo/grid/Tree.vue\",\n\t\"./grid/TreeEdit.vue\": \"./demo/XtableDemo/grid/TreeEdit.vue\",\n\t\"./scroll/CellValid.vue\": \"./demo/XtableDemo/scroll/CellValid.vue\",\n\t\"./scroll/Edit.vue\": \"./demo/XtableDemo/scroll/Edit.vue\",\n\t\"./scroll/FullPartialLoad.vue\": \"./demo/XtableDemo/scroll/FullPartialLoad.vue\",\n\t\"./scroll/Highlight.vue\": \"./demo/XtableDemo/scroll/Highlight.vue\",\n\t\"./scroll/Keyboard.vue\": \"./demo/XtableDemo/scroll/Keyboard.vue\",\n\t\"./scroll/PartialLoad.vue\": \"./demo/XtableDemo/scroll/PartialLoad.vue\",\n\t\"./scroll/RowValid.vue\": \"./demo/XtableDemo/scroll/RowValid.vue\",\n\t\"./scroll/Scroll.vue\": \"./demo/XtableDemo/scroll/Scroll.vue\",\n\t\"./scroll/ScrollCols.vue\": \"./demo/XtableDemo/scroll/ScrollCols.vue\",\n\t\"./scroll/ScrollFullCols.vue\": \"./demo/XtableDemo/scroll/ScrollFullCols.vue\",\n\t\"./scroll/ScrollFullRows.vue\": \"./demo/XtableDemo/scroll/ScrollFullRows.vue\",\n\t\"./scroll/ScrollRows.vue\": \"./demo/XtableDemo/scroll/ScrollRows.vue\",\n\t\"./scroll/Template.vue\": \"./demo/XtableDemo/scroll/Template.vue\",\n\t\"./scroll/Tree.vue\": \"./demo/XtableDemo/scroll/Tree.vue\",\n\t\"./tree/Basic.vue\": \"./demo/XtableDemo/tree/Basic.vue\",\n\t\"./tree/CellValid.vue\": \"./demo/XtableDemo/tree/CellValid.vue\",\n\t\"./tree/Edit.vue\": \"./demo/XtableDemo/tree/Edit.vue\",\n\t\"./tree/Expand.vue\": \"./demo/XtableDemo/tree/Expand.vue\",\n\t\"./tree/Fixed.vue\": \"./demo/XtableDemo/tree/Fixed.vue\",\n\t\"./tree/FullEdit.vue\": \"./demo/XtableDemo/tree/FullEdit.vue\",\n\t\"./tree/GroupBy.vue\": \"./demo/XtableDemo/tree/GroupBy.vue\",\n\t\"./tree/Highlight.vue\": \"./demo/XtableDemo/tree/Highlight.vue\",\n\t\"./tree/Insert.vue\": \"./demo/XtableDemo/tree/Insert.vue\",\n\t\"./tree/Menu.vue\": \"./demo/XtableDemo/tree/Menu.vue\",\n\t\"./tree/Radio.vue\": \"./demo/XtableDemo/tree/Radio.vue\",\n\t\"./tree/RowValid.vue\": \"./demo/XtableDemo/tree/RowValid.vue\",\n\t\"./tree/Selection.vue\": \"./demo/XtableDemo/tree/Selection.vue\",\n\t\"./tree/Template.vue\": \"./demo/XtableDemo/tree/Template.vue\",\n\t\"./tree/Toolbar.vue\": \"./demo/XtableDemo/tree/Toolbar.vue\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./demo/XtableDemo sync recursive \\\\.vue$\";","export default {\"path\":\"/XtableDemo/advanced/ColumnDrag\",\"name\":\"XtableDemo.advanced.ColumnDrag\",\"head\":{\"label\":\"XtableDemo.advanced.ColumnDrag.label\",\"description\":\"XtableDemo.advanced.ColumnDrag.description\"},\"samples\":[{\"id\":\"XtableDemo.advanced.ColumnDrag.sample1\",\"label\":\"XtableDemo.advanced.ColumnDrag.sample1.label\",\"description\":\"XtableDemo.advanced.ColumnDrag.sample1.description\",\"code\":\"<vue-xtable\\n  border\\n  resizable\\n  highlight-current-row\\n  height=\\\"500\\\"\\n  :data=\\\"tableData\\\"\\n  column-drag\\n  column-key\\n  >\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\\n  },\\n\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      resizable\\n      highlight-current-row\\n      height=\\\"500\\\"\\n      :data=\\\"tableData\\\"\\n      column-drag\\n      column-key\\n      >\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\n  },\n\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/advanced/CopyPaste\",\"name\":\"XtableDemo.advanced.CopyPaste\",\"head\":{\"label\":\"XtableDemo.advanced.CopyPaste.label\",\"description\":\"XtableDemo.advanced.CopyPaste.description\"},\"samples\":[{\"id\":\"XtableDemo.advanced.CopyPaste.sample1\",\"label\":\"XtableDemo.advanced.CopyPaste.sample1.label\",\"description\":\"XtableDemo.advanced.CopyPaste.sample1.description\",\"code\":\"<vue-xtable\\n  ref=\\\"table\\\"\\n  border\\n  height=\\\"500\\\"\\n  :data=\\\"tableData\\\"\\n  :edit-config=\\\"{trigger: 'dblclick', mode: 'cell'}\\\"\\n  :mouse-config=\\\"{ selected: true, checked: true }\\\"\\n  :keyboard-config=\\\"{isArrow: true, isDel: true, isEdit: true,isCut: true, isEnter: true, isTab:true}\\\"\\n  :context-menu=\\\"cntextMenu\\\"\\n  @context-menu-click=\\\"contextMenuClick\\\"\\n  >\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" :edit-render=\\\"{name: 'input'}\\\" show-overflow></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data() {\\n    return {\\n      tableData: [],\\n      cntextMenu: {\\n        body: {\\n          options: [\\n            [\\n              {\\n                code: 'copy',\\n                name: '复制',\\n                prefixIcon: 'fa fa-copy',\\n              },\\n            ],\\n          ],\\n        },\\n      },\\n    };\\n  },\\n  created() {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50);\\n  },\\n  methods: {\\n    contextMenuClick: function(param) {\\n      var menu = param.menu;\\n      if(menu.code=='copy'){\\n        this.$refs.table.handleCopyed();     \\n      }\\n    }\\n  }\\n};)\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      ref=\\\"table\\\"\\n      border\\n      height=\\\"500\\\"\\n      :data=\\\"tableData\\\"\\n      :edit-config=\\\"{trigger: 'dblclick', mode: 'cell'}\\\"\\n      :mouse-config=\\\"{ selected: true, checked: true }\\\"\\n      :keyboard-config=\\\"{isArrow: true, isDel: true, isEdit: true,isCut: true, isEnter: true, isTab:true}\\\"\\n      :context-menu=\\\"cntextMenu\\\"\\n      @context-menu-click=\\\"contextMenuClick\\\"\\n      >\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" :edit-render=\\\"{name: 'input'}\\\" show-overflow></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data() {\n    return {\n      tableData: [],\n      cntextMenu: {\n        body: {\n          options: [\n            [\n              {\n                code: 'copy',\n                name: '复制',\n                prefixIcon: 'fa fa-copy',\n              },\n            ],\n          ],\n        },\n      },\n    };\n  },\n  created() {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50);\n  },\n  methods: {\n    contextMenuClick: function(param) {\n      var menu = param.menu;\n      if(menu.code=='copy'){\n        this.$refs.table.handleCopyed();     \n      }\n    }\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/advanced/Custom\",\"name\":\"XtableDemo.advanced.Custom\",\"head\":{\"label\":\"XtableDemo.advanced.Custom.label\",\"description\":\"XtableDemo.advanced.Custom.description\"},\"samples\":[{\"id\":\"XtableDemo.advanced.Custom.sample1\",\"label\":\"XtableDemo.advanced.Custom.sample1.label\",\"description\":\"XtableDemo.advanced.Custom.sample1.description\",\"code\":\"<div class=\\\"table-oper\\\">\\n  <span class=\\\"menu-btn\\\">\\n    <i class=\\\"icon-menu\\\"></i>\\n    <div class=\\\"menu-wrapper\\\">\\n      <template v-for=\\\"(column,index) in customColumns1\\\">\\n        <vue-checkbox\\n          v-if=\\\"column.property\\\"\\n          class=\\\"checkbox-item\\\"\\n          v-model=\\\"column.visible\\\"\\n          :key=\\\"index\\\"\\n          @change=\\\"$refs.xTable1.refreshColumn()\\\">{{ column.title }}</vue-checkbox>\\n      </template>\\n    </div>\\n  </span>\\n</div>\\n\\n<vue-xtable\\n  ref=\\\"xTable1\\\"\\n  border\\n  height=\\\"200\\\"\\n  :data=\\\"tableData\\\"\\n  :customs.sync=\\\"customColumns1\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"role\\\" title=\\\"Role\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      loading: false,\\n      tableData: [],\\n      // 如果为空则默认全部显示，也可以指定默认的隐藏列\\n      customColumns1: [\\n        {\\n          field: 'age',\\n          visible: false\\n        }\\n      ],\\n    }\\n  },\\n  created () {\\n    this.loading = true\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 20)\\n    setTimeout(() => {\\n      this.loading = false\\n    }, 300)\\n  },\\n\\n})\\n</script>\\n\\n<style>\\n.table-oper {\\n  height: 20px;\\n  width: 100%;\\n}\\n\\n.menu-btn {\\n  position: relative;\\n  width: 20px;\\n  height: 20px;\\n  float: right;\\n}\\n.menu-btn:hover .menu-wrapper {\\n  display: block;\\n}\\n\\n.menu-wrapper {\\n  display: none;\\n  position: absolute;\\n  width: 80px;\\n  top: 16px;\\n  right: 0;\\n  z-index: 9;\\n  background-color: #fff;\\n  font-size: 14px;\\n  padding: 4px 10px;\\n  user-select: none;\\n  border: 1px solid #e8eaec;\\n}\\n.menu-wrapper .checkbox-item {\\n  display: block;\\n  margin: 4px 0;\\n}\\n\\n.icon-menu {\\n  width: 16px;\\n  height: 0px;\\n  display: inline-block;\\n  margin-bottom: 16px;\\n  box-shadow: 0 6px 0 2px #606266, 0 0 0 2px #606266, 0 12px 0 2px #606266;\\n}\\n</style>\",\"template\":\"<div class=\\\"source\\\">    <div class=\\\"table-oper\\\">\\n      <span class=\\\"menu-btn\\\">\\n        <i class=\\\"icon-menu\\\"></i>\\n        <div class=\\\"menu-wrapper\\\">\\n          <template v-for=\\\"(column,index) in customColumns1\\\">\\n            <vue-checkbox\\n              v-if=\\\"column.property\\\"\\n              class=\\\"checkbox-item\\\"\\n              v-model=\\\"column.visible\\\"\\n              :key=\\\"index\\\"\\n              @change=\\\"$refs.xTable1.refreshColumn()\\\">{{ column.title }}</vue-checkbox>\\n          </template>\\n        </div>\\n      </span>\\n    </div>\\n\\n    <vue-xtable\\n      ref=\\\"xTable1\\\"\\n      border\\n      height=\\\"200\\\"\\n      :data=\\\"tableData\\\"\\n      :customs.sync=\\\"customColumns1\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"role\\\" title=\\\"Role\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      loading: false,\n      tableData: [],\n      // 如果为空则默认全部显示，也可以指定默认的隐藏列\n      customColumns1: [\n        {\n          field: 'age',\n          visible: false\n        }\n      ],\n    }\n  },\n  created () {\n    this.loading = true\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 20)\n    setTimeout(() => {\n      this.loading = false\n    }, 300)\n  },\n\n}},{\"id\":\"XtableDemo.advanced.Custom.sample2\",\"label\":\"XtableDemo.advanced.Custom.sample2.label\",\"description\":\"XtableDemo.advanced.Custom.sample2.description\",\"code\":\"<div class=\\\"table-oper\\\">\\n  <span class=\\\"menu-btn\\\">\\n    <i class=\\\"icon-menu\\\"></i>\\n    <div class=\\\"menu-wrapper\\\">\\n      <template v-for=\\\"(column,index) in customColumns2\\\">\\n        <vue-checkbox\\n          v-if=\\\"column.property\\\"\\n          class=\\\"checkbox-item\\\"\\n          v-model=\\\"column.visible\\\"\\n          :key=\\\"index\\\"\\n          @change=\\\"$refs.xTable2.refreshColumn()\\\">{{ column.title }}</vue-checkbox>\\n      </template>\\n    </div>\\n  </span>\\n</div>\\n\\n<vue-xtable\\n  ref=\\\"xTable2\\\"\\n  border\\n  height=\\\"200\\\"\\n  :loading=\\\"loading\\\"\\n  :data=\\\"tableData\\\"\\n  :customs.sync=\\\"customColumns2\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"role\\\" title=\\\"Role\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      loading: false,\\n      tableData: [],\\n      customColumns2: [],\\n    }\\n  },\\n  created () {\\n    this.loading = true\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 20)\\n    setTimeout(() => {\\n      this.loading = false\\n      if (this.$refs.xTable2) {\\n        this.$refs.xTable2.reloadCustoms([\\n          {\\n            field: 'name',\\n            visible: false\\n          }\\n        ])\\n      }\\n    }, 300)\\n  },\\n\\n})\\n</script>\\n\\n<style>\\n.table-oper {\\n  height: 20px;\\n  width: 100%;\\n}\\n\\n.menu-btn {\\n  position: relative;\\n  width: 20px;\\n  height: 20px;\\n  float: right;\\n}\\n.menu-btn:hover .menu-wrapper {\\n  display: block;\\n}\\n\\n.menu-wrapper {\\n  display: none;\\n  position: absolute;\\n  width: 80px;\\n  top: 16px;\\n  right: 0;\\n  z-index: 9;\\n  background-color: #fff;\\n  font-size: 14px;\\n  padding: 4px 10px;\\n  user-select: none;\\n  border: 1px solid #e8eaec;\\n}\\n.menu-wrapper .checkbox-item {\\n  display: block;\\n  margin: 4px 0;\\n}\\n\\n.icon-menu {\\n  width: 16px;\\n  height: 0px;\\n  display: inline-block;\\n  margin-bottom: 16px;\\n  box-shadow: 0 6px 0 2px #606266, 0 0 0 2px #606266, 0 12px 0 2px #606266;\\n}\\n</style>\",\"template\":\"<div class=\\\"source\\\">    <div class=\\\"table-oper\\\">\\n      <span class=\\\"menu-btn\\\">\\n        <i class=\\\"icon-menu\\\"></i>\\n        <div class=\\\"menu-wrapper\\\">\\n          <template v-for=\\\"(column,index) in customColumns2\\\">\\n            <vue-checkbox\\n              v-if=\\\"column.property\\\"\\n              class=\\\"checkbox-item\\\"\\n              v-model=\\\"column.visible\\\"\\n              :key=\\\"index\\\"\\n              @change=\\\"$refs.xTable2.refreshColumn()\\\">{{ column.title }}</vue-checkbox>\\n          </template>\\n        </div>\\n      </span>\\n    </div>\\n\\n    <vue-xtable\\n      ref=\\\"xTable2\\\"\\n      border\\n      height=\\\"200\\\"\\n      :loading=\\\"loading\\\"\\n      :data=\\\"tableData\\\"\\n      :customs.sync=\\\"customColumns2\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"role\\\" title=\\\"Role\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      loading: false,\n      tableData: [],\n      customColumns2: [],\n    }\n  },\n  created () {\n    this.loading = true\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 20)\n    setTimeout(() => {\n      this.loading = false\n      if (this.$refs.xTable2) {\n        this.$refs.xTable2.reloadCustoms([\n          {\n            field: 'name',\n            visible: false\n          }\n        ])\n      }\n    }, 300)\n  },\n\n}},{\"id\":\"XtableDemo.advanced.Custom.sample3\",\"label\":\"XtableDemo.advanced.Custom.sample3.label\",\"description\":\"XtableDemo.advanced.Custom.sample3.description\",\"code\":\"<template v-for=\\\"(column,index) in customColumns3\\\">\\n  <vue-checkbox\\n    v-if=\\\"column.property\\\"\\n    class=\\\"checkbox-item\\\"\\n    v-model=\\\"column.visible\\\"\\n    :key=\\\"index\\\">{{ column.title }}</vue-checkbox>\\n</template>\\n\\n<vue-toolbar :data=\\\"tableData\\\" setting>\\n  <template v-slot:buttons>\\n    <vue-button @click=\\\"$refs.xTable3.refreshColumn()\\\">刷新</vue-button>\\n  </template>\\n</vue-toolbar>\\n\\n<vue-xtable\\n  ref=\\\"xTable3\\\"\\n  border\\n  height=\\\"300\\\"\\n  :data=\\\"tableData\\\"\\n  :customs.sync=\\\"customColumns3\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"role\\\" title=\\\"Role\\\"></vue-xtable-column>\\n  <vue-xtable-column title=\\\"基本信息\\\">\\n    <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n    <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n    <vue-xtable-column title=\\\"其他信息\\\">\\n      <vue-xtable-column field=\\\"rate\\\" title=\\\"Rate\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"flag\\\" title=\\\"Flag\\\"></vue-xtable-column>\\n    </vue-xtable-column>\\n  </vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      loading: false,\\n      tableData: [],\\n      customColumns3: [\\n        {\\n          field: 'name',\\n          visible: false\\n        },\\n        {\\n          field: 'sex',\\n          visible: false\\n        }\\n      ],\\n    }\\n  },\\n  created () {\\n    this.loading = true\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 20)\\n    setTimeout(() => {\\n      this.loading = false\\n    }, 300)\\n  },\\n\\n})\\n</script>\\n\\n<style>\\n.table-oper {\\n  height: 20px;\\n  width: 100%;\\n}\\n\\n.menu-btn {\\n  position: relative;\\n  width: 20px;\\n  height: 20px;\\n  float: right;\\n}\\n.menu-btn:hover .menu-wrapper {\\n  display: block;\\n}\\n\\n.menu-wrapper {\\n  display: none;\\n  position: absolute;\\n  width: 80px;\\n  top: 16px;\\n  right: 0;\\n  z-index: 9;\\n  background-color: #fff;\\n  font-size: 14px;\\n  padding: 4px 10px;\\n  user-select: none;\\n  border: 1px solid #e8eaec;\\n}\\n.menu-wrapper .checkbox-item {\\n  display: block;\\n  margin: 4px 0;\\n}\\n\\n.icon-menu {\\n  width: 16px;\\n  height: 0px;\\n  display: inline-block;\\n  margin-bottom: 16px;\\n  box-shadow: 0 6px 0 2px #606266, 0 0 0 2px #606266, 0 12px 0 2px #606266;\\n}\\n</style>\",\"template\":\"<div class=\\\"source\\\">    <template v-for=\\\"(column,index) in customColumns3\\\">\\n      <vue-checkbox\\n        v-if=\\\"column.property\\\"\\n        class=\\\"checkbox-item\\\"\\n        v-model=\\\"column.visible\\\"\\n        :key=\\\"index\\\">{{ column.title }}</vue-checkbox>\\n    </template>\\n\\n    <vue-toolbar :data=\\\"tableData\\\" setting>\\n      <template v-slot:buttons>\\n        <vue-button @click=\\\"$refs.xTable3.refreshColumn()\\\">刷新</vue-button>\\n      </template>\\n    </vue-toolbar>\\n\\n    <vue-xtable\\n      ref=\\\"xTable3\\\"\\n      border\\n      height=\\\"300\\\"\\n      :data=\\\"tableData\\\"\\n      :customs.sync=\\\"customColumns3\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"role\\\" title=\\\"Role\\\"></vue-xtable-column>\\n      <vue-xtable-column title=\\\"基本信息\\\">\\n        <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n        <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n        <vue-xtable-column title=\\\"其他信息\\\">\\n          <vue-xtable-column field=\\\"rate\\\" title=\\\"Rate\\\"></vue-xtable-column>\\n          <vue-xtable-column field=\\\"flag\\\" title=\\\"Flag\\\"></vue-xtable-column>\\n        </vue-xtable-column>\\n      </vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      loading: false,\n      tableData: [],\n      customColumns3: [\n        {\n          field: 'name',\n          visible: false\n        },\n        {\n          field: 'sex',\n          visible: false\n        }\n      ],\n    }\n  },\n  created () {\n    this.loading = true\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 20)\n    setTimeout(() => {\n      this.loading = false\n    }, 300)\n  },\n\n}}],\"styles\":\".table-oper {\\n  height: 20px;\\n  width: 100%;\\n}\\n\\n.menu-btn {\\n  position: relative;\\n  width: 20px;\\n  height: 20px;\\n  float: right;\\n}\\n.menu-btn:hover .menu-wrapper {\\n  display: block;\\n}\\n\\n.menu-wrapper {\\n  display: none;\\n  position: absolute;\\n  width: 80px;\\n  top: 16px;\\n  right: 0;\\n  z-index: 9;\\n  background-color: #fff;\\n  font-size: 14px;\\n  padding: 4px 10px;\\n  user-select: none;\\n  border: 1px solid #e8eaec;\\n}\\n.menu-wrapper .checkbox-item {\\n  display: block;\\n  margin: 4px 0;\\n}\\n\\n.icon-menu {\\n  width: 16px;\\n  height: 0px;\\n  display: inline-block;\\n  margin-bottom: 16px;\\n  box-shadow: 0 6px 0 2px #606266, 0 0 0 2px #606266, 0 12px 0 2px #606266;\\n}\"}","export default {\"path\":\"/XtableDemo/advanced/CustomStorage\",\"name\":\"XtableDemo.advanced.CustomStorage\",\"head\":{\"label\":\"XtableDemo.advanced.CustomStorage.label\",\"description\":\"XtableDemo.advanced.CustomStorage.description\"},\"samples\":[{\"id\":\"XtableDemo.advanced.CustomStorage.sample1\",\"label\":\"XtableDemo.advanced.CustomStorage.sample1.label\",\"description\":\"XtableDemo.advanced.CustomStorage.sample1.description\",\"code\":\"<vue-toolbar id=\\\"toolbar_demo3\\\" :setting=\\\"{storage: true}\\\">\\n  <template v-slot:buttons>\\n    <vue-button>按钮1</vue-button>\\n    <vue-button>按钮2</vue-button>\\n  </template>\\n</vue-toolbar>\\n\\n<vue-xtable\\n  border\\n  height=\\\"400\\\"\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"role\\\" title=\\\"Role\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    let list = window.MOCK_DATA_LIST.slice(0, 20)\\n    this.tableData = list\\n  },\\n\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-toolbar id=\\\"toolbar_demo3\\\" :setting=\\\"{storage: true}\\\">\\n      <template v-slot:buttons>\\n        <vue-button>按钮1</vue-button>\\n        <vue-button>按钮2</vue-button>\\n      </template>\\n    </vue-toolbar>\\n\\n    <vue-xtable\\n      border\\n      height=\\\"400\\\"\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"role\\\" title=\\\"Role\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 20)\n    this.tableData = list\n  },\n\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/advanced/CustomlWidthStorage\",\"name\":\"XtableDemo.advanced.CustomlWidthStorage\",\"head\":{\"label\":\"XtableDemo.advanced.CustomlWidthStorage.label\",\"description\":\"XtableDemo.advanced.CustomlWidthStorage.description\"},\"samples\":[{\"id\":\"XtableDemo.advanced.CustomlWidthStorage.sample1\",\"label\":\"XtableDemo.advanced.CustomlWidthStorage.sample1.label\",\"description\":\"XtableDemo.advanced.CustomlWidthStorage.sample1.description\",\"code\":\"<vue-toolbar id=\\\"toolbar_demo5\\\" :resizable=\\\"{storage: true}\\\" :setting=\\\"{storage: true, checkMethod: checkColumnMethod}\\\">\\n  <template v-slot:buttons>\\n    <vue-button>按钮1</vue-button>\\n    <vue-button>按钮2</vue-button>\\n  </template>\\n</vue-toolbar>\\n\\n<vue-xtable\\n  border\\n  resizable\\n  height=\\\"400\\\"\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"role\\\" title=\\\"Role\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    let list = window.MOCK_DATA_LIST.slice(0, 20)\\n    this.tableData = list\\n  },\\n\\n  methods: {\\n    checkColumnMethod ({ column }) {\\n      if (column.property === 'role') {\\n        return false\\n      }\\n      return true\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-toolbar id=\\\"toolbar_demo5\\\" :resizable=\\\"{storage: true}\\\" :setting=\\\"{storage: true, checkMethod: checkColumnMethod}\\\">\\n      <template v-slot:buttons>\\n        <vue-button>按钮1</vue-button>\\n        <vue-button>按钮2</vue-button>\\n      </template>\\n    </vue-toolbar>\\n\\n    <vue-xtable\\n      border\\n      resizable\\n      height=\\\"400\\\"\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"role\\\" title=\\\"Role\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 20)\n    this.tableData = list\n  },\n\n  methods: {\n    checkColumnMethod ({ column }) {\n      if (column.property === 'role') {\n        return false\n      }\n      return true\n    }\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/advanced/Dynamic\",\"name\":\"XtableDemo.advanced.Dynamic\",\"head\":{\"label\":\"XtableDemo.advanced.Dynamic.label\",\"description\":\"XtableDemo.advanced.Dynamic.description\"},\"samples\":[{\"id\":\"XtableDemo.advanced.Dynamic.sample1\",\"label\":\"XtableDemo.advanced.Dynamic.sample1.label\",\"description\":\"XtableDemo.advanced.Dynamic.sample1.description\",\"code\":\"<vue-toolbar>\\n  <template v-slot:buttons>\\n    <vue-button @click=\\\"addColumn()\\\">最后增加一列</vue-button>\\n    <vue-button @click=\\\"removeColumn()\\\">删除最后一列</vue-button>\\n    <vue-button @click=\\\"updateFilter(4)\\\">修改第五列筛选条件</vue-button>\\n    <vue-button @click=\\\"toggleFixedColumn(0, 'left')\\\">切换第一列固定</vue-button>\\n    <vue-button @click=\\\"toggleFixedColumn(1, 'left')\\\">切换第二列固定</vue-button>\\n    <vue-button @click=\\\"updateWidthColumn(2, 500)\\\">修改第三列宽度</vue-button>\\n    <vue-button @click=\\\"updateWidthColumn(3, 500)\\\">修改第四列宽度</vue-button>\\n  </template>\\n</vue-toolbar>\\n\\n<vue-xtable\\n  border\\n  highlight-hover-row\\n  highlight-current-row\\n  ref=\\\"xTable\\\"\\n  height=\\\"300\\\"\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column v-for=\\\"(config, index) in tableColumn\\\" :key=\\\"index\\\" v-bind=\\\"config\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n      tableColumn: [\\n        { type: 'index', width: 60, fixed: null },\\n        { type: 'checkbox', width: 50, fixed: null },\\n        { field: 'name', title: 'Name', width: 200 },\\n        { field: 'nickname', title: 'Nickname', width: 300 },\\n        { field: 'sex', title: 'Sex', width: 200, filters: [{ value: '1', label: '男' }] },\\n        { field: 'role', title: 'Role', width: 200 },\\n        { field: 'address', title: 'Address', width: 300, showOverflow: true }\\n      ],\\n\\n    }\\n  },\\n\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\\n  },\\n  methods: {\\n    addColumn () {\\n      const uniqueId = VueUtil.uniqueId()\\n      this.tableColumn.push({\\n        field: `new_${uniqueId}`,\\n        title: `新列_${uniqueId}`,\\n        minWidth: 100\\n      })\\n    },\\n    removeColumn () {\\n      this.tableColumn.pop()\\n    },\\n    updateFilter (index) {\\n      let xTable = this.$refs.xTable\\n      xTable.filter(this.tableColumn[index].field, options => {\\n        // 修改筛选列表，可以通过 checked 属性设置默认勾选\\n        return [\\n          { value: '1', label: '男' },\\n          { value: '0', label: '女', checked: true }\\n        ]\\n      }).then(() => {\\n        // 修改条件之后，需要手动调用 updateData 处理表格数据\\n        xTable.updateData()\\n      })\\n    },\\n    toggleFixedColumn (index, value) {\\n      const xTable = this.$refs.xTable\\n      this.tableColumn[index].fixed = this.tableColumn[index].fixed ? null : value\\n      // 更改了列属性，需要手动刷新列\\n      this.$nextTick(() => {\\n        xTable.refreshColumn()\\n          // 由于固定列的动态切换是无状态的，所以需要手动刷新滚动位置\\n          .then(() => xTable.refreshScroll())\\n      })\\n    },\\n    updateWidthColumn (index, value) {\\n      this.tableColumn[index].width = value\\n      // 更改了列属性，需要手动刷新列\\n      this.$nextTick(() => {\\n        this.$refs.xTable.refreshColumn()\\n      })\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-toolbar>\\n      <template v-slot:buttons>\\n        <vue-button @click=\\\"addColumn()\\\">最后增加一列</vue-button>\\n        <vue-button @click=\\\"removeColumn()\\\">删除最后一列</vue-button>\\n        <vue-button @click=\\\"updateFilter(4)\\\">修改第五列筛选条件</vue-button>\\n        <vue-button @click=\\\"toggleFixedColumn(0, 'left')\\\">切换第一列固定</vue-button>\\n        <vue-button @click=\\\"toggleFixedColumn(1, 'left')\\\">切换第二列固定</vue-button>\\n        <vue-button @click=\\\"updateWidthColumn(2, 500)\\\">修改第三列宽度</vue-button>\\n        <vue-button @click=\\\"updateWidthColumn(3, 500)\\\">修改第四列宽度</vue-button>\\n      </template>\\n    </vue-toolbar>\\n\\n    <vue-xtable\\n      border\\n      highlight-hover-row\\n      highlight-current-row\\n      ref=\\\"xTable\\\"\\n      height=\\\"300\\\"\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column v-for=\\\"(config, index) in tableColumn\\\" :key=\\\"index\\\" v-bind=\\\"config\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n      tableColumn: [\n        { type: 'index', width: 60, fixed: null },\n        { type: 'checkbox', width: 50, fixed: null },\n        { field: 'name', title: 'Name', width: 200 },\n        { field: 'nickname', title: 'Nickname', width: 300 },\n        { field: 'sex', title: 'Sex', width: 200, filters: [{ value: '1', label: '男' }] },\n        { field: 'role', title: 'Role', width: 200 },\n        { field: 'address', title: 'Address', width: 300, showOverflow: true }\n      ],\n\n    }\n  },\n\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\n  },\n  methods: {\n    addColumn () {\n      const uniqueId = VueUtil.uniqueId()\n      this.tableColumn.push({\n        field: `new_${uniqueId}`,\n        title: `新列_${uniqueId}`,\n        minWidth: 100\n      })\n    },\n    removeColumn () {\n      this.tableColumn.pop()\n    },\n    updateFilter (index) {\n      let xTable = this.$refs.xTable\n      xTable.filter(this.tableColumn[index].field, options => {\n        // 修改筛选列表，可以通过 checked 属性设置默认勾选\n        return [\n          { value: '1', label: '男' },\n          { value: '0', label: '女', checked: true }\n        ]\n      }).then(() => {\n        // 修改条件之后，需要手动调用 updateData 处理表格数据\n        xTable.updateData()\n      })\n    },\n    toggleFixedColumn (index, value) {\n      const xTable = this.$refs.xTable\n      this.tableColumn[index].fixed = this.tableColumn[index].fixed ? null : value\n      // 更改了列属性，需要手动刷新列\n      this.$nextTick(() => {\n        xTable.refreshColumn()\n          // 由于固定列的动态切换是无状态的，所以需要手动刷新滚动位置\n          .then(() => xTable.refreshScroll())\n      })\n    },\n    updateWidthColumn (index, value) {\n      this.tableColumn[index].width = value\n      // 更改了列属性，需要手动刷新列\n      this.$nextTick(() => {\n        this.$refs.xTable.refreshColumn()\n      })\n    }\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/advanced/Event\",\"name\":\"XtableDemo.advanced.Event\",\"head\":{\"label\":\"XtableDemo.advanced.Event.label\",\"description\":\"XtableDemo.advanced.Event.description\"},\"samples\":[{\"id\":\"XtableDemo.advanced.Event.sample1\",\"label\":\"XtableDemo.advanced.Event.sample1.label\",\"description\":\"XtableDemo.advanced.Event.sample1.description\",\"code\":\"<vue-xtable\\n  border\\n  height=\\\"500\\\"\\n  highlight-hover-row\\n  show-overflow\\n  resizable\\n  :data=\\\"tableData\\\"\\n  @header-cell-click=\\\"headerCellClickEvent\\\"\\n  @header-cell-dblclick=\\\"headerCellDBLClickEvent\\\"\\n  @cell-click=\\\"cellClickEvent\\\"\\n  @cell-dblclick=\\\"cellDBLClickEvent\\\"\\n  @cell-mouseenter=\\\"cellMouseenterEvent\\\"\\n  @cell-mouseleave=\\\"cellMouseleaveEvent\\\"\\n  @body-scroll=\\\"bodyScrollEvent\\\">\\n  <vue-xtable-column type=\\\"index\\\" title=\\\"序号\\\" width=\\\"60\\\" fixed=\\\"left\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" width=\\\"300\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"role\\\" title=\\\"Role\\\" width=\\\"300\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" width=\\\"300\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\" width=\\\"300\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" fixed=\\\"right\\\" width=\\\"300\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n\\n  created () {\\n    let list = window.MOCK_DATA_LIST.slice(0, 20)\\n    this.tableData = list\\n  },\\n  methods: {\\n    headerCellClickEvent ({ row, rowIndex, column, columnIndex }, event) {\\n      console.log(`表头单元格点击${column.title}`)\\n    },\\n    headerCellDBLClickEvent ({ row, rowIndex, column, columnIndex }, event) {\\n      console.log(`表头单元格双击${column.title}`)\\n    },\\n    cellClickEvent ({ row, rowIndex, column, columnIndex }, event) {\\n      console.log(`单元格点击${column.title}`)\\n    },\\n    cellDBLClickEvent ({ row, rowIndex, column, columnIndex }, event) {\\n      console.log(`单元格双击${column.title}`)\\n    },\\n    cellMouseenterEvent ({ row, rowIndex, column, columnIndex }, event) {\\n      console.log(`鼠标进入单元格${column.title}`)\\n    },\\n    cellMouseleaveEvent ({ row, rowIndex, column, columnIndex }, event) {\\n      console.log(`鼠标离开单元格${column.title}`)\\n    },\\n    bodyScrollEvent ({ scrollTop, scrollLeft }, event) {\\n      console.log(`滚动事件scrollTop=${scrollTop} scrollLeft=${scrollLeft}`)\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      height=\\\"500\\\"\\n      highlight-hover-row\\n      show-overflow\\n      resizable\\n      :data=\\\"tableData\\\"\\n      @header-cell-click=\\\"headerCellClickEvent\\\"\\n      @header-cell-dblclick=\\\"headerCellDBLClickEvent\\\"\\n      @cell-click=\\\"cellClickEvent\\\"\\n      @cell-dblclick=\\\"cellDBLClickEvent\\\"\\n      @cell-mouseenter=\\\"cellMouseenterEvent\\\"\\n      @cell-mouseleave=\\\"cellMouseleaveEvent\\\"\\n      @body-scroll=\\\"bodyScrollEvent\\\">\\n      <vue-xtable-column type=\\\"index\\\" title=\\\"序号\\\" width=\\\"60\\\" fixed=\\\"left\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" width=\\\"300\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"role\\\" title=\\\"Role\\\" width=\\\"300\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" width=\\\"300\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\" width=\\\"300\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" fixed=\\\"right\\\" width=\\\"300\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 20)\n    this.tableData = list\n  },\n  methods: {\n    headerCellClickEvent ({ row, rowIndex, column, columnIndex }, event) {\n      console.log(`表头单元格点击${column.title}`)\n    },\n    headerCellDBLClickEvent ({ row, rowIndex, column, columnIndex }, event) {\n      console.log(`表头单元格双击${column.title}`)\n    },\n    cellClickEvent ({ row, rowIndex, column, columnIndex }, event) {\n      console.log(`单元格点击${column.title}`)\n    },\n    cellDBLClickEvent ({ row, rowIndex, column, columnIndex }, event) {\n      console.log(`单元格双击${column.title}`)\n    },\n    cellMouseenterEvent ({ row, rowIndex, column, columnIndex }, event) {\n      console.log(`鼠标进入单元格${column.title}`)\n    },\n    cellMouseleaveEvent ({ row, rowIndex, column, columnIndex }, event) {\n      console.log(`鼠标离开单元格${column.title}`)\n    },\n    bodyScrollEvent ({ scrollTop, scrollLeft }, event) {\n      console.log(`滚动事件scrollTop=${scrollTop} scrollLeft=${scrollLeft}`)\n    }\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/advanced/Expand\",\"name\":\"XtableDemo.advanced.Expand\",\"head\":{\"label\":\"XtableDemo.advanced.Expand.label\",\"description\":\"XtableDemo.advanced.Expand.description\"},\"samples\":[{\"id\":\"XtableDemo.advanced.Expand.sample1\",\"label\":\"XtableDemo.advanced.Expand.sample1.label\",\"description\":\"XtableDemo.advanced.Expand.sample1.description\",\"code\":\"<vue-toolbar>\\n  <template v-slot:buttons>\\n    <vue-button @click=\\\"$refs.xTable.toggleRowExpansion(tableData[1])\\\">切换第二行展开</vue-button>\\n    <vue-button @click=\\\"$refs.xTable.setRowExpansion([tableData[2], tableData[3]], true)\\\">设置第三、四行展开</vue-button>\\n    <vue-button @click=\\\"$refs.xTable.setAllRowExpansion(true)\\\">设置所有行展开</vue-button>\\n    <vue-button @click=\\\"$refs.xTable.clearRowExpand()\\\">关闭所有行展开</vue-button>\\n  </template>\\n</vue-toolbar>\\n\\n<vue-xtable\\n  ref=\\\"xTable\\\"\\n  border\\n  :data=\\\"tableData\\\"\\n  @toggle-expand-change=\\\"toggleExpandChangeEvent\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column type=\\\"expand\\\" width=\\\"60\\\">\\n    <template v-slot=\\\"scope\\\">\\n      <template v-if=\\\"scope.rowIndex === 1\\\">\\n        <vue-xtable\\n          border\\n          :data=\\\"tableData\\\">\\n          <vue-xtable-column field=\\\"role\\\" title=\\\"Role\\\"></vue-xtable-column>\\n          <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n        </vue-xtable>\\n      </template>\\n      <template v-else>\\n        <ul>\\n          <li>\\n            <span>ID：</span>\\n            <span>{{ scope.row.id }}</span>\\n          </li>\\n          <li>\\n            <span>Name：</span>\\n            <span>{{ scope.row.name }}</span>\\n          </li>\\n          <li>\\n            <span>UpdateTime：</span>\\n            <span>{{ scope.row.updateTime }}</span>\\n          </li>\\n          <li>\\n            <span>CreateTime：</span>\\n            <span>{{ scope.row.createTime }}</span>\\n          </li>\\n        </ul>\\n      </template>\\n    </template>\\n  </vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 3)\\n  },\\n\\n  methods: {\\n    toggleExpandChangeEvent ({ row }) {\\n      console.log('行展开、收起事件')\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-toolbar>\\n      <template v-slot:buttons>\\n        <vue-button @click=\\\"$refs.xTable.toggleRowExpansion(tableData[1])\\\">切换第二行展开</vue-button>\\n        <vue-button @click=\\\"$refs.xTable.setRowExpansion([tableData[2], tableData[3]], true)\\\">设置第三、四行展开</vue-button>\\n        <vue-button @click=\\\"$refs.xTable.setAllRowExpansion(true)\\\">设置所有行展开</vue-button>\\n        <vue-button @click=\\\"$refs.xTable.clearRowExpand()\\\">关闭所有行展开</vue-button>\\n      </template>\\n    </vue-toolbar>\\n\\n    <vue-xtable\\n      ref=\\\"xTable\\\"\\n      border\\n      :data=\\\"tableData\\\"\\n      @toggle-expand-change=\\\"toggleExpandChangeEvent\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column type=\\\"expand\\\" width=\\\"60\\\">\\n        <template v-slot=\\\"scope\\\">\\n          <template v-if=\\\"scope.rowIndex === 1\\\">\\n            <vue-xtable\\n              border\\n              :data=\\\"tableData\\\">\\n              <vue-xtable-column field=\\\"role\\\" title=\\\"Role\\\"></vue-xtable-column>\\n              <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n            </vue-xtable>\\n          </template>\\n          <template v-else>\\n            <ul>\\n              <li>\\n                <span>ID：</span>\\n                <span>{{ scope.row.id }}</span>\\n              </li>\\n              <li>\\n                <span>Name：</span>\\n                <span>{{ scope.row.name }}</span>\\n              </li>\\n              <li>\\n                <span>UpdateTime：</span>\\n                <span>{{ scope.row.updateTime }}</span>\\n              </li>\\n              <li>\\n                <span>CreateTime：</span>\\n                <span>{{ scope.row.createTime }}</span>\\n              </li>\\n            </ul>\\n          </template>\\n        </template>\\n      </vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 3)\n  },\n\n  methods: {\n    toggleExpandChangeEvent ({ row }) {\n      console.log('行展开、收起事件')\n    }\n  }\n}},{\"id\":\"XtableDemo.advanced.Expand.sample2\",\"label\":\"XtableDemo.advanced.Expand.sample2.label\",\"description\":\"XtableDemo.advanced.Expand.sample2.description\",\"code\":\"<vue-xtable\\n  border\\n  row-id=\\\"id\\\"\\n  :expand-config=\\\"{expandRowKeys: ['1']}\\\"\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column type=\\\"expand\\\" width=\\\"60\\\">\\n    <template v-slot=\\\"scope\\\">\\n      <template v-if=\\\"scope.rowIndex === 1\\\">\\n        <vue-xtable\\n          border\\n          :data=\\\"tableData\\\">\\n          <vue-xtable-column field=\\\"role\\\" title=\\\"Role\\\"></vue-xtable-column>\\n          <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n        </vue-xtable>\\n      </template>\\n      <template v-else>\\n        <ul>\\n          <li>\\n            <span>ID：</span>\\n            <span>{{ scope.row.id }}</span>\\n          </li>\\n          <li>\\n            <span>Name：</span>\\n            <span>{{ scope.row.name }}</span>\\n          </li>\\n          <li>\\n            <span>UpdateTime：</span>\\n            <span>{{ scope.row.updateTime }}</span>\\n          </li>\\n          <li>\\n            <span>CreateTime：</span>\\n            <span>{{ scope.row.createTime }}</span>\\n          </li>\\n        </ul>\\n      </template>\\n    </template>\\n  </vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 3)\\n  },\\n\\n  methods: {\\n    toggleExpandChangeEvent ({ row }) {\\n      console.log('行展开、收起事件')\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      row-id=\\\"id\\\"\\n      :expand-config=\\\"{expandRowKeys: ['1']}\\\"\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column type=\\\"expand\\\" width=\\\"60\\\">\\n        <template v-slot=\\\"scope\\\">\\n          <template v-if=\\\"scope.rowIndex === 1\\\">\\n            <vue-xtable\\n              border\\n              :data=\\\"tableData\\\">\\n              <vue-xtable-column field=\\\"role\\\" title=\\\"Role\\\"></vue-xtable-column>\\n              <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n            </vue-xtable>\\n          </template>\\n          <template v-else>\\n            <ul>\\n              <li>\\n                <span>ID：</span>\\n                <span>{{ scope.row.id }}</span>\\n              </li>\\n              <li>\\n                <span>Name：</span>\\n                <span>{{ scope.row.name }}</span>\\n              </li>\\n              <li>\\n                <span>UpdateTime：</span>\\n                <span>{{ scope.row.updateTime }}</span>\\n              </li>\\n              <li>\\n                <span>CreateTime：</span>\\n                <span>{{ scope.row.createTime }}</span>\\n              </li>\\n            </ul>\\n          </template>\\n        </template>\\n      </vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 3)\n  },\n\n  methods: {\n    toggleExpandChangeEvent ({ row }) {\n      console.log('行展开、收起事件')\n    }\n  }\n}},{\"id\":\"XtableDemo.advanced.Expand.sample3\",\"label\":\"XtableDemo.advanced.Expand.sample3.label\",\"description\":\"XtableDemo.advanced.Expand.sample3.description\",\"code\":\"<vue-xtable\\n  border\\n  :data=\\\"tableData\\\"\\n  :expand-config=\\\"{expandAll: true}\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column type=\\\"expand\\\" width=\\\"60\\\">\\n    <template v-slot=\\\"scope\\\">\\n      <ul>\\n        <li>\\n          <span>ID：</span>\\n          <span>{{ scope.row.id }}</span>\\n        </li>\\n        <li>\\n          <span>Name：</span>\\n          <span>{{ scope.row.name }}</span>\\n        </li>\\n        <li>\\n          <span>UpdateTime：</span>\\n          <span>{{ scope.row.updateTime }}</span>\\n        </li>\\n        <li>\\n          <span>CreateTime：</span>\\n          <span>{{ scope.row.createTime }}</span>\\n        </li>\\n      </ul>\\n    </template>\\n  </vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 3)\\n  },\\n\\n  methods: {\\n    toggleExpandChangeEvent ({ row }) {\\n      console.log('行展开、收起事件')\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      :data=\\\"tableData\\\"\\n      :expand-config=\\\"{expandAll: true}\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column type=\\\"expand\\\" width=\\\"60\\\">\\n        <template v-slot=\\\"scope\\\">\\n          <ul>\\n            <li>\\n              <span>ID：</span>\\n              <span>{{ scope.row.id }}</span>\\n            </li>\\n            <li>\\n              <span>Name：</span>\\n              <span>{{ scope.row.name }}</span>\\n            </li>\\n            <li>\\n              <span>UpdateTime：</span>\\n              <span>{{ scope.row.updateTime }}</span>\\n            </li>\\n            <li>\\n              <span>CreateTime：</span>\\n              <span>{{ scope.row.createTime }}</span>\\n            </li>\\n          </ul>\\n        </template>\\n      </vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 3)\n  },\n\n  methods: {\n    toggleExpandChangeEvent ({ row }) {\n      console.log('行展开、收起事件')\n    }\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/advanced/Export\",\"name\":\"XtableDemo.advanced.Export\",\"head\":{\"label\":\"XtableDemo.advanced.Export.label\",\"description\":\"XtableDemo.advanced.Export.description\"},\"samples\":[{\"id\":\"XtableDemo.advanced.Export.sample1\",\"label\":\"XtableDemo.advanced.Export.sample1.label\",\"description\":\"XtableDemo.advanced.Export.sample1.description\",\"code\":\"<vue-toolbar>\\n  <template v-slot:buttons>\\n    <vue-button @click=\\\"exportDataEvent\\\">默认导出</vue-button>\\n    <vue-button @click=\\\"exportSelectEvent\\\">导出选中</vue-button>\\n  </template>\\n</vue-toolbar>\\n\\n<vue-xtable\\n  ref=\\\"xTable1\\\"\\n  highlight-hover-row\\n  height=\\\"300\\\"\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"checkbox\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" sortable></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\\n  },\\n\\n  methods: {\\n    exportDataEvent () {\\n      this.$refs.xTable1.exportData({ type: 'csv' })\\n    },\\n    exportSelectEvent () {\\n      this.$refs.xTable1.exportData({\\n        data: this.$refs.xTable1.getSelectRecords()\\n      })\\n    },\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-toolbar>\\n      <template v-slot:buttons>\\n        <vue-button @click=\\\"exportDataEvent\\\">默认导出</vue-button>\\n        <vue-button @click=\\\"exportSelectEvent\\\">导出选中</vue-button>\\n      </template>\\n    </vue-toolbar>\\n\\n    <vue-xtable\\n      ref=\\\"xTable1\\\"\\n      highlight-hover-row\\n      height=\\\"300\\\"\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"checkbox\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" sortable></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\n  },\n\n  methods: {\n    exportDataEvent () {\n      this.$refs.xTable1.exportData({ type: 'csv' })\n    },\n    exportSelectEvent () {\n      this.$refs.xTable1.exportData({\n        data: this.$refs.xTable1.getSelectRecords()\n      })\n    },\n  }\n}},{\"id\":\"XtableDemo.advanced.Export.sample2\",\"label\":\"XtableDemo.advanced.Export.sample2.label\",\"description\":\"XtableDemo.advanced.Export.sample2.description\",\"code\":\"<vue-toolbar>\\n  <template v-slot:buttons>\\n    <vue-button @click=\\\"exportDataEvent2\\\">导出指定列 [name,sex]</vue-button>\\n  </template>\\n</vue-toolbar>\\n\\n<vue-xtable\\n  ref=\\\"xTable2\\\"\\n  highlight-hover-row\\n  height=\\\"300\\\"\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" sortable></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\\n  },\\n\\n  methods: {\\n    exportDataEvent2 () {\\n      this.$refs.xTable2.exportData({\\n        type: 'csv',\\n        columnFilterMethod: column => VueUtil.includes(['name', 'sex'], column.property)\\n      })\\n    },\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-toolbar>\\n      <template v-slot:buttons>\\n        <vue-button @click=\\\"exportDataEvent2\\\">导出指定列 [name,sex]</vue-button>\\n      </template>\\n    </vue-toolbar>\\n\\n    <vue-xtable\\n      ref=\\\"xTable2\\\"\\n      highlight-hover-row\\n      height=\\\"300\\\"\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" sortable></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\n  },\n\n  methods: {\n    exportDataEvent2 () {\n      this.$refs.xTable2.exportData({\n        type: 'csv',\n        columnFilterMethod: column => VueUtil.includes(['name', 'sex'], column.property)\n      })\n    },\n  }\n}},{\"id\":\"XtableDemo.advanced.Export.sample3\",\"label\":\"XtableDemo.advanced.Export.sample3.label\",\"description\":\"XtableDemo.advanced.Export.sample3.description\",\"code\":\"<vue-toolbar>\\n  <template v-slot:buttons>\\n    <vue-button @click=\\\"exportDataEvent3\\\">导出指定第10-20行</vue-button>\\n  </template>\\n</vue-toolbar>\\n\\n<vue-xtable\\n  ref=\\\"xTable3\\\"\\n  highlight-hover-row\\n  height=\\\"300\\\"\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" sortable></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\\n  },\\n\\n  methods: {\\n    exportDataEvent3 () {\\n      this.$refs.xTable3.exportData({\\n        type: 'csv',\\n        dataFilterMethod: (row, rowIndex) => rowIndex >= 9 && rowIndex < 20\\n      })\\n    },\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-toolbar>\\n      <template v-slot:buttons>\\n        <vue-button @click=\\\"exportDataEvent3\\\">导出指定第10-20行</vue-button>\\n      </template>\\n    </vue-toolbar>\\n\\n    <vue-xtable\\n      ref=\\\"xTable3\\\"\\n      highlight-hover-row\\n      height=\\\"300\\\"\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" sortable></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\n  },\n\n  methods: {\n    exportDataEvent3 () {\n      this.$refs.xTable3.exportData({\n        type: 'csv',\n        dataFilterMethod: (row, rowIndex) => rowIndex >= 9 && rowIndex < 20\n      })\n    },\n  }\n}},{\"id\":\"XtableDemo.advanced.Export.sample4\",\"label\":\"XtableDemo.advanced.Export.sample4.label\",\"description\":\"XtableDemo.advanced.Export.sample4.description\",\"code\":\"<vue-toolbar>\\n  <template v-slot:buttons>\\n    <vue-button @click=\\\"exportDataEvent4\\\">完整配置</vue-button>\\n  </template>\\n</vue-toolbar>\\n\\n<vue-xtable\\n  ref=\\\"xTable4\\\"\\n  highlight-hover-row\\n  height=\\\"300\\\"\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" sortable></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\\n  },\\n\\n  methods: {\\n    exportDataEvent4 () {\\n      this.$refs.xTable4.exportData({\\n        filename: '自定义文件名',\\n        type: 'csv',\\n    \\n        original: true,\\n        isHeader: false,\\n        data: this.tableData.map(row => {\\n          row.date = VueUtil.formatDate(row.date, 'yyyy-MM-dd')\\n          return row\\n        })\\n      })\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-toolbar>\\n      <template v-slot:buttons>\\n        <vue-button @click=\\\"exportDataEvent4\\\">完整配置</vue-button>\\n      </template>\\n    </vue-toolbar>\\n\\n    <vue-xtable\\n      ref=\\\"xTable4\\\"\\n      highlight-hover-row\\n      height=\\\"300\\\"\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" sortable></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\n  },\n\n  methods: {\n    exportDataEvent4 () {\n      this.$refs.xTable4.exportData({\n        filename: '自定义文件名',\n        type: 'csv',\n    \n        original: true,\n        isHeader: false,\n        data: this.tableData.map(row => {\n          row.date = VueUtil.formatDate(row.date, 'yyyy-MM-dd')\n          return row\n        })\n      })\n    }\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/advanced/FixedType\",\"name\":\"XtableDemo.advanced.FixedType\",\"head\":{\"label\":\"XtableDemo.advanced.FixedType.label\",\"description\":\"XtableDemo.advanced.FixedType.description\"},\"samples\":[{\"id\":\"XtableDemo.advanced.FixedType.sample1\",\"label\":\"XtableDemo.advanced.FixedType.sample1.label\",\"description\":\"XtableDemo.advanced.FixedType.sample1.description\",\"code\":\"<vue-toolbar>\\n  <template v-slot:buttons>\\n    <vue-button @click=\\\"clearDataEvent\\\">清空数据</vue-button>\\n    <vue-button @click=\\\"exportDataEvent\\\">导出数据</vue-button>\\n    <vue-button @click=\\\"importDataEvent\\\">导入数据</vue-button>\\n  </template>\\n</vue-toolbar>\\n\\n<vue-xtable\\n  border\\n  highlight-hover-row\\n  ref=\\\"xTable\\\"\\n  height=\\\"400\\\"\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" sortable></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 10)\\n  },\\n\\n  methods: {\\n    clearDataEvent () {\\n      this.tableData = []\\n    },\\n    exportDataEvent () {\\n      this.$refs.xTable.openExport({ types: ['csv'] })\\n    },\\n    importDataEvent () {\\n      this.$refs.xTable.importData({ types: ['csv'] })\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-toolbar>\\n      <template v-slot:buttons>\\n        <vue-button @click=\\\"clearDataEvent\\\">清空数据</vue-button>\\n        <vue-button @click=\\\"exportDataEvent\\\">导出数据</vue-button>\\n        <vue-button @click=\\\"importDataEvent\\\">导入数据</vue-button>\\n      </template>\\n    </vue-toolbar>\\n\\n    <vue-xtable\\n      border\\n      highlight-hover-row\\n      ref=\\\"xTable\\\"\\n      height=\\\"400\\\"\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" sortable></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 10)\n  },\n\n  methods: {\n    clearDataEvent () {\n      this.tableData = []\n    },\n    exportDataEvent () {\n      this.$refs.xTable.openExport({ types: ['csv'] })\n    },\n    importDataEvent () {\n      this.$refs.xTable.importData({ types: ['csv'] })\n    }\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/advanced/Footer\",\"name\":\"XtableDemo.advanced.Footer\",\"head\":{\"label\":\"XtableDemo.advanced.Footer.label\",\"description\":\"XtableDemo.advanced.Footer.description\"},\"samples\":[{\"id\":\"XtableDemo.advanced.Footer.sample1\",\"label\":\"XtableDemo.advanced.Footer.sample1.label\",\"description\":\"XtableDemo.advanced.Footer.sample1.description\",\"code\":\"<vue-xtable\\n  class=\\\"mytable-footer\\\"\\n  border\\n  highlight-hover-row\\n  show-footer\\n  height=\\\"400\\\"\\n  :footer-method=\\\"footerMethod\\\"\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"rate\\\" title=\\\"Rate\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    let list = window.MOCK_DATA_LIST.slice(0, 50)\\n    this.tableData = list\\n  },\\n\\n  methods: {\\n    footerMethod ({ columns, data }) {\\n      const footerData = [\\n        columns.map((column, columnIndex) => {\\n          if (columnIndex === 0) {\\n            return '平均'\\n          }\\n          if (VueUtil.includes(['age', 'rate'], column.property)) {\\n            return VueUtil.mean(data.map( data => data[column.property]))\\n          }\\n          return null\\n        }),\\n        columns.map((column, columnIndex) => {\\n          if (columnIndex === 0) {\\n            return '和值'\\n          }\\n          if (VueUtil.includes(['age', 'rate'], column.property)) {\\n            return VueUtil.sum(data.map( data => data[column.property]))\\n          }\\n          return null\\n        })\\n      ]\\n      return footerData\\n    }\\n  }\\n})\\n</script>\\n\\n<style>\\n.mytable-footer .vue-xtable-footer--column.col-blue {\\n  background-color: #2db7f5;\\n  color: #fff;\\n}\\n.mytable-footer .vue-xtable-footer--column.col-red {\\n  background-color: red;\\n  color: #fff;\\n}\\n</style>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      class=\\\"mytable-footer\\\"\\n      border\\n      highlight-hover-row\\n      show-footer\\n      height=\\\"400\\\"\\n      :footer-method=\\\"footerMethod\\\"\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"rate\\\" title=\\\"Rate\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 50)\n    this.tableData = list\n  },\n\n  methods: {\n    footerMethod ({ columns, data }) {\n      const footerData = [\n        columns.map((column, columnIndex) => {\n          if (columnIndex === 0) {\n            return '平均'\n          }\n          if (VueUtil.includes(['age', 'rate'], column.property)) {\n            return VueUtil.mean(data.map( data => data[column.property]))\n          }\n          return null\n        }),\n        columns.map((column, columnIndex) => {\n          if (columnIndex === 0) {\n            return '和值'\n          }\n          if (VueUtil.includes(['age', 'rate'], column.property)) {\n            return VueUtil.sum(data.map( data => data[column.property]))\n          }\n          return null\n        })\n      ]\n      return footerData\n    }\n  }\n}},{\"id\":\"XtableDemo.advanced.Footer.sample2\",\"label\":\"XtableDemo.advanced.Footer.sample2.label\",\"description\":\"XtableDemo.advanced.Footer.sample2.description\",\"code\":\"<vue-xtable\\n  class=\\\"mytable-footer\\\"\\n  border\\n  show-footer\\n  height=\\\"400\\\"\\n  :footer-method=\\\"footerMethod\\\"\\n  :footer-cell-class-name=\\\"footerCellClassName\\\"\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"rate\\\" title=\\\"Rate\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    let list = window.MOCK_DATA_LIST.slice(0, 50)\\n    this.tableData = list\\n  },\\n\\n  methods: {\\n    footerCellClassName ({ $rowIndex, column, columnIndex }) {\\n      if (columnIndex === 0) {\\n        if ($rowIndex === 0) {\\n          return 'col-blue'\\n        } else {\\n          return 'col-red'\\n        }\\n      }\\n    },\\n    footerMethod ({ columns, data }) {\\n      const footerData = [\\n        columns.map((column, columnIndex) => {\\n          if (columnIndex === 0) {\\n            return '平均'\\n          }\\n          if (VueUtil.includes(['age', 'rate'], column.property)) {\\n            return VueUtil.mean(data.map( data => data[column.property]))\\n          }\\n          return null\\n        }),\\n        columns.map((column, columnIndex) => {\\n          if (columnIndex === 0) {\\n            return '和值'\\n          }\\n          if (VueUtil.includes(['age', 'rate'], column.property)) {\\n            return VueUtil.sum(data.map( data => data[column.property]))\\n          }\\n          return null\\n        })\\n      ]\\n      return footerData\\n    }\\n  }\\n})\\n</script>\\n\\n<style>\\n.mytable-footer .vue-xtable-footer--column.col-blue {\\n  background-color: #2db7f5;\\n  color: #fff;\\n}\\n.mytable-footer .vue-xtable-footer--column.col-red {\\n  background-color: red;\\n  color: #fff;\\n}\\n</style>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      class=\\\"mytable-footer\\\"\\n      border\\n      show-footer\\n      height=\\\"400\\\"\\n      :footer-method=\\\"footerMethod\\\"\\n      :footer-cell-class-name=\\\"footerCellClassName\\\"\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"rate\\\" title=\\\"Rate\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 50)\n    this.tableData = list\n  },\n\n  methods: {\n    footerCellClassName ({ $rowIndex, column, columnIndex }) {\n      if (columnIndex === 0) {\n        if ($rowIndex === 0) {\n          return 'col-blue'\n        } else {\n          return 'col-red'\n        }\n      }\n    },\n    footerMethod ({ columns, data }) {\n      const footerData = [\n        columns.map((column, columnIndex) => {\n          if (columnIndex === 0) {\n            return '平均'\n          }\n          if (VueUtil.includes(['age', 'rate'], column.property)) {\n            return VueUtil.mean(data.map( data => data[column.property]))\n          }\n          return null\n        }),\n        columns.map((column, columnIndex) => {\n          if (columnIndex === 0) {\n            return '和值'\n          }\n          if (VueUtil.includes(['age', 'rate'], column.property)) {\n            return VueUtil.sum(data.map( data => data[column.property]))\n          }\n          return null\n        })\n      ]\n      return footerData\n    }\n  }\n}},{\"id\":\"XtableDemo.advanced.Footer.sample3\",\"label\":\"XtableDemo.advanced.Footer.sample3.label\",\"description\":\"XtableDemo.advanced.Footer.sample3.description\",\"code\":\"<vue-xtable\\n  class=\\\"mytable-footer\\\"\\n  border\\n  show-footer\\n  height=\\\"400\\\"\\n  show-overflow\\n  :footer-method=\\\"footerMethod\\\"\\n  :footer-cell-class-name=\\\"footerCellClassName\\\"\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\" fixed=\\\"left\\\"></vue-xtable-column>\\n  <vue-xtable-column title=\\\"基本信息\\\">\\n    <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" min-width=\\\"600\\\" sortable></vue-xtable-column>\\n    <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" min-width=\\\"600\\\"></vue-xtable-column>\\n  </vue-xtable-column>\\n  <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\" min-width=\\\"600\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"rate\\\" title=\\\"Rate\\\" width=\\\"200\\\" fixed=\\\"right\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    let list = window.MOCK_DATA_LIST.slice(0, 50)\\n    this.tableData = list\\n  },\\n\\n  methods: {\\n    footerCellClassName ({ $rowIndex, column, columnIndex }) {\\n      if (columnIndex === 0) {\\n        if ($rowIndex === 0) {\\n          return 'col-blue'\\n        } else {\\n          return 'col-red'\\n        }\\n      }\\n    },\\n    footerMethod ({ columns, data }) {\\n      const footerData = [\\n        columns.map((column, columnIndex) => {\\n          if (columnIndex === 0) {\\n            return '平均'\\n          }\\n          if (VueUtil.includes(['age', 'rate'], column.property)) {\\n            return VueUtil.mean(data.map( data => data[column.property]))\\n          }\\n          return null\\n        }),\\n        columns.map((column, columnIndex) => {\\n          if (columnIndex === 0) {\\n            return '和值'\\n          }\\n          if (VueUtil.includes(['age', 'rate'], column.property)) {\\n            return VueUtil.sum(data.map( data => data[column.property]))\\n          }\\n          return null\\n        })\\n      ]\\n      return footerData\\n    }\\n  }\\n})\\n</script>\\n\\n<style>\\n.mytable-footer .vue-xtable-footer--column.col-blue {\\n  background-color: #2db7f5;\\n  color: #fff;\\n}\\n.mytable-footer .vue-xtable-footer--column.col-red {\\n  background-color: red;\\n  color: #fff;\\n}\\n</style>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      class=\\\"mytable-footer\\\"\\n      border\\n      show-footer\\n      height=\\\"400\\\"\\n      show-overflow\\n      :footer-method=\\\"footerMethod\\\"\\n      :footer-cell-class-name=\\\"footerCellClassName\\\"\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\" fixed=\\\"left\\\"></vue-xtable-column>\\n      <vue-xtable-column title=\\\"基本信息\\\">\\n        <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" min-width=\\\"600\\\" sortable></vue-xtable-column>\\n        <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" min-width=\\\"600\\\"></vue-xtable-column>\\n      </vue-xtable-column>\\n      <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\" min-width=\\\"600\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"rate\\\" title=\\\"Rate\\\" width=\\\"200\\\" fixed=\\\"right\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 50)\n    this.tableData = list\n  },\n\n  methods: {\n    footerCellClassName ({ $rowIndex, column, columnIndex }) {\n      if (columnIndex === 0) {\n        if ($rowIndex === 0) {\n          return 'col-blue'\n        } else {\n          return 'col-red'\n        }\n      }\n    },\n    footerMethod ({ columns, data }) {\n      const footerData = [\n        columns.map((column, columnIndex) => {\n          if (columnIndex === 0) {\n            return '平均'\n          }\n          if (VueUtil.includes(['age', 'rate'], column.property)) {\n            return VueUtil.mean(data.map( data => data[column.property]))\n          }\n          return null\n        }),\n        columns.map((column, columnIndex) => {\n          if (columnIndex === 0) {\n            return '和值'\n          }\n          if (VueUtil.includes(['age', 'rate'], column.property)) {\n            return VueUtil.sum(data.map( data => data[column.property]))\n          }\n          return null\n        })\n      ]\n      return footerData\n    }\n  }\n}}],\"styles\":\".mytable-footer .vue-xtable-footer--column.col-blue {\\n  background-color: #2db7f5;\\n  color: #fff;\\n}\\n.mytable-footer .vue-xtable-footer--column.col-red {\\n  background-color: red;\\n  color: #fff;\\n}\"}","export default {\"path\":\"/XtableDemo/advanced/FooterSpan\",\"name\":\"XtableDemo.advanced.FooterSpan\",\"head\":{\"label\":\"XtableDemo.advanced.FooterSpan.label\",\"description\":\"XtableDemo.advanced.FooterSpan.description\"},\"samples\":[{\"id\":\"XtableDemo.advanced.FooterSpan.sample1\",\"label\":\"XtableDemo.advanced.FooterSpan.sample1.label\",\"description\":\"XtableDemo.advanced.FooterSpan.sample1.description\",\"code\":\"<vue-xtable\\n  border\\n  show-footer\\n  height=\\\"400\\\"\\n  :span-method=\\\"colspanMethod\\\"\\n  :footer-span-method=\\\"footerColspanMethod\\\"\\n  :footer-method=\\\"footerMethod\\\"\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable></vue-xtable-column>\\n  <vue-xtable-column field=\\\"role\\\" title=\\\"Role\\\" sortable></vue-xtable-column>\\n  <vue-xtable-column field=\\\"rate\\\" title=\\\"Rate\\\" footer-align=\\\"center\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" footer-align=\\\"center\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    let list = window.MOCK_DATA_LIST.slice(0, 20)\\n    this.tableData = list\\n  },\\n\\n  methods: {\\n    footerMethod ({ columns, data }) {\\n      const footerData = [\\n        columns.map((column, columnIndex) => {\\n          if (columnIndex === 0) {\\n            return '平均'\\n          }\\n          // 合并为一列显示\\n          if (VueUtil.includes(['age', 'rate'], column.property)) {\\n            return VueUtil.mean(data.map( data => data.age))\\n          }\\n          if (VueUtil.includes(['content'], column.property)) {\\n            return '合并为一行显示'\\n          }\\n          return null\\n        }),\\n        columns.map((column, columnIndex) => {\\n          if (columnIndex === 0) {\\n            return '和值'\\n          }\\n          // 合并为一列显示\\n          if (VueUtil.includes(['age', 'rate'], column.property)) {\\n            return VueUtil.sum(data.map( data => data.age))\\n          }\\n          if (VueUtil.includes(['content'], column.property)) {\\n            return '合并为一行显示'\\n          }\\n          return null\\n        })\\n      ]\\n      return footerData\\n    },\\n    colspanMethod ({ row, rowIndex, column, columnIndex, data }) {\\n      if (rowIndex % 2 === 0) {\\n        if (columnIndex === 2) {\\n          return {\\n            rowspan: 1,\\n            colspan: 2\\n          }\\n        } else if (columnIndex === 3) {\\n          return {\\n            rowspan: 0,\\n            colspan: 0\\n          }\\n        }\\n      }\\n    },\\n    footerColspanMethod ({ column, columnIndex, data }) {\\n      if (columnIndex === 3) {\\n        return {\\n          rowspan: 1,\\n          colspan: 2\\n        }\\n      } else if (columnIndex === 4) {\\n        return {\\n          rowspan: 0,\\n          colspan: 0\\n        }\\n      }\\n    },\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      show-footer\\n      height=\\\"400\\\"\\n      :span-method=\\\"colspanMethod\\\"\\n      :footer-span-method=\\\"footerColspanMethod\\\"\\n      :footer-method=\\\"footerMethod\\\"\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable></vue-xtable-column>\\n      <vue-xtable-column field=\\\"role\\\" title=\\\"Role\\\" sortable></vue-xtable-column>\\n      <vue-xtable-column field=\\\"rate\\\" title=\\\"Rate\\\" footer-align=\\\"center\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" footer-align=\\\"center\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 20)\n    this.tableData = list\n  },\n\n  methods: {\n    footerMethod ({ columns, data }) {\n      const footerData = [\n        columns.map((column, columnIndex) => {\n          if (columnIndex === 0) {\n            return '平均'\n          }\n          // 合并为一列显示\n          if (VueUtil.includes(['age', 'rate'], column.property)) {\n            return VueUtil.mean(data.map( data => data.age))\n          }\n          if (VueUtil.includes(['content'], column.property)) {\n            return '合并为一行显示'\n          }\n          return null\n        }),\n        columns.map((column, columnIndex) => {\n          if (columnIndex === 0) {\n            return '和值'\n          }\n          // 合并为一列显示\n          if (VueUtil.includes(['age', 'rate'], column.property)) {\n            return VueUtil.sum(data.map( data => data.age))\n          }\n          if (VueUtil.includes(['content'], column.property)) {\n            return '合并为一行显示'\n          }\n          return null\n        })\n      ]\n      return footerData\n    },\n    colspanMethod ({ row, rowIndex, column, columnIndex, data }) {\n      if (rowIndex % 2 === 0) {\n        if (columnIndex === 2) {\n          return {\n            rowspan: 1,\n            colspan: 2\n          }\n        } else if (columnIndex === 3) {\n          return {\n            rowspan: 0,\n            colspan: 0\n          }\n        }\n      }\n    },\n    footerColspanMethod ({ column, columnIndex, data }) {\n      if (columnIndex === 3) {\n        return {\n          rowspan: 1,\n          colspan: 2\n        }\n      } else if (columnIndex === 4) {\n        return {\n          rowspan: 0,\n          colspan: 0\n        }\n      }\n    },\n  }\n}},{\"id\":\"XtableDemo.advanced.FooterSpan.sample2\",\"label\":\"XtableDemo.advanced.FooterSpan.sample2.label\",\"description\":\"XtableDemo.advanced.FooterSpan.sample2.description\",\"code\":\"<vue-xtable\\n  border\\n  show-footer\\n  height=\\\"400\\\"\\n  :span-method=\\\"rowspanMethod\\\"\\n  :footer-span-method=\\\"footerRowspanMethod\\\"\\n  :footer-method=\\\"footerMethod\\\"\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"key\\\" title=\\\"Key\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"content\\\" title=\\\"Translate\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"language\\\" title=\\\"Language\\\" :filters=\\\"[{label: '中文', value: 'zh_CN'}, {label: 'English', value: 'en_US'}]\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    let list = window.MOCK_DATA_LIST.slice(0, 20)\\n    this.tableData = list\\n  },\\n\\n  methods: {\\n    footerMethod ({ columns, data }) {\\n      const footerData = [\\n        columns.map((column, columnIndex) => {\\n          if (columnIndex === 0) {\\n            return '平均'\\n          }\\n          // 合并为一列显示\\n          if (VueUtil.includes(['age', 'rate'], column.property)) {\\n            return VueUtil.mean(data.map( data => data.age))\\n          }\\n          if (VueUtil.includes(['content'], column.property)) {\\n            return '合并为一行显示'\\n          }\\n          return null\\n        }),\\n        columns.map((column, columnIndex) => {\\n          if (columnIndex === 0) {\\n            return '和值'\\n          }\\n          // 合并为一列显示\\n          if (VueUtil.includes(['age', 'rate'], column.property)) {\\n            return VueUtil.sum(data.map( data => data.age))\\n          }\\n          if (VueUtil.includes(['content'], column.property)) {\\n            return '合并为一行显示'\\n          }\\n          return null\\n        })\\n      ]\\n      return footerData\\n    },\\n    // 通用行合并函数（将相同多列数据合并为一行）\\n    rowspanMethod ({ row, $rowIndex, column, data }) {\\n      let fields = ['key']\\n      let cellValue = row[column.property]\\n      if (cellValue && VueUtil.includes(fields, column.property)) {\\n        let prevRow = data[$rowIndex - 1]\\n        let nextRow = data[$rowIndex + 1]\\n        if (prevRow && prevRow[column.property] === cellValue) {\\n          return { rowspan: 0, colspan: 0 }\\n        } else {\\n          let countRowspan = 1\\n          while (nextRow && nextRow[column.property] === cellValue) {\\n            nextRow = data[++countRowspan + $rowIndex]\\n          }\\n          if (countRowspan > 1) {\\n            return { rowspan: countRowspan, colspan: 1 }\\n          }\\n        }\\n      }\\n    },\\n    footerRowspanMethod ({ $rowIndex, column, columnIndex, data }) {\\n      if ($rowIndex === 0) {\\n        if (columnIndex === 2) {\\n          return { rowspan: 2, colspan: 1 }\\n        }\\n      } else if ($rowIndex === 1) {\\n        if (columnIndex === 2) {\\n          return { rowspan: 0, colspan: 0 }\\n        }\\n      }\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      show-footer\\n      height=\\\"400\\\"\\n      :span-method=\\\"rowspanMethod\\\"\\n      :footer-span-method=\\\"footerRowspanMethod\\\"\\n      :footer-method=\\\"footerMethod\\\"\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"key\\\" title=\\\"Key\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"content\\\" title=\\\"Translate\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"language\\\" title=\\\"Language\\\" :filters=\\\"[{label: '中文', value: 'zh_CN'}, {label: 'English', value: 'en_US'}]\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 20)\n    this.tableData = list\n  },\n\n  methods: {\n    footerMethod ({ columns, data }) {\n      const footerData = [\n        columns.map((column, columnIndex) => {\n          if (columnIndex === 0) {\n            return '平均'\n          }\n          // 合并为一列显示\n          if (VueUtil.includes(['age', 'rate'], column.property)) {\n            return VueUtil.mean(data.map( data => data.age))\n          }\n          if (VueUtil.includes(['content'], column.property)) {\n            return '合并为一行显示'\n          }\n          return null\n        }),\n        columns.map((column, columnIndex) => {\n          if (columnIndex === 0) {\n            return '和值'\n          }\n          // 合并为一列显示\n          if (VueUtil.includes(['age', 'rate'], column.property)) {\n            return VueUtil.sum(data.map( data => data.age))\n          }\n          if (VueUtil.includes(['content'], column.property)) {\n            return '合并为一行显示'\n          }\n          return null\n        })\n      ]\n      return footerData\n    },\n    // 通用行合并函数（将相同多列数据合并为一行）\n    rowspanMethod ({ row, $rowIndex, column, data }) {\n      let fields = ['key']\n      let cellValue = row[column.property]\n      if (cellValue && VueUtil.includes(fields, column.property)) {\n        let prevRow = data[$rowIndex - 1]\n        let nextRow = data[$rowIndex + 1]\n        if (prevRow && prevRow[column.property] === cellValue) {\n          return { rowspan: 0, colspan: 0 }\n        } else {\n          let countRowspan = 1\n          while (nextRow && nextRow[column.property] === cellValue) {\n            nextRow = data[++countRowspan + $rowIndex]\n          }\n          if (countRowspan > 1) {\n            return { rowspan: countRowspan, colspan: 1 }\n          }\n        }\n      }\n    },\n    footerRowspanMethod ({ $rowIndex, column, columnIndex, data }) {\n      if ($rowIndex === 0) {\n        if (columnIndex === 2) {\n          return { rowspan: 2, colspan: 1 }\n        }\n      } else if ($rowIndex === 1) {\n        if (columnIndex === 2) {\n          return { rowspan: 0, colspan: 0 }\n        }\n      }\n    }\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/advanced/Highlight\",\"name\":\"XtableDemo.advanced.Highlight\",\"head\":{\"label\":\"XtableDemo.advanced.Highlight.label\",\"description\":\"XtableDemo.advanced.Highlight.description\"},\"samples\":[{\"id\":\"XtableDemo.advanced.Highlight.sample1\",\"label\":\"XtableDemo.advanced.Highlight.sample1.label\",\"description\":\"XtableDemo.advanced.Highlight.sample1.description\",\"code\":\"<vue-xtable\\n  border\\n  resizable\\n  highlight-current-row\\n  height=\\\"500\\\"\\n  :data=\\\"tableData\\\"\\n  :keyboard-config=\\\"{isArrow: true}\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\\n  },\\n\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      resizable\\n      highlight-current-row\\n      height=\\\"500\\\"\\n      :data=\\\"tableData\\\"\\n      :keyboard-config=\\\"{isArrow: true}\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\n  },\n\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/advanced/Import\",\"name\":\"XtableDemo.advanced.Import\",\"head\":{\"label\":\"XtableDemo.advanced.Import.label\",\"description\":\"XtableDemo.advanced.Import.description\"},\"samples\":[{\"id\":\"XtableDemo.advanced.Import.sample1\",\"label\":\"XtableDemo.advanced.Import.sample1.label\",\"description\":\"XtableDemo.advanced.Import.sample1.description\",\"code\":\"<vue-toolbar>\\n  <template v-slot:buttons>\\n    <vue-button @click=\\\"clearDataEvent\\\">清空数据</vue-button>\\n    <vue-button @click=\\\"exportDataEvent\\\">导出数据</vue-button>\\n    <vue-button @click=\\\"importDataEvent\\\">导入数据</vue-button>\\n  </template>\\n</vue-toolbar>\\n\\n<vue-xtable\\n  ref=\\\"xTable\\\"\\n  highlight-hover-row\\n  height=\\\"400\\\"\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" sortable></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 10)\\n  },\\n\\n  methods: {\\n    clearDataEvent () {\\n      this.tableData = []\\n    },\\n    exportDataEvent () {\\n      this.$refs.xTable.openExport()\\n    },\\n    importDataEvent () {\\n      this.$refs.xTable.importData()\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-toolbar>\\n      <template v-slot:buttons>\\n        <vue-button @click=\\\"clearDataEvent\\\">清空数据</vue-button>\\n        <vue-button @click=\\\"exportDataEvent\\\">导出数据</vue-button>\\n        <vue-button @click=\\\"importDataEvent\\\">导入数据</vue-button>\\n      </template>\\n    </vue-toolbar>\\n\\n    <vue-xtable\\n      ref=\\\"xTable\\\"\\n      highlight-hover-row\\n      height=\\\"400\\\"\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" sortable></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 10)\n  },\n\n  methods: {\n    clearDataEvent () {\n      this.tableData = []\n    },\n    exportDataEvent () {\n      this.$refs.xTable.openExport()\n    },\n    importDataEvent () {\n      this.$refs.xTable.importData()\n    }\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/advanced/ManualFilter\",\"name\":\"XtableDemo.advanced.ManualFilter\",\"head\":{\"label\":\"XtableDemo.advanced.ManualFilter.label\",\"description\":\"XtableDemo.advanced.ManualFilter.description\"},\"samples\":[{\"id\":\"XtableDemo.advanced.ManualFilter.sample1\",\"label\":\"XtableDemo.advanced.ManualFilter.sample1.label\",\"description\":\"XtableDemo.advanced.ManualFilter.sample1.description\",\"code\":\"<vue-toolbar>\\n  <template v-slot:buttons>\\n    <vue-button @click=\\\"filterNameEvent\\\">筛选 Name</vue-button>\\n    <vue-button @click=\\\"filterAgeEvent\\\">筛选 Age</vue-button>\\n    <vue-button @click=\\\"updateNameFilterEvent\\\">更改 Name 的筛选条件</vue-button>\\n    <vue-button @click=\\\"$refs.xTable.clearFilter('age')\\\">清除 Age 的筛选条件</vue-button>\\n    <vue-button @click=\\\"$refs.xTable.clearFilter()\\\">清除所有的筛选条件</vue-button>\\n  </template>\\n</vue-toolbar>\\n\\n<vue-xtable\\n  border\\n  highlight-hover-row\\n  ref=\\\"xTable\\\"\\n  height=\\\"400\\\"\\n  :loading=\\\"loading\\\"\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable :filters=\\\"nameFilterList\\\" :filter-method=\\\"filterNameMethod\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"role\\\" title=\\\"Role\\\" sortable :filters=\\\"[{ data: '' }]\\\" :filter-method=\\\"filterRoleMethod\\\">\\n    <template v-slot:filter=\\\"scope\\\">\\n      <select class=\\\"my-select\\\" v-model=\\\"option.data\\\" v-for=\\\"(option, index) in scope.column.filters\\\" :key=\\\"index\\\" @change=\\\"scope.context.changeOption($event, !!option.data, option)\\\">\\n        <option v-for=\\\"(label, cIndex) in roleList\\\" :key=\\\"cIndex\\\" :value=\\\"label\\\">{{ label }}</option>\\n      </select>\\n    </template>\\n  </vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" sortable :filter-multiple=\\\"false\\\" :filters=\\\"[{label: 'Man', value: '1'}, {label: 'Woman', value: '0'}]\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" :filters=\\\"[{ data: '' }]\\\" :filter-method=\\\"filterAgeMethod\\\">\\n    <template v-slot:filter=\\\"scope\\\">\\n      <template v-for=\\\"(option, index) in scope.column.filters\\\">\\n        <input class=\\\"my-input\\\" type=\\\"type\\\" :key=\\\"index\\\" v-model=\\\"option.data\\\" @input=\\\"scope.context.changeOption($event, !!option.data, option)\\\" @keyup.enter=\\\"scope.context.confirmFilter()\\\" placeholder=\\\"按回车确认筛选\\\">\\n      </template>\\n    </template>\\n  </vue-xtable-column>\\n  <vue-xtable-column field=\\\"time\\\" title=\\\"Time\\\" sortable></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      loading: false,\\n      tableData: [],\\n      roleList: ['', '前端', '后端', '设计师'],\\n      nameFilterList: [\\n        { label: 'id大于10', value: 10 },\\n        { label: 'id大于40', value: 40 }\\n      ],\\n\\n    }\\n  },\\n  created () {\\n    this.findList()\\n  },\\n\\n  methods: {\\n    findList () {\\n      this.loading = true\\n      return new Promise(resolve => {\\n        setTimeout(() => {\\n          this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\\n          this.loading = false\\n          resolve()\\n        }, 300)\\n      })\\n    },\\n    filterNameMethod ({ value, row, column }) {\\n      return row.id >= value\\n    },\\n    filterRoleMethod ({ option, row }) {\\n      return row.role === option.data\\n    },\\n    filterAgeMethod ({ option, row }) {\\n      return row.age === Number(option.data)\\n    },\\n    updateNameFilterEvent () {\\n      let xTable = this.$refs.xTable\\n      xTable.filter('name', options => {\\n        // 修改筛选列表\\n        return [\\n          {\\n            label: 'id大于10',\\n            value: 10\\n          },\\n          {\\n            label: 'id大于20',\\n            value: 20\\n          },\\n          {\\n            label: 'id大于30',\\n            value: 30,\\n            checked: true // 设置为选中状态\\n          },\\n          {\\n            label: 'id大于40',\\n            value: 40\\n          }\\n        ]\\n      }).then(() => {\\n        // 修改条件之后，需要手动调用 updateData 处理表格数据\\n        xTable.updateData()\\n      })\\n    },\\n    filterNameEvent () {\\n      let xTable = this.$refs.xTable\\n      xTable.filter('name')\\n        .then(options => {\\n          // 处理条件并设置选中的选项\\n          if (options.length) {\\n            let option = options[1]\\n            option.checked = true\\n          }\\n        })\\n        .then(() => {\\n          // 修改条件之后，需要手动调用 updateData 处理表格数据\\n          xTable.updateData()\\n        })\\n    },\\n    filterAgeEvent () {\\n      let xTable = this.$refs.xTable\\n      xTable.filter('age')\\n        .then(options => {\\n          // 处理条件并设置选中的选项\\n          if (options.length) {\\n            let option = options[0]\\n            option.data = '26'\\n            option.checked = true\\n          }\\n        })\\n        .then(() => {\\n          // 修改条件之后，需要手动调用 updateData 处理表格数据\\n          xTable.updateData()\\n        })\\n    }\\n  }\\n})\\n</script>\\n\\n<style>\\n.my-select {\\n  width: 100px;\\n  height: 32px;\\n}\\n.my-input {\\n  width: 140px;\\n  height: 32px;\\n}\\n</style>\",\"template\":\"<div class=\\\"source\\\">    <vue-toolbar>\\n      <template v-slot:buttons>\\n        <vue-button @click=\\\"filterNameEvent\\\">筛选 Name</vue-button>\\n        <vue-button @click=\\\"filterAgeEvent\\\">筛选 Age</vue-button>\\n        <vue-button @click=\\\"updateNameFilterEvent\\\">更改 Name 的筛选条件</vue-button>\\n        <vue-button @click=\\\"$refs.xTable.clearFilter('age')\\\">清除 Age 的筛选条件</vue-button>\\n        <vue-button @click=\\\"$refs.xTable.clearFilter()\\\">清除所有的筛选条件</vue-button>\\n      </template>\\n    </vue-toolbar>\\n\\n    <vue-xtable\\n      border\\n      highlight-hover-row\\n      ref=\\\"xTable\\\"\\n      height=\\\"400\\\"\\n      :loading=\\\"loading\\\"\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable :filters=\\\"nameFilterList\\\" :filter-method=\\\"filterNameMethod\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"role\\\" title=\\\"Role\\\" sortable :filters=\\\"[{ data: '' }]\\\" :filter-method=\\\"filterRoleMethod\\\">\\n        <template v-slot:filter=\\\"scope\\\">\\n          <select class=\\\"my-select\\\" v-model=\\\"option.data\\\" v-for=\\\"(option, index) in scope.column.filters\\\" :key=\\\"index\\\" @change=\\\"scope.context.changeOption($event, !!option.data, option)\\\">\\n            <option v-for=\\\"(label, cIndex) in roleList\\\" :key=\\\"cIndex\\\" :value=\\\"label\\\">{{ label }}</option>\\n          </select>\\n        </template>\\n      </vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" sortable :filter-multiple=\\\"false\\\" :filters=\\\"[{label: 'Man', value: '1'}, {label: 'Woman', value: '0'}]\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" :filters=\\\"[{ data: '' }]\\\" :filter-method=\\\"filterAgeMethod\\\">\\n        <template v-slot:filter=\\\"scope\\\">\\n          <template v-for=\\\"(option, index) in scope.column.filters\\\">\\n            <input class=\\\"my-input\\\" type=\\\"type\\\" :key=\\\"index\\\" v-model=\\\"option.data\\\" @input=\\\"scope.context.changeOption($event, !!option.data, option)\\\" @keyup.enter=\\\"scope.context.confirmFilter()\\\" placeholder=\\\"按回车确认筛选\\\">\\n          </template>\\n        </template>\\n      </vue-xtable-column>\\n      <vue-xtable-column field=\\\"time\\\" title=\\\"Time\\\" sortable></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      loading: false,\n      tableData: [],\n      roleList: ['', '前端', '后端', '设计师'],\n      nameFilterList: [\n        { label: 'id大于10', value: 10 },\n        { label: 'id大于40', value: 40 }\n      ],\n\n    }\n  },\n  created () {\n    this.findList()\n  },\n\n  methods: {\n    findList () {\n      this.loading = true\n      return new Promise(resolve => {\n        setTimeout(() => {\n          this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\n          this.loading = false\n          resolve()\n        }, 300)\n      })\n    },\n    filterNameMethod ({ value, row, column }) {\n      return row.id >= value\n    },\n    filterRoleMethod ({ option, row }) {\n      return row.role === option.data\n    },\n    filterAgeMethod ({ option, row }) {\n      return row.age === Number(option.data)\n    },\n    updateNameFilterEvent () {\n      let xTable = this.$refs.xTable\n      xTable.filter('name', options => {\n        // 修改筛选列表\n        return [\n          {\n            label: 'id大于10',\n            value: 10\n          },\n          {\n            label: 'id大于20',\n            value: 20\n          },\n          {\n            label: 'id大于30',\n            value: 30,\n            checked: true // 设置为选中状态\n          },\n          {\n            label: 'id大于40',\n            value: 40\n          }\n        ]\n      }).then(() => {\n        // 修改条件之后，需要手动调用 updateData 处理表格数据\n        xTable.updateData()\n      })\n    },\n    filterNameEvent () {\n      let xTable = this.$refs.xTable\n      xTable.filter('name')\n        .then(options => {\n          // 处理条件并设置选中的选项\n          if (options.length) {\n            let option = options[1]\n            option.checked = true\n          }\n        })\n        .then(() => {\n          // 修改条件之后，需要手动调用 updateData 处理表格数据\n          xTable.updateData()\n        })\n    },\n    filterAgeEvent () {\n      let xTable = this.$refs.xTable\n      xTable.filter('age')\n        .then(options => {\n          // 处理条件并设置选中的选项\n          if (options.length) {\n            let option = options[0]\n            option.data = '26'\n            option.checked = true\n          }\n        })\n        .then(() => {\n          // 修改条件之后，需要手动调用 updateData 处理表格数据\n          xTable.updateData()\n        })\n    }\n  }\n}}],\"styles\":\".my-select {\\n  width: 100px;\\n  height: 32px;\\n}\\n.my-input {\\n  width: 140px;\\n  height: 32px;\\n}\"}","export default {\"path\":\"/XtableDemo/advanced/Menu\",\"name\":\"XtableDemo.advanced.Menu\",\"head\":{\"label\":\"XtableDemo.advanced.Menu.label\",\"description\":\"XtableDemo.advanced.Menu.description\"},\"samples\":[{\"id\":\"XtableDemo.advanced.Menu.sample1\",\"label\":\"XtableDemo.advanced.Menu.sample1.label\",\"description\":\"XtableDemo.advanced.Menu.sample1.description\",\"code\":\"<vue-xtable\\n  border\\n  show-footer\\n  highlight-current-row\\n  highlight-current-column\\n  ref=\\\"xTable\\\"\\n  :footer-method=\\\"footerMethod\\\"\\n  :data=\\\"tableData\\\"\\n  :context-menu=\\\"{header: {options: headerMenus}, body: {options: bodyMenus}, footer: {options: footerMenus}}\\\"\\n  @header-cell-context-menu=\\\"headerCellContextMenuEvent\\\"\\n  @cell-context-menu=\\\"cellContextMenuEvent\\\"\\n  @context-menu-click=\\\"contextMenuClickEvent\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"time\\\" title=\\\"Time\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n      headerMenus: [\\n        [\\n          {\\n            code: 'exportAll',\\n            name: '导出所有.csv'\\n          }\\n        ]\\n      ],\\n      bodyMenus: [\\n        [\\n          {\\n            code: 'copy',\\n            name: '复制',\\n            prefixIcon: 'fa fa-copy'\\n          }\\n        ],\\n        [\\n          {\\n            code: 'remove',\\n            name: '删除'\\n          },\\n          {\\n            code: 'filter',\\n            name: '过滤',\\n            children: [\\n              {\\n                code: 'clearFilter',\\n                name: '清除筛选'\\n              },\\n              {\\n                code: 'filterSelect',\\n                name: '按所选单元格的值筛选'\\n              }\\n            ]\\n          },\\n          {\\n            code: 'sort',\\n            name: '排序',\\n            children: [\\n              {\\n                code: 'clearSort',\\n                name: '清除排序'\\n              },\\n              {\\n                code: 'sortAsc',\\n                name: '升序'\\n              },\\n              {\\n                code: 'sortDesc',\\n                name: '倒序'\\n              }\\n            ]\\n          },\\n          {\\n            code: 'print',\\n            name: '打印',\\n            disabled: true\\n          }\\n        ]\\n      ],\\n      footerMenus: [\\n        [\\n          {\\n            code: 'clearAll',\\n            name: '清空数据'\\n          }\\n        ]\\n      ],\\n\\n    }\\n  },\\n  created () {\\n    let list = window.MOCK_DATA_LIST.slice(0, 6)\\n    this.tableData = list\\n  },\\n\\n  methods: {\\n    headerCellContextMenuEvent ({ column }) {\\n      this.$refs.xTable.setCurrentColumn(column)\\n    },\\n    cellContextMenuEvent ({ row }) {\\n      this.$refs.xTable.setCurrentRow(row)\\n    },\\n    contextMenuClickEvent ({ menu, row, column }) {\\n      switch (menu.code) {\\n        case 'copy':\\n          // 示例\\n          if (row && column) {\\n            if (VueUtil.clipboard.copy(row[column.property])) {\\n              this.$notify.success({ message:'已复制到剪贴板！'});;\\n            }\\n          }\\n          break\\n        default:\\n          this.$notify({message: `点击了 ${menu.name} 选项`})\\n      }\\n    },\\n    footerMethod ({ columns, data }) {\\n      return [\\n        columns.map((column, columnIndex) => {\\n          if (columnIndex === 0) {\\n            return '平均'\\n          }\\n          if (VueUtil.includes(['age', 'rate'], column.property)) {\\n            return VueUtil.mean(data.map(data => data[column.property]))\\n          }\\n          return null\\n        })\\n      ]\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      show-footer\\n      highlight-current-row\\n      highlight-current-column\\n      ref=\\\"xTable\\\"\\n      :footer-method=\\\"footerMethod\\\"\\n      :data=\\\"tableData\\\"\\n      :context-menu=\\\"{header: {options: headerMenus}, body: {options: bodyMenus}, footer: {options: footerMenus}}\\\"\\n      @header-cell-context-menu=\\\"headerCellContextMenuEvent\\\"\\n      @cell-context-menu=\\\"cellContextMenuEvent\\\"\\n      @context-menu-click=\\\"contextMenuClickEvent\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"time\\\" title=\\\"Time\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n      headerMenus: [\n        [\n          {\n            code: 'exportAll',\n            name: '导出所有.csv'\n          }\n        ]\n      ],\n      bodyMenus: [\n        [\n          {\n            code: 'copy',\n            name: '复制',\n            prefixIcon: 'fa fa-copy'\n          }\n        ],\n        [\n          {\n            code: 'remove',\n            name: '删除'\n          },\n          {\n            code: 'filter',\n            name: '过滤',\n            children: [\n              {\n                code: 'clearFilter',\n                name: '清除筛选'\n              },\n              {\n                code: 'filterSelect',\n                name: '按所选单元格的值筛选'\n              }\n            ]\n          },\n          {\n            code: 'sort',\n            name: '排序',\n            children: [\n              {\n                code: 'clearSort',\n                name: '清除排序'\n              },\n              {\n                code: 'sortAsc',\n                name: '升序'\n              },\n              {\n                code: 'sortDesc',\n                name: '倒序'\n              }\n            ]\n          },\n          {\n            code: 'print',\n            name: '打印',\n            disabled: true\n          }\n        ]\n      ],\n      footerMenus: [\n        [\n          {\n            code: 'clearAll',\n            name: '清空数据'\n          }\n        ]\n      ],\n\n    }\n  },\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 6)\n    this.tableData = list\n  },\n\n  methods: {\n    headerCellContextMenuEvent ({ column }) {\n      this.$refs.xTable.setCurrentColumn(column)\n    },\n    cellContextMenuEvent ({ row }) {\n      this.$refs.xTable.setCurrentRow(row)\n    },\n    contextMenuClickEvent ({ menu, row, column }) {\n      switch (menu.code) {\n        case 'copy':\n          // 示例\n          if (row && column) {\n            if (VueUtil.clipboard.copy(row[column.property])) {\n              this.$notify.success({ message:'已复制到剪贴板！'});;\n            }\n          }\n          break\n        default:\n          this.$notify({message: `点击了 ${menu.name} 选项`})\n      }\n    },\n    footerMethod ({ columns, data }) {\n      return [\n        columns.map((column, columnIndex) => {\n          if (columnIndex === 0) {\n            return '平均'\n          }\n          if (VueUtil.includes(['age', 'rate'], column.property)) {\n            return VueUtil.mean(data.map(data => data[column.property]))\n          }\n          return null\n        })\n      ]\n    }\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/advanced/MenuPrivilege\",\"name\":\"XtableDemo.advanced.MenuPrivilege\",\"head\":{\"label\":\"XtableDemo.advanced.MenuPrivilege.label\",\"description\":\"XtableDemo.advanced.MenuPrivilege.description\"},\"samples\":[{\"id\":\"XtableDemo.advanced.MenuPrivilege.sample1\",\"label\":\"XtableDemo.advanced.MenuPrivilege.sample1.label\",\"description\":\"XtableDemo.advanced.MenuPrivilege.sample1.description\",\"code\":\"<vue-xtable\\n  border\\n  show-footer\\n  highlight-current-row\\n  highlight-current-column\\n  ref=\\\"xTable\\\"\\n  :footer-method=\\\"footerMethod\\\"\\n  :data=\\\"tableData\\\"\\n  :context-menu=\\\"{header: {options: headerMenus}, body: {options: bodyMenus}, footer: {options: footerMenus}, visibleMethod: visibleMethod}\\\"\\n  @header-cell-context-menu=\\\"headerCellContextMenuEvent\\\"\\n  @cell-context-menu=\\\"cellContextMenuEvent\\\"\\n  @context-menu-click=\\\"contextMenuClickEvent\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"time\\\" title=\\\"Time\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n      headerMenus: [\\n        [\\n          {\\n            code: 'exportAll',\\n            name: '导出所有.csv',\\n            visible: true,\\n            disabled: false\\n          }\\n        ]\\n      ],\\n      bodyMenus: [\\n        [\\n          {\\n            code: 'copy',\\n            name: '复制',\\n            prefixIcon: 'fa fa-copy',\\n            visible: true,\\n            disabled: false\\n          },\\n          {\\n            code: 'clear',\\n            name: '清除内容',\\n            prefixIcon: 'fa fa-copy',\\n            visible: true,\\n            disabled: false\\n          }\\n        ],\\n        [\\n          {\\n            code: 'remove',\\n            name: '删除',\\n            visible: true,\\n            disabled: false\\n          },\\n          {\\n            code: 'filter',\\n            name: '过滤',\\n            visible: true,\\n            disabled: false,\\n            children: [\\n              {\\n                code: 'clearFilter',\\n                name: '清除筛选',\\n                visible: true,\\n                disabled: false\\n              },\\n              {\\n                code: 'filterSelect',\\n                name: '按所选单元格的值筛选',\\n                visible: true,\\n                disabled: false\\n              }\\n            ]\\n          },\\n          {\\n            code: 'sort',\\n            name: '排序',\\n            visible: true,\\n            disabled: false,\\n            children: [\\n              {\\n                code: 'clearSort',\\n                name: '清除排序',\\n                visible: true,\\n                disabled: false\\n              },\\n              {\\n                code: 'sortAsc',\\n                name: '升序',\\n                visible: true,\\n                disabled: false\\n              },\\n              {\\n                code: 'sortDesc',\\n                name: '倒序',\\n                visible: true,\\n                disabled: false\\n              }\\n            ]\\n          },\\n          {\\n            code: 'print',\\n            name: '打印',\\n            disabled: true\\n          }\\n        ]\\n      ],\\n      footerMenus: [\\n        [\\n          {\\n            code: 'clearAll',\\n            name: '清空数据',\\n            visible: true,\\n            disabled: false\\n          }\\n        ]\\n      ],\\n\\n    }\\n  },\\n  created () {\\n    let list = window.MOCK_DATA_LIST.slice(0, 6)\\n    this.tableData = list\\n  },\\n\\n  methods: {\\n    headerCellContextMenuEvent ({ column }) {\\n      this.$refs.xTable.setCurrentColumn(column)\\n    },\\n    cellContextMenuEvent ({ row }) {\\n      this.$refs.xTable.setCurrentRow(row)\\n    },\\n    visibleMethod ({ type, options, column }) {\\n      // 示例：只有 name 列允许操作，清除按钮只能在 age 才显示\\n      // 显示之前处理按钮的操作权限\\n      let isDisabled = !column || column.property !== 'name'\\n      let isVisible = column && column.property === 'age'\\n      options.forEach(list => {\\n        list.forEach(item => {\\n          if (VueUtil.includes(['copy', 'remove'], item.code)) {\\n            item.disabled = isDisabled\\n          }\\n          if (VueUtil.includes(['clear', 'filter'], item.code)) {\\n            item.visible = isVisible\\n          }\\n        })\\n      })\\n      return true\\n    },\\n    contextMenuClickEvent ({ menu, row, column }) {\\n      switch (menu.code) {\\n        case 'copy':\\n          // 示例\\n          if (row && column) {\\n            if (VueUtil.clipboard.copy(row[column.property])) {\\n              this.$notify.success({ message:'已复制到剪贴板！'});\\n            }\\n          }\\n          break\\n        default:\\n          this.$notify({message: `点击了 ${menu.name} 选项`})\\n      }\\n    },\\n    footerMethod ({ columns, data }) {\\n      return [\\n        columns.map((column, columnIndex) => {\\n          if (columnIndex === 0) {\\n            return '平均'\\n          }\\n          if (VueUtil.includes(['age', 'rate'], column.property)) {\\n            return VueUtil.mean(data.map(data => data[column.property]))\\n          }\\n          return null\\n        })\\n      ]\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      show-footer\\n      highlight-current-row\\n      highlight-current-column\\n      ref=\\\"xTable\\\"\\n      :footer-method=\\\"footerMethod\\\"\\n      :data=\\\"tableData\\\"\\n      :context-menu=\\\"{header: {options: headerMenus}, body: {options: bodyMenus}, footer: {options: footerMenus}, visibleMethod: visibleMethod}\\\"\\n      @header-cell-context-menu=\\\"headerCellContextMenuEvent\\\"\\n      @cell-context-menu=\\\"cellContextMenuEvent\\\"\\n      @context-menu-click=\\\"contextMenuClickEvent\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"time\\\" title=\\\"Time\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n      headerMenus: [\n        [\n          {\n            code: 'exportAll',\n            name: '导出所有.csv',\n            visible: true,\n            disabled: false\n          }\n        ]\n      ],\n      bodyMenus: [\n        [\n          {\n            code: 'copy',\n            name: '复制',\n            prefixIcon: 'fa fa-copy',\n            visible: true,\n            disabled: false\n          },\n          {\n            code: 'clear',\n            name: '清除内容',\n            prefixIcon: 'fa fa-copy',\n            visible: true,\n            disabled: false\n          }\n        ],\n        [\n          {\n            code: 'remove',\n            name: '删除',\n            visible: true,\n            disabled: false\n          },\n          {\n            code: 'filter',\n            name: '过滤',\n            visible: true,\n            disabled: false,\n            children: [\n              {\n                code: 'clearFilter',\n                name: '清除筛选',\n                visible: true,\n                disabled: false\n              },\n              {\n                code: 'filterSelect',\n                name: '按所选单元格的值筛选',\n                visible: true,\n                disabled: false\n              }\n            ]\n          },\n          {\n            code: 'sort',\n            name: '排序',\n            visible: true,\n            disabled: false,\n            children: [\n              {\n                code: 'clearSort',\n                name: '清除排序',\n                visible: true,\n                disabled: false\n              },\n              {\n                code: 'sortAsc',\n                name: '升序',\n                visible: true,\n                disabled: false\n              },\n              {\n                code: 'sortDesc',\n                name: '倒序',\n                visible: true,\n                disabled: false\n              }\n            ]\n          },\n          {\n            code: 'print',\n            name: '打印',\n            disabled: true\n          }\n        ]\n      ],\n      footerMenus: [\n        [\n          {\n            code: 'clearAll',\n            name: '清空数据',\n            visible: true,\n            disabled: false\n          }\n        ]\n      ],\n\n    }\n  },\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 6)\n    this.tableData = list\n  },\n\n  methods: {\n    headerCellContextMenuEvent ({ column }) {\n      this.$refs.xTable.setCurrentColumn(column)\n    },\n    cellContextMenuEvent ({ row }) {\n      this.$refs.xTable.setCurrentRow(row)\n    },\n    visibleMethod ({ type, options, column }) {\n      // 示例：只有 name 列允许操作，清除按钮只能在 age 才显示\n      // 显示之前处理按钮的操作权限\n      let isDisabled = !column || column.property !== 'name'\n      let isVisible = column && column.property === 'age'\n      options.forEach(list => {\n        list.forEach(item => {\n          if (VueUtil.includes(['copy', 'remove'], item.code)) {\n            item.disabled = isDisabled\n          }\n          if (VueUtil.includes(['clear', 'filter'], item.code)) {\n            item.visible = isVisible\n          }\n        })\n      })\n      return true\n    },\n    contextMenuClickEvent ({ menu, row, column }) {\n      switch (menu.code) {\n        case 'copy':\n          // 示例\n          if (row && column) {\n            if (VueUtil.clipboard.copy(row[column.property])) {\n              this.$notify.success({ message:'已复制到剪贴板！'});\n            }\n          }\n          break\n        default:\n          this.$notify({message: `点击了 ${menu.name} 选项`})\n      }\n    },\n    footerMethod ({ columns, data }) {\n      return [\n        columns.map((column, columnIndex) => {\n          if (columnIndex === 0) {\n            return '平均'\n          }\n          if (VueUtil.includes(['age', 'rate'], column.property)) {\n            return VueUtil.mean(data.map(data => data[column.property]))\n          }\n          return null\n        })\n      ]\n    }\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/advanced/Page\",\"name\":\"XtableDemo.advanced.Page\",\"head\":{\"label\":\"XtableDemo.advanced.Page.label\",\"description\":\"XtableDemo.advanced.Page.description\"},\"samples\":[{\"id\":\"XtableDemo.advanced.Page.sample1\",\"label\":\"XtableDemo.advanced.Page.sample1.label\",\"description\":\"XtableDemo.advanced.Page.sample1.description\",\"code\":\"<vue-xtable\\n  border\\n  show-overflow\\n  height=\\\"200\\\"\\n  row-id=\\\"id\\\"\\n  :loading=\\\"loading\\\"\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"checkbox\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column type=\\\"index\\\" title=\\\"序号\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"rate\\\" title=\\\"Rate\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<vue-xtable-pager\\n  border\\n  :loading=\\\"loading\\\"\\n  :current-page=\\\"tablePage.currentPage\\\"\\n  :page-size=\\\"tablePage.pageSize\\\"\\n  :total=\\\"tablePage.totalResult\\\"\\n  :layouts=\\\"['PrevPage', 'JumpNumber', 'NextPage', 'FullJump', 'Sizes', 'Total']\\\"\\n  @page-change=\\\"handlePageChange\\\">\\n</vue-xtable-pager>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      loading: false,\\n      tableData: [],\\n      tablePage: {\\n        currentPage: 1,\\n        pageSize: 10,\\n        totalResult: 0\\n      },\\n\\n    }\\n  },\\n  created () {\\n    this.findList()\\n  },\\n\\n  methods: {\\n    findList () {\\n      this.loading = true\\n      Vue.http.get(`/api/user/page/list/${this.tablePage.pageSize}/${this.tablePage.currentPage}`, this.formData).then(response => {\\n        let { page, result } = response.data\\n        this.tableData = result\\n        this.tablePage.totalResult = page.totalResult\\n        this.loading = false\\n      }).catch(e => {\\n        this.loading = false\\n      })\\n    },\\n    handlePageChange ({ currentPage, pageSize }) {\\n      this.tablePage.currentPage = currentPage\\n      this.tablePage.pageSize = pageSize\\n      this.findList()\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      show-overflow\\n      height=\\\"200\\\"\\n      row-id=\\\"id\\\"\\n      :loading=\\\"loading\\\"\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"checkbox\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column type=\\\"index\\\" title=\\\"序号\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"rate\\\" title=\\\"Rate\\\"></vue-xtable-column>\\n    </vue-xtable>\\n\\n    <vue-xtable-pager\\n      border\\n      :loading=\\\"loading\\\"\\n      :current-page=\\\"tablePage.currentPage\\\"\\n      :page-size=\\\"tablePage.pageSize\\\"\\n      :total=\\\"tablePage.totalResult\\\"\\n      :layouts=\\\"['PrevPage', 'JumpNumber', 'NextPage', 'FullJump', 'Sizes', 'Total']\\\"\\n      @page-change=\\\"handlePageChange\\\">\\n    </vue-xtable-pager></div>\",\"parameter\": {\n  data () {\n    return {\n      loading: false,\n      tableData: [],\n      tablePage: {\n        currentPage: 1,\n        pageSize: 10,\n        totalResult: 0\n      },\n\n    }\n  },\n  created () {\n    this.findList()\n  },\n\n  methods: {\n    findList () {\n      this.loading = true\n      Vue.http.get(`/api/user/page/list/${this.tablePage.pageSize}/${this.tablePage.currentPage}`, this.formData).then(response => {\n        let { page, result } = response.data\n        this.tableData = result\n        this.tablePage.totalResult = page.totalResult\n        this.loading = false\n      }).catch(e => {\n        this.loading = false\n      })\n    },\n    handlePageChange ({ currentPage, pageSize }) {\n      this.tablePage.currentPage = currentPage\n      this.tablePage.pageSize = pageSize\n      this.findList()\n    }\n  }\n}},{\"id\":\"XtableDemo.advanced.Page.sample2\",\"label\":\"XtableDemo.advanced.Page.sample2.label\",\"description\":\"XtableDemo.advanced.Page.sample2.description\",\"code\":\"<vue-xtable\\n  border\\n  show-overflow\\n  height=\\\"200\\\"\\n  row-id=\\\"id\\\"\\n  :loading=\\\"loading\\\"\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"checkbox\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column type=\\\"index\\\" title=\\\"序号\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"rate\\\" title=\\\"Rate\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<vue-xtable-pager\\n  background\\n  :loading=\\\"loading\\\"\\n  :current-page=\\\"tablePage.currentPage\\\"\\n  :page-size=\\\"tablePage.pageSize\\\"\\n  :total=\\\"tablePage.totalResult\\\"\\n  :layouts=\\\"['PrevPage', 'JumpNumber', 'NextPage', 'FullJump', 'Sizes', 'Total']\\\"\\n  @page-change=\\\"handlePageChange\\\">\\n</vue-xtable-pager>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      loading: false,\\n      tableData: [],\\n      tablePage: {\\n        currentPage: 1,\\n        pageSize: 10,\\n        totalResult: 0\\n      },\\n\\n    }\\n  },\\n  created () {\\n    this.findList()\\n  },\\n\\n  methods: {\\n    findList () {\\n      this.loading = true\\n      Vue.http.get(`/api/user/page/list/${this.tablePage.pageSize}/${this.tablePage.currentPage}`, this.formData).then(response => {\\n        let { page, result } = response.data\\n        this.tableData = result\\n        this.tablePage.totalResult = page.totalResult\\n        this.loading = false\\n      }).catch(e => {\\n        this.loading = false\\n      })\\n    },\\n    handlePageChange ({ currentPage, pageSize }) {\\n      this.tablePage.currentPage = currentPage\\n      this.tablePage.pageSize = pageSize\\n      this.findList()\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      show-overflow\\n      height=\\\"200\\\"\\n      row-id=\\\"id\\\"\\n      :loading=\\\"loading\\\"\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"checkbox\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column type=\\\"index\\\" title=\\\"序号\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"rate\\\" title=\\\"Rate\\\"></vue-xtable-column>\\n    </vue-xtable>\\n\\n    <vue-xtable-pager\\n      background\\n      :loading=\\\"loading\\\"\\n      :current-page=\\\"tablePage.currentPage\\\"\\n      :page-size=\\\"tablePage.pageSize\\\"\\n      :total=\\\"tablePage.totalResult\\\"\\n      :layouts=\\\"['PrevPage', 'JumpNumber', 'NextPage', 'FullJump', 'Sizes', 'Total']\\\"\\n      @page-change=\\\"handlePageChange\\\">\\n    </vue-xtable-pager></div>\",\"parameter\": {\n  data () {\n    return {\n      loading: false,\n      tableData: [],\n      tablePage: {\n        currentPage: 1,\n        pageSize: 10,\n        totalResult: 0\n      },\n\n    }\n  },\n  created () {\n    this.findList()\n  },\n\n  methods: {\n    findList () {\n      this.loading = true\n      Vue.http.get(`/api/user/page/list/${this.tablePage.pageSize}/${this.tablePage.currentPage}`, this.formData).then(response => {\n        let { page, result } = response.data\n        this.tableData = result\n        this.tablePage.totalResult = page.totalResult\n        this.loading = false\n      }).catch(e => {\n        this.loading = false\n      })\n    },\n    handlePageChange ({ currentPage, pageSize }) {\n      this.tablePage.currentPage = currentPage\n      this.tablePage.pageSize = pageSize\n      this.findList()\n    }\n  }\n}},{\"id\":\"XtableDemo.advanced.Page.sample3\",\"label\":\"XtableDemo.advanced.Page.sample3.label\",\"description\":\"XtableDemo.advanced.Page.sample3.description\",\"code\":\"<vue-xtable\\n  border\\n  show-overflow\\n  height=\\\"200\\\"\\n  row-id=\\\"id\\\"\\n  :loading=\\\"loading\\\"\\n  :start-index=\\\"(tablePage.currentPage - 1) * tablePage.pageSize\\\"\\n  :checkbox-config=\\\"{reserve: true}\\\"\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"checkbox\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column type=\\\"index\\\" title=\\\"序号\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"rate\\\" title=\\\"Rate\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<vue-xtable-pager\\n  perfect\\n  :loading=\\\"loading\\\"\\n  :current-page=\\\"tablePage.currentPage\\\"\\n  :page-size=\\\"tablePage.pageSize\\\"\\n  :total=\\\"tablePage.totalResult\\\"\\n  :layouts=\\\"['PrevPage', 'JumpNumber', 'NextPage', 'FullJump', 'Sizes', 'Total']\\\"\\n  @page-change=\\\"handlePageChange\\\">\\n</vue-xtable-pager>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      loading: false,\\n      tableData: [],\\n      tablePage: {\\n        currentPage: 1,\\n        pageSize: 10,\\n        totalResult: 0\\n      },\\n\\n    }\\n  },\\n  created () {\\n    this.findList()\\n  },\\n\\n  methods: {\\n    findList () {\\n      this.loading = true\\n      Vue.http.get(`/api/user/page/list/${this.tablePage.pageSize}/${this.tablePage.currentPage}`, this.formData).then(response => {\\n        let { page, result } = response.data\\n        this.tableData = result\\n        this.tablePage.totalResult = page.totalResult\\n        this.loading = false\\n      }).catch(e => {\\n        this.loading = false\\n      })\\n    },\\n    handlePageChange ({ currentPage, pageSize }) {\\n      this.tablePage.currentPage = currentPage\\n      this.tablePage.pageSize = pageSize\\n      this.findList()\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      show-overflow\\n      height=\\\"200\\\"\\n      row-id=\\\"id\\\"\\n      :loading=\\\"loading\\\"\\n      :start-index=\\\"(tablePage.currentPage - 1) * tablePage.pageSize\\\"\\n      :checkbox-config=\\\"{reserve: true}\\\"\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"checkbox\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column type=\\\"index\\\" title=\\\"序号\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"rate\\\" title=\\\"Rate\\\"></vue-xtable-column>\\n    </vue-xtable>\\n\\n    <vue-xtable-pager\\n      perfect\\n      :loading=\\\"loading\\\"\\n      :current-page=\\\"tablePage.currentPage\\\"\\n      :page-size=\\\"tablePage.pageSize\\\"\\n      :total=\\\"tablePage.totalResult\\\"\\n      :layouts=\\\"['PrevPage', 'JumpNumber', 'NextPage', 'FullJump', 'Sizes', 'Total']\\\"\\n      @page-change=\\\"handlePageChange\\\">\\n    </vue-xtable-pager></div>\",\"parameter\": {\n  data () {\n    return {\n      loading: false,\n      tableData: [],\n      tablePage: {\n        currentPage: 1,\n        pageSize: 10,\n        totalResult: 0\n      },\n\n    }\n  },\n  created () {\n    this.findList()\n  },\n\n  methods: {\n    findList () {\n      this.loading = true\n      Vue.http.get(`/api/user/page/list/${this.tablePage.pageSize}/${this.tablePage.currentPage}`, this.formData).then(response => {\n        let { page, result } = response.data\n        this.tableData = result\n        this.tablePage.totalResult = page.totalResult\n        this.loading = false\n      }).catch(e => {\n        this.loading = false\n      })\n    },\n    handlePageChange ({ currentPage, pageSize }) {\n      this.tablePage.currentPage = currentPage\n      this.tablePage.pageSize = pageSize\n      this.findList()\n    }\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/advanced/Print\",\"name\":\"XtableDemo.advanced.Print\",\"head\":{\"label\":\"XtableDemo.advanced.Print.label\",\"description\":\"XtableDemo.advanced.Print.description\"},\"samples\":[{\"id\":\"XtableDemo.advanced.Print.sample1\",\"label\":\"XtableDemo.advanced.Print.sample1.label\",\"description\":\"XtableDemo.advanced.Print.sample1.description\",\"code\":\"<vue-toolbar>\\n  <template v-slot:buttons>\\n    <vue-button @click=\\\"printEvent\\\">打印</vue-button>\\n    <vue-button @click=\\\"printSelectEvent\\\">打印选中</vue-button>\\n    <vue-button @click=\\\"exportDataEvent\\\">导出与打印</vue-button>\\n  </template>\\n</vue-toolbar>\\n\\n<vue-xtable\\n  border\\n  ref=\\\"xTable\\\"\\n  height=\\\"500\\\"\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"checkbox\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"role\\\" title=\\\"Role\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"date12\\\" title=\\\"Date\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      frameUrl: '',\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 20)\\n  },\\n\\n  methods: {\\n    printEvent () {\\n      this.$refs.xTable.print()\\n    },\\n    printSelectEvent () {\\n      this.$refs.xTable.print({\\n        data: this.$refs.xTable.getSelectRecords()\\n      })\\n    },\\n    exportDataEvent () {\\n      this.$refs.xTable.openExport()\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-toolbar>\\n      <template v-slot:buttons>\\n        <vue-button @click=\\\"printEvent\\\">打印</vue-button>\\n        <vue-button @click=\\\"printSelectEvent\\\">打印选中</vue-button>\\n        <vue-button @click=\\\"exportDataEvent\\\">导出与打印</vue-button>\\n      </template>\\n    </vue-toolbar>\\n\\n    <vue-xtable\\n      border\\n      ref=\\\"xTable\\\"\\n      height=\\\"500\\\"\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"checkbox\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"role\\\" title=\\\"Role\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"date12\\\" title=\\\"Date\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      frameUrl: '',\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 20)\n  },\n\n  methods: {\n    printEvent () {\n      this.$refs.xTable.print()\n    },\n    printSelectEvent () {\n      this.$refs.xTable.print({\n        data: this.$refs.xTable.getSelectRecords()\n      })\n    },\n    exportDataEvent () {\n      this.$refs.xTable.openExport()\n    }\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/advanced/RowDrag\",\"name\":\"XtableDemo.advanced.RowDrag\",\"head\":{\"label\":\"XtableDemo.advanced.RowDrag.label\",\"description\":\"XtableDemo.advanced.RowDrag.description\"},\"samples\":[{\"id\":\"XtableDemo.advanced.RowDrag.sample1\",\"label\":\"XtableDemo.advanced.RowDrag.sample1.label\",\"description\":\"XtableDemo.advanced.RowDrag.sample1.description\",\"code\":\"<vue-xtable\\n  border\\n  resizable\\n  highlight-current-row\\n  height=\\\"500\\\"\\n  :data=\\\"tableData\\\"\\n  row-key\\n  >\\n  <vue-xtable-column type=\\\"drag\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\\n  },\\n\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      resizable\\n      highlight-current-row\\n      height=\\\"500\\\"\\n      :data=\\\"tableData\\\"\\n      row-key\\n      >\\n      <vue-xtable-column type=\\\"drag\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\n  },\n\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/advanced/Search\",\"name\":\"XtableDemo.advanced.Search\",\"head\":{\"label\":\"XtableDemo.advanced.Search.label\",\"description\":\"XtableDemo.advanced.Search.description\"},\"samples\":[{\"id\":\"XtableDemo.advanced.Search.sample1\",\"label\":\"XtableDemo.advanced.Search.sample1.label\",\"description\":\"XtableDemo.advanced.Search.sample1.description\",\"code\":\"<vue-toolbar>\\n  <template v-slot:buttons>\\n    <vue-input v-model=\\\"filterName1\\\" type=\\\"search\\\" placeholder=\\\"试试全表搜索\\\"></vue-input>\\n  </template>\\n</vue-toolbar>\\n\\n<vue-xtable\\n  border\\n  height=\\\"300\\\"\\n  :data=\\\"list1\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"80\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\">\\n    <template v-slot=\\\"scope\\\">\\n      <span v-html=\\\"scope.row.name\\\"></span>\\n    </template>\\n  </vue-xtable-column>\\n  <vue-xtable-column field=\\\"role\\\" title=\\\"Role\\\">\\n    <template v-slot=\\\"scope\\\">\\n      <span v-html=\\\"scope.row.role\\\"></span>\\n    </template>\\n  </vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\">\\n    <template v-slot=\\\"scope\\\">\\n      <span v-html=\\\"scope.row.age\\\"></span>\\n    </template>\\n  </vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\">\\n    <template v-slot=\\\"scope\\\">\\n      <span v-html=\\\"scope.row.address\\\"></span>\\n    </template>\\n  </vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      filterName1: '',\\n      tableData1: [],\\n    }\\n  },\\n  computed: {\\n    list1 () {\\n      let filterName = VueUtil.toString(this.filterName1).trim().toLowerCase()\\n      if (filterName) {\\n        let filterRE = new RegExp(filterName, 'gi')\\n        let searchProps = ['name', 'role', 'age', 'address']\\n        let rest = this.tableData1.filter(item => searchProps.some(key => VueUtil.toString(item[key]).toLowerCase().indexOf(filterName) > -1))\\n        return rest.map(row => {\\n          let item = Object.assign({}, row)\\n          searchProps.forEach(key => {\\n            item[key] = VueUtil.toString(item[key]).replace(filterRE, match => `<span class=\\\"keyword-lighten\\\">${match}</span>`)\\n          })\\n          return item\\n        })\\n      }\\n      return this.tableData1\\n    },\\n  },\\n  created () {\\n    this.tableData1 = window.MOCK_DATA_LIST.slice(0, 50)\\n  },\\n\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-toolbar>\\n      <template v-slot:buttons>\\n        <vue-input v-model=\\\"filterName1\\\" type=\\\"search\\\" placeholder=\\\"试试全表搜索\\\"></vue-input>\\n      </template>\\n    </vue-toolbar>\\n\\n    <vue-xtable\\n      border\\n      height=\\\"300\\\"\\n      :data=\\\"list1\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"80\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\">\\n        <template v-slot=\\\"scope\\\">\\n          <span v-html=\\\"scope.row.name\\\"></span>\\n        </template>\\n      </vue-xtable-column>\\n      <vue-xtable-column field=\\\"role\\\" title=\\\"Role\\\">\\n        <template v-slot=\\\"scope\\\">\\n          <span v-html=\\\"scope.row.role\\\"></span>\\n        </template>\\n      </vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\">\\n        <template v-slot=\\\"scope\\\">\\n          <span v-html=\\\"scope.row.age\\\"></span>\\n        </template>\\n      </vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\">\\n        <template v-slot=\\\"scope\\\">\\n          <span v-html=\\\"scope.row.address\\\"></span>\\n        </template>\\n      </vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      filterName1: '',\n      tableData1: [],\n    }\n  },\n  computed: {\n    list1 () {\n      let filterName = VueUtil.toString(this.filterName1).trim().toLowerCase()\n      if (filterName) {\n        let filterRE = new RegExp(filterName, 'gi')\n        let searchProps = ['name', 'role', 'age', 'address']\n        let rest = this.tableData1.filter(item => searchProps.some(key => VueUtil.toString(item[key]).toLowerCase().indexOf(filterName) > -1))\n        return rest.map(row => {\n          let item = Object.assign({}, row)\n          searchProps.forEach(key => {\n            item[key] = VueUtil.toString(item[key]).replace(filterRE, match => `<span class=\"keyword-lighten\">${match}</span>`)\n          })\n          return item\n        })\n      }\n      return this.tableData1\n    },\n  },\n  created () {\n    this.tableData1 = window.MOCK_DATA_LIST.slice(0, 50)\n  },\n\n}},{\"id\":\"XtableDemo.advanced.Search.sample2\",\"label\":\"XtableDemo.advanced.Search.sample2.label\",\"description\":\"XtableDemo.advanced.Search.sample2.description\",\"code\":\"<vue-toolbar>\\n  <template v-slot:buttons>\\n    <vue-input v-model=\\\"filterName2\\\" type=\\\"search\\\" placeholder=\\\"试试全表搜索\\\"></vue-input>\\n  </template>\\n</vue-toolbar>\\n\\n<vue-xtable\\n  :data=\\\"list2\\\"\\n  :tree-config=\\\"{children: 'children', expandAll: !!filterName2}\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"160\\\" title=\\\"序号\\\" tree-node></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\">\\n    <template v-slot=\\\"scope\\\">\\n      <span v-html=\\\"scope.row.name\\\"></span>\\n    </template>\\n  </vue-xtable-column>\\n  <vue-xtable-column field=\\\"size\\\" title=\\\"Size\\\">\\n    <template v-slot=\\\"scope\\\">\\n      <span v-html=\\\"scope.row.size\\\"></span>\\n    </template>\\n  </vue-xtable-column>\\n  <vue-xtable-column field=\\\"type\\\" title=\\\"Type\\\">\\n    <template v-slot=\\\"scope\\\">\\n      <span v-html=\\\"scope.row.type\\\"></span>\\n    </template>\\n  </vue-xtable-column>\\n  <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\">\\n    <template v-slot=\\\"scope\\\">\\n      <span v-html=\\\"scope.row.date\\\"></span>\\n    </template>\\n  </vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      filterName2: '',\\n      tableData2: [],\\n    }\\n  },\\n  computed: {\\n    list2 () {\\n      let filterName = VueUtil.toString(this.filterName2).trim().toLowerCase()\\n      if (filterName) {\\n        let filterRE = new RegExp(filterName, 'gi')\\n        let options = { children: 'children' }\\n        let searchProps = ['name', 'size', 'type', 'date']\\n        let rest = VueUtil.searchTree(this.tableData2, item => searchProps.some(key => VueUtil.toString(item[key]).toLowerCase().indexOf(filterName) > -1), options)\\n        VueUtil.eachTree(rest, item => {\\n          searchProps.forEach(key => {\\n            item[key] = VueUtil.toString(item[key]).replace(filterRE, match => `<span class=\\\"keyword-lighten\\\">${match}</span>`)\\n          })\\n        }, options)\\n        return rest\\n      }\\n      return this.tableData2\\n    }\\n  },\\n  created () {\\n    this.tableData2 = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\\n  },\\n\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-toolbar>\\n      <template v-slot:buttons>\\n        <vue-input v-model=\\\"filterName2\\\" type=\\\"search\\\" placeholder=\\\"试试全表搜索\\\"></vue-input>\\n      </template>\\n    </vue-toolbar>\\n\\n    <vue-xtable\\n      :data=\\\"list2\\\"\\n      :tree-config=\\\"{children: 'children', expandAll: !!filterName2}\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"160\\\" title=\\\"序号\\\" tree-node></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\">\\n        <template v-slot=\\\"scope\\\">\\n          <span v-html=\\\"scope.row.name\\\"></span>\\n        </template>\\n      </vue-xtable-column>\\n      <vue-xtable-column field=\\\"size\\\" title=\\\"Size\\\">\\n        <template v-slot=\\\"scope\\\">\\n          <span v-html=\\\"scope.row.size\\\"></span>\\n        </template>\\n      </vue-xtable-column>\\n      <vue-xtable-column field=\\\"type\\\" title=\\\"Type\\\">\\n        <template v-slot=\\\"scope\\\">\\n          <span v-html=\\\"scope.row.type\\\"></span>\\n        </template>\\n      </vue-xtable-column>\\n      <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\">\\n        <template v-slot=\\\"scope\\\">\\n          <span v-html=\\\"scope.row.date\\\"></span>\\n        </template>\\n      </vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      filterName2: '',\n      tableData2: [],\n    }\n  },\n  computed: {\n    list2 () {\n      let filterName = VueUtil.toString(this.filterName2).trim().toLowerCase()\n      if (filterName) {\n        let filterRE = new RegExp(filterName, 'gi')\n        let options = { children: 'children' }\n        let searchProps = ['name', 'size', 'type', 'date']\n        let rest = VueUtil.searchTree(this.tableData2, item => searchProps.some(key => VueUtil.toString(item[key]).toLowerCase().indexOf(filterName) > -1), options)\n        VueUtil.eachTree(rest, item => {\n          searchProps.forEach(key => {\n            item[key] = VueUtil.toString(item[key]).replace(filterRE, match => `<span class=\"keyword-lighten\">${match}</span>`)\n          })\n        }, options)\n        return rest\n      }\n      return this.tableData2\n    }\n  },\n  created () {\n    this.tableData2 = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\n  },\n\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/advanced/Span\",\"name\":\"XtableDemo.advanced.Span\",\"head\":{\"label\":\"XtableDemo.advanced.Span.label\",\"description\":\"XtableDemo.advanced.Span.description\"},\"samples\":[{\"id\":\"XtableDemo.advanced.Span.sample1\",\"label\":\"XtableDemo.advanced.Span.sample1.label\",\"description\":\"XtableDemo.advanced.Span.sample1.description\",\"code\":\"<vue-xtable\\n  border\\n  height=\\\"400\\\"\\n  :span-method=\\\"colspanMethod\\\"\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable></vue-xtable-column>\\n  <vue-xtable-column field=\\\"role\\\" title=\\\"Role\\\" sortable></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    let list = window.MOCK_DATA_LIST.slice(0, 20)\\n    this.tableData = list\\n  },\\n\\n  methods: {\\n    colspanMethod ({ row, rowIndex, column, columnIndex, data }) {\\n      if (rowIndex % 2 === 0) {\\n        if (columnIndex === 2) {\\n          return {\\n            rowspan: 1,\\n            colspan: 2\\n          }\\n        } else if (columnIndex === 3) {\\n          return {\\n            rowspan: 0,\\n            colspan: 0\\n          }\\n        }\\n      }\\n    },\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      height=\\\"400\\\"\\n      :span-method=\\\"colspanMethod\\\"\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable></vue-xtable-column>\\n      <vue-xtable-column field=\\\"role\\\" title=\\\"Role\\\" sortable></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 20)\n    this.tableData = list\n  },\n\n  methods: {\n    colspanMethod ({ row, rowIndex, column, columnIndex, data }) {\n      if (rowIndex % 2 === 0) {\n        if (columnIndex === 2) {\n          return {\n            rowspan: 1,\n            colspan: 2\n          }\n        } else if (columnIndex === 3) {\n          return {\n            rowspan: 0,\n            colspan: 0\n          }\n        }\n      }\n    },\n  }\n}},{\"id\":\"XtableDemo.advanced.Span.sample2\",\"label\":\"XtableDemo.advanced.Span.sample2.label\",\"description\":\"XtableDemo.advanced.Span.sample2.description\",\"code\":\"<vue-xtable\\n  border\\n  height=\\\"400\\\"\\n  :span-method=\\\"rowspanMethod\\\"\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"key\\\" title=\\\"Key\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"content\\\" title=\\\"Translate\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"language\\\" title=\\\"Language\\\" :filters=\\\"[{label: '中文', value: 'zh_CN'}, {label: 'English', value: 'en_US'}]\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    let list = window.MOCK_DATA_LIST.slice(0, 20)\\n    this.tableData = list\\n  },\\n\\n  methods: {\\n    // 通用行合并函数（将相同多列数据合并为一行）\\n    rowspanMethod ({ row, $rowIndex, column, data }) {\\n      let fields = ['key']\\n      let cellValue = row[column.property]\\n      if (cellValue && VueUtil.includes(fields, column.property)) {\\n        let prevRow = data[$rowIndex - 1]\\n        let nextRow = data[$rowIndex + 1]\\n        if (prevRow && prevRow[column.property] === cellValue) {\\n          return { rowspan: 0, colspan: 0 }\\n        } else {\\n          let countRowspan = 1\\n          while (nextRow && nextRow[column.property] === cellValue) {\\n            nextRow = data[++countRowspan + $rowIndex]\\n          }\\n          if (countRowspan > 1) {\\n            return { rowspan: countRowspan, colspan: 1 }\\n          }\\n        }\\n      }\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      height=\\\"400\\\"\\n      :span-method=\\\"rowspanMethod\\\"\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"key\\\" title=\\\"Key\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"content\\\" title=\\\"Translate\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"language\\\" title=\\\"Language\\\" :filters=\\\"[{label: '中文', value: 'zh_CN'}, {label: 'English', value: 'en_US'}]\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 20)\n    this.tableData = list\n  },\n\n  methods: {\n    // 通用行合并函数（将相同多列数据合并为一行）\n    rowspanMethod ({ row, $rowIndex, column, data }) {\n      let fields = ['key']\n      let cellValue = row[column.property]\n      if (cellValue && VueUtil.includes(fields, column.property)) {\n        let prevRow = data[$rowIndex - 1]\n        let nextRow = data[$rowIndex + 1]\n        if (prevRow && prevRow[column.property] === cellValue) {\n          return { rowspan: 0, colspan: 0 }\n        } else {\n          let countRowspan = 1\n          while (nextRow && nextRow[column.property] === cellValue) {\n            nextRow = data[++countRowspan + $rowIndex]\n          }\n          if (countRowspan > 1) {\n            return { rowspan: countRowspan, colspan: 1 }\n          }\n        }\n      }\n    }\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/advanced/SpanRow\",\"name\":\"XtableDemo.advanced.SpanRow\",\"head\":{\"label\":\"XtableDemo.advanced.SpanRow.label\",\"description\":\"XtableDemo.advanced.SpanRow.description\"},\"samples\":[{\"id\":\"XtableDemo.advanced.SpanRow.sample1\",\"label\":\"XtableDemo.advanced.SpanRow.sample1.label\",\"description\":\"XtableDemo.advanced.SpanRow.sample1.description\",\"code\":\"<vue-xtable\\n  border\\n  height=\\\"600\\\"\\n  :span-method=\\\"rowspanMethod\\\"\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column field=\\\"name_1\\\" title=\\\"功能模块\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name_2\\\" title=\\\"详细功能\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name_3\\\" title=\\\"权限类型\\\">\\n    <template v-slot=\\\"scope\\\">\\n      <vue-checkbox v-model=\\\"scope.row.check_3\\\" @change=\\\"check3ChangeEvent(row)\\\">{{ scope.row.name_3 }}</vue-checkbox>\\n    </template>\\n  </vue-xtable-column>\\n  <vue-xtable-column field=\\\"name_4\\\" title=\\\"权限列表\\\">\\n    <template v-slot=\\\"scope\\\">\\n      <vue-checkbox v-model=\\\"scope.row.check_4\\\" @change=\\\"check4ChangeEvent(row)\\\">{{ scope.row.name_4 }}</vue-checkbox>\\n    </template>\\n  </vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      treeData: [\\n        {\\n          id: '10000',\\n          name: '账号管理',\\n          children: [\\n            {\\n              id: '11000',\\n              name: '用户管理',\\n              children: [\\n                {\\n                  id: '11100',\\n                  name: '查看',\\n                  children: [\\n                    {\\n                      id: '11110',\\n                      name: '用户列表'\\n                    }\\n                  ]\\n                },\\n                {\\n                  id: '11200',\\n                  name: '编辑',\\n                  children: [\\n                    {\\n                      id: '11210',\\n                      name: '用户列表'\\n                    },\\n                    {\\n                      id: '11220',\\n                      name: '新增用户'\\n                    }\\n                  ]\\n                },\\n                {\\n                  id: '11300',\\n                  name: '操作',\\n                  children: [\\n                    {\\n                      id: '11310',\\n                      name: '新增'\\n                    },\\n                    {\\n                      id: '11320',\\n                      name: '删除'\\n                    },\\n                    {\\n                      id: '11330',\\n                      name: '修改'\\n                    }\\n                  ]\\n                }\\n              ]\\n            },\\n            {\\n              id: '12000',\\n              name: '角色管理',\\n              children: [\\n                {\\n                  id: '12100',\\n                  name: '查看',\\n                  children: [\\n                    {\\n                      id: '12110',\\n                      name: '角色列表'\\n                    }\\n                  ]\\n                },\\n                {\\n                  id: '12200',\\n                  name: '编辑',\\n                  children: [\\n                    {\\n                      id: '122100',\\n                      name: '角色列表'\\n                    },\\n                    {\\n                      id: '12220',\\n                      name: '新增角色'\\n                    }\\n                  ]\\n                },\\n                {\\n                  id: '12300',\\n                  name: '操作',\\n                  children: [\\n                    {\\n                      id: '12310',\\n                      name: '新增'\\n                    },\\n                    {\\n                      id: '12320',\\n                      name: '删除'\\n                    },\\n                    {\\n                      id: '12330',\\n                      name: '修改'\\n                    }\\n                  ]\\n                }\\n              ]\\n            }\\n          ]\\n        },\\n        {\\n          id: '20000',\\n          name: '个人中心',\\n          children: [\\n            {\\n              id: '21000',\\n              name: '个性化设置',\\n              children: [\\n                {\\n                  id: '21100',\\n                  name: '查看',\\n                  children: [\\n                    {\\n                      id: '21110',\\n                      name: '信息列表'\\n                    }\\n                  ]\\n                },\\n                {\\n                  id: '21200',\\n                  name: '操作',\\n                  children: [\\n                    {\\n                      id: '21210',\\n                      name: '重置信息'\\n                    }\\n                  ]\\n                }\\n              ]\\n            },\\n            {\\n              id: '22000',\\n              name: '账户管理',\\n              children: [\\n                {\\n                  id: '22100',\\n                  name: '查看',\\n                  children: [\\n                    {\\n                      id: '22110',\\n                      name: '账户余额'\\n                    },\\n                    {\\n                      id: '22120',\\n                      name: '帐变记录'\\n                    }\\n                  ]\\n                }\\n              ]\\n            }\\n          ]\\n        }\\n      ],\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.toColTreeData()\\n  },\\n\\n  methods: {\\n    check3ChangeEvent (row) {\\n      let checked = row.check_3\\n      let levelList = this.tableData.filter(item => item.id_3 === row.id_3)\\n      levelList.forEach(item => {\\n        item.check_4 = checked\\n      })\\n    },\\n    check4ChangeEvent (row) {\\n      let levelList = this.tableData.filter(item => item.id_3 === row.id_3)\\n      let checked = levelList.every(item => item.check_4)\\n      levelList.forEach(item => {\\n        item.check_3 = checked\\n      })\\n    },\\n    // 转换横向树结构\\n    toColTreeData () {\\n      let options = { children: 'children' }\\n      let list = []\\n      let keyMap = {}\\n      VueUtil.eachTree(this.treeData, (item, index, result, paths, parent) => {\\n        keyMap[item.id] = item\\n        item.keys = parent ? parent.keys.concat([item.id]) : [item.id]\\n        if (!item.children || !item.children.length) {\\n          let row = { }\\n          item.keys.forEach((key, index) => {\\n            let level = index + 1\\n            let obj = keyMap[key]\\n            row[`check_${level}`] = false\\n            row[`id_${level}`] = obj.id\\n            row[`name_${level}`] = obj.name\\n          })\\n          list.push(row)\\n        }\\n      }, options)\\n      this.keyMap = keyMap\\n      this.tableData = list\\n    },\\n    // 通用行合并函数（将相同多列数据合并为一行）\\n    rowspanMethod ({ row, $rowIndex, column, data }) {\\n      let fields = ['name_1', 'name_2', 'name_3']\\n      let cellValue = row[column.property]\\n      if (cellValue && VueUtil.includes(fields, column.property)) {\\n        let prevRow = data[$rowIndex - 1]\\n        let nextRow = data[$rowIndex + 1]\\n        if (prevRow && prevRow[column.property] === cellValue) {\\n          return { rowspan: 0, colspan: 0 }\\n        } else {\\n          let countRowspan = 1\\n          while (nextRow && nextRow[column.property] === cellValue) {\\n            nextRow = data[++countRowspan + $rowIndex]\\n          }\\n          if (countRowspan > 1) {\\n            return { rowspan: countRowspan, colspan: 1 }\\n          }\\n        }\\n      }\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      height=\\\"600\\\"\\n      :span-method=\\\"rowspanMethod\\\"\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column field=\\\"name_1\\\" title=\\\"功能模块\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name_2\\\" title=\\\"详细功能\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name_3\\\" title=\\\"权限类型\\\">\\n        <template v-slot=\\\"scope\\\">\\n          <vue-checkbox v-model=\\\"scope.row.check_3\\\" @change=\\\"check3ChangeEvent(row)\\\">{{ scope.row.name_3 }}</vue-checkbox>\\n        </template>\\n      </vue-xtable-column>\\n      <vue-xtable-column field=\\\"name_4\\\" title=\\\"权限列表\\\">\\n        <template v-slot=\\\"scope\\\">\\n          <vue-checkbox v-model=\\\"scope.row.check_4\\\" @change=\\\"check4ChangeEvent(row)\\\">{{ scope.row.name_4 }}</vue-checkbox>\\n        </template>\\n      </vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      treeData: [\n        {\n          id: '10000',\n          name: '账号管理',\n          children: [\n            {\n              id: '11000',\n              name: '用户管理',\n              children: [\n                {\n                  id: '11100',\n                  name: '查看',\n                  children: [\n                    {\n                      id: '11110',\n                      name: '用户列表'\n                    }\n                  ]\n                },\n                {\n                  id: '11200',\n                  name: '编辑',\n                  children: [\n                    {\n                      id: '11210',\n                      name: '用户列表'\n                    },\n                    {\n                      id: '11220',\n                      name: '新增用户'\n                    }\n                  ]\n                },\n                {\n                  id: '11300',\n                  name: '操作',\n                  children: [\n                    {\n                      id: '11310',\n                      name: '新增'\n                    },\n                    {\n                      id: '11320',\n                      name: '删除'\n                    },\n                    {\n                      id: '11330',\n                      name: '修改'\n                    }\n                  ]\n                }\n              ]\n            },\n            {\n              id: '12000',\n              name: '角色管理',\n              children: [\n                {\n                  id: '12100',\n                  name: '查看',\n                  children: [\n                    {\n                      id: '12110',\n                      name: '角色列表'\n                    }\n                  ]\n                },\n                {\n                  id: '12200',\n                  name: '编辑',\n                  children: [\n                    {\n                      id: '122100',\n                      name: '角色列表'\n                    },\n                    {\n                      id: '12220',\n                      name: '新增角色'\n                    }\n                  ]\n                },\n                {\n                  id: '12300',\n                  name: '操作',\n                  children: [\n                    {\n                      id: '12310',\n                      name: '新增'\n                    },\n                    {\n                      id: '12320',\n                      name: '删除'\n                    },\n                    {\n                      id: '12330',\n                      name: '修改'\n                    }\n                  ]\n                }\n              ]\n            }\n          ]\n        },\n        {\n          id: '20000',\n          name: '个人中心',\n          children: [\n            {\n              id: '21000',\n              name: '个性化设置',\n              children: [\n                {\n                  id: '21100',\n                  name: '查看',\n                  children: [\n                    {\n                      id: '21110',\n                      name: '信息列表'\n                    }\n                  ]\n                },\n                {\n                  id: '21200',\n                  name: '操作',\n                  children: [\n                    {\n                      id: '21210',\n                      name: '重置信息'\n                    }\n                  ]\n                }\n              ]\n            },\n            {\n              id: '22000',\n              name: '账户管理',\n              children: [\n                {\n                  id: '22100',\n                  name: '查看',\n                  children: [\n                    {\n                      id: '22110',\n                      name: '账户余额'\n                    },\n                    {\n                      id: '22120',\n                      name: '帐变记录'\n                    }\n                  ]\n                }\n              ]\n            }\n          ]\n        }\n      ],\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.toColTreeData()\n  },\n\n  methods: {\n    check3ChangeEvent (row) {\n      let checked = row.check_3\n      let levelList = this.tableData.filter(item => item.id_3 === row.id_3)\n      levelList.forEach(item => {\n        item.check_4 = checked\n      })\n    },\n    check4ChangeEvent (row) {\n      let levelList = this.tableData.filter(item => item.id_3 === row.id_3)\n      let checked = levelList.every(item => item.check_4)\n      levelList.forEach(item => {\n        item.check_3 = checked\n      })\n    },\n    // 转换横向树结构\n    toColTreeData () {\n      let options = { children: 'children' }\n      let list = []\n      let keyMap = {}\n      VueUtil.eachTree(this.treeData, (item, index, result, paths, parent) => {\n        keyMap[item.id] = item\n        item.keys = parent ? parent.keys.concat([item.id]) : [item.id]\n        if (!item.children || !item.children.length) {\n          let row = { }\n          item.keys.forEach((key, index) => {\n            let level = index + 1\n            let obj = keyMap[key]\n            row[`check_${level}`] = false\n            row[`id_${level}`] = obj.id\n            row[`name_${level}`] = obj.name\n          })\n          list.push(row)\n        }\n      }, options)\n      this.keyMap = keyMap\n      this.tableData = list\n    },\n    // 通用行合并函数（将相同多列数据合并为一行）\n    rowspanMethod ({ row, $rowIndex, column, data }) {\n      let fields = ['name_1', 'name_2', 'name_3']\n      let cellValue = row[column.property]\n      if (cellValue && VueUtil.includes(fields, column.property)) {\n        let prevRow = data[$rowIndex - 1]\n        let nextRow = data[$rowIndex + 1]\n        if (prevRow && prevRow[column.property] === cellValue) {\n          return { rowspan: 0, colspan: 0 }\n        } else {\n          let countRowspan = 1\n          while (nextRow && nextRow[column.property] === cellValue) {\n            nextRow = data[++countRowspan + $rowIndex]\n          }\n          if (countRowspan > 1) {\n            return { rowspan: countRowspan, colspan: 1 }\n          }\n        }\n      }\n    }\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/advanced/Template\",\"name\":\"XtableDemo.advanced.Template\",\"head\":{\"label\":\"XtableDemo.advanced.Template.label\",\"description\":\"XtableDemo.advanced.Template.description\"},\"samples\":[{\"id\":\"XtableDemo.advanced.Template.sample1\",\"label\":\"XtableDemo.advanced.Template.sample1.label\",\"description\":\"XtableDemo.advanced.Template.sample1.description\",\"code\":\"<vue-toolbar>\\n  <template v-slot:buttons>\\n    <vue-button>{{ $t('插入行') }}</vue-button>\\n    <vue-button>\\n      <template>下拉按钮</template>\\n      <template v-slot:dropdowns>\\n        <vue-button>删除</vue-button>\\n        <vue-button>保存</vue-button>\\n      </template>\\n    </vue-button>\\n  </template>\\n</vue-toolbar>\\n\\n<vue-xtable\\n  border\\n  resizable\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"100\\\" show-overflow>\\n    <template v-slot=\\\"scope\\\">\\n      <vue-button @click=\\\"showDetailEvent(scope.row)\\\">弹框{{ scope.seq }}</vue-button>\\n    </template>\\n  </vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"姓名\\\" sortable>\\n    <template v-slot=\\\"scope\\\">\\n      <a href=\\\"/\\\" target=\\\"_black\\\">我是超链接：{{ scope.row.name }}</a>\\n    </template>\\n  </vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"性别\\\" :filters=\\\"[{data: ''}]\\\" :filter-method=\\\"filterSexMethod\\\">\\n    <template v-slot:header=\\\"scope\\\">\\n      <vue-xtable-tooltip v-model=\\\"showSexTip\\\" content=\\\"这样玩也行？\\\">\\n        <span style=\\\"color: red;\\\" @click=\\\"showSexTip = !showSexTip\\\">这样玩也行</span>\\n      </vue-xtable-tooltip>\\n    </template>\\n    <template v-slot:filter=\\\"scope\\\">\\n      <template v-for=\\\"(option, index) in scope.column.filters\\\">\\n        <input type=\\\"type\\\" v-model=\\\"option.data\\\" :key=\\\"index\\\" @input=\\\"changeFilterEvent($event, option, scope.context)\\\">\\n      </template>\\n    </template>\\n    <template v-slot=\\\"scope\\\">\\n      <span>{{ scope.row.sex }} </span>\\n      <vue-button type=\\\"text\\\">编辑</vue-button>\\n      <vue-button type=\\\"text\\\">删除</vue-button>\\n    </template>\\n  </vue-xtable-column>\\n  <vue-xtable-column field=\\\"time\\\" title=\\\"Time\\\">\\n    <template>\\n      <vue-input placeholder=\\\"这样也行\\\" size=\\\"mini\\\"></vue-input>\\n    </template>\\n    <template v-slot=\\\"scope\\\">\\n      <span>{{ formatDate(scope.row.time) }}</span>\\n    </template>\\n  </vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow>\\n    <template v-slot=\\\"scope\\\">\\n      <select v-if=\\\"scope.rowIndex === 1\\\">\\n        <option value=\\\"1\\\">还可以这样</option>\\n      </select>\\n      <a href=\\\"/\\\">{{ scope.row.name }}</a>\\n    </template>\\n  </vue-xtable-column>\\n  <vue-xtable-column field=\\\"html1\\\" title=\\\"Html片段\\\" width=\\\"160\\\" show-overflow>\\n    <template v-slot=\\\"scope\\\">\\n      <span v-html=\\\"scope.row.html1\\\"></span>\\n    </template>\\n  </vue-xtable-column>\\n  <vue-xtable-column field=\\\"img1\\\" title=\\\"图片路径\\\" width=\\\"120\\\">\\n    <template v-slot=\\\"scope\\\">\\n      <img v-if=\\\"scope.row.img1\\\" :src=\\\"scope.row.img1\\\" style=\\\"width: 100px;\\\">\\n      <span v-else>无</span>\\n    </template>\\n  </vue-xtable-column>\\n</vue-xtable>\\n\\n<vue-dialog v-model=\\\"showDetails\\\" title=\\\"查看详情\\\" width=\\\"800\\\" height=\\\"400\\\" resize>\\n  <template>{{ selectRow ? selectRow.text : '' }}</template>\\n</vue-dialog>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      showSexTip: false,\\n      showDetails: false,\\n      selectRow: null,\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    let list = window.MOCK_DATA_LIST.slice(0, 6)\\n    this.tableData = list\\n  },\\n\\n  methods: {\\n    formatDate (value) {\\n      return VueUtil.formatDate(value, 'yyyy-MM-dd HH:mm:ss.S')\\n    },\\n    filterSexMethod ({ option, row }) {\\n      return row.sex === option.data\\n    },\\n    changeFilterEvent (evnt, option, context) {\\n      context.changeMultipleOption(evnt, !!option.data, option)\\n    },\\n    showDetailEvent (row) {\\n      this.selectRow = row\\n      this.showDetails = true\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-toolbar>\\n      <template v-slot:buttons>\\n        <vue-button>{{ $t('插入行') }}</vue-button>\\n        <vue-button>\\n          <template>下拉按钮</template>\\n          <template v-slot:dropdowns>\\n            <vue-button>删除</vue-button>\\n            <vue-button>保存</vue-button>\\n          </template>\\n        </vue-button>\\n      </template>\\n    </vue-toolbar>\\n\\n    <vue-xtable\\n      border\\n      resizable\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"100\\\" show-overflow>\\n        <template v-slot=\\\"scope\\\">\\n          <vue-button @click=\\\"showDetailEvent(scope.row)\\\">弹框{{ scope.seq }}</vue-button>\\n        </template>\\n      </vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"姓名\\\" sortable>\\n        <template v-slot=\\\"scope\\\">\\n          <a href=\\\"/\\\" target=\\\"_black\\\">我是超链接：{{ scope.row.name }}</a>\\n        </template>\\n      </vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"性别\\\" :filters=\\\"[{data: ''}]\\\" :filter-method=\\\"filterSexMethod\\\">\\n        <template v-slot:header=\\\"scope\\\">\\n          <vue-xtable-tooltip v-model=\\\"showSexTip\\\" content=\\\"这样玩也行？\\\">\\n            <span style=\\\"color: red;\\\" @click=\\\"showSexTip = !showSexTip\\\">这样玩也行</span>\\n          </vue-xtable-tooltip>\\n        </template>\\n        <template v-slot:filter=\\\"scope\\\">\\n          <template v-for=\\\"(option, index) in scope.column.filters\\\">\\n            <input type=\\\"type\\\" v-model=\\\"option.data\\\" :key=\\\"index\\\" @input=\\\"changeFilterEvent($event, option, scope.context)\\\">\\n          </template>\\n        </template>\\n        <template v-slot=\\\"scope\\\">\\n          <span>{{ scope.row.sex }} </span>\\n          <vue-button type=\\\"text\\\">编辑</vue-button>\\n          <vue-button type=\\\"text\\\">删除</vue-button>\\n        </template>\\n      </vue-xtable-column>\\n      <vue-xtable-column field=\\\"time\\\" title=\\\"Time\\\">\\n        <template>\\n          <vue-input placeholder=\\\"这样也行\\\" size=\\\"mini\\\"></vue-input>\\n        </template>\\n        <template v-slot=\\\"scope\\\">\\n          <span>{{ formatDate(scope.row.time) }}</span>\\n        </template>\\n      </vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow>\\n        <template v-slot=\\\"scope\\\">\\n          <select v-if=\\\"scope.rowIndex === 1\\\">\\n            <option value=\\\"1\\\">还可以这样</option>\\n          </select>\\n          <a href=\\\"/\\\">{{ scope.row.name }}</a>\\n        </template>\\n      </vue-xtable-column>\\n      <vue-xtable-column field=\\\"html1\\\" title=\\\"Html片段\\\" width=\\\"160\\\" show-overflow>\\n        <template v-slot=\\\"scope\\\">\\n          <span v-html=\\\"scope.row.html1\\\"></span>\\n        </template>\\n      </vue-xtable-column>\\n      <vue-xtable-column field=\\\"img1\\\" title=\\\"图片路径\\\" width=\\\"120\\\">\\n        <template v-slot=\\\"scope\\\">\\n          <img v-if=\\\"scope.row.img1\\\" :src=\\\"scope.row.img1\\\" style=\\\"width: 100px;\\\">\\n          <span v-else>无</span>\\n        </template>\\n      </vue-xtable-column>\\n    </vue-xtable>\\n\\n    <vue-dialog v-model=\\\"showDetails\\\" title=\\\"查看详情\\\" width=\\\"800\\\" height=\\\"400\\\" resize>\\n      <template>{{ selectRow ? selectRow.text : '' }}</template>\\n    </vue-dialog></div>\",\"parameter\": {\n  data () {\n    return {\n      showSexTip: false,\n      showDetails: false,\n      selectRow: null,\n      tableData: [],\n\n    }\n  },\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 6)\n    this.tableData = list\n  },\n\n  methods: {\n    formatDate (value) {\n      return VueUtil.formatDate(value, 'yyyy-MM-dd HH:mm:ss.S')\n    },\n    filterSexMethod ({ option, row }) {\n      return row.sex === option.data\n    },\n    changeFilterEvent (evnt, option, context) {\n      context.changeMultipleOption(evnt, !!option.data, option)\n    },\n    showDetailEvent (row) {\n      this.selectRow = row\n      this.showDetails = true\n    }\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/advanced/Toolbar\",\"name\":\"XtableDemo.advanced.Toolbar\",\"head\":{\"label\":\"XtableDemo.advanced.Toolbar.label\",\"description\":\"XtableDemo.advanced.Toolbar.description\"},\"samples\":[{\"id\":\"XtableDemo.advanced.Toolbar.sample1\",\"label\":\"XtableDemo.advanced.Toolbar.sample1.label\",\"description\":\"XtableDemo.advanced.Toolbar.sample1.description\",\"code\":\"<vue-toolbar\\n  setting\\n  export\\n  :buttons=\\\"toolbarButtons\\\"\\n  :refresh=\\\"{query: findList}\\\"></vue-toolbar>\\n\\n<vue-xtable\\n  border\\n  height=\\\"400\\\"\\n  :loading=\\\"loading\\\"\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"姓名\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"role\\\" title=\\\"Role\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"性别\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"年龄\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"rate\\\" title=\\\"Rate\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      loading: false,\\n      tableData: [],\\n      toolbarButtons: [\\n        {\\n          code: 'btn1',\\n          name: '插入行'\\n        },\\n        {\\n          name: '下拉按钮',\\n          dropdowns: [\\n            {\\n              name: '按钮111',\\n              code: 'btn2'\\n            },\\n            {\\n              name: '按钮222',\\n              code: 'btn3'\\n            }\\n          ]\\n        }\\n      ],\\n\\n    }\\n  },\\n  created () {\\n    this.findList()\\n  },\\n\\n  methods: {\\n    findList () {\\n      this.loading = true\\n      return new Promise(resolve => {\\n        setTimeout(() => {\\n          this.tableData = window.MOCK_DATA_LIST.slice(0, 20)\\n          this.loading = false\\n          resolve()\\n        }, 300)\\n      })\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-toolbar\\n      setting\\n      export\\n      :buttons=\\\"toolbarButtons\\\"\\n      :refresh=\\\"{query: findList}\\\"></vue-toolbar>\\n\\n    <vue-xtable\\n      border\\n      height=\\\"400\\\"\\n      :loading=\\\"loading\\\"\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"姓名\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"role\\\" title=\\\"Role\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"性别\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"年龄\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"rate\\\" title=\\\"Rate\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      loading: false,\n      tableData: [],\n      toolbarButtons: [\n        {\n          code: 'btn1',\n          name: '插入行'\n        },\n        {\n          name: '下拉按钮',\n          dropdowns: [\n            {\n              name: '按钮111',\n              code: 'btn2'\n            },\n            {\n              name: '按钮222',\n              code: 'btn3'\n            }\n          ]\n        }\n      ],\n\n    }\n  },\n  created () {\n    this.findList()\n  },\n\n  methods: {\n    findList () {\n      this.loading = true\n      return new Promise(resolve => {\n        setTimeout(() => {\n          this.tableData = window.MOCK_DATA_LIST.slice(0, 20)\n          this.loading = false\n          resolve()\n        }, 300)\n      })\n    }\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/base/AutoHeight\",\"name\":\"XtableDemo.base.AutoHeight\",\"head\":{\"label\":\"XtableDemo.base.AutoHeight.label\",\"description\":\"XtableDemo.base.AutoHeight.description\"},\"samples\":[{\"id\":\"XtableDemo.base.AutoHeight.sample1\",\"label\":\"XtableDemo.base.AutoHeight.sample1.label\",\"description\":\"XtableDemo.base.AutoHeight.sample1.description\",\"code\":\"<div style=\\\"height: 600px\\\">\\n  <vue-xtable\\n    border\\n    height=\\\"auto\\\"\\n    :data=\\\"tableData\\\">\\n    <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n    <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n    <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n    <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n    <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n  </vue-xtable>\\n</div>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 20)\\n  },\\n\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <div style=\\\"height: 600px\\\">\\n      <vue-xtable\\n        border\\n        height=\\\"auto\\\"\\n        :data=\\\"tableData\\\">\\n        <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n        <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n        <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n        <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n        <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n      </vue-xtable>\\n    </div></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 20)\n  },\n\n}},{\"id\":\"XtableDemo.base.AutoHeight.sample2\",\"label\":\"XtableDemo.base.AutoHeight.sample2.label\",\"description\":\"XtableDemo.base.AutoHeight.sample2.description\",\"code\":\"<div style=\\\"height: 600px\\\">\\n  <vue-xtable\\n    border\\n    height=\\\"40%\\\"\\n    :data=\\\"tableData\\\">\\n    <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n    <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n    <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n    <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n    <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n  </vue-xtable>\\n  <vue-xtable\\n    border\\n    height=\\\"60%\\\"\\n    :data=\\\"tableData\\\">\\n    <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n    <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n    <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n    <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n    <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n  </vue-xtable>\\n</div>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 20)\\n  },\\n\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <div style=\\\"height: 600px\\\">\\n      <vue-xtable\\n        border\\n        height=\\\"40%\\\"\\n        :data=\\\"tableData\\\">\\n        <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n        <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n        <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n        <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n        <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n      </vue-xtable>\\n      <vue-xtable\\n        border\\n        height=\\\"60%\\\"\\n        :data=\\\"tableData\\\">\\n        <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n        <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n        <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n        <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n        <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n      </vue-xtable>\\n    </div></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 20)\n  },\n\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/base/Basic\",\"name\":\"XtableDemo.base.Basic\",\"head\":{\"label\":\"XtableDemo.base.Basic.label\",\"description\":\"XtableDemo.base.Basic.description\"},\"samples\":[{\"id\":\"XtableDemo.base.Basic.sample1\",\"label\":\"XtableDemo.base.Basic.sample1.label\",\"description\":\"XtableDemo.base.Basic.sample1.description\",\"code\":\"<vue-xtable\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"姓名\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"性别\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"年龄\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n    }\\n  },\\n  created () {\\n    let list = window.MOCK_DATA_LIST.slice(0, 6)\\n    this.tableData = list\\n  },\\n\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"姓名\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"性别\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"年龄\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n    }\n  },\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 6)\n    this.tableData = list\n  },\n\n}},{\"id\":\"XtableDemo.base.Basic.sample2\",\"label\":\"XtableDemo.base.Basic.sample2.label\",\"description\":\"XtableDemo.base.Basic.sample2.description\",\"code\":\"<vue-xtable\\n  highlight-hover-row\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"index\\\" title=\\\"序号\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n    }\\n  },\\n  created () {\\n    let list = window.MOCK_DATA_LIST.slice(0, 6)\\n    this.tableData = list\\n  },\\n\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      highlight-hover-row\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"index\\\" title=\\\"序号\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n    }\n  },\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 6)\n    this.tableData = list\n  },\n\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/base/Border\",\"name\":\"XtableDemo.base.Border\",\"head\":{\"label\":\"XtableDemo.base.Border.label\",\"description\":\"XtableDemo.base.Border.description\"},\"samples\":[{\"id\":\"XtableDemo.base.Border.sample1\",\"label\":\"XtableDemo.base.Border.sample1.label\",\"description\":\"XtableDemo.base.Border.sample1.description\",\"code\":\"<vue-xtable\\n  border\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\\n  },\\n\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\n  },\n\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/base/Current\",\"name\":\"XtableDemo.base.Current\",\"head\":{\"label\":\"XtableDemo.base.Current.label\",\"description\":\"XtableDemo.base.Current.description\"},\"samples\":[{\"id\":\"XtableDemo.base.Current.sample1\",\"label\":\"XtableDemo.base.Current.sample1.label\",\"description\":\"XtableDemo.base.Current.sample1.description\",\"code\":\"<vue-toolbar>\\n  <template v-slot:buttons>\\n    <vue-button @click=\\\"$refs.xTable.setCurrentRow(tableData[1])\\\">设置第二行选中</vue-button>\\n    <vue-button @click=\\\"$refs.xTable.clearCurrentRow()\\\">取消选中</vue-button>\\n    <vue-button @click=\\\"getCurrentEvent\\\">获取高亮行</vue-button>\\n  </template>\\n</vue-toolbar>\\n\\n<vue-xtable\\n  border\\n  highlight-hover-row\\n  highlight-current-row\\n  ref=\\\"xTable\\\"\\n  height=\\\"300\\\"\\n  :data=\\\"tableData\\\"\\n  @current-change=\\\"currentChangeEvent\\\">\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n\\n  created () {\\n    let list = window.MOCK_DATA_LIST.slice(0, 6)\\n    this.tableData = list\\n  },\\n  methods: {\\n    currentChangeEvent ({ row }) {\\n      console.log('行选中事件')\\n    },\\n    getCurrentEvent () {\\n      this.$alert({ message: JSON.stringify(this.$refs.xTable.getCurrentRow()) })\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-toolbar>\\n      <template v-slot:buttons>\\n        <vue-button @click=\\\"$refs.xTable.setCurrentRow(tableData[1])\\\">设置第二行选中</vue-button>\\n        <vue-button @click=\\\"$refs.xTable.clearCurrentRow()\\\">取消选中</vue-button>\\n        <vue-button @click=\\\"getCurrentEvent\\\">获取高亮行</vue-button>\\n      </template>\\n    </vue-toolbar>\\n\\n    <vue-xtable\\n      border\\n      highlight-hover-row\\n      highlight-current-row\\n      ref=\\\"xTable\\\"\\n      height=\\\"300\\\"\\n      :data=\\\"tableData\\\"\\n      @current-change=\\\"currentChangeEvent\\\">\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 6)\n    this.tableData = list\n  },\n  methods: {\n    currentChangeEvent ({ row }) {\n      console.log('行选中事件')\n    },\n    getCurrentEvent () {\n      this.$alert({ message: JSON.stringify(this.$refs.xTable.getCurrentRow()) })\n    }\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/base/DynamicStyle\",\"name\":\"XtableDemo.base.DynamicStyle\",\"head\":{\"label\":\"XtableDemo.base.DynamicStyle.label\",\"description\":\"XtableDemo.base.DynamicStyle.description\"},\"samples\":[{\"id\":\"XtableDemo.base.DynamicStyle.sample1\",\"label\":\"XtableDemo.base.DynamicStyle.sample1.label\",\"description\":\"XtableDemo.base.DynamicStyle.sample1.description\",\"code\":\"<vue-xtable\\n  border\\n  :header-cell-style=\\\"headerCellStyle\\\"\\n  :row-style=\\\"rowStyle\\\"\\n  :cell-style=\\\"cellStyle\\\"\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\\n  },\\n\\n  methods: {\\n    headerCellStyle ({ column, columnIndex }) {\\n      if (column.property === 'name') {\\n        return {\\n          backgroundColor: '#f60',\\n          color: '#ffffff'\\n        }\\n      }\\n    },\\n    rowStyle ({ row, rowIndex }) {\\n      if (VueUtil.includes([2, 3, 5], rowIndex)) {\\n        return {\\n          backgroundColor: 'red',\\n          color: '#ffffff'\\n        }\\n      }\\n    },\\n    cellStyle ({ row, rowIndex, column, columnIndex }) {\\n      if (column.property === 'sex') {\\n        if (row.sex >= '1') {\\n          return {\\n            backgroundColor: '#187'\\n          }\\n        } else if (row.age === 26) {\\n          return {\\n            backgroundColor: '#2db7f5'\\n          }\\n        }\\n      }\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      :header-cell-style=\\\"headerCellStyle\\\"\\n      :row-style=\\\"rowStyle\\\"\\n      :cell-style=\\\"cellStyle\\\"\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\n  },\n\n  methods: {\n    headerCellStyle ({ column, columnIndex }) {\n      if (column.property === 'name') {\n        return {\n          backgroundColor: '#f60',\n          color: '#ffffff'\n        }\n      }\n    },\n    rowStyle ({ row, rowIndex }) {\n      if (VueUtil.includes([2, 3, 5], rowIndex)) {\n        return {\n          backgroundColor: 'red',\n          color: '#ffffff'\n        }\n      }\n    },\n    cellStyle ({ row, rowIndex, column, columnIndex }) {\n      if (column.property === 'sex') {\n        if (row.sex >= '1') {\n          return {\n            backgroundColor: '#187'\n          }\n        } else if (row.age === 26) {\n          return {\n            backgroundColor: '#2db7f5'\n          }\n        }\n      }\n    }\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/base/Empty\",\"name\":\"XtableDemo.base.Empty\",\"head\":{\"label\":\"XtableDemo.base.Empty.label\",\"description\":\"XtableDemo.base.Empty.description\"},\"samples\":[{\"id\":\"XtableDemo.base.Empty.sample1\",\"label\":\"XtableDemo.base.Empty.sample1.label\",\"description\":\"XtableDemo.base.Empty.sample1.description\",\"code\":\"<vue-xtable\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      loading: false,\\n      tableData: [],\\n    }\\n  },\\n  created () {\\n    setTimeout(() => {\\n      this.tableData = []\\n    }, 2000)\\n  },\\n\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      loading: false,\n      tableData: [],\n    }\n  },\n  created () {\n    setTimeout(() => {\n      this.tableData = []\n    }, 2000)\n  },\n\n}},{\"id\":\"XtableDemo.base.Empty.sample2\",\"label\":\"XtableDemo.base.Empty.sample2.label\",\"description\":\"XtableDemo.base.Empty.sample2.description\",\"code\":\"<vue-xtable\\n  border\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"100\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" width=\\\"300\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" width=\\\"300\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\" width=\\\"300\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" width=\\\"300\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" width=\\\"300\\\" show-overflow></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      loading: false,\\n      tableData: [],\\n    }\\n  },\\n  created () {\\n    setTimeout(() => {\\n      this.tableData = []\\n    }, 2000)\\n  },\\n\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"100\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" width=\\\"300\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" width=\\\"300\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\" width=\\\"300\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" width=\\\"300\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" width=\\\"300\\\" show-overflow></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      loading: false,\n      tableData: [],\n    }\n  },\n  created () {\n    setTimeout(() => {\n      this.tableData = []\n    }, 2000)\n  },\n\n}},{\"id\":\"XtableDemo.base.Empty.sample3\",\"label\":\"XtableDemo.base.Empty.sample3.label\",\"description\":\"XtableDemo.base.Empty.sample3.description\",\"code\":\"<vue-xtable\\n  border\\n  height=\\\"300\\\"\\n  :loading=\\\"loading\\\"\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n  <template v-slot:empty>\\n    <span style=\\\"color: red;\\\">没有更多数据了！</span>\\n  </template>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      loading: false,\\n      tableData: [],\\n    }\\n  },\\n  created () {\\n    this.loading = true\\n    setTimeout(() => {\\n      this.loading = false\\n      this.tableData = []\\n    }, 3000)\\n  },\\n\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      height=\\\"300\\\"\\n      :loading=\\\"loading\\\"\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n      <template v-slot:empty>\\n        <span style=\\\"color: red;\\\">没有更多数据了！</span>\\n      </template>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      loading: false,\n      tableData: [],\n    }\n  },\n  created () {\n    this.loading = true\n    setTimeout(() => {\n      this.loading = false\n      this.tableData = []\n    }, 3000)\n  },\n\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/base/Filter\",\"name\":\"XtableDemo.base.Filter\",\"head\":{\"label\":\"XtableDemo.base.Filter.label\",\"description\":\"XtableDemo.base.Filter.description\"},\"samples\":[{\"id\":\"XtableDemo.base.Filter.sample1\",\"label\":\"XtableDemo.base.Filter.sample1.label\",\"description\":\"XtableDemo.base.Filter.sample1.description\",\"code\":\"<vue-xtable\\n  border\\n  highlight-hover-row\\n  height=\\\"400\\\"\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable :filters=\\\"[{label: 'id大于10', value: 10}, {label: 'id大于40', value: 40}]\\\" :filter-method=\\\"filterNameMethod\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" sortable :filters=\\\"[{label: 'Man', value: '1'}, {label: 'Woman', value: '0'}]\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" :filters=\\\"[{ data: '' }]\\\" :filter-method=\\\"filterAgeMethod\\\">\\n    <template v-slot:filter=\\\"scope\\\">\\n      <input type=\\\"type\\\" v-for=\\\"(option, index) in scope.column.filters\\\" :key=\\\"index\\\" v-model=\\\"option.data\\\" @input=\\\"scope.context.changeOption($event, !!option.data, option)\\\">\\n    </template>\\n  </vue-xtable-column>\\n  <vue-xtable-column field=\\\"time\\\" title=\\\"Time\\\" sortable></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\\n  },\\n\\n  methods: {\\n    filterNameMethod ({ value, row, column }) {\\n      return row.id >= value\\n    },\\n    filterAgeMethod ({ option, row }) {\\n      return row.age === Number(option.data)\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      highlight-hover-row\\n      height=\\\"400\\\"\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable :filters=\\\"[{label: 'id大于10', value: 10}, {label: 'id大于40', value: 40}]\\\" :filter-method=\\\"filterNameMethod\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" sortable :filters=\\\"[{label: 'Man', value: '1'}, {label: 'Woman', value: '0'}]\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" :filters=\\\"[{ data: '' }]\\\" :filter-method=\\\"filterAgeMethod\\\">\\n        <template v-slot:filter=\\\"scope\\\">\\n          <input type=\\\"type\\\" v-for=\\\"(option, index) in scope.column.filters\\\" :key=\\\"index\\\" v-model=\\\"option.data\\\" @input=\\\"scope.context.changeOption($event, !!option.data, option)\\\">\\n        </template>\\n      </vue-xtable-column>\\n      <vue-xtable-column field=\\\"time\\\" title=\\\"Time\\\" sortable></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\n  },\n\n  methods: {\n    filterNameMethod ({ value, row, column }) {\n      return row.id >= value\n    },\n    filterAgeMethod ({ option, row }) {\n      return row.age === Number(option.data)\n    }\n  }\n}},{\"id\":\"XtableDemo.base.Filter.sample2\",\"label\":\"XtableDemo.base.Filter.sample2.label\",\"description\":\"XtableDemo.base.Filter.sample2.description\",\"code\":\"<vue-xtable\\n  border\\n  highlight-hover-row\\n  height=\\\"400\\\"\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable :filters=\\\"[{label: 'id大于10', value: 10}, {label: 'id大于40', value: 40, checked: true}]\\\" :filter-method=\\\"filterNameMethod\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" sortable :filters=\\\"[{label: 'Man', value: '1'}, {label: 'Woman', value: '0'}]\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" :filters=\\\"[{ data: '30', checked: true }]\\\" :filter-method=\\\"filterAgeMethod\\\">\\n    <template v-slot:filter=\\\"scope\\\">\\n      <input type=\\\"type\\\" v-for=\\\"(option, index) in scope.column.filters\\\" :key=\\\"index\\\" v-model=\\\"option.data\\\" @input=\\\"scope.context.changeOption($event, !!option.data, option)\\\">\\n    </template>\\n  </vue-xtable-column>\\n  <vue-xtable-column field=\\\"time\\\" title=\\\"Time\\\" sortable></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\\n  },\\n\\n  methods: {\\n    filterNameMethod ({ value, row, column }) {\\n      return row.id >= value\\n    },\\n    filterAgeMethod ({ option, row }) {\\n      return row.age === Number(option.data)\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      highlight-hover-row\\n      height=\\\"400\\\"\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable :filters=\\\"[{label: 'id大于10', value: 10}, {label: 'id大于40', value: 40, checked: true}]\\\" :filter-method=\\\"filterNameMethod\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" sortable :filters=\\\"[{label: 'Man', value: '1'}, {label: 'Woman', value: '0'}]\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" :filters=\\\"[{ data: '30', checked: true }]\\\" :filter-method=\\\"filterAgeMethod\\\">\\n        <template v-slot:filter=\\\"scope\\\">\\n          <input type=\\\"type\\\" v-for=\\\"(option, index) in scope.column.filters\\\" :key=\\\"index\\\" v-model=\\\"option.data\\\" @input=\\\"scope.context.changeOption($event, !!option.data, option)\\\">\\n        </template>\\n      </vue-xtable-column>\\n      <vue-xtable-column field=\\\"time\\\" title=\\\"Time\\\" sortable></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\n  },\n\n  methods: {\n    filterNameMethod ({ value, row, column }) {\n      return row.id >= value\n    },\n    filterAgeMethod ({ option, row }) {\n      return row.age === Number(option.data)\n    }\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/base/Fixed\",\"name\":\"XtableDemo.base.Fixed\",\"head\":{\"label\":\"XtableDemo.base.Fixed.label\",\"description\":\"XtableDemo.base.Fixed.description\"},\"samples\":[{\"id\":\"XtableDemo.base.Fixed.sample1\",\"label\":\"XtableDemo.base.Fixed.sample1.label\",\"description\":\"XtableDemo.base.Fixed.sample1.description\",\"code\":\"<vue-xtable\\n  border\\n  show-overflow\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\" fixed=\\\"left\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" width=\\\"300\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"role\\\" title=\\\"Role\\\" width=\\\"300\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" width=\\\"300\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\" width=\\\"300\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" fixed=\\\"right\\\" width=\\\"300\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 4)\\n  },\\n\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      show-overflow\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\" fixed=\\\"left\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" width=\\\"300\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"role\\\" title=\\\"Role\\\" width=\\\"300\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" width=\\\"300\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\" width=\\\"300\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" fixed=\\\"right\\\" width=\\\"300\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 4)\n  },\n\n}},{\"id\":\"XtableDemo.base.Fixed.sample2\",\"label\":\"XtableDemo.base.Fixed.sample2.label\",\"description\":\"XtableDemo.base.Fixed.sample2.description\",\"code\":\"<vue-xtable\\n  border\\n  show-overflow\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\" fixed=\\\"left\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"role\\\" title=\\\"Role\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" fixed=\\\"right\\\" width=\\\"300\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 4)\\n  },\\n\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      show-overflow\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\" fixed=\\\"left\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"role\\\" title=\\\"Role\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" fixed=\\\"right\\\" width=\\\"300\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 4)\n  },\n\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/base/FixedFull\",\"name\":\"XtableDemo.base.FixedFull\",\"head\":{\"label\":\"XtableDemo.base.FixedFull.label\",\"description\":\"XtableDemo.base.FixedFull.description\"},\"samples\":[{\"id\":\"XtableDemo.base.FixedFull.sample1\",\"label\":\"XtableDemo.base.FixedFull.sample1.label\",\"description\":\"XtableDemo.base.FixedFull.sample1.description\",\"code\":\"<vue-xtable\\n  border\\n  resizable\\n  height=\\\"300\\\"\\n  highlight-hover-row\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\" fixed=\\\"left\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" width=\\\"300\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"role\\\" title=\\\"Role\\\" width=\\\"300\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" width=\\\"300\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\" width=\\\"300\\\"></vue-xtable-column>\\n  <vue-xtable-column title=\\\"操作\\\" fixed=\\\"right\\\" width=\\\"200\\\">\\n    <template>\\n      <vue-button type=\\\"text\\\">按钮1</vue-button>\\n      <vue-button type=\\\"text\\\">按钮2</vue-button>\\n    </template>\\n  </vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      visible: true,\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\\n  },\\n\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      resizable\\n      height=\\\"300\\\"\\n      highlight-hover-row\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\" fixed=\\\"left\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" width=\\\"300\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"role\\\" title=\\\"Role\\\" width=\\\"300\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" width=\\\"300\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\" width=\\\"300\\\"></vue-xtable-column>\\n      <vue-xtable-column title=\\\"操作\\\" fixed=\\\"right\\\" width=\\\"200\\\">\\n        <template>\\n          <vue-button type=\\\"text\\\">按钮1</vue-button>\\n          <vue-button type=\\\"text\\\">按钮2</vue-button>\\n        </template>\\n      </vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      visible: true,\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\n  },\n\n}},{\"id\":\"XtableDemo.base.FixedFull.sample2\",\"label\":\"XtableDemo.base.FixedFull.sample2.label\",\"description\":\"XtableDemo.base.FixedFull.sample2.description\",\"code\":\"<vue-xtable\\n  border\\n  height=\\\"300\\\"\\n  highlight-hover-row\\n  show-overflow\\n  v-if=\\\"visible\\\"\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\" fixed=\\\"left\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" width=\\\"300\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"role\\\" title=\\\"Role\\\" width=\\\"300\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" width=\\\"300\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\" width=\\\"300\\\"></vue-xtable-column>\\n  <vue-xtable-column title=\\\"操作\\\" fixed=\\\"right\\\" width=\\\"200\\\">\\n    <template>\\n      <vue-button type=\\\"primary\\\">按钮1</vue-button>\\n      <vue-button>按钮2</vue-button>\\n    </template>\\n  </vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      visible: true,\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\\n  },\\n\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      height=\\\"300\\\"\\n      highlight-hover-row\\n      show-overflow\\n      v-if=\\\"visible\\\"\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\" fixed=\\\"left\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" width=\\\"300\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"role\\\" title=\\\"Role\\\" width=\\\"300\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" width=\\\"300\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\" width=\\\"300\\\"></vue-xtable-column>\\n      <vue-xtable-column title=\\\"操作\\\" fixed=\\\"right\\\" width=\\\"200\\\">\\n        <template>\\n          <vue-button type=\\\"primary\\\">按钮1</vue-button>\\n          <vue-button>按钮2</vue-button>\\n        </template>\\n      </vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      visible: true,\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\n  },\n\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/base/Format\",\"name\":\"XtableDemo.base.Format\",\"head\":{\"label\":\"XtableDemo.base.Format.label\",\"description\":\"XtableDemo.base.Format.description\"},\"samples\":[{\"id\":\"XtableDemo.base.Format.sample1\",\"label\":\"XtableDemo.base.Format.sample1.label\",\"description\":\"XtableDemo.base.Format.sample1.description\",\"code\":\"<vue-xtable\\n  border\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" :formatter=\\\"formatterSex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"time\\\" title=\\\"Time\\\" :formatter=\\\"formatTime\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n      sexList: [\\n        {\\n          label: '女',\\n          value: '0'\\n        },\\n        {\\n          label: '男',\\n          value: '1'\\n        }\\n      ],\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\\n  },\\n  methods: {\\n    formatterSex ({ cellValue }) {\\n      let item = VueUtil.find(this.sexList, item => item.value === cellValue)\\n      return item ? item.label : ''\\n    },\\n    formatTime ({ cellValue, row, column }) {\\n      return VueUtil.formatDate(cellValue, 'yyyy-MM-dd HH:ss:mm')\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" :formatter=\\\"formatterSex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"time\\\" title=\\\"Time\\\" :formatter=\\\"formatTime\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n      sexList: [\n        {\n          label: '女',\n          value: '0'\n        },\n        {\n          label: '男',\n          value: '1'\n        }\n      ],\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\n  },\n  methods: {\n    formatterSex ({ cellValue }) {\n      let item = VueUtil.find(this.sexList, item => item.value === cellValue)\n      return item ? item.label : ''\n    },\n    formatTime ({ cellValue, row, column }) {\n      return VueUtil.formatDate(cellValue, 'yyyy-MM-dd HH:ss:mm')\n    }\n  }\n}},{\"id\":\"XtableDemo.base.Format.sample2\",\"label\":\"XtableDemo.base.Format.sample2.label\",\"description\":\"XtableDemo.base.Format.sample2.description\",\"code\":\"<vue-xtable\\n  border\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"date\\\" title=\\\"转日期\\\" formatter=\\\"formatDate\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"time\\\" title=\\\"转日期格式\\\" :formatter=\\\"['formatDate', 'yyyy-MM-dd']\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"num\\\" title=\\\"转整数\\\" formatter=\\\"toInteger\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"num\\\" title=\\\"截取三位小数\\\" :formatter=\\\"['formatNumber', 3]\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"格式化性别\\\" :formatter=\\\"['formatSelect', sexList]\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n      sexList: [\\n        {\\n          label: '女',\\n          value: '0'\\n        },\\n        {\\n          label: '男',\\n          value: '1'\\n        }\\n      ],\\n    }\\n  },\\n  created () {\\n    VueUtil.formatSelect = function formatSelect (cellValue, list) {\\n      let item = VueUtil.find(list, item => item.value === cellValue)\\n      return item ? item.label : ''\\n    }\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\\n  },\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"date\\\" title=\\\"转日期\\\" formatter=\\\"formatDate\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"time\\\" title=\\\"转日期格式\\\" :formatter=\\\"['formatDate', 'yyyy-MM-dd']\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"num\\\" title=\\\"转整数\\\" formatter=\\\"toInteger\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"num\\\" title=\\\"截取三位小数\\\" :formatter=\\\"['formatNumber', 3]\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"格式化性别\\\" :formatter=\\\"['formatSelect', sexList]\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n      sexList: [\n        {\n          label: '女',\n          value: '0'\n        },\n        {\n          label: '男',\n          value: '1'\n        }\n      ],\n    }\n  },\n  created () {\n    VueUtil.formatSelect = function formatSelect (cellValue, list) {\n      let item = VueUtil.find(list, item => item.value === cellValue)\n      return item ? item.label : ''\n    }\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\n  },\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/base/Group\",\"name\":\"XtableDemo.base.Group\",\"head\":{\"label\":\"XtableDemo.base.Group.label\",\"description\":\"XtableDemo.base.Group.description\"},\"samples\":[{\"id\":\"XtableDemo.base.Group.sample1\",\"label\":\"XtableDemo.base.Group.sample1.label\",\"description\":\"XtableDemo.base.Group.sample1.description\",\"code\":\"<vue-xtable\\n  border\\n  height=\\\"400\\\"\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column title=\\\"基本信息\\\">\\n    <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n    <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n  </vue-xtable-column>\\n  <vue-xtable-column title=\\\"更多信息\\\">\\n    <vue-xtable-column field=\\\"role\\\" title=\\\"Role\\\"></vue-xtable-column>\\n    <vue-xtable-column title=\\\"详细信息\\\">\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n    </vue-xtable-column>\\n  </vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\\n  },\\n\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      height=\\\"400\\\"\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column title=\\\"基本信息\\\">\\n        <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n        <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n      </vue-xtable-column>\\n      <vue-xtable-column title=\\\"更多信息\\\">\\n        <vue-xtable-column field=\\\"role\\\" title=\\\"Role\\\"></vue-xtable-column>\\n        <vue-xtable-column title=\\\"详细信息\\\">\\n          <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n          <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n        </vue-xtable-column>\\n      </vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\n  },\n\n}},{\"id\":\"XtableDemo.base.Group.sample2\",\"label\":\"XtableDemo.base.Group.sample2.label\",\"description\":\"XtableDemo.base.Group.sample2.description\",\"code\":\"<vue-xtable\\n  border\\n  height=\\\"400\\\"\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column title=\\\"基本信息\\\">\\n    <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\" fixed=\\\"left\\\"></vue-xtable-column>\\n    <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" fixed=\\\"left\\\" width=\\\"100\\\"></vue-xtable-column>\\n  </vue-xtable-column>\\n  <vue-xtable-column title=\\\"更多信息\\\">\\n    <vue-xtable-column field=\\\"role\\\" title=\\\"Role\\\" width=\\\"300\\\"></vue-xtable-column>\\n    <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" width=\\\"300\\\"></vue-xtable-column>\\n    <vue-xtable-column title=\\\"详细信息\\\">\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" width=\\\"300\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\" width=\\\"300\\\"></vue-xtable-column>\\n    </vue-xtable-column>\\n  </vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" width=\\\"300\\\" fixed=\\\"right\\\" show-overflow></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\\n  },\\n\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      height=\\\"400\\\"\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column title=\\\"基本信息\\\">\\n        <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\" fixed=\\\"left\\\"></vue-xtable-column>\\n        <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" fixed=\\\"left\\\" width=\\\"100\\\"></vue-xtable-column>\\n      </vue-xtable-column>\\n      <vue-xtable-column title=\\\"更多信息\\\">\\n        <vue-xtable-column field=\\\"role\\\" title=\\\"Role\\\" width=\\\"300\\\"></vue-xtable-column>\\n        <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" width=\\\"300\\\"></vue-xtable-column>\\n        <vue-xtable-column title=\\\"详细信息\\\">\\n          <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" width=\\\"300\\\"></vue-xtable-column>\\n          <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\" width=\\\"300\\\"></vue-xtable-column>\\n        </vue-xtable-column>\\n      </vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" width=\\\"300\\\" fixed=\\\"right\\\" show-overflow></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\n  },\n\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/base/Header\",\"name\":\"XtableDemo.base.Header\",\"head\":{\"label\":\"XtableDemo.base.Header.label\",\"description\":\"XtableDemo.base.Header.description\"},\"samples\":[{\"id\":\"XtableDemo.base.Header.sample1\",\"label\":\"XtableDemo.base.Header.sample1.label\",\"description\":\"XtableDemo.base.Header.sample1.description\",\"code\":\"<vue-xtable\\n  :show-header=\\\"false\\\"\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\\n  },\\n\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      :show-header=\\\"false\\\"\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\n  },\n\n}},{\"id\":\"XtableDemo.base.Header.sample2\",\"label\":\"XtableDemo.base.Header.sample2.label\",\"description\":\"XtableDemo.base.Header.sample2.description\",\"code\":\"<vue-xtable\\n  height=\\\"400\\\"\\n  :show-header=\\\"false\\\"\\n  :data=\\\"tableData2\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData2 = window.MOCK_DATA_LIST.slice(0, 50)\\n  },\\n\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      height=\\\"400\\\"\\n      :show-header=\\\"false\\\"\\n      :data=\\\"tableData2\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData2 = window.MOCK_DATA_LIST.slice(0, 50)\n  },\n\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/base/HeaderHighlight\",\"name\":\"XtableDemo.base.HeaderHighlight\",\"head\":{\"label\":\"XtableDemo.base.HeaderHighlight.label\",\"description\":\"XtableDemo.base.HeaderHighlight.description\"},\"samples\":[{\"id\":\"XtableDemo.base.HeaderHighlight.sample1\",\"label\":\"XtableDemo.base.HeaderHighlight.sample1.label\",\"description\":\"XtableDemo.base.HeaderHighlight.sample1.description\",\"code\":\"<vue-xtable\\n  border\\n  highlight-hover-column\\n  highlight-current-column\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 5)\\n  },\\n\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      highlight-hover-column\\n      highlight-current-column\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 5)\n  },\n\n}},{\"id\":\"XtableDemo.base.HeaderHighlight.sample2\",\"label\":\"XtableDemo.base.HeaderHighlight.sample2.label\",\"description\":\"XtableDemo.base.HeaderHighlight.sample2.description\",\"code\":\"<vue-xtable\\n  border\\n  highlight-hover-row\\n  highlight-current-row\\n  highlight-hover-column\\n  highlight-current-column\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 5)\\n  },\\n\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      highlight-hover-row\\n      highlight-current-row\\n      highlight-hover-column\\n      highlight-current-column\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 5)\n  },\n\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/base/Height\",\"name\":\"XtableDemo.base.Height\",\"head\":{\"label\":\"XtableDemo.base.Height.label\",\"description\":\"XtableDemo.base.Height.description\"},\"samples\":[{\"id\":\"XtableDemo.base.Height.sample1\",\"label\":\"XtableDemo.base.Height.sample1.label\",\"description\":\"XtableDemo.base.Height.sample1.description\",\"code\":\"<vue-xtable\\n  border\\n  height=\\\"400\\\"\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\\n  },\\n\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      height=\\\"400\\\"\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\n  },\n\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/base/Index\",\"name\":\"XtableDemo.base.Index\",\"head\":{\"label\":\"XtableDemo.base.Index.label\",\"description\":\"XtableDemo.base.Index.description\"},\"samples\":[{\"id\":\"XtableDemo.base.Index.sample1\",\"label\":\"XtableDemo.base.Index.sample1.label\",\"description\":\"XtableDemo.base.Index.sample1.description\",\"code\":\"<vue-xtable\\n  border\\n  height=\\\"300\\\"\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\\n  },\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      height=\\\"300\\\"\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\n  },\n}},{\"id\":\"XtableDemo.base.Index.sample2\",\"label\":\"XtableDemo.base.Index.sample2.label\",\"description\":\"XtableDemo.base.Index.sample2.description\",\"code\":\"<vue-xtable\\n  border\\n  highlight-hover-row\\n  height=\\\"300\\\"\\n  :start-index=\\\"100\\\"\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"index\\\" title=\\\"序号\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\\n  },\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      highlight-hover-row\\n      height=\\\"300\\\"\\n      :start-index=\\\"100\\\"\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"index\\\" title=\\\"序号\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\n  },\n}},{\"id\":\"XtableDemo.base.Index.sample3\",\"label\":\"XtableDemo.base.Index.sample3.label\",\"description\":\"XtableDemo.base.Index.sample3.description\",\"code\":\"<vue-xtable\\n  border\\n  highlight-hover-row\\n  height=\\\"300\\\"\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"index\\\" title=\\\"序号\\\" width=\\\"60\\\" :index-method=\\\"indexMethod\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\\n  },\\n  methods: {\\n    indexMethod ({ rowIndex }) {\\n      return rowIndex * 2\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      highlight-hover-row\\n      height=\\\"300\\\"\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"index\\\" title=\\\"序号\\\" width=\\\"60\\\" :index-method=\\\"indexMethod\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\n  },\n  methods: {\n    indexMethod ({ rowIndex }) {\n      return rowIndex * 2\n    }\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/base/Loading\",\"name\":\"XtableDemo.base.Loading\",\"head\":{\"label\":\"XtableDemo.base.Loading.label\",\"description\":\"XtableDemo.base.Loading.description\"},\"samples\":[{\"id\":\"XtableDemo.base.Loading.sample1\",\"label\":\"XtableDemo.base.Loading.sample1.label\",\"description\":\"XtableDemo.base.Loading.sample1.description\",\"code\":\"<vue-xtable\\n  border\\n  highlight-hover-row\\n  height=\\\"300\\\"\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.loading = true\\n    setTimeout(() => {\\n      this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\\n      this.loading = false\\n    }, 3000)\\n  },\\n\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      highlight-hover-row\\n      height=\\\"300\\\"\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.loading = true\n    setTimeout(() => {\n      this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\n      this.loading = false\n    }, 3000)\n  },\n\n}},{\"id\":\"XtableDemo.base.Loading.sample2\",\"label\":\"XtableDemo.base.Loading.sample2.label\",\"description\":\"XtableDemo.base.Loading.sample2.description\",\"code\":\"<vue-xtable\\n  border\\n  highlight-hover-row\\n  height=\\\"300\\\"\\n  :loading=\\\"loading\\\"\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.loading = true\\n    setTimeout(() => {\\n      this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\\n      this.loading = false\\n    }, 3000)\\n  },\\n\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      highlight-hover-row\\n      height=\\\"300\\\"\\n      :loading=\\\"loading\\\"\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.loading = true\n    setTimeout(() => {\n      this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\n      this.loading = false\n    }, 3000)\n  },\n\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/base/MaxHeight\",\"name\":\"XtableDemo.base.MaxHeight\",\"head\":{\"label\":\"XtableDemo.base.MaxHeight.label\",\"description\":\"XtableDemo.base.MaxHeight.description\"},\"samples\":[{\"id\":\"XtableDemo.base.MaxHeight.sample1\",\"label\":\"XtableDemo.base.MaxHeight.sample1.label\",\"description\":\"XtableDemo.base.MaxHeight.sample1.description\",\"code\":\"<vue-xtable\\n  border\\n  highlight-hover-row\\n  max-height=\\\"200\\\"\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" align=\\\"center\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\\n  },\\n\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      highlight-hover-row\\n      max-height=\\\"200\\\"\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" align=\\\"center\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\n  },\n\n}},{\"id\":\"XtableDemo.base.MaxHeight.sample2\",\"label\":\"XtableDemo.base.MaxHeight.sample2.label\",\"description\":\"XtableDemo.base.MaxHeight.sample2.description\",\"code\":\"<vue-xtable\\n  border\\n  highlight-hover-row\\n  max-height=\\\"200\\\"\\n  :data=\\\"tableData2\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData2: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData2 = window.MOCK_DATA_LIST.slice(0, 2)\\n  },\\n\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      highlight-hover-row\\n      max-height=\\\"200\\\"\\n      :data=\\\"tableData2\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData2: [],\n\n    }\n  },\n  created () {\n    this.tableData2 = window.MOCK_DATA_LIST.slice(0, 2)\n  },\n\n}},{\"id\":\"XtableDemo.base.MaxHeight.sample3\",\"label\":\"XtableDemo.base.MaxHeight.sample3.label\",\"description\":\"XtableDemo.base.MaxHeight.sample3.description\",\"code\":\"<div style=\\\"height: 500px;\\\">\\n  <vue-xtable\\n    border\\n    highlight-hover-row\\n    max-height=\\\"100%\\\"\\n    :data=\\\"tableData\\\">\\n    <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n    <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable></vue-xtable-column>\\n    <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n    <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n    <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n  </vue-xtable>\\n</div>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\\n  },\\n\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <div style=\\\"height: 500px;\\\">\\n      <vue-xtable\\n        border\\n        highlight-hover-row\\n        max-height=\\\"100%\\\"\\n        :data=\\\"tableData\\\">\\n        <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n        <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable></vue-xtable-column>\\n        <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n        <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n        <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n      </vue-xtable>\\n    </div></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\n  },\n\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/base/Overflow\",\"name\":\"XtableDemo.base.Overflow\",\"head\":{\"label\":\"XtableDemo.base.Overflow.label\",\"description\":\"XtableDemo.base.Overflow.description\"},\"samples\":[{\"id\":\"XtableDemo.base.Overflow.sample1\",\"label\":\"XtableDemo.base.Overflow.sample1.label\",\"description\":\"XtableDemo.base.Overflow.sample1.description\",\"code\":\"<vue-xtable\\n  highlight-hover-row\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"超过隐藏时显示为省略号————————————\\\" show-header-overflow show-overflow></vue-xtable-column>\\n  <vue-xtable-column field=\\\"date\\\" title=\\\"内容超过隐藏时显示为省略号并用原生 title 显示\\\" show-overflow=\\\"title\\\">\\n    <template>\\n      <span>111111111111 111111111111111111 22222222222222222222222222222222222</span>\\n    </template>\\n  </vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"表头超过隐藏时显示为省略号并用原生 title 显示\\\" show-header-overflow=\\\"title\\\">\\n    <template v-slot:header>\\n      <span>33333333333333333333333333 5555555555555555555555555555555555555555555555</span>\\n    </template>\\n  </vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    let list = window.MOCK_DATA_LIST.slice(0, 6)\\n    this.tableData = list\\n  },\\n\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      highlight-hover-row\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"超过隐藏时显示为省略号————————————\\\" show-header-overflow show-overflow></vue-xtable-column>\\n      <vue-xtable-column field=\\\"date\\\" title=\\\"内容超过隐藏时显示为省略号并用原生 title 显示\\\" show-overflow=\\\"title\\\">\\n        <template>\\n          <span>111111111111 111111111111111111 22222222222222222222222222222222222</span>\\n        </template>\\n      </vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"表头超过隐藏时显示为省略号并用原生 title 显示\\\" show-header-overflow=\\\"title\\\">\\n        <template v-slot:header>\\n          <span>33333333333333333333333333 5555555555555555555555555555555555555555555555</span>\\n        </template>\\n      </vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 6)\n    this.tableData = list\n  },\n\n}},{\"id\":\"XtableDemo.base.Overflow.sample2\",\"label\":\"XtableDemo.base.Overflow.sample2.label\",\"description\":\"XtableDemo.base.Overflow.sample2.description\",\"code\":\"<vue-xtable\\n  highlight-hover-row\\n  :data=\\\"tableData\\\"\\n  :tooltip-config=\\\"{theme: 'light'}\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"超过隐藏时显示为省略号————————————\\\" show-header-overflow show-overflow></vue-xtable-column>\\n  <vue-xtable-column field=\\\"date\\\" title=\\\"内容超过隐藏时显示为省略号并用原生 title 显示\\\" show-overflow=\\\"title\\\">\\n    <template>\\n      <span>111111111111 111111111111111111 22222222222222222222222222222222222</span>\\n    </template>\\n  </vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"表头超过隐藏时显示为省略号并用原生 title 显示\\\" show-header-overflow=\\\"title\\\">\\n    <template v-slot:header>\\n      <span>33333333333333333333333333 5555555555555555555555555555555555555555555555</span>\\n    </template>\\n  </vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    let list = window.MOCK_DATA_LIST.slice(0, 6)\\n    this.tableData = list\\n  },\\n\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      highlight-hover-row\\n      :data=\\\"tableData\\\"\\n      :tooltip-config=\\\"{theme: 'light'}\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"超过隐藏时显示为省略号————————————\\\" show-header-overflow show-overflow></vue-xtable-column>\\n      <vue-xtable-column field=\\\"date\\\" title=\\\"内容超过隐藏时显示为省略号并用原生 title 显示\\\" show-overflow=\\\"title\\\">\\n        <template>\\n          <span>111111111111 111111111111111111 22222222222222222222222222222222222</span>\\n        </template>\\n      </vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"表头超过隐藏时显示为省略号并用原生 title 显示\\\" show-header-overflow=\\\"title\\\">\\n        <template v-slot:header>\\n          <span>33333333333333333333333333 5555555555555555555555555555555555555555555555</span>\\n        </template>\\n      </vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 6)\n    this.tableData = list\n  },\n\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/base/Radio\",\"name\":\"XtableDemo.base.Radio\",\"head\":{\"label\":\"XtableDemo.base.Radio.label\",\"description\":\"XtableDemo.base.Radio.description\"},\"samples\":[{\"id\":\"XtableDemo.base.Radio.sample1\",\"label\":\"XtableDemo.base.Radio.sample1.label\",\"description\":\"XtableDemo.base.Radio.sample1.description\",\"code\":\"<vue-toolbar>\\n  <template v-slot:buttons>\\n    <vue-button @click=\\\"$refs.xTable1.setRadioRow(tableData[1])\\\">设置第二行选中</vue-button>\\n    <vue-button @click=\\\"clearRadioRowEevnt\\\">取消选中</vue-button>\\n    <vue-button @click=\\\"getRadioEvent1\\\">获取选中</vue-button>\\n  </template>\\n</vue-toolbar>\\n\\n<vue-xtable\\n  border\\n  ref=\\\"xTable1\\\"\\n  class=\\\"radio-table\\\"\\n  height=\\\"300\\\"\\n  :data=\\\"tableData\\\"\\n  :row-class-name=\\\"rowClassName\\\"\\n  @cell-click=\\\"cellClickEvent\\\"\\n  @radio-change=\\\"radioChangeEvent\\\">\\n  <vue-xtable-column type=\\\"radio\\\" width=\\\"60\\\">\\n    <template v-slot:header>\\n      <vue-button type=\\\"text\\\" @click=\\\"clearRadioRowEevnt\\\" :disabled=\\\"!selectRow\\\">取消</vue-button>\\n    </template>\\n  </vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n      selectRow: null,\\n\\n    }\\n  },\\n\\n  created () {\\n    let list = window.MOCK_DATA_LIST.slice(0, 6)\\n    this.tableData = list\\n  },\\n  methods: {\\n    cellClickEvent () {\\n      console.log('单元格点击事件')\\n    },\\n    radioChangeEvent ({ row }) {\\n      this.selectRow = row\\n      console.log('单选事件')\\n    },\\n    clearRadioRowEevnt () {\\n      this.selectRow = null\\n      this.$refs.xTable1.clearRadioRow()\\n    },\\n    rowClassName ({ row }) {\\n      return {\\n        'row-checked': this.selectRow === row\\n      }\\n    },\\n    getRadioEvent1 () {\\n      this.$alert({ message: JSON.stringify(this.$refs.xTable1.getRadioRow()) })\\n    }\\n  }\\n})\\n</script>\\n\\n<style>\\n.radio-table.vue-xtable .vxe-body--row.row-checked {\\n  background-color: #fbf8ec;\\n}\\n</style>\",\"template\":\"<div class=\\\"source\\\">    <vue-toolbar>\\n      <template v-slot:buttons>\\n        <vue-button @click=\\\"$refs.xTable1.setRadioRow(tableData[1])\\\">设置第二行选中</vue-button>\\n        <vue-button @click=\\\"clearRadioRowEevnt\\\">取消选中</vue-button>\\n        <vue-button @click=\\\"getRadioEvent1\\\">获取选中</vue-button>\\n      </template>\\n    </vue-toolbar>\\n\\n    <vue-xtable\\n      border\\n      ref=\\\"xTable1\\\"\\n      class=\\\"radio-table\\\"\\n      height=\\\"300\\\"\\n      :data=\\\"tableData\\\"\\n      :row-class-name=\\\"rowClassName\\\"\\n      @cell-click=\\\"cellClickEvent\\\"\\n      @radio-change=\\\"radioChangeEvent\\\">\\n      <vue-xtable-column type=\\\"radio\\\" width=\\\"60\\\">\\n        <template v-slot:header>\\n          <vue-button type=\\\"text\\\" @click=\\\"clearRadioRowEevnt\\\" :disabled=\\\"!selectRow\\\">取消</vue-button>\\n        </template>\\n      </vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n      selectRow: null,\n\n    }\n  },\n\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 6)\n    this.tableData = list\n  },\n  methods: {\n    cellClickEvent () {\n      console.log('单元格点击事件')\n    },\n    radioChangeEvent ({ row }) {\n      this.selectRow = row\n      console.log('单选事件')\n    },\n    clearRadioRowEevnt () {\n      this.selectRow = null\n      this.$refs.xTable1.clearRadioRow()\n    },\n    rowClassName ({ row }) {\n      return {\n        'row-checked': this.selectRow === row\n      }\n    },\n    getRadioEvent1 () {\n      this.$alert({ message: JSON.stringify(this.$refs.xTable1.getRadioRow()) })\n    }\n  }\n}},{\"id\":\"XtableDemo.base.Radio.sample2\",\"label\":\"XtableDemo.base.Radio.sample2.label\",\"description\":\"XtableDemo.base.Radio.sample2.description\",\"code\":\"<vue-toolbar>\\n  <template v-slot:buttons>\\n    <vue-button @click=\\\"$refs.xTable2.setRadioRow(tableData[0], true)\\\">设置第一行选中</vue-button>\\n    <vue-button @click=\\\"$refs.xTable2.clearRadioRow()\\\">清除所有行选中</vue-button>\\n  </template>\\n</vue-toolbar>\\n\\n<vue-xtable\\n  border\\n  ref=\\\"xTable2\\\"\\n  height=\\\"300\\\"\\n  :radio-config=\\\"{labelField: 'name', checkMethod}\\\"\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"radio\\\" title=\\\"请选择\\\" width=\\\"100\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n      selectRow: null,\\n\\n    }\\n  },\\n\\n  created () {\\n    let list = window.MOCK_DATA_LIST.slice(0, 6)\\n    this.tableData = list\\n  },\\n  methods: {\\n    checkMethod ({ row }) {\\n      return row.age > 26\\n    },\\n  }\\n})\\n</script>\\n\\n<style>\\n.radio-table.vue-xtable .vxe-body--row.row-checked {\\n  background-color: #fbf8ec;\\n}\\n</style>\",\"template\":\"<div class=\\\"source\\\">    <vue-toolbar>\\n      <template v-slot:buttons>\\n        <vue-button @click=\\\"$refs.xTable2.setRadioRow(tableData[0], true)\\\">设置第一行选中</vue-button>\\n        <vue-button @click=\\\"$refs.xTable2.clearRadioRow()\\\">清除所有行选中</vue-button>\\n      </template>\\n    </vue-toolbar>\\n\\n    <vue-xtable\\n      border\\n      ref=\\\"xTable2\\\"\\n      height=\\\"300\\\"\\n      :radio-config=\\\"{labelField: 'name', checkMethod}\\\"\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"radio\\\" title=\\\"请选择\\\" width=\\\"100\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n      selectRow: null,\n\n    }\n  },\n\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 6)\n    this.tableData = list\n  },\n  methods: {\n    checkMethod ({ row }) {\n      return row.age > 26\n    },\n  }\n}},{\"id\":\"XtableDemo.base.Radio.sample3\",\"label\":\"XtableDemo.base.Radio.sample3.label\",\"description\":\"XtableDemo.base.Radio.sample3.description\",\"code\":\"<vue-xtable\\n  border\\n  height=\\\"300\\\"\\n  row-id=\\\"id\\\"\\n  :data=\\\"tableData\\\"\\n  :radio-config=\\\"{checkRowKey: '2'}\\\">\\n  <vue-xtable-column type=\\\"radio\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n      selectRow: null,\\n\\n    }\\n  },\\n\\n  created () {\\n    let list = window.MOCK_DATA_LIST.slice(0, 6)\\n    this.tableData = list\\n  },\\n  methods: {\\n  }\\n})\\n</script>\\n\\n<style>\\n.radio-table.vue-xtable .vxe-body--row.row-checked {\\n  background-color: #fbf8ec;\\n}\\n</style>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      height=\\\"300\\\"\\n      row-id=\\\"id\\\"\\n      :data=\\\"tableData\\\"\\n      :radio-config=\\\"{checkRowKey: '2'}\\\">\\n      <vue-xtable-column type=\\\"radio\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n      selectRow: null,\n\n    }\n  },\n\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 6)\n    this.tableData = list\n  },\n  methods: {\n  }\n}},{\"id\":\"XtableDemo.base.Radio.sample4\",\"label\":\"XtableDemo.base.Radio.sample4.label\",\"description\":\"XtableDemo.base.Radio.sample4.description\",\"code\":\"<vue-xtable\\n  border\\n  highlight-current-row\\n  height=\\\"300\\\"\\n  :data=\\\"tableData\\\"\\n  @current-change=\\\"currentChangeEvent\\\">\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n      selectRow: null,\\n\\n    }\\n  },\\n\\n  created () {\\n    let list = window.MOCK_DATA_LIST.slice(0, 6)\\n    this.tableData = list\\n  },\\n  methods: {\\n    currentChangeEvent ({ row }) {\\n      console.log('行选中事件')\\n    },\\n  }\\n})\\n</script>\\n\\n<style>\\n.radio-table.vue-xtable .vxe-body--row.row-checked {\\n  background-color: #fbf8ec;\\n}\\n</style>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      highlight-current-row\\n      height=\\\"300\\\"\\n      :data=\\\"tableData\\\"\\n      @current-change=\\\"currentChangeEvent\\\">\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n      selectRow: null,\n\n    }\n  },\n\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 6)\n    this.tableData = list\n  },\n  methods: {\n    currentChangeEvent ({ row }) {\n      console.log('行选中事件')\n    },\n  }\n}},{\"id\":\"XtableDemo.base.Radio.sample5\",\"label\":\"XtableDemo.base.Radio.sample5.label\",\"description\":\"XtableDemo.base.Radio.sample5.description\",\"code\":\"<vue-xtable\\n  border\\n  highlight-current-row\\n  height=\\\"300\\\"\\n  :radio-config=\\\"{labelField: 'name'}\\\"\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"radio\\\" title=\\\"还可以这样\\\" width=\\\"120\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n      selectRow: null,\\n\\n    }\\n  },\\n\\n  created () {\\n    let list = window.MOCK_DATA_LIST.slice(0, 6)\\n    this.tableData = list\\n  },\\n  methods: {\\n  }\\n})\\n</script>\\n\\n<style>\\n.radio-table.vue-xtable .vxe-body--row.row-checked {\\n  background-color: #fbf8ec;\\n}\\n</style>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      highlight-current-row\\n      height=\\\"300\\\"\\n      :radio-config=\\\"{labelField: 'name'}\\\"\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"radio\\\" title=\\\"还可以这样\\\" width=\\\"120\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n      selectRow: null,\n\n    }\n  },\n\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 6)\n    this.tableData = list\n  },\n  methods: {\n  }\n}},{\"id\":\"XtableDemo.base.Radio.sample6\",\"label\":\"XtableDemo.base.Radio.sample6.label\",\"description\":\"XtableDemo.base.Radio.sample6.description\",\"code\":\"<vue-xtable\\n  border\\n  highlight-hover-row\\n  highlight-current-row\\n  height=\\\"300\\\"\\n  :radio-config=\\\"{labelField: 'name', trigger: 'row'}\\\"\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"radio\\\" title=\\\"还可以这样\\\" width=\\\"120\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n      selectRow: null,\\n\\n    }\\n  },\\n\\n  created () {\\n    let list = window.MOCK_DATA_LIST.slice(0, 6)\\n    this.tableData = list\\n  },\\n  methods: {\\n  }\\n})\\n</script>\\n\\n<style>\\n.radio-table.vue-xtable .vxe-body--row.row-checked {\\n  background-color: #fbf8ec;\\n}\\n</style>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      highlight-hover-row\\n      highlight-current-row\\n      height=\\\"300\\\"\\n      :radio-config=\\\"{labelField: 'name', trigger: 'row'}\\\"\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"radio\\\" title=\\\"还可以这样\\\" width=\\\"120\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n      selectRow: null,\n\n    }\n  },\n\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 6)\n    this.tableData = list\n  },\n  methods: {\n  }\n}}],\"styles\":\".radio-table.vue-xtable .vxe-body--row.row-checked {\\n  background-color: #fbf8ec;\\n}\"}","export default {\"path\":\"/XtableDemo/base/Resizable\",\"name\":\"XtableDemo.base.Resizable\",\"head\":{\"label\":\"XtableDemo.base.Resizable.label\",\"description\":\"XtableDemo.base.Resizable.description\"},\"samples\":[{\"id\":\"XtableDemo.base.Resizable.sample1\",\"label\":\"XtableDemo.base.Resizable.sample1.label\",\"description\":\"XtableDemo.base.Resizable.sample1.description\",\"code\":\"<vue-xtable\\n  resizable\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"time\\\" title=\\\"Time\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 3)\\n  },\\n\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      resizable\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"time\\\" title=\\\"Time\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 3)\n  },\n\n}},{\"id\":\"XtableDemo.base.Resizable.sample2\",\"label\":\"XtableDemo.base.Resizable.sample2.label\",\"description\":\"XtableDemo.base.Resizable.sample2.description\",\"code\":\"<vue-xtable\\n  border\\n  resizable\\n  highlight-hover-row\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" width=\\\"300\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" width=\\\"300\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" width=\\\"300\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"time\\\" title=\\\"Time\\\" width=\\\"300\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" width=\\\"300\\\" show-overflow></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 3)\\n  },\\n\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      resizable\\n      highlight-hover-row\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" width=\\\"300\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" width=\\\"300\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" width=\\\"300\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"time\\\" title=\\\"Time\\\" width=\\\"300\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" width=\\\"300\\\" show-overflow></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 3)\n  },\n\n}},{\"id\":\"XtableDemo.base.Resizable.sample3\",\"label\":\"XtableDemo.base.Resizable.sample3.label\",\"description\":\"XtableDemo.base.Resizable.sample3.description\",\"code\":\"<vue-xtable\\n  border\\n  resizable\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\" fixed=\\\"left\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" width=\\\"100\\\" fixed=\\\"left\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" width=\\\"100\\\" fixed=\\\"left\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" width=\\\"100\\\" fixed=\\\"left\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"atrr1\\\" title=\\\"atrr1\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"atrr2\\\" title=\\\"atrr2\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"atrr3\\\" title=\\\"atrr3\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"atrr4\\\" title=\\\"atrr4\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"time\\\" title=\\\"Time\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" width=\\\"200\\\" show-overflow></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 3)\\n  },\\n\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      resizable\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\" fixed=\\\"left\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" width=\\\"100\\\" fixed=\\\"left\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" width=\\\"100\\\" fixed=\\\"left\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" width=\\\"100\\\" fixed=\\\"left\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"atrr1\\\" title=\\\"atrr1\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"atrr2\\\" title=\\\"atrr2\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"atrr3\\\" title=\\\"atrr3\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"atrr4\\\" title=\\\"atrr4\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"time\\\" title=\\\"Time\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" width=\\\"200\\\" show-overflow></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 3)\n  },\n\n}},{\"id\":\"XtableDemo.base.Resizable.sample4\",\"label\":\"XtableDemo.base.Resizable.sample4.label\",\"description\":\"XtableDemo.base.Resizable.sample4.description\",\"code\":\"<vue-xtable\\n  border\\n  resizable\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"atrr1\\\" title=\\\"atrr1\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"atrr2\\\" title=\\\"atrr2\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"atrr3\\\" title=\\\"atrr3\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"atrr4\\\" title=\\\"atrr4\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"role\\\" title=\\\"Role\\\" width=\\\"100\\\" fixed=\\\"right\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" width=\\\"100\\\" fixed=\\\"right\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" width=\\\"100\\\" fixed=\\\"right\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 3)\\n  },\\n\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      resizable\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"atrr1\\\" title=\\\"atrr1\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"atrr2\\\" title=\\\"atrr2\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"atrr3\\\" title=\\\"atrr3\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"atrr4\\\" title=\\\"atrr4\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"role\\\" title=\\\"Role\\\" width=\\\"100\\\" fixed=\\\"right\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" width=\\\"100\\\" fixed=\\\"right\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" width=\\\"100\\\" fixed=\\\"right\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 3)\n  },\n\n}},{\"id\":\"XtableDemo.base.Resizable.sample5\",\"label\":\"XtableDemo.base.Resizable.sample5.label\",\"description\":\"XtableDemo.base.Resizable.sample5.description\",\"code\":\"<vue-xtable\\n  border\\n  resizable\\n  show-overflow\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\" fixed=\\\"left\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" width=\\\"100\\\" fixed=\\\"left\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" width=\\\"100\\\" fixed=\\\"left\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" width=\\\"100\\\" fixed=\\\"left\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"atrr1\\\" title=\\\"atrr1\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"atrr2\\\" title=\\\"atrr2 其他2\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"atrr3\\\" title=\\\"atrr3\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"atrr4\\\" title=\\\"atrr4 其他4\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\" width=\\\"100\\\" fixed=\\\"right\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"time\\\" title=\\\"Time\\\" width=\\\"100\\\" fixed=\\\"right\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" width=\\\"100\\\" fixed=\\\"right\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 3)\\n  },\\n\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      resizable\\n      show-overflow\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\" fixed=\\\"left\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" width=\\\"100\\\" fixed=\\\"left\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" width=\\\"100\\\" fixed=\\\"left\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" width=\\\"100\\\" fixed=\\\"left\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"atrr1\\\" title=\\\"atrr1\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"atrr2\\\" title=\\\"atrr2 其他2\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"atrr3\\\" title=\\\"atrr3\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"atrr4\\\" title=\\\"atrr4 其他4\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\" width=\\\"100\\\" fixed=\\\"right\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"time\\\" title=\\\"Time\\\" width=\\\"100\\\" fixed=\\\"right\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" width=\\\"100\\\" fixed=\\\"right\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 3)\n  },\n\n}},{\"id\":\"XtableDemo.base.Resizable.sample6\",\"label\":\"XtableDemo.base.Resizable.sample6.label\",\"description\":\"XtableDemo.base.Resizable.sample6.description\",\"code\":\"<vue-xtable\\n  border\\n  resizable\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column title=\\\"基本信息\\\">\\n    <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n    <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n  </vue-xtable-column>\\n  <vue-xtable-column title=\\\"更多信息\\\">\\n    <vue-xtable-column field=\\\"role\\\" title=\\\"Role\\\"></vue-xtable-column>\\n    <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n    <vue-xtable-column title=\\\"详细信息\\\">\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\" width=\\\"140\\\" show-overflow></vue-xtable-column>\\n    </vue-xtable-column>\\n  </vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" width=\\\"200\\\" show-overflow></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 3)\\n  },\\n\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      resizable\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column title=\\\"基本信息\\\">\\n        <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n        <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n      </vue-xtable-column>\\n      <vue-xtable-column title=\\\"更多信息\\\">\\n        <vue-xtable-column field=\\\"role\\\" title=\\\"Role\\\"></vue-xtable-column>\\n        <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n        <vue-xtable-column title=\\\"详细信息\\\">\\n          <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n          <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\" width=\\\"140\\\" show-overflow></vue-xtable-column>\\n        </vue-xtable-column>\\n      </vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" width=\\\"200\\\" show-overflow></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 3)\n  },\n\n}},{\"id\":\"XtableDemo.base.Resizable.sample7\",\"label\":\"XtableDemo.base.Resizable.sample7.label\",\"description\":\"XtableDemo.base.Resizable.sample7.description\",\"code\":\"<vue-xtable\\n  border\\n  resizable\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column title=\\\"基本信息\\\">\\n    <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\" fixed=\\\"left\\\"></vue-xtable-column>\\n    <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" fixed=\\\"left\\\" width=\\\"100\\\"></vue-xtable-column>\\n  </vue-xtable-column>\\n  <vue-xtable-column title=\\\"更多信息\\\">\\n    <vue-xtable-column field=\\\"role\\\" title=\\\"Role\\\" width=\\\"300\\\"></vue-xtable-column>\\n    <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" width=\\\"300\\\"></vue-xtable-column>\\n    <vue-xtable-column title=\\\"详细信息\\\">\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" width=\\\"300\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\" width=\\\"300\\\"></vue-xtable-column>\\n    </vue-xtable-column>\\n  </vue-xtable-column>\\n  <vue-xtable-column title=\\\"其他信息\\\">\\n    <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" width=\\\"100\\\" fixed=\\\"right\\\" show-overflow></vue-xtable-column>\\n    <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" width=\\\"100\\\" fixed=\\\"right\\\" show-overflow></vue-xtable-column>\\n  </vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 3)\\n  },\\n\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      resizable\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column title=\\\"基本信息\\\">\\n        <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\" fixed=\\\"left\\\"></vue-xtable-column>\\n        <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" fixed=\\\"left\\\" width=\\\"100\\\"></vue-xtable-column>\\n      </vue-xtable-column>\\n      <vue-xtable-column title=\\\"更多信息\\\">\\n        <vue-xtable-column field=\\\"role\\\" title=\\\"Role\\\" width=\\\"300\\\"></vue-xtable-column>\\n        <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" width=\\\"300\\\"></vue-xtable-column>\\n        <vue-xtable-column title=\\\"详细信息\\\">\\n          <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" width=\\\"300\\\"></vue-xtable-column>\\n          <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\" width=\\\"300\\\"></vue-xtable-column>\\n        </vue-xtable-column>\\n      </vue-xtable-column>\\n      <vue-xtable-column title=\\\"其他信息\\\">\\n        <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" width=\\\"100\\\" fixed=\\\"right\\\" show-overflow></vue-xtable-column>\\n        <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" width=\\\"100\\\" fixed=\\\"right\\\" show-overflow></vue-xtable-column>\\n      </vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 3)\n  },\n\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/base/Selection\",\"name\":\"XtableDemo.base.Selection\",\"head\":{\"label\":\"XtableDemo.base.Selection.label\",\"description\":\"XtableDemo.base.Selection.description\"},\"samples\":[{\"id\":\"XtableDemo.base.Selection.sample1\",\"label\":\"XtableDemo.base.Selection.sample1.label\",\"description\":\"XtableDemo.base.Selection.sample1.description\",\"code\":\"<vue-toolbar>\\n  <template v-slot:buttons>\\n    <vue-button @click=\\\"$refs.xTable1.toggleRowSelection(tableData[1])\\\">切换第二行选中</vue-button>\\n    <vue-button @click=\\\"$refs.xTable1.setSelection([tableData[2], tableData[3]], true)\\\">设置第三、四行选中</vue-button>\\n    <vue-button @click=\\\"$refs.xTable1.setAllSelection(true)\\\">设置所有行选中</vue-button>\\n    <vue-button @click=\\\"$refs.xTable1.clearSelection()\\\">清除所有行选中</vue-button>\\n    <vue-button @click=\\\"getSelectEvent1\\\">获取选中</vue-button>\\n  </template>\\n</vue-toolbar>\\n\\n<vue-xtable\\n  border\\n  ref=\\\"xTable1\\\"\\n  :data=\\\"tableData\\\"\\n  @cell-click=\\\"cellClickEvent\\\"\\n  @select-all=\\\"selectAllEvent\\\"\\n  @select-change=\\\"selectChangeEvent\\\">\\n  <vue-xtable-column type=\\\"checkbox\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 5)\\n  },\\n\\n  methods: {\\n    cellClickEvent () {\\n      console.log('单元格点击事件')\\n    },\\n    selectAllEvent ({ checked }) {\\n      console.log(checked ? '所有勾选事件' : '所有取消事件')\\n    },\\n    selectChangeEvent ({ checked, row }) {\\n      console.log(checked ? '勾选事件' : '取消事件')\\n    },\\n    getSelectEvent1 () {\\n      let selectRecords = this.$refs.xTable1.getSelectRecords()\\n      this.$alert({ message: selectRecords.length })\\n    }\\n  }\\n})\\n</script>\\n\\n<style>\\n.checkbox-table.vue-xtable .vxe-body--row.row-checked {\\n  background-color: #fbf8ec;\\n}\\n</style>\",\"template\":\"<div class=\\\"source\\\">    <vue-toolbar>\\n      <template v-slot:buttons>\\n        <vue-button @click=\\\"$refs.xTable1.toggleRowSelection(tableData[1])\\\">切换第二行选中</vue-button>\\n        <vue-button @click=\\\"$refs.xTable1.setSelection([tableData[2], tableData[3]], true)\\\">设置第三、四行选中</vue-button>\\n        <vue-button @click=\\\"$refs.xTable1.setAllSelection(true)\\\">设置所有行选中</vue-button>\\n        <vue-button @click=\\\"$refs.xTable1.clearSelection()\\\">清除所有行选中</vue-button>\\n        <vue-button @click=\\\"getSelectEvent1\\\">获取选中</vue-button>\\n      </template>\\n    </vue-toolbar>\\n\\n    <vue-xtable\\n      border\\n      ref=\\\"xTable1\\\"\\n      :data=\\\"tableData\\\"\\n      @cell-click=\\\"cellClickEvent\\\"\\n      @select-all=\\\"selectAllEvent\\\"\\n      @select-change=\\\"selectChangeEvent\\\">\\n      <vue-xtable-column type=\\\"checkbox\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 5)\n  },\n\n  methods: {\n    cellClickEvent () {\n      console.log('单元格点击事件')\n    },\n    selectAllEvent ({ checked }) {\n      console.log(checked ? '所有勾选事件' : '所有取消事件')\n    },\n    selectChangeEvent ({ checked, row }) {\n      console.log(checked ? '勾选事件' : '取消事件')\n    },\n    getSelectEvent1 () {\n      let selectRecords = this.$refs.xTable1.getSelectRecords()\n      this.$alert({ message: selectRecords.length })\n    }\n  }\n}},{\"id\":\"XtableDemo.base.Selection.sample2\",\"label\":\"XtableDemo.base.Selection.sample2.label\",\"description\":\"XtableDemo.base.Selection.sample2.description\",\"code\":\"<vue-toolbar>\\n  <template v-slot:buttons>\\n    <vue-button @click=\\\"$refs.xTable2.toggleRowSelection(tableData[1])\\\">切换第二行选中</vue-button>\\n    <vue-button @click=\\\"$refs.xTable2.setSelection([tableData[2], tableData[3]], true)\\\">设置第三、四行选中</vue-button>\\n    <vue-button @click=\\\"$refs.xTable2.setAllSelection(true)\\\">设置所有行选中</vue-button>\\n    <vue-button @click=\\\"$refs.xTable2.clearSelection()\\\">清除所有行选中</vue-button>\\n  </template>\\n</vue-toolbar>\\n\\n<vue-xtable\\n  border\\n  ref=\\\"xTable2\\\"\\n  :data=\\\"tableData\\\"\\n  :checkbox-config=\\\"{labelField: 'name', checkMethod}\\\">\\n  <vue-xtable-column type=\\\"checkbox\\\" title=\\\"All\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 5)\\n  },\\n\\n  methods: {\\n    checkMethod ({ row }) {\\n      return row.age > 26\\n    },\\n  }\\n})\\n</script>\\n\\n<style>\\n.checkbox-table.vue-xtable .vxe-body--row.row-checked {\\n  background-color: #fbf8ec;\\n}\\n</style>\",\"template\":\"<div class=\\\"source\\\">    <vue-toolbar>\\n      <template v-slot:buttons>\\n        <vue-button @click=\\\"$refs.xTable2.toggleRowSelection(tableData[1])\\\">切换第二行选中</vue-button>\\n        <vue-button @click=\\\"$refs.xTable2.setSelection([tableData[2], tableData[3]], true)\\\">设置第三、四行选中</vue-button>\\n        <vue-button @click=\\\"$refs.xTable2.setAllSelection(true)\\\">设置所有行选中</vue-button>\\n        <vue-button @click=\\\"$refs.xTable2.clearSelection()\\\">清除所有行选中</vue-button>\\n      </template>\\n    </vue-toolbar>\\n\\n    <vue-xtable\\n      border\\n      ref=\\\"xTable2\\\"\\n      :data=\\\"tableData\\\"\\n      :checkbox-config=\\\"{labelField: 'name', checkMethod}\\\">\\n      <vue-xtable-column type=\\\"checkbox\\\" title=\\\"All\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 5)\n  },\n\n  methods: {\n    checkMethod ({ row }) {\n      return row.age > 26\n    },\n  }\n}},{\"id\":\"XtableDemo.base.Selection.sample3\",\"label\":\"XtableDemo.base.Selection.sample3.label\",\"description\":\"XtableDemo.base.Selection.sample3.description\",\"code\":\"<vue-toolbar>\\n  <template v-slot:buttons>\\n    <vue-button @click=\\\"$refs.xTable3.toggleRowSelection(tableData[1])\\\">切换第二行选中</vue-button>\\n    <vue-button @click=\\\"$refs.xTable3.setSelection([tableData[2], tableData[3]], true)\\\">设置第三、四行选中</vue-button>\\n    <vue-button @click=\\\"$refs.xTable3.setAllSelection(true)\\\">设置所有行选中</vue-button>\\n    <vue-button @click=\\\"$refs.xTable3.clearSelection()\\\">清除所有行选中</vue-button>\\n  </template>\\n</vue-toolbar>\\n\\n<vue-xtable\\n  border\\n  highlight-hover-row\\n  class=\\\"checkbox-table\\\"\\n  ref=\\\"xTable3\\\"\\n  :row-class-name=\\\"rowClassName\\\"\\n  :data=\\\"tableData\\\"\\n  :checkbox-config=\\\"{checkField: 'checked', trigger: 'row'}\\\">\\n  <vue-xtable-column type=\\\"checkbox\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 5)\\n  },\\n\\n  methods: {\\n    rowClassName ({ row }) {\\n      return {\\n        'row-checked': row.checked\\n      }\\n    },\\n  }\\n})\\n</script>\\n\\n<style>\\n.checkbox-table.vue-xtable .vxe-body--row.row-checked {\\n  background-color: #fbf8ec;\\n}\\n</style>\",\"template\":\"<div class=\\\"source\\\">    <vue-toolbar>\\n      <template v-slot:buttons>\\n        <vue-button @click=\\\"$refs.xTable3.toggleRowSelection(tableData[1])\\\">切换第二行选中</vue-button>\\n        <vue-button @click=\\\"$refs.xTable3.setSelection([tableData[2], tableData[3]], true)\\\">设置第三、四行选中</vue-button>\\n        <vue-button @click=\\\"$refs.xTable3.setAllSelection(true)\\\">设置所有行选中</vue-button>\\n        <vue-button @click=\\\"$refs.xTable3.clearSelection()\\\">清除所有行选中</vue-button>\\n      </template>\\n    </vue-toolbar>\\n\\n    <vue-xtable\\n      border\\n      highlight-hover-row\\n      class=\\\"checkbox-table\\\"\\n      ref=\\\"xTable3\\\"\\n      :row-class-name=\\\"rowClassName\\\"\\n      :data=\\\"tableData\\\"\\n      :checkbox-config=\\\"{checkField: 'checked', trigger: 'row'}\\\">\\n      <vue-xtable-column type=\\\"checkbox\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 5)\n  },\n\n  methods: {\n    rowClassName ({ row }) {\n      return {\n        'row-checked': row.checked\n      }\n    },\n  }\n}},{\"id\":\"XtableDemo.base.Selection.sample4\",\"label\":\"XtableDemo.base.Selection.sample4.label\",\"description\":\"XtableDemo.base.Selection.sample4.description\",\"code\":\"<vue-xtable\\n  border\\n  highlight-hover-row\\n  row-id=\\\"id\\\"\\n  :data=\\\"tableData\\\"\\n  :checkbox-config=\\\"{checkRowKeys: ['2', '3']}\\\"\\n  :radio-config=\\\"{labelField: 'name'}\\\">\\n  <vue-xtable-column type=\\\"checkbox\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column type=\\\"radio\\\" width=\\\"300\\\" title=\\\"Name\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 5)\\n  },\\n\\n  methods: {\\n  }\\n})\\n</script>\\n\\n<style>\\n.checkbox-table.vue-xtable .vxe-body--row.row-checked {\\n  background-color: #fbf8ec;\\n}\\n</style>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      highlight-hover-row\\n      row-id=\\\"id\\\"\\n      :data=\\\"tableData\\\"\\n      :checkbox-config=\\\"{checkRowKeys: ['2', '3']}\\\"\\n      :radio-config=\\\"{labelField: 'name'}\\\">\\n      <vue-xtable-column type=\\\"checkbox\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column type=\\\"radio\\\" width=\\\"300\\\" title=\\\"Name\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 5)\n  },\n\n  methods: {\n  }\n}},{\"id\":\"XtableDemo.base.Selection.sample5\",\"label\":\"XtableDemo.base.Selection.sample5.label\",\"description\":\"XtableDemo.base.Selection.sample5.description\",\"code\":\"<vue-toolbar>\\n  <template v-slot:buttons>\\n    <vue-button @click=\\\"$refs.xTable5.setSelection(tableData, true)\\\">设置所有行选中</vue-button>\\n    <vue-button @click=\\\"$refs.xTable5.clearSelection()\\\">清除所有行选中</vue-button>\\n  </template>\\n</vue-toolbar>\\n\\n<vue-xtable\\n  border\\n  highlight-hover-row\\n  ref=\\\"xTable5\\\"\\n  :data=\\\"tableData\\\"\\n  :checkbox-config=\\\"{checkStrictly: true}\\\">\\n  <vue-xtable-column type=\\\"checkbox\\\" width=\\\"60\\\" tree-node></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 5)\\n  },\\n\\n  methods: {\\n  }\\n})\\n</script>\\n\\n<style>\\n.checkbox-table.vue-xtable .vxe-body--row.row-checked {\\n  background-color: #fbf8ec;\\n}\\n</style>\",\"template\":\"<div class=\\\"source\\\">    <vue-toolbar>\\n      <template v-slot:buttons>\\n        <vue-button @click=\\\"$refs.xTable5.setSelection(tableData, true)\\\">设置所有行选中</vue-button>\\n        <vue-button @click=\\\"$refs.xTable5.clearSelection()\\\">清除所有行选中</vue-button>\\n      </template>\\n    </vue-toolbar>\\n\\n    <vue-xtable\\n      border\\n      highlight-hover-row\\n      ref=\\\"xTable5\\\"\\n      :data=\\\"tableData\\\"\\n      :checkbox-config=\\\"{checkStrictly: true}\\\">\\n      <vue-xtable-column type=\\\"checkbox\\\" width=\\\"60\\\" tree-node></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 5)\n  },\n\n  methods: {\n  }\n}},{\"id\":\"XtableDemo.base.Selection.sample6\",\"label\":\"XtableDemo.base.Selection.sample6.label\",\"description\":\"XtableDemo.base.Selection.sample6.description\",\"code\":\"<vue-xtable\\n  border\\n  highlight-hover-row\\n  :data=\\\"tableData\\\"\\n  :radio-config=\\\"{labelField: 'name'}\\\">\\n  <vue-xtable-column type=\\\"checkbox\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column type=\\\"radio\\\" width=\\\"300\\\" title=\\\"Name\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 5)\\n  },\\n\\n  methods: {\\n  }\\n})\\n</script>\\n\\n<style>\\n.checkbox-table.vue-xtable .vxe-body--row.row-checked {\\n  background-color: #fbf8ec;\\n}\\n</style>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      highlight-hover-row\\n      :data=\\\"tableData\\\"\\n      :radio-config=\\\"{labelField: 'name'}\\\">\\n      <vue-xtable-column type=\\\"checkbox\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column type=\\\"radio\\\" width=\\\"300\\\" title=\\\"Name\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 5)\n  },\n\n  methods: {\n  }\n}},{\"id\":\"XtableDemo.base.Selection.sample7\",\"label\":\"XtableDemo.base.Selection.sample7.label\",\"description\":\"XtableDemo.base.Selection.sample7.description\",\"code\":\"<vue-xtable\\n  border\\n  resizable\\n  highlight-hover-row\\n  highlight-current-row\\n  :data=\\\"tableData\\\"\\n  :radio-config=\\\"{labelField: 'role'}\\\"\\n  :checkbox-config=\\\"{labelField: 'name'}\\\">\\n  <vue-xtable-column type=\\\"checkbox\\\" title=\\\"Name\\\"></vue-xtable-column>\\n  <vue-xtable-column type=\\\"radio\\\" title=\\\"Role\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 5)\\n  },\\n\\n  methods: {\\n  }\\n})\\n</script>\\n\\n<style>\\n.checkbox-table.vue-xtable .vxe-body--row.row-checked {\\n  background-color: #fbf8ec;\\n}\\n</style>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      resizable\\n      highlight-hover-row\\n      highlight-current-row\\n      :data=\\\"tableData\\\"\\n      :radio-config=\\\"{labelField: 'role'}\\\"\\n      :checkbox-config=\\\"{labelField: 'name'}\\\">\\n      <vue-xtable-column type=\\\"checkbox\\\" title=\\\"Name\\\"></vue-xtable-column>\\n      <vue-xtable-column type=\\\"radio\\\" title=\\\"Role\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 5)\n  },\n\n  methods: {\n  }\n}}],\"styles\":\".checkbox-table.vue-xtable .vxe-body--row.row-checked {\\n  background-color: #fbf8ec;\\n}\"}","export default {\"path\":\"/XtableDemo/base/Size\",\"name\":\"XtableDemo.base.Size\",\"head\":{\"label\":\"XtableDemo.base.Size.label\",\"description\":\"XtableDemo.base.Size.description\"},\"samples\":[{\"id\":\"XtableDemo.base.Size.sample1\",\"label\":\"XtableDemo.base.Size.sample1.label\",\"description\":\"XtableDemo.base.Size.sample1.description\",\"code\":\"<vue-xtable\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column type=\\\"radio\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column type=\\\"checkbox\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 4)\\n  },\\n\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column type=\\\"radio\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column type=\\\"checkbox\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 4)\n  },\n\n}},{\"id\":\"XtableDemo.base.Size.sample2\",\"label\":\"XtableDemo.base.Size.sample2.label\",\"description\":\"XtableDemo.base.Size.sample2.description\",\"code\":\"<vue-xtable\\n  size=\\\"medium\\\"\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column type=\\\"radio\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column type=\\\"checkbox\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 4)\\n  },\\n\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      size=\\\"medium\\\"\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column type=\\\"radio\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column type=\\\"checkbox\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 4)\n  },\n\n}},{\"id\":\"XtableDemo.base.Size.sample3\",\"label\":\"XtableDemo.base.Size.sample3.label\",\"description\":\"XtableDemo.base.Size.sample3.description\",\"code\":\"<vue-xtable\\n  size=\\\"small\\\"\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column type=\\\"radio\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column type=\\\"checkbox\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 4)\\n  },\\n\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      size=\\\"small\\\"\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column type=\\\"radio\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column type=\\\"checkbox\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 4)\n  },\n\n}},{\"id\":\"XtableDemo.base.Size.sample4\",\"label\":\"XtableDemo.base.Size.sample4.label\",\"description\":\"XtableDemo.base.Size.sample4.description\",\"code\":\"<vue-xtable\\n  size=\\\"mini\\\"\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column type=\\\"radio\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column type=\\\"checkbox\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 4)\\n  },\\n\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      size=\\\"mini\\\"\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column type=\\\"radio\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column type=\\\"checkbox\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 4)\n  },\n\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/base/Sort\",\"name\":\"XtableDemo.base.Sort\",\"head\":{\"label\":\"XtableDemo.base.Sort.label\",\"description\":\"XtableDemo.base.Sort.description\"},\"samples\":[{\"id\":\"XtableDemo.base.Sort.sample1\",\"label\":\"XtableDemo.base.Sort.sample1.label\",\"description\":\"XtableDemo.base.Sort.sample1.description\",\"code\":\"<vue-xtable\\n  border\\n  highlight-hover-row\\n  height=\\\"300\\\"\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable></vue-xtable-column>\\n  <vue-xtable-column field=\\\"nickname\\\" title=\\\"Nickname\\\" sortable></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"time\\\" title=\\\"Time\\\" sortable></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\\n  },\\n\\n  methods: {\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      highlight-hover-row\\n      height=\\\"300\\\"\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable></vue-xtable-column>\\n      <vue-xtable-column field=\\\"nickname\\\" title=\\\"Nickname\\\" sortable></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"time\\\" title=\\\"Time\\\" sortable></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\n  },\n\n  methods: {\n  }\n}},{\"id\":\"XtableDemo.base.Sort.sample2\",\"label\":\"XtableDemo.base.Sort.sample2.label\",\"description\":\"XtableDemo.base.Sort.sample2.description\",\"code\":\"<vue-xtable\\n  border\\n  highlight-hover-row\\n  height=\\\"300\\\"\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable></vue-xtable-column>\\n  <vue-xtable-column field=\\\"nickname\\\" title=\\\"Nickname\\\" sortable></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"time\\\" title=\\\"Time\\\" sortable :sort-by=\\\"['time', 'name']\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\\n  },\\n\\n  methods: {\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      highlight-hover-row\\n      height=\\\"300\\\"\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable></vue-xtable-column>\\n      <vue-xtable-column field=\\\"nickname\\\" title=\\\"Nickname\\\" sortable></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"time\\\" title=\\\"Time\\\" sortable :sort-by=\\\"['time', 'name']\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\n  },\n\n  methods: {\n  }\n}},{\"id\":\"XtableDemo.base.Sort.sample3\",\"label\":\"XtableDemo.base.Sort.sample3.label\",\"description\":\"XtableDemo.base.Sort.sample3.description\",\"code\":\"<vue-xtable\\n  border\\n  highlight-hover-row\\n  height=\\\"300\\\"\\n  :data=\\\"tableData\\\"\\n  @sort-change=\\\"sortChangeEvent\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable :sort-method=\\\"sortNameMethod\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"nickname\\\" title=\\\"Nickname\\\" sortable></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"time\\\" title=\\\"Time\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\\n  },\\n\\n  methods: {\\n    sortNameMethod (a, b) {\\n      // 例如：名称不区分大小写的排序\\n      var v1 = (a.name || '').toLowerCase()\\n      var v2 = (b.name || '').toLowerCase()\\n      return v1 < v2 ? -1 : v1 > v2 ? 1 : 0\\n    },\\n    sortChangeEvent ({ column, property, order }) {\\n      console.info(property, order)\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      highlight-hover-row\\n      height=\\\"300\\\"\\n      :data=\\\"tableData\\\"\\n      @sort-change=\\\"sortChangeEvent\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable :sort-method=\\\"sortNameMethod\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"nickname\\\" title=\\\"Nickname\\\" sortable></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"time\\\" title=\\\"Time\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\n  },\n\n  methods: {\n    sortNameMethod (a, b) {\n      // 例如：名称不区分大小写的排序\n      var v1 = (a.name || '').toLowerCase()\n      var v2 = (b.name || '').toLowerCase()\n      return v1 < v2 ? -1 : v1 > v2 ? 1 : 0\n    },\n    sortChangeEvent ({ column, property, order }) {\n      console.info(property, order)\n    }\n  }\n}},{\"id\":\"XtableDemo.base.Sort.sample4\",\"label\":\"XtableDemo.base.Sort.sample4.label\",\"description\":\"XtableDemo.base.Sort.sample4.description\",\"code\":\"<vue-xtable\\n  border\\n  highlight-hover-row\\n  highlight-hover-column\\n  ref=\\\"xTable\\\"\\n  height=\\\"300\\\"\\n  :data=\\\"tableData\\\"\\n  :sort-config=\\\"{trigger: 'cell'}\\\"\\n  @sort-change=\\\"sortChangeEvent\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"nickname\\\" title=\\\"Nickname\\\" sortable></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" sortable></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" sortable></vue-xtable-column>\\n  <vue-xtable-column field=\\\"time\\\" title=\\\"Time\\\" sortable></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\\n  },\\n\\n  methods: {\\n    sortChangeEvent ({ column, property, order }) {\\n      console.info(property, order)\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      highlight-hover-row\\n      highlight-hover-column\\n      ref=\\\"xTable\\\"\\n      height=\\\"300\\\"\\n      :data=\\\"tableData\\\"\\n      :sort-config=\\\"{trigger: 'cell'}\\\"\\n      @sort-change=\\\"sortChangeEvent\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"nickname\\\" title=\\\"Nickname\\\" sortable></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" sortable></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" sortable></vue-xtable-column>\\n      <vue-xtable-column field=\\\"time\\\" title=\\\"Time\\\" sortable></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\n  },\n\n  methods: {\n    sortChangeEvent ({ column, property, order }) {\n      console.info(property, order)\n    }\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/base/Stripe\",\"name\":\"XtableDemo.base.Stripe\",\"head\":{\"label\":\"XtableDemo.base.Stripe.label\",\"description\":\"XtableDemo.base.Stripe.description\"},\"samples\":[{\"id\":\"XtableDemo.base.Stripe.sample1\",\"label\":\"XtableDemo.base.Stripe.sample1.label\",\"description\":\"XtableDemo.base.Stripe.sample1.description\",\"code\":\"<vue-xtable\\n  stripe\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\\n  },\\n\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      stripe\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\n  },\n\n}},{\"id\":\"XtableDemo.base.Stripe.sample2\",\"label\":\"XtableDemo.base.Stripe.sample2.label\",\"description\":\"XtableDemo.base.Stripe.sample2.description\",\"code\":\"<vue-xtable\\n  stripe\\n  highlight-current-row\\n  highlight-hover-row\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\\n  },\\n\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      stripe\\n      highlight-current-row\\n      highlight-hover-row\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\n  },\n\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/base/Style\",\"name\":\"XtableDemo.base.Style\",\"head\":{\"label\":\"XtableDemo.base.Style.label\",\"description\":\"XtableDemo.base.Style.description\"},\"samples\":[{\"id\":\"XtableDemo.base.Style.sample1\",\"label\":\"XtableDemo.base.Style.sample1.label\",\"description\":\"XtableDemo.base.Style.sample1.description\",\"code\":\"<vue-xtable\\n  border\\n  class=\\\"mytable-style\\\"\\n  :header-cell-class-name=\\\"headerCellClassName\\\"\\n  :row-class-name=\\\"rowClassName\\\"\\n  :cell-class-name=\\\"cellClassName\\\"\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\\n  },\\n\\n  methods: {\\n    headerCellClassName ({ column, columnIndex }) {\\n      if (column.property === 'name') {\\n        return 'col-blue'\\n      }\\n    },\\n    rowClassName ({ row, rowIndex }) {\\n      if (VueUtil.includes([2, 3, 5], rowIndex)) {\\n        return 'row-green'\\n      }\\n    },\\n    cellClassName ({ row, rowIndex, column, columnIndex }) {\\n      if (column.property === 'sex') {\\n        if (row.sex >= '1') {\\n          return 'col-red'\\n        } else if (row.age === 26) {\\n          return 'col-orange'\\n        }\\n      }\\n    },\\n  }\\n})\\n</script>\\n\\n<style>\\n.mytable-style.vue-xtable-table .vue-xtable-body--row.row-green {\\n  background-color: #187;\\n  color: #fff;\\n}\\n.mytable-style.vue-xtable-table .vue-xtable-header--column.col-blue {\\n  background-color: #2db7f5;\\n  color: #fff;\\n}\\n.mytable-style.vue-xtable-table .vue-xtable-body--column.col-red {\\n  background-color: red;\\n  color: #fff;\\n}\\n.mytable-style.vue-xtable-table .vue-xtable-body--column.col-orange {\\n  background-color: #f60;\\n  color: #fff;\\n}\\n</style>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      class=\\\"mytable-style\\\"\\n      :header-cell-class-name=\\\"headerCellClassName\\\"\\n      :row-class-name=\\\"rowClassName\\\"\\n      :cell-class-name=\\\"cellClassName\\\"\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\n  },\n\n  methods: {\n    headerCellClassName ({ column, columnIndex }) {\n      if (column.property === 'name') {\n        return 'col-blue'\n      }\n    },\n    rowClassName ({ row, rowIndex }) {\n      if (VueUtil.includes([2, 3, 5], rowIndex)) {\n        return 'row-green'\n      }\n    },\n    cellClassName ({ row, rowIndex, column, columnIndex }) {\n      if (column.property === 'sex') {\n        if (row.sex >= '1') {\n          return 'col-red'\n        } else if (row.age === 26) {\n          return 'col-orange'\n        }\n      }\n    },\n  }\n}},{\"id\":\"XtableDemo.base.Style.sample2\",\"label\":\"XtableDemo.base.Style.sample2.label\",\"description\":\"XtableDemo.base.Style.sample2.description\",\"code\":\"<vue-xtable\\n  border\\n  class=\\\"mytable-style\\\"\\n  :cell-class-name=\\\"cellClassName2\\\"\\n  :data=\\\"tableData\\\"\\n  @cell-click=\\\"cellClickEvent2\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n      selectRow: null,\\n      selectColumn: null,\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\\n  },\\n\\n  methods: {\\n    cellClassName2 ({ row, column }) {\\n      if (row === this.selectRow & column === this.selectColumn) {\\n        return 'col-orange'\\n      }\\n    },\\n    cellClickEvent2 ({ row, column }) {\\n      this.selectRow = row\\n      this.selectColumn = column\\n    }\\n  }\\n})\\n</script>\\n\\n<style>\\n.mytable-style.vue-xtable-table .vue-xtable-body--row.row-green {\\n  background-color: #187;\\n  color: #fff;\\n}\\n.mytable-style.vue-xtable-table .vue-xtable-header--column.col-blue {\\n  background-color: #2db7f5;\\n  color: #fff;\\n}\\n.mytable-style.vue-xtable-table .vue-xtable-body--column.col-red {\\n  background-color: red;\\n  color: #fff;\\n}\\n.mytable-style.vue-xtable-table .vue-xtable-body--column.col-orange {\\n  background-color: #f60;\\n  color: #fff;\\n}\\n</style>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      class=\\\"mytable-style\\\"\\n      :cell-class-name=\\\"cellClassName2\\\"\\n      :data=\\\"tableData\\\"\\n      @cell-click=\\\"cellClickEvent2\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n      selectRow: null,\n      selectColumn: null,\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\n  },\n\n  methods: {\n    cellClassName2 ({ row, column }) {\n      if (row === this.selectRow & column === this.selectColumn) {\n        return 'col-orange'\n      }\n    },\n    cellClickEvent2 ({ row, column }) {\n      this.selectRow = row\n      this.selectColumn = column\n    }\n  }\n}}],\"styles\":\".mytable-style.vue-xtable-table .vue-xtable-body--row.row-green {\\n  background-color: #187;\\n  color: #fff;\\n}\\n.mytable-style.vue-xtable-table .vue-xtable-header--column.col-blue {\\n  background-color: #2db7f5;\\n  color: #fff;\\n}\\n.mytable-style.vue-xtable-table .vue-xtable-body--column.col-red {\\n  background-color: red;\\n  color: #fff;\\n}\\n.mytable-style.vue-xtable-table .vue-xtable-body--column.col-orange {\\n  background-color: #f60;\\n  color: #fff;\\n}\"}","export default {\"path\":\"/XtableDemo/edit/AutoClear\",\"name\":\"XtableDemo.edit.AutoClear\",\"head\":{\"label\":\"XtableDemo.edit.AutoClear.label\",\"description\":\"XtableDemo.edit.AutoClear.description\"},\"samples\":[{\"id\":\"XtableDemo.edit.AutoClear.sample1\",\"label\":\"XtableDemo.edit.AutoClear.sample1.label\",\"description\":\"XtableDemo.edit.AutoClear.sample1.description\",\"code\":\"<vue-xtable\\n  ref=\\\"xTable\\\"\\n  border\\n  show-overflow\\n  :data=\\\"tableData\\\"\\n  :edit-config=\\\"{ trigger: 'manual', mode: 'row', autoClear: false}\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column title=\\\"操作\\\">\\n    <template v-slot=\\\"scope\\\">\\n      <template v-if=\\\"$refs.xTable.isActiveByRow(scope.row)\\\">\\n        <vue-button @click=\\\"saveRowEvent(scope.row)\\\">保存</vue-button>\\n        <vue-button @click=\\\"cancelRowEvent(scope.row)\\\">取消</vue-button>\\n      </template>\\n      <template v-else>\\n        <vue-button @click=\\\"editRowEvent(scope.row)\\\">编辑</vue-button>\\n      </template>\\n    </template>\\n  </vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\\n  },\\n\\n  methods: {\\n    editRowEvent (row) {\\n      this.$refs.xTable.setActiveRow(row)\\n    },\\n    saveRowEvent (row) {\\n      this.$refs.xTable.clearActived().then(() => {\\n        this.$alert({ message: 'success' })\\n      })\\n    },\\n    cancelRowEvent (row) {\\n      let xTable = this.$refs.xTable\\n      xTable.clearActived()\\n        .then(() => xTable.revertData(row))\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      ref=\\\"xTable\\\"\\n      border\\n      show-overflow\\n      :data=\\\"tableData\\\"\\n      :edit-config=\\\"{ trigger: 'manual', mode: 'row', autoClear: false}\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column title=\\\"操作\\\">\\n        <template v-slot=\\\"scope\\\">\\n          <template v-if=\\\"$refs.xTable.isActiveByRow(scope.row)\\\">\\n            <vue-button @click=\\\"saveRowEvent(scope.row)\\\">保存</vue-button>\\n            <vue-button @click=\\\"cancelRowEvent(scope.row)\\\">取消</vue-button>\\n          </template>\\n          <template v-else>\\n            <vue-button @click=\\\"editRowEvent(scope.row)\\\">编辑</vue-button>\\n          </template>\\n        </template>\\n      </vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\n  },\n\n  methods: {\n    editRowEvent (row) {\n      this.$refs.xTable.setActiveRow(row)\n    },\n    saveRowEvent (row) {\n      this.$refs.xTable.clearActived().then(() => {\n        this.$alert({ message: 'success' })\n      })\n    },\n    cancelRowEvent (row) {\n      let xTable = this.$refs.xTable\n      xTable.clearActived()\n        .then(() => xTable.revertData(row))\n    }\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/edit/CascadingSelect\",\"name\":\"XtableDemo.edit.CascadingSelect\",\"head\":{\"label\":\"XtableDemo.edit.CascadingSelect.label\",\"description\":\"XtableDemo.edit.CascadingSelect.description\"},\"samples\":[{\"id\":\"XtableDemo.edit.CascadingSelect.sample1\",\"label\":\"XtableDemo.edit.CascadingSelect.sample1.label\",\"description\":\"XtableDemo.edit.CascadingSelect.sample1.description\",\"code\":\"<vue-toolbar>\\n  <template v-slot:buttons>\\n    <vue-button @click=\\\"insertEvent()\\\">新增</vue-button>\\n  </template>\\n</vue-toolbar>\\n\\n<vue-xtable\\n  border\\n  resizable\\n  ref=\\\"xTable\\\"\\n  max-height=\\\"400\\\"\\n  :data=\\\"tableData\\\"\\n  :edit-config=\\\"{trigger: 'click', mode: 'row'}\\\"\\n  @edit-actived=\\\"editActivedEvent\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"attr3\\\" title=\\\"Project type\\\" :edit-render=\\\"{name: 'select', options: ptypeList, events: {change: ptypeChangeEvent}}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"attr4\\\" title=\\\"Project name\\\" :formatter=\\\"formatPanmeLabel\\\" :edit-render=\\\"{}\\\">\\n    <template v-slot:edit=\\\"scope\\\">\\n      <select class=\\\"vxe-default-select\\\" v-model=\\\"scope.row.attr4\\\">\\n        <option v-for=\\\"item in pnameList\\\" :key=\\\"item.value\\\" :value=\\\"item.value\\\">{{ item.label }}</option>\\n      </select>\\n    </template>\\n  </vue-xtable-column>\\n  <vue-xtable-column field=\\\"date12\\\" title=\\\"Date\\\" :edit-render=\\\"{name: 'input', attrs: {type: 'date'}}\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n      ptypeList: [\\n        {\\n          label: '',\\n          value: ''\\n        },\\n        {\\n          label: '项目1',\\n          value: '1'\\n        },\\n        {\\n          label: '项目2',\\n          value: '2'\\n        },\\n        {\\n          label: '项目3',\\n          value: '3'\\n        }\\n      ],\\n      pnameList: [],\\n      cachePnameList: [],\\n\\n    }\\n  },\\n  created () {\\n    this.$nextTick(() => {\\n      this.tableData = window.MOCK_DATA_LIST.slice(0, 4)\\n    })\\n  },\\n\\n  methods: {\\n    insertEvent () {\\n      let record = {\\n\\n      }\\n      this.$refs.xTable.insert(record)\\n    },\\n    // 格式化显示名称\\n    formatPanmeLabel ({ cellValue, row }) {\\n      let ptype = row.attr3\\n      let ptypeItem = VueUtil.find(this.cachePnameList, item => item.ptype === ptype)\\n      if (ptypeItem && ptypeItem.pnameList) {\\n        let pnameItem = VueUtil.find(ptypeItem.pnameList, item => item.value === cellValue)\\n        if (pnameItem) {\\n          return pnameItem.label\\n        }\\n      }\\n      return ''\\n    },\\n    // 更新级联选项列表\\n    updatePnameList (row) {\\n      let ptype = row.attr3\\n      let pnameList = [\\n        {\\n          label: '',\\n          value: ''\\n        }\\n      ]\\n      if (ptype) {\\n        let item = VueUtil.find(this.cachePnameList, item => item.ptype === ptype)\\n        if (item) {\\n          pnameList = item.pnameList\\n        } else {\\n          // 模拟后台数据\\n          Array.from(new Array(Math.floor(Math.random()*(8-3+1)+3))).forEach((item, index) => {\\n            pnameList.push({\\n              label: `${ptype}-名称${index}`,\\n              value: `${ptype}_${index}`\\n            })\\n          })\\n          this.cachePnameList.push({ ptype, pnameList })\\n        }\\n      }\\n      this.pnameList = pnameList\\n    },\\n    ptypeChangeEvent ({ row }, evnt) {\\n      // 使用内置 select 需要手动更新，使用第三方组件如果是 v-model 就不需要手动赋值\\n      row.attr3 = evnt.target.value\\n      // 类型切换时更新级联的下拉数据\\n      row.attr4 = ''\\n      this.updatePnameList(row)\\n    },\\n    editActivedEvent ({ row }) {\\n      this.updatePnameList(row)\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-toolbar>\\n      <template v-slot:buttons>\\n        <vue-button @click=\\\"insertEvent()\\\">新增</vue-button>\\n      </template>\\n    </vue-toolbar>\\n\\n    <vue-xtable\\n      border\\n      resizable\\n      ref=\\\"xTable\\\"\\n      max-height=\\\"400\\\"\\n      :data=\\\"tableData\\\"\\n      :edit-config=\\\"{trigger: 'click', mode: 'row'}\\\"\\n      @edit-actived=\\\"editActivedEvent\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"attr3\\\" title=\\\"Project type\\\" :edit-render=\\\"{name: 'select', options: ptypeList, events: {change: ptypeChangeEvent}}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"attr4\\\" title=\\\"Project name\\\" :formatter=\\\"formatPanmeLabel\\\" :edit-render=\\\"{}\\\">\\n        <template v-slot:edit=\\\"scope\\\">\\n          <select class=\\\"vxe-default-select\\\" v-model=\\\"scope.row.attr4\\\">\\n            <option v-for=\\\"item in pnameList\\\" :key=\\\"item.value\\\" :value=\\\"item.value\\\">{{ item.label }}</option>\\n          </select>\\n        </template>\\n      </vue-xtable-column>\\n      <vue-xtable-column field=\\\"date12\\\" title=\\\"Date\\\" :edit-render=\\\"{name: 'input', attrs: {type: 'date'}}\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n      ptypeList: [\n        {\n          label: '',\n          value: ''\n        },\n        {\n          label: '项目1',\n          value: '1'\n        },\n        {\n          label: '项目2',\n          value: '2'\n        },\n        {\n          label: '项目3',\n          value: '3'\n        }\n      ],\n      pnameList: [],\n      cachePnameList: [],\n\n    }\n  },\n  created () {\n    this.$nextTick(() => {\n      this.tableData = window.MOCK_DATA_LIST.slice(0, 4)\n    })\n  },\n\n  methods: {\n    insertEvent () {\n      let record = {\n\n      }\n      this.$refs.xTable.insert(record)\n    },\n    // 格式化显示名称\n    formatPanmeLabel ({ cellValue, row }) {\n      let ptype = row.attr3\n      let ptypeItem = VueUtil.find(this.cachePnameList, item => item.ptype === ptype)\n      if (ptypeItem && ptypeItem.pnameList) {\n        let pnameItem = VueUtil.find(ptypeItem.pnameList, item => item.value === cellValue)\n        if (pnameItem) {\n          return pnameItem.label\n        }\n      }\n      return ''\n    },\n    // 更新级联选项列表\n    updatePnameList (row) {\n      let ptype = row.attr3\n      let pnameList = [\n        {\n          label: '',\n          value: ''\n        }\n      ]\n      if (ptype) {\n        let item = VueUtil.find(this.cachePnameList, item => item.ptype === ptype)\n        if (item) {\n          pnameList = item.pnameList\n        } else {\n          // 模拟后台数据\n          Array.from(new Array(Math.floor(Math.random()*(8-3+1)+3))).forEach((item, index) => {\n            pnameList.push({\n              label: `${ptype}-名称${index}`,\n              value: `${ptype}_${index}`\n            })\n          })\n          this.cachePnameList.push({ ptype, pnameList })\n        }\n      }\n      this.pnameList = pnameList\n    },\n    ptypeChangeEvent ({ row }, evnt) {\n      // 使用内置 select 需要手动更新，使用第三方组件如果是 v-model 就不需要手动赋值\n      row.attr3 = evnt.target.value\n      // 类型切换时更新级联的下拉数据\n      row.attr4 = ''\n      this.updatePnameList(row)\n    },\n    editActivedEvent ({ row }) {\n      this.updatePnameList(row)\n    }\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/edit/CellDisable\",\"name\":\"XtableDemo.edit.CellDisable\",\"head\":{\"label\":\"XtableDemo.edit.CellDisable.label\",\"description\":\"XtableDemo.edit.CellDisable.description\"},\"samples\":[{\"id\":\"XtableDemo.edit.CellDisable.sample1\",\"label\":\"XtableDemo.edit.CellDisable.sample1.label\",\"description\":\"XtableDemo.edit.CellDisable.sample1.description\",\"code\":\"<vue-xtable\\n  border\\n  show-overflow\\n  :data=\\\"tableData\\\"\\n  :edit-config=\\\"{trigger: 'click', mode: 'cell', activeMethod: activeCellMethod}\\\"\\n  @edit-disabled=\\\"editDisabledEvent\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"date12\\\" title=\\\"Date\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\\n  },\\n\\n  methods: {\\n    activeCellMethod ({ column, columnIndex }) {\\n      return columnIndex !== 1\\n    },\\n    editDisabledEvent ({ row, column }) {\\n      this.$alert({ message: '禁止编辑' })\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      show-overflow\\n      :data=\\\"tableData\\\"\\n      :edit-config=\\\"{trigger: 'click', mode: 'cell', activeMethod: activeCellMethod}\\\"\\n      @edit-disabled=\\\"editDisabledEvent\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"date12\\\" title=\\\"Date\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\n  },\n\n  methods: {\n    activeCellMethod ({ column, columnIndex }) {\n      return columnIndex !== 1\n    },\n    editDisabledEvent ({ row, column }) {\n      this.$alert({ message: '禁止编辑' })\n    }\n  }\n}},{\"id\":\"XtableDemo.edit.CellDisable.sample2\",\"label\":\"XtableDemo.edit.CellDisable.sample2.label\",\"description\":\"XtableDemo.edit.CellDisable.sample2.description\",\"code\":\"<vue-xtable\\n  border\\n  show-overflow\\n  :data=\\\"tableData\\\"\\n  :edit-config=\\\"{trigger: 'click', mode: 'cell', activeMethod: activeRowMethod}\\\"\\n  @edit-disabled=\\\"editDisabledEvent\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"date12\\\" title=\\\"Date\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\\n  },\\n\\n  methods: {\\n    activeRowMethod ({ row, rowIndex }) {\\n      return rowIndex !== 1\\n    },\\n    editDisabledEvent ({ row, column }) {\\n      this.$alert({ message: '禁止编辑' })\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      show-overflow\\n      :data=\\\"tableData\\\"\\n      :edit-config=\\\"{trigger: 'click', mode: 'cell', activeMethod: activeRowMethod}\\\"\\n      @edit-disabled=\\\"editDisabledEvent\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"date12\\\" title=\\\"Date\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\n  },\n\n  methods: {\n    activeRowMethod ({ row, rowIndex }) {\n      return rowIndex !== 1\n    },\n    editDisabledEvent ({ row, column }) {\n      this.$alert({ message: '禁止编辑' })\n    }\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/edit/CellValid\",\"name\":\"XtableDemo.edit.CellValid\",\"head\":{\"label\":\"XtableDemo.edit.CellValid.label\",\"description\":\"XtableDemo.edit.CellValid.description\"},\"samples\":[{\"id\":\"XtableDemo.edit.CellValid.sample1\",\"label\":\"XtableDemo.edit.CellValid.sample1.label\",\"description\":\"XtableDemo.edit.CellValid.sample1.description\",\"code\":\"<vue-toolbar>\\n  <template v-slot:buttons>\\n    <vue-button @click=\\\"insertEvent\\\">新增</vue-button>\\n    <vue-button @click=\\\"$refs.xTable.removeSelecteds()\\\">删除选中</vue-button>\\n    <vue-button @click=\\\"validEvent\\\">校验</vue-button>\\n    <vue-button @click=\\\"fullValidEvent\\\">完整校验</vue-button>\\n    <vue-button @click=\\\"selectValidEvent\\\">选中校验</vue-button>\\n    <vue-button @click=\\\"getSelectEvent\\\">获取选中</vue-button>\\n    <vue-button @click=\\\"getInsertEvent\\\">获取新增</vue-button>\\n    <vue-button @click=\\\"getRemoveEvent\\\">获取删除</vue-button>\\n    <vue-button @click=\\\"getUpdateEvent\\\">获取修改</vue-button>\\n  </template>\\n</vue-toolbar>\\n\\n<vue-xtable\\n  border\\n  show-overflow\\n  height=\\\"500\\\"\\n  ref=\\\"xTable\\\"\\n  :data=\\\"tableData\\\"\\n  :edit-rules=\\\"validRules\\\"\\n  :edit-config=\\\"{trigger: 'click', mode: 'cell', showStatus: true}\\\">\\n  <vue-xtable-column type=\\\"checkbox\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n      validRules: {\\n        name: [\\n          { required: true, message: '名称必须填写' },\\n          { min: 3, max: 50, message: '名称长度在 3 到 50 个字符' }\\n        ],\\n        sex: [\\n          { required: true, message: '性别必须填写' }\\n        ]\\n      },\\n\\n    }\\n  },\\n  created () {\\n    let list = window.MOCK_DATA_LIST.slice(0, 6)\\n    this.tableData = list\\n  },\\n\\n  methods: {\\n    validEvent () {\\n      this.$refs.xTable.validate(valid => {\\n        if (valid) {\\n          this.$notify.success({ message:'校验成功！'});\\n        } else {\\n          this.$notify.error({ message:'校验不通过！'});\\n        }\\n      })\\n    },\\n    fullValidEvent () {\\n      this.$refs.xTable.fullValidate((valid, errMap) => {\\n        if (valid) {\\n          this.$notify.success({ message:'校验成功！'});\\n        } else {\\n          let msgList = []\\n          Object.values(errMap).forEach(errList => {\\n            errList.forEach(params => {\\n              let { rowIndex, column, rules } = params\\n              rules.forEach(rule => {\\n                msgList.push(`第 ${rowIndex} 行 ${column.title} 校验错误：${rule.message}`)\\n              })\\n            })\\n          })\\n\\n          var h = this.$createElement;\\n          this.$alert({\\n            type: \\\"error\\\",\\n            message: h('div',[msgList.map(function (msg) {\\n              return h(\\\"div\\\", [msg]);\\n            })])\\n          });\\n        }\\n      })\\n    },\\n    selectValidEvent () {\\n      let selectRecords = this.$refs.xTable.getSelectRecords()\\n      if (selectRecords.length > 0) {\\n        this.$refs.xTable.validate(selectRecords, valid => {\\n          if (valid) {\\n            this.$notify.success({ message:'校验成功！'});\\n          } else {\\n            this.$notify.error({ message:'校验不通过！'});\\n          }\\n        })\\n      } else {\\n        this.$notify.warning({ message:'未选中数据！'});\\n      }\\n    },\\n    insertEvent () {\\n      this.$refs.xTable.insert().then(({ row }) => {\\n        // 插入一条数据并触发校验\\n        this.$refs.xTable.validate(row, valid => {\\n          if (valid) {\\n\\n          }\\n        })\\n      })\\n    },\\n    getSelectEvent () {\\n      let selectRecords = this.$refs.xTable.getSelectRecords()\\n      this.$alert({ message: selectRecords.length })\\n    },\\n    getInsertEvent () {\\n      let insertRecords = this.$refs.xTable.getInsertRecords()\\n      this.$alert({ message: insertRecords.length })\\n    },\\n    getRemoveEvent () {\\n      let removeRecords = this.$refs.xTable.getRemoveRecords()\\n      this.$alert({ message: removeRecords.length })\\n    },\\n    getUpdateEvent () {\\n      let updateRecords = this.$refs.xTable.getUpdateRecords()\\n      this.$alert({ message: updateRecords.length })\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-toolbar>\\n      <template v-slot:buttons>\\n        <vue-button @click=\\\"insertEvent\\\">新增</vue-button>\\n        <vue-button @click=\\\"$refs.xTable.removeSelecteds()\\\">删除选中</vue-button>\\n        <vue-button @click=\\\"validEvent\\\">校验</vue-button>\\n        <vue-button @click=\\\"fullValidEvent\\\">完整校验</vue-button>\\n        <vue-button @click=\\\"selectValidEvent\\\">选中校验</vue-button>\\n        <vue-button @click=\\\"getSelectEvent\\\">获取选中</vue-button>\\n        <vue-button @click=\\\"getInsertEvent\\\">获取新增</vue-button>\\n        <vue-button @click=\\\"getRemoveEvent\\\">获取删除</vue-button>\\n        <vue-button @click=\\\"getUpdateEvent\\\">获取修改</vue-button>\\n      </template>\\n    </vue-toolbar>\\n\\n    <vue-xtable\\n      border\\n      show-overflow\\n      height=\\\"500\\\"\\n      ref=\\\"xTable\\\"\\n      :data=\\\"tableData\\\"\\n      :edit-rules=\\\"validRules\\\"\\n      :edit-config=\\\"{trigger: 'click', mode: 'cell', showStatus: true}\\\">\\n      <vue-xtable-column type=\\\"checkbox\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n      validRules: {\n        name: [\n          { required: true, message: '名称必须填写' },\n          { min: 3, max: 50, message: '名称长度在 3 到 50 个字符' }\n        ],\n        sex: [\n          { required: true, message: '性别必须填写' }\n        ]\n      },\n\n    }\n  },\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 6)\n    this.tableData = list\n  },\n\n  methods: {\n    validEvent () {\n      this.$refs.xTable.validate(valid => {\n        if (valid) {\n          this.$notify.success({ message:'校验成功！'});\n        } else {\n          this.$notify.error({ message:'校验不通过！'});\n        }\n      })\n    },\n    fullValidEvent () {\n      this.$refs.xTable.fullValidate((valid, errMap) => {\n        if (valid) {\n          this.$notify.success({ message:'校验成功！'});\n        } else {\n          let msgList = []\n          Object.values(errMap).forEach(errList => {\n            errList.forEach(params => {\n              let { rowIndex, column, rules } = params\n              rules.forEach(rule => {\n                msgList.push(`第 ${rowIndex} 行 ${column.title} 校验错误：${rule.message}`)\n              })\n            })\n          })\n\n          var h = this.$createElement;\n          this.$alert({\n            type: \"error\",\n            message: h('div',[msgList.map(function (msg) {\n              return h(\"div\", [msg]);\n            })])\n          });\n        }\n      })\n    },\n    selectValidEvent () {\n      let selectRecords = this.$refs.xTable.getSelectRecords()\n      if (selectRecords.length > 0) {\n        this.$refs.xTable.validate(selectRecords, valid => {\n          if (valid) {\n            this.$notify.success({ message:'校验成功！'});\n          } else {\n            this.$notify.error({ message:'校验不通过！'});\n          }\n        })\n      } else {\n        this.$notify.warning({ message:'未选中数据！'});\n      }\n    },\n    insertEvent () {\n      this.$refs.xTable.insert().then(({ row }) => {\n        // 插入一条数据并触发校验\n        this.$refs.xTable.validate(row, valid => {\n          if (valid) {\n\n          }\n        })\n      })\n    },\n    getSelectEvent () {\n      let selectRecords = this.$refs.xTable.getSelectRecords()\n      this.$alert({ message: selectRecords.length })\n    },\n    getInsertEvent () {\n      let insertRecords = this.$refs.xTable.getInsertRecords()\n      this.$alert({ message: insertRecords.length })\n    },\n    getRemoveEvent () {\n      let removeRecords = this.$refs.xTable.getRemoveRecords()\n      this.$alert({ message: removeRecords.length })\n    },\n    getUpdateEvent () {\n      let updateRecords = this.$refs.xTable.getUpdateRecords()\n      this.$alert({ message: updateRecords.length })\n    }\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/edit/Click\",\"name\":\"XtableDemo.edit.Click\",\"head\":{\"label\":\"XtableDemo.edit.Click.label\",\"description\":\"XtableDemo.edit.Click.description\"},\"samples\":[{\"id\":\"XtableDemo.edit.Click.sample1\",\"label\":\"XtableDemo.edit.Click.sample1.label\",\"description\":\"XtableDemo.edit.Click.sample1.description\",\"code\":\"<vue-xtable\\n  border\\n  resizable\\n  :data=\\\"tableData\\\"\\n  :edit-config=\\\"{trigger: 'click', mode: 'cell'}\\\"\\n  @edit-actived=\\\"editActivedEvent\\\"\\n  @edit-closed=\\\"editClosedEvent\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"role\\\" title=\\\"Role\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" :edit-render=\\\"{name: 'select', options: sexList}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"num6\\\" title=\\\"Number\\\" :edit-render=\\\"{name: 'input', attrs: {type: 'number'}}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"date12\\\" title=\\\"Date\\\" :edit-render=\\\"{name: 'input', attrs: {type: 'date'}}\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n      sexList: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\\n    this.findSexList()\\n  },\\n\\n  methods: {\\n    findSexList () {\\n      return Vue.http.get('/api/conf/sex/list').then(data => {\\n        this.sexList = data.data\\n      })\\n    },\\n    editActivedEvent ({ row, column }, event) {\\n      console.log(`打开 ${column.title} 列编辑`)\\n    },\\n    editClosedEvent ({ row, column }, event) {\\n      console.log(`关闭 ${column.title} 列编辑`)\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      resizable\\n      :data=\\\"tableData\\\"\\n      :edit-config=\\\"{trigger: 'click', mode: 'cell'}\\\"\\n      @edit-actived=\\\"editActivedEvent\\\"\\n      @edit-closed=\\\"editClosedEvent\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"role\\\" title=\\\"Role\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" :edit-render=\\\"{name: 'select', options: sexList}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"num6\\\" title=\\\"Number\\\" :edit-render=\\\"{name: 'input', attrs: {type: 'number'}}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"date12\\\" title=\\\"Date\\\" :edit-render=\\\"{name: 'input', attrs: {type: 'date'}}\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n      sexList: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\n    this.findSexList()\n  },\n\n  methods: {\n    findSexList () {\n      return Vue.http.get('/api/conf/sex/list').then(data => {\n        this.sexList = data.data\n      })\n    },\n    editActivedEvent ({ row, column }, event) {\n      console.log(`打开 ${column.title} 列编辑`)\n    },\n    editClosedEvent ({ row, column }, event) {\n      console.log(`关闭 ${column.title} 列编辑`)\n    }\n  }\n}},{\"id\":\"XtableDemo.edit.Click.sample2\",\"label\":\"XtableDemo.edit.Click.sample2.label\",\"description\":\"XtableDemo.edit.Click.sample2.description\",\"code\":\"<vue-xtable\\n  border\\n  resizable\\n  show-overflow\\n  :data=\\\"tableData\\\"\\n  :edit-config=\\\"{trigger: 'click', mode: 'row'}\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"role\\\" title=\\\"Role\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex2\\\" title=\\\"Sex\\\" :edit-render=\\\"{name: 'select', options: sexList, optionProps: {value: 'value', label: 'spell'}}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"num6\\\" title=\\\"Number\\\" :edit-render=\\\"{name: 'input', attrs: {type: 'number'}}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"date13\\\" title=\\\"Date\\\" :edit-render=\\\"{name: 'input', attrs: {type: 'date'}}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n      sexList: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\\n    this.findSexList()\\n  },\\n\\n  methods: {\\n    findSexList () {\\n      return Vue.http.get('/api/conf/sex/list').then(data => {\\n        this.sexList = data.data\\n      })\\n    },\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      resizable\\n      show-overflow\\n      :data=\\\"tableData\\\"\\n      :edit-config=\\\"{trigger: 'click', mode: 'row'}\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"role\\\" title=\\\"Role\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex2\\\" title=\\\"Sex\\\" :edit-render=\\\"{name: 'select', options: sexList, optionProps: {value: 'value', label: 'spell'}}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"num6\\\" title=\\\"Number\\\" :edit-render=\\\"{name: 'input', attrs: {type: 'number'}}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"date13\\\" title=\\\"Date\\\" :edit-render=\\\"{name: 'input', attrs: {type: 'date'}}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n      sexList: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\n    this.findSexList()\n  },\n\n  methods: {\n    findSexList () {\n      return Vue.http.get('/api/conf/sex/list').then(data => {\n        this.sexList = data.data\n      })\n    },\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/edit/DBLClick\",\"name\":\"XtableDemo.edit.DBLClick\",\"head\":{\"label\":\"XtableDemo.edit.DBLClick.label\",\"description\":\"XtableDemo.edit.DBLClick.description\"},\"samples\":[{\"id\":\"XtableDemo.edit.DBLClick.sample1\",\"label\":\"XtableDemo.edit.DBLClick.sample1.label\",\"description\":\"XtableDemo.edit.DBLClick.sample1.description\",\"code\":\"<vue-xtable\\n  border\\n  resizable\\n  :data=\\\"tableData\\\"\\n  :edit-config=\\\"{trigger: 'dblclick', mode: 'cell'}\\\"\\n  @edit-actived=\\\"editActivedEvent\\\"\\n  @edit-closed=\\\"editClosedEvent\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"role\\\" title=\\\"Role\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" :edit-render=\\\"{name: 'select', options: sexList}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"num6\\\" title=\\\"Number\\\" :edit-render=\\\"{name: 'input', attrs: {type: 'number'}}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"date12\\\" title=\\\"Date\\\" :edit-render=\\\"{name: 'input', attrs: {type: 'date'}}\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n      sexList: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\\n    this.findSexList()\\n  },\\n\\n  methods: {\\n    findSexList () {\\n      return Vue.http.get('/api/conf/sex/list').then(data => {\\n        this.sexList = data.data\\n      })\\n    },\\n    editActivedEvent ({ row, column }, event) {\\n      console.log(`打开 ${column.title} 列编辑`)\\n    },\\n    editClosedEvent ({ row, column }, event) {\\n      console.log(`关闭 ${column.title} 列编辑`)\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      resizable\\n      :data=\\\"tableData\\\"\\n      :edit-config=\\\"{trigger: 'dblclick', mode: 'cell'}\\\"\\n      @edit-actived=\\\"editActivedEvent\\\"\\n      @edit-closed=\\\"editClosedEvent\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"role\\\" title=\\\"Role\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" :edit-render=\\\"{name: 'select', options: sexList}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"num6\\\" title=\\\"Number\\\" :edit-render=\\\"{name: 'input', attrs: {type: 'number'}}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"date12\\\" title=\\\"Date\\\" :edit-render=\\\"{name: 'input', attrs: {type: 'date'}}\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n      sexList: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\n    this.findSexList()\n  },\n\n  methods: {\n    findSexList () {\n      return Vue.http.get('/api/conf/sex/list').then(data => {\n        this.sexList = data.data\n      })\n    },\n    editActivedEvent ({ row, column }, event) {\n      console.log(`打开 ${column.title} 列编辑`)\n    },\n    editClosedEvent ({ row, column }, event) {\n      console.log(`关闭 ${column.title} 列编辑`)\n    }\n  }\n}},{\"id\":\"XtableDemo.edit.DBLClick.sample2\",\"label\":\"XtableDemo.edit.DBLClick.sample2.label\",\"description\":\"XtableDemo.edit.DBLClick.sample2.description\",\"code\":\"<vue-xtable\\n  border\\n  resizable\\n  show-overflow\\n  :data=\\\"tableData\\\"\\n  :edit-config=\\\"{trigger: 'dblclick', mode: 'row'}\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"role\\\" title=\\\"Role\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex4\\\" title=\\\"Sex\\\" :edit-render=\\\"{name: 'select', options: sexList, optionProps: {value: 'value2', label: 'spell'}}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"num6\\\" title=\\\"Number\\\" :edit-render=\\\"{name: 'input', attrs: {type: 'number'}}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"date13\\\" title=\\\"Date\\\" :edit-render=\\\"{name: 'input', attrs: {type: 'date'}}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n      sexList: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\\n    this.findSexList()\\n  },\\n\\n  methods: {\\n    findSexList () {\\n      return Vue.http.get('/api/conf/sex/list').then(data => {\\n        this.sexList = data.data\\n      })\\n    },\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      resizable\\n      show-overflow\\n      :data=\\\"tableData\\\"\\n      :edit-config=\\\"{trigger: 'dblclick', mode: 'row'}\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"role\\\" title=\\\"Role\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex4\\\" title=\\\"Sex\\\" :edit-render=\\\"{name: 'select', options: sexList, optionProps: {value: 'value2', label: 'spell'}}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"num6\\\" title=\\\"Number\\\" :edit-render=\\\"{name: 'input', attrs: {type: 'number'}}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"date13\\\" title=\\\"Date\\\" :edit-render=\\\"{name: 'input', attrs: {type: 'date'}}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n      sexList: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\n    this.findSexList()\n  },\n\n  methods: {\n    findSexList () {\n      return Vue.http.get('/api/conf/sex/list').then(data => {\n        this.sexList = data.data\n      })\n    },\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/edit/Events\",\"name\":\"XtableDemo.edit.Events\",\"head\":{\"label\":\"XtableDemo.edit.Events.label\",\"description\":\"XtableDemo.edit.Events.description\"},\"samples\":[{\"id\":\"XtableDemo.edit.Events.sample1\",\"label\":\"XtableDemo.edit.Events.sample1.label\",\"description\":\"XtableDemo.edit.Events.sample1.description\",\"code\":\"<vue-xtable\\n  border\\n  resizable\\n  :data=\\\"tableData\\\"\\n  :edit-config=\\\"{trigger: 'click', mode: 'cell'}\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input', events: {keydown: keydownEvent}}\\\"></vue-xtable-column>\\n  <vue-xtable-column\\n    field=\\\"role\\\"\\n    title=\\\"Role\\\"\\n    :filters=\\\"[{ data: '' }]\\\"\\n    :filter-render=\\\"{name: 'input', attrs: {placeholder: '按回车确认筛选'}, events: {keyup: enterFilterEvent}}\\\"\\n    :edit-render=\\\"{name: 'input', events: {focus: focusEvent}}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" :edit-render=\\\"{name: 'select', options: sexList, events: {change: changeEvent}}\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n      sexList: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\\n    this.findSexList()\\n  },\\n\\n  methods: {\\n    findSexList () {\\n      return Vue.http.get('/api/conf/sex/list').then(data => {\\n        this.sexList = data.data\\n      })\\n    },\\n    enterFilterEvent ({ context, column }, event) {\\n      if (event.keyCode === 13) {\\n        context.confirmFilter()\\n      }\\n    },\\n    keydownEvent ({ column }, event) {\\n      console.log(`${column.title} 触发 keydown 事件`)\\n    },\\n    focusEvent ({ column }, event) {\\n      console.log(`${column.title} 触发 focus 事件`)\\n    },\\n    changeEvent ({ column }, event) {\\n      console.log(`${column.title} 触发 change 事件`)\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      resizable\\n      :data=\\\"tableData\\\"\\n      :edit-config=\\\"{trigger: 'click', mode: 'cell'}\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input', events: {keydown: keydownEvent}}\\\"></vue-xtable-column>\\n      <vue-xtable-column\\n        field=\\\"role\\\"\\n        title=\\\"Role\\\"\\n        :filters=\\\"[{ data: '' }]\\\"\\n        :filter-render=\\\"{name: 'input', attrs: {placeholder: '按回车确认筛选'}, events: {keyup: enterFilterEvent}}\\\"\\n        :edit-render=\\\"{name: 'input', events: {focus: focusEvent}}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" :edit-render=\\\"{name: 'select', options: sexList, events: {change: changeEvent}}\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n      sexList: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\n    this.findSexList()\n  },\n\n  methods: {\n    findSexList () {\n      return Vue.http.get('/api/conf/sex/list').then(data => {\n        this.sexList = data.data\n      })\n    },\n    enterFilterEvent ({ context, column }, event) {\n      if (event.keyCode === 13) {\n        context.confirmFilter()\n      }\n    },\n    keydownEvent ({ column }, event) {\n      console.log(`${column.title} 触发 keydown 事件`)\n    },\n    focusEvent ({ column }, event) {\n      console.log(`${column.title} 触发 focus 事件`)\n    },\n    changeEvent ({ column }, event) {\n      console.log(`${column.title} 触发 change 事件`)\n    }\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/edit/Expand\",\"name\":\"XtableDemo.edit.Expand\",\"head\":{\"label\":\"XtableDemo.edit.Expand.label\",\"description\":\"XtableDemo.edit.Expand.description\"},\"samples\":[{\"id\":\"XtableDemo.edit.Expand.sample1\",\"label\":\"XtableDemo.edit.Expand.sample1.label\",\"description\":\"XtableDemo.edit.Expand.sample1.description\",\"code\":\"<vue-xtable\\n  border\\n  resizable\\n  :data=\\\"tableData\\\"\\n  :edit-config=\\\"{trigger: 'click', mode: 'cell'}\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column type=\\\"expand\\\" width=\\\"60\\\">\\n    <template v-slot=\\\"scope\\\">\\n      <ul class=\\\"expand-form\\\">\\n        <li>\\n          <span class=\\\"title\\\">Name：</span>\\n          <span class=\\\"content\\\">\\n            <vue-input v-model=\\\"scope.row.name\\\"></vue-input>\\n          </span>\\n        </li>\\n        <li>\\n          <span class=\\\"title\\\">Sex：</span>\\n          <span class=\\\"content\\\">\\n            <vue-input v-model=\\\"scope.row.sex\\\"></vue-input>\\n          </span>\\n        </li>\\n        <li>\\n          <span class=\\\"title\\\">Age：</span>\\n          <span class=\\\"content\\\">\\n            <vue-input v-model=\\\"scope.row.age\\\"></vue-input>\\n          </span>\\n        </li>\\n      </ul>\\n    </template>\\n  </vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\\n  },\\n\\n})\\n</script>\\n\\n<style>\\n.expand-form li {\\n  margin: 5px 0;\\n}\\n.expand-form li .title,\\n.expand-form li .content {\\n  display: inline-block;\\n}\\n.expand-form li .title {\\n  width: 100px;\\n}\\n.expand-form li .content {\\n  width: 200px;\\n}\\n</style>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      resizable\\n      :data=\\\"tableData\\\"\\n      :edit-config=\\\"{trigger: 'click', mode: 'cell'}\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column type=\\\"expand\\\" width=\\\"60\\\">\\n        <template v-slot=\\\"scope\\\">\\n          <ul class=\\\"expand-form\\\">\\n            <li>\\n              <span class=\\\"title\\\">Name：</span>\\n              <span class=\\\"content\\\">\\n                <vue-input v-model=\\\"scope.row.name\\\"></vue-input>\\n              </span>\\n            </li>\\n            <li>\\n              <span class=\\\"title\\\">Sex：</span>\\n              <span class=\\\"content\\\">\\n                <vue-input v-model=\\\"scope.row.sex\\\"></vue-input>\\n              </span>\\n            </li>\\n            <li>\\n              <span class=\\\"title\\\">Age：</span>\\n              <span class=\\\"content\\\">\\n                <vue-input v-model=\\\"scope.row.age\\\"></vue-input>\\n              </span>\\n            </li>\\n          </ul>\\n        </template>\\n      </vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\n  },\n\n}}],\"styles\":\".expand-form li {\\n  margin: 5px 0;\\n}\\n.expand-form li .title,\\n.expand-form li .content {\\n  display: inline-block;\\n}\\n.expand-form li .title {\\n  width: 100px;\\n}\\n.expand-form li .content {\\n  width: 200px;\\n}\"}","export default {\"path\":\"/XtableDemo/edit/Footer\",\"name\":\"XtableDemo.edit.Footer\",\"head\":{\"label\":\"XtableDemo.edit.Footer.label\",\"description\":\"XtableDemo.edit.Footer.description\"},\"samples\":[{\"id\":\"XtableDemo.edit.Footer.sample1\",\"label\":\"XtableDemo.edit.Footer.sample1.label\",\"description\":\"XtableDemo.edit.Footer.sample1.description\",\"code\":\"<vue-toolbar export>\\n  <template v-slot:buttons>\\n    <vue-button @click=\\\"insertEvent\\\">新增</vue-button>\\n    <vue-button @click=\\\"getInsertEvent\\\">获取新增</vue-button>\\n  </template>\\n</vue-toolbar>\\n\\n<vue-xtable\\n  border\\n  show-footer\\n  show-overflow\\n  highlight-hover-row\\n  ref=\\\"xTable\\\"\\n  height=\\\"400\\\"\\n  class=\\\"editable-footer\\\"\\n  :footer-method=\\\"footerMethod\\\"\\n  :footer-cell-class-name=\\\"footerCellClassName\\\"\\n  :data=\\\"tableData\\\"\\n  :edit-config=\\\"{trigger: 'click', mode: 'row'}\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    let list = window.MOCK_DATA_LIST.slice(0, 20)\\n    this.tableData = list\\n  },\\n\\n  methods: {\\n    footerCellClassName ({ $rowIndex, column, columnIndex }) {\\n      if (columnIndex === 0) {\\n        if ($rowIndex === 0) {\\n          return 'col-blue'\\n        } else {\\n          return 'col-red'\\n        }\\n      }\\n    },\\n    footerMethod ({ columns, data }) {\\n      return [\\n        columns.map((column, columnIndex) => {\\n          if (columnIndex === 0) {\\n            return '平均'\\n          }\\n          if (VueUtil.includes(['age'], column.property)) {\\n            return VueUtil.mean(data.map(data => data[column.property]))\\n          }\\n          return null\\n        }),\\n        columns.map((column, columnIndex) => {\\n          if (columnIndex === 0) {\\n            return '和值'\\n          }\\n          if (VueUtil.includes(['age'], column.property)) {\\n            return VueUtil.sum(data.map( data => data[column.property]))\\n          }\\n          return null\\n        })\\n      ]\\n    },\\n    insertEvent () {\\n      let record = {\\n        name: 'New name'\\n      }\\n      this.$refs.xTable.insert(record).then(({ row }) => this.$refs.xTable.setActiveCell(row, 'age'))\\n    },\\n    getInsertEvent () {\\n      let insertRecords = this.$refs.xTable.getInsertRecords()\\n      this.$alert({ message: insertRecords.length })\\n    }\\n  }\\n})\\n</script>\\n\\n<style>\\n.editable-footer .vxe-footer--column.col-blue {\\n  background-color: #2db7f5;\\n  color: #fff;\\n}\\n.editable-footer .vxe-footer--column.col-red {\\n  background-color: red;\\n  color: #fff;\\n}\\n</style>\",\"template\":\"<div class=\\\"source\\\">    <vue-toolbar export>\\n      <template v-slot:buttons>\\n        <vue-button @click=\\\"insertEvent\\\">新增</vue-button>\\n        <vue-button @click=\\\"getInsertEvent\\\">获取新增</vue-button>\\n      </template>\\n    </vue-toolbar>\\n\\n    <vue-xtable\\n      border\\n      show-footer\\n      show-overflow\\n      highlight-hover-row\\n      ref=\\\"xTable\\\"\\n      height=\\\"400\\\"\\n      class=\\\"editable-footer\\\"\\n      :footer-method=\\\"footerMethod\\\"\\n      :footer-cell-class-name=\\\"footerCellClassName\\\"\\n      :data=\\\"tableData\\\"\\n      :edit-config=\\\"{trigger: 'click', mode: 'row'}\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 20)\n    this.tableData = list\n  },\n\n  methods: {\n    footerCellClassName ({ $rowIndex, column, columnIndex }) {\n      if (columnIndex === 0) {\n        if ($rowIndex === 0) {\n          return 'col-blue'\n        } else {\n          return 'col-red'\n        }\n      }\n    },\n    footerMethod ({ columns, data }) {\n      return [\n        columns.map((column, columnIndex) => {\n          if (columnIndex === 0) {\n            return '平均'\n          }\n          if (VueUtil.includes(['age'], column.property)) {\n            return VueUtil.mean(data.map(data => data[column.property]))\n          }\n          return null\n        }),\n        columns.map((column, columnIndex) => {\n          if (columnIndex === 0) {\n            return '和值'\n          }\n          if (VueUtil.includes(['age'], column.property)) {\n            return VueUtil.sum(data.map( data => data[column.property]))\n          }\n          return null\n        })\n      ]\n    },\n    insertEvent () {\n      let record = {\n        name: 'New name'\n      }\n      this.$refs.xTable.insert(record).then(({ row }) => this.$refs.xTable.setActiveCell(row, 'age'))\n    },\n    getInsertEvent () {\n      let insertRecords = this.$refs.xTable.getInsertRecords()\n      this.$alert({ message: insertRecords.length })\n    }\n  }\n}}],\"styles\":\".editable-footer .vxe-footer--column.col-blue {\\n  background-color: #2db7f5;\\n  color: #fff;\\n}\\n.editable-footer .vxe-footer--column.col-red {\\n  background-color: red;\\n  color: #fff;\\n}\"}","export default {\"path\":\"/XtableDemo/edit/FooterImmediately\",\"name\":\"XtableDemo.edit.FooterImmediately\",\"head\":{\"label\":\"XtableDemo.edit.FooterImmediately.label\",\"description\":\"XtableDemo.edit.FooterImmediately.description\"},\"samples\":[{\"id\":\"XtableDemo.edit.FooterImmediately.sample1\",\"label\":\"XtableDemo.edit.FooterImmediately.sample1.label\",\"description\":\"XtableDemo.edit.FooterImmediately.sample1.description\",\"code\":\"<vue-toolbar>\\n  <template v-slot:buttons>\\n    <vue-button @click=\\\"insertEvent\\\">新增</vue-button>\\n    <vue-button @click=\\\"getInsertEvent\\\">获取新增</vue-button>\\n  </template>\\n</vue-toolbar>\\n\\n<vue-xtable\\n  border\\n  show-footer\\n  show-overflow\\n  highlight-hover-row\\n  ref=\\\"xTable\\\"\\n  height=\\\"400\\\"\\n  class=\\\"editable-footer\\\"\\n  :footer-method=\\\"footerMethod\\\"\\n  :footer-cell-class-name=\\\"footerCellClassName\\\"\\n  :data=\\\"tableData\\\"\\n  :edit-config=\\\"{trigger: 'click', mode: 'row'}\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age1\\\" title=\\\"Age\\\" :edit-render=\\\"{name: 'input', immediate: true, events: {input: updateFooterEvent}}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"num6\\\" title=\\\"Num\\\" :edit-render=\\\"{name: 'input', immediate: true, events: {input: updateFooterEvent}}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"rate1\\\" title=\\\"Rate\\\" :edit-render=\\\"{name: 'input', immediate: true, events: {input: updateFooterEvent}}\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    let list = window.MOCK_DATA_LIST.slice(0, 20)\\n    this.tableData = list\\n  },\\n\\n  methods: {\\n    footerCellClassName ({ $rowIndex, column, columnIndex }) {\\n      if (columnIndex === 0) {\\n        if ($rowIndex === 0) {\\n          return 'col-blue'\\n        } else {\\n          return 'col-red'\\n        }\\n      }\\n    },\\n    // 在值发生改变时更新表尾合计\\n    updateFooterEvent (params) {\\n      let xTable = this.$refs.xTable\\n      xTable.updateFooter()\\n    },\\n    footerMethod ({ columns, data }) {\\n      return [\\n        columns.map((column, columnIndex) => {\\n          if (columnIndex === 0) {\\n            return '平均'\\n          }\\n          if (VueUtil.includes(['age1', 'rate1', 'num6'], column.property)) {\\n            debugger\\n            return VueUtil.mean(data.map(data => VueUtil.parseInt(data[column.property] || 0)))\\n          }\\n          return null\\n        }),\\n        columns.map((column, columnIndex) => {\\n          if (columnIndex === 0) {\\n            return '和值'\\n          }\\n          if (VueUtil.includes(['rate1', 'num6'], column.property)) {\\n            return VueUtil.sum(data.map( data => VueUtil.parseInt(data[column.property] || 0)))\\n          }\\n          return null\\n        })\\n      ]\\n    },\\n    insertEvent () {\\n      let record = {\\n        name: 'New name'\\n      }\\n      this.$refs.xTable.insert(record)\\n        .then(({ row }) => this.$refs.xTable.setActiveCell(row, 'age'))\\n    },\\n    getInsertEvent () {\\n      let insertRecords = this.$refs.xTable.getInsertRecords()\\n      this.$alert({ message: insertRecords.length })\\n    }\\n  }\\n})\\n</script>\\n\\n<style>\\n.editable-footer .vxe-footer--column.col-blue {\\n  background-color: #2db7f5;\\n  color: #fff;\\n}\\n.editable-footer .vxe-footer--column.col-red {\\n  background-color: red;\\n  color: #fff;\\n}\\n</style>\",\"template\":\"<div class=\\\"source\\\">    <vue-toolbar>\\n      <template v-slot:buttons>\\n        <vue-button @click=\\\"insertEvent\\\">新增</vue-button>\\n        <vue-button @click=\\\"getInsertEvent\\\">获取新增</vue-button>\\n      </template>\\n    </vue-toolbar>\\n\\n    <vue-xtable\\n      border\\n      show-footer\\n      show-overflow\\n      highlight-hover-row\\n      ref=\\\"xTable\\\"\\n      height=\\\"400\\\"\\n      class=\\\"editable-footer\\\"\\n      :footer-method=\\\"footerMethod\\\"\\n      :footer-cell-class-name=\\\"footerCellClassName\\\"\\n      :data=\\\"tableData\\\"\\n      :edit-config=\\\"{trigger: 'click', mode: 'row'}\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age1\\\" title=\\\"Age\\\" :edit-render=\\\"{name: 'input', immediate: true, events: {input: updateFooterEvent}}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"num6\\\" title=\\\"Num\\\" :edit-render=\\\"{name: 'input', immediate: true, events: {input: updateFooterEvent}}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"rate1\\\" title=\\\"Rate\\\" :edit-render=\\\"{name: 'input', immediate: true, events: {input: updateFooterEvent}}\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 20)\n    this.tableData = list\n  },\n\n  methods: {\n    footerCellClassName ({ $rowIndex, column, columnIndex }) {\n      if (columnIndex === 0) {\n        if ($rowIndex === 0) {\n          return 'col-blue'\n        } else {\n          return 'col-red'\n        }\n      }\n    },\n    // 在值发生改变时更新表尾合计\n    updateFooterEvent (params) {\n      let xTable = this.$refs.xTable\n      xTable.updateFooter()\n    },\n    footerMethod ({ columns, data }) {\n      return [\n        columns.map((column, columnIndex) => {\n          if (columnIndex === 0) {\n            return '平均'\n          }\n          if (VueUtil.includes(['age1', 'rate1', 'num6'], column.property)) {\n            debugger\n            return VueUtil.mean(data.map(data => VueUtil.parseInt(data[column.property] || 0)))\n          }\n          return null\n        }),\n        columns.map((column, columnIndex) => {\n          if (columnIndex === 0) {\n            return '和值'\n          }\n          if (VueUtil.includes(['rate1', 'num6'], column.property)) {\n            return VueUtil.sum(data.map( data => VueUtil.parseInt(data[column.property] || 0)))\n          }\n          return null\n        })\n      ]\n    },\n    insertEvent () {\n      let record = {\n        name: 'New name'\n      }\n      this.$refs.xTable.insert(record)\n        .then(({ row }) => this.$refs.xTable.setActiveCell(row, 'age'))\n    },\n    getInsertEvent () {\n      let insertRecords = this.$refs.xTable.getInsertRecords()\n      this.$alert({ message: insertRecords.length })\n    }\n  }\n}}],\"styles\":\".editable-footer .vxe-footer--column.col-blue {\\n  background-color: #2db7f5;\\n  color: #fff;\\n}\\n.editable-footer .vxe-footer--column.col-red {\\n  background-color: red;\\n  color: #fff;\\n}\"}","export default {\"path\":\"/XtableDemo/edit/Insert\",\"name\":\"XtableDemo.edit.Insert\",\"head\":{\"label\":\"XtableDemo.edit.Insert.label\",\"description\":\"XtableDemo.edit.Insert.description\"},\"samples\":[{\"id\":\"XtableDemo.edit.Insert.sample1\",\"label\":\"XtableDemo.edit.Insert.sample1.label\",\"description\":\"XtableDemo.edit.Insert.sample1.description\",\"code\":\"<vue-toolbar>\\n  <template v-slot:buttons>\\n    <vue-button @click=\\\"insertEvent()\\\">在第1行插入</vue-button>\\n    <vue-button @click=\\\"insertEvent(tableData[2])\\\">在第3行插入并激活 Sex 单元格</vue-button>\\n    <vue-button @click=\\\"insertEvent(-1)\\\">在最后行插入</vue-button>\\n    <vue-button @click=\\\"getInsertEvent\\\">获取新增</vue-button>\\n  </template>\\n</vue-toolbar>\\n\\n<vue-xtable\\n  border\\n  show-overflow\\n  ref=\\\"xTable\\\"\\n  max-height=\\\"400\\\"\\n  :data=\\\"tableData\\\"\\n  :edit-config=\\\"{trigger: 'click', mode: 'cell'}\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable :edit-render=\\\"{name: 'input', defaultValue: '默认的名字'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" :edit-render=\\\"{name: 'select', options: sexList}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" sortable :edit-render=\\\"{name: 'input', defaultValue: 18}\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n      sexList: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 4)\\n    this.findSexList()\\n  },\\n\\n  methods: {\\n    findSexList () {\\n      return Vue.http.get('/api/conf/sex/list').then(data => {\\n        this.sexList = data.data\\n      })\\n    },\\n    insertEvent (row) {\\n      let record = {\\n        sex: '1'\\n      }\\n      this.$refs.xTable.insertAt(record, row)\\n        .then(({ row }) => this.$refs.xTable.setActiveCell(row, 'sex'))\\n    },\\n    getInsertEvent () {\\n      let insertRecords = this.$refs.xTable.getInsertRecords()\\n      this.$alert({ message: insertRecords.length })\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-toolbar>\\n      <template v-slot:buttons>\\n        <vue-button @click=\\\"insertEvent()\\\">在第1行插入</vue-button>\\n        <vue-button @click=\\\"insertEvent(tableData[2])\\\">在第3行插入并激活 Sex 单元格</vue-button>\\n        <vue-button @click=\\\"insertEvent(-1)\\\">在最后行插入</vue-button>\\n        <vue-button @click=\\\"getInsertEvent\\\">获取新增</vue-button>\\n      </template>\\n    </vue-toolbar>\\n\\n    <vue-xtable\\n      border\\n      show-overflow\\n      ref=\\\"xTable\\\"\\n      max-height=\\\"400\\\"\\n      :data=\\\"tableData\\\"\\n      :edit-config=\\\"{trigger: 'click', mode: 'cell'}\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable :edit-render=\\\"{name: 'input', defaultValue: '默认的名字'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" :edit-render=\\\"{name: 'select', options: sexList}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" sortable :edit-render=\\\"{name: 'input', defaultValue: 18}\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n      sexList: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 4)\n    this.findSexList()\n  },\n\n  methods: {\n    findSexList () {\n      return Vue.http.get('/api/conf/sex/list').then(data => {\n        this.sexList = data.data\n      })\n    },\n    insertEvent (row) {\n      let record = {\n        sex: '1'\n      }\n      this.$refs.xTable.insertAt(record, row)\n        .then(({ row }) => this.$refs.xTable.setActiveCell(row, 'sex'))\n    },\n    getInsertEvent () {\n      let insertRecords = this.$refs.xTable.getInsertRecords()\n      this.$alert({ message: insertRecords.length })\n    }\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/edit/Keyboard\",\"name\":\"XtableDemo.edit.Keyboard\",\"head\":{\"label\":\"XtableDemo.edit.Keyboard.label\",\"description\":\"XtableDemo.edit.Keyboard.description\"},\"samples\":[{\"id\":\"XtableDemo.edit.Keyboard.sample1\",\"label\":\"XtableDemo.edit.Keyboard.sample1.label\",\"description\":\"XtableDemo.edit.Keyboard.sample1.description\",\"code\":\"<vue-xtable\\n  border\\n  show-overflow\\n  height=\\\"500\\\"\\n  :data=\\\"tableData\\\"\\n  :mouse-config=\\\"{selected: true}\\\"\\n  :keyboard-config=\\\"{isArrow: true, isDel: true, isTab: true, isEdit: true}\\\"\\n  :edit-config=\\\"{trigger: 'dblclick', mode: 'cell'}\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column type=\\\"checkbox\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    let list = window.MOCK_DATA_LIST.slice(0, 50)\\n    this.tableData = list\\n  },\\n\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      show-overflow\\n      height=\\\"500\\\"\\n      :data=\\\"tableData\\\"\\n      :mouse-config=\\\"{selected: true}\\\"\\n      :keyboard-config=\\\"{isArrow: true, isDel: true, isTab: true, isEdit: true}\\\"\\n      :edit-config=\\\"{trigger: 'dblclick', mode: 'cell'}\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column type=\\\"checkbox\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 50)\n    this.tableData = list\n  },\n\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/edit/Manual\",\"name\":\"XtableDemo.edit.Manual\",\"head\":{\"label\":\"XtableDemo.edit.Manual.label\",\"description\":\"XtableDemo.edit.Manual.description\"},\"samples\":[{\"id\":\"XtableDemo.edit.Manual.sample1\",\"label\":\"XtableDemo.edit.Manual.sample1.label\",\"description\":\"XtableDemo.edit.Manual.sample1.description\",\"code\":\"<vue-xtable\\n  ref=\\\"xTable\\\"\\n  border\\n  resizable\\n  show-overflow\\n  :data=\\\"tableData\\\"\\n  :edit-config=\\\"{trigger: 'manual', mode: 'row'}\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"role\\\" title=\\\"Role\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" :edit-render=\\\"{name: 'select', options: sexList}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"num6\\\" title=\\\"Number\\\" :edit-render=\\\"{name: 'input', attrs: {type: 'number'}}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"date12\\\" title=\\\"Date\\\" :edit-render=\\\"{name: 'input', attrs: {type: 'date'}}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column title=\\\"操作\\\">\\n    <template v-slot=\\\"scope\\\">\\n      <template v-if=\\\"$refs.xTable.isActiveByRow(scope.row)\\\">\\n        <vue-button @click=\\\"saveRowEvent(scope.row)\\\">保存</vue-button>\\n        <vue-button @click=\\\"cancelRowEvent(scope.row)\\\">取消</vue-button>\\n      </template>\\n      <template v-else>\\n        <vue-button @click=\\\"editRowEvent(scope.row)\\\">编辑</vue-button>\\n      </template>\\n    </template>\\n  </vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n      sexList: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\\n    this.findSexList()\\n  },\\n\\n  methods: {\\n    findSexList () {\\n      return Vue.http.get('/api/conf/sex/list').then(data => {\\n        this.sexList = data.data;\\n      })\\n    },\\n    editRowEvent (row) {\\n      this.$refs.xTable.setActiveRow(row)\\n    },\\n    saveRowEvent (row) {\\n      this.$refs.xTable.clearActived().then(() => {\\n        this.$alert({ message: 'success' })\\n      })\\n    },\\n    cancelRowEvent (row) {\\n      this.$refs.xTable.clearActived()\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      ref=\\\"xTable\\\"\\n      border\\n      resizable\\n      show-overflow\\n      :data=\\\"tableData\\\"\\n      :edit-config=\\\"{trigger: 'manual', mode: 'row'}\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"role\\\" title=\\\"Role\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" :edit-render=\\\"{name: 'select', options: sexList}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"num6\\\" title=\\\"Number\\\" :edit-render=\\\"{name: 'input', attrs: {type: 'number'}}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"date12\\\" title=\\\"Date\\\" :edit-render=\\\"{name: 'input', attrs: {type: 'date'}}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column title=\\\"操作\\\">\\n        <template v-slot=\\\"scope\\\">\\n          <template v-if=\\\"$refs.xTable.isActiveByRow(scope.row)\\\">\\n            <vue-button @click=\\\"saveRowEvent(scope.row)\\\">保存</vue-button>\\n            <vue-button @click=\\\"cancelRowEvent(scope.row)\\\">取消</vue-button>\\n          </template>\\n          <template v-else>\\n            <vue-button @click=\\\"editRowEvent(scope.row)\\\">编辑</vue-button>\\n          </template>\\n        </template>\\n      </vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n      sexList: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\n    this.findSexList()\n  },\n\n  methods: {\n    findSexList () {\n      return Vue.http.get('/api/conf/sex/list').then(data => {\n        this.sexList = data.data;\n      })\n    },\n    editRowEvent (row) {\n      this.$refs.xTable.setActiveRow(row)\n    },\n    saveRowEvent (row) {\n      this.$refs.xTable.clearActived().then(() => {\n        this.$alert({ message: 'success' })\n      })\n    },\n    cancelRowEvent (row) {\n      this.$refs.xTable.clearActived()\n    }\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/edit/Menu\",\"name\":\"XtableDemo.edit.Menu\",\"head\":{\"label\":\"XtableDemo.edit.Menu.label\",\"description\":\"XtableDemo.edit.Menu.description\"},\"samples\":[{\"id\":\"XtableDemo.edit.Menu.sample1\",\"label\":\"XtableDemo.edit.Menu.sample1.label\",\"description\":\"XtableDemo.edit.Menu.sample1.description\",\"code\":\"<vue-toolbar>\\n  <template v-slot:buttons>\\n    <vue-button @click=\\\"getInsertEvent\\\">获取新增</vue-button>\\n    <vue-button @click=\\\"getRemoveEvent\\\">获取删除</vue-button>\\n    <vue-button @click=\\\"getUpdateEvent\\\">获取修改</vue-button>\\n  </template>\\n</vue-toolbar>\\n\\n<vue-xtable\\n  border\\n  resizable\\n  show-overflow\\n  ref=\\\"xTable\\\"\\n  height=\\\"400\\\"\\n  :loading=\\\"loading\\\"\\n  :data=\\\"tableData\\\"\\n  :context-menu=\\\"{header: {options: headerMenus}, body: {options: bodyMenus}, visibleMethod:visibleMethod}\\\"\\n  :edit-config=\\\"{trigger: 'click', mode: 'row', showStatus: true}\\\"\\n  @context-menu-click=\\\"contextMenuClickEvent\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      loading: false,\\n      tableData: [],\\n      headerMenus: [\\n        [\\n          {\\n            code: 'hideColumn',\\n            name: '隐藏列',\\n            disabled: false\\n          },\\n          {\\n            code: 'showAllColumn',\\n            name: '取消所有隐藏列',\\n            disabled: false\\n          }\\n        ]\\n      ],\\n      bodyMenus: [\\n        [\\n          {\\n            code: 'copy',\\n            name: '复制',\\n            prefixIcon: 'fa fa-copy',\\n            disabled: false\\n          },\\n          {\\n            code: 'reload',\\n            name: '刷新',\\n            disabled: false\\n          },\\n          {\\n            code: 'insertAt',\\n            name: '插入',\\n            disabled: false\\n          },\\n          {\\n            code: 'remove',\\n            name: '删除',\\n            disabled: false\\n          },\\n          {\\n            code: 'save',\\n            name: '保存',\\n            prefixIcon: 'fa fa-save',\\n            disabled: false\\n          }\\n        ]\\n      ],\\n\\n    }\\n  },\\n  created () {\\n    this.findList()\\n  },\\n\\n  methods: {\\n    findList () {\\n      this.loading = true\\n      this.tableData = []\\n      setTimeout(() => {\\n        this.tableData = window.MOCK_DATA_LIST.slice(0, 5)\\n        this.loading = false\\n      }, 500)\\n    },\\n    insertEvent (row, column) {\\n      let xTable = this.$refs.xTable\\n      xTable.insertAt(null, row || -1)\\n        .then(({ row }) => xTable.setActiveCell(row, column ? column.property : 'name'))\\n    },\\n    visibleMethod ({ options, column }) {\\n      let isDisabled = !column\\n      options.forEach(list => {\\n        list.forEach(item => {\\n          item.disabled = isDisabled\\n        })\\n      })\\n      return true\\n    },\\n    contextMenuClickEvent ({ menu, row, column }) {\\n      let xTable = this.$refs.xTable\\n      switch (menu.code) {\\n        case 'hideColumn':\\n          xTable.hideColumn(column)\\n          break\\n        case 'showAllColumn':\\n          xTable.resetCustoms()\\n          break\\n        case 'copy':\\n          if (VueUtil.clipboard.copy(row[column.property])) {\\n            this.$notify.success({ message:'已复制到剪贴板！'});\\n          }\\n          break\\n        case 'reload':\\n          this.findList()\\n          break\\n        case 'insertAt':\\n          this.insertEvent(row, column)\\n          break\\n        case 'remove':\\n          xTable.remove(row)\\n          break\\n        case 'save':\\n          this.$notify.success({ message:'保存成功'});\\n          this.findList()\\n          break\\n      }\\n    },\\n    getInsertEvent () {\\n      let insertRecords = this.$refs.xTable.getInsertRecords()\\n      this.$alert({ message: insertRecords.length })\\n    },\\n    getRemoveEvent () {\\n      let removeRecords = this.$refs.xTable.getRemoveRecords()\\n      this.$alert({ message: removeRecords.length })\\n    },\\n    getUpdateEvent () {\\n      let updateRecords = this.$refs.xTable.getUpdateRecords()\\n      this.$alert({ message: updateRecords.length })\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-toolbar>\\n      <template v-slot:buttons>\\n        <vue-button @click=\\\"getInsertEvent\\\">获取新增</vue-button>\\n        <vue-button @click=\\\"getRemoveEvent\\\">获取删除</vue-button>\\n        <vue-button @click=\\\"getUpdateEvent\\\">获取修改</vue-button>\\n      </template>\\n    </vue-toolbar>\\n\\n    <vue-xtable\\n      border\\n      resizable\\n      show-overflow\\n      ref=\\\"xTable\\\"\\n      height=\\\"400\\\"\\n      :loading=\\\"loading\\\"\\n      :data=\\\"tableData\\\"\\n      :context-menu=\\\"{header: {options: headerMenus}, body: {options: bodyMenus}, visibleMethod:visibleMethod}\\\"\\n      :edit-config=\\\"{trigger: 'click', mode: 'row', showStatus: true}\\\"\\n      @context-menu-click=\\\"contextMenuClickEvent\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      loading: false,\n      tableData: [],\n      headerMenus: [\n        [\n          {\n            code: 'hideColumn',\n            name: '隐藏列',\n            disabled: false\n          },\n          {\n            code: 'showAllColumn',\n            name: '取消所有隐藏列',\n            disabled: false\n          }\n        ]\n      ],\n      bodyMenus: [\n        [\n          {\n            code: 'copy',\n            name: '复制',\n            prefixIcon: 'fa fa-copy',\n            disabled: false\n          },\n          {\n            code: 'reload',\n            name: '刷新',\n            disabled: false\n          },\n          {\n            code: 'insertAt',\n            name: '插入',\n            disabled: false\n          },\n          {\n            code: 'remove',\n            name: '删除',\n            disabled: false\n          },\n          {\n            code: 'save',\n            name: '保存',\n            prefixIcon: 'fa fa-save',\n            disabled: false\n          }\n        ]\n      ],\n\n    }\n  },\n  created () {\n    this.findList()\n  },\n\n  methods: {\n    findList () {\n      this.loading = true\n      this.tableData = []\n      setTimeout(() => {\n        this.tableData = window.MOCK_DATA_LIST.slice(0, 5)\n        this.loading = false\n      }, 500)\n    },\n    insertEvent (row, column) {\n      let xTable = this.$refs.xTable\n      xTable.insertAt(null, row || -1)\n        .then(({ row }) => xTable.setActiveCell(row, column ? column.property : 'name'))\n    },\n    visibleMethod ({ options, column }) {\n      let isDisabled = !column\n      options.forEach(list => {\n        list.forEach(item => {\n          item.disabled = isDisabled\n        })\n      })\n      return true\n    },\n    contextMenuClickEvent ({ menu, row, column }) {\n      let xTable = this.$refs.xTable\n      switch (menu.code) {\n        case 'hideColumn':\n          xTable.hideColumn(column)\n          break\n        case 'showAllColumn':\n          xTable.resetCustoms()\n          break\n        case 'copy':\n          if (VueUtil.clipboard.copy(row[column.property])) {\n            this.$notify.success({ message:'已复制到剪贴板！'});\n          }\n          break\n        case 'reload':\n          this.findList()\n          break\n        case 'insertAt':\n          this.insertEvent(row, column)\n          break\n        case 'remove':\n          xTable.remove(row)\n          break\n        case 'save':\n          this.$notify.success({ message:'保存成功'});\n          this.findList()\n          break\n      }\n    },\n    getInsertEvent () {\n      let insertRecords = this.$refs.xTable.getInsertRecords()\n      this.$alert({ message: insertRecords.length })\n    },\n    getRemoveEvent () {\n      let removeRecords = this.$refs.xTable.getRemoveRecords()\n      this.$alert({ message: removeRecords.length })\n    },\n    getUpdateEvent () {\n      let updateRecords = this.$refs.xTable.getUpdateRecords()\n      this.$alert({ message: updateRecords.length })\n    }\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/edit/Remove\",\"name\":\"XtableDemo.edit.Remove\",\"head\":{\"label\":\"XtableDemo.edit.Remove.label\",\"description\":\"XtableDemo.edit.Remove.description\"},\"samples\":[{\"id\":\"XtableDemo.edit.Remove.sample1\",\"label\":\"XtableDemo.edit.Remove.sample1.label\",\"description\":\"XtableDemo.edit.Remove.sample1.description\",\"code\":\"<vue-toolbar>\\n  <template v-slot:buttons>\\n    <vue-button @click=\\\"insertEvent()\\\">在第1行插入</vue-button>\\n    <vue-button @click=\\\"$refs.xTable.remove(tableData[1])\\\">删除第2行</vue-button>\\n    <vue-button @click=\\\"$refs.xTable.removeSelecteds()\\\">删除选中</vue-button>\\n    <vue-button @click=\\\"getRemoveEvent\\\">获取删除</vue-button>\\n    <vue-button @click=\\\"getSelectionEvent\\\">获取选中</vue-button>\\n  </template>\\n</vue-toolbar>\\n\\n<vue-xtable\\n  ref=\\\"xTable\\\"\\n  border\\n  show-overflow\\n  :data=\\\"tableData\\\"\\n  :edit-config=\\\"{trigger: 'click', mode: 'cell'}\\\">\\n  <vue-xtable-column type=\\\"checkbox\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    let list = window.MOCK_DATA_LIST.slice(0, 6)\\n    this.tableData = list\\n  },\\n\\n  methods: {\\n    insertEvent (row) {\\n      let record = {\\n        sex: '1'\\n      }\\n      this.$refs.xTable.insertAt(record, row)\\n        .then(({ row }) => this.$refs.xTable.setActiveCell(row, 'sex'))\\n    },\\n    getRemoveEvent () {\\n      let removeRecords = this.$refs.xTable.getRemoveRecords()\\n      this.$alert({ message: removeRecords.length })\\n    },\\n    getSelectionEvent () {\\n      let removeRecords = this.$refs.xTable.getSelectRecords()\\n      this.$alert({ message: removeRecords.length })\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-toolbar>\\n      <template v-slot:buttons>\\n        <vue-button @click=\\\"insertEvent()\\\">在第1行插入</vue-button>\\n        <vue-button @click=\\\"$refs.xTable.remove(tableData[1])\\\">删除第2行</vue-button>\\n        <vue-button @click=\\\"$refs.xTable.removeSelecteds()\\\">删除选中</vue-button>\\n        <vue-button @click=\\\"getRemoveEvent\\\">获取删除</vue-button>\\n        <vue-button @click=\\\"getSelectionEvent\\\">获取选中</vue-button>\\n      </template>\\n    </vue-toolbar>\\n\\n    <vue-xtable\\n      ref=\\\"xTable\\\"\\n      border\\n      show-overflow\\n      :data=\\\"tableData\\\"\\n      :edit-config=\\\"{trigger: 'click', mode: 'cell'}\\\">\\n      <vue-xtable-column type=\\\"checkbox\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 6)\n    this.tableData = list\n  },\n\n  methods: {\n    insertEvent (row) {\n      let record = {\n        sex: '1'\n      }\n      this.$refs.xTable.insertAt(record, row)\n        .then(({ row }) => this.$refs.xTable.setActiveCell(row, 'sex'))\n    },\n    getRemoveEvent () {\n      let removeRecords = this.$refs.xTable.getRemoveRecords()\n      this.$alert({ message: removeRecords.length })\n    },\n    getSelectionEvent () {\n      let removeRecords = this.$refs.xTable.getSelectRecords()\n      this.$alert({ message: removeRecords.length })\n    }\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/edit/Revert\",\"name\":\"XtableDemo.edit.Revert\",\"head\":{\"label\":\"XtableDemo.edit.Revert.label\",\"description\":\"XtableDemo.edit.Revert.description\"},\"samples\":[{\"id\":\"XtableDemo.edit.Revert.sample1\",\"label\":\"XtableDemo.edit.Revert.sample1.label\",\"description\":\"XtableDemo.edit.Revert.sample1.description\",\"code\":\"<vue-toolbar>\\n  <template v-slot:buttons>\\n    <vue-button @click=\\\"$refs.xTable.revertData()\\\">还原全部</vue-button>\\n    <vue-button @click=\\\"$refs.xTable.removeSelecteds()\\\">删除选中</vue-button>\\n  </template>\\n</vue-toolbar>\\n\\n<vue-xtable\\n  ref=\\\"xTable\\\"\\n  border\\n  show-overflow\\n  :data=\\\"tableData\\\"\\n  :edit-config=\\\"{trigger: 'click', mode: 'cell', showStatus: true}\\\">\\n  <vue-xtable-column type=\\\"checkbox\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column title=\\\"操作\\\">\\n    <template v-slot=\\\"scope\\\">\\n      <vue-button @click=\\\"$refs.xTable.revertData(scope.row)\\\">还原</vue-button>\\n    </template>\\n  </vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    let list = window.MOCK_DATA_LIST.slice(0, 6)\\n    this.tableData = list\\n  },\\n\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-toolbar>\\n      <template v-slot:buttons>\\n        <vue-button @click=\\\"$refs.xTable.revertData()\\\">还原全部</vue-button>\\n        <vue-button @click=\\\"$refs.xTable.removeSelecteds()\\\">删除选中</vue-button>\\n      </template>\\n    </vue-toolbar>\\n\\n    <vue-xtable\\n      ref=\\\"xTable\\\"\\n      border\\n      show-overflow\\n      :data=\\\"tableData\\\"\\n      :edit-config=\\\"{trigger: 'click', mode: 'cell', showStatus: true}\\\">\\n      <vue-xtable-column type=\\\"checkbox\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column title=\\\"操作\\\">\\n        <template v-slot=\\\"scope\\\">\\n          <vue-button @click=\\\"$refs.xTable.revertData(scope.row)\\\">还原</vue-button>\\n        </template>\\n      </vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 6)\n    this.tableData = list\n  },\n\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/edit/RowDisable\",\"name\":\"XtableDemo.edit.RowDisable\",\"head\":{\"label\":\"XtableDemo.edit.RowDisable.label\",\"description\":\"XtableDemo.edit.RowDisable.description\"},\"samples\":[{\"id\":\"XtableDemo.edit.RowDisable.sample1\",\"label\":\"XtableDemo.edit.RowDisable.sample1.label\",\"description\":\"XtableDemo.edit.RowDisable.sample1.description\",\"code\":\"<vue-xtable\\n  border\\n  show-overflow\\n  height=\\\"400\\\"\\n  :data=\\\"tableData\\\"\\n  :edit-config=\\\"{trigger: 'click', mode: 'row', activeMethod: activeRowMethod}\\\"\\n  @edit-disabled=\\\"editDisabledEvent\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"date12\\\" title=\\\"Date\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 20)\\n  },\\n\\n  methods: {\\n    activeRowMethod ({ row, rowIndex }) {\\n      return rowIndex !== 1\\n    },\\n    editDisabledEvent ({ row, column }) {\\n      this.$alert({ message: '禁止编辑' })\\n    },\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      show-overflow\\n      height=\\\"400\\\"\\n      :data=\\\"tableData\\\"\\n      :edit-config=\\\"{trigger: 'click', mode: 'row', activeMethod: activeRowMethod}\\\"\\n      @edit-disabled=\\\"editDisabledEvent\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"date12\\\" title=\\\"Date\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 20)\n  },\n\n  methods: {\n    activeRowMethod ({ row, rowIndex }) {\n      return rowIndex !== 1\n    },\n    editDisabledEvent ({ row, column }) {\n      this.$alert({ message: '禁止编辑' })\n    },\n  }\n}},{\"id\":\"XtableDemo.edit.RowDisable.sample2\",\"label\":\"XtableDemo.edit.RowDisable.sample2.label\",\"description\":\"XtableDemo.edit.RowDisable.sample2.description\",\"code\":\"<vue-xtable\\n  border\\n  show-overflow\\n  height=\\\"400\\\"\\n  :data=\\\"tableData\\\"\\n  :edit-config=\\\"{trigger: 'click', mode: 'row'}\\\"\\n  @edit-actived=\\\"editActivedEvent\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input', attrs: {disabled: isNameDisabled}}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" :edit-render=\\\"{name: 'input', attrs: {disabled: isAgeDisabled}}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"date12\\\" title=\\\"Date\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      isNameDisabled: false,\\n      isAgeDisabled: false,\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 20)\\n  },\\n\\n  methods: {\\n    editActivedEvent ({ row, rowIndex }) {\\n      // name 为 'x' 开头的列禁止编辑\\n      this.isNameDisabled = (row.name || '').indexOf('a') === 0\\n      // age 小于 27 的列禁止编辑\\n      this.isAgeDisabled = row.age < 27\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      show-overflow\\n      height=\\\"400\\\"\\n      :data=\\\"tableData\\\"\\n      :edit-config=\\\"{trigger: 'click', mode: 'row'}\\\"\\n      @edit-actived=\\\"editActivedEvent\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input', attrs: {disabled: isNameDisabled}}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" :edit-render=\\\"{name: 'input', attrs: {disabled: isAgeDisabled}}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"date12\\\" title=\\\"Date\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      isNameDisabled: false,\n      isAgeDisabled: false,\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 20)\n  },\n\n  methods: {\n    editActivedEvent ({ row, rowIndex }) {\n      // name 为 'x' 开头的列禁止编辑\n      this.isNameDisabled = (row.name || '').indexOf('a') === 0\n      // age 小于 27 的列禁止编辑\n      this.isAgeDisabled = row.age < 27\n    }\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/edit/RowValid\",\"name\":\"XtableDemo.edit.RowValid\",\"head\":{\"label\":\"XtableDemo.edit.RowValid.label\",\"description\":\"XtableDemo.edit.RowValid.description\"},\"samples\":[{\"id\":\"XtableDemo.edit.RowValid.sample1\",\"label\":\"XtableDemo.edit.RowValid.sample1.label\",\"description\":\"XtableDemo.edit.RowValid.sample1.description\",\"code\":\"<vue-toolbar>\\n  <template v-slot:buttons>\\n    <vue-button @click=\\\"insertEvent\\\">新增</vue-button>\\n    <vue-button @click=\\\"$refs.xTable.removeSelecteds()\\\">删除选中</vue-button>\\n    <vue-button @click=\\\"validEvent\\\">校验</vue-button>\\n    <vue-button @click=\\\"fullValidEvent\\\">完整校验</vue-button>\\n    <vue-button @click=\\\"selectValidEvent\\\">选中校验</vue-button>\\n    <vue-button @click=\\\"getSelectEvent\\\">获取选中</vue-button>\\n    <vue-button @click=\\\"getInsertEvent\\\">获取新增</vue-button>\\n    <vue-button @click=\\\"getRemoveEvent\\\">获取删除</vue-button>\\n    <vue-button @click=\\\"getUpdateEvent\\\">获取修改</vue-button>\\n  </template>\\n</vue-toolbar>\\n\\n<vue-xtable\\n  ref=\\\"xTable\\\"\\n  border\\n  show-overflow\\n  :data=\\\"tableData\\\"\\n  :edit-rules=\\\"validRules\\\"\\n  :edit-config=\\\"{trigger: 'click', mode: 'row', showStatus: true}\\\">\\n  <vue-xtable-column type=\\\"checkbox\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n      validRules: {\\n        name: [\\n          { required: true, message: '名称必须填写' },\\n          { min: 3, max: 50, message: '名称长度在 3 到 50 个字符' }\\n        ],\\n        sex: [\\n          { required: true, message: '性别必须填写' }\\n        ]\\n      },\\n\\n    }\\n  },\\n  created () {\\n    let list = window.MOCK_DATA_LIST.slice(0, 6)\\n    this.tableData = list\\n  },\\n\\n  methods: {\\n    validEvent () {\\n      this.$refs.xTable.validate(valid => {\\n        if (valid) {\\n          this.$notify.success({ message:'校验成功！'});\\n        } else {\\n          this.$notify.error({ message:'校验不通过！'});\\n        }\\n      })\\n    },\\n    fullValidEvent () {\\n      this.$refs.xTable.fullValidate((valid, errMap) => {\\n        if (valid) {\\n          this.$notify.success({ message:'校验成功！'});\\n        } else {\\n          let msgList = []\\n          Object.values(errMap).forEach(errList => {\\n            errList.forEach(params => {\\n              let { rowIndex, column, rules } = params\\n              rules.forEach(rule => {\\n                msgList.push(`第 ${rowIndex} 行 ${column.title} 校验错误：${rule.message}`)\\n              })\\n            })\\n          })\\n\\n          var h = this.$createElement;\\n          this.$alert({\\n            type: \\\"error\\\",\\n            message: h('div',[msgList.map(function (msg) {\\n              return h(\\\"div\\\", [msg]);\\n            })])\\n          });\\n        }\\n      })\\n    },\\n    selectValidEvent () {\\n      let selectRecords = this.$refs.xTable.getSelectRecords()\\n      if (selectRecords.length > 0) {\\n        this.$refs.xTable.validate(selectRecords, valid => {\\n          if (valid) {\\n            this.$notify.success({ message:'校验成功！'});\\n          } else {\\n            this.$notify.error({ message:'校验不通过！'});\\n          }\\n        })\\n      } else {\\n        this.$notify.warning({ message:'未选中数据！'});\\n      }\\n    },\\n    insertEvent () {\\n      this.$refs.xTable.insert().then(({ row }) => {\\n        // 插入一条数据并触发校验\\n        this.$refs.xTable.validate(row, valid => {\\n          if (valid) {\\n\\n          }\\n        })\\n      })\\n    },\\n    getSelectEvent () {\\n      let selectRecords = this.$refs.xTable.getSelectRecords()\\n      this.$alert({ message: selectRecords.length })\\n    },\\n    getInsertEvent () {\\n      let insertRecords = this.$refs.xTable.getInsertRecords()\\n      this.$alert({ message: insertRecords.length })\\n    },\\n    getRemoveEvent () {\\n      let removeRecords = this.$refs.xTable.getRemoveRecords()\\n      this.$alert({ message: removeRecords.length })\\n    },\\n    getUpdateEvent () {\\n      let updateRecords = this.$refs.xTable.getUpdateRecords()\\n      this.$alert({ message: updateRecords.length })\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-toolbar>\\n      <template v-slot:buttons>\\n        <vue-button @click=\\\"insertEvent\\\">新增</vue-button>\\n        <vue-button @click=\\\"$refs.xTable.removeSelecteds()\\\">删除选中</vue-button>\\n        <vue-button @click=\\\"validEvent\\\">校验</vue-button>\\n        <vue-button @click=\\\"fullValidEvent\\\">完整校验</vue-button>\\n        <vue-button @click=\\\"selectValidEvent\\\">选中校验</vue-button>\\n        <vue-button @click=\\\"getSelectEvent\\\">获取选中</vue-button>\\n        <vue-button @click=\\\"getInsertEvent\\\">获取新增</vue-button>\\n        <vue-button @click=\\\"getRemoveEvent\\\">获取删除</vue-button>\\n        <vue-button @click=\\\"getUpdateEvent\\\">获取修改</vue-button>\\n      </template>\\n    </vue-toolbar>\\n\\n    <vue-xtable\\n      ref=\\\"xTable\\\"\\n      border\\n      show-overflow\\n      :data=\\\"tableData\\\"\\n      :edit-rules=\\\"validRules\\\"\\n      :edit-config=\\\"{trigger: 'click', mode: 'row', showStatus: true}\\\">\\n      <vue-xtable-column type=\\\"checkbox\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n      validRules: {\n        name: [\n          { required: true, message: '名称必须填写' },\n          { min: 3, max: 50, message: '名称长度在 3 到 50 个字符' }\n        ],\n        sex: [\n          { required: true, message: '性别必须填写' }\n        ]\n      },\n\n    }\n  },\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 6)\n    this.tableData = list\n  },\n\n  methods: {\n    validEvent () {\n      this.$refs.xTable.validate(valid => {\n        if (valid) {\n          this.$notify.success({ message:'校验成功！'});\n        } else {\n          this.$notify.error({ message:'校验不通过！'});\n        }\n      })\n    },\n    fullValidEvent () {\n      this.$refs.xTable.fullValidate((valid, errMap) => {\n        if (valid) {\n          this.$notify.success({ message:'校验成功！'});\n        } else {\n          let msgList = []\n          Object.values(errMap).forEach(errList => {\n            errList.forEach(params => {\n              let { rowIndex, column, rules } = params\n              rules.forEach(rule => {\n                msgList.push(`第 ${rowIndex} 行 ${column.title} 校验错误：${rule.message}`)\n              })\n            })\n          })\n\n          var h = this.$createElement;\n          this.$alert({\n            type: \"error\",\n            message: h('div',[msgList.map(function (msg) {\n              return h(\"div\", [msg]);\n            })])\n          });\n        }\n      })\n    },\n    selectValidEvent () {\n      let selectRecords = this.$refs.xTable.getSelectRecords()\n      if (selectRecords.length > 0) {\n        this.$refs.xTable.validate(selectRecords, valid => {\n          if (valid) {\n            this.$notify.success({ message:'校验成功！'});\n          } else {\n            this.$notify.error({ message:'校验不通过！'});\n          }\n        })\n      } else {\n        this.$notify.warning({ message:'未选中数据！'});\n      }\n    },\n    insertEvent () {\n      this.$refs.xTable.insert().then(({ row }) => {\n        // 插入一条数据并触发校验\n        this.$refs.xTable.validate(row, valid => {\n          if (valid) {\n\n          }\n        })\n      })\n    },\n    getSelectEvent () {\n      let selectRecords = this.$refs.xTable.getSelectRecords()\n      this.$alert({ message: selectRecords.length })\n    },\n    getInsertEvent () {\n      let insertRecords = this.$refs.xTable.getInsertRecords()\n      this.$alert({ message: insertRecords.length })\n    },\n    getRemoveEvent () {\n      let removeRecords = this.$refs.xTable.getRemoveRecords()\n      this.$alert({ message: removeRecords.length })\n    },\n    getUpdateEvent () {\n      let updateRecords = this.$refs.xTable.getUpdateRecords()\n      this.$alert({ message: updateRecords.length })\n    }\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/edit/Select\",\"name\":\"XtableDemo.edit.Select\",\"head\":{\"label\":\"XtableDemo.edit.Select.label\",\"description\":\"XtableDemo.edit.Select.description\"},\"samples\":[{\"id\":\"XtableDemo.edit.Select.sample1\",\"label\":\"XtableDemo.edit.Select.sample1.label\",\"description\":\"XtableDemo.edit.Select.sample1.description\",\"code\":\"<vue-xtable\\n  border\\n  resizable\\n  show-overflow\\n  :data=\\\"tableData\\\"\\n  :edit-config=\\\"{trigger: 'click', mode: 'cell'}\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input', autoselect: true}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex5\\\" title=\\\"Sex\\\" :edit-render=\\\"{name: 'select', optionGroups: sexGriupList}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"date13\\\" title=\\\"Date\\\" :edit-render=\\\"{name: 'input', attrs: {type: 'date'}, autoselect: true}\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n      sexGriupList: [\\n        {\\n          label: '第一分组',\\n          options: [\\n            {\\n              value: '1',\\n              label: '男'\\n            }\\n          ]\\n        },\\n        {\\n          label: '第二分组',\\n          options: [\\n            {\\n              value: '0',\\n              label: '女'\\n            }\\n          ]\\n        },\\n        {\\n          label: '其他',\\n          options: [\\n            {\\n              value: '',\\n              label: '无'\\n            }\\n          ]\\n        }\\n      ],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\\n  },\\n\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      resizable\\n      show-overflow\\n      :data=\\\"tableData\\\"\\n      :edit-config=\\\"{trigger: 'click', mode: 'cell'}\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input', autoselect: true}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex5\\\" title=\\\"Sex\\\" :edit-render=\\\"{name: 'select', optionGroups: sexGriupList}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"date13\\\" title=\\\"Date\\\" :edit-render=\\\"{name: 'input', attrs: {type: 'date'}, autoselect: true}\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n      sexGriupList: [\n        {\n          label: '第一分组',\n          options: [\n            {\n              value: '1',\n              label: '男'\n            }\n          ]\n        },\n        {\n          label: '第二分组',\n          options: [\n            {\n              value: '0',\n              label: '女'\n            }\n          ]\n        },\n        {\n          label: '其他',\n          options: [\n            {\n              value: '',\n              label: '无'\n            }\n          ]\n        }\n      ],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\n  },\n\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/edit/Span\",\"name\":\"XtableDemo.edit.Span\",\"head\":{\"label\":\"XtableDemo.edit.Span.label\",\"description\":\"XtableDemo.edit.Span.description\"},\"samples\":[{\"id\":\"XtableDemo.edit.Span.sample1\",\"label\":\"XtableDemo.edit.Span.sample1.label\",\"description\":\"XtableDemo.edit.Span.sample1.description\",\"code\":\"<vue-toolbar>\\n  <template v-slot:buttons>\\n    <vue-button @click=\\\"insertEvent\\\">新增</vue-button>\\n    <vue-button @click=\\\"$refs.xTable.removeSelecteds()\\\">删除选中</vue-button>\\n  </template>\\n</vue-toolbar>\\n\\n<vue-xtable\\n  border\\n  ref=\\\"xTable\\\"\\n  height=\\\"500\\\"\\n  :loading=\\\"loading\\\"\\n  :span-method=\\\"rowspanMethod\\\"\\n  :data=\\\"tableData\\\"\\n  :edit-rules=\\\"validRules\\\"\\n  :mouse-config=\\\"{selected: true}\\\"\\n  :keyboard-config=\\\"{isArrow: true, isDel: true, isTab: true, isEdit: true}\\\"\\n  :edit-config=\\\"{trigger: 'click', mode: 'cell'}\\\">\\n  <vue-xtable-column type=\\\"checkbox\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"key\\\" title=\\\"Key\\\" :edit-render=\\\"{name: 'input', props: {placeholder: '请输入键值'}}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Translate\\\" :edit-render=\\\"{name: 'input', props: {placeholder: '请输入翻译的内容'}}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"language\\\" title=\\\"Language\\\" :edit-render=\\\"{name: 'select', options: optionList}\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      loading: false,\\n      tableData: [],\\n      optionList: [\\n        { label: '--请选择--', value: null },\\n        { label: '中文', value: 'zh_CN' },\\n        { label: 'English', value: 'en_US' },\\n        { label: 'Español', value: 'es' },\\n        { label: 'Français', value: 'fr_FR' }\\n      ],\\n      validRules: {\\n        key: [\\n          { required: true, message: '键值必须填写' }\\n        ],\\n        name: [\\n          { required: true, message: '翻译内容必须填写' }\\n        ],\\n        language: [\\n          { required: true, message: '语言类型必须填写' }\\n        ]\\n      },\\n\\n    }\\n  },\\n  created () {\\n    this.findList()\\n  },\\n\\n  methods: {\\n    findList () {\\n      this.loading = true\\n      Vue.http.get('/api/i18n/list', { sort: 'key', order: 'asc' }).then(data => {\\n        this.tableData = data.data\\n        this.loading = false\\n      })\\n    },\\n    insertEvent () {\\n      let record = {}\\n      this.$refs.xTable.insert(record)\\n        .then(({ row }) => this.$refs.xTable.setActiveCell(row, 'key'))\\n    },\\n    // 通用行合并函数（将相同多列数据合并为一行）\\n    rowspanMethod ({ row, $rowIndex, column, data }) {\\n      let fields = ['key']\\n      let cellValue = row[column.property]\\n      if (cellValue && VueUtil.includes(fields, column.property)) {\\n        let prevRow = data[$rowIndex - 1]\\n        let nextRow = data[$rowIndex + 1]\\n        if (prevRow && prevRow[column.property] === cellValue) {\\n          return { rowspan: 0, colspan: 0 }\\n        } else {\\n          let countRowspan = 1\\n          while (nextRow && nextRow[column.property] === cellValue) {\\n            nextRow = data[++countRowspan + $rowIndex]\\n          }\\n          if (countRowspan > 1) {\\n            return { rowspan: countRowspan, colspan: 1 }\\n          }\\n        }\\n      }\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-toolbar>\\n      <template v-slot:buttons>\\n        <vue-button @click=\\\"insertEvent\\\">新增</vue-button>\\n        <vue-button @click=\\\"$refs.xTable.removeSelecteds()\\\">删除选中</vue-button>\\n      </template>\\n    </vue-toolbar>\\n\\n    <vue-xtable\\n      border\\n      ref=\\\"xTable\\\"\\n      height=\\\"500\\\"\\n      :loading=\\\"loading\\\"\\n      :span-method=\\\"rowspanMethod\\\"\\n      :data=\\\"tableData\\\"\\n      :edit-rules=\\\"validRules\\\"\\n      :mouse-config=\\\"{selected: true}\\\"\\n      :keyboard-config=\\\"{isArrow: true, isDel: true, isTab: true, isEdit: true}\\\"\\n      :edit-config=\\\"{trigger: 'click', mode: 'cell'}\\\">\\n      <vue-xtable-column type=\\\"checkbox\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"key\\\" title=\\\"Key\\\" :edit-render=\\\"{name: 'input', props: {placeholder: '请输入键值'}}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Translate\\\" :edit-render=\\\"{name: 'input', props: {placeholder: '请输入翻译的内容'}}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"language\\\" title=\\\"Language\\\" :edit-render=\\\"{name: 'select', options: optionList}\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      loading: false,\n      tableData: [],\n      optionList: [\n        { label: '--请选择--', value: null },\n        { label: '中文', value: 'zh_CN' },\n        { label: 'English', value: 'en_US' },\n        { label: 'Español', value: 'es' },\n        { label: 'Français', value: 'fr_FR' }\n      ],\n      validRules: {\n        key: [\n          { required: true, message: '键值必须填写' }\n        ],\n        name: [\n          { required: true, message: '翻译内容必须填写' }\n        ],\n        language: [\n          { required: true, message: '语言类型必须填写' }\n        ]\n      },\n\n    }\n  },\n  created () {\n    this.findList()\n  },\n\n  methods: {\n    findList () {\n      this.loading = true\n      Vue.http.get('/api/i18n/list', { sort: 'key', order: 'asc' }).then(data => {\n        this.tableData = data.data\n        this.loading = false\n      })\n    },\n    insertEvent () {\n      let record = {}\n      this.$refs.xTable.insert(record)\n        .then(({ row }) => this.$refs.xTable.setActiveCell(row, 'key'))\n    },\n    // 通用行合并函数（将相同多列数据合并为一行）\n    rowspanMethod ({ row, $rowIndex, column, data }) {\n      let fields = ['key']\n      let cellValue = row[column.property]\n      if (cellValue && VueUtil.includes(fields, column.property)) {\n        let prevRow = data[$rowIndex - 1]\n        let nextRow = data[$rowIndex + 1]\n        if (prevRow && prevRow[column.property] === cellValue) {\n          return { rowspan: 0, colspan: 0 }\n        } else {\n          let countRowspan = 1\n          while (nextRow && nextRow[column.property] === cellValue) {\n            nextRow = data[++countRowspan + $rowIndex]\n          }\n          if (countRowspan > 1) {\n            return { rowspan: countRowspan, colspan: 1 }\n          }\n        }\n      }\n    }\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/edit/Status\",\"name\":\"XtableDemo.edit.Status\",\"head\":{\"label\":\"XtableDemo.edit.Status.label\",\"description\":\"XtableDemo.edit.Status.description\"},\"samples\":[{\"id\":\"XtableDemo.edit.Status.sample1\",\"label\":\"XtableDemo.edit.Status.sample1.label\",\"description\":\"XtableDemo.edit.Status.sample1.description\",\"code\":\"<vue-toolbar>\\n  <template v-slot:buttons>\\n    <vue-button @click=\\\"insertEvent\\\">新增</vue-button>\\n    <vue-button @click=\\\"$refs.xTable.removeSelecteds()\\\">删除选中</vue-button>\\n    <vue-button @click=\\\"getInsertEvent\\\">获取新增</vue-button>\\n    <vue-button @click=\\\"getRemoveEvent\\\">获取删除</vue-button>\\n    <vue-button @click=\\\"getUpdateEvent\\\">获取修改</vue-button>\\n  </template>\\n</vue-toolbar>\\n\\n<vue-xtable\\n  border\\n  show-overflow\\n  ref=\\\"xTable\\\"\\n  :data=\\\"tableData\\\"\\n  :edit-config=\\\"{trigger: 'click', mode: 'cell', showStatus: true}\\\">\\n  <vue-xtable-column type=\\\"checkbox\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"date3\\\" title=\\\"Date\\\" formatter=\\\"formatDate\\\"></vue-xtable-column>\\n  <vue-xtable-column title=\\\"操作\\\" width=\\\"200\\\">\\n    <template v-slot=\\\"scope\\\">\\n      <template v-if=\\\"!scope.row.date3\\\">\\n        <vue-button @click=\\\"saveEvent2(scope.row)\\\" :loading=\\\"scope.row.loading\\\">更新并替换新数据</vue-button>\\n      </template>\\n      <template v-else-if=\\\"scope.rowIndex % 2 === 0\\\">\\n        <vue-button @click=\\\"saveEvent(scope.row)\\\" :loading=\\\"scope.row.loading\\\">更新行数据</vue-button>\\n      </template>\\n      <template v-else>\\n        <vue-button type=\\\"primary\\\" @click=\\\"saveEvent(scope.row, 'name')\\\" :loading=\\\"scope.row.loading\\\">更新 Name 列</vue-button>\\n      </template>\\n    </template>\\n  </vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\\n  },\\n\\n  methods: {\\n    insertEvent () {\\n      this.$refs.xTable.insert()\\n        .then(({ row }) => this.$refs.xTable.setActiveCell(row, 'name'))\\n    },\\n    saveEvent (row, field) {\\n      let xTable = this.$refs.xTable\\n      if (xTable.isUpdateByRow(row)) {\\n        row.loading = true\\n        this.submitSave(row).then(data => {\\n          // 局部保存，并将行数据恢复到初始状态（如果 record 为空则不改动行数据，只恢复状态）\\n          xTable.reloadRow(row, null, field)\\n          this.$notify.success({ message:'保存成功！'});\\n          row.loading = false\\n        })\\n      } else {\\n        this.$notify.info({ message:'数据未改动！'});\\n      }\\n    },\\n    saveEvent2 (row, field) {\\n      let xTable = this.$refs.xTable\\n      if (xTable.isUpdateByRow(row)) {\\n        row.loading = true\\n        this.submitSave(row).then(data => {\\n          // 局部保存，并更新本地数据\\n          xTable.reloadRow(row, data, field)\\n          this.$notify.success({ message:'保存成功！'});\\n          row.loading = false\\n        })\\n      } else {\\n        this.$notify.info({ message:'数据未改动！'});\\n      }\\n    },\\n    submitSave (row) {\\n      return new Promise(resolve => {\\n        let rest = {\\n          date3: VueUtil.formatDate(new Date())\\n        }\\n        if (row.name) {\\n          rest.name = row.name\\n        }\\n        if (row.sex) {\\n          rest.sex = row.sex\\n        }\\n        setTimeout(() => resolve(rest), 500)\\n      })\\n    },\\n    getInsertEvent () {\\n      let insertRecords = this.$refs.xTable.getInsertRecords()\\n      this.$alert({ message: insertRecords.length })\\n    },\\n    getRemoveEvent () {\\n      let removeRecords = this.$refs.xTable.getRemoveRecords()\\n      this.$alert({ message: removeRecords.length })\\n    },\\n    getUpdateEvent () {\\n      let updateRecords = this.$refs.xTable.getUpdateRecords()\\n      this.$alert({ message: updateRecords.length })\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-toolbar>\\n      <template v-slot:buttons>\\n        <vue-button @click=\\\"insertEvent\\\">新增</vue-button>\\n        <vue-button @click=\\\"$refs.xTable.removeSelecteds()\\\">删除选中</vue-button>\\n        <vue-button @click=\\\"getInsertEvent\\\">获取新增</vue-button>\\n        <vue-button @click=\\\"getRemoveEvent\\\">获取删除</vue-button>\\n        <vue-button @click=\\\"getUpdateEvent\\\">获取修改</vue-button>\\n      </template>\\n    </vue-toolbar>\\n\\n    <vue-xtable\\n      border\\n      show-overflow\\n      ref=\\\"xTable\\\"\\n      :data=\\\"tableData\\\"\\n      :edit-config=\\\"{trigger: 'click', mode: 'cell', showStatus: true}\\\">\\n      <vue-xtable-column type=\\\"checkbox\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"date3\\\" title=\\\"Date\\\" formatter=\\\"formatDate\\\"></vue-xtable-column>\\n      <vue-xtable-column title=\\\"操作\\\" width=\\\"200\\\">\\n        <template v-slot=\\\"scope\\\">\\n          <template v-if=\\\"!scope.row.date3\\\">\\n            <vue-button @click=\\\"saveEvent2(scope.row)\\\" :loading=\\\"scope.row.loading\\\">更新并替换新数据</vue-button>\\n          </template>\\n          <template v-else-if=\\\"scope.rowIndex % 2 === 0\\\">\\n            <vue-button @click=\\\"saveEvent(scope.row)\\\" :loading=\\\"scope.row.loading\\\">更新行数据</vue-button>\\n          </template>\\n          <template v-else>\\n            <vue-button type=\\\"primary\\\" @click=\\\"saveEvent(scope.row, 'name')\\\" :loading=\\\"scope.row.loading\\\">更新 Name 列</vue-button>\\n          </template>\\n        </template>\\n      </vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\n  },\n\n  methods: {\n    insertEvent () {\n      this.$refs.xTable.insert()\n        .then(({ row }) => this.$refs.xTable.setActiveCell(row, 'name'))\n    },\n    saveEvent (row, field) {\n      let xTable = this.$refs.xTable\n      if (xTable.isUpdateByRow(row)) {\n        row.loading = true\n        this.submitSave(row).then(data => {\n          // 局部保存，并将行数据恢复到初始状态（如果 record 为空则不改动行数据，只恢复状态）\n          xTable.reloadRow(row, null, field)\n          this.$notify.success({ message:'保存成功！'});\n          row.loading = false\n        })\n      } else {\n        this.$notify.info({ message:'数据未改动！'});\n      }\n    },\n    saveEvent2 (row, field) {\n      let xTable = this.$refs.xTable\n      if (xTable.isUpdateByRow(row)) {\n        row.loading = true\n        this.submitSave(row).then(data => {\n          // 局部保存，并更新本地数据\n          xTable.reloadRow(row, data, field)\n          this.$notify.success({ message:'保存成功！'});\n          row.loading = false\n        })\n      } else {\n        this.$notify.info({ message:'数据未改动！'});\n      }\n    },\n    submitSave (row) {\n      return new Promise(resolve => {\n        let rest = {\n          date3: VueUtil.formatDate(new Date())\n        }\n        if (row.name) {\n          rest.name = row.name\n        }\n        if (row.sex) {\n          rest.sex = row.sex\n        }\n        setTimeout(() => resolve(rest), 500)\n      })\n    },\n    getInsertEvent () {\n      let insertRecords = this.$refs.xTable.getInsertRecords()\n      this.$alert({ message: insertRecords.length })\n    },\n    getRemoveEvent () {\n      let removeRecords = this.$refs.xTable.getRemoveRecords()\n      this.$alert({ message: removeRecords.length })\n    },\n    getUpdateEvent () {\n      let updateRecords = this.$refs.xTable.getUpdateRecords()\n      this.$alert({ message: updateRecords.length })\n    }\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/edit/Template\",\"name\":\"XtableDemo.edit.Template\",\"head\":{\"label\":\"XtableDemo.edit.Template.label\",\"description\":\"XtableDemo.edit.Template.description\"},\"samples\":[{\"id\":\"XtableDemo.edit.Template.sample1\",\"label\":\"XtableDemo.edit.Template.sample1.label\",\"description\":\"XtableDemo.edit.Template.sample1.description\",\"code\":\"<vue-xtable\\n  border\\n  show-overflow\\n  :data=\\\"tableData\\\"\\n  :edit-config=\\\"{trigger: 'click', mode: 'cell'}\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input'}\\\">\\n    <template v-slot:edit=\\\"scope\\\">\\n      <input type=\\\"text\\\" v-model=\\\"scope.row.name\\\" class=\\\"custom-input\\\">\\n    </template>\\n  </vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" :edit-render=\\\"{autofocus: '.custom-input'}\\\">\\n    <template v-slot:edit=\\\"scope\\\">\\n      <input type=\\\"number\\\" v-model=\\\"scope.row.age\\\" class=\\\"custom-input\\\">\\n    </template>\\n  </vue-xtable-column>\\n  <vue-xtable-column field=\\\"date3\\\" title=\\\"Date\\\" :edit-render=\\\"{name: 'input'}\\\">\\n    <template v-slot:edit=\\\"scope\\\">\\n      <input type=\\\"date\\\" v-model=\\\"scope.row.date3\\\" class=\\\"custom-input\\\">\\n    </template>\\n    <template v-slot=\\\"scope\\\">选中日期：{{ scope.row.date3 }}</template>\\n  </vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    let list = window.MOCK_DATA_LIST.slice(0, 6)\\n    this.tableData = list\\n  },\\n\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      show-overflow\\n      :data=\\\"tableData\\\"\\n      :edit-config=\\\"{trigger: 'click', mode: 'cell'}\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input'}\\\">\\n        <template v-slot:edit=\\\"scope\\\">\\n          <input type=\\\"text\\\" v-model=\\\"scope.row.name\\\" class=\\\"custom-input\\\">\\n        </template>\\n      </vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" :edit-render=\\\"{autofocus: '.custom-input'}\\\">\\n        <template v-slot:edit=\\\"scope\\\">\\n          <input type=\\\"number\\\" v-model=\\\"scope.row.age\\\" class=\\\"custom-input\\\">\\n        </template>\\n      </vue-xtable-column>\\n      <vue-xtable-column field=\\\"date3\\\" title=\\\"Date\\\" :edit-render=\\\"{name: 'input'}\\\">\\n        <template v-slot:edit=\\\"scope\\\">\\n          <input type=\\\"date\\\" v-model=\\\"scope.row.date3\\\" class=\\\"custom-input\\\">\\n        </template>\\n        <template v-slot=\\\"scope\\\">选中日期：{{ scope.row.date3 }}</template>\\n      </vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 6)\n    this.tableData = list\n  },\n\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/edit/UniqueSelect\",\"name\":\"XtableDemo.edit.UniqueSelect\",\"head\":{\"label\":\"XtableDemo.edit.UniqueSelect.label\",\"description\":\"XtableDemo.edit.UniqueSelect.description\"},\"samples\":[{\"id\":\"XtableDemo.edit.UniqueSelect.sample1\",\"label\":\"XtableDemo.edit.UniqueSelect.sample1.label\",\"description\":\"XtableDemo.edit.UniqueSelect.sample1.description\",\"code\":\"<vue-toolbar>\\n  <template v-slot:buttons>\\n    <vue-button @click=\\\"insertEvent()\\\">新增</vue-button>\\n  </template>\\n</vue-toolbar>\\n\\n<vue-xtable\\n  border\\n  resizable\\n  ref=\\\"xTable\\\"\\n  max-height=\\\"400\\\"\\n  :data=\\\"tableData\\\"\\n  :edit-config=\\\"{trigger: 'click', mode: 'row'}\\\"\\n  @edit-actived=\\\"editActivedEvent\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"role1\\\" title=\\\"Role\\\" :edit-render=\\\"{name: 'select', options: roleList, events: {change: roleChangeEvent}}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"date12\\\" title=\\\"Date\\\" :edit-render=\\\"{name: 'input', attrs: {type: 'date'}}\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n      roleList: [\\n        {\\n          label: '',\\n          value: '',\\n          disabled: false\\n        },\\n        {\\n          label: '前端',\\n          value: '1',\\n          disabled: false\\n        },\\n        {\\n          label: '后端',\\n          value: '2',\\n          disabled: false\\n        },\\n        {\\n          label: '项目经理',\\n          value: '3',\\n          disabled: false\\n        },\\n        {\\n          label: '设计师',\\n          value: '4',\\n          disabled: false\\n        },\\n        {\\n          label: '运维',\\n          value: '5',\\n          disabled: false\\n        }\\n      ],\\n\\n    }\\n  },\\n  created () {\\n    this.$nextTick(() => {\\n      this.tableData = window.MOCK_DATA_LIST.slice(0, 2)\\n      this.updateRoleList()\\n    })\\n  },\\n\\n  methods: {\\n    insertEvent () {\\n      let record = {\\n\\n      }\\n      this.$refs.xTable.insert(record)\\n    },\\n    updateRoleList () {\\n      // 获取表格中的全量数据\\n      let { fullData } = this.$refs.xTable.getTableData()\\n      this.roleList.forEach(item => {\\n        if (item.value) {\\n          // 如果当前选项已经被选过，则禁用\\n          item.disabled = fullData.some(row => row.role1 === item.value)\\n        }\\n      })\\n    },\\n    roleChangeEvent ({ row }, evnt) {\\n      // 使用内置 select 需要手动更新，使用第三方组件如果是 v-model 就不需要手动赋值\\n      row.role1 = evnt.target.value\\n      this.updateRoleList()\\n    },\\n    editActivedEvent ({ row }) {\\n      // 激活编辑时检查剩余选项是否可选择\\n      this.updateRoleList()\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-toolbar>\\n      <template v-slot:buttons>\\n        <vue-button @click=\\\"insertEvent()\\\">新增</vue-button>\\n      </template>\\n    </vue-toolbar>\\n\\n    <vue-xtable\\n      border\\n      resizable\\n      ref=\\\"xTable\\\"\\n      max-height=\\\"400\\\"\\n      :data=\\\"tableData\\\"\\n      :edit-config=\\\"{trigger: 'click', mode: 'row'}\\\"\\n      @edit-actived=\\\"editActivedEvent\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"role1\\\" title=\\\"Role\\\" :edit-render=\\\"{name: 'select', options: roleList, events: {change: roleChangeEvent}}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"date12\\\" title=\\\"Date\\\" :edit-render=\\\"{name: 'input', attrs: {type: 'date'}}\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n      roleList: [\n        {\n          label: '',\n          value: '',\n          disabled: false\n        },\n        {\n          label: '前端',\n          value: '1',\n          disabled: false\n        },\n        {\n          label: '后端',\n          value: '2',\n          disabled: false\n        },\n        {\n          label: '项目经理',\n          value: '3',\n          disabled: false\n        },\n        {\n          label: '设计师',\n          value: '4',\n          disabled: false\n        },\n        {\n          label: '运维',\n          value: '5',\n          disabled: false\n        }\n      ],\n\n    }\n  },\n  created () {\n    this.$nextTick(() => {\n      this.tableData = window.MOCK_DATA_LIST.slice(0, 2)\n      this.updateRoleList()\n    })\n  },\n\n  methods: {\n    insertEvent () {\n      let record = {\n\n      }\n      this.$refs.xTable.insert(record)\n    },\n    updateRoleList () {\n      // 获取表格中的全量数据\n      let { fullData } = this.$refs.xTable.getTableData()\n      this.roleList.forEach(item => {\n        if (item.value) {\n          // 如果当前选项已经被选过，则禁用\n          item.disabled = fullData.some(row => row.role1 === item.value)\n        }\n      })\n    },\n    roleChangeEvent ({ row }, evnt) {\n      // 使用内置 select 需要手动更新，使用第三方组件如果是 v-model 就不需要手动赋值\n      row.role1 = evnt.target.value\n      this.updateRoleList()\n    },\n    editActivedEvent ({ row }) {\n      // 激活编辑时检查剩余选项是否可选择\n      this.updateRoleList()\n    }\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/grid/Basic\",\"name\":\"XtableDemo.grid.Basic\",\"head\":{\"label\":\"XtableDemo.grid.Basic.label\",\"description\":\"XtableDemo.grid.Basic.description\"},\"samples\":[{\"id\":\"XtableDemo.grid.Basic.sample1\",\"label\":\"XtableDemo.grid.Basic.sample1.label\",\"description\":\"XtableDemo.grid.Basic.sample1.description\",\"code\":\"<vue-xgrid\\nborder\\nresizable\\nheight=\\\"300\\\"\\n:columns=\\\"tableColumn\\\"\\n:data=\\\"tableData\\\"></vue-xgrid>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableColumn: [\\n        { type: 'index', width: 50 },\\n        { field: 'name', title: '姓名' },\\n        { field: 'sex', title: '性别', showHeaderOverflow: true },\\n        { field: 'address', title: 'Address', showOverflow: true }\\n      ],\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\\n  },\\n\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xgrid\\n      border\\n      resizable\\n      height=\\\"300\\\"\\n      :columns=\\\"tableColumn\\\"\\n      :data=\\\"tableData\\\"></vue-xgrid></div>\",\"parameter\": {\n  data () {\n    return {\n      tableColumn: [\n        { type: 'index', width: 50 },\n        { field: 'name', title: '姓名' },\n        { field: 'sex', title: '性别', showHeaderOverflow: true },\n        { field: 'address', title: 'Address', showOverflow: true }\n      ],\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\n  },\n\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/grid/CustomToolbar\",\"name\":\"XtableDemo.grid.CustomToolbar\",\"head\":{\"label\":\"XtableDemo.grid.CustomToolbar.label\",\"description\":\"XtableDemo.grid.CustomToolbar.description\"},\"samples\":[{\"id\":\"XtableDemo.grid.CustomToolbar.sample1\",\"label\":\"XtableDemo.grid.CustomToolbar.sample1.label\",\"description\":\"XtableDemo.grid.CustomToolbar.sample1.description\",\"code\":\"<vue-xgrid\\n  border\\n  resizable\\n  ref=\\\"xGrid\\\"\\n  height=\\\"530\\\"\\n  :pager-config=\\\"tablePage\\\"\\n  :proxy-config=\\\"tableProxy\\\"\\n  :columns=\\\"tableColumn\\\"\\n  :toolbar=\\\"toolbar\\\"\\n  :edit-config=\\\"{trigger: 'click', mode: 'row', showStatus: true}\\\">\\n  <template v-slot:buttons>\\n    <input type=\\\"text\\\"/>\\n    <button>搜索</button>\\n    <vue-button @click=\\\"$refs.xGrid.commitProxy('reload')\\\">刷新</vue-button>\\n    <vue-button @click=\\\"$refs.xGrid.commitProxy('insert_actived')\\\">新增</vue-button>\\n    <vue-button @click=\\\"$refs.xGrid.commitProxy('mark_cancel')\\\">标记/取消</vue-button>\\n    <vue-button @click=\\\"$refs.xGrid.commitProxy('save')\\\">保存</vue-button>\\n    <vue-button @click=\\\"$refs.xGrid.exportData()\\\">导出.csv</vue-button>\\n  </template>\\n</vue-xgrid>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tablePage: {\\n        pageSize: 15\\n      },\\n      tableProxy: {\\n        props: {\\n          result: 'data.result',\\n          total: 'data.page.total'\\n        },\\n        ajax: {\\n          // page 对象： { pageSize, currentPage }\\n          query: ({ page }) => Vue.http.get(`/api/user/page/list/${page.pageSize}/${page.currentPage}`),\\n          // body 对象： { removeRecords }\\n          delete: ({ body }) => Vue.http.post('/api/user/save', body),\\n          // body 对象： { insertRecords, updateRecords, removeRecords, pendingRecords }\\n          save: ({ body }) => Vue.http.post('/api/user/save', body)\\n        }\\n      },\\n      toolbar: {\\n        id: 'toolbar_demo_2',\\n        refresh: true,\\n        setting: {\\n          storage: true\\n        }\\n      },\\n      tableColumn: [\\n        { type: 'checkbox', width: 50 },\\n        { type: 'index', width: 60 },\\n        { field: 'name', title: 'Name', editRender: { name: 'input' } },\\n        { field: 'nickname', title: 'Nickname', editRender: { name: 'input' } },\\n        { field: 'role', title: 'Role', editRender: { name: 'input' } },\\n        { field: 'describe', title: 'Describe', showOverflow: true, editRender: { name: 'input' } }\\n      ],\\n\\n    }\\n  },\\n\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xgrid\\n      border\\n      resizable\\n      ref=\\\"xGrid\\\"\\n      height=\\\"530\\\"\\n      :pager-config=\\\"tablePage\\\"\\n      :proxy-config=\\\"tableProxy\\\"\\n      :columns=\\\"tableColumn\\\"\\n      :toolbar=\\\"toolbar\\\"\\n      :edit-config=\\\"{trigger: 'click', mode: 'row', showStatus: true}\\\">\\n      <template v-slot:buttons>\\n        <input type=\\\"text\\\"/>\\n        <button>搜索</button>\\n        <vue-button @click=\\\"$refs.xGrid.commitProxy('reload')\\\">刷新</vue-button>\\n        <vue-button @click=\\\"$refs.xGrid.commitProxy('insert_actived')\\\">新增</vue-button>\\n        <vue-button @click=\\\"$refs.xGrid.commitProxy('mark_cancel')\\\">标记/取消</vue-button>\\n        <vue-button @click=\\\"$refs.xGrid.commitProxy('save')\\\">保存</vue-button>\\n        <vue-button @click=\\\"$refs.xGrid.exportData()\\\">导出.csv</vue-button>\\n      </template>\\n    </vue-xgrid></div>\",\"parameter\": {\n  data () {\n    return {\n      tablePage: {\n        pageSize: 15\n      },\n      tableProxy: {\n        props: {\n          result: 'data.result',\n          total: 'data.page.total'\n        },\n        ajax: {\n          // page 对象： { pageSize, currentPage }\n          query: ({ page }) => Vue.http.get(`/api/user/page/list/${page.pageSize}/${page.currentPage}`),\n          // body 对象： { removeRecords }\n          delete: ({ body }) => Vue.http.post('/api/user/save', body),\n          // body 对象： { insertRecords, updateRecords, removeRecords, pendingRecords }\n          save: ({ body }) => Vue.http.post('/api/user/save', body)\n        }\n      },\n      toolbar: {\n        id: 'toolbar_demo_2',\n        refresh: true,\n        setting: {\n          storage: true\n        }\n      },\n      tableColumn: [\n        { type: 'checkbox', width: 50 },\n        { type: 'index', width: 60 },\n        { field: 'name', title: 'Name', editRender: { name: 'input' } },\n        { field: 'nickname', title: 'Nickname', editRender: { name: 'input' } },\n        { field: 'role', title: 'Role', editRender: { name: 'input' } },\n        { field: 'describe', title: 'Describe', showOverflow: true, editRender: { name: 'input' } }\n      ],\n\n    }\n  },\n\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/grid/Dynamic\",\"name\":\"XtableDemo.grid.Dynamic\",\"head\":{\"label\":\"XtableDemo.grid.Dynamic.label\",\"description\":\"XtableDemo.grid.Dynamic.description\"},\"samples\":[{\"id\":\"XtableDemo.grid.Dynamic.sample1\",\"label\":\"XtableDemo.grid.Dynamic.sample1.label\",\"description\":\"XtableDemo.grid.Dynamic.sample1.description\",\"code\":\"<vue-xgrid\\nborder\\nresizable\\nshow-overflow\\nheight=\\\"306\\\"\\n:pager-config=\\\"tablePage\\\"\\n:proxy-config=\\\"tableProxy\\\"\\n:columns=\\\"tableColumn\\\"\\n:toolbar=\\\"tableToolbar\\\"\\n:edit-config=\\\"{trigger: 'click', mode: 'row', showStatus: true}\\\"></vue-xgrid>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tablePage: {\\n        pageSize: 5,\\n        pageSizes: [5, 10, 15, 20, 50]\\n      },\\n      tableProxy: {\\n        props: {\\n          result: 'data.result',\\n          total: 'data.page.total'\\n        },\\n        ajax: {\\n          query: ({ page }) => Vue.http.get(`/api/column/page/list/${page.pageSize}/${page.currentPage}`, { sort: 'seq', order: 'asc' }),\\n          delete: ({ body }) => Vue.http.post('/api/column/save', body),\\n          save: ({ body }) => Vue.http.post('/api/column/save', body)\\n        }\\n      },\\n      tableToolbar: {\\n        buttons: [\\n          { code: 'reload', name: '刷新' },\\n          { code: 'insert_actived', name: '新增' },\\n          { code: 'mark_cancel', name: '标记/取消' },\\n          { code: 'save', name: '保存' },\\n          { code: 'export', name: '导出.csv' }\\n        ],\\n        refresh: true,\\n        setting: true\\n      },\\n      tableColumn: [\\n        { type: 'checkbox', width: 50 },\\n        { field: 'seq', title: '排序', width: 80, editRender: { name: 'input' } },\\n        { field: 'key', title: '列键值', width: 100, editRender: { name: 'input' } },\\n        { field: 'name', title: '列名称', width: 100, editRender: { name: 'input' } },\\n        { field: 'type', title: '列类型', width: 100, editRender: { name: 'input' } },\\n        { field: 'width', title: '列宽度', width: 100, editRender: { name: 'input' } },\\n        { field: 'link', title: '是否链接', width: 150, editRender: { name: 'input' } },\\n        { field: 'isEdit', title: '是否编辑', width: 100, editRender: { name: 'input' } },\\n        { field: 'required', title: '是否必填', width: 140, editRender: { name: 'input' } },\\n        { field: 'validator', title: '校验规则', width: 140, editRender: { name: 'input' } },\\n        { field: 'validMsg', title: '校验提示消息', width: 150, editRender: { name: 'input' } },\\n        { field: 'describe', title: '描述', width: 200, showOverflow: true, editRender: { name: 'input' } },\\n        { field: 'createTime', title: '创建时间', width: 100, showOverflow: true, formatter: this.formatterDate, editRender: { name: 'input' } },\\n        { field: 'updateTime', title: '更新时间', width: 200, showOverflow: true, formatter: this.formatterDate, editRender: { name: 'input' } }\\n      ],\\n\\n    }\\n  },\\n  methods: {\\n    formatterDate ({ cellValue }) {\\n      return VueUtil.formatDate(cellValue, 'yyyy-MM-dd HH:mm:ss')\\n    },\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xgrid\\n      border\\n      resizable\\n      show-overflow\\n      height=\\\"306\\\"\\n      :pager-config=\\\"tablePage\\\"\\n      :proxy-config=\\\"tableProxy\\\"\\n      :columns=\\\"tableColumn\\\"\\n      :toolbar=\\\"tableToolbar\\\"\\n      :edit-config=\\\"{trigger: 'click', mode: 'row', showStatus: true}\\\"></vue-xgrid></div>\",\"parameter\": {\n  data () {\n    return {\n      tablePage: {\n        pageSize: 5,\n        pageSizes: [5, 10, 15, 20, 50]\n      },\n      tableProxy: {\n        props: {\n          result: 'data.result',\n          total: 'data.page.total'\n        },\n        ajax: {\n          query: ({ page }) => Vue.http.get(`/api/column/page/list/${page.pageSize}/${page.currentPage}`, { sort: 'seq', order: 'asc' }),\n          delete: ({ body }) => Vue.http.post('/api/column/save', body),\n          save: ({ body }) => Vue.http.post('/api/column/save', body)\n        }\n      },\n      tableToolbar: {\n        buttons: [\n          { code: 'reload', name: '刷新' },\n          { code: 'insert_actived', name: '新增' },\n          { code: 'mark_cancel', name: '标记/取消' },\n          { code: 'save', name: '保存' },\n          { code: 'export', name: '导出.csv' }\n        ],\n        refresh: true,\n        setting: true\n      },\n      tableColumn: [\n        { type: 'checkbox', width: 50 },\n        { field: 'seq', title: '排序', width: 80, editRender: { name: 'input' } },\n        { field: 'key', title: '列键值', width: 100, editRender: { name: 'input' } },\n        { field: 'name', title: '列名称', width: 100, editRender: { name: 'input' } },\n        { field: 'type', title: '列类型', width: 100, editRender: { name: 'input' } },\n        { field: 'width', title: '列宽度', width: 100, editRender: { name: 'input' } },\n        { field: 'link', title: '是否链接', width: 150, editRender: { name: 'input' } },\n        { field: 'isEdit', title: '是否编辑', width: 100, editRender: { name: 'input' } },\n        { field: 'required', title: '是否必填', width: 140, editRender: { name: 'input' } },\n        { field: 'validator', title: '校验规则', width: 140, editRender: { name: 'input' } },\n        { field: 'validMsg', title: '校验提示消息', width: 150, editRender: { name: 'input' } },\n        { field: 'describe', title: '描述', width: 200, showOverflow: true, editRender: { name: 'input' } },\n        { field: 'createTime', title: '创建时间', width: 100, showOverflow: true, formatter: this.formatterDate, editRender: { name: 'input' } },\n        { field: 'updateTime', title: '更新时间', width: 200, showOverflow: true, formatter: this.formatterDate, editRender: { name: 'input' } }\n      ],\n\n    }\n  },\n  methods: {\n    formatterDate ({ cellValue }) {\n      return VueUtil.formatDate(cellValue, 'yyyy-MM-dd HH:mm:ss')\n    },\n  }\n}},{\"id\":\"XtableDemo.grid.Dynamic.sample2\",\"label\":\"XtableDemo.grid.Dynamic.sample2.label\",\"description\":\"XtableDemo.grid.Dynamic.sample2.description\",\"code\":\"<vue-xgrid\\nborder\\nshow-overflow\\nheight=\\\"290\\\"\\n:loading=\\\"loading2\\\"\\n:pager-config=\\\"tablePage2\\\"\\n:proxy-config=\\\"tableProxy2\\\"\\n:columns=\\\"tableColumn2\\\"\\n:toolbar=\\\"tableToolbar2\\\"\\n:edit-rules=\\\"validRules2\\\"\\n:edit-config=\\\"{trigger: 'click', mode: 'row', showStatus: true}\\\"\\n@toolbar-button-click=\\\"toolbarButtonClickEvent\\\"></vue-xgrid>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      loading2: false,\\n      tablePage2: {\\n        pageSize: 10\\n      },\\n      tableProxy2: {\\n        props: {\\n          result: 'data.result',\\n          total: 'data.page.total'\\n        },\\n        ajax: {\\n          query: ({ page }) => Vue.http.get(`/api/user/page/list/${page.pageSize}/${page.currentPage}`),\\n          delete: ({ body }) => Vue.http.post('/api/user/save', body),\\n          save: ({ body }) => Vue.http.post('/api/user/save', body)\\n        }\\n      },\\n      tableToolbar2: {\\n        buttons: [\\n          { code: 'reloadColumn', name: '刷新列配置' },\\n          { code: 'reload', name: '刷新数据' },\\n          { code: 'insert_actived', name: '新增' },\\n          { code: 'mark_cancel', name: '标记/取消' },\\n          { code: 'save', name: '保存' },\\n          { code: 'export', name: '导出.csv' }\\n        ],\\n        refresh: true,\\n        setting: true\\n      },\\n      validRules2: null,\\n      tableColumn2: [],\\n\\n    }\\n  },\\n  created () {\\n    this.findColumn()\\n  },\\n  methods: {\\n    findColumn () {\\n      this.loading2 = true\\n      Vue.http.get('/api/column/list', { sort: 'seq', order: 'asc' }).then(data => {\\n        let validRules = {}\\n        this.tableColumn2 = data.body.map(item => {\\n          let config = {\\n            title: item.name,\\n            width: item.width\\n          }\\n          if (item.type) {\\n            Object.assign(config, {\\n              type: item.type\\n            })\\n          } else {\\n            Object.assign(config, {\\n              slots: {\\n                default: ({ row, column }) => {\\n                  // 渲染链接\\n                  if (item.link) {\\n                    return [\\n                      <a class=\\\"link\\\" href={ item.link }>{ row[column.property] }</a>\\n                    ]\\n                  }\\n                  // 渲染文本\\n                  return [\\n                    <span>{ row[column.property] }</span>\\n                  ]\\n                }\\n              }\\n            })\\n            // 动态生成校验\\n            if (item.required) {\\n              validRules[item.key] = [\\n                { required: true, message: `请填写${item.name}` }\\n              ]\\n            }\\n            if (item.validator) {\\n              if (validRules[item.key]) {\\n                validRules[item.key].push({ pattern: new RegExp(item.validator), message: item.validMsg || `${item.name}校验不通过，请重新填写` })\\n              } else {\\n                validRules[item.key] = [\\n                  { pattern: new RegExp(item.validator), message: item.validMsg || `${item.name}校验不通过，请重新填写` }\\n                ]\\n              }\\n            }\\n            if (item.key) {\\n              config.field = item.key\\n            }\\n            if (item.isEdit) {\\n              config.editRender = { name: 'input' }\\n            }\\n          }\\n          return config\\n        })\\n        this.validRules2 = validRules\\n        this.loading2 = false\\n      })\\n    },\\n    toolbarButtonClickEvent ({ code }, event) {\\n      switch (code) {\\n        case 'reloadColumn':\\n          this.findColumn()\\n          break\\n      }\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xgrid\\n      border\\n      show-overflow\\n      height=\\\"290\\\"\\n      :loading=\\\"loading2\\\"\\n      :pager-config=\\\"tablePage2\\\"\\n      :proxy-config=\\\"tableProxy2\\\"\\n      :columns=\\\"tableColumn2\\\"\\n      :toolbar=\\\"tableToolbar2\\\"\\n      :edit-rules=\\\"validRules2\\\"\\n      :edit-config=\\\"{trigger: 'click', mode: 'row', showStatus: true}\\\"\\n      @toolbar-button-click=\\\"toolbarButtonClickEvent\\\"></vue-xgrid></div>\",\"parameter\": {\n  data () {\n    return {\n      loading2: false,\n      tablePage2: {\n        pageSize: 10\n      },\n      tableProxy2: {\n        props: {\n          result: 'data.result',\n          total: 'data.page.total'\n        },\n        ajax: {\n          query: ({ page }) => Vue.http.get(`/api/user/page/list/${page.pageSize}/${page.currentPage}`),\n          delete: ({ body }) => Vue.http.post('/api/user/save', body),\n          save: ({ body }) => Vue.http.post('/api/user/save', body)\n        }\n      },\n      tableToolbar2: {\n        buttons: [\n          { code: 'reloadColumn', name: '刷新列配置' },\n          { code: 'reload', name: '刷新数据' },\n          { code: 'insert_actived', name: '新增' },\n          { code: 'mark_cancel', name: '标记/取消' },\n          { code: 'save', name: '保存' },\n          { code: 'export', name: '导出.csv' }\n        ],\n        refresh: true,\n        setting: true\n      },\n      validRules2: null,\n      tableColumn2: [],\n\n    }\n  },\n  created () {\n    this.findColumn()\n  },\n  methods: {\n    findColumn () {\n      this.loading2 = true\n      Vue.http.get('/api/column/list', { sort: 'seq', order: 'asc' }).then(data => {\n        let validRules = {}\n        this.tableColumn2 = data.body.map(item => {\n          let config = {\n            title: item.name,\n            width: item.width\n          }\n          if (item.type) {\n            Object.assign(config, {\n              type: item.type\n            })\n          } else {\n            Object.assign(config, {\n              slots: {\n                default: ({ row, column }) => {\n                  // 渲染链接\n                  if (item.link) {\n                    return [\n                      <a class=\"link\" href={ item.link }>{ row[column.property] }</a>\n                    ]\n                  }\n                  // 渲染文本\n                  return [\n                    <span>{ row[column.property] }</span>\n                  ]\n                }\n              }\n            })\n            // 动态生成校验\n            if (item.required) {\n              validRules[item.key] = [\n                { required: true, message: `请填写${item.name}` }\n              ]\n            }\n            if (item.validator) {\n              if (validRules[item.key]) {\n                validRules[item.key].push({ pattern: new RegExp(item.validator), message: item.validMsg || `${item.name}校验不通过，请重新填写` })\n              } else {\n                validRules[item.key] = [\n                  { pattern: new RegExp(item.validator), message: item.validMsg || `${item.name}校验不通过，请重新填写` }\n                ]\n              }\n            }\n            if (item.key) {\n              config.field = item.key\n            }\n            if (item.isEdit) {\n              config.editRender = { name: 'input' }\n            }\n          }\n          return config\n        })\n        this.validRules2 = validRules\n        this.loading2 = false\n      })\n    },\n    toolbarButtonClickEvent ({ code }, event) {\n      switch (code) {\n        case 'reloadColumn':\n          this.findColumn()\n          break\n      }\n    }\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/grid/Edit\",\"name\":\"XtableDemo.grid.Edit\",\"head\":{\"label\":\"XtableDemo.grid.Edit.label\",\"description\":\"XtableDemo.grid.Edit.description\"},\"samples\":[{\"id\":\"XtableDemo.grid.Edit.sample1\",\"label\":\"XtableDemo.grid.Edit.sample1.label\",\"description\":\"XtableDemo.grid.Edit.sample1.description\",\"code\":\"<vue-xgrid\\nborder\\nresizable\\nref=\\\"xGrid\\\"\\nheight=\\\"530\\\"\\n:loading=\\\"loading\\\"\\n:pager-config=\\\"tablePage\\\"\\n:columns=\\\"tableColumn\\\"\\n:data=\\\"tableData\\\"\\n:edit-config=\\\"{trigger: 'click', mode: 'row', showStatus: true}\\\"\\n@page-change=\\\"handlePageChange\\\"></vue-xgrid>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      loading: false,\\n      tablePage: {\\n        total: 0,\\n        currentPage: 1,\\n        pageSize: 10,\\n        pageSizes: [10, 20, 50, 100, 200, 500]\\n      },\\n      tableColumn: [\\n        { type: 'index', width: 60 },\\n        { type: 'checkbox', width: 50 },\\n        { field: 'name', title: 'Name', editRender: { name: 'input' } },\\n        { field: 'nickname', title: 'Nickname', editRender: { name: 'input' } },\\n        { field: 'sex', title: 'Sex', editRender: { name: 'select', options: [] } },\\n        { field: 'role', title: 'Role', editRender: { name: 'input' } },\\n        { field: 'describe', title: 'Describe', showOverflow: true, editRender: { name: 'input' } }\\n      ],\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n\\n  },\\n  mounted () {\\n    this.findList()\\n    this.findSexList()\\n\\n  },\\n  methods: {\\n    findList () {\\n      this.loading = true\\n      Vue.http.get(`/api/user/page/list/${this.tablePage.pageSize}/${this.tablePage.currentPage}`).then(response => {\\n        let { page, result } = response.data;\\n        this.tableData = result\\n        this.tablePage.total = page.total\\n        this.loading = false\\n      }).catch(e => {\\n        this.loading = false\\n      })\\n    },\\n    findSexList () {\\n      // return Vue.http.get('/api/conf/sex/list').then(response => {\\n        // 异步更新下拉选项\\n        this.$nextTick(() => {\\n          let column = this.$refs.xGrid.getColumnByField('sex')\\n          column.editRender.options = [{\\\"label\\\":\\\"\\\",\\\"spell\\\":\\\"\\\",\\\"value\\\":\\\"\\\",\\\"value2\\\":null,\\\"val\\\":\\\"\\\"},{\\\"label\\\":\\\"男\\\",\\\"spell\\\":\\\"nan\\\",\\\"value\\\":\\\"1\\\",\\\"value2\\\":1,\\\"val\\\":\\\"x\\\"},{\\\"label\\\":\\\"女\\\",\\\"spell\\\":\\\"nv\\\",\\\"value\\\":\\\"0\\\",\\\"value2\\\":0,\\\"val\\\":\\\"o\\\"}]\\n        })\\n      // })\\n    },\\n    searchEvent () {\\n      this.tablePage.currentPage = 1\\n      this.findList()\\n    },\\n    handlePageChange ({ currentPage, pageSize }) {\\n      this.tablePage.currentPage = currentPage\\n      this.tablePage.pageSize = pageSize\\n      this.findList()\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xgrid\\n      border\\n      resizable\\n      ref=\\\"xGrid\\\"\\n      height=\\\"530\\\"\\n      :loading=\\\"loading\\\"\\n      :pager-config=\\\"tablePage\\\"\\n      :columns=\\\"tableColumn\\\"\\n      :data=\\\"tableData\\\"\\n      :edit-config=\\\"{trigger: 'click', mode: 'row', showStatus: true}\\\"\\n      @page-change=\\\"handlePageChange\\\"></vue-xgrid></div>\",\"parameter\": {\n  data () {\n    return {\n      loading: false,\n      tablePage: {\n        total: 0,\n        currentPage: 1,\n        pageSize: 10,\n        pageSizes: [10, 20, 50, 100, 200, 500]\n      },\n      tableColumn: [\n        { type: 'index', width: 60 },\n        { type: 'checkbox', width: 50 },\n        { field: 'name', title: 'Name', editRender: { name: 'input' } },\n        { field: 'nickname', title: 'Nickname', editRender: { name: 'input' } },\n        { field: 'sex', title: 'Sex', editRender: { name: 'select', options: [] } },\n        { field: 'role', title: 'Role', editRender: { name: 'input' } },\n        { field: 'describe', title: 'Describe', showOverflow: true, editRender: { name: 'input' } }\n      ],\n      tableData: [],\n\n    }\n  },\n  created () {\n\n  },\n  mounted () {\n    this.findList()\n    this.findSexList()\n\n  },\n  methods: {\n    findList () {\n      this.loading = true\n      Vue.http.get(`/api/user/page/list/${this.tablePage.pageSize}/${this.tablePage.currentPage}`).then(response => {\n        let { page, result } = response.data;\n        this.tableData = result\n        this.tablePage.total = page.total\n        this.loading = false\n      }).catch(e => {\n        this.loading = false\n      })\n    },\n    findSexList () {\n      // return Vue.http.get('/api/conf/sex/list').then(response => {\n        // 异步更新下拉选项\n        this.$nextTick(() => {\n          let column = this.$refs.xGrid.getColumnByField('sex')\n          column.editRender.options = [{\"label\":\"\",\"spell\":\"\",\"value\":\"\",\"value2\":null,\"val\":\"\"},{\"label\":\"男\",\"spell\":\"nan\",\"value\":\"1\",\"value2\":1,\"val\":\"x\"},{\"label\":\"女\",\"spell\":\"nv\",\"value\":\"0\",\"value2\":0,\"val\":\"o\"}]\n        })\n      // })\n    },\n    searchEvent () {\n      this.tablePage.currentPage = 1\n      this.findList()\n    },\n    handlePageChange ({ currentPage, pageSize }) {\n      this.tablePage.currentPage = currentPage\n      this.tablePage.pageSize = pageSize\n      this.findList()\n    }\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/grid/Footer\",\"name\":\"XtableDemo.grid.Footer\",\"head\":{\"label\":\"XtableDemo.grid.Footer.label\",\"description\":\"XtableDemo.grid.Footer.description\"},\"samples\":[{\"id\":\"XtableDemo.grid.Footer.sample1\",\"label\":\"XtableDemo.grid.Footer.sample1.label\",\"description\":\"XtableDemo.grid.Footer.sample1.description\",\"code\":\"<vue-xgrid\\nborder\\nstripe\\nresizable\\nshow-footer\\nheight=\\\"500\\\"\\n:footer-method=\\\"footerMethod\\\"\\n:columns=\\\"tableColumn\\\"\\n:data=\\\"tableData\\\"></vue-xgrid>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableColumn: [\\n        { type: 'index', width: 50 },\\n        { field: 'name', title: '姓名' },\\n        { field: 'sex', title: '性别' },\\n        { field: 'age', title: 'Age' },\\n        { field: 'rate', title: 'Rate' },\\n        { field: 'address', title: 'Address', showOverflow: true }\\n      ],\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\\n  },\\n\\n  methods: {\\n    footerMethod ({ columns, data }) {\\n      return [\\n        columns.map((column, columnIndex) => {\\n          if (columnIndex === 0) {\\n            return '和值'\\n          }\\n          if (VueUtil.includes(['age', 'rate'], column.property)) {\\n            return VueUtil.sum(data.map( data => data[column.property]))\\n          }\\n          return null\\n        }),\\n        columns.map((column, columnIndex) => {\\n          if (columnIndex === 0) {\\n            return '平均'\\n          }\\n          if (VueUtil.includes(['age', 'rate'], column.property)) {\\n            return VueUtil.mean(data.map( data => data[column.property]))\\n          }\\n          return null\\n        })\\n      ]\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xgrid\\n      border\\n      stripe\\n      resizable\\n      show-footer\\n      height=\\\"500\\\"\\n      :footer-method=\\\"footerMethod\\\"\\n      :columns=\\\"tableColumn\\\"\\n      :data=\\\"tableData\\\"></vue-xgrid></div>\",\"parameter\": {\n  data () {\n    return {\n      tableColumn: [\n        { type: 'index', width: 50 },\n        { field: 'name', title: '姓名' },\n        { field: 'sex', title: '性别' },\n        { field: 'age', title: 'Age' },\n        { field: 'rate', title: 'Rate' },\n        { field: 'address', title: 'Address', showOverflow: true }\n      ],\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\n  },\n\n  methods: {\n    footerMethod ({ columns, data }) {\n      return [\n        columns.map((column, columnIndex) => {\n          if (columnIndex === 0) {\n            return '和值'\n          }\n          if (VueUtil.includes(['age', 'rate'], column.property)) {\n            return VueUtil.sum(data.map( data => data[column.property]))\n          }\n          return null\n        }),\n        columns.map((column, columnIndex) => {\n          if (columnIndex === 0) {\n            return '平均'\n          }\n          if (VueUtil.includes(['age', 'rate'], column.property)) {\n            return VueUtil.mean(data.map( data => data[column.property]))\n          }\n          return null\n        })\n      ]\n    }\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/grid/FullEdit\",\"name\":\"XtableDemo.grid.FullEdit\",\"head\":{\"label\":\"XtableDemo.grid.FullEdit.label\",\"description\":\"XtableDemo.grid.FullEdit.description\"},\"samples\":[{\"id\":\"XtableDemo.grid.FullEdit.sample1\",\"label\":\"XtableDemo.grid.FullEdit.sample1.label\",\"description\":\"XtableDemo.grid.FullEdit.sample1.description\",\"code\":\"<vue-xgrid\\n  border\\n  resizable\\n  highlight-hover-row\\n  remote-filter\\n  ref=\\\"xGrid\\\"\\n  height=\\\"530\\\"\\n  row-id=\\\"id\\\"\\n  :pager-config=\\\"{pageSize: 15}\\\"\\n  :toolbar=\\\"tableToolbar\\\"\\n  :proxy-config=\\\"tableProxy\\\"\\n  :columns=\\\"tableColumn\\\"\\n  :checkbox-config=\\\"{reserve: true}\\\"\\n  :edit-rules=\\\"validRules\\\"\\n  :edit-config=\\\"{trigger: 'click', mode: 'row', showStatus: true}\\\">\\n</vue-xgrid>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      validRules: {\\n        name: [\\n          { required: true, message: '名称必须填写' },\\n          { min: 3, max: 50, message: '名称长度在 3 到 50 个字符' }\\n        ],\\n        role: [\\n          { required: true, message: '角色必须填写' }\\n        ]\\n      },\\n      tableProxy: {\\n        index: true, // 启用动态序号代理\\n        sort: true, // 启用排序代理\\n        filter: true, // 启用筛选代理\\n        props: {\\n          result: 'data.result',\\n          total: 'data.page.total'\\n        },\\n        ajax: {\\n          // 任何支持 Promise API 的库都可以对接（fetch、jquery、axios、xe-ajax）\\n          query: ({ page, sort, filters }) => {\\n            // 处理排序条件\\n            let formData = {\\n              sort: sort.property,\\n              order: sort.order\\n            }\\n            // 处理筛选条件\\n            filters.forEach(({ column, property, values }) => {\\n              formData[property] = values.join(',')\\n            })\\n            return Vue.http.get(`/api/user/page/list/${page.pageSize}/${page.currentPage}`, formData)\\n          },\\n          delete: ({ body }) => Vue.http.post('/api/user/save', body),\\n          save: ({ body }) => Vue.http.post('/api/user/save', body)\\n        }\\n      },\\n      tableToolbar: {\\n        id: 'full_edit_1',\\n        buttons: [\\n          { code: 'reload', name: '刷新', disabled: false },\\n          { code: 'insert_actived', name: '新增', disabled: false },\\n          {\\n            code: 'mark_cancel',\\n            name: '标记',\\n            disabled: false,\\n            dropdowns: [\\n              { code: 'delete_selection', name: '删除选中', disabled: false },\\n              { code: 'remove_selection', name: '移除数据', disabled: false }\\n            ]\\n          },\\n          { code: 'save', name: '保存', disabled: false },\\n          {\\n            name: '更多操作',\\n            disabled: false,\\n            dropdowns: [\\n              { code: 'reset_custom', name: '重置个性化信息', disabled: false }\\n            ]\\n          },\\n          {\\n            name: '导入/导出1',\\n            dropdowns: [\\n              { code: 'import', name: '直接导入', disabled: false },\\n              { code: 'export', name: '直接导出 CSV', params: { type: 'csv' }, disabled: false },\\n              { code: 'export', name: '直接导出 XML', params: { type: 'xml' }, disabled: false },\\n              { code: 'export', name: '直接导出 HTML', params: { type: 'html' }, disabled: false },\\n              { code: 'export', name: '直接导出 TXT', params: { type: 'txt' }, disabled: false }\\n            ]\\n          },\\n          {\\n            name: '导入/导出2',\\n            dropdowns: [\\n              { code: 'open_import', name: '高级导入', disabled: false },\\n              { code: 'open_export', name: '高级导出', disabled: false }\\n            ]\\n          },\\n        ],\\n        refresh: true,\\n        import: true,\\n        export: true,\\n        resizable: {\\n          storage: true\\n        },\\n        setting: {\\n          storage: true,\\n          checkMethod: this.checkColumnMethod\\n        }\\n      },\\n      tableColumn: [\\n        { type: 'checkbox', width: 50 },\\n        { type: 'index', title: '序号', width: 80 },\\n        { field: 'name', title: 'Name', remoteSort: true, editRender: { name: 'input' } },\\n        { field: 'nickname', title: 'Nickname', editRender: { name: 'input' } },\\n        { field: 'sex', title: 'Sex', editRender: { name: 'select', options: [] } },\\n        {\\n          field: 'role',\\n          title: 'Role',\\n          remoteSort: true,\\n          width: 200,\\n          filters: [\\n            { label: '前端', value: '前端' },\\n            { label: '后端', value: '后端' },\\n            { label: '测试', value: '测试' }\\n          ],\\n          filterMultiple: false,\\n          editRender: { name: 'input' }\\n        },\\n        { field: 'describe', title: 'Describe', showOverflow: true, editRender: { name: 'input' } }\\n      ],\\n\\n    }\\n  },\\n  created () {\\n    this.findSexList()\\n  },\\n\\n  methods: {\\n    findSexList () {\\n      return Vue.http.get('/api/conf/sex/list').then(data => {\\n        // 异步更新下拉选项\\n        let column = this.$refs.xGrid.getColumnByField('sex')\\n        column.editRender.options = data.data\\n      })\\n    },\\n    checkColumnMethod ({ column }) {\\n      if (VueUtil.includes(['nickname', 'role'], column.property)) {\\n        return false\\n      }\\n      return true\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xgrid\\n      border\\n      resizable\\n      highlight-hover-row\\n      remote-filter\\n      ref=\\\"xGrid\\\"\\n      height=\\\"530\\\"\\n      row-id=\\\"id\\\"\\n      :pager-config=\\\"{pageSize: 15}\\\"\\n      :toolbar=\\\"tableToolbar\\\"\\n      :proxy-config=\\\"tableProxy\\\"\\n      :columns=\\\"tableColumn\\\"\\n      :checkbox-config=\\\"{reserve: true}\\\"\\n      :edit-rules=\\\"validRules\\\"\\n      :edit-config=\\\"{trigger: 'click', mode: 'row', showStatus: true}\\\">\\n    </vue-xgrid></div>\",\"parameter\": {\n  data () {\n    return {\n      validRules: {\n        name: [\n          { required: true, message: '名称必须填写' },\n          { min: 3, max: 50, message: '名称长度在 3 到 50 个字符' }\n        ],\n        role: [\n          { required: true, message: '角色必须填写' }\n        ]\n      },\n      tableProxy: {\n        index: true, // 启用动态序号代理\n        sort: true, // 启用排序代理\n        filter: true, // 启用筛选代理\n        props: {\n          result: 'data.result',\n          total: 'data.page.total'\n        },\n        ajax: {\n          // 任何支持 Promise API 的库都可以对接（fetch、jquery、axios、xe-ajax）\n          query: ({ page, sort, filters }) => {\n            // 处理排序条件\n            let formData = {\n              sort: sort.property,\n              order: sort.order\n            }\n            // 处理筛选条件\n            filters.forEach(({ column, property, values }) => {\n              formData[property] = values.join(',')\n            })\n            return Vue.http.get(`/api/user/page/list/${page.pageSize}/${page.currentPage}`, formData)\n          },\n          delete: ({ body }) => Vue.http.post('/api/user/save', body),\n          save: ({ body }) => Vue.http.post('/api/user/save', body)\n        }\n      },\n      tableToolbar: {\n        id: 'full_edit_1',\n        buttons: [\n          { code: 'reload', name: '刷新', disabled: false },\n          { code: 'insert_actived', name: '新增', disabled: false },\n          {\n            code: 'mark_cancel',\n            name: '标记',\n            disabled: false,\n            dropdowns: [\n              { code: 'delete_selection', name: '删除选中', disabled: false },\n              { code: 'remove_selection', name: '移除数据', disabled: false }\n            ]\n          },\n          { code: 'save', name: '保存', disabled: false },\n          {\n            name: '更多操作',\n            disabled: false,\n            dropdowns: [\n              { code: 'reset_custom', name: '重置个性化信息', disabled: false }\n            ]\n          },\n          {\n            name: '导入/导出1',\n            dropdowns: [\n              { code: 'import', name: '直接导入', disabled: false },\n              { code: 'export', name: '直接导出 CSV', params: { type: 'csv' }, disabled: false },\n              { code: 'export', name: '直接导出 XML', params: { type: 'xml' }, disabled: false },\n              { code: 'export', name: '直接导出 HTML', params: { type: 'html' }, disabled: false },\n              { code: 'export', name: '直接导出 TXT', params: { type: 'txt' }, disabled: false }\n            ]\n          },\n          {\n            name: '导入/导出2',\n            dropdowns: [\n              { code: 'open_import', name: '高级导入', disabled: false },\n              { code: 'open_export', name: '高级导出', disabled: false }\n            ]\n          },\n        ],\n        refresh: true,\n        import: true,\n        export: true,\n        resizable: {\n          storage: true\n        },\n        setting: {\n          storage: true,\n          checkMethod: this.checkColumnMethod\n        }\n      },\n      tableColumn: [\n        { type: 'checkbox', width: 50 },\n        { type: 'index', title: '序号', width: 80 },\n        { field: 'name', title: 'Name', remoteSort: true, editRender: { name: 'input' } },\n        { field: 'nickname', title: 'Nickname', editRender: { name: 'input' } },\n        { field: 'sex', title: 'Sex', editRender: { name: 'select', options: [] } },\n        {\n          field: 'role',\n          title: 'Role',\n          remoteSort: true,\n          width: 200,\n          filters: [\n            { label: '前端', value: '前端' },\n            { label: '后端', value: '后端' },\n            { label: '测试', value: '测试' }\n          ],\n          filterMultiple: false,\n          editRender: { name: 'input' }\n        },\n        { field: 'describe', title: 'Describe', showOverflow: true, editRender: { name: 'input' } }\n      ],\n\n    }\n  },\n  created () {\n    this.findSexList()\n  },\n\n  methods: {\n    findSexList () {\n      return Vue.http.get('/api/conf/sex/list').then(data => {\n        // 异步更新下拉选项\n        let column = this.$refs.xGrid.getColumnByField('sex')\n        column.editRender.options = data.data\n      })\n    },\n    checkColumnMethod ({ column }) {\n      if (VueUtil.includes(['nickname', 'role'], column.property)) {\n        return false\n      }\n      return true\n    }\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/grid/FullQuery\",\"name\":\"XtableDemo.grid.FullQuery\",\"head\":{\"label\":\"XtableDemo.grid.FullQuery.label\",\"description\":\"XtableDemo.grid.FullQuery.description\"},\"samples\":[{\"id\":\"XtableDemo.grid.FullQuery.sample1\",\"label\":\"XtableDemo.grid.FullQuery.sample1.label\",\"description\":\"XtableDemo.grid.FullQuery.sample1.description\",\"code\":\"<vue-xgrid\\nref=\\\"xGrid\\\"\\nborder\\nresizable\\nremote-filter\\nheight=\\\"548\\\"\\nrow-id=\\\"id\\\"\\n:pager-config=\\\"{pageSize: 15}\\\"\\n:columns=\\\"tableColumn\\\"\\n:proxy-config=\\\"tableProxy\\\"\\n:checkbox-config=\\\"{reserve: true}\\\"\\n@select-change=\\\"selectChangeEvent\\\"></vue-xgrid>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableProxy: {\\n        index: true, // 启用动态序号代理\\n        sort: true, // 启用排序代理\\n        filter: true, // 启用筛选代理\\n        props: {\\n          result: 'data.result',\\n          total: 'data.page.total'\\n        },\\n        ajax: {\\n          query: ({ page, sort, filters }) => {\\n            // 处理排序条件\\n            let formData = {\\n              sort: sort.field,\\n              order: sort.order\\n            }\\n            // 处理筛选条件\\n            filters.forEach(({ column, field, values }) => {\\n              formData[field] = values.join(',')\\n            })\\n            return Vue.http.get(`/api/user/page/list/${page.pageSize}/${page.currentPage}`, formData)\\n          }\\n        }\\n      },\\n      tableColumn: [\\n        { type: 'checkbox', width: 50, fixed: 'left' },\\n        { type: 'index', width: 60, fixed: 'left' },\\n        { field: 'id', title: 'ID', width: 100, remoteSort: true },\\n        { field: 'name', title: 'Name', width: 300, remoteSort: true },\\n        { field: 'nickname', title: 'Nickname', remoteSort: true, width: 300 },\\n        { field: 'age', title: 'Age', remoteSort: true, width: 100 },\\n        {\\n          field: 'role',\\n          title: 'Role',\\n          remoteSort: true,\\n          width: 200,\\n          filters: [\\n            { label: '前端', value: '前端' },\\n            { label: '后端', value: '后端' },\\n            { label: '测试', value: '测试' }\\n          ],\\n          filterMultiple: false\\n        },\\n        { field: 'describe', title: 'Describe', width: 300, showOverflow: true }\\n      ],\\n\\n    }\\n  },\\n  methods: {\\n    selectChangeEvent ({ checked, row, reserves }) {\\n      console.log(checked ? '勾选事件' : '取消事件')\\n      console.log('其他分页勾选数据', reserves)\\n    },\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xgrid\\n      ref=\\\"xGrid\\\"\\n      border\\n      resizable\\n      remote-filter\\n      height=\\\"548\\\"\\n      row-id=\\\"id\\\"\\n      :pager-config=\\\"{pageSize: 15}\\\"\\n      :columns=\\\"tableColumn\\\"\\n      :proxy-config=\\\"tableProxy\\\"\\n      :checkbox-config=\\\"{reserve: true}\\\"\\n      @select-change=\\\"selectChangeEvent\\\"></vue-xgrid></div>\",\"parameter\": {\n  data () {\n    return {\n      tableProxy: {\n        index: true, // 启用动态序号代理\n        sort: true, // 启用排序代理\n        filter: true, // 启用筛选代理\n        props: {\n          result: 'data.result',\n          total: 'data.page.total'\n        },\n        ajax: {\n          query: ({ page, sort, filters }) => {\n            // 处理排序条件\n            let formData = {\n              sort: sort.field,\n              order: sort.order\n            }\n            // 处理筛选条件\n            filters.forEach(({ column, field, values }) => {\n              formData[field] = values.join(',')\n            })\n            return Vue.http.get(`/api/user/page/list/${page.pageSize}/${page.currentPage}`, formData)\n          }\n        }\n      },\n      tableColumn: [\n        { type: 'checkbox', width: 50, fixed: 'left' },\n        { type: 'index', width: 60, fixed: 'left' },\n        { field: 'id', title: 'ID', width: 100, remoteSort: true },\n        { field: 'name', title: 'Name', width: 300, remoteSort: true },\n        { field: 'nickname', title: 'Nickname', remoteSort: true, width: 300 },\n        { field: 'age', title: 'Age', remoteSort: true, width: 100 },\n        {\n          field: 'role',\n          title: 'Role',\n          remoteSort: true,\n          width: 200,\n          filters: [\n            { label: '前端', value: '前端' },\n            { label: '后端', value: '后端' },\n            { label: '测试', value: '测试' }\n          ],\n          filterMultiple: false\n        },\n        { field: 'describe', title: 'Describe', width: 300, showOverflow: true }\n      ],\n\n    }\n  },\n  methods: {\n    selectChangeEvent ({ checked, row, reserves }) {\n      console.log(checked ? '勾选事件' : '取消事件')\n      console.log('其他分页勾选数据', reserves)\n    },\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/grid/Group\",\"name\":\"XtableDemo.grid.Group\",\"head\":{\"label\":\"XtableDemo.grid.Group.label\",\"description\":\"XtableDemo.grid.Group.description\"},\"samples\":[{\"id\":\"XtableDemo.grid.Group.sample1\",\"label\":\"XtableDemo.grid.Group.sample1.label\",\"description\":\"XtableDemo.grid.Group.sample1.description\",\"code\":\"<vue-xgrid\\nborder\\nstripe\\nresizable\\nheight=\\\"500\\\"\\n:columns=\\\"tableColumn\\\"\\n:data=\\\"tableData\\\"></vue-xgrid>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableColumn: [\\n        { type: 'index', width: 50 },\\n        {\\n          title: '基本信息',\\n          children: [\\n            { field: 'name', title: 'Name' },\\n            {\\n              title: '其他信息',\\n              children: [\\n                { field: 'rate', title: 'Rate' },\\n                { field: 'age', title: 'Age' }\\n              ]\\n            },\\n            { field: 'sex', title: 'Sex' }\\n          ]\\n        },\\n        { field: 'address', title: 'Address', showOverflow: true }\\n      ],\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\\n  },\\n\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xgrid\\n      border\\n      stripe\\n      resizable\\n      height=\\\"500\\\"\\n      :columns=\\\"tableColumn\\\"\\n      :data=\\\"tableData\\\"></vue-xgrid></div>\",\"parameter\": {\n  data () {\n    return {\n      tableColumn: [\n        { type: 'index', width: 50 },\n        {\n          title: '基本信息',\n          children: [\n            { field: 'name', title: 'Name' },\n            {\n              title: '其他信息',\n              children: [\n                { field: 'rate', title: 'Rate' },\n                { field: 'age', title: 'Age' }\n              ]\n            },\n            { field: 'sex', title: 'Sex' }\n          ]\n        },\n        { field: 'address', title: 'Address', showOverflow: true }\n      ],\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\n  },\n\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/grid/Menu\",\"name\":\"XtableDemo.grid.Menu\",\"head\":{\"label\":\"XtableDemo.grid.Menu.label\",\"description\":\"XtableDemo.grid.Menu.description\"},\"samples\":[{\"id\":\"XtableDemo.grid.Menu.sample1\",\"label\":\"XtableDemo.grid.Menu.sample1.label\",\"description\":\"XtableDemo.grid.Menu.sample1.description\",\"code\":\"<vue-xgrid\\nborder\\nresizable\\nshow-footer\\nhighlight-current-row\\nref=\\\"xGrid\\\"\\n:footer-method=\\\"footerMethod\\\"\\n:columns=\\\"tableColumn\\\"\\n:data=\\\"tableData\\\"\\n:context-menu=\\\"{header: {options: headerMenus}, body: {options: bodyMenus}, footer: {options: footerMenus}, visibleMethod:visibleMethod}\\\"\\n@cell-context-menu=\\\"cellContextMenuEvent\\\"\\n@context-menu-click=\\\"contextMenuClickEvent\\\"></vue-xgrid>\\n\\n<script>\\n// import VueUtil.clipboard from 'xe-clipboard'\\n\\nnew Vue({\\n  data () {\\n    return {\\n      tableColumn: [\\n        { type: 'index', width: 50 },\\n        { field: 'name', title: '姓名' },\\n        { field: 'age', title: '年龄' },\\n        { field: 'address', title: 'Address', showOverflow: true }\\n      ],\\n      headerMenus: [\\n        [\\n          {\\n            code: 'exportAll',\\n            name: '导出所有.csv',\\n            visible: true,\\n            disabled: false\\n          }\\n        ]\\n      ],\\n      bodyMenus: [\\n        [\\n          {\\n            code: 'copy',\\n            name: '复制内容',\\n            visible: true,\\n            disabled: false,\\n            prefixIcon: 'fa fa-copy'\\n          },\\n          {\\n            code: 'clear',\\n            name: '清除内容',\\n            visible: true,\\n            disabled: false\\n          },\\n          {\\n            code: 'reload',\\n            name: '刷新表格',\\n            visible: true,\\n            disabled: false\\n          },\\n          {\\n            code: 'myExport',\\n            name: '导出.csv',\\n            visible: true,\\n            disabled: false,\\n            prefixIcon: 'fa fa-download'\\n          }\\n        ]\\n      ],\\n      footerMenus: [\\n        [\\n          {\\n            code: 'exportAll',\\n            name: '导出所有.csv',\\n            visible: true,\\n            disabled: false\\n          }\\n        ]\\n      ],\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 4)\\n  },\\n\\n  methods: {\\n    visibleMethod ({ type, options, column }) {\\n      // 示例：只有 name 列允许操作，清除按钮只能在 age 才显示\\n      // 显示之前处理按钮的操作权限\\n      let isDisabled = !column || column.property !== 'name'\\n      let isVisible = column && column.property === 'age'\\n      options.forEach(list => {\\n        list.forEach(item => {\\n          if (VueUtil.includes(['copy'], item.code)) {\\n            item.disabled = isDisabled\\n          }\\n          if (VueUtil.includes(['clear'], item.code)) {\\n            item.visible = isVisible\\n          }\\n        })\\n      })\\n      return true\\n    },\\n    cellContextMenuEvent ({ row }) {\\n      this.$refs.xGrid.setCurrentRow(row)\\n    },\\n    contextMenuClickEvent ({ menu, row, column }) {\\n      let xGrid = this.$refs.xGrid\\n      switch (menu.code) {\\n        case 'copy':\\n          if (row && column) {\\n            if (VueUtil.clipboard.copy(row[column.property])) {\\n              this.$notify.success({ message:'已复制到剪贴板！'});\\n            }\\n          }\\n          break\\n        case 'clear':\\n          xGrid.clearData(row, column.property)\\n          break\\n        case 'myExport':\\n          xGrid.exportData()\\n          break\\n      }\\n    },\\n    footerMethod ({ columns, data }) {\\n      return [\\n        columns.map((column, columnIndex) => {\\n          if (columnIndex === 0) {\\n            return '和值'\\n          }\\n          if (VueUtil.includes(['age'], column.property)) {\\n            return VueUtil.sum(data.map( data => data[column.property]))\\n          }\\n          return null\\n        })\\n      ]\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xgrid\\n      border\\n      resizable\\n      show-footer\\n      highlight-current-row\\n      ref=\\\"xGrid\\\"\\n      :footer-method=\\\"footerMethod\\\"\\n      :columns=\\\"tableColumn\\\"\\n      :data=\\\"tableData\\\"\\n      :context-menu=\\\"{header: {options: headerMenus}, body: {options: bodyMenus}, footer: {options: footerMenus}, visibleMethod:visibleMethod}\\\"\\n      @cell-context-menu=\\\"cellContextMenuEvent\\\"\\n      @context-menu-click=\\\"contextMenuClickEvent\\\"></vue-xgrid></div>\",\"parameter\":// import VueUtil.clipboard from 'xe-clipboard'\n\n {\n  data () {\n    return {\n      tableColumn: [\n        { type: 'index', width: 50 },\n        { field: 'name', title: '姓名' },\n        { field: 'age', title: '年龄' },\n        { field: 'address', title: 'Address', showOverflow: true }\n      ],\n      headerMenus: [\n        [\n          {\n            code: 'exportAll',\n            name: '导出所有.csv',\n            visible: true,\n            disabled: false\n          }\n        ]\n      ],\n      bodyMenus: [\n        [\n          {\n            code: 'copy',\n            name: '复制内容',\n            visible: true,\n            disabled: false,\n            prefixIcon: 'fa fa-copy'\n          },\n          {\n            code: 'clear',\n            name: '清除内容',\n            visible: true,\n            disabled: false\n          },\n          {\n            code: 'reload',\n            name: '刷新表格',\n            visible: true,\n            disabled: false\n          },\n          {\n            code: 'myExport',\n            name: '导出.csv',\n            visible: true,\n            disabled: false,\n            prefixIcon: 'fa fa-download'\n          }\n        ]\n      ],\n      footerMenus: [\n        [\n          {\n            code: 'exportAll',\n            name: '导出所有.csv',\n            visible: true,\n            disabled: false\n          }\n        ]\n      ],\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 4)\n  },\n\n  methods: {\n    visibleMethod ({ type, options, column }) {\n      // 示例：只有 name 列允许操作，清除按钮只能在 age 才显示\n      // 显示之前处理按钮的操作权限\n      let isDisabled = !column || column.property !== 'name'\n      let isVisible = column && column.property === 'age'\n      options.forEach(list => {\n        list.forEach(item => {\n          if (VueUtil.includes(['copy'], item.code)) {\n            item.disabled = isDisabled\n          }\n          if (VueUtil.includes(['clear'], item.code)) {\n            item.visible = isVisible\n          }\n        })\n      })\n      return true\n    },\n    cellContextMenuEvent ({ row }) {\n      this.$refs.xGrid.setCurrentRow(row)\n    },\n    contextMenuClickEvent ({ menu, row, column }) {\n      let xGrid = this.$refs.xGrid\n      switch (menu.code) {\n        case 'copy':\n          if (row && column) {\n            if (VueUtil.clipboard.copy(row[column.property])) {\n              this.$notify.success({ message:'已复制到剪贴板！'});\n            }\n          }\n          break\n        case 'clear':\n          xGrid.clearData(row, column.property)\n          break\n        case 'myExport':\n          xGrid.exportData()\n          break\n      }\n    },\n    footerMethod ({ columns, data }) {\n      return [\n        columns.map((column, columnIndex) => {\n          if (columnIndex === 0) {\n            return '和值'\n          }\n          if (VueUtil.includes(['age'], column.property)) {\n            return VueUtil.sum(data.map( data => data[column.property]))\n          }\n          return null\n        })\n      ]\n    }\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/grid/Page\",\"name\":\"XtableDemo.grid.Page\",\"head\":{\"label\":\"XtableDemo.grid.Page.label\",\"description\":\"XtableDemo.grid.Page.description\"},\"samples\":[{\"id\":\"XtableDemo.grid.Page.sample1\",\"label\":\"XtableDemo.grid.Page.sample1.label\",\"description\":\"XtableDemo.grid.Page.sample1.description\",\"code\":\"<vue-xgrid\\nborder\\nresizable\\nheight=\\\"530\\\"\\n:loading=\\\"loading\\\"\\n:start-index=\\\"(tablePage.currentPage - 1) * tablePage.pageSize\\\"\\n:pager-config=\\\"tablePage\\\"\\n:columns=\\\"tableColumn\\\"\\n:data=\\\"tableData\\\"\\n@page-change=\\\"handlePageChange\\\"></vue-xgrid>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      loading: false,\\n      tablePage: {\\n        total: 0,\\n        currentPage: 1,\\n        pageSize: 10,\\n        pageSizes: [10, 20, 50, 100, 200, 500]\\n      },\\n      tableColumn: [\\n        { type: 'index', width: 60 },\\n        { type: 'checkbox', width: 50 },\\n        { field: 'name', title: 'Name' },\\n        { field: 'nickname', title: 'Nickname' },\\n        { field: 'role', title: 'Role' },\\n        { field: 'describe', title: 'Describe', showOverflow: true }\\n      ],\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.findList()\\n  },\\n\\n  methods: {\\n    findList () {\\n      // 模拟后台接口\\n      this.loading = true\\n      Vue.http.get(`/api/user/page/list/${this.tablePage.pageSize}/${this.tablePage.currentPage}`).then(response => {\\n        let { page, result } = response.data\\n        this.tableData = result\\n        this.tablePage.total = page.total\\n        this.loading = false\\n      }).catch(e => {\\n        this.loading = false\\n      })\\n    },\\n    searchEvent () {\\n      this.tablePage.currentPage = 1\\n      this.findList()\\n    },\\n    handlePageChange ({ currentPage, pageSize }) {\\n      this.tablePage.currentPage = currentPage\\n      this.tablePage.pageSize = pageSize\\n      this.findList()\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xgrid\\n      border\\n      resizable\\n      height=\\\"530\\\"\\n      :loading=\\\"loading\\\"\\n      :start-index=\\\"(tablePage.currentPage - 1) * tablePage.pageSize\\\"\\n      :pager-config=\\\"tablePage\\\"\\n      :columns=\\\"tableColumn\\\"\\n      :data=\\\"tableData\\\"\\n      @page-change=\\\"handlePageChange\\\"></vue-xgrid></div>\",\"parameter\": {\n  data () {\n    return {\n      loading: false,\n      tablePage: {\n        total: 0,\n        currentPage: 1,\n        pageSize: 10,\n        pageSizes: [10, 20, 50, 100, 200, 500]\n      },\n      tableColumn: [\n        { type: 'index', width: 60 },\n        { type: 'checkbox', width: 50 },\n        { field: 'name', title: 'Name' },\n        { field: 'nickname', title: 'Nickname' },\n        { field: 'role', title: 'Role' },\n        { field: 'describe', title: 'Describe', showOverflow: true }\n      ],\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.findList()\n  },\n\n  methods: {\n    findList () {\n      // 模拟后台接口\n      this.loading = true\n      Vue.http.get(`/api/user/page/list/${this.tablePage.pageSize}/${this.tablePage.currentPage}`).then(response => {\n        let { page, result } = response.data\n        this.tableData = result\n        this.tablePage.total = page.total\n        this.loading = false\n      }).catch(e => {\n        this.loading = false\n      })\n    },\n    searchEvent () {\n      this.tablePage.currentPage = 1\n      this.findList()\n    },\n    handlePageChange ({ currentPage, pageSize }) {\n      this.tablePage.currentPage = currentPage\n      this.tablePage.pageSize = pageSize\n      this.findList()\n    }\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/grid/PageProxy\",\"name\":\"XtableDemo.grid.PageProxy\",\"head\":{\"label\":\"XtableDemo.grid.PageProxy.label\",\"description\":\"XtableDemo.grid.PageProxy.description\"},\"samples\":[{\"id\":\"XtableDemo.grid.PageProxy.sample1\",\"label\":\"XtableDemo.grid.PageProxy.sample1.label\",\"description\":\"XtableDemo.grid.PageProxy.sample1.description\",\"code\":\"<vue-xgrid\\nborder\\nresizable\\nheight=\\\"530\\\"\\nrow-id=\\\"id\\\"\\n:pager-config=\\\"{pageSize: 10}\\\"\\n:proxy-config=\\\"tableProxy\\\"\\n:checkbox-config=\\\"{reserve: true}\\\"\\n:columns=\\\"tableColumn\\\"></vue-xgrid>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableProxy: {\\n        index: true, // 启用动态序号代理（分页之后索引自动计算为当前页的起始序号）\\n        props: {\\n          result: 'data.result',\\n          total: 'data.page.total'\\n        },\\n        ajax: {\\n          // 任何支持 Promise API 的库都可以对接（fetch、jquery、axios、xe-ajax）\\n          query: ({ page }) => Vue.http.get(`/api/user/page/list/${page.pageSize}/${page.currentPage}`)\\n        }\\n      },\\n      tableColumn: [\\n        { type: 'checkbox', width: 50 },\\n        { type: 'index', width: 60 },\\n        { field: 'name', title: 'Name' },\\n        { field: 'nickname', title: 'Nickname' },\\n        { field: 'role', title: 'Role' },\\n        { field: 'describe', title: 'Describe', showOverflow: true }\\n      ],\\n\\n    }\\n  },\\n\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xgrid\\n      border\\n      resizable\\n      height=\\\"530\\\"\\n      row-id=\\\"id\\\"\\n      :pager-config=\\\"{pageSize: 10}\\\"\\n      :proxy-config=\\\"tableProxy\\\"\\n      :checkbox-config=\\\"{reserve: true}\\\"\\n      :columns=\\\"tableColumn\\\"></vue-xgrid></div>\",\"parameter\": {\n  data () {\n    return {\n      tableProxy: {\n        index: true, // 启用动态序号代理（分页之后索引自动计算为当前页的起始序号）\n        props: {\n          result: 'data.result',\n          total: 'data.page.total'\n        },\n        ajax: {\n          // 任何支持 Promise API 的库都可以对接（fetch、jquery、axios、xe-ajax）\n          query: ({ page }) => Vue.http.get(`/api/user/page/list/${page.pageSize}/${page.currentPage}`)\n        }\n      },\n      tableColumn: [\n        { type: 'checkbox', width: 50 },\n        { type: 'index', width: 60 },\n        { field: 'name', title: 'Name' },\n        { field: 'nickname', title: 'Nickname' },\n        { field: 'role', title: 'Role' },\n        { field: 'describe', title: 'Describe', showOverflow: true }\n      ],\n\n    }\n  },\n\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/grid/Proxy\",\"name\":\"XtableDemo.grid.Proxy\",\"head\":{\"label\":\"XtableDemo.grid.Proxy.label\",\"description\":\"XtableDemo.grid.Proxy.description\"},\"samples\":[{\"id\":\"XtableDemo.grid.Proxy.sample1\",\"label\":\"XtableDemo.grid.Proxy.sample1.label\",\"description\":\"XtableDemo.grid.Proxy.sample1.description\",\"code\":\"<vue-xgrid\\nborder\\nresizable\\nheight=\\\"530\\\"\\n:proxy-config=\\\"tableProxy\\\"\\n:columns=\\\"tableColumn\\\"></vue-xgrid>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableProxy: {\\n        ajax: {\\n          query: () => Vue.http.get('/api/user/list')\\n        },\\n        props: {\\n          list: 'data'\\n        }\\n      },\\n      tableColumn: [\\n        { type: 'checkbox', width: 50 },\\n        { type: 'index', width: 60 },\\n        { field: 'name', title: 'Name' },\\n        { field: 'nickname', title: 'Nickname' },\\n        { field: 'role', title: 'Role' },\\n        { field: 'describe', title: 'Describe', showOverflow: true }\\n      ],\\n\\n    }\\n  },\\n\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xgrid\\n      border\\n      resizable\\n      height=\\\"530\\\"\\n      :proxy-config=\\\"tableProxy\\\"\\n      :columns=\\\"tableColumn\\\"></vue-xgrid></div>\",\"parameter\": {\n  data () {\n    return {\n      tableProxy: {\n        ajax: {\n          query: () => Vue.http.get('/api/user/list')\n        },\n        props: {\n          list: 'data'\n        }\n      },\n      tableColumn: [\n        { type: 'checkbox', width: 50 },\n        { type: 'index', width: 60 },\n        { field: 'name', title: 'Name' },\n        { field: 'nickname', title: 'Nickname' },\n        { field: 'role', title: 'Role' },\n        { field: 'describe', title: 'Describe', showOverflow: true }\n      ],\n\n    }\n  },\n\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/grid/Reverse\",\"name\":\"XtableDemo.grid.Reverse\",\"head\":{\"label\":\"XtableDemo.grid.Reverse.label\",\"description\":\"XtableDemo.grid.Reverse.description\"},\"samples\":[{\"id\":\"XtableDemo.grid.Reverse.sample1\",\"label\":\"XtableDemo.grid.Reverse.sample1.label\",\"description\":\"XtableDemo.grid.Reverse.sample1.description\",\"code\":\"<vue-xgrid\\nborder\\nclass=\\\"reverse-table\\\"\\n:show-header=\\\"false\\\"\\n:columns=\\\"tableColumn\\\"\\n:data=\\\"tableData\\\"></vue-xgrid>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableColumn: [\\n        { field: 'name', title: 'Name' },\\n        { field: 'role', title: 'Role' },\\n        { field: 'sex', title: 'Sex' },\\n        { field: 'age', title: 'Age' },\\n        { field: 'date3', title: 'Date' }\\n      ],\\n      tableData: [],\\n      \\n\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\\n    this.reverseTable()\\n  },\\n\\n  methods: {\\n    // 反转函数\\n    reverseTable () {\\n      let tableData = this.tableData\\n      this.tableData = this.tableColumn.map(column => {\\n        let item = { 0: column.title }\\n        tableData.forEach((row, rowIndex) => {\\n          item[rowIndex + 1] = row[column.field]\\n        })\\n        return item\\n      })\\n      this.tableColumn = [{\\n        field: '0',\\n        fixed: 'left',\\n        width: 80\\n      }].concat(tableData.map((item, index) => {\\n        return {\\n          field: `${index + 1}`,\\n          minWidth: 120\\n        }\\n      }))\\n    },\\n  }\\n})\\n</script>\\n\\n<style>\\n.reverse-table .vue-xtable-body--row .vue-xtable-body--column:first-child {\\n  background-color: #f8f8f9;\\n}\\n</style>\",\"template\":\"<div class=\\\"source\\\">    <vue-xgrid\\n      border\\n      class=\\\"reverse-table\\\"\\n      :show-header=\\\"false\\\"\\n      :columns=\\\"tableColumn\\\"\\n      :data=\\\"tableData\\\"></vue-xgrid></div>\",\"parameter\": {\n  data () {\n    return {\n      tableColumn: [\n        { field: 'name', title: 'Name' },\n        { field: 'role', title: 'Role' },\n        { field: 'sex', title: 'Sex' },\n        { field: 'age', title: 'Age' },\n        { field: 'date3', title: 'Date' }\n      ],\n      tableData: [],\n      \n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\n    this.reverseTable()\n  },\n\n  methods: {\n    // 反转函数\n    reverseTable () {\n      let tableData = this.tableData\n      this.tableData = this.tableColumn.map(column => {\n        let item = { 0: column.title }\n        tableData.forEach((row, rowIndex) => {\n          item[rowIndex + 1] = row[column.field]\n        })\n        return item\n      })\n      this.tableColumn = [{\n        field: '0',\n        fixed: 'left',\n        width: 80\n      }].concat(tableData.map((item, index) => {\n        return {\n          field: `${index + 1}`,\n          minWidth: 120\n        }\n      }))\n    },\n  }\n}},{\"id\":\"XtableDemo.grid.Reverse.sample2\",\"label\":\"XtableDemo.grid.Reverse.sample2.label\",\"description\":\"XtableDemo.grid.Reverse.sample2.description\",\"code\":\"<vue-xgrid\\nborder\\nshow-overflow\\nclass=\\\"reverse-table\\\"\\nheight=\\\"400\\\"\\n:show-header=\\\"false\\\"\\n:columns=\\\"tableColumn2\\\"\\n:data=\\\"tableData2\\\"></vue-xgrid>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableColumn2: [\\n        { field: 'name', title: 'Name' },\\n        { field: 'role', title: 'Role' },\\n        { field: 'sex', title: 'Sex' },\\n        { field: 'age', title: 'Age' },\\n        { field: 'date2', title: 'Datetime' },\\n        { field: 'rate', title: 'Rate' },\\n        { field: 'address2', title: 'Address' },\\n        { field: 'date3', title: 'Date' },\\n        { field: 'updateTime', title: 'UpdateTime' },\\n        { field: 'createTime', title: 'CreateTime' }\\n      ],\\n      tableData2: [],\\n      \\n\\n    }\\n  },\\n  created () {\\n    this.tableData2 = window.MOCK_DATA_LIST.slice(0, 200)\\n    this.reverseTable2()\\n  },\\n\\n  methods: {\\n    // 反转函数\\n    reverseTable2 () {\\n      let tableData = this.tableData2\\n      this.tableData2 = this.tableColumn2.map(column => {\\n        let item = { 0: column.title }\\n        tableData.forEach((row, rowIndex) => {\\n          item[rowIndex + 1] = row[column.field]\\n        })\\n        return item\\n      })\\n      this.tableColumn2 = [{\\n        field: '0',\\n        fixed: 'left',\\n        width: 80\\n      }].concat(tableData.map((item, index) => {\\n        return {\\n          field: `${index + 1}`,\\n          minWidth: 120\\n        }\\n      }))\\n    }\\n  }\\n})\\n</script>\\n\\n<style>\\n.reverse-table .vue-xtable-body--row .vue-xtable-body--column:first-child {\\n  background-color: #f8f8f9;\\n}\\n</style>\",\"template\":\"<div class=\\\"source\\\">    <vue-xgrid\\n      border\\n      show-overflow\\n      class=\\\"reverse-table\\\"\\n      height=\\\"400\\\"\\n      :show-header=\\\"false\\\"\\n      :columns=\\\"tableColumn2\\\"\\n      :data=\\\"tableData2\\\"></vue-xgrid></div>\",\"parameter\": {\n  data () {\n    return {\n      tableColumn2: [\n        { field: 'name', title: 'Name' },\n        { field: 'role', title: 'Role' },\n        { field: 'sex', title: 'Sex' },\n        { field: 'age', title: 'Age' },\n        { field: 'date2', title: 'Datetime' },\n        { field: 'rate', title: 'Rate' },\n        { field: 'address2', title: 'Address' },\n        { field: 'date3', title: 'Date' },\n        { field: 'updateTime', title: 'UpdateTime' },\n        { field: 'createTime', title: 'CreateTime' }\n      ],\n      tableData2: [],\n      \n\n    }\n  },\n  created () {\n    this.tableData2 = window.MOCK_DATA_LIST.slice(0, 200)\n    this.reverseTable2()\n  },\n\n  methods: {\n    // 反转函数\n    reverseTable2 () {\n      let tableData = this.tableData2\n      this.tableData2 = this.tableColumn2.map(column => {\n        let item = { 0: column.title }\n        tableData.forEach((row, rowIndex) => {\n          item[rowIndex + 1] = row[column.field]\n        })\n        return item\n      })\n      this.tableColumn2 = [{\n        field: '0',\n        fixed: 'left',\n        width: 80\n      }].concat(tableData.map((item, index) => {\n        return {\n          field: `${index + 1}`,\n          minWidth: 120\n        }\n      }))\n    }\n  }\n}}],\"styles\":\".reverse-table .vue-xtable-body--row .vue-xtable-body--column:first-child {\\n  background-color: #f8f8f9;\\n}\"}","export default {\"path\":\"/XtableDemo/grid/Template\",\"name\":\"XtableDemo.grid.Template\",\"head\":{\"label\":\"XtableDemo.grid.Template.label\",\"description\":\"XtableDemo.grid.Template.description\"},\"samples\":[{\"id\":\"XtableDemo.grid.Template.sample1\",\"label\":\"XtableDemo.grid.Template.sample1.label\",\"description\":\"XtableDemo.grid.Template.sample1.description\",\"code\":\"<vue-xgrid\\n  border\\n  resizable\\n  height=\\\"400\\\"\\n  :toolbar=\\\"tableToolbar\\\"\\n  :columns=\\\"tableColumn\\\"\\n  :data=\\\"tableData\\\"\\n  :edit-config=\\\"{trigger: 'click', mode: 'cell'}\\\">\\n</vue-xgrid>\\n\\n<vue-dialog v-model=\\\"showDetails\\\" title=\\\"查看详情\\\" show-close>\\n  <template>\\n    <div v-if=\\\"selectRow\\\" v-html=\\\"selectRow.html3\\\"></div>\\n  </template>\\n</vue-dialog>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      showDetails: false,\\n      selectRow: null,\\n      tableData: [],\\n      tableColumn: [\\n        { type: 'index', width: 50 },\\n        {\\n          field: 'name',\\n          title: 'Name',\\n          slots: {\\n            default: ({ row, column }) => {\\n              return [\\n                <span style=\\\"color: red;\\\">{ row.name }</span>,\\n                <button onClick={ () => this.showDetailEvent(row, column) }>弹框</button>\\n              ]\\n            }\\n          }\\n        },\\n        {\\n          field: 'sex',\\n          title: 'Sex',\\n          showHeaderOverflow: true,\\n          filters: [{ data: '' }],\\n          filterMethod: this.filterSexMethod,\\n          editRender: { type: 'default' },\\n          slots: {\\n            default: ({ row, column }) => {\\n              return [\\n                <a class=\\\"link\\\" href=\\\"/\\\">我是超链接：{ row.sex }</a>\\n              ]\\n            },\\n            header: ({ column }) => {\\n              return [\\n                <span>\\n                  <i>@</i>\\n                  <span style=\\\"color: red;\\\" onClick={ this.headerClickEvent }>{ column.title }</span>\\n                </span>\\n              ]\\n            },\\n            filter: ({ column, context }) => {\\n              return column.filters.map(option => {\\n                return <input type=\\\"type\\\" value={ option.data } onInput={ evnt => this.changeFilterEvent(evnt, option, context) }/>\\n              })\\n            },\\n            edit: ({ row }) => {\\n              return [\\n                <input type=\\\"text\\\" value={ row.sex } onInput={ evnt => { row.sex = evnt.target.value } }/>\\n              ]\\n            }\\n          }\\n        },\\n        {\\n          field: 'address',\\n          title: 'Address',\\n          showOverflow: true,\\n          slots: {\\n            default: ({ row }, h) => {\\n              return [\\n                h('span', {\\n                  style: {\\n                    color: 'blue'\\n                  },\\n                  on: {\\n                    click: () => this.addressClickEvent(row)\\n                  }\\n                }, row.address)\\n              ]\\n            }\\n          }\\n        },\\n        {\\n          field: 'html1',\\n          title: 'Html片段',\\n          showOverflow: true,\\n          slots: {\\n            default: ({ row }, h) => {\\n              return [\\n                <span domPropsInnerHTML={ row.html1 }></span>\\n              ]\\n            }\\n          }\\n        },\\n        {\\n          field: 'img1',\\n          title: '图片路径',\\n          slots: {\\n            default: ({ row }, h) => {\\n              return [\\n                row.img1 ? <img src={ row.img1 } style=\\\"width: 100px;\\\"/> : <span>无</span>\\n              ]\\n            }\\n          }\\n        }\\n      ],\\n      tableToolbar: {\\n        setting: true,\\n        slots: {\\n          buttons: () => {\\n            return [\\n              <vue-checkbox>Option</vue-checkbox>,\\n              <vue-button>按钮1</vue-button>,\\n              <vue-button>按钮2</vue-button>\\n            ]\\n          }\\n        }\\n      },\\n    }\\n  },\\n  created () {\\n    let list = window.MOCK_DATA_LIST.slice(0, 100)\\n    this.tableData = list\\n  },\\n  mounted () {\\n    Array.from(this.$el.querySelectorAll('pre code')).forEach((block) => {\\n      hljs.highlightBlock(block)\\n    })\\n  },\\n  methods: {\\n    showDetailEvent (row) {\\n      this.selectRow = row\\n      this.showDetails = true\\n    },\\n    headerClickEvent (evnt) {\\n      this.$alert({message: '头部点击事件'})\\n    },\\n    addressClickEvent (row) {\\n      this.$alert({message: `address点击事件：${row.row}`})\\n    },\\n    filterSexMethod ({ option, row }) {\\n      return row.sex === option.data\\n    },\\n    changeFilterEvent (evnt, option, context) {\\n      option.data = evnt.target.value\\n      context.changeMultipleOption(evnt, !!option.data, option)\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xgrid\\n      border\\n      resizable\\n      height=\\\"400\\\"\\n      :toolbar=\\\"tableToolbar\\\"\\n      :columns=\\\"tableColumn\\\"\\n      :data=\\\"tableData\\\"\\n      :edit-config=\\\"{trigger: 'click', mode: 'cell'}\\\">\\n    </vue-xgrid>\\n\\n    <vue-dialog v-model=\\\"showDetails\\\" title=\\\"查看详情\\\" show-close>\\n      <template>\\n        <div v-if=\\\"selectRow\\\" v-html=\\\"selectRow.html3\\\"></div>\\n      </template>\\n    </vue-dialog></div>\",\"parameter\": {\n  data () {\n    return {\n      showDetails: false,\n      selectRow: null,\n      tableData: [],\n      tableColumn: [\n        { type: 'index', width: 50 },\n        {\n          field: 'name',\n          title: 'Name',\n          slots: {\n            default: ({ row, column }) => {\n              return [\n                <span style=\"color: red;\">{ row.name }</span>,\n                <button onClick={ () => this.showDetailEvent(row, column) }>弹框</button>\n              ]\n            }\n          }\n        },\n        {\n          field: 'sex',\n          title: 'Sex',\n          showHeaderOverflow: true,\n          filters: [{ data: '' }],\n          filterMethod: this.filterSexMethod,\n          editRender: { type: 'default' },\n          slots: {\n            default: ({ row, column }) => {\n              return [\n                <a class=\"link\" href=\"/\">我是超链接：{ row.sex }</a>\n              ]\n            },\n            header: ({ column }) => {\n              return [\n                <span>\n                  <i>@</i>\n                  <span style=\"color: red;\" onClick={ this.headerClickEvent }>{ column.title }</span>\n                </span>\n              ]\n            },\n            filter: ({ column, context }) => {\n              return column.filters.map(option => {\n                return <input type=\"type\" value={ option.data } onInput={ evnt => this.changeFilterEvent(evnt, option, context) }/>\n              })\n            },\n            edit: ({ row }) => {\n              return [\n                <input type=\"text\" value={ row.sex } onInput={ evnt => { row.sex = evnt.target.value } }/>\n              ]\n            }\n          }\n        },\n        {\n          field: 'address',\n          title: 'Address',\n          showOverflow: true,\n          slots: {\n            default: ({ row }, h) => {\n              return [\n                h('span', {\n                  style: {\n                    color: 'blue'\n                  },\n                  on: {\n                    click: () => this.addressClickEvent(row)\n                  }\n                }, row.address)\n              ]\n            }\n          }\n        },\n        {\n          field: 'html1',\n          title: 'Html片段',\n          showOverflow: true,\n          slots: {\n            default: ({ row }, h) => {\n              return [\n                <span domPropsInnerHTML={ row.html1 }></span>\n              ]\n            }\n          }\n        },\n        {\n          field: 'img1',\n          title: '图片路径',\n          slots: {\n            default: ({ row }, h) => {\n              return [\n                row.img1 ? <img src={ row.img1 } style=\"width: 100px;\"/> : <span>无</span>\n              ]\n            }\n          }\n        }\n      ],\n      tableToolbar: {\n        setting: true,\n        slots: {\n          buttons: () => {\n            return [\n              <vue-checkbox>Option</vue-checkbox>,\n              <vue-button>按钮1</vue-button>,\n              <vue-button>按钮2</vue-button>\n            ]\n          }\n        }\n      },\n    }\n  },\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 100)\n    this.tableData = list\n  },\n  mounted () {\n    Array.from(this.$el.querySelectorAll('pre code')).forEach((block) => {\n      hljs.highlightBlock(block)\n    })\n  },\n  methods: {\n    showDetailEvent (row) {\n      this.selectRow = row\n      this.showDetails = true\n    },\n    headerClickEvent (evnt) {\n      this.$alert({message: '头部点击事件'})\n    },\n    addressClickEvent (row) {\n      this.$alert({message: `address点击事件：${row.row}`})\n    },\n    filterSexMethod ({ option, row }) {\n      return row.sex === option.data\n    },\n    changeFilterEvent (evnt, option, context) {\n      option.data = evnt.target.value\n      context.changeMultipleOption(evnt, !!option.data, option)\n    }\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/grid/Toolbar\",\"name\":\"XtableDemo.grid.Toolbar\",\"head\":{\"label\":\"XtableDemo.grid.Toolbar.label\",\"description\":\"XtableDemo.grid.Toolbar.description\"},\"samples\":[{\"id\":\"XtableDemo.grid.Toolbar.sample1\",\"label\":\"XtableDemo.grid.Toolbar.sample1.label\",\"description\":\"XtableDemo.grid.Toolbar.sample1.description\",\"code\":\"<vue-xgrid\\nborder\\nresizable\\nheight=\\\"530\\\"\\n:pager-config=\\\"tablePage\\\"\\n:proxy-config=\\\"tableProxy\\\"\\n:columns=\\\"tableColumn\\\"\\n:toolbar=\\\"tableToolbar\\\"\\n:edit-config=\\\"{trigger: 'click', mode: 'row', showStatus: true}\\\"\\n@toolbar-button-click=\\\"toolbarButtonClickEvent\\\"></vue-xgrid>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tablePage: {\\n        pageSize: 15\\n      },\\n      tableProxy: {\\n        props: {\\n          result: 'data.result',\\n          total: 'data.page.total'\\n        },\\n        ajax: {\\n          // page 对象： { pageSize, currentPage }\\n          query: ({ page }) => Vue.http.get(`/api/user/page/list/${page.pageSize}/${page.currentPage}`),\\n          // body 对象： { removeRecords }\\n          delete: ({ body }) => Vue.http.post('/api/user/save', body),\\n          // body 对象： { insertRecords, updateRecords, removeRecords, pendingRecords }\\n          save: ({ body }) => Vue.http.post('/api/user/save', body)\\n        }\\n      },\\n      tableToolbar: {\\n        id: 'toolbar_demo_1',\\n        buttons: [\\n          { code: 'insert_actived', name: '新增' },\\n          {\\n            code: 'mark_cancel',\\n            name: '标记',\\n            dropdowns: [\\n              { code: 'delete_selection', name: '删除选中' },\\n              { code: 'remove_selection', name: '移除数据' }\\n            ]\\n          },\\n          { code: 'save', name: '保存' },\\n          {\\n            name: '数据导出',\\n            dropdowns: [\\n              { code: 'open_import', name: '高级导入' },\\n              { code: 'open_export', name: '高级导出' }\\n            ]\\n          },\\n          { code: 'exportData111', name: '自定义按钮' }\\n        ],\\n        export: true,\\n        refresh: true,\\n        resizable: {\\n          storage: true\\n        },\\n        setting: {\\n          storage: true\\n        }\\n      },\\n      tableColumn: [\\n        { type: 'checkbox', width: 50 },\\n        { type: 'index', width: 60 },\\n        { field: 'name', title: 'Name', editRender: { name: 'input' } },\\n        { field: 'nickname', title: 'Nickname', editRender: { name: 'input' } },\\n        { field: 'role', title: 'Role', editRender: { name: 'input' } },\\n        { field: 'describe', title: 'Describe', showOverflow: true, editRender: { name: 'input' } }\\n      ],\\n\\n    }\\n  },\\n\\n  methods: {\\n    toolbarButtonClickEvent ({ code }, event) {\\n      switch (code) {\\n        case 'myBtn':\\n          this.$alert({ message: code })\\n          break\\n      }\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xgrid\\n      border\\n      resizable\\n      height=\\\"530\\\"\\n      :pager-config=\\\"tablePage\\\"\\n      :proxy-config=\\\"tableProxy\\\"\\n      :columns=\\\"tableColumn\\\"\\n      :toolbar=\\\"tableToolbar\\\"\\n      :edit-config=\\\"{trigger: 'click', mode: 'row', showStatus: true}\\\"\\n      @toolbar-button-click=\\\"toolbarButtonClickEvent\\\"></vue-xgrid></div>\",\"parameter\": {\n  data () {\n    return {\n      tablePage: {\n        pageSize: 15\n      },\n      tableProxy: {\n        props: {\n          result: 'data.result',\n          total: 'data.page.total'\n        },\n        ajax: {\n          // page 对象： { pageSize, currentPage }\n          query: ({ page }) => Vue.http.get(`/api/user/page/list/${page.pageSize}/${page.currentPage}`),\n          // body 对象： { removeRecords }\n          delete: ({ body }) => Vue.http.post('/api/user/save', body),\n          // body 对象： { insertRecords, updateRecords, removeRecords, pendingRecords }\n          save: ({ body }) => Vue.http.post('/api/user/save', body)\n        }\n      },\n      tableToolbar: {\n        id: 'toolbar_demo_1',\n        buttons: [\n          { code: 'insert_actived', name: '新增' },\n          {\n            code: 'mark_cancel',\n            name: '标记',\n            dropdowns: [\n              { code: 'delete_selection', name: '删除选中' },\n              { code: 'remove_selection', name: '移除数据' }\n            ]\n          },\n          { code: 'save', name: '保存' },\n          {\n            name: '数据导出',\n            dropdowns: [\n              { code: 'open_import', name: '高级导入' },\n              { code: 'open_export', name: '高级导出' }\n            ]\n          },\n          { code: 'exportData111', name: '自定义按钮' }\n        ],\n        export: true,\n        refresh: true,\n        resizable: {\n          storage: true\n        },\n        setting: {\n          storage: true\n        }\n      },\n      tableColumn: [\n        { type: 'checkbox', width: 50 },\n        { type: 'index', width: 60 },\n        { field: 'name', title: 'Name', editRender: { name: 'input' } },\n        { field: 'nickname', title: 'Nickname', editRender: { name: 'input' } },\n        { field: 'role', title: 'Role', editRender: { name: 'input' } },\n        { field: 'describe', title: 'Describe', showOverflow: true, editRender: { name: 'input' } }\n      ],\n\n    }\n  },\n\n  methods: {\n    toolbarButtonClickEvent ({ code }, event) {\n      switch (code) {\n        case 'myBtn':\n          this.$alert({ message: code })\n          break\n      }\n    }\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/grid/Tree\",\"name\":\"XtableDemo.grid.Tree\",\"head\":{\"label\":\"XtableDemo.grid.Tree.label\",\"description\":\"XtableDemo.grid.Tree.description\"},\"samples\":[{\"id\":\"XtableDemo.grid.Tree.sample1\",\"label\":\"XtableDemo.grid.Tree.sample1.label\",\"description\":\"XtableDemo.grid.Tree.sample1.description\",\"code\":\"<vue-xgrid\\nborder\\nresizable\\n:proxy-config=\\\"tableProxy\\\"\\n:columns=\\\"tableColumn\\\"\\n:tree-config=\\\"{children: 'children'}\\\"></vue-xgrid>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableProxy: {\\n        ajax: {\\n          // 处理树结构转换\\n          query: () => Vue.http.get('/api/file/list').then(data => VueUtil.toArrayTree(data.body, { key: 'id', parentKey: 'parentId', children: 'children' }))\\n        }\\n      },\\n      tableColumn: [\\n        { field: 'id', title: 'ID', width: 120, treeNode: true },\\n        { field: 'name', title: '名称' },\\n        { field: 'size', title: '大小' },\\n        { field: 'createTime', title: '创建时间', formatter: this.formatterDate },\\n        { field: 'updateTime', title: '修改时间', formatter: this.formatterDate }\\n      ],\\n\\n    }\\n  },\\n\\n  methods: {\\n    formatterDate ({ cellValue }) {\\n      return VueUtil.formatDate(cellValue, 'yyyy-MM-dd HH:mm:ss')\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xgrid\\n      border\\n      resizable\\n      :proxy-config=\\\"tableProxy\\\"\\n      :columns=\\\"tableColumn\\\"\\n      :tree-config=\\\"{children: 'children'}\\\"></vue-xgrid></div>\",\"parameter\": {\n  data () {\n    return {\n      tableProxy: {\n        ajax: {\n          // 处理树结构转换\n          query: () => Vue.http.get('/api/file/list').then(data => VueUtil.toArrayTree(data.body, { key: 'id', parentKey: 'parentId', children: 'children' }))\n        }\n      },\n      tableColumn: [\n        { field: 'id', title: 'ID', width: 120, treeNode: true },\n        { field: 'name', title: '名称' },\n        { field: 'size', title: '大小' },\n        { field: 'createTime', title: '创建时间', formatter: this.formatterDate },\n        { field: 'updateTime', title: '修改时间', formatter: this.formatterDate }\n      ],\n\n    }\n  },\n\n  methods: {\n    formatterDate ({ cellValue }) {\n      return VueUtil.formatDate(cellValue, 'yyyy-MM-dd HH:mm:ss')\n    }\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/grid/TreeEdit\",\"name\":\"XtableDemo.grid.TreeEdit\",\"head\":{\"label\":\"XtableDemo.grid.TreeEdit.label\",\"description\":\"XtableDemo.grid.TreeEdit.description\"},\"samples\":[{\"id\":\"XtableDemo.grid.TreeEdit.sample1\",\"label\":\"XtableDemo.grid.TreeEdit.sample1.label\",\"description\":\"XtableDemo.grid.TreeEdit.sample1.description\",\"code\":\"<vue-xgrid\\nresizable\\nhighlight-hover-row\\n:proxy-config=\\\"tableProxy\\\"\\n:columns=\\\"tableColumn\\\"\\n:toolbar=\\\"tableToolbar\\\"\\n:checkbox-config=\\\"{labelField: 'id'}\\\"\\n:tree-config=\\\"{children: 'children'}\\\"\\n:edit-config=\\\"{trigger: 'click', mode: 'row', showStatus: true}\\\"></vue-xgrid>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableProxy: {\\n        ajax: {\\n          // 处理树结构转换\\n          query: () => Vue.http.get('/api/file/list').then(data => VueUtil.toArrayTree(data.body, { key: 'id', parentKey: 'parentId', children: 'children' })),\\n          save: ({ body }) => Vue.http.post('/api/file/save', body)\\n        }\\n      },\\n      tableToolbar: {\\n        id: 'treeEdit_demo1',\\n        buttons: [\\n          { code: 'reload', name: '刷新', disabled: false },\\n          { code: 'mark_cancel', name: '标记/取消', disabled: false },\\n          { code: 'save', name: '保存', disabled: false },\\n          { code: 'export', name: '导出.csv', disabled: false },\\n          { code: 'other0', name: '禁用的按钮1', disabled: true },\\n          {\\n            name: '禁用下拉按钮',\\n            disabled: false,\\n            dropdowns: [\\n              {\\n                code: 'other1',\\n                name: '下拉的按钮1',\\n                disabled: false\\n              },\\n              {\\n                code: 'other2',\\n                name: '下拉的按钮2',\\n                disabled: true\\n              },\\n              {\\n                code: 'other3',\\n                name: '下拉的按钮3',\\n                disabled: false\\n              }\\n            ]\\n          }\\n        ],\\n        refresh: true,\\n        resizable: {\\n          storage: true\\n        },\\n        setting: {\\n          storage: true\\n        }\\n      },\\n      tableColumn: [\\n        { type: 'checkbox', title: '全选', width: 180, treeNode: true },\\n        { field: 'name', title: '名称', editRender: { name: 'input' } },\\n        { field: 'size', title: '大小', editRender: { name: 'input' } },\\n        { field: 'createTime', title: '创建时间', formatter: this.formatterDate },\\n        { field: 'updateTime', title: '更新时间', formatter: this.formatterDate }\\n      ],\\n\\n    }\\n  },\\n\\n  methods: {\\n    formatterDate ({ cellValue }) {\\n      return VueUtil.formatDate(cellValue, 'yyyy-MM-dd HH:mm:ss')\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xgrid\\n      resizable\\n      highlight-hover-row\\n      :proxy-config=\\\"tableProxy\\\"\\n      :columns=\\\"tableColumn\\\"\\n      :toolbar=\\\"tableToolbar\\\"\\n      :checkbox-config=\\\"{labelField: 'id'}\\\"\\n      :tree-config=\\\"{children: 'children'}\\\"\\n      :edit-config=\\\"{trigger: 'click', mode: 'row', showStatus: true}\\\"></vue-xgrid></div>\",\"parameter\": {\n  data () {\n    return {\n      tableProxy: {\n        ajax: {\n          // 处理树结构转换\n          query: () => Vue.http.get('/api/file/list').then(data => VueUtil.toArrayTree(data.body, { key: 'id', parentKey: 'parentId', children: 'children' })),\n          save: ({ body }) => Vue.http.post('/api/file/save', body)\n        }\n      },\n      tableToolbar: {\n        id: 'treeEdit_demo1',\n        buttons: [\n          { code: 'reload', name: '刷新', disabled: false },\n          { code: 'mark_cancel', name: '标记/取消', disabled: false },\n          { code: 'save', name: '保存', disabled: false },\n          { code: 'export', name: '导出.csv', disabled: false },\n          { code: 'other0', name: '禁用的按钮1', disabled: true },\n          {\n            name: '禁用下拉按钮',\n            disabled: false,\n            dropdowns: [\n              {\n                code: 'other1',\n                name: '下拉的按钮1',\n                disabled: false\n              },\n              {\n                code: 'other2',\n                name: '下拉的按钮2',\n                disabled: true\n              },\n              {\n                code: 'other3',\n                name: '下拉的按钮3',\n                disabled: false\n              }\n            ]\n          }\n        ],\n        refresh: true,\n        resizable: {\n          storage: true\n        },\n        setting: {\n          storage: true\n        }\n      },\n      tableColumn: [\n        { type: 'checkbox', title: '全选', width: 180, treeNode: true },\n        { field: 'name', title: '名称', editRender: { name: 'input' } },\n        { field: 'size', title: '大小', editRender: { name: 'input' } },\n        { field: 'createTime', title: '创建时间', formatter: this.formatterDate },\n        { field: 'updateTime', title: '更新时间', formatter: this.formatterDate }\n      ],\n\n    }\n  },\n\n  methods: {\n    formatterDate ({ cellValue }) {\n      return VueUtil.formatDate(cellValue, 'yyyy-MM-dd HH:mm:ss')\n    }\n  }\n}}],\"styles\":\"\"}","'use strict';\r\nrequire('./mock-data')\r\n\r\n// ---------批量加载demo页-------\r\nvar context = require.context(\"./\", true, /\\.vue$/);\r\n\r\nfunction addcss(css){\r\n  var head = document.getElementsByTagName('head')[0];\r\n  var s = document.createElement('style');\r\n  s.setAttribute('type', 'text/css');\r\n  if (s.styleSheet) {   // IE\r\n      s.styleSheet.cssText = css;\r\n  } else {                // the world\r\n      s.appendChild(document.createTextNode(css));\r\n  }\r\n  head.appendChild(s);\r\n}\r\n\r\nvar demos = {};\r\nvar tempCss = '';\r\n\r\ncontext.keys().forEach(function(key) {\r\n  var demo = context(key).default;\r\n\r\n  var category = demo.name.split('.')[1];\r\n  if (!demos[category]) {\r\n    demos[category] = {\r\n      head: {\r\n        label: 'XtableDemo.' + category + '.label',\r\n      },\r\n      children: []\r\n    }\r\n  }\r\n  demos[category].children.push(demo);\r\n\r\n  if(demo.styles.trim()) {\r\n    tempCss += demo.styles;\r\n  }\r\n})\r\n\r\n// 添加demo里的css到head\r\naddcss(tempCss);\r\n\r\n// 小分类排序\r\nvar orders = {\r\n  base: ['Basic', 'Size', 'Overflow', 'Stripe', 'Border', 'Style', 'Index', 'DynamicStyle', 'Header', 'Resizable', 'MaxHeight', 'AutoHeight', 'Height', 'Fixed', 'FixedFull', 'Group', 'HeaderHighlight', 'Current', 'Radio', 'Selection', 'Sort', 'Filter', 'Empty', 'Loading', 'Format'],\r\n  advanced: ['Event', 'Template', 'Dynamic', 'ManualFilter', 'Span', 'SpanRow', 'Footer', 'FooterSpan', 'Import', 'Export', 'Print', 'FixedType', 'Menu', 'MenuPrivilege', 'Expand', 'Toolbar', 'Custom', 'CustomStorage', 'CustomlWidthStorage', 'Search', 'Page', 'Highlight', 'CopyPaste', 'ColumnDrag', 'RowDrag'],\r\n  tree: ['Basic', 'Radio', 'Selection', 'Fixed', 'Expand', 'CellValid', 'Edit', 'Toolbar', 'Insert', 'Menu', 'Highlight', 'Lazy', 'RowValid', 'ForceCellValid', 'ForceRowValid', 'FullEdit', 'GroupBy', 'Keyboard', 'Span', 'Template'],\r\n  edit: ['Manual', 'Click', 'DBLClick', 'Select', 'AutoClear', 'Insert', 'Remove', 'Revert', 'Status', 'CellDisable', 'RowDisable', 'CellValid', 'RowValid', 'ForceCellValid', 'ForceRowValid', 'Keyboard', 'Footer', 'FooterImmediately', 'Expand', 'Menu', 'Span', 'UniqueSelect', 'CascadingSelect', 'Events', 'Template', 'Full'],\r\n  grid: ['Basic', 'Group', 'Reverse', 'Template', 'Footer', 'Page', 'Proxy', 'PageProxy', 'Edit', 'Toolbar', 'CustomToolbar', 'Dynamic', 'Menu', 'Tree', 'TreeEdit', 'FullQuery', 'FullEdit', 'Span', ],\r\n  scroll: ['Scroll', 'Highlight', 'Keyboard', 'Edit', 'CellValid', 'RowValid', 'PartialLoad', 'FullPartialLoad', 'Template', 'ForceCellValid', 'ForceRowValid', 'ScrollRows', 'ScrollCols', 'ScrollFullRows', 'ScrollFullCols', 'Tree']\r\n}\r\n\r\nVueUtil.keys(demos).forEach(function(key) {\r\n  var order = orders[key];\r\n  var demo = demos[key];\r\n  demo.children.sort(function(a, b) {\r\n    if (!order) {\r\n      return 0;\r\n    }\r\n    var aKey = VueUtil.last(a.name.split('.'));\r\n    var bKey = VueUtil.last(b.name.split('.'));\r\n    var aIndex = order.indexOf(aKey) >= 0 ? order.indexOf(aKey) : 999;\r\n    var bIndex = order.indexOf(bKey) >= 0 ? order.indexOf(bKey) : 999;\r\n    return aIndex - bIndex;\r\n  })\r\n})\r\n\r\n// 大分类\r\nvar XtableDemo = {\r\n  head: {\r\n    label: 'XtableDemo.label',\r\n  },\r\n  // 中分类排序\r\n  children: [demos.base, demos.advanced, demos.grid, demos.tree, demos.scroll, demos.edit]\r\n};\r\n\r\nmodule.exports = XtableDemo;\r\n","if (!String.prototype.repeat) {\r\n    String.prototype.repeat = function(count) {\r\n      'use strict';\r\n      if (this == null)\r\n        throw new TypeError('can\\'t convert ' + this + ' to object');\r\n  \r\n      var str = '' + this;\r\n      // To convert string to integer.\r\n      count = +count;\r\n      // Check NaN\r\n      if (count != count)\r\n        count = 0;\r\n  \r\n      if (count < 0)\r\n        throw new RangeError('repeat count must be non-negative');\r\n  \r\n      if (count == Infinity)\r\n        throw new RangeError('repeat count must be less than infinity');\r\n  \r\n      count = Math.floor(count);\r\n      if (str.length == 0 || count == 0)\r\n        return '';\r\n  \r\n      // Ensuring count is a 31-bit integer allows us to heavily optimize the\r\n      // main part. But anyway, most current (August 2014) browsers can't handle\r\n      // strings 1 << 28 chars or longer, so:\r\n      if (str.length * count >= 1 << 28)\r\n        throw new RangeError('repeat count must not overflow maximum string size');\r\n  \r\n      var maxCount = str.length * count;\r\n      count = Math.floor(Math.log(count) / Math.log(2));\r\n      while (count) {\r\n         str += str;\r\n         count--;\r\n      }\r\n      str += str.substring(0, maxCount - str.length);\r\n      return str;\r\n    }\r\n  }\r\n  \r\nfunction shuffle(a) {\r\n    var j, x, i;\r\n    for (i = a.length - 1; i > 0; i--) {\r\n        j = Math.floor(Math.random() * (i + 1));\r\n        x = a[i];\r\n        a[i] = a[j];\r\n        a[j] = x;\r\n    }\r\n    return a;\r\n}\r\n\r\n// 后台异步生成1万模拟数据\r\nvar columns = window.MOCK_COLUMN_LIST = [];\r\nvar list = window.MOCK_DATA_LIST = [];\r\nvar currTime = Date.now();\r\nvar fullIndex = 0;\r\nvar size = 100000;\r\nvar nameList = shuffle(['a', 'T', 'b', 'v', 'G', 'k', 'r', 'H', 'x', 'z', 'c', 'd', 'e', 'p', 'U', 'f', 's', 'N']);\r\nvar nickList = shuffle(['徐', '李', '雷', '赵', '马', '孙', '钱', '蒋', '老', '蔡', '吕', '项', '徐', '杨', '胡', '杜', '嬴', '叼']);\r\n\r\nfunction mockData() {\r\n    var len = VueUtil.isIE ? 500 : 2000;\r\n\r\n    for (var index = 0; index < len; index++) {\r\n        currTime += 7200000;\r\n        fullIndex++;\r\n\r\n        if (columns.length < 10000) {\r\n            var colItem = {\r\n                field: fullIndex % 2 === 0 ? 'age' : fullIndex % 3 === 0 ? 'rate' : 'name',\r\n                title: 'cloumn_' + fullIndex,\r\n                width: fullIndex % 6 === 0 ? 340 : index % 4 === 0 ? 260 : index % 3 === 0 ? 120 : 160,\r\n                resizable: true\r\n            };\r\n\r\n            if (fullIndex === 0) {\r\n                colItem.width = 100;\r\n            }\r\n\r\n            if (fullIndex === 1) {\r\n                colItem.type = 'checkbox';\r\n                colItem.title = '多选';\r\n            } else if (fullIndex === 2) {\r\n                colItem.type = 'index';\r\n                colItem.title = '序号';\r\n            }\r\n\r\n            if (fullIndex < 4) {\r\n                colItem.fixed = 'left';\r\n                colItem.sortable = true;\r\n            } else if (fullIndex === 5) {\r\n                colItem.filters = [{\r\n                    label: 'id < 100',\r\n                    value: 100\r\n                }, {\r\n                    label: 'id < 2000',\r\n                    value: 2000\r\n                }];\r\n\r\n                colItem.filterMethod = function (_ref) {\r\n                    var value = _ref.value,\r\n                        row = _ref.row,\r\n                        column = _ref.column;\r\n                    return row.id < value;\r\n                };\r\n            }\r\n\r\n            columns.push(colItem);\r\n        }\r\n\r\n        var date = new Date(currTime);\r\n        // var mDate = moment(currTime);\r\n        list.push({\r\n            id: fullIndex,\r\n            name: nameList[fullIndex % 10] + nameList[fullIndex % 5] + fullIndex,\r\n            nickname: nickList[fullIndex % 10] + nickList[fullIndex % 5] + fullIndex,\r\n            role: index % 2 === 0 ? '前端' : '后端',\r\n            role1: index === 1 ? '1' : '',\r\n            key: 'home.label.key' + Math.max(0, index % 2 === 0 ? index - 1 : index),\r\n            language: index % 2 === 0 ? 'zh_CN' : 'en_US',\r\n            content: index % 2 === 0 ? '内容' + index : 'Content' + index,\r\n            checked: false,\r\n            flag: index % 2 === 0,\r\n            date: date,\r\n            date1: date,\r\n            date2: '09:00:00',\r\n            date3: index % 3 === 0 ? VueUtil.formatDate(currTime, 'yyyy-MM-dd') : '',\r\n            date4: date,\r\n            date5: '09:00',\r\n            date6: null,\r\n            // date7: mDate,\r\n            // date8: mDate,\r\n            // date9: mDate,\r\n            // date10: mDate,\r\n            date11: [],\r\n            date12: index % 3 === 0 ? VueUtil.formatDate(currTime - 666, 'yyyy-MM-dd') : '',\r\n            date13: index % 4 === 0 ? VueUtil.formatDate(currTime - 9999, 'yyyy-MM-dd') : '',\r\n            num: (0.234 * index).toFixed(0),\r\n            num1: (0.185 * index).toFixed(0),\r\n            num2: (0.567 * index).toFixed(1),\r\n            num3: (0.789 * index).toFixed(1),\r\n            num4: (0.348 * index).toFixed(2),\r\n            num5: (0.967 * index).toFixed(2),\r\n            num6: ''.concat((0.234 * index).toFixed(0)),\r\n            color: index % 4 === 0 ? 'rgba(255, 0, 0, 0.8)' : index % 3 === 0 ? 'rgba(0, 255, 0, 0.8)' : null,\r\n            slider: index % 5 === 0 ? 40 : index % 4 === 0 ? 20 : index % 3 === 0 ? 60 : 0,\r\n            list: [],\r\n            time: currTime + 360000,\r\n            sex: index % 3 ? '0' : '1',\r\n            sex1: index % 3 ? ['0'] : index % 4 ? ['0', '1'] : index % 5 ? [] : ['1'],\r\n            sex2: index % 4 ? '0' : '1',\r\n            sex3: index % 3 ? 0 : 1,\r\n            sex4: index % 4 ? 0 : 1,\r\n            sex5: index % 5 ? '0' : '1',\r\n            age: index % 6 === 0 ? 18 : index % 4 === 0 ? 26 : index % 3 === 0 ? 28 : 30,\r\n            age1: ''.concat(index % 6 === 0 ? 18 : index % 4 === 0 ? 26 : index % 3 === 0 ? 28 : 30),\r\n            region: index % 4 === 0 ? [19, 199, 1773] : index % 3 === 0 ? [9, 73, 719] : [1, 1, 5],\r\n            rate: index % 4 === 0 ? 2 : index % 3 === 0 ? 3 : 0,\r\n            rate1: ''.concat(index % 4 === 0 ? 2 : index % 3 === 0 ? 3 : 0),\r\n            address: '地址 地址地址 地址地址 址地址 址地址  址地址 址地址址地址址地址 地址'.concat(index),\r\n            address2: '地址 地址地址 地址'.concat(index),\r\n            img: 'https://spring21cn.github.io/vue-component/image/logo.png',\r\n            img1: index % 4 === 0 ? 'https://spring21cn.github.io/vue-component/image/logo.png' : '',\r\n            html1: index % 3 === 0 ? '<span style=\"color:red;\">我是一段Html代码</span><br><span style=\"color:blue;\">我是一段Html代码' + index + '</span><br><span style=\"color:green;\">绿色！</span>' : '',\r\n            html2: index % 3 === 0 ? '<span style=\"color:red;\">我是一段Html代码</span><span style=\"color:blue;\">我是一段Html代码' + index + '</span><span style=\"color:green;\">绿色！</span>' : '',\r\n            html3: index + ' -> <span style=\"color:red;\">我是一段Html代码</span><span style=\"color:blue;\">我是一段Html代码' + index + '</span><span style=\"color:green;\">绿色！</span><br><span style=\"color:green;\">绿色！</span><br><span style=\"color:green;\">我是一段Html代码,我是一段Html代码，我是一段Html代码，绿色！</span><br><span style=\"color:red;\">我是一段Html代码,我是一段Html代码，我是一段Html代码</span><br><span style=\"color:red;\">我是一段Html代码,我是一段Html代码，我是一段Html代码</span><br><span style=\"color:green;\">我是一段Html代码,我是一段Html代码，我是一段Html代码</span>',\r\n            text: index + ' -> ' + nickList.concat(nameList).join('').repeat(index % 6 === 0 ? 12 : index % 4 === 16 ? 18 : index % 3 === 0 ? 22 : 26),\r\n            updateTime: currTime,\r\n            createTime: currTime,\r\n            attr1: '',\r\n            attr2: [],\r\n            attr3: index % 2 ? '1' : '',\r\n            attr4: '',\r\n            attr5: 0,\r\n            loading: false,\r\n            info: {\r\n                name2: 'name2_' + fullIndex,\r\n                more: {\r\n                    sex2: index % 3 ? '0' : '1',\r\n                    age2: index % 2 === 0 ? 26 : 30\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    if (fullIndex < size) {\r\n        setTimeout(mockData, 200);\r\n    }\r\n}\r\n\r\nmockData();\r\n\r\n\r\nwindow.MOCK_TREE_DATA_LIST = [\r\n    {\r\n        id: '10000',\r\n        name: '文件夹 10000',\r\n        size: '53k',\r\n        type: '',\r\n        date: '2019-05-16',\r\n        children: [\r\n            {\r\n                id: '11000',\r\n                name: '文件 11000',\r\n                size: '11k',\r\n                type: 'js',\r\n                date: '2019-05-16'\r\n            },\r\n            {\r\n                id: '12000',\r\n                name: '文件夹 12000',\r\n                size: '22k',\r\n                type: '',\r\n                date: '2019-05-16',\r\n                children: [\r\n                    {\r\n                        id: '12100',\r\n                        name: '文件夹 12100',\r\n                        size: '60k',\r\n                        type: '',\r\n                        date: '2019-05-16',\r\n                        children: [\r\n                            {\r\n                                id: '12110',\r\n                                name: '文件 12110',\r\n                                size: '100k',\r\n                                type: 'html',\r\n                                date: '2019-05-16'\r\n                            }\r\n                        ]\r\n                    },\r\n                    {\r\n                        id: '122000',\r\n                        name: '文件 122000',\r\n                        size: '80k',\r\n                        type: 'avi',\r\n                        date: '2019-05-16'\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: '20000',\r\n        name: '文件 20000',\r\n        size: '66k',\r\n        type: 'png',\r\n        date: '2019-05-16'\r\n    },\r\n    {\r\n        id: '30000',\r\n        name: '文件夹 30000',\r\n        size: '3k',\r\n        type: '',\r\n        date: '2019-05-16',\r\n        children: [\r\n            {\r\n                id: '31000',\r\n                name: '文件夹 31000',\r\n                size: '9k',\r\n                type: '',\r\n                date: '2019-05-16',\r\n                children: [\r\n                    {\r\n                        id: '31100',\r\n                        name: '文件 31100',\r\n                        size: 'mp3',\r\n                        type: 'js',\r\n                        date: '2019-05-16'\r\n                    },\r\n                    {\r\n                        id: '31200',\r\n                        name: '文件 31200',\r\n                        size: '224k',\r\n                        type: 'java',\r\n                        date: '2019-05-16'\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                id: '32000',\r\n                name: '文件夹 32000',\r\n                size: '33k',\r\n                type: '',\r\n                date: '2019-05-16',\r\n                children: [\r\n                    {\r\n                        id: '32100',\r\n                        name: '文件 32100',\r\n                        size: '35k',\r\n                        type: 'mp4',\r\n                        date: '2019-05-16'\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n];\r\n","export default {\"path\":\"/XtableDemo/scroll/CellValid\",\"name\":\"XtableDemo.scroll.CellValid\",\"head\":{\"label\":\"XtableDemo.scroll.CellValid.label\",\"description\":\"XtableDemo.scroll.CellValid.description\"},\"samples\":[{\"id\":\"XtableDemo.scroll.CellValid.sample1\",\"label\":\"XtableDemo.scroll.CellValid.sample1.label\",\"description\":\"XtableDemo.scroll.CellValid.sample1.description\",\"code\":\"<vue-toolbar :refresh=\\\"{query: findList}\\\">\\n  <template v-slot:buttons>\\n    <vue-dropdown>\\n      <vue-button>校验操作<i class=\\\"vue-icon-arrow-down vue-icon--right\\\"></i></vue-button>\\n      <vue-dropdown-menu slot=\\\"dropdown\\\">\\n        <vue-dropdown-item @click.native=\\\"validEvent\\\">基本校验</vue-dropdown-item>\\n        <vue-dropdown-item @click.native=\\\"fullValidEvent\\\">完整校验</vue-dropdown-item>\\n        <vue-dropdown-item @click.native=\\\"selectValidEvent\\\">选中校验</vue-dropdown-item>\\n      </vue-dropdown-menu>\\n    </vue-dropdown>\\n  </template>\\n</vue-toolbar>\\n\\n<vue-xtable\\n  border\\n  resizable\\n  show-overflow\\n  ref=\\\"xTable\\\"\\n  height=\\\"300\\\"\\n  :loading=\\\"loading\\\"\\n  :edit-rules=\\\"validRules\\\"\\n  :edit-config=\\\"{trigger: 'click', mode: 'cell', showStatus: true}\\\"\\n  :checkbox-config=\\\"{checkField: 'checked'}\\\">\\n  <vue-xtable-column type=\\\"checkbox\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"100\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable width=\\\"200\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" width=\\\"200\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" width=\\\"200\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"rate\\\" title=\\\"Rate\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"region\\\" title=\\\"Region\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"time\\\" title=\\\"Time\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" width=\\\"300\\\" show-overflow></vue-xtable-column>\\n  <vue-xtable-column field=\\\"updateTime\\\" title=\\\"UpdateTime\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"createTime\\\" title=\\\"CreateTime\\\" width=\\\"200\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      loading: false,\\n      validRules: {\\n        name: [\\n          { required: true, message: '名称必须填写' },\\n          { min: 3, max: 50, message: '名称长度在 3 到 50 个字符' }\\n        ],\\n        sex: [\\n          { required: true, message: '性别必须填写' }\\n        ]\\n      },\\n\\n    }\\n  },\\n  created () {\\n    this.findList()\\n  },\\n\\n  methods: {\\n    findList () {\\n      this.loading = true\\n      return new Promise(resolve => {\\n        setTimeout(() => {\\n          let tableData = window.MOCK_DATA_LIST.slice(0, 1000)\\n          // 阻断 vue 对大数组的双向绑定，避免 vue 绑定大数据造成短暂的卡顿\\n          if (this.$refs.xTable) {\\n            this.$refs.xTable.loadData(tableData)\\n          }\\n          resolve()\\n          this.loading = false\\n        }, 300)\\n      })\\n    },\\n    validEvent () {\\n      this.$refs.xTable.validate(valid => {\\n        if (valid) {\\n          this.$notify.success({ message:'校验成功！'});\\n        } else {\\n          this.$notify.error({ message:'校验不通过！'});\\n        }\\n      })\\n    },\\n    fullValidEvent () {\\n      this.$refs.xTable.fullValidate((valid, errMap) => {\\n        if (valid) {\\n          this.$notify.success({ message:'校验成功！'});\\n        } else {\\n          let msgList = []\\n          Object.values(errMap).forEach(errList => {\\n            errList.forEach(params => {\\n              let { rowIndex, column, rules } = params\\n              rules.forEach(rule => {\\n                msgList.push(`第 ${rowIndex} 行 ${column.title} 校验错误：${rule.message}`)\\n              })\\n            })\\n          })\\n          var h = this.$createElement;\\n          this.$alert({\\n            type: \\\"error\\\",\\n            message: h('div',[msgList.map(function (msg) {\\n              return h(\\\"div\\\", [msg]);\\n            })])\\n          });\\n        }\\n      })\\n    },\\n    selectValidEvent () {\\n      let selectRecords = this.$refs.xTable.getSelectRecords()\\n      if (selectRecords.length > 0) {\\n        this.$refs.xTable.validate(selectRecords, valid => {\\n          if (valid) {\\n            this.$notify.success({ message:'校验成功！'});\\n          } else {\\n            this.$notify.error({ message:'校验不通过！'});\\n          }\\n        })\\n      } else {\\n        this.$notify.warning({ message:'未选中数据！'});\\n      }\\n    },\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-toolbar :refresh=\\\"{query: findList}\\\">\\n      <template v-slot:buttons>\\n        <vue-dropdown>\\n          <vue-button>校验操作<i class=\\\"vue-icon-arrow-down vue-icon--right\\\"></i></vue-button>\\n          <vue-dropdown-menu slot=\\\"dropdown\\\">\\n            <vue-dropdown-item @click.native=\\\"validEvent\\\">基本校验</vue-dropdown-item>\\n            <vue-dropdown-item @click.native=\\\"fullValidEvent\\\">完整校验</vue-dropdown-item>\\n            <vue-dropdown-item @click.native=\\\"selectValidEvent\\\">选中校验</vue-dropdown-item>\\n          </vue-dropdown-menu>\\n        </vue-dropdown>\\n      </template>\\n    </vue-toolbar>\\n\\n    <vue-xtable\\n      border\\n      resizable\\n      show-overflow\\n      ref=\\\"xTable\\\"\\n      height=\\\"300\\\"\\n      :loading=\\\"loading\\\"\\n      :edit-rules=\\\"validRules\\\"\\n      :edit-config=\\\"{trigger: 'click', mode: 'cell', showStatus: true}\\\"\\n      :checkbox-config=\\\"{checkField: 'checked'}\\\">\\n      <vue-xtable-column type=\\\"checkbox\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"100\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable width=\\\"200\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" width=\\\"200\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" width=\\\"200\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"rate\\\" title=\\\"Rate\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"region\\\" title=\\\"Region\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"time\\\" title=\\\"Time\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" width=\\\"300\\\" show-overflow></vue-xtable-column>\\n      <vue-xtable-column field=\\\"updateTime\\\" title=\\\"UpdateTime\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"createTime\\\" title=\\\"CreateTime\\\" width=\\\"200\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      loading: false,\n      validRules: {\n        name: [\n          { required: true, message: '名称必须填写' },\n          { min: 3, max: 50, message: '名称长度在 3 到 50 个字符' }\n        ],\n        sex: [\n          { required: true, message: '性别必须填写' }\n        ]\n      },\n\n    }\n  },\n  created () {\n    this.findList()\n  },\n\n  methods: {\n    findList () {\n      this.loading = true\n      return new Promise(resolve => {\n        setTimeout(() => {\n          let tableData = window.MOCK_DATA_LIST.slice(0, 1000)\n          // 阻断 vue 对大数组的双向绑定，避免 vue 绑定大数据造成短暂的卡顿\n          if (this.$refs.xTable) {\n            this.$refs.xTable.loadData(tableData)\n          }\n          resolve()\n          this.loading = false\n        }, 300)\n      })\n    },\n    validEvent () {\n      this.$refs.xTable.validate(valid => {\n        if (valid) {\n          this.$notify.success({ message:'校验成功！'});\n        } else {\n          this.$notify.error({ message:'校验不通过！'});\n        }\n      })\n    },\n    fullValidEvent () {\n      this.$refs.xTable.fullValidate((valid, errMap) => {\n        if (valid) {\n          this.$notify.success({ message:'校验成功！'});\n        } else {\n          let msgList = []\n          Object.values(errMap).forEach(errList => {\n            errList.forEach(params => {\n              let { rowIndex, column, rules } = params\n              rules.forEach(rule => {\n                msgList.push(`第 ${rowIndex} 行 ${column.title} 校验错误：${rule.message}`)\n              })\n            })\n          })\n          var h = this.$createElement;\n          this.$alert({\n            type: \"error\",\n            message: h('div',[msgList.map(function (msg) {\n              return h(\"div\", [msg]);\n            })])\n          });\n        }\n      })\n    },\n    selectValidEvent () {\n      let selectRecords = this.$refs.xTable.getSelectRecords()\n      if (selectRecords.length > 0) {\n        this.$refs.xTable.validate(selectRecords, valid => {\n          if (valid) {\n            this.$notify.success({ message:'校验成功！'});\n          } else {\n            this.$notify.error({ message:'校验不通过！'});\n          }\n        })\n      } else {\n        this.$notify.warning({ message:'未选中数据！'});\n      }\n    },\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/scroll/Edit\",\"name\":\"XtableDemo.scroll.Edit\",\"head\":{\"label\":\"XtableDemo.scroll.Edit.label\",\"description\":\"XtableDemo.scroll.Edit.description\"},\"samples\":[{\"id\":\"XtableDemo.scroll.Edit.sample1\",\"label\":\"XtableDemo.scroll.Edit.sample1.label\",\"description\":\"XtableDemo.scroll.Edit.sample1.description\",\"code\":\"<vue-toolbar export :refresh=\\\"{query: findList}\\\">\\n  <template v-slot:buttons>\\n    <vue-dropdown  @command=\\\"handleCommand1\\\">\\n      <vue-button>新增操作<i class=\\\"vue-icon-arrow-down vue-icon--right\\\"></i></vue-button>\\n      <vue-dropdown-menu slot=\\\"dropdown\\\">\\n        <vue-dropdown-item command=\\\"insertFirst\\\" @click=\\\"insertEvent(null)\\\">从第一行插入</vue-dropdown-item>\\n        <vue-dropdown-item command=\\\"insertLast\\\" @click=\\\"insertEvent(-1)\\\">从最后插入</vue-dropdown-item>\\n        <vue-dropdown-item command=\\\"insertAt100\\\" @click=\\\"insertEvent($refs.xTable.getData(100))\\\">插入到 100 行</vue-dropdown-item>\\n      </vue-dropdown-menu>\\n    </vue-dropdown>\\n\\n    <vue-dropdown  @command=\\\"handleCommand2\\\">\\n      <vue-button>删除操作<i class=\\\"vue-icon-arrow-down vue-icon--right\\\"></i></vue-button>\\n      <vue-dropdown-menu slot=\\\"dropdown\\\">\\n        <vue-dropdown-item command=\\\"removeSelecteds\\\">删除选中</vue-dropdown-item>\\n        <vue-dropdown-item command=\\\"removeFirst\\\">删除第一行</vue-dropdown-item>\\n        <vue-dropdown-item command=\\\"removeLast\\\">删除最后一行</vue-dropdown-item>\\n        <vue-dropdown-item command=\\\"removeAt100\\\">删除第 100 行</vue-dropdown-item>\\n      </vue-dropdown-menu>\\n    </vue-dropdown>\\n    <vue-button @click=\\\"getInsertEvent\\\">获取新增</vue-button>\\n    <vue-button @click=\\\"getRemoveEvent\\\">获取删除</vue-button>\\n    <vue-button @click=\\\"getUpdateEvent\\\">获取修改</vue-button>\\n  </template>\\n</vue-toolbar>\\n\\n<vue-xtable\\n  border\\n  resizable\\n  show-overflow\\n  ref=\\\"xTable\\\"\\n  height=\\\"300\\\"\\n  :loading=\\\"loading\\\"\\n  :edit-config=\\\"{trigger: 'click', mode: 'row', showStatus: true}\\\"\\n  :checkbox-config=\\\"{checkField: 'checked'}\\\">\\n  <vue-xtable-column type=\\\"checkbox\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"100\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable width=\\\"200\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" width=\\\"200\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" width=\\\"200\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"rate\\\" title=\\\"Rate\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"region\\\" title=\\\"Region\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"time\\\" title=\\\"Time\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" width=\\\"300\\\" show-overflow></vue-xtable-column>\\n  <vue-xtable-column field=\\\"updateTime\\\" title=\\\"UpdateTime\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"createTime\\\" title=\\\"CreateTime\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"attr1\\\" title=\\\"Attr1\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"attr2\\\" title=\\\"Attr2\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"attr3\\\" title=\\\"Attr3\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"attr4\\\" title=\\\"Attr4\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"attr5\\\" title=\\\"Attr5\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"attr6\\\" title=\\\"Attr6\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"attr7\\\" title=\\\"Attr7\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"attr8\\\" title=\\\"Attr8\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"attr9\\\" title=\\\"Attr9\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"createTime\\\" title=\\\"CreateTime\\\" width=\\\"200\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      loading: false,\\n\\n    }\\n  },\\n  created () {\\n    this.findList()\\n  },\\n\\n  methods: {\\n    findList () {\\n      this.loading = true\\n      return new Promise(resolve => {\\n        setTimeout(() => {\\n          let tableData = window.MOCK_DATA_LIST.slice(0, 2000)\\n          // 阻断 vue 对大数组的双向绑定，避免 vue 绑定大数据造成短暂的卡顿\\n          if (this.$refs.xTable) {\\n            this.$refs.xTable.loadData(tableData)\\n          }\\n          resolve()\\n          this.loading = false\\n        }, 300)\\n      })\\n    },\\n    insertEvent (row) {\\n      let xTable = this.$refs.xTable\\n      let record = {}\\n      xTable.insertAt(record, row).then(({ row }) => {\\n        xTable.setActiveRow(row)\\n      })\\n    },\\n    getInsertEvent () {\\n      let insertRecords = this.$refs.xTable.getInsertRecords()\\n      this.$alert({ message: insertRecords.length })\\n    },\\n    getRemoveEvent () {\\n      let removeRecords = this.$refs.xTable.getRemoveRecords()\\n      this.$alert({ message: removeRecords.length })\\n    },\\n    getUpdateEvent () {\\n      let updateRecords = this.$refs.xTable.getUpdateRecords()\\n      this.$alert({ message: updateRecords.length })\\n    },\\n    handleCommand1 (command) {\\n      switch (command) {\\n        case 'insertFirst':\\n          this.insertEvent(null);\\n          break;\\n        case 'insertLast':\\n          this.insertEvent(-1);\\n          break;\\n        case 'insertAt100':\\n          this.insertEvent(this.$refs.xTable.getData(100));\\n          break;\\n      }\\n    },\\n    handleCommand2 (command) {\\n      switch (command) {\\n        case 'removeSelecteds':\\n          this.$refs.xTable.removeSelecteds();\\n          break;\\n        case 'removeFirst':\\n          this.$refs.xTable.remove(this.$refs.xTable.getData(0));\\n          break;\\n        case 'removeLast':\\n          this.$refs.xTable.remove(this.$refs.xTable.getData(this.$refs.xTable.getData().length - 1));\\n          break;\\n        case 'removeAt100':\\n          this.$refs.xTable.remove(this.$refs.xTable.getData(100));\\n          break;\\n      }\\n    },\\n\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-toolbar export :refresh=\\\"{query: findList}\\\">\\n      <template v-slot:buttons>\\n        <vue-dropdown  @command=\\\"handleCommand1\\\">\\n          <vue-button>新增操作<i class=\\\"vue-icon-arrow-down vue-icon--right\\\"></i></vue-button>\\n          <vue-dropdown-menu slot=\\\"dropdown\\\">\\n            <vue-dropdown-item command=\\\"insertFirst\\\" @click=\\\"insertEvent(null)\\\">从第一行插入</vue-dropdown-item>\\n            <vue-dropdown-item command=\\\"insertLast\\\" @click=\\\"insertEvent(-1)\\\">从最后插入</vue-dropdown-item>\\n            <vue-dropdown-item command=\\\"insertAt100\\\" @click=\\\"insertEvent($refs.xTable.getData(100))\\\">插入到 100 行</vue-dropdown-item>\\n          </vue-dropdown-menu>\\n        </vue-dropdown>\\n\\n        <vue-dropdown  @command=\\\"handleCommand2\\\">\\n          <vue-button>删除操作<i class=\\\"vue-icon-arrow-down vue-icon--right\\\"></i></vue-button>\\n          <vue-dropdown-menu slot=\\\"dropdown\\\">\\n            <vue-dropdown-item command=\\\"removeSelecteds\\\">删除选中</vue-dropdown-item>\\n            <vue-dropdown-item command=\\\"removeFirst\\\">删除第一行</vue-dropdown-item>\\n            <vue-dropdown-item command=\\\"removeLast\\\">删除最后一行</vue-dropdown-item>\\n            <vue-dropdown-item command=\\\"removeAt100\\\">删除第 100 行</vue-dropdown-item>\\n          </vue-dropdown-menu>\\n        </vue-dropdown>\\n        <vue-button @click=\\\"getInsertEvent\\\">获取新增</vue-button>\\n        <vue-button @click=\\\"getRemoveEvent\\\">获取删除</vue-button>\\n        <vue-button @click=\\\"getUpdateEvent\\\">获取修改</vue-button>\\n      </template>\\n    </vue-toolbar>\\n\\n    <vue-xtable\\n      border\\n      resizable\\n      show-overflow\\n      ref=\\\"xTable\\\"\\n      height=\\\"300\\\"\\n      :loading=\\\"loading\\\"\\n      :edit-config=\\\"{trigger: 'click', mode: 'row', showStatus: true}\\\"\\n      :checkbox-config=\\\"{checkField: 'checked'}\\\">\\n      <vue-xtable-column type=\\\"checkbox\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"100\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable width=\\\"200\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" width=\\\"200\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" width=\\\"200\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"rate\\\" title=\\\"Rate\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"region\\\" title=\\\"Region\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"time\\\" title=\\\"Time\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" width=\\\"300\\\" show-overflow></vue-xtable-column>\\n      <vue-xtable-column field=\\\"updateTime\\\" title=\\\"UpdateTime\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"createTime\\\" title=\\\"CreateTime\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"attr1\\\" title=\\\"Attr1\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"attr2\\\" title=\\\"Attr2\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"attr3\\\" title=\\\"Attr3\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"attr4\\\" title=\\\"Attr4\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"attr5\\\" title=\\\"Attr5\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"attr6\\\" title=\\\"Attr6\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"attr7\\\" title=\\\"Attr7\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"attr8\\\" title=\\\"Attr8\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"attr9\\\" title=\\\"Attr9\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"createTime\\\" title=\\\"CreateTime\\\" width=\\\"200\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      loading: false,\n\n    }\n  },\n  created () {\n    this.findList()\n  },\n\n  methods: {\n    findList () {\n      this.loading = true\n      return new Promise(resolve => {\n        setTimeout(() => {\n          let tableData = window.MOCK_DATA_LIST.slice(0, 2000)\n          // 阻断 vue 对大数组的双向绑定，避免 vue 绑定大数据造成短暂的卡顿\n          if (this.$refs.xTable) {\n            this.$refs.xTable.loadData(tableData)\n          }\n          resolve()\n          this.loading = false\n        }, 300)\n      })\n    },\n    insertEvent (row) {\n      let xTable = this.$refs.xTable\n      let record = {}\n      xTable.insertAt(record, row).then(({ row }) => {\n        xTable.setActiveRow(row)\n      })\n    },\n    getInsertEvent () {\n      let insertRecords = this.$refs.xTable.getInsertRecords()\n      this.$alert({ message: insertRecords.length })\n    },\n    getRemoveEvent () {\n      let removeRecords = this.$refs.xTable.getRemoveRecords()\n      this.$alert({ message: removeRecords.length })\n    },\n    getUpdateEvent () {\n      let updateRecords = this.$refs.xTable.getUpdateRecords()\n      this.$alert({ message: updateRecords.length })\n    },\n    handleCommand1 (command) {\n      switch (command) {\n        case 'insertFirst':\n          this.insertEvent(null);\n          break;\n        case 'insertLast':\n          this.insertEvent(-1);\n          break;\n        case 'insertAt100':\n          this.insertEvent(this.$refs.xTable.getData(100));\n          break;\n      }\n    },\n    handleCommand2 (command) {\n      switch (command) {\n        case 'removeSelecteds':\n          this.$refs.xTable.removeSelecteds();\n          break;\n        case 'removeFirst':\n          this.$refs.xTable.remove(this.$refs.xTable.getData(0));\n          break;\n        case 'removeLast':\n          this.$refs.xTable.remove(this.$refs.xTable.getData(this.$refs.xTable.getData().length - 1));\n          break;\n        case 'removeAt100':\n          this.$refs.xTable.remove(this.$refs.xTable.getData(100));\n          break;\n      }\n    },\n\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/scroll/FullPartialLoad\",\"name\":\"XtableDemo.scroll.FullPartialLoad\",\"head\":{\"label\":\"XtableDemo.scroll.FullPartialLoad.label\",\"description\":\"XtableDemo.scroll.FullPartialLoad.description\"},\"samples\":[{\"id\":\"XtableDemo.scroll.FullPartialLoad.sample1\",\"label\":\"XtableDemo.scroll.FullPartialLoad.sample1.label\",\"description\":\"XtableDemo.scroll.FullPartialLoad.sample1.description\",\"code\":\"<vue-toolbar :loading=\\\"loading\\\">\\n  <template v-slot:buttons>\\n    <vue-button @click=\\\"loadList(20)\\\">+20条</vue-button>\\n    <vue-button @click=\\\"loadList(50)\\\">+50条</vue-button>\\n    <vue-button @click=\\\"loadList(100)\\\">+100条</vue-button>\\n    <vue-button @click=\\\"loadList(200)\\\">+200条</vue-button>\\n    <vue-button @click=\\\"loadList(300)\\\">+300条</vue-button>\\n    <vue-button @click=\\\"loadColumns(10)\\\">+10列</vue-button>\\n    <vue-button @click=\\\"loadColumns(30)\\\">+30列</vue-button>\\n    <vue-button @click=\\\"loadColumns(50)\\\">+50列</vue-button>\\n    <vue-button @click=\\\"$refs.xGrid.scrollTo(1000, 2000)\\\">x=1000,y=2000</vue-button>\\n    <vue-button @click=\\\"$refs.xGrid.scrollTo(2000, 6000)\\\">x=2000,y=6000</vue-button>\\n    <vue-button @click=\\\"$refs.xGrid.clearScroll()\\\">清除滚动状态</vue-button>\\n  </template>\\n</vue-toolbar>\\n\\n<vue-xgrid\\n  border\\n  show-overflow\\n  show-header-overflow\\n  ref=\\\"xGrid\\\"\\n  height=\\\"500\\\"\\n  row-id=\\\"id\\\"\\n  :checkbox-config=\\\"{checkField: 'checked', labelField: 'id'}\\\"\\n  :loading=\\\"loading\\\">\\n</vue-xgrid>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      loading: false,\\n      colIndex: 0,\\n      rowIndex: 1,\\n\\n    }\\n  },\\n  created () {\\n    // 动态定义，阻断 vue 对大数据双向绑定，提升加载速度\\n    this.allData = []\\n    this.allColumn = []\\n    this.init()\\n  },\\n\\n  methods: {\\n    init () {\\n      this.loading = true\\n      Promise.all([\\n        this.findColumnList(200).then(data => {\\n          this.allColumn = this.allData.concat(data)\\n          this.$refs.xGrid.loadColumn(this.allColumn)\\n        }),\\n        this.findDataList(600).then(data => {\\n          this.allData = this.allData.concat(data)\\n          this.$refs.xGrid.loadData(this.allData)\\n        })\\n      ]).then(() => {\\n        this.loading = false\\n      })\\n    },\\n    loadColumns (size) {\\n      this.loading = true\\n      this.findColumnList(size).then(data => {\\n        this.allColumn = this.allColumn.concat(data)// 局部追加并保存全量数据\\n        this.$refs.xGrid.loadColumn(this.allColumn)\\n        this.loading = false\\n      })\\n    },\\n    loadList (size) {\\n      this.loading = true\\n      this.findDataList(size).then(data => {\\n        this.allData = this.allData.concat(data)// 局部追加并保存全量数据\\n        this.$refs.xGrid.loadData(this.allData)\\n        this.loading = false\\n      })\\n    },\\n    findColumnList (size) {\\n      return new Promise(resolve => {\\n        setTimeout(() => {\\n          var columns = []\\n          for (var index = 0; index < size; index++) {\\n            let key = this.colIndex++\\n            let config = {\\n              field: key ? `col_${key}` : 'id',\\n              title: key ? `标题_${key}` : 'ID',\\n              width: 140\\n            }\\n            if (!key) {\\n              config.type = 'checkbox'\\n            }\\n            if (key < 2) {\\n              config.fixed = 'left'\\n            }\\n            columns.push(config)\\n          }\\n          resolve(columns)\\n        }, 250)\\n      })\\n    },\\n    findDataList (size) {\\n      return new Promise(resolve => {\\n        setTimeout(() => {\\n          var list = []\\n          for (var index = 0; index < size; index++) {\\n            let key = this.rowIndex++\\n            let item = { id: key, checked: false }\\n            // 由于生成数据比较耗时，所以固定生成1000字段\\n\\n            for (let cIndex = 0; cIndex < 1000; cIndex++) {\\n              item[`col_${cIndex}`] = `内容_${cIndex}_${index}`\\n            }\\n            list.push(item)\\n          }\\n          resolve(list)\\n        }, 250)\\n      })\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-toolbar :loading=\\\"loading\\\">\\n      <template v-slot:buttons>\\n        <vue-button @click=\\\"loadList(20)\\\">+20条</vue-button>\\n        <vue-button @click=\\\"loadList(50)\\\">+50条</vue-button>\\n        <vue-button @click=\\\"loadList(100)\\\">+100条</vue-button>\\n        <vue-button @click=\\\"loadList(200)\\\">+200条</vue-button>\\n        <vue-button @click=\\\"loadList(300)\\\">+300条</vue-button>\\n        <vue-button @click=\\\"loadColumns(10)\\\">+10列</vue-button>\\n        <vue-button @click=\\\"loadColumns(30)\\\">+30列</vue-button>\\n        <vue-button @click=\\\"loadColumns(50)\\\">+50列</vue-button>\\n        <vue-button @click=\\\"$refs.xGrid.scrollTo(1000, 2000)\\\">x=1000,y=2000</vue-button>\\n        <vue-button @click=\\\"$refs.xGrid.scrollTo(2000, 6000)\\\">x=2000,y=6000</vue-button>\\n        <vue-button @click=\\\"$refs.xGrid.clearScroll()\\\">清除滚动状态</vue-button>\\n      </template>\\n    </vue-toolbar>\\n\\n    <vue-xgrid\\n      border\\n      show-overflow\\n      show-header-overflow\\n      ref=\\\"xGrid\\\"\\n      height=\\\"500\\\"\\n      row-id=\\\"id\\\"\\n      :checkbox-config=\\\"{checkField: 'checked', labelField: 'id'}\\\"\\n      :loading=\\\"loading\\\">\\n    </vue-xgrid></div>\",\"parameter\": {\n  data () {\n    return {\n      loading: false,\n      colIndex: 0,\n      rowIndex: 1,\n\n    }\n  },\n  created () {\n    // 动态定义，阻断 vue 对大数据双向绑定，提升加载速度\n    this.allData = []\n    this.allColumn = []\n    this.init()\n  },\n\n  methods: {\n    init () {\n      this.loading = true\n      Promise.all([\n        this.findColumnList(200).then(data => {\n          this.allColumn = this.allData.concat(data)\n          this.$refs.xGrid.loadColumn(this.allColumn)\n        }),\n        this.findDataList(600).then(data => {\n          this.allData = this.allData.concat(data)\n          this.$refs.xGrid.loadData(this.allData)\n        })\n      ]).then(() => {\n        this.loading = false\n      })\n    },\n    loadColumns (size) {\n      this.loading = true\n      this.findColumnList(size).then(data => {\n        this.allColumn = this.allColumn.concat(data)// 局部追加并保存全量数据\n        this.$refs.xGrid.loadColumn(this.allColumn)\n        this.loading = false\n      })\n    },\n    loadList (size) {\n      this.loading = true\n      this.findDataList(size).then(data => {\n        this.allData = this.allData.concat(data)// 局部追加并保存全量数据\n        this.$refs.xGrid.loadData(this.allData)\n        this.loading = false\n      })\n    },\n    findColumnList (size) {\n      return new Promise(resolve => {\n        setTimeout(() => {\n          var columns = []\n          for (var index = 0; index < size; index++) {\n            let key = this.colIndex++\n            let config = {\n              field: key ? `col_${key}` : 'id',\n              title: key ? `标题_${key}` : 'ID',\n              width: 140\n            }\n            if (!key) {\n              config.type = 'checkbox'\n            }\n            if (key < 2) {\n              config.fixed = 'left'\n            }\n            columns.push(config)\n          }\n          resolve(columns)\n        }, 250)\n      })\n    },\n    findDataList (size) {\n      return new Promise(resolve => {\n        setTimeout(() => {\n          var list = []\n          for (var index = 0; index < size; index++) {\n            let key = this.rowIndex++\n            let item = { id: key, checked: false }\n            // 由于生成数据比较耗时，所以固定生成1000字段\n\n            for (let cIndex = 0; cIndex < 1000; cIndex++) {\n              item[`col_${cIndex}`] = `内容_${cIndex}_${index}`\n            }\n            list.push(item)\n          }\n          resolve(list)\n        }, 250)\n      })\n    }\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/scroll/Highlight\",\"name\":\"XtableDemo.scroll.Highlight\",\"head\":{\"label\":\"XtableDemo.scroll.Highlight.label\",\"description\":\"XtableDemo.scroll.Highlight.description\"},\"samples\":[{\"id\":\"XtableDemo.scroll.Highlight.sample1\",\"label\":\"XtableDemo.scroll.Highlight.sample1.label\",\"description\":\"XtableDemo.scroll.Highlight.sample1.description\",\"code\":\"<vue-xtable\\n  border\\n  resizable\\n  show-overflow\\n  highlight-current-row\\n  ref=\\\"xTable\\\"\\n  height=\\\"300\\\"\\n  :loading=\\\"loading\\\"\\n  :keyboard-config=\\\"{isArrow: true}\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"100\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"rate\\\" title=\\\"Rate\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"region\\\" title=\\\"Region\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"time\\\" title=\\\"Time\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" width=\\\"300\\\" show-overflow></vue-xtable-column>\\n  <vue-xtable-column field=\\\"updateTime\\\" title=\\\"UpdateTime\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"createTime\\\" title=\\\"CreateTime\\\" width=\\\"200\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      loading: false,\\n\\n    }\\n  },\\n  created () {\\n    this.loading = true\\n    setTimeout(() => {\\n      let tableData = window.MOCK_DATA_LIST.slice(0, 2000)\\n      // 阻断 vue 对大数组的双向绑定，大数据性能翻倍提升\\n      if (this.$refs.xTable) {\\n        this.$refs.xTable.loadData(tableData)\\n      }\\n      this.loading = false\\n    }, 300)\\n  },\\n\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      resizable\\n      show-overflow\\n      highlight-current-row\\n      ref=\\\"xTable\\\"\\n      height=\\\"300\\\"\\n      :loading=\\\"loading\\\"\\n      :keyboard-config=\\\"{isArrow: true}\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"100\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"rate\\\" title=\\\"Rate\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"region\\\" title=\\\"Region\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"time\\\" title=\\\"Time\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" width=\\\"300\\\" show-overflow></vue-xtable-column>\\n      <vue-xtable-column field=\\\"updateTime\\\" title=\\\"UpdateTime\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"createTime\\\" title=\\\"CreateTime\\\" width=\\\"200\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      loading: false,\n\n    }\n  },\n  created () {\n    this.loading = true\n    setTimeout(() => {\n      let tableData = window.MOCK_DATA_LIST.slice(0, 2000)\n      // 阻断 vue 对大数组的双向绑定，大数据性能翻倍提升\n      if (this.$refs.xTable) {\n        this.$refs.xTable.loadData(tableData)\n      }\n      this.loading = false\n    }, 300)\n  },\n\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/scroll/Keyboard\",\"name\":\"XtableDemo.scroll.Keyboard\",\"head\":{\"label\":\"XtableDemo.scroll.Keyboard.label\",\"description\":\"XtableDemo.scroll.Keyboard.description\"},\"samples\":[{\"id\":\"XtableDemo.scroll.Keyboard.sample1\",\"label\":\"XtableDemo.scroll.Keyboard.sample1.label\",\"description\":\"XtableDemo.scroll.Keyboard.sample1.description\",\"code\":\"<vue-toolbar :refresh=\\\"{query: findList}\\\">\\n  <template v-slot:buttons>\\n    <vue-button>\\n      <template>新增操作</template>\\n      <template v-slot:dropdowns>\\n        <vue-button @click=\\\"insertEvent(null)\\\">从第一行插入</vue-button>\\n        <vue-button @click=\\\"insertEvent(-1)\\\">从最后插入</vue-button>\\n        <vue-button @click=\\\"insertEvent($refs.xTable.getData(100))\\\">插入到 100 行</vue-button>\\n        <vue-button @click=\\\"insertEvent($refs.xTable.getData(2000))\\\">插入到 2000 行</vue-button>\\n      </template>\\n    </vue-button>\\n    <vue-button>\\n      <template>删除操作</template>\\n      <template v-slot:dropdowns>\\n        <vue-button @click=\\\"$refs.xTable.removeSelecteds()\\\">删除选中</vue-button>\\n        <vue-button @click=\\\"$refs.xTable.remove($refs.xTable.getData(0))\\\">删除第一行</vue-button>\\n        <vue-button @click=\\\"$refs.xTable.remove($refs.xTable.getData($refs.xTable.getData().length - 1))\\\">删除最后一行</vue-button>\\n        <vue-button @click=\\\"$refs.xTable.remove($refs.xTable.getData(100))\\\">删除第 100 行</vue-button>\\n      </template>\\n    </vue-button>\\n    <vue-button>\\n      <template>校验操作</template>\\n      <template v-slot:dropdowns>\\n        <vue-button @click=\\\"validEvent\\\">基本校验</vue-button>\\n        <vue-button @click=\\\"fullValidEvent\\\">完整校验</vue-button>\\n        <vue-button @click=\\\"selectValidEvent\\\">选中校验</vue-button>\\n      </template>\\n    </vue-button>\\n    <vue-button @click=\\\"getInsertEvent\\\">获取新增</vue-button>\\n    <vue-button @click=\\\"getRemoveEvent\\\">获取删除</vue-button>\\n    <vue-button @click=\\\"getUpdateEvent\\\">获取修改</vue-button>\\n    <vue-button>\\n      <template>滚动操作</template>\\n      <template v-slot:dropdowns>\\n        <vue-button @click=\\\"$refs.xTable.scrollToRow($refs.xTable.getData(10))\\\">滚动到第 10 行</vue-button>\\n        <vue-button @click=\\\"$refs.xTable.scrollToRow($refs.xTable.getData(4000))\\\">滚动第 4000 行</vue-button>\\n        <vue-button @click=\\\"$refs.xTable.scrollToColumn($refs.xTable.getColumns(1))\\\">滚动第 1 列</vue-button>\\n        <vue-button @click=\\\"$refs.xTable.scrollToColumn($refs.xTable.getColumns(10))\\\">滚动第 10 列</vue-button>\\n      </template>\\n    </vue-button>\\n  </template>\\n</vue-toolbar>\\n\\n<vue-xtable\\n  border\\n  resizable\\n  show-overflow\\n  ref=\\\"xTable\\\"\\n  height=\\\"300\\\"\\n  :loading=\\\"loading\\\"\\n  :edit-rules=\\\"validRules\\\"\\n  :mouse-config=\\\"{selected: true}\\\"\\n  :edit-config=\\\"{trigger: 'dblclick', mode: 'cell', showStatus: true}\\\"\\n  :keyboard-config=\\\"{isArrow: true, isDel: true, isTab: true, isEdit: true}\\\"\\n  :checkbox-config=\\\"{checkField: 'checked'}\\\">\\n  <vue-xtable-column type=\\\"checkbox\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"100\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable width=\\\"200\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" width=\\\"200\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" width=\\\"200\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"rate\\\" title=\\\"Rate\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"region\\\" title=\\\"Region\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"time\\\" title=\\\"Time\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" width=\\\"300\\\" show-overflow></vue-xtable-column>\\n  <vue-xtable-column field=\\\"updateTime\\\" title=\\\"UpdateTime\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"createTime\\\" title=\\\"CreateTime\\\" width=\\\"200\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      loading: false,\\n      validRules: {\\n        name: [\\n          { required: true, message: '名称必须填写' },\\n          { min: 3, max: 50, message: '名称长度在 3 到 50 个字符' }\\n        ],\\n        sex: [\\n          { required: true, message: '性别必须填写' }\\n        ]\\n      },\\n\\n    }\\n  },\\n  created () {\\n    this.findList()\\n  },\\n\\n  methods: {\\n    findList () {\\n      this.loading = true\\n      return new Promise(resolve => {\\n        setTimeout(() => {\\n          let tableData = window.MOCK_DATA_LIST.slice(0, 2000)\\n          // 阻断 vue 对大数组的双向绑定，避免 vue 绑定大数据造成短暂的卡顿\\n          if (this.$refs.xTable) {\\n            this.$refs.xTable.loadData(tableData)\\n          }\\n          resolve()\\n          this.loading = false\\n        }, 300)\\n      })\\n    },\\n    validEvent () {\\n      this.$refs.xTable.validate(valid => {\\n        if (valid) {\\n          this.$notify.success({ message:'校验成功！'});\\n        } else {\\n          this.$notify.error({ message:'校验不通过！'});\\n        }\\n      })\\n    },\\n    fullValidEvent () {\\n      this.$refs.xTable.fullValidate((valid, errMap) => {\\n        if (valid) {\\n          this.$notify.success({ message:'校验成功！'});\\n        } else {\\n          let msgList = []\\n          Object.values(errMap).forEach(errList => {\\n            errList.forEach(params => {\\n              let { rowIndex, column, rules } = params\\n              rules.forEach(rule => {\\n                msgList.push(`第 ${rowIndex} 行 ${column.title} 校验错误：${rule.message}`)\\n              })\\n            })\\n          })\\n\\n          var h = this.$createElement;\\n          this.$alert({\\n            type: \\\"error\\\",\\n            message: h('div',[msgList.map(function (msg) {\\n              return h(\\\"div\\\", [msg]);\\n            })])\\n          });\\n        }\\n      })\\n    },\\n    selectValidEvent () {\\n      let selectRecords = this.$refs.xTable.getSelectRecords()\\n      if (selectRecords.length > 0) {\\n        this.$refs.xTable.validate(selectRecords, valid => {\\n          if (valid) {\\n            this.$notify.success({ message:'校验成功！'});\\n          } else {\\n            this.$notify.error({ message:'校验不通过！'});\\n          }\\n        })\\n      } else {\\n        this.$notify.warning({ message:'未选中数据！'});\\n      }\\n    },\\n    insertEvent (row) {\\n      let xTable = this.$refs.xTable\\n      let record = {}\\n      xTable.insertAt(record, row).then(({ row }) => {\\n        xTable.setActiveRow(row)\\n      })\\n    },\\n    getInsertEvent () {\\n      let insertRecords = this.$refs.xTable.getInsertRecords()\\n      this.$alert({ message: insertRecords.length })\\n    },\\n    getRemoveEvent () {\\n      let removeRecords = this.$refs.xTable.getRemoveRecords()\\n      this.$alert({ message: removeRecords.length })\\n    },\\n    getUpdateEvent () {\\n      let updateRecords = this.$refs.xTable.getUpdateRecords()\\n      this.$alert({ message: updateRecords.length })\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-toolbar :refresh=\\\"{query: findList}\\\">\\n      <template v-slot:buttons>\\n        <vue-button>\\n          <template>新增操作</template>\\n          <template v-slot:dropdowns>\\n            <vue-button @click=\\\"insertEvent(null)\\\">从第一行插入</vue-button>\\n            <vue-button @click=\\\"insertEvent(-1)\\\">从最后插入</vue-button>\\n            <vue-button @click=\\\"insertEvent($refs.xTable.getData(100))\\\">插入到 100 行</vue-button>\\n            <vue-button @click=\\\"insertEvent($refs.xTable.getData(2000))\\\">插入到 2000 行</vue-button>\\n          </template>\\n        </vue-button>\\n        <vue-button>\\n          <template>删除操作</template>\\n          <template v-slot:dropdowns>\\n            <vue-button @click=\\\"$refs.xTable.removeSelecteds()\\\">删除选中</vue-button>\\n            <vue-button @click=\\\"$refs.xTable.remove($refs.xTable.getData(0))\\\">删除第一行</vue-button>\\n            <vue-button @click=\\\"$refs.xTable.remove($refs.xTable.getData($refs.xTable.getData().length - 1))\\\">删除最后一行</vue-button>\\n            <vue-button @click=\\\"$refs.xTable.remove($refs.xTable.getData(100))\\\">删除第 100 行</vue-button>\\n          </template>\\n        </vue-button>\\n        <vue-button>\\n          <template>校验操作</template>\\n          <template v-slot:dropdowns>\\n            <vue-button @click=\\\"validEvent\\\">基本校验</vue-button>\\n            <vue-button @click=\\\"fullValidEvent\\\">完整校验</vue-button>\\n            <vue-button @click=\\\"selectValidEvent\\\">选中校验</vue-button>\\n          </template>\\n        </vue-button>\\n        <vue-button @click=\\\"getInsertEvent\\\">获取新增</vue-button>\\n        <vue-button @click=\\\"getRemoveEvent\\\">获取删除</vue-button>\\n        <vue-button @click=\\\"getUpdateEvent\\\">获取修改</vue-button>\\n        <vue-button>\\n          <template>滚动操作</template>\\n          <template v-slot:dropdowns>\\n            <vue-button @click=\\\"$refs.xTable.scrollToRow($refs.xTable.getData(10))\\\">滚动到第 10 行</vue-button>\\n            <vue-button @click=\\\"$refs.xTable.scrollToRow($refs.xTable.getData(4000))\\\">滚动第 4000 行</vue-button>\\n            <vue-button @click=\\\"$refs.xTable.scrollToColumn($refs.xTable.getColumns(1))\\\">滚动第 1 列</vue-button>\\n            <vue-button @click=\\\"$refs.xTable.scrollToColumn($refs.xTable.getColumns(10))\\\">滚动第 10 列</vue-button>\\n          </template>\\n        </vue-button>\\n      </template>\\n    </vue-toolbar>\\n\\n    <vue-xtable\\n      border\\n      resizable\\n      show-overflow\\n      ref=\\\"xTable\\\"\\n      height=\\\"300\\\"\\n      :loading=\\\"loading\\\"\\n      :edit-rules=\\\"validRules\\\"\\n      :mouse-config=\\\"{selected: true}\\\"\\n      :edit-config=\\\"{trigger: 'dblclick', mode: 'cell', showStatus: true}\\\"\\n      :keyboard-config=\\\"{isArrow: true, isDel: true, isTab: true, isEdit: true}\\\"\\n      :checkbox-config=\\\"{checkField: 'checked'}\\\">\\n      <vue-xtable-column type=\\\"checkbox\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"100\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable width=\\\"200\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" width=\\\"200\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" width=\\\"200\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"rate\\\" title=\\\"Rate\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"region\\\" title=\\\"Region\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"time\\\" title=\\\"Time\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" width=\\\"300\\\" show-overflow></vue-xtable-column>\\n      <vue-xtable-column field=\\\"updateTime\\\" title=\\\"UpdateTime\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"createTime\\\" title=\\\"CreateTime\\\" width=\\\"200\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      loading: false,\n      validRules: {\n        name: [\n          { required: true, message: '名称必须填写' },\n          { min: 3, max: 50, message: '名称长度在 3 到 50 个字符' }\n        ],\n        sex: [\n          { required: true, message: '性别必须填写' }\n        ]\n      },\n\n    }\n  },\n  created () {\n    this.findList()\n  },\n\n  methods: {\n    findList () {\n      this.loading = true\n      return new Promise(resolve => {\n        setTimeout(() => {\n          let tableData = window.MOCK_DATA_LIST.slice(0, 2000)\n          // 阻断 vue 对大数组的双向绑定，避免 vue 绑定大数据造成短暂的卡顿\n          if (this.$refs.xTable) {\n            this.$refs.xTable.loadData(tableData)\n          }\n          resolve()\n          this.loading = false\n        }, 300)\n      })\n    },\n    validEvent () {\n      this.$refs.xTable.validate(valid => {\n        if (valid) {\n          this.$notify.success({ message:'校验成功！'});\n        } else {\n          this.$notify.error({ message:'校验不通过！'});\n        }\n      })\n    },\n    fullValidEvent () {\n      this.$refs.xTable.fullValidate((valid, errMap) => {\n        if (valid) {\n          this.$notify.success({ message:'校验成功！'});\n        } else {\n          let msgList = []\n          Object.values(errMap).forEach(errList => {\n            errList.forEach(params => {\n              let { rowIndex, column, rules } = params\n              rules.forEach(rule => {\n                msgList.push(`第 ${rowIndex} 行 ${column.title} 校验错误：${rule.message}`)\n              })\n            })\n          })\n\n          var h = this.$createElement;\n          this.$alert({\n            type: \"error\",\n            message: h('div',[msgList.map(function (msg) {\n              return h(\"div\", [msg]);\n            })])\n          });\n        }\n      })\n    },\n    selectValidEvent () {\n      let selectRecords = this.$refs.xTable.getSelectRecords()\n      if (selectRecords.length > 0) {\n        this.$refs.xTable.validate(selectRecords, valid => {\n          if (valid) {\n            this.$notify.success({ message:'校验成功！'});\n          } else {\n            this.$notify.error({ message:'校验不通过！'});\n          }\n        })\n      } else {\n        this.$notify.warning({ message:'未选中数据！'});\n      }\n    },\n    insertEvent (row) {\n      let xTable = this.$refs.xTable\n      let record = {}\n      xTable.insertAt(record, row).then(({ row }) => {\n        xTable.setActiveRow(row)\n      })\n    },\n    getInsertEvent () {\n      let insertRecords = this.$refs.xTable.getInsertRecords()\n      this.$alert({ message: insertRecords.length })\n    },\n    getRemoveEvent () {\n      let removeRecords = this.$refs.xTable.getRemoveRecords()\n      this.$alert({ message: removeRecords.length })\n    },\n    getUpdateEvent () {\n      let updateRecords = this.$refs.xTable.getUpdateRecords()\n      this.$alert({ message: updateRecords.length })\n    }\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/scroll/PartialLoad\",\"name\":\"XtableDemo.scroll.PartialLoad\",\"head\":{\"label\":\"XtableDemo.scroll.PartialLoad.label\",\"description\":\"XtableDemo.scroll.PartialLoad.description\"},\"samples\":[{\"id\":\"XtableDemo.scroll.PartialLoad.sample1\",\"label\":\"XtableDemo.scroll.PartialLoad.sample1.label\",\"description\":\"XtableDemo.scroll.PartialLoad.sample1.description\",\"code\":\"<vue-toolbar :loading=\\\"loading\\\">\\n  <template v-slot:buttons>\\n    <vue-button @click=\\\"loadList(20)\\\">+20条</vue-button>\\n    <vue-button @click=\\\"loadList(100)\\\">+100条</vue-button>\\n    <vue-button @click=\\\"loadList(500)\\\">+500条</vue-button>\\n    <vue-button @click=\\\"loadList(1000)\\\">+1000条</vue-button>\\n    <vue-button @click=\\\"loadList(2000)\\\">+2000条</vue-button>\\n    <vue-button @click=\\\"$refs.xTable.scrollTo(null, 4000)\\\">y=4000</vue-button>\\n    <vue-button @click=\\\"$refs.xTable.clearScroll()\\\">清除滚动状态</vue-button>\\n  </template>\\n</vue-toolbar>\\n\\n<vue-xtable\\n  ref=\\\"xTable\\\"\\n  border\\n  resizable\\n  show-overflow\\n  height=\\\"500\\\"\\n  row-id=\\\"id\\\"\\n  :loading=\\\"loading\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"100\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable></vue-xtable-column>\\n  <vue-xtable-column field=\\\"role\\\" title=\\\"Role\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      loading: false,\\n\\n    }\\n  },\\n  created () {\\n    // 动态定义，阻断 vue 对大数据双向绑定，提升加载速度\\n    this.allData = []\\n    this.loadList(600)\\n  },\\n\\n  methods: {\\n    loadList (size) {\\n      this.loading = true\\n      this.findList(size).then(data => {\\n        this.allData = this.allData.concat(data)// 局部追加并保存所有数据\\n        this.$refs.xTable.loadData(this.allData)\\n        this.loading = false\\n      })\\n    },\\n    findList (size) {\\n      return new Promise(resolve => {\\n        setTimeout(() => {\\n          var list = []\\n          for (var index = 0; index < size; index++) {\\n            list.push({\\n              id: VueUtil.uniqueId(),\\n              name: 'test' + index,\\n              role: 'developer',\\n              age: 10,\\n              date: '2019-05-01',\\n              address: 'address abc' + index\\n            })\\n          }\\n          resolve(list)\\n        }, 250)\\n      })\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-toolbar :loading=\\\"loading\\\">\\n      <template v-slot:buttons>\\n        <vue-button @click=\\\"loadList(20)\\\">+20条</vue-button>\\n        <vue-button @click=\\\"loadList(100)\\\">+100条</vue-button>\\n        <vue-button @click=\\\"loadList(500)\\\">+500条</vue-button>\\n        <vue-button @click=\\\"loadList(1000)\\\">+1000条</vue-button>\\n        <vue-button @click=\\\"loadList(2000)\\\">+2000条</vue-button>\\n        <vue-button @click=\\\"$refs.xTable.scrollTo(null, 4000)\\\">y=4000</vue-button>\\n        <vue-button @click=\\\"$refs.xTable.clearScroll()\\\">清除滚动状态</vue-button>\\n      </template>\\n    </vue-toolbar>\\n\\n    <vue-xtable\\n      ref=\\\"xTable\\\"\\n      border\\n      resizable\\n      show-overflow\\n      height=\\\"500\\\"\\n      row-id=\\\"id\\\"\\n      :loading=\\\"loading\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"100\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable></vue-xtable-column>\\n      <vue-xtable-column field=\\\"role\\\" title=\\\"Role\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      loading: false,\n\n    }\n  },\n  created () {\n    // 动态定义，阻断 vue 对大数据双向绑定，提升加载速度\n    this.allData = []\n    this.loadList(600)\n  },\n\n  methods: {\n    loadList (size) {\n      this.loading = true\n      this.findList(size).then(data => {\n        this.allData = this.allData.concat(data)// 局部追加并保存所有数据\n        this.$refs.xTable.loadData(this.allData)\n        this.loading = false\n      })\n    },\n    findList (size) {\n      return new Promise(resolve => {\n        setTimeout(() => {\n          var list = []\n          for (var index = 0; index < size; index++) {\n            list.push({\n              id: VueUtil.uniqueId(),\n              name: 'test' + index,\n              role: 'developer',\n              age: 10,\n              date: '2019-05-01',\n              address: 'address abc' + index\n            })\n          }\n          resolve(list)\n        }, 250)\n      })\n    }\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/scroll/RowValid\",\"name\":\"XtableDemo.scroll.RowValid\",\"head\":{\"label\":\"XtableDemo.scroll.RowValid.label\",\"description\":\"XtableDemo.scroll.RowValid.description\"},\"samples\":[{\"id\":\"XtableDemo.scroll.RowValid.sample1\",\"label\":\"XtableDemo.scroll.RowValid.sample1.label\",\"description\":\"XtableDemo.scroll.RowValid.sample1.description\",\"code\":\"<vue-toolbar :refresh=\\\"{query: findList}\\\">\\n  <template v-slot:buttons>\\n    <vue-dropdown>\\n      <vue-button>校验操作<i class=\\\"vue-icon-arrow-down vue-icon--right\\\"></i></vue-button>\\n      <vue-dropdown-menu slot=\\\"dropdown\\\">\\n        <vue-dropdown-item @click.native=\\\"validEvent\\\">基本校验</vue-dropdown-item>\\n        <vue-dropdown-item @click.native=\\\"fullValidEvent\\\">完整校验</vue-dropdown-item>\\n        <vue-dropdown-item @click.native=\\\"selectValidEvent\\\">选中校验</vue-dropdown-item>\\n      </vue-dropdown-menu>\\n    </vue-dropdown>\\n  </template>\\n</vue-toolbar>\\n\\n<vue-xtable\\n  border\\n  resizable\\n  show-overflow\\n  ref=\\\"xTable\\\"\\n  height=\\\"300\\\"\\n  :loading=\\\"loading\\\"\\n  :edit-rules=\\\"validRules\\\"\\n  :edit-config=\\\"{trigger: 'click', mode: 'row', showStatus: true}\\\"\\n  :checkbox-config=\\\"{checkField: 'checked'}\\\">\\n  <vue-xtable-column type=\\\"checkbox\\\" width=\\\"60\\\"></vue-xtable-column>\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"100\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable width=\\\"200\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" width=\\\"200\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" width=\\\"200\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"rate\\\" title=\\\"Rate\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"region\\\" title=\\\"Region\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"time\\\" title=\\\"Time\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" width=\\\"300\\\" show-overflow></vue-xtable-column>\\n  <vue-xtable-column field=\\\"updateTime\\\" title=\\\"UpdateTime\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"createTime\\\" title=\\\"CreateTime\\\" width=\\\"200\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      loading: false,\\n      validRules: {\\n        name: [\\n          { required: true, message: '名称必须填写' },\\n          { min: 3, max: 50, message: '名称长度在 3 到 50 个字符' }\\n        ],\\n        sex: [\\n          { required: true, message: '性别必须填写' }\\n        ]\\n      },\\n\\n    }\\n  },\\n  created () {\\n    this.findList()\\n  },\\n\\n  methods: {\\n    findList () {\\n      this.loading = true\\n      return new Promise(resolve => {\\n        setTimeout(() => {\\n          let tableData = window.MOCK_DATA_LIST.slice(0, 1000)\\n          // 阻断 vue 对大数组的双向绑定，避免 vue 绑定大数据造成短暂的卡顿\\n          if (this.$refs.xTable) {\\n            this.$refs.xTable.loadData(tableData)\\n          }\\n          resolve()\\n          this.loading = false\\n        }, 300)\\n      })\\n    },\\n    validEvent () {\\n      this.$refs.xTable.validate(valid => {\\n        if (valid) {\\n          this.$notify.success({ message:'校验成功！'});\\n        } else {\\n          this.$notify.error({ message:'校验不通过！'});\\n        }\\n      })\\n    },\\n    fullValidEvent () {\\n      this.$refs.xTable.fullValidate((valid, errMap) => {\\n        if (valid) {\\n          this.$notify.success({ message:'校验成功！'});\\n        } else {\\n          let msgList = []\\n          Object.values(errMap).forEach(errList => {\\n            errList.forEach(params => {\\n              let { rowIndex, column, rules } = params\\n              rules.forEach(rule => {\\n                msgList.push(`第 ${rowIndex} 行 ${column.title} 校验错误：${rule.message}`)\\n              })\\n            })\\n          })\\n          var h = this.$createElement;\\n          this.$alert({\\n            type: \\\"error\\\",\\n            message: h('div',[msgList.map(function (msg) {\\n              return h(\\\"div\\\", [msg]);\\n            })])\\n          });\\n        }\\n      })\\n    },\\n    selectValidEvent () {\\n      let selectRecords = this.$refs.xTable.getSelectRecords()\\n      if (selectRecords.length > 0) {\\n        this.$refs.xTable.validate(selectRecords, valid => {\\n          if (valid) {\\n            this.$notify.success({ message:'校验成功！'});\\n          } else {\\n            this.$notify.error({ message:'校验不通过！'});\\n          }\\n        })\\n      } else {\\n        this.$notify.warning({ message:'未选中数据！'});\\n      }\\n    },\\n    insertEvent (row) {\\n      let xTable = this.$refs.xTable\\n      let record = {}\\n      xTable.insertAt(record, row).then(({ row }) => {\\n        xTable.setActiveRow(row)\\n      })\\n    },\\n    getInsertEvent () {\\n      let insertRecords = this.$refs.xTable.getInsertRecords()\\n      this.$alert({ message: insertRecords.length })\\n    },\\n    getRemoveEvent () {\\n      let removeRecords = this.$refs.xTable.getRemoveRecords()\\n      this.$alert({ message: removeRecords.length })\\n    },\\n    getUpdateEvent () {\\n      let updateRecords = this.$refs.xTable.getUpdateRecords()\\n      this.$alert({ message: updateRecords.length })\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-toolbar :refresh=\\\"{query: findList}\\\">\\n      <template v-slot:buttons>\\n        <vue-dropdown>\\n          <vue-button>校验操作<i class=\\\"vue-icon-arrow-down vue-icon--right\\\"></i></vue-button>\\n          <vue-dropdown-menu slot=\\\"dropdown\\\">\\n            <vue-dropdown-item @click.native=\\\"validEvent\\\">基本校验</vue-dropdown-item>\\n            <vue-dropdown-item @click.native=\\\"fullValidEvent\\\">完整校验</vue-dropdown-item>\\n            <vue-dropdown-item @click.native=\\\"selectValidEvent\\\">选中校验</vue-dropdown-item>\\n          </vue-dropdown-menu>\\n        </vue-dropdown>\\n      </template>\\n    </vue-toolbar>\\n\\n    <vue-xtable\\n      border\\n      resizable\\n      show-overflow\\n      ref=\\\"xTable\\\"\\n      height=\\\"300\\\"\\n      :loading=\\\"loading\\\"\\n      :edit-rules=\\\"validRules\\\"\\n      :edit-config=\\\"{trigger: 'click', mode: 'row', showStatus: true}\\\"\\n      :checkbox-config=\\\"{checkField: 'checked'}\\\">\\n      <vue-xtable-column type=\\\"checkbox\\\" width=\\\"60\\\"></vue-xtable-column>\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"100\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable width=\\\"200\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" width=\\\"200\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" width=\\\"200\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"rate\\\" title=\\\"Rate\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"region\\\" title=\\\"Region\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"time\\\" title=\\\"Time\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" width=\\\"300\\\" show-overflow></vue-xtable-column>\\n      <vue-xtable-column field=\\\"updateTime\\\" title=\\\"UpdateTime\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"createTime\\\" title=\\\"CreateTime\\\" width=\\\"200\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      loading: false,\n      validRules: {\n        name: [\n          { required: true, message: '名称必须填写' },\n          { min: 3, max: 50, message: '名称长度在 3 到 50 个字符' }\n        ],\n        sex: [\n          { required: true, message: '性别必须填写' }\n        ]\n      },\n\n    }\n  },\n  created () {\n    this.findList()\n  },\n\n  methods: {\n    findList () {\n      this.loading = true\n      return new Promise(resolve => {\n        setTimeout(() => {\n          let tableData = window.MOCK_DATA_LIST.slice(0, 1000)\n          // 阻断 vue 对大数组的双向绑定，避免 vue 绑定大数据造成短暂的卡顿\n          if (this.$refs.xTable) {\n            this.$refs.xTable.loadData(tableData)\n          }\n          resolve()\n          this.loading = false\n        }, 300)\n      })\n    },\n    validEvent () {\n      this.$refs.xTable.validate(valid => {\n        if (valid) {\n          this.$notify.success({ message:'校验成功！'});\n        } else {\n          this.$notify.error({ message:'校验不通过！'});\n        }\n      })\n    },\n    fullValidEvent () {\n      this.$refs.xTable.fullValidate((valid, errMap) => {\n        if (valid) {\n          this.$notify.success({ message:'校验成功！'});\n        } else {\n          let msgList = []\n          Object.values(errMap).forEach(errList => {\n            errList.forEach(params => {\n              let { rowIndex, column, rules } = params\n              rules.forEach(rule => {\n                msgList.push(`第 ${rowIndex} 行 ${column.title} 校验错误：${rule.message}`)\n              })\n            })\n          })\n          var h = this.$createElement;\n          this.$alert({\n            type: \"error\",\n            message: h('div',[msgList.map(function (msg) {\n              return h(\"div\", [msg]);\n            })])\n          });\n        }\n      })\n    },\n    selectValidEvent () {\n      let selectRecords = this.$refs.xTable.getSelectRecords()\n      if (selectRecords.length > 0) {\n        this.$refs.xTable.validate(selectRecords, valid => {\n          if (valid) {\n            this.$notify.success({ message:'校验成功！'});\n          } else {\n            this.$notify.error({ message:'校验不通过！'});\n          }\n        })\n      } else {\n        this.$notify.warning({ message:'未选中数据！'});\n      }\n    },\n    insertEvent (row) {\n      let xTable = this.$refs.xTable\n      let record = {}\n      xTable.insertAt(record, row).then(({ row }) => {\n        xTable.setActiveRow(row)\n      })\n    },\n    getInsertEvent () {\n      let insertRecords = this.$refs.xTable.getInsertRecords()\n      this.$alert({ message: insertRecords.length })\n    },\n    getRemoveEvent () {\n      let removeRecords = this.$refs.xTable.getRemoveRecords()\n      this.$alert({ message: removeRecords.length })\n    },\n    getUpdateEvent () {\n      let updateRecords = this.$refs.xTable.getUpdateRecords()\n      this.$alert({ message: updateRecords.length })\n    }\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/scroll/Scroll\",\"name\":\"XtableDemo.scroll.Scroll\",\"head\":{\"label\":\"XtableDemo.scroll.Scroll.label\",\"description\":\"XtableDemo.scroll.Scroll.description\"},\"samples\":[{\"id\":\"XtableDemo.scroll.Scroll.sample1\",\"label\":\"XtableDemo.scroll.Scroll.sample1.label\",\"description\":\"XtableDemo.scroll.Scroll.sample1.description\",\"code\":\"<vue-xtable\\n  border\\n  show-overflow\\n  highlight-hover-row\\n  height=\\\"300\\\"\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"100\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n    }\\n  },\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 600)\\n  },\\n\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      show-overflow\\n      highlight-hover-row\\n      height=\\\"300\\\"\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"100\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 600)\n  },\n\n}},{\"id\":\"XtableDemo.scroll.Scroll.sample2\",\"label\":\"XtableDemo.scroll.Scroll.sample2.label\",\"description\":\"XtableDemo.scroll.Scroll.sample2.description\",\"code\":\"<vue-xtable\\n  border\\n  show-overflow\\n  ref=\\\"xTable\\\"\\n  height=\\\"300\\\"\\n  :optimization=\\\"{scrollX: {gt: 40}, scrollY: {gt: 200}}\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"100\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  created () {\\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 600)\\n    this.$nextTick(() => {\\n      this.$refs.xTable.reloadData(window.MOCK_DATA_LIST.slice(0, 1000))\\n    })\\n  },\\n\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      show-overflow\\n      ref=\\\"xTable\\\"\\n      height=\\\"300\\\"\\n      :optimization=\\\"{scrollX: {gt: 40}, scrollY: {gt: 200}}\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"100\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" show-overflow></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 600)\n    this.$nextTick(() => {\n      this.$refs.xTable.reloadData(window.MOCK_DATA_LIST.slice(0, 1000))\n    })\n  },\n\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/scroll/ScrollCols\",\"name\":\"XtableDemo.scroll.ScrollCols\",\"head\":{\"label\":\"XtableDemo.scroll.ScrollCols.label\",\"description\":\"XtableDemo.scroll.ScrollCols.description\"},\"samples\":[{\"id\":\"XtableDemo.scroll.ScrollCols.sample1\",\"label\":\"XtableDemo.scroll.ScrollCols.sample1.label\",\"description\":\"XtableDemo.scroll.ScrollCols.sample1.description\",\"code\":\"<vue-xgrid\\n  border\\n  show-overflow\\n  show-header-overflow\\n  ref=\\\"xGrid\\\"\\n  height=\\\"300\\\"\\n  :loading=\\\"loading\\\"\\n  :toolbar=\\\"tableToolbar\\\"\\n  :checkbox-config=\\\"{checkField: 'checked', labelField: 'nickname'}\\\">\\n  <template v-slot:buttons>\\n    <vue-button @click=\\\"loadColumnAndData(10000, 10000)\\\">加载1w列1w条</vue-button>\\n  </template>\\n</vue-xgrid>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      loading: false,\\n      tableToolbar: {},\\n    }\\n  },\\n  created () {\\n    this.loadColumnAndData(200, 600)\\n  },\\n\\n  methods: {\\n    loadColumnAndData (colSize, rowSize) {\\n      this.loading = true\\n      Promise.all([\\n        this.loadColumn(colSize),\\n        this.loadList(rowSize)\\n      ]).then(() => {\\n        this.loading = false\\n      })\\n    },\\n    loadColumn (size) {\\n      return new Promise(resolve => {\\n        setTimeout(() => {\\n          // 使用函数式加载，阻断 vue 对大数组的双向绑定，大数据性能翻倍提升\\n          let tableColumn = window.MOCK_COLUMN_LIST.slice(0, size)\\n          console.log(this.$refs)\\n          this.$refs.xGrid.loadColumn(tableColumn).then(() => {\\n            resolve()\\n          })\\n        }, 300)\\n      })\\n    },\\n    loadList (size) {\\n      return new Promise(resolve => {\\n        setTimeout(() => {\\n          // 使用函数式加载，阻断 vue 对大数组的双向绑定，大数据性能翻倍提升\\n          let tableData = window.MOCK_DATA_LIST.slice(0, size)\\n          this.$refs.xGrid.reloadData(tableData).then(() => {\\n            resolve()\\n          })\\n        }, 300)\\n      })\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xgrid\\n      border\\n      show-overflow\\n      show-header-overflow\\n      ref=\\\"xGrid\\\"\\n      height=\\\"300\\\"\\n      :loading=\\\"loading\\\"\\n      :toolbar=\\\"tableToolbar\\\"\\n      :checkbox-config=\\\"{checkField: 'checked', labelField: 'nickname'}\\\">\\n      <template v-slot:buttons>\\n        <vue-button @click=\\\"loadColumnAndData(10000, 10000)\\\">加载1w列1w条</vue-button>\\n      </template>\\n    </vue-xgrid></div>\",\"parameter\": {\n  data () {\n    return {\n      loading: false,\n      tableToolbar: {},\n    }\n  },\n  created () {\n    this.loadColumnAndData(200, 600)\n  },\n\n  methods: {\n    loadColumnAndData (colSize, rowSize) {\n      this.loading = true\n      Promise.all([\n        this.loadColumn(colSize),\n        this.loadList(rowSize)\n      ]).then(() => {\n        this.loading = false\n      })\n    },\n    loadColumn (size) {\n      return new Promise(resolve => {\n        setTimeout(() => {\n          // 使用函数式加载，阻断 vue 对大数组的双向绑定，大数据性能翻倍提升\n          let tableColumn = window.MOCK_COLUMN_LIST.slice(0, size)\n          console.log(this.$refs)\n          this.$refs.xGrid.loadColumn(tableColumn).then(() => {\n            resolve()\n          })\n        }, 300)\n      })\n    },\n    loadList (size) {\n      return new Promise(resolve => {\n        setTimeout(() => {\n          // 使用函数式加载，阻断 vue 对大数组的双向绑定，大数据性能翻倍提升\n          let tableData = window.MOCK_DATA_LIST.slice(0, size)\n          this.$refs.xGrid.reloadData(tableData).then(() => {\n            resolve()\n          })\n        }, 300)\n      })\n    }\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/scroll/ScrollFullCols\",\"name\":\"XtableDemo.scroll.ScrollFullCols\",\"head\":{\"label\":\"XtableDemo.scroll.ScrollFullCols.label\",\"description\":\"XtableDemo.scroll.ScrollFullCols.description\"},\"samples\":[{\"id\":\"XtableDemo.scroll.ScrollFullCols.sample1\",\"label\":\"XtableDemo.scroll.ScrollFullCols.sample1.label\",\"description\":\"XtableDemo.scroll.ScrollFullCols.sample1.description\",\"code\":\"<vue-xgrid\\n  border\\n  show-overflow\\n  show-header-overflow\\n  highlight-hover-row\\n  highlight-current-row\\n  ref=\\\"xGrid\\\"\\n  height=\\\"600\\\"\\n  :loading=\\\"loading\\\"\\n  :toolbar=\\\"tableToolbar\\\"\\n  :checkbox-config=\\\"{checkField: 'checked', labelField: 'nickname'}\\\">\\n  <template v-slot:buttons>\\n    <vue-button @click=\\\"loadColumnAndData(10000, 100000)\\\">加载1w列10w条</vue-button>\\n    <vue-button @click=\\\"$refs.xGrid.toggleRowSelection($refs.xGrid.getData(1))\\\">切换第二行选中</vue-button>\\n    <vue-button @click=\\\"$refs.xGrid.setSelection([$refs.xGrid.getData(2), $refs.xGrid.getData(3)], true)\\\">设置第三、四行选中</vue-button>\\n    <vue-button @click=\\\"$refs.xGrid.setAllSelection(true)\\\">设置所有行选中</vue-button>\\n    <vue-button @click=\\\"$refs.xGrid.clearSelection()\\\">清除所有行选中</vue-button>\\n    <vue-button @click=\\\"getSelectEvent\\\">获取选中</vue-button>\\n  </template>\\n</vue-xgrid>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      loading: false,\\n      tableToolbar: {},\\n\\n    }\\n  },\\n  created () {\\n    this.loadColumnAndData(200, 600)\\n  },\\n\\n  methods: {\\n    loadColumnAndData (colSize, rowSize) {\\n      this.loading = true\\n      Promise.all([\\n        this.loadColumn(colSize),\\n        this.loadList(rowSize)\\n      ]).then(() => {\\n        this.loading = false\\n      })\\n    },\\n    loadColumn (size) {\\n      return new Promise(resolve => {\\n        setTimeout(() => {\\n          // 使用函数式加载，阻断 vue 对大数组的双向绑定，大数据性能翻倍提升\\n          let tableColumn = window.MOCK_COLUMN_LIST.slice(0, size)\\n          this.$refs.xGrid.loadColumn(tableColumn).then(() => {\\n            resolve()\\n          })\\n        }, 300)\\n      })\\n    },\\n    loadList (size) {\\n      return new Promise(resolve => {\\n        setTimeout(() => {\\n          // 使用函数式加载，阻断 vue 对大数组的双向绑定，大数据性能翻倍提升\\n          let tableData = window.MOCK_DATA_LIST.slice(0, size)\\n          this.$refs.xGrid.reloadData(tableData).then(() => {\\n            resolve()\\n          })\\n        }, 300)\\n      })\\n    },\\n    getSelectEvent () {\\n      let selectRecords = this.$refs.xGrid.getSelectRecords()\\n      this.$alert({ message: selectRecords.length })\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xgrid\\n      border\\n      show-overflow\\n      show-header-overflow\\n      highlight-hover-row\\n      highlight-current-row\\n      ref=\\\"xGrid\\\"\\n      height=\\\"600\\\"\\n      :loading=\\\"loading\\\"\\n      :toolbar=\\\"tableToolbar\\\"\\n      :checkbox-config=\\\"{checkField: 'checked', labelField: 'nickname'}\\\">\\n      <template v-slot:buttons>\\n        <vue-button @click=\\\"loadColumnAndData(10000, 100000)\\\">加载1w列10w条</vue-button>\\n        <vue-button @click=\\\"$refs.xGrid.toggleRowSelection($refs.xGrid.getData(1))\\\">切换第二行选中</vue-button>\\n        <vue-button @click=\\\"$refs.xGrid.setSelection([$refs.xGrid.getData(2), $refs.xGrid.getData(3)], true)\\\">设置第三、四行选中</vue-button>\\n        <vue-button @click=\\\"$refs.xGrid.setAllSelection(true)\\\">设置所有行选中</vue-button>\\n        <vue-button @click=\\\"$refs.xGrid.clearSelection()\\\">清除所有行选中</vue-button>\\n        <vue-button @click=\\\"getSelectEvent\\\">获取选中</vue-button>\\n      </template>\\n    </vue-xgrid></div>\",\"parameter\": {\n  data () {\n    return {\n      loading: false,\n      tableToolbar: {},\n\n    }\n  },\n  created () {\n    this.loadColumnAndData(200, 600)\n  },\n\n  methods: {\n    loadColumnAndData (colSize, rowSize) {\n      this.loading = true\n      Promise.all([\n        this.loadColumn(colSize),\n        this.loadList(rowSize)\n      ]).then(() => {\n        this.loading = false\n      })\n    },\n    loadColumn (size) {\n      return new Promise(resolve => {\n        setTimeout(() => {\n          // 使用函数式加载，阻断 vue 对大数组的双向绑定，大数据性能翻倍提升\n          let tableColumn = window.MOCK_COLUMN_LIST.slice(0, size)\n          this.$refs.xGrid.loadColumn(tableColumn).then(() => {\n            resolve()\n          })\n        }, 300)\n      })\n    },\n    loadList (size) {\n      return new Promise(resolve => {\n        setTimeout(() => {\n          // 使用函数式加载，阻断 vue 对大数组的双向绑定，大数据性能翻倍提升\n          let tableData = window.MOCK_DATA_LIST.slice(0, size)\n          this.$refs.xGrid.reloadData(tableData).then(() => {\n            resolve()\n          })\n        }, 300)\n      })\n    },\n    getSelectEvent () {\n      let selectRecords = this.$refs.xGrid.getSelectRecords()\n      this.$alert({ message: selectRecords.length })\n    }\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/scroll/ScrollFullRows\",\"name\":\"XtableDemo.scroll.ScrollFullRows\",\"head\":{\"label\":\"XtableDemo.scroll.ScrollFullRows.label\",\"description\":\"XtableDemo.scroll.ScrollFullRows.description\"},\"samples\":[{\"id\":\"XtableDemo.scroll.ScrollFullRows.sample1\",\"label\":\"XtableDemo.scroll.ScrollFullRows.sample1.label\",\"description\":\"XtableDemo.scroll.ScrollFullRows.sample1.description\",\"code\":\"<div>\\n    <vue-button @click=\\\"loadList(100000)\\\">加载10w条</vue-button>\\n    <vue-button @click=\\\"$refs.xTable.toggleRowSelection($refs.xTable.getData(1))\\\">切换第二行选中</vue-button>\\n    <vue-button @click=\\\"$refs.xTable.setSelection([$refs.xTable.getData(2), $refs.xTable.getData(3)], true)\\\">设置第三、四行选中</vue-button>\\n    <vue-button @click=\\\"$refs.xTable.setAllSelection(true)\\\">设置所有行选中</vue-button>\\n    <vue-button @click=\\\"$refs.xTable.clearSelection()\\\">清除所有行选中</vue-button>\\n    <vue-button @click=\\\"getSelectEvent\\\">获取选中</vue-button>\\n</div>\\n\\n<vue-xtable\\n  ref=\\\"xTable\\\"\\n  border\\n  resizable\\n  show-overflow\\n  show-header-overflow\\n  highlight-hover-row\\n  highlight-current-row\\n  height=\\\"600\\\"\\n  :loading=\\\"loading\\\"\\n  :checkbox-config=\\\"{checkField: 'checked'}\\\">\\n  <vue-xtable-column type=\\\"checkbox\\\" width=\\\"60\\\" fixed=\\\"left\\\"></vue-xtable-column>\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"100\\\" fixed=\\\"left\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"rate\\\" title=\\\"Rate\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"region\\\" title=\\\"Region\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"time\\\" title=\\\"Time\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" width=\\\"300\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"updateTime\\\" title=\\\"UpdateTime\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"createTime\\\" title=\\\"CreateTime\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"attr1\\\" title=\\\"Attr1\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"attr2\\\" title=\\\"Attr2\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"attr3\\\" title=\\\"Attr3\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"attr4\\\" title=\\\"Attr4\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"attr5\\\" title=\\\"Attr5\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"attr6\\\" title=\\\"Attr6\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"attr7\\\" title=\\\"Attr7\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"attr8\\\" title=\\\"Attr8\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"attr9\\\" title=\\\"Attr9\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"createTime\\\" title=\\\"CreateTime\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" width=\\\"200\\\" fixed=\\\"right\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      loading: false,\\n\\n    }\\n  },\\n  created () {\\n    this.loadList(600)\\n  },\\n\\n  methods: {\\n    loadList (size) {\\n      this.loading = true\\n      setTimeout(() => {\\n        let xTable = this.$refs.xTable\\n        if (xTable) {\\n          // 使用函数式加载，阻断 vue 对大数组的双向绑定，大数据性能翻倍提升\\n          xTable.reloadData(window.MOCK_DATA_LIST.slice(0, size)).then(() => {\\n            this.loading = false\\n          })\\n        } else {\\n          this.loading = false\\n        }\\n      }, 300)\\n    },\\n    getSelectEvent () {\\n      let selectRecords = this.$refs.xTable.getSelectRecords()\\n      this.$alert({ message: selectRecords.length })\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <div>\\n        <vue-button @click=\\\"loadList(100000)\\\">加载10w条</vue-button>\\n        <vue-button @click=\\\"$refs.xTable.toggleRowSelection($refs.xTable.getData(1))\\\">切换第二行选中</vue-button>\\n        <vue-button @click=\\\"$refs.xTable.setSelection([$refs.xTable.getData(2), $refs.xTable.getData(3)], true)\\\">设置第三、四行选中</vue-button>\\n        <vue-button @click=\\\"$refs.xTable.setAllSelection(true)\\\">设置所有行选中</vue-button>\\n        <vue-button @click=\\\"$refs.xTable.clearSelection()\\\">清除所有行选中</vue-button>\\n        <vue-button @click=\\\"getSelectEvent\\\">获取选中</vue-button>\\n    </div>\\n\\n    <vue-xtable\\n      ref=\\\"xTable\\\"\\n      border\\n      resizable\\n      show-overflow\\n      show-header-overflow\\n      highlight-hover-row\\n      highlight-current-row\\n      height=\\\"600\\\"\\n      :loading=\\\"loading\\\"\\n      :checkbox-config=\\\"{checkField: 'checked'}\\\">\\n      <vue-xtable-column type=\\\"checkbox\\\" width=\\\"60\\\" fixed=\\\"left\\\"></vue-xtable-column>\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"100\\\" fixed=\\\"left\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"rate\\\" title=\\\"Rate\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"region\\\" title=\\\"Region\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"time\\\" title=\\\"Time\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" width=\\\"300\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"updateTime\\\" title=\\\"UpdateTime\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"createTime\\\" title=\\\"CreateTime\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"attr1\\\" title=\\\"Attr1\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"attr2\\\" title=\\\"Attr2\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"attr3\\\" title=\\\"Attr3\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"attr4\\\" title=\\\"Attr4\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"attr5\\\" title=\\\"Attr5\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"attr6\\\" title=\\\"Attr6\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"attr7\\\" title=\\\"Attr7\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"attr8\\\" title=\\\"Attr8\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"attr9\\\" title=\\\"Attr9\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"createTime\\\" title=\\\"CreateTime\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" width=\\\"200\\\" fixed=\\\"right\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      loading: false,\n\n    }\n  },\n  created () {\n    this.loadList(600)\n  },\n\n  methods: {\n    loadList (size) {\n      this.loading = true\n      setTimeout(() => {\n        let xTable = this.$refs.xTable\n        if (xTable) {\n          // 使用函数式加载，阻断 vue 对大数组的双向绑定，大数据性能翻倍提升\n          xTable.reloadData(window.MOCK_DATA_LIST.slice(0, size)).then(() => {\n            this.loading = false\n          })\n        } else {\n          this.loading = false\n        }\n      }, 300)\n    },\n    getSelectEvent () {\n      let selectRecords = this.$refs.xTable.getSelectRecords()\n      this.$alert({ message: selectRecords.length })\n    }\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/scroll/ScrollRows\",\"name\":\"XtableDemo.scroll.ScrollRows\",\"head\":{\"label\":\"XtableDemo.scroll.ScrollRows.label\",\"description\":\"XtableDemo.scroll.ScrollRows.description\"},\"samples\":[{\"id\":\"XtableDemo.scroll.ScrollRows.sample1\",\"label\":\"XtableDemo.scroll.ScrollRows.sample1.label\",\"description\":\"XtableDemo.scroll.ScrollRows.sample1.description\",\"code\":\"<div>\\n    <vue-button @click=\\\"loadList(10000)\\\">加载1w条</vue-button>\\n</div>\\n\\n<vue-xtable\\n  ref=\\\"xTable\\\"\\n  border\\n  resizable\\n  show-overflow\\n  height=\\\"300\\\"\\n  :loading=\\\"loading\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"100\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"rate\\\" title=\\\"Rate\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"region\\\" title=\\\"Region\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"time\\\" title=\\\"Time\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" width=\\\"300\\\" show-overflow></vue-xtable-column>\\n  <vue-xtable-column field=\\\"updateTime\\\" title=\\\"UpdateTime\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"createTime\\\" title=\\\"CreateTime\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"attr1\\\" title=\\\"Attr1\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"attr2\\\" title=\\\"Attr2\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"attr3\\\" title=\\\"Attr3\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"attr4\\\" title=\\\"Attr4\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"attr5\\\" title=\\\"Attr5\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"attr6\\\" title=\\\"Attr6\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"attr7\\\" title=\\\"Attr7\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"attr8\\\" title=\\\"Attr8\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"attr9\\\" title=\\\"Attr9\\\" width=\\\"200\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"createTime\\\" title=\\\"CreateTime\\\" width=\\\"200\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      loading: false,\\n\\n    }\\n  },\\n  created () {\\n    this.loadList(600)\\n  },\\n\\n  methods: {\\n    loadList (size) {\\n      this.loading = true\\n      setTimeout(() => {\\n        let xTable = this.$refs.xTable\\n        if (xTable) {\\n          // 使用函数式加载，阻断 vue 对大数组的双向绑定，大数据性能翻倍提升\\n          xTable.reloadData(window.MOCK_DATA_LIST.slice(0, size)).then(() => {\\n            this.loading = false\\n          })\\n        } else {\\n          this.loading = false\\n        }\\n      }, 300)\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <div>\\n        <vue-button @click=\\\"loadList(10000)\\\">加载1w条</vue-button>\\n    </div>\\n\\n    <vue-xtable\\n      ref=\\\"xTable\\\"\\n      border\\n      resizable\\n      show-overflow\\n      height=\\\"300\\\"\\n      :loading=\\\"loading\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"100\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" sortable width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"sex\\\" title=\\\"Sex\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"rate\\\" title=\\\"Rate\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"region\\\" title=\\\"Region\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"time\\\" title=\\\"Time\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"address\\\" title=\\\"Address\\\" width=\\\"300\\\" show-overflow></vue-xtable-column>\\n      <vue-xtable-column field=\\\"updateTime\\\" title=\\\"UpdateTime\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"createTime\\\" title=\\\"CreateTime\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"attr1\\\" title=\\\"Attr1\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"attr2\\\" title=\\\"Attr2\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"attr3\\\" title=\\\"Attr3\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"attr4\\\" title=\\\"Attr4\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"attr5\\\" title=\\\"Attr5\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"attr6\\\" title=\\\"Attr6\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"attr7\\\" title=\\\"Attr7\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"attr8\\\" title=\\\"Attr8\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"attr9\\\" title=\\\"Attr9\\\" width=\\\"200\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"createTime\\\" title=\\\"CreateTime\\\" width=\\\"200\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      loading: false,\n\n    }\n  },\n  created () {\n    this.loadList(600)\n  },\n\n  methods: {\n    loadList (size) {\n      this.loading = true\n      setTimeout(() => {\n        let xTable = this.$refs.xTable\n        if (xTable) {\n          // 使用函数式加载，阻断 vue 对大数组的双向绑定，大数据性能翻倍提升\n          xTable.reloadData(window.MOCK_DATA_LIST.slice(0, size)).then(() => {\n            this.loading = false\n          })\n        } else {\n          this.loading = false\n        }\n      }, 300)\n    }\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/scroll/Template\",\"name\":\"XtableDemo.scroll.Template\",\"head\":{\"label\":\"XtableDemo.scroll.Template.label\",\"description\":\"XtableDemo.scroll.Template.description\"},\"samples\":[{\"id\":\"XtableDemo.scroll.Template.sample1\",\"label\":\"XtableDemo.scroll.Template.sample1.label\",\"description\":\"XtableDemo.scroll.Template.sample1.description\",\"code\":\"<vue-xgrid\\n  border\\n  resizable\\n  show-overflow\\n  ref=\\\"xGrid\\\"\\n  height=\\\"400\\\"\\n  :loading=\\\"loading\\\"\\n  :toolbar=\\\"tableToolbar\\\"\\n  :columns=\\\"tableColumn\\\"\\n  :edit-config=\\\"{trigger: 'click', mode: 'cell'}\\\">\\n</vue-xgrid>\\n\\n<vue-dialog v-model=\\\"showDetails\\\" title=\\\"查看详情\\\" width=\\\"800\\\" height=\\\"400\\\" resize>\\n  <template>\\n    <div v-if=\\\"selectRow\\\" v-html=\\\"selectRow.html3\\\"></div>\\n  </template>\\n</vue-dialog>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      loading: false,\\n      showDetails: false,\\n      selectRow: null,\\n      tableColumn: [\\n        { type: 'index', width: 50 },\\n        {\\n          field: 'name',\\n          title: 'Name',\\n          slots: {\\n            default: ({ row, column }) => {\\n              return [\\n                <span style=\\\"color: red;\\\">{ row.name }</span>,\\n                <button onClick={ () => this.showDetailEvent(row, column) }>弹框</button>\\n              ]\\n            }\\n          }\\n        },\\n        {\\n          field: 'sex',\\n          title: 'Sex',\\n          showHeaderOverflow: true,\\n          filters: [{ data: '' }],\\n          filterMethod: this.filterSexMethod,\\n          editRender: { type: 'default' },\\n          slots: {\\n            default: ({ row, column }) => {\\n              return [\\n                <a class=\\\"link\\\" href=\\\"/\\\">我是超链接：{ row.sex }</a>\\n              ]\\n            },\\n            header: ({ column }) => {\\n              return [\\n                <span>\\n                  <i>@</i>\\n                  <span style=\\\"color: red;\\\" onClick={ this.headerClickEvent }>{ column.title }</span>\\n                </span>\\n              ]\\n            },\\n            filter: ({ column, context }) => {\\n              return column.filters.map(option => {\\n                return <input type=\\\"type\\\" value={ option.data } onInput={ evnt => this.changeFilterEvent(evnt, option, context) }/>\\n              })\\n            },\\n            edit: ({ row }) => {\\n              return [\\n                <input type=\\\"text\\\" value={ row.sex } onInput={ evnt => { row.sex = evnt.target.value } }/>\\n              ]\\n            }\\n          }\\n        },\\n        {\\n          field: 'address',\\n          title: 'Address',\\n          slots: {\\n            default: ({ row }, h) => {\\n              return [\\n                h('span', {\\n                  style: {\\n                    color: 'blue'\\n                  },\\n                  on: {\\n                    click: () => this.addressClickEvent(row)\\n                  }\\n                }, row.address)\\n              ]\\n            }\\n          }\\n        },\\n        {\\n          field: 'html2',\\n          title: 'Html片段',\\n          slots: {\\n            default: ({ row }, h) => {\\n              return [\\n                <span domPropsInnerHTML={ row.html2 }></span>\\n              ]\\n            }\\n          }\\n        },\\n        {\\n          field: 'img1',\\n          title: '图片路径',\\n          slots: {\\n            default: ({ row }, h) => {\\n              return [\\n                row.img1 ? <img src={ row.img1 } style=\\\"height: 40px;\\\"/> : <span>无</span>\\n              ]\\n            }\\n          }\\n        }\\n      ],\\n      tableToolbar: {\\n        setting: true,\\n        slots: {\\n          buttons: () => {\\n            return [\\n              <button>按钮</button>,\\n              <input type=\\\"text\\\"/>,\\n              <vue-button>按钮1</vue-button>,\\n              <vue-button>按钮2</vue-button>\\n            ]\\n          }\\n        }\\n      },\\n\\n    }\\n  },\\n  created () {\\n    this.loading = true\\n    setTimeout(() => {\\n      let tableData = window.MOCK_DATA_LIST.slice(0, 1000)\\n      // 使用函数式加载，阻断 vue 对大数组的双向绑定，大数据性能翻倍提升\\n      if (this.$refs.xGrid) {\\n        this.$refs.xGrid.loadData(tableData)\\n      }\\n      this.loading = false\\n    }, 500)\\n  },\\n\\n  methods: {\\n    showDetailEvent (row) {\\n      this.selectRow = row\\n      this.showDetails = true\\n    },\\n    headerClickEvent (evnt) {\\n      this.$alert({ message: '头部点击事件' })\\n    },\\n    addressClickEvent (row) {\\n      this.$alert({ message: `address点击事件：${row.row}` })\\n    },\\n    filterSexMethod ({ option, row }) {\\n      return row.sex === option.data\\n    },\\n    changeFilterEvent (evnt, option, context) {\\n      option.data = evnt.target.value\\n      context.changeMultipleOption(evnt, !!option.data, option)\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xgrid\\n      border\\n      resizable\\n      show-overflow\\n      ref=\\\"xGrid\\\"\\n      height=\\\"400\\\"\\n      :loading=\\\"loading\\\"\\n      :toolbar=\\\"tableToolbar\\\"\\n      :columns=\\\"tableColumn\\\"\\n      :edit-config=\\\"{trigger: 'click', mode: 'cell'}\\\">\\n    </vue-xgrid>\\n\\n    <vue-dialog v-model=\\\"showDetails\\\" title=\\\"查看详情\\\" width=\\\"800\\\" height=\\\"400\\\" resize>\\n      <template>\\n        <div v-if=\\\"selectRow\\\" v-html=\\\"selectRow.html3\\\"></div>\\n      </template>\\n    </vue-dialog></div>\",\"parameter\": {\n  data () {\n    return {\n      loading: false,\n      showDetails: false,\n      selectRow: null,\n      tableColumn: [\n        { type: 'index', width: 50 },\n        {\n          field: 'name',\n          title: 'Name',\n          slots: {\n            default: ({ row, column }) => {\n              return [\n                <span style=\"color: red;\">{ row.name }</span>,\n                <button onClick={ () => this.showDetailEvent(row, column) }>弹框</button>\n              ]\n            }\n          }\n        },\n        {\n          field: 'sex',\n          title: 'Sex',\n          showHeaderOverflow: true,\n          filters: [{ data: '' }],\n          filterMethod: this.filterSexMethod,\n          editRender: { type: 'default' },\n          slots: {\n            default: ({ row, column }) => {\n              return [\n                <a class=\"link\" href=\"/\">我是超链接：{ row.sex }</a>\n              ]\n            },\n            header: ({ column }) => {\n              return [\n                <span>\n                  <i>@</i>\n                  <span style=\"color: red;\" onClick={ this.headerClickEvent }>{ column.title }</span>\n                </span>\n              ]\n            },\n            filter: ({ column, context }) => {\n              return column.filters.map(option => {\n                return <input type=\"type\" value={ option.data } onInput={ evnt => this.changeFilterEvent(evnt, option, context) }/>\n              })\n            },\n            edit: ({ row }) => {\n              return [\n                <input type=\"text\" value={ row.sex } onInput={ evnt => { row.sex = evnt.target.value } }/>\n              ]\n            }\n          }\n        },\n        {\n          field: 'address',\n          title: 'Address',\n          slots: {\n            default: ({ row }, h) => {\n              return [\n                h('span', {\n                  style: {\n                    color: 'blue'\n                  },\n                  on: {\n                    click: () => this.addressClickEvent(row)\n                  }\n                }, row.address)\n              ]\n            }\n          }\n        },\n        {\n          field: 'html2',\n          title: 'Html片段',\n          slots: {\n            default: ({ row }, h) => {\n              return [\n                <span domPropsInnerHTML={ row.html2 }></span>\n              ]\n            }\n          }\n        },\n        {\n          field: 'img1',\n          title: '图片路径',\n          slots: {\n            default: ({ row }, h) => {\n              return [\n                row.img1 ? <img src={ row.img1 } style=\"height: 40px;\"/> : <span>无</span>\n              ]\n            }\n          }\n        }\n      ],\n      tableToolbar: {\n        setting: true,\n        slots: {\n          buttons: () => {\n            return [\n              <button>按钮</button>,\n              <input type=\"text\"/>,\n              <vue-button>按钮1</vue-button>,\n              <vue-button>按钮2</vue-button>\n            ]\n          }\n        }\n      },\n\n    }\n  },\n  created () {\n    this.loading = true\n    setTimeout(() => {\n      let tableData = window.MOCK_DATA_LIST.slice(0, 1000)\n      // 使用函数式加载，阻断 vue 对大数组的双向绑定，大数据性能翻倍提升\n      if (this.$refs.xGrid) {\n        this.$refs.xGrid.loadData(tableData)\n      }\n      this.loading = false\n    }, 500)\n  },\n\n  methods: {\n    showDetailEvent (row) {\n      this.selectRow = row\n      this.showDetails = true\n    },\n    headerClickEvent (evnt) {\n      this.$alert({ message: '头部点击事件' })\n    },\n    addressClickEvent (row) {\n      this.$alert({ message: `address点击事件：${row.row}` })\n    },\n    filterSexMethod ({ option, row }) {\n      return row.sex === option.data\n    },\n    changeFilterEvent (evnt, option, context) {\n      option.data = evnt.target.value\n      context.changeMultipleOption(evnt, !!option.data, option)\n    }\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/scroll/Tree\",\"name\":\"XtableDemo.scroll.Tree\",\"head\":{\"label\":\"XtableDemo.scroll.Tree.label\",\"description\":\"XtableDemo.scroll.Tree.description\"},\"samples\":[{\"id\":\"XtableDemo.scroll.Tree.sample1\",\"label\":\"XtableDemo.scroll.Tree.sample1.label\",\"description\":\"XtableDemo.scroll.Tree.sample1.description\",\"code\":\"<vue-toolbar>\\n  <template v-slot:buttons>\\n    <vue-button @click=\\\"setAllTreeExpansion(true)\\\">展开所有</vue-button>\\n    <vue-button @click=\\\"setAllTreeExpansion(false)\\\">收起所有</vue-button>\\n  </template>\\n</vue-toolbar>\\n\\n<vue-xtable\\n  ref=\\\"xTable\\\"\\n  resizable\\n  show-overflow\\n  height=\\\"500\\\"\\n  row-id=\\\"id\\\"\\n  :loading=\\\"loading\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"100\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"省市区\\\">\\n    <template v-slot=\\\"scope\\\">\\n      <span :class=\\\"['level-' + scope.row.level]\\\" :style=\\\"{paddingLeft: scope.row.level * treeIndent + 'px'}\\\">\\n        <i\\n          class=\\\"virtual-tree-icon\\\"\\n          :class=\\\"['vue-icon-arrow-' + (scope.row.expand ? 'down' : 'right') , {visible: scope.row.children && scope.row.children.length}]\\\"\\n          @click=\\\"toggleTreeExpansion(scope.row)\\\"></i>\\n        <span>{{ scope.row.name }}</span>\\n      </span>\\n    </template>\\n  </vue-xtable-column>\\n  <vue-xtable-column field=\\\"id\\\" title=\\\"邮政编码\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      loading: false,\\n      treeConfig: {\\n        children: 'children'\\n      },\\n      treeIndent: 16,\\n\\n    }\\n  },\\n  created () {\\n    this.findCityAll()\\n  },\\n\\n  methods: {\\n    findCityAll () {\\n      this.loading = true\\n      Vue.http.get('/api/conf/city/all').then(data => {\\n        const list = this.toVirtualTree(data.data)\\n        this.$refs.xTable.reloadData(list)\\n        this.loading = false\\n      })\\n    },\\n    setAllTreeExpansion (expand) {\\n      let list = this.virtualAllExpand(expand)\\n      this.$refs.xTable.reloadData(list)\\n    },\\n    toggleTreeExpansion (row) {\\n      let list = this.virtualExpand(row, !row.expand)\\n      this.$refs.xTable.loadData(list)\\n    },\\n    // 通用虚拟树方法-定义树属性\\n    toVirtualTree (treeData) {\\n      VueUtil.eachTree(treeData, (item, index, obj, paths, parent, nodes) => {\\n        item.expand = false\\n        item.level = nodes.length - 1\\n      })\\n      this.treeData = treeData.slice(0)\\n      this.tableData = treeData.slice(0)\\n      return treeData\\n    },\\n    // 通用虚拟树方法-展开/收起树节点\\n    virtualExpand (row, expand) {\\n      if (row.expand !== expand) {\\n        let children = row.children\\n        if (children && children.length) {\\n          let tableData = this.tableData\\n          if (row.expand) {\\n            // 展开节点\\n            let childList = []\\n            VueUtil.eachTree(children, item => {\\n              childList.push(item)\\n            }, this.treeConfig)\\n            tableData = tableData.filter(item => childList.indexOf(item) === -1)\\n          } else {\\n            // 收起节点\\n            let expandList = []\\n            let rowIndex = tableData.indexOf(row)\\n            if (rowIndex === -1) {\\n              throw new Error('错误的操作！')\\n            }\\n            VueUtil.eachTree(children, (item, index, obj, paths, parent, nodes) => {\\n              if (!parent || parent.expand) {\\n                expandList.push(item)\\n              }\\n            }, this.treeConfig)\\n            tableData.splice.apply(tableData, [rowIndex + 1, 0].concat(expandList))\\n          }\\n          row.expand = !row.expand\\n          this.tableData = tableData\\n        }\\n      }\\n      return this.tableData\\n    },\\n    // 通用虚拟树方法-展开/收起所有树节点\\n    virtualAllExpand (expand) {\\n      VueUtil.eachTree(this.treeData, row => {\\n        this.virtualExpand(row, expand)\\n      }, this.treeConfig)\\n      return this.tableData\\n    }\\n  }\\n})\\n</script>\\n\\n<style>\\n.virtual-tree-icon {\\n  visibility: hidden;\\n  cursor: pointer;\\n  margin-right: 4px;\\n}\\n.virtual-tree-icon.visible {\\n  visibility: visible;\\n}\\n</style>\",\"template\":\"<div class=\\\"source\\\">    <vue-toolbar>\\n      <template v-slot:buttons>\\n        <vue-button @click=\\\"setAllTreeExpansion(true)\\\">展开所有</vue-button>\\n        <vue-button @click=\\\"setAllTreeExpansion(false)\\\">收起所有</vue-button>\\n      </template>\\n    </vue-toolbar>\\n\\n    <vue-xtable\\n      ref=\\\"xTable\\\"\\n      resizable\\n      show-overflow\\n      height=\\\"500\\\"\\n      row-id=\\\"id\\\"\\n      :loading=\\\"loading\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"100\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"省市区\\\">\\n        <template v-slot=\\\"scope\\\">\\n          <span :class=\\\"['level-' + scope.row.level]\\\" :style=\\\"{paddingLeft: scope.row.level * treeIndent + 'px'}\\\">\\n            <i\\n              class=\\\"virtual-tree-icon\\\"\\n              :class=\\\"['vue-icon-arrow-' + (scope.row.expand ? 'down' : 'right') , {visible: scope.row.children && scope.row.children.length}]\\\"\\n              @click=\\\"toggleTreeExpansion(scope.row)\\\"></i>\\n            <span>{{ scope.row.name }}</span>\\n          </span>\\n        </template>\\n      </vue-xtable-column>\\n      <vue-xtable-column field=\\\"id\\\" title=\\\"邮政编码\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      loading: false,\n      treeConfig: {\n        children: 'children'\n      },\n      treeIndent: 16,\n\n    }\n  },\n  created () {\n    this.findCityAll()\n  },\n\n  methods: {\n    findCityAll () {\n      this.loading = true\n      Vue.http.get('/api/conf/city/all').then(data => {\n        const list = this.toVirtualTree(data.data)\n        this.$refs.xTable.reloadData(list)\n        this.loading = false\n      })\n    },\n    setAllTreeExpansion (expand) {\n      let list = this.virtualAllExpand(expand)\n      this.$refs.xTable.reloadData(list)\n    },\n    toggleTreeExpansion (row) {\n      let list = this.virtualExpand(row, !row.expand)\n      this.$refs.xTable.loadData(list)\n    },\n    // 通用虚拟树方法-定义树属性\n    toVirtualTree (treeData) {\n      VueUtil.eachTree(treeData, (item, index, obj, paths, parent, nodes) => {\n        item.expand = false\n        item.level = nodes.length - 1\n      })\n      this.treeData = treeData.slice(0)\n      this.tableData = treeData.slice(0)\n      return treeData\n    },\n    // 通用虚拟树方法-展开/收起树节点\n    virtualExpand (row, expand) {\n      if (row.expand !== expand) {\n        let children = row.children\n        if (children && children.length) {\n          let tableData = this.tableData\n          if (row.expand) {\n            // 展开节点\n            let childList = []\n            VueUtil.eachTree(children, item => {\n              childList.push(item)\n            }, this.treeConfig)\n            tableData = tableData.filter(item => childList.indexOf(item) === -1)\n          } else {\n            // 收起节点\n            let expandList = []\n            let rowIndex = tableData.indexOf(row)\n            if (rowIndex === -1) {\n              throw new Error('错误的操作！')\n            }\n            VueUtil.eachTree(children, (item, index, obj, paths, parent, nodes) => {\n              if (!parent || parent.expand) {\n                expandList.push(item)\n              }\n            }, this.treeConfig)\n            tableData.splice.apply(tableData, [rowIndex + 1, 0].concat(expandList))\n          }\n          row.expand = !row.expand\n          this.tableData = tableData\n        }\n      }\n      return this.tableData\n    },\n    // 通用虚拟树方法-展开/收起所有树节点\n    virtualAllExpand (expand) {\n      VueUtil.eachTree(this.treeData, row => {\n        this.virtualExpand(row, expand)\n      }, this.treeConfig)\n      return this.tableData\n    }\n  }\n}}],\"styles\":\".virtual-tree-icon {\\n  visibility: hidden;\\n  cursor: pointer;\\n  margin-right: 4px;\\n}\\n.virtual-tree-icon.visible {\\n  visibility: visible;\\n}\"}","export default {\"path\":\"/XtableDemo/tree/Basic\",\"name\":\"XtableDemo.tree.Basic\",\"head\":{\"label\":\"XtableDemo.tree.Basic.label\",\"description\":\"XtableDemo.tree.Basic.description\"},\"samples\":[{\"id\":\"XtableDemo.tree.Basic.sample1\",\"label\":\"XtableDemo.tree.Basic.sample1.label\",\"description\":\"XtableDemo.tree.Basic.sample1.description\",\"code\":\"<vue-toolbar>\\n  <template v-slot:buttons>\\n    <vue-button @click=\\\"getTreeExpansionEvent\\\">获取已展开</vue-button>\\n    <vue-button @click=\\\"$refs.xTree.setAllTreeExpansion(true)\\\">展开所有</vue-button>\\n    <vue-button @click=\\\"$refs.xTree.clearTreeExpand()\\\">关闭所有</vue-button>\\n  </template>\\n</vue-toolbar>\\n\\n<vue-xtable\\n  border\\n  resizable\\n  ref=\\\"xTree\\\"\\n  :tree-config=\\\"{children: 'children'}\\\"\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"姓名\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"size\\\" title=\\\"Size\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"type\\\" title=\\\"Type\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\" tree-node></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\\n  },\\n  methods: {\\n    getTreeExpansionEvent () {\\n      let treeExpandRecords = this.$refs.xTree.getTreeExpandRecords()\\n      this.$alert({ message: treeExpandRecords.length })\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-toolbar>\\n      <template v-slot:buttons>\\n        <vue-button @click=\\\"getTreeExpansionEvent\\\">获取已展开</vue-button>\\n        <vue-button @click=\\\"$refs.xTree.setAllTreeExpansion(true)\\\">展开所有</vue-button>\\n        <vue-button @click=\\\"$refs.xTree.clearTreeExpand()\\\">关闭所有</vue-button>\\n      </template>\\n    </vue-toolbar>\\n\\n    <vue-xtable\\n      border\\n      resizable\\n      ref=\\\"xTree\\\"\\n      :tree-config=\\\"{children: 'children'}\\\"\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"姓名\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"size\\\" title=\\\"Size\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"type\\\" title=\\\"Type\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\" tree-node></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\n  },\n  methods: {\n    getTreeExpansionEvent () {\n      let treeExpandRecords = this.$refs.xTree.getTreeExpandRecords()\n      this.$alert({ message: treeExpandRecords.length })\n    }\n  }\n}},{\"id\":\"XtableDemo.tree.Basic.sample2\",\"label\":\"XtableDemo.tree.Basic.sample2.label\",\"description\":\"XtableDemo.tree.Basic.sample2.description\",\"code\":\"<vue-xtable\\n  border\\n  :data=\\\"tableData\\\"\\n  :tree-config=\\\"{children: 'children', expandAll: true}\\\">\\n  <vue-xtable-column type=\\\"index\\\" width=\\\"160\\\" title=\\\"序号\\\" tree-node></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"姓名\\\"></vue-xtable-column>\\n  <vue-xtable-column title=\\\"基本信息\\\">\\n    <vue-xtable-column field=\\\"size\\\" title=\\\"Size\\\"></vue-xtable-column>\\n    <vue-xtable-column field=\\\"type\\\" title=\\\"Type\\\"></vue-xtable-column>\\n  </vue-xtable-column>\\n  <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\\n  },\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      :data=\\\"tableData\\\"\\n      :tree-config=\\\"{children: 'children', expandAll: true}\\\">\\n      <vue-xtable-column type=\\\"index\\\" width=\\\"160\\\" title=\\\"序号\\\" tree-node></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"姓名\\\"></vue-xtable-column>\\n      <vue-xtable-column title=\\\"基本信息\\\">\\n        <vue-xtable-column field=\\\"size\\\" title=\\\"Size\\\"></vue-xtable-column>\\n        <vue-xtable-column field=\\\"type\\\" title=\\\"Type\\\"></vue-xtable-column>\\n      </vue-xtable-column>\\n      <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\n  },\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/tree/CellValid\",\"name\":\"XtableDemo.tree.CellValid\",\"head\":{\"label\":\"XtableDemo.tree.CellValid.label\",\"description\":\"XtableDemo.tree.CellValid.description\"},\"samples\":[{\"id\":\"XtableDemo.tree.CellValid.sample1\",\"label\":\"XtableDemo.tree.CellValid.sample1.label\",\"description\":\"XtableDemo.tree.CellValid.sample1.description\",\"code\":\"<vue-toolbar>\\n  <template v-slot:buttons>\\n    <vue-button @click=\\\"validEvent\\\">校验</vue-button>\\n    <vue-button @click=\\\"fullValidEvent\\\">完整校验</vue-button>\\n    <vue-button @click=\\\"selectValidEvent\\\">选中校验</vue-button>\\n    <vue-button @click=\\\"getSelectEvent\\\">获取选中</vue-button>\\n    <vue-button @click=\\\"getUpdateEvent\\\">获取修改</vue-button>\\n  </template>\\n</vue-toolbar>\\n\\n<vue-xtable\\n  resizable\\n  ref=\\\"xTree\\\"\\n  :edit-rules=\\\"validRules\\\"\\n  :tree-config=\\\"treeConfig\\\"\\n  :edit-config=\\\"{trigger: 'click', mode: 'cell', showStatus: true}\\\"\\n  :checkbox-config=\\\"{labelField: 'id'}\\\"\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"checkbox\\\" title=\\\"ID\\\" tree-node></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"size\\\" title=\\\"Size\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"type\\\" title=\\\"Type\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n      treeConfig: {\\n        children: 'children'\\n      },\\n      validRules: {\\n        name: [\\n          { required: true, message: '名称必须填写' },\\n          { min: 3, max: 50, message: '文件名长度在 3 到 50 个字符' }\\n        ]\\n      },\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\\n  },\\n\\n  methods: {\\n    validEvent () {\\n      this.$refs.xTree.validate(valid => {\\n        if (valid) {\\n          this.$notify.success({ message:'校验成功！'});\\n        } else {\\n          this.$notify.error({ message:'校验不通过！'});\\n        }\\n      })\\n    },\\n    fullValidEvent () {\\n      this.$refs.xTree.fullValidate((valid, errMap) => {\\n        if (valid) {\\n          this.$notify.success({ message:'校验成功！'});\\n        } else {\\n          let msgList = []\\n          Object.values(errMap).forEach(errList => {\\n            errList.forEach(params => {\\n              let { row, column, rules } = params\\n              let matchObj = VueUtil.findTree(this.tableData, item => item === row, this.treeConfig)\\n              let seq = matchObj.path.filter(item => item !== this.treeConfig.children).map(item => Number(item) + 1).join('.')\\n              rules.forEach(rule => {\\n                msgList.push(`第 ${seq} 行 ${column.title} 校验错误：${rule.message}`)\\n              })\\n            })\\n          })\\n\\n          var h = this.$createElement;\\n          this.$alert({\\n            type: \\\"error\\\",\\n            message: h('div',[msgList.map(function (msg) {\\n              return h(\\\"div\\\", [msg]);\\n            })])\\n          });\\n        }\\n      })\\n    },\\n    selectValidEvent () {\\n      let selectRecords = this.$refs.xTree.getSelectRecords()\\n      if (selectRecords.length > 0) {\\n        this.$refs.xTree.validate(selectRecords, valid => {\\n          if (valid) {\\n            this.$notify.success({ message:'校验成功！'});\\n          } else {\\n            this.$notify.error({ message:'校验不通过！'});\\n          }\\n        })\\n      } else {\\n        this.$notify.warning({ message:'未选中数据！'});\\n      }\\n    },\\n    getSelectEvent () {\\n      let selectRecords = this.$refs.xTree.getSelectRecords()\\n      this.$alert({ message: selectRecords.length })\\n    },\\n    getUpdateEvent () {\\n      let updateRecords = this.$refs.xTree.getUpdateRecords()\\n      this.$alert({ message: updateRecords.length })\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-toolbar>\\n      <template v-slot:buttons>\\n        <vue-button @click=\\\"validEvent\\\">校验</vue-button>\\n        <vue-button @click=\\\"fullValidEvent\\\">完整校验</vue-button>\\n        <vue-button @click=\\\"selectValidEvent\\\">选中校验</vue-button>\\n        <vue-button @click=\\\"getSelectEvent\\\">获取选中</vue-button>\\n        <vue-button @click=\\\"getUpdateEvent\\\">获取修改</vue-button>\\n      </template>\\n    </vue-toolbar>\\n\\n    <vue-xtable\\n      resizable\\n      ref=\\\"xTree\\\"\\n      :edit-rules=\\\"validRules\\\"\\n      :tree-config=\\\"treeConfig\\\"\\n      :edit-config=\\\"{trigger: 'click', mode: 'cell', showStatus: true}\\\"\\n      :checkbox-config=\\\"{labelField: 'id'}\\\"\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"checkbox\\\" title=\\\"ID\\\" tree-node></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"size\\\" title=\\\"Size\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"type\\\" title=\\\"Type\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n      treeConfig: {\n        children: 'children'\n      },\n      validRules: {\n        name: [\n          { required: true, message: '名称必须填写' },\n          { min: 3, max: 50, message: '文件名长度在 3 到 50 个字符' }\n        ]\n      },\n\n    }\n  },\n  created () {\n    this.tableData = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\n  },\n\n  methods: {\n    validEvent () {\n      this.$refs.xTree.validate(valid => {\n        if (valid) {\n          this.$notify.success({ message:'校验成功！'});\n        } else {\n          this.$notify.error({ message:'校验不通过！'});\n        }\n      })\n    },\n    fullValidEvent () {\n      this.$refs.xTree.fullValidate((valid, errMap) => {\n        if (valid) {\n          this.$notify.success({ message:'校验成功！'});\n        } else {\n          let msgList = []\n          Object.values(errMap).forEach(errList => {\n            errList.forEach(params => {\n              let { row, column, rules } = params\n              let matchObj = VueUtil.findTree(this.tableData, item => item === row, this.treeConfig)\n              let seq = matchObj.path.filter(item => item !== this.treeConfig.children).map(item => Number(item) + 1).join('.')\n              rules.forEach(rule => {\n                msgList.push(`第 ${seq} 行 ${column.title} 校验错误：${rule.message}`)\n              })\n            })\n          })\n\n          var h = this.$createElement;\n          this.$alert({\n            type: \"error\",\n            message: h('div',[msgList.map(function (msg) {\n              return h(\"div\", [msg]);\n            })])\n          });\n        }\n      })\n    },\n    selectValidEvent () {\n      let selectRecords = this.$refs.xTree.getSelectRecords()\n      if (selectRecords.length > 0) {\n        this.$refs.xTree.validate(selectRecords, valid => {\n          if (valid) {\n            this.$notify.success({ message:'校验成功！'});\n          } else {\n            this.$notify.error({ message:'校验不通过！'});\n          }\n        })\n      } else {\n        this.$notify.warning({ message:'未选中数据！'});\n      }\n    },\n    getSelectEvent () {\n      let selectRecords = this.$refs.xTree.getSelectRecords()\n      this.$alert({ message: selectRecords.length })\n    },\n    getUpdateEvent () {\n      let updateRecords = this.$refs.xTree.getUpdateRecords()\n      this.$alert({ message: updateRecords.length })\n    }\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/tree/Edit\",\"name\":\"XtableDemo.tree.Edit\",\"head\":{\"label\":\"XtableDemo.tree.Edit.label\",\"description\":\"XtableDemo.tree.Edit.description\"},\"samples\":[{\"id\":\"XtableDemo.tree.Edit.sample1\",\"label\":\"XtableDemo.tree.Edit.sample1.label\",\"description\":\"XtableDemo.tree.Edit.sample1.description\",\"code\":\"<vue-toolbar>\\n  <template v-slot:buttons>\\n    <vue-button @click=\\\"$refs.xTree.toggleTreeExpansion(tableData[0], true)\\\">切换第一个</vue-button>\\n    <vue-button @click=\\\"$refs.xTree.setTreeExpansion(tableData[2], true)\\\">展开第三个</vue-button>\\n    <vue-button @click=\\\"$refs.xTree.setAllTreeExpansion(true)\\\">展开所有</vue-button>\\n    <vue-button @click=\\\"$refs.xTree.clearTreeExpand()\\\">关闭所有</vue-button>\\n  </template>\\n</vue-toolbar>\\n\\n<vue-xtable\\n  resizable\\n  ref=\\\"xTree\\\"\\n  :tree-config=\\\"{children: 'children'}\\\"\\n  :edit-config=\\\"{trigger: 'click', mode: 'row'}\\\"\\n  :checkbox-config=\\\"{labelField: 'id'}\\\"\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"checkbox\\\" title=\\\"ID\\\" tree-node></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"size\\\" title=\\\"Size\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"type\\\" title=\\\"Type\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\\n  },\\n\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-toolbar>\\n      <template v-slot:buttons>\\n        <vue-button @click=\\\"$refs.xTree.toggleTreeExpansion(tableData[0], true)\\\">切换第一个</vue-button>\\n        <vue-button @click=\\\"$refs.xTree.setTreeExpansion(tableData[2], true)\\\">展开第三个</vue-button>\\n        <vue-button @click=\\\"$refs.xTree.setAllTreeExpansion(true)\\\">展开所有</vue-button>\\n        <vue-button @click=\\\"$refs.xTree.clearTreeExpand()\\\">关闭所有</vue-button>\\n      </template>\\n    </vue-toolbar>\\n\\n    <vue-xtable\\n      resizable\\n      ref=\\\"xTree\\\"\\n      :tree-config=\\\"{children: 'children'}\\\"\\n      :edit-config=\\\"{trigger: 'click', mode: 'row'}\\\"\\n      :checkbox-config=\\\"{labelField: 'id'}\\\"\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"checkbox\\\" title=\\\"ID\\\" tree-node></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"size\\\" title=\\\"Size\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"type\\\" title=\\\"Type\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\n  },\n\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/tree/Expand\",\"name\":\"XtableDemo.tree.Expand\",\"head\":{\"label\":\"XtableDemo.tree.Expand.label\",\"description\":\"XtableDemo.tree.Expand.description\"},\"samples\":[{\"id\":\"XtableDemo.tree.Expand.sample1\",\"label\":\"XtableDemo.tree.Expand.sample1.label\",\"description\":\"XtableDemo.tree.Expand.sample1.description\",\"code\":\"<vue-xtable\\n  border\\n  resizable\\n  :tree-config=\\\"{children: 'children'}\\\"\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" tree-node></vue-xtable-column>\\n  <vue-xtable-column type=\\\"expand\\\" title=\\\"Details\\\" width=\\\"80\\\">\\n    <template v-slot=\\\"scope\\\">\\n      <ul>\\n        <li>\\n          <span>ID：</span>\\n          <span>{{ scope.row.id }}</span>\\n        </li>\\n        <li>\\n          <span>Name：</span>\\n          <span>{{ scope.row.name }}</span>\\n        </li>\\n        <li>\\n          <span>Date</span>\\n          <span>{{ scope.row.date }}</span>\\n        </li>\\n      </ul>\\n    </template>\\n  </vue-xtable-column>\\n  <vue-xtable-column field=\\\"size\\\" title=\\\"Size\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"type\\\" title=\\\"Type\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\\n  },\\n\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      resizable\\n      :tree-config=\\\"{children: 'children'}\\\"\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" tree-node></vue-xtable-column>\\n      <vue-xtable-column type=\\\"expand\\\" title=\\\"Details\\\" width=\\\"80\\\">\\n        <template v-slot=\\\"scope\\\">\\n          <ul>\\n            <li>\\n              <span>ID：</span>\\n              <span>{{ scope.row.id }}</span>\\n            </li>\\n            <li>\\n              <span>Name：</span>\\n              <span>{{ scope.row.name }}</span>\\n            </li>\\n            <li>\\n              <span>Date</span>\\n              <span>{{ scope.row.date }}</span>\\n            </li>\\n          </ul>\\n        </template>\\n      </vue-xtable-column>\\n      <vue-xtable-column field=\\\"size\\\" title=\\\"Size\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"type\\\" title=\\\"Type\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\n  },\n\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/tree/Fixed\",\"name\":\"XtableDemo.tree.Fixed\",\"head\":{\"label\":\"XtableDemo.tree.Fixed.label\",\"description\":\"XtableDemo.tree.Fixed.description\"},\"samples\":[{\"id\":\"XtableDemo.tree.Fixed.sample1\",\"label\":\"XtableDemo.tree.Fixed.sample1.label\",\"description\":\"XtableDemo.tree.Fixed.sample1.description\",\"code\":\"<vue-toolbar>\\n  <template v-slot:buttons>\\n    <vue-button @click=\\\"$refs.xTree.toggleTreeExpansion(tableData[0], true)\\\">切换第一个</vue-button>\\n    <vue-button @click=\\\"$refs.xTree.setTreeExpansion(tableData[2], true)\\\">展开第三个</vue-button>\\n    <vue-button @click=\\\"$refs.xTree.setAllTreeExpansion(true)\\\">展开所有</vue-button>\\n    <vue-button @click=\\\"$refs.xTree.clearTreeExpand()\\\">关闭所有</vue-button>\\n  </template>\\n</vue-toolbar>\\n\\n<vue-xtable\\n  resizable\\n  ref=\\\"xTree\\\"\\n  :tree-config=\\\"{children: 'children'}\\\"\\n  :checkbox-config=\\\"{labelField: 'id'}\\\"\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"checkbox\\\" title=\\\"ID\\\" fixed=\\\"left\\\" width=\\\"200\\\" tree-node></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" width=\\\"300\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"size\\\" title=\\\"Size\\\" width=\\\"300\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"type\\\" title=\\\"Type\\\" width=\\\"300\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\" width=\\\"300\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\\n  },\\n\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-toolbar>\\n      <template v-slot:buttons>\\n        <vue-button @click=\\\"$refs.xTree.toggleTreeExpansion(tableData[0], true)\\\">切换第一个</vue-button>\\n        <vue-button @click=\\\"$refs.xTree.setTreeExpansion(tableData[2], true)\\\">展开第三个</vue-button>\\n        <vue-button @click=\\\"$refs.xTree.setAllTreeExpansion(true)\\\">展开所有</vue-button>\\n        <vue-button @click=\\\"$refs.xTree.clearTreeExpand()\\\">关闭所有</vue-button>\\n      </template>\\n    </vue-toolbar>\\n\\n    <vue-xtable\\n      resizable\\n      ref=\\\"xTree\\\"\\n      :tree-config=\\\"{children: 'children'}\\\"\\n      :checkbox-config=\\\"{labelField: 'id'}\\\"\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"checkbox\\\" title=\\\"ID\\\" fixed=\\\"left\\\" width=\\\"200\\\" tree-node></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" width=\\\"300\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"size\\\" title=\\\"Size\\\" width=\\\"300\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"type\\\" title=\\\"Type\\\" width=\\\"300\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\" width=\\\"300\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\n  },\n\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/tree/FullEdit\",\"name\":\"XtableDemo.tree.FullEdit\",\"head\":{\"label\":\"XtableDemo.tree.FullEdit.label\",\"description\":\"XtableDemo.tree.FullEdit.description\"},\"samples\":[{\"id\":\"XtableDemo.tree.FullEdit.sample1\",\"label\":\"XtableDemo.tree.FullEdit.sample1.label\",\"description\":\"XtableDemo.tree.FullEdit.sample1.description\",\"code\":\"<vue-xtable\\n  resizable\\n  :tree-config=\\\"{children: 'children'}\\\"\\n  :edit-config=\\\"{trigger: 'click', mode: 'row'}\\\"\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"checkbox\\\" width=\\\"120\\\" tree-node></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"size\\\" title=\\\"Size\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"type\\\" title=\\\"Type\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\\n  },\\n\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      resizable\\n      :tree-config=\\\"{children: 'children'}\\\"\\n      :edit-config=\\\"{trigger: 'click', mode: 'row'}\\\"\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"checkbox\\\" width=\\\"120\\\" tree-node></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"size\\\" title=\\\"Size\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"type\\\" title=\\\"Type\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\n  },\n\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/tree/GroupBy\",\"name\":\"XtableDemo.tree.GroupBy\",\"head\":{\"label\":\"XtableDemo.tree.GroupBy.label\",\"description\":\"XtableDemo.tree.GroupBy.description\"},\"samples\":[{\"id\":\"XtableDemo.tree.GroupBy.sample1\",\"label\":\"XtableDemo.tree.GroupBy.sample1.label\",\"description\":\"XtableDemo.tree.GroupBy.sample1.description\",\"code\":\"<vue-xtable\\n  border\\n  resizable\\n  :loading=\\\"loading\\\"\\n  :tree-config=\\\"tableTreeConfig\\\"\\n  :span-method=\\\"colspanMethod\\\"\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" tree-node></vue-xtable-column>\\n  <vue-xtable-column field=\\\"num\\\" title=\\\"Num\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"level\\\" title=\\\"Level\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"rate\\\" title=\\\"Rate\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      loading: false,\\n      tableData: [],\\n      tableTreeConfig: {\\n        children: 'children',\\n        trigger: 'row', // 设置为点击行展开或收缩\\n        expandAll: false // 默认是否全部展开\\n      },\\n\\n    }\\n  },\\n  created () {\\n    this.loading = true\\n    setTimeout(() => {\\n      let list = [\\n        { gKey: 'Group 1', name: 'test7', num: 23, level: 9, age: 24, rate: 4 },\\n        { gKey: 'Group 1', name: 'test6', num: 63, level: 14, age: 20, rate: 3 },\\n        { gKey: 'Group 1', name: 'test51', num: 84.8, level: 21, age: 19, rate: 5 },\\n        { gKey: 'Group 1', name: 'test32', num: 63, level: 11, age: 21, rate: 1 },\\n        { gKey: 'Group 2', name: 'test15', num: 5.9, level: 13, age: 32, rate: 1 },\\n        { gKey: 'Group 2', name: 'test44', num: 23, level: 9, age: 29, rate: 4 },\\n        { gKey: 'Group 2', name: 'test44', num: 41, level: 22, age: 28, rate: 5 },\\n        { gKey: 'Group 2', name: 'test84', num: 63.9, level: 18, age: 24, rate: 2 },\\n        { gKey: 'Group 2', name: 'test91', num: 12, level: 16, age: 27, rate: 5 },\\n        { gKey: 'Group 3', name: 'test6', num: 33.6, level: 3, age: 22, rate: 2 },\\n        { gKey: 'Group 3', name: 'test2', num: 23, level: 5, age: 25, rate: 3 },\\n        { gKey: 'Group 3', name: 'test42', num: 66.8, level: 17, age: 35, rate: 4 }\\n      ]\\n      // 将列表进行分组\\n      let groupMap = VueUtil.groupBy(list, 'gKey')\\n      let groupList = []\\n      // 分组合计计算逻辑\\n      VueUtil.each(groupMap, (list, gKey) => {\\n        let children = list || []\\n        if (children) {\\n          let total = {\\n            name: '',\\n            num: `总和:${VueUtil.sum(children.map( children => children.num))}`,\\n            level: `总和:${VueUtil.sum(children.map( children => children.level))}`,\\n            age: `平均:${parseInt(VueUtil.mean(children.map( children => children.age)))}`,\\n            rate: `总和:${VueUtil.sum(children.map( children => children.rate))}`\\n          }\\n          children.push(total)\\n        }\\n        groupList.push({ name: gKey, children })\\n      })\\n      this.tableData = groupList\\n      this.loading = false\\n    }, 300)\\n  },\\n\\n  methods: {\\n    colspanMethod ({ row, rowIndex, column, columnIndex, data, level }) {\\n      // 合并第一级数据的所有列，看起来美观一些\\n      if (level === 0) {\\n        if (columnIndex === 0) {\\n          return {\\n            rowspan: 1,\\n            colspan: 5\\n          }\\n        } else if (columnIndex < 5) {\\n          return {\\n            rowspan: 0,\\n            colspan: 0\\n          }\\n        }\\n      }\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      resizable\\n      :loading=\\\"loading\\\"\\n      :tree-config=\\\"tableTreeConfig\\\"\\n      :span-method=\\\"colspanMethod\\\"\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" tree-node></vue-xtable-column>\\n      <vue-xtable-column field=\\\"num\\\" title=\\\"Num\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"level\\\" title=\\\"Level\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"age\\\" title=\\\"Age\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"rate\\\" title=\\\"Rate\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      loading: false,\n      tableData: [],\n      tableTreeConfig: {\n        children: 'children',\n        trigger: 'row', // 设置为点击行展开或收缩\n        expandAll: false // 默认是否全部展开\n      },\n\n    }\n  },\n  created () {\n    this.loading = true\n    setTimeout(() => {\n      let list = [\n        { gKey: 'Group 1', name: 'test7', num: 23, level: 9, age: 24, rate: 4 },\n        { gKey: 'Group 1', name: 'test6', num: 63, level: 14, age: 20, rate: 3 },\n        { gKey: 'Group 1', name: 'test51', num: 84.8, level: 21, age: 19, rate: 5 },\n        { gKey: 'Group 1', name: 'test32', num: 63, level: 11, age: 21, rate: 1 },\n        { gKey: 'Group 2', name: 'test15', num: 5.9, level: 13, age: 32, rate: 1 },\n        { gKey: 'Group 2', name: 'test44', num: 23, level: 9, age: 29, rate: 4 },\n        { gKey: 'Group 2', name: 'test44', num: 41, level: 22, age: 28, rate: 5 },\n        { gKey: 'Group 2', name: 'test84', num: 63.9, level: 18, age: 24, rate: 2 },\n        { gKey: 'Group 2', name: 'test91', num: 12, level: 16, age: 27, rate: 5 },\n        { gKey: 'Group 3', name: 'test6', num: 33.6, level: 3, age: 22, rate: 2 },\n        { gKey: 'Group 3', name: 'test2', num: 23, level: 5, age: 25, rate: 3 },\n        { gKey: 'Group 3', name: 'test42', num: 66.8, level: 17, age: 35, rate: 4 }\n      ]\n      // 将列表进行分组\n      let groupMap = VueUtil.groupBy(list, 'gKey')\n      let groupList = []\n      // 分组合计计算逻辑\n      VueUtil.each(groupMap, (list, gKey) => {\n        let children = list || []\n        if (children) {\n          let total = {\n            name: '',\n            num: `总和:${VueUtil.sum(children.map( children => children.num))}`,\n            level: `总和:${VueUtil.sum(children.map( children => children.level))}`,\n            age: `平均:${parseInt(VueUtil.mean(children.map( children => children.age)))}`,\n            rate: `总和:${VueUtil.sum(children.map( children => children.rate))}`\n          }\n          children.push(total)\n        }\n        groupList.push({ name: gKey, children })\n      })\n      this.tableData = groupList\n      this.loading = false\n    }, 300)\n  },\n\n  methods: {\n    colspanMethod ({ row, rowIndex, column, columnIndex, data, level }) {\n      // 合并第一级数据的所有列，看起来美观一些\n      if (level === 0) {\n        if (columnIndex === 0) {\n          return {\n            rowspan: 1,\n            colspan: 5\n          }\n        } else if (columnIndex < 5) {\n          return {\n            rowspan: 0,\n            colspan: 0\n          }\n        }\n      }\n    }\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/tree/Highlight\",\"name\":\"XtableDemo.tree.Highlight\",\"head\":{\"label\":\"XtableDemo.tree.Highlight.label\",\"description\":\"XtableDemo.tree.Highlight.description\"},\"samples\":[{\"id\":\"XtableDemo.tree.Highlight.sample1\",\"label\":\"XtableDemo.tree.Highlight.sample1.label\",\"description\":\"XtableDemo.tree.Highlight.sample1.description\",\"code\":\"<vue-note>\\n  \\n  | Arrow Up ↑ | 移动到高亮行的上一行 | <br>\\n  | Arrow Down ↓ | 移动到高亮行的下一行 |<br>\\n  | Enter | 展开节点，进入子节点 |<br>\\n  | Backspace | 关闭节点，返回到父节点 |\\n\\n</vue-note>\\n<vue-xtable\\n  highlight-current-row\\n  :data=\\\"tableData\\\"\\n  :tree-config=\\\"{children: 'children'}\\\"\\n  :keyboard-config=\\\"{isArrow: true}\\\">\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" tree-node></vue-xtable-column>\\n  <vue-xtable-column field=\\\"size\\\" title=\\\"Size\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"type\\\" title=\\\"Type\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n      selectRow: null,\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\\n  },\\n\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-note>\\n      \\n      | Arrow Up ↑ | 移动到高亮行的上一行 | <br>\\n      | Arrow Down ↓ | 移动到高亮行的下一行 |<br>\\n      | Enter | 展开节点，进入子节点 |<br>\\n      | Backspace | 关闭节点，返回到父节点 |\\n    \\n    </vue-note>\\n    <vue-xtable\\n      highlight-current-row\\n      :data=\\\"tableData\\\"\\n      :tree-config=\\\"{children: 'children'}\\\"\\n      :keyboard-config=\\\"{isArrow: true}\\\">\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" tree-node></vue-xtable-column>\\n      <vue-xtable-column field=\\\"size\\\" title=\\\"Size\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"type\\\" title=\\\"Type\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n      selectRow: null,\n\n    }\n  },\n  created () {\n    this.tableData = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\n  },\n\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/tree/Insert\",\"name\":\"XtableDemo.tree.Insert\",\"head\":{\"label\":\"XtableDemo.tree.Insert.label\",\"description\":\"XtableDemo.tree.Insert.description\"},\"samples\":[{\"id\":\"XtableDemo.tree.Insert.sample1\",\"label\":\"XtableDemo.tree.Insert.sample1.label\",\"description\":\"XtableDemo.tree.Insert.sample1.description\",\"code\":\"<vue-toolbar :data=\\\"tableData\\\" setting>\\n  <template v-slot:buttons>\\n    <vue-button @click=\\\"insertEvent()\\\">插入第一行</vue-button>\\n    <vue-button @click=\\\"insertAtEvent()\\\">插入指定行</vue-button>\\n    <vue-button @click=\\\"getInsertEvent\\\">获取新增</vue-button>\\n  </template>\\n</vue-toolbar>\\n\\n<vue-xtable\\n  resizable\\n  ref=\\\"xTree\\\"\\n  :tree-config=\\\"treeConfig\\\"\\n  :edit-config=\\\"{trigger: 'click', mode: 'row', showStatus: true}\\\"\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"checkbox\\\" width=\\\"120\\\" tree-node></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"size\\\" title=\\\"Size\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"type\\\" title=\\\"Type\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n      treeConfig: {\\n        children: 'children'\\n      },\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\\n  },\\n\\n  methods: {\\n    insertEvent () {\\n      let xTree = this.$refs.xTree\\n      xTree.createRow({\\n        name: '新数据',\\n        date: VueUtil.formatDate(new Date(), 'yyyy-MM-dd'),\\n        isNew: true\\n      }).then(newRow => {\\n        // 插入到第一行\\n        this.tableData.unshift(newRow)\\n        xTree.refreshData().then(() => xTree.setActiveRow(newRow))\\n      })\\n    },\\n    insertAtEvent () {\\n      let xTree = this.$refs.xTree\\n      xTree.createRow({\\n        name: '新数据',\\n        date: VueUtil.formatDate(new Date(), 'yyyy-MM-dd'),\\n        isNew: true\\n      }).then(newRow => {\\n        // 插入到 id 为 11000 的节点位置中\\n        let rowNode = VueUtil.findTree(this.tableData, item => item.id === '11000', this.treeConfig)\\n        if (rowNode) {\\n          rowNode.items.splice(rowNode.index, 0, newRow)\\n          xTree.refreshData().then(() => xTree.setActiveRow(newRow))\\n        }\\n      })\\n    },\\n    getInsertEvent () {\\n      let insertRecords = VueUtil.filterTree(this.tableData, item => item.isNew, this.treeConfig)\\n      this.$alert({ message: insertRecords.length })\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-toolbar :data=\\\"tableData\\\" setting>\\n      <template v-slot:buttons>\\n        <vue-button @click=\\\"insertEvent()\\\">插入第一行</vue-button>\\n        <vue-button @click=\\\"insertAtEvent()\\\">插入指定行</vue-button>\\n        <vue-button @click=\\\"getInsertEvent\\\">获取新增</vue-button>\\n      </template>\\n    </vue-toolbar>\\n\\n    <vue-xtable\\n      resizable\\n      ref=\\\"xTree\\\"\\n      :tree-config=\\\"treeConfig\\\"\\n      :edit-config=\\\"{trigger: 'click', mode: 'row', showStatus: true}\\\"\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"checkbox\\\" width=\\\"120\\\" tree-node></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"size\\\" title=\\\"Size\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"type\\\" title=\\\"Type\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n      treeConfig: {\n        children: 'children'\n      },\n\n    }\n  },\n  created () {\n    this.tableData = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\n  },\n\n  methods: {\n    insertEvent () {\n      let xTree = this.$refs.xTree\n      xTree.createRow({\n        name: '新数据',\n        date: VueUtil.formatDate(new Date(), 'yyyy-MM-dd'),\n        isNew: true\n      }).then(newRow => {\n        // 插入到第一行\n        this.tableData.unshift(newRow)\n        xTree.refreshData().then(() => xTree.setActiveRow(newRow))\n      })\n    },\n    insertAtEvent () {\n      let xTree = this.$refs.xTree\n      xTree.createRow({\n        name: '新数据',\n        date: VueUtil.formatDate(new Date(), 'yyyy-MM-dd'),\n        isNew: true\n      }).then(newRow => {\n        // 插入到 id 为 11000 的节点位置中\n        let rowNode = VueUtil.findTree(this.tableData, item => item.id === '11000', this.treeConfig)\n        if (rowNode) {\n          rowNode.items.splice(rowNode.index, 0, newRow)\n          xTree.refreshData().then(() => xTree.setActiveRow(newRow))\n        }\n      })\n    },\n    getInsertEvent () {\n      let insertRecords = VueUtil.filterTree(this.tableData, item => item.isNew, this.treeConfig)\n      this.$alert({ message: insertRecords.length })\n    }\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/tree/Menu\",\"name\":\"XtableDemo.tree.Menu\",\"head\":{\"label\":\"XtableDemo.tree.Menu.label\",\"description\":\"XtableDemo.tree.Menu.description\"},\"samples\":[{\"id\":\"XtableDemo.tree.Menu.sample1\",\"label\":\"XtableDemo.tree.Menu.sample1.label\",\"description\":\"XtableDemo.tree.Menu.sample1.description\",\"code\":\"<vue-toolbar :data=\\\"tableData\\\" setting>\\n  <template v-slot:buttons>\\n    <vue-button @click=\\\"getInsertEvent\\\">获取新增</vue-button>\\n  </template>\\n</vue-toolbar>\\n\\n<vue-xtable\\n  resizable\\n  ref=\\\"xTree\\\"\\n  :tree-config=\\\"treeConfig\\\"\\n  :context-menu=\\\"{header: {options: headerMenus}, body: {options: bodyMenus}, visibleMethod:visibleMethod}\\\"\\n  :edit-config=\\\"{trigger: 'click', mode: 'row', showStatus: true}\\\"\\n  :data=\\\"tableData\\\"\\n  @context-menu-click=\\\"contextMenuClickEvent\\\">\\n  <vue-xtable-column type=\\\"checkbox\\\" width=\\\"120\\\" tree-node></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"size\\\" title=\\\"Size\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"type\\\" title=\\\"Type\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n      treeConfig: {\\n        children: 'children'\\n      },\\n      headerMenus: [\\n        [\\n          {\\n            code: 'hideColumn',\\n            name: '隐藏列',\\n            disabled: false\\n          },\\n          {\\n            code: 'showAllColumn',\\n            name: '取消所有隐藏列',\\n            disabled: false\\n          }\\n        ]\\n      ],\\n      bodyMenus: [\\n        [\\n          {\\n            code: 'insertAt',\\n            name: '插入一行',\\n            disabled: false\\n          },\\n          {\\n            code: 'expand',\\n            name: '展开节点',\\n            disabled: false\\n          },\\n          {\\n            code: 'contract',\\n            name: '收缩节点',\\n            disabled: false\\n          }\\n        ]\\n      ],\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\\n  },\\n\\n  methods: {\\n    insertAtEvent (row, column) {\\n      let xTree = this.$refs.xTree\\n      xTree.createRow({\\n        name: '新数据',\\n        date: VueUtil.formatDate(new Date(), 'yyyy-MM-dd'),\\n        isNew: true\\n      }).then(newRow => {\\n        // 插入到指定节点位置中\\n        let rowNode = VueUtil.findTree(this.tableData, item => item === row, this.treeConfig)\\n        if (rowNode) {\\n          rowNode.items.splice(rowNode.index, 0, newRow)\\n          xTree.refreshData().then(() => xTree.setActiveCell(newRow, column.property))\\n        }\\n      })\\n    },\\n    getInsertEvent () {\\n      let insertRecords = VueUtil.filterTree(this.tableData, item => item.isNew, this.treeConfig)\\n      this.$alert({ message: insertRecords.length })\\n    },\\n    visibleMethod  ({ row, type }) {\\n      let xTree = this.$refs.xTree\\n      let treeConfig = this.treeConfig\\n      if (type === 'body') {\\n        this.bodyMenus.forEach(list => {\\n          list.forEach(item => {\\n            if (VueUtil.includes(['expand', 'contract'], item.code)) {\\n              if (row[treeConfig.children] && row[treeConfig.children].length) {\\n                let isExpand = xTree.isTreeExpandByRow(row)\\n                item.disabled = VueUtil.includes(['expand'], item.code) ? isExpand : !isExpand\\n              } else {\\n                item.disabled = true\\n              }\\n            }\\n          })\\n        })\\n      }\\n      return true\\n    },\\n    contextMenuClickEvent ({ menu, row, column }) {\\n      let xTree = this.$refs.xTree\\n      switch (menu.code) {\\n        case 'hideColumn':\\n          xTree.hideColumn(column)\\n          break\\n        case 'showAllColumn':\\n          xTree.resetCustoms()\\n          break\\n        case 'insertAt':\\n          this.insertAtEvent(row, column)\\n          break\\n        case 'expand':\\n          xTree.setTreeExpansion(row, true)\\n          break\\n        case 'contract':\\n          xTree.setTreeExpansion(row, false)\\n          break\\n      }\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-toolbar :data=\\\"tableData\\\" setting>\\n      <template v-slot:buttons>\\n        <vue-button @click=\\\"getInsertEvent\\\">获取新增</vue-button>\\n      </template>\\n    </vue-toolbar>\\n\\n    <vue-xtable\\n      resizable\\n      ref=\\\"xTree\\\"\\n      :tree-config=\\\"treeConfig\\\"\\n      :context-menu=\\\"{header: {options: headerMenus}, body: {options: bodyMenus}, visibleMethod:visibleMethod}\\\"\\n      :edit-config=\\\"{trigger: 'click', mode: 'row', showStatus: true}\\\"\\n      :data=\\\"tableData\\\"\\n      @context-menu-click=\\\"contextMenuClickEvent\\\">\\n      <vue-xtable-column type=\\\"checkbox\\\" width=\\\"120\\\" tree-node></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"size\\\" title=\\\"Size\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"type\\\" title=\\\"Type\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n      treeConfig: {\n        children: 'children'\n      },\n      headerMenus: [\n        [\n          {\n            code: 'hideColumn',\n            name: '隐藏列',\n            disabled: false\n          },\n          {\n            code: 'showAllColumn',\n            name: '取消所有隐藏列',\n            disabled: false\n          }\n        ]\n      ],\n      bodyMenus: [\n        [\n          {\n            code: 'insertAt',\n            name: '插入一行',\n            disabled: false\n          },\n          {\n            code: 'expand',\n            name: '展开节点',\n            disabled: false\n          },\n          {\n            code: 'contract',\n            name: '收缩节点',\n            disabled: false\n          }\n        ]\n      ],\n\n    }\n  },\n  created () {\n    this.tableData = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\n  },\n\n  methods: {\n    insertAtEvent (row, column) {\n      let xTree = this.$refs.xTree\n      xTree.createRow({\n        name: '新数据',\n        date: VueUtil.formatDate(new Date(), 'yyyy-MM-dd'),\n        isNew: true\n      }).then(newRow => {\n        // 插入到指定节点位置中\n        let rowNode = VueUtil.findTree(this.tableData, item => item === row, this.treeConfig)\n        if (rowNode) {\n          rowNode.items.splice(rowNode.index, 0, newRow)\n          xTree.refreshData().then(() => xTree.setActiveCell(newRow, column.property))\n        }\n      })\n    },\n    getInsertEvent () {\n      let insertRecords = VueUtil.filterTree(this.tableData, item => item.isNew, this.treeConfig)\n      this.$alert({ message: insertRecords.length })\n    },\n    visibleMethod  ({ row, type }) {\n      let xTree = this.$refs.xTree\n      let treeConfig = this.treeConfig\n      if (type === 'body') {\n        this.bodyMenus.forEach(list => {\n          list.forEach(item => {\n            if (VueUtil.includes(['expand', 'contract'], item.code)) {\n              if (row[treeConfig.children] && row[treeConfig.children].length) {\n                let isExpand = xTree.isTreeExpandByRow(row)\n                item.disabled = VueUtil.includes(['expand'], item.code) ? isExpand : !isExpand\n              } else {\n                item.disabled = true\n              }\n            }\n          })\n        })\n      }\n      return true\n    },\n    contextMenuClickEvent ({ menu, row, column }) {\n      let xTree = this.$refs.xTree\n      switch (menu.code) {\n        case 'hideColumn':\n          xTree.hideColumn(column)\n          break\n        case 'showAllColumn':\n          xTree.resetCustoms()\n          break\n        case 'insertAt':\n          this.insertAtEvent(row, column)\n          break\n        case 'expand':\n          xTree.setTreeExpansion(row, true)\n          break\n        case 'contract':\n          xTree.setTreeExpansion(row, false)\n          break\n      }\n    }\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/tree/Radio\",\"name\":\"XtableDemo.tree.Radio\",\"head\":{\"label\":\"XtableDemo.tree.Radio.label\",\"description\":\"XtableDemo.tree.Radio.description\"},\"samples\":[{\"id\":\"XtableDemo.tree.Radio.sample1\",\"label\":\"XtableDemo.tree.Radio.sample1.label\",\"description\":\"XtableDemo.tree.Radio.sample1.description\",\"code\":\"<vue-xtable\\n  highlight-current-row\\n  :tree-config=\\\"{children: 'children'}\\\"\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" tree-node></vue-xtable-column>\\n  <vue-xtable-column field=\\\"size\\\" title=\\\"Size\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"type\\\" title=\\\"Type\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n    }\\n  },\\n  created () {\\n    this.tableData = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\\n  },\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      highlight-current-row\\n      :tree-config=\\\"{children: 'children'}\\\"\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" tree-node></vue-xtable-column>\\n      <vue-xtable-column field=\\\"size\\\" title=\\\"Size\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"type\\\" title=\\\"Type\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n    }\n  },\n  created () {\n    this.tableData = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\n  },\n}},{\"id\":\"XtableDemo.tree.Radio.sample2\",\"label\":\"XtableDemo.tree.Radio.sample2.label\",\"description\":\"XtableDemo.tree.Radio.sample2.description\",\"code\":\"<vue-xtable\\n  :tree-config=\\\"{children: 'children'}\\\"\\n  :radio-config=\\\"{labelField: 'name'}\\\"\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"radio\\\" title=\\\"Sex\\\" tree-node></vue-xtable-column>\\n  <vue-xtable-column field=\\\"size\\\" title=\\\"Size\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"type\\\" title=\\\"Type\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n    }\\n  },\\n  created () {\\n    this.tableData = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\\n  },\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      :tree-config=\\\"{children: 'children'}\\\"\\n      :radio-config=\\\"{labelField: 'name'}\\\"\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"radio\\\" title=\\\"Sex\\\" tree-node></vue-xtable-column>\\n      <vue-xtable-column field=\\\"size\\\" title=\\\"Size\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"type\\\" title=\\\"Type\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n    }\n  },\n  created () {\n    this.tableData = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\n  },\n}},{\"id\":\"XtableDemo.tree.Radio.sample3\",\"label\":\"XtableDemo.tree.Radio.sample3.label\",\"description\":\"XtableDemo.tree.Radio.sample3.description\",\"code\":\"<vue-xtable\\n  resizable\\n  highlight-current-row\\n  ref=\\\"xTable3\\\"\\n  :tree-config=\\\"{children: 'children'}\\\"\\n  :radio-config=\\\"{trigger: 'row'}\\\"\\n  :data=\\\"tableData\\\"\\n  @current-change=\\\"currentChangeEvent\\\">\\n  <vue-xtable-column type=\\\"radio\\\" width=\\\"120\\\" tree-node>\\n    <template v-slot:header>\\n      <vue-button type=\\\"text\\\" @click=\\\"clearCurrentRowEvent\\\" :disabled=\\\"!selectRow\\\">取消</vue-button>\\n    </template>\\n  </vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"size\\\" title=\\\"Size\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"type\\\" title=\\\"Type\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n      selectRow: null,\\n    }\\n  },\\n  created () {\\n    this.tableData = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\\n  },\\n  methods: {\\n    currentChangeEvent ({ row }) {\\n      this.selectRow = row\\n    },\\n    clearCurrentRowEvent () {\\n      this.selectRow = null\\n      this.$refs.xTable3.clearRadioRow()\\n      this.$refs.xTable3.clearCurrentRow()\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      resizable\\n      highlight-current-row\\n      ref=\\\"xTable3\\\"\\n      :tree-config=\\\"{children: 'children'}\\\"\\n      :radio-config=\\\"{trigger: 'row'}\\\"\\n      :data=\\\"tableData\\\"\\n      @current-change=\\\"currentChangeEvent\\\">\\n      <vue-xtable-column type=\\\"radio\\\" width=\\\"120\\\" tree-node>\\n        <template v-slot:header>\\n          <vue-button type=\\\"text\\\" @click=\\\"clearCurrentRowEvent\\\" :disabled=\\\"!selectRow\\\">取消</vue-button>\\n        </template>\\n      </vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"size\\\" title=\\\"Size\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"type\\\" title=\\\"Type\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n      selectRow: null,\n    }\n  },\n  created () {\n    this.tableData = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\n  },\n  methods: {\n    currentChangeEvent ({ row }) {\n      this.selectRow = row\n    },\n    clearCurrentRowEvent () {\n      this.selectRow = null\n      this.$refs.xTable3.clearRadioRow()\n      this.$refs.xTable3.clearCurrentRow()\n    }\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/tree/RowValid\",\"name\":\"XtableDemo.tree.RowValid\",\"head\":{\"label\":\"XtableDemo.tree.RowValid.label\",\"description\":\"XtableDemo.tree.RowValid.description\"},\"samples\":[{\"id\":\"XtableDemo.tree.RowValid.sample1\",\"label\":\"XtableDemo.tree.RowValid.sample1.label\",\"description\":\"XtableDemo.tree.RowValid.sample1.description\",\"code\":\"<vue-toolbar>\\n  <template v-slot:buttons>\\n    <vue-button @click=\\\"validEvent\\\">校验</vue-button>\\n    <vue-button @click=\\\"fullValidEvent\\\">完整校验</vue-button>\\n    <vue-button @click=\\\"selectValidEvent\\\">选中校验</vue-button>\\n    <vue-button @click=\\\"getSelectEvent\\\">获取选中</vue-button>\\n    <vue-button @click=\\\"getUpdateEvent\\\">获取修改</vue-button>\\n  </template>\\n</vue-toolbar>\\n\\n<vue-xtable\\n  resizable\\n  ref=\\\"xTree\\\"\\n  :edit-rules=\\\"validRules\\\"\\n  :tree-config=\\\"treeConfig\\\"\\n  :edit-config=\\\"{trigger: 'click', mode: 'row', showStatus: true}\\\"\\n  :checkbox-config=\\\"{labelField: 'id'}\\\"\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"checkbox\\\" title=\\\"ID\\\" tree-node></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"size\\\" title=\\\"Size\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"type\\\" title=\\\"Type\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n      treeConfig: {\\n        children: 'children'\\n      },\\n      validRules: {\\n        name: [\\n          { required: true, message: '名称必须填写' },\\n          { min: 3, max: 50, message: '文件名长度在 3 到 50 个字符' }\\n        ]\\n      },\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\\n  },\\n\\n  methods: {\\n    validEvent () {\\n      this.$refs.xTree.validate(valid => {\\n        if (valid) {\\n          this.$notify.success({ message:'校验成功！'});\\n        } else {\\n          this.$notify.error({ message:'校验不通过！'});\\n        }\\n      })\\n    },\\n    fullValidEvent () {\\n      this.$refs.xTree.fullValidate((valid, errMap) => {\\n        if (valid) {\\n          this.$notify.success({ message:'校验成功！'});\\n        } else {\\n          let msgList = []\\n          Object.values(errMap).forEach(errList => {\\n            errList.forEach(params => {\\n              let { row, column, rules } = params\\n              let matchObj = VueUtil.findTree(this.tableData, item => item === row, this.treeConfig)\\n              let seq = matchObj.path.filter(item => item !== this.treeConfig.children).map(item => Number(item) + 1).join('.')\\n              rules.forEach(rule => {\\n                msgList.push(`第 ${seq} 行 ${column.title} 校验错误：${rule.message}`)\\n              })\\n            })\\n          })\\n\\n          var h = this.$createElement;\\n          this.$alert({\\n            type: \\\"error\\\",\\n            message: h('div',[msgList.map(function (msg) {\\n              return h(\\\"div\\\", [msg]);\\n            })])\\n          });\\n        }\\n      })\\n    },\\n    selectValidEvent () {\\n      let selectRecords = this.$refs.xTree.getSelectRecords()\\n      if (selectRecords.length > 0) {\\n        this.$refs.xTree.validate(selectRecords, valid => {\\n          if (valid) {\\n            this.$notify.success({ message:'校验成功！'});\\n          } else {\\n            this.$notify.error({ message:'校验不通过！'});\\n          }\\n        })\\n      } else {\\n        this.$notify.warning({ message:'未选中数据！'});\\n      }\\n    },\\n    getSelectEvent () {\\n      let selectRecords = this.$refs.xTree.getSelectRecords()\\n      this.$alert({ message: selectRecords.length })\\n    },\\n    getUpdateEvent () {\\n      let updateRecords = this.$refs.xTree.getUpdateRecords()\\n      this.$alert({ message: updateRecords.length })\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-toolbar>\\n      <template v-slot:buttons>\\n        <vue-button @click=\\\"validEvent\\\">校验</vue-button>\\n        <vue-button @click=\\\"fullValidEvent\\\">完整校验</vue-button>\\n        <vue-button @click=\\\"selectValidEvent\\\">选中校验</vue-button>\\n        <vue-button @click=\\\"getSelectEvent\\\">获取选中</vue-button>\\n        <vue-button @click=\\\"getUpdateEvent\\\">获取修改</vue-button>\\n      </template>\\n    </vue-toolbar>\\n\\n    <vue-xtable\\n      resizable\\n      ref=\\\"xTree\\\"\\n      :edit-rules=\\\"validRules\\\"\\n      :tree-config=\\\"treeConfig\\\"\\n      :edit-config=\\\"{trigger: 'click', mode: 'row', showStatus: true}\\\"\\n      :checkbox-config=\\\"{labelField: 'id'}\\\"\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"checkbox\\\" title=\\\"ID\\\" tree-node></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"size\\\" title=\\\"Size\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"type\\\" title=\\\"Type\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n      treeConfig: {\n        children: 'children'\n      },\n      validRules: {\n        name: [\n          { required: true, message: '名称必须填写' },\n          { min: 3, max: 50, message: '文件名长度在 3 到 50 个字符' }\n        ]\n      },\n\n    }\n  },\n  created () {\n    this.tableData = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\n  },\n\n  methods: {\n    validEvent () {\n      this.$refs.xTree.validate(valid => {\n        if (valid) {\n          this.$notify.success({ message:'校验成功！'});\n        } else {\n          this.$notify.error({ message:'校验不通过！'});\n        }\n      })\n    },\n    fullValidEvent () {\n      this.$refs.xTree.fullValidate((valid, errMap) => {\n        if (valid) {\n          this.$notify.success({ message:'校验成功！'});\n        } else {\n          let msgList = []\n          Object.values(errMap).forEach(errList => {\n            errList.forEach(params => {\n              let { row, column, rules } = params\n              let matchObj = VueUtil.findTree(this.tableData, item => item === row, this.treeConfig)\n              let seq = matchObj.path.filter(item => item !== this.treeConfig.children).map(item => Number(item) + 1).join('.')\n              rules.forEach(rule => {\n                msgList.push(`第 ${seq} 行 ${column.title} 校验错误：${rule.message}`)\n              })\n            })\n          })\n\n          var h = this.$createElement;\n          this.$alert({\n            type: \"error\",\n            message: h('div',[msgList.map(function (msg) {\n              return h(\"div\", [msg]);\n            })])\n          });\n        }\n      })\n    },\n    selectValidEvent () {\n      let selectRecords = this.$refs.xTree.getSelectRecords()\n      if (selectRecords.length > 0) {\n        this.$refs.xTree.validate(selectRecords, valid => {\n          if (valid) {\n            this.$notify.success({ message:'校验成功！'});\n          } else {\n            this.$notify.error({ message:'校验不通过！'});\n          }\n        })\n      } else {\n        this.$notify.warning({ message:'未选中数据！'});\n      }\n    },\n    getSelectEvent () {\n      let selectRecords = this.$refs.xTree.getSelectRecords()\n      this.$alert({ message: selectRecords.length })\n    },\n    getUpdateEvent () {\n      let updateRecords = this.$refs.xTree.getUpdateRecords()\n      this.$alert({ message: updateRecords.length })\n    }\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/tree/Selection\",\"name\":\"XtableDemo.tree.Selection\",\"head\":{\"label\":\"XtableDemo.tree.Selection.label\",\"description\":\"XtableDemo.tree.Selection.description\"},\"samples\":[{\"id\":\"XtableDemo.tree.Selection.sample1\",\"label\":\"XtableDemo.tree.Selection.sample1.label\",\"description\":\"XtableDemo.tree.Selection.sample1.description\",\"code\":\"<vue-xtable\\n  resizable\\n  :tree-config=\\\"{children: 'children'}\\\"\\n  :data=\\\"tableData\\\"\\n  @select-change=\\\"selectChangeEvent\\\">\\n  <vue-xtable-column type=\\\"checkbox\\\" width=\\\"120\\\" tree-node></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"size\\\" title=\\\"Size\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"type\\\" title=\\\"Type\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n    }\\n  },\\n  created () {\\n    this.tableData = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\\n  },\\n\\n  methods: {\\n    selectChangeEvent ({ selection }) {\\n      console.info(`勾选${selection.length}个树形节点`, selection)\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      resizable\\n      :tree-config=\\\"{children: 'children'}\\\"\\n      :data=\\\"tableData\\\"\\n      @select-change=\\\"selectChangeEvent\\\">\\n      <vue-xtable-column type=\\\"checkbox\\\" width=\\\"120\\\" tree-node></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"size\\\" title=\\\"Size\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"type\\\" title=\\\"Type\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n    }\n  },\n  created () {\n    this.tableData = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\n  },\n\n  methods: {\n    selectChangeEvent ({ selection }) {\n      console.info(`勾选${selection.length}个树形节点`, selection)\n    }\n  }\n}},{\"id\":\"XtableDemo.tree.Selection.sample2\",\"label\":\"XtableDemo.tree.Selection.sample2.label\",\"description\":\"XtableDemo.tree.Selection.sample2.description\",\"code\":\"<vue-xtable\\n  resizable\\n  row-id=\\\"id\\\"\\n  :data=\\\"tableData\\\"\\n  :tree-config=\\\"{children: 'children'}\\\"\\n  :checkbox-config=\\\"{labelField: 'name', checkRowKeys: ['122000', '20000']}\\\"\\n  @select-change=\\\"selectChangeEvent\\\">\\n  <vue-xtable-column type=\\\"checkbox\\\" title=\\\"Sex\\\" width=\\\"180\\\" tree-node></vue-xtable-column>\\n  <vue-xtable-column field=\\\"size\\\" title=\\\"Size\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"type\\\" title=\\\"Type\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n    }\\n  },\\n  created () {\\n    this.tableData = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\\n  },\\n\\n  methods: {\\n    selectChangeEvent ({ selection }) {\\n      console.info(`勾选${selection.length}个树形节点`, selection)\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      resizable\\n      row-id=\\\"id\\\"\\n      :data=\\\"tableData\\\"\\n      :tree-config=\\\"{children: 'children'}\\\"\\n      :checkbox-config=\\\"{labelField: 'name', checkRowKeys: ['122000', '20000']}\\\"\\n      @select-change=\\\"selectChangeEvent\\\">\\n      <vue-xtable-column type=\\\"checkbox\\\" title=\\\"Sex\\\" width=\\\"180\\\" tree-node></vue-xtable-column>\\n      <vue-xtable-column field=\\\"size\\\" title=\\\"Size\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"type\\\" title=\\\"Type\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n    }\n  },\n  created () {\n    this.tableData = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\n  },\n\n  methods: {\n    selectChangeEvent ({ selection }) {\n      console.info(`勾选${selection.length}个树形节点`, selection)\n    }\n  }\n}},{\"id\":\"XtableDemo.tree.Selection.sample3\",\"label\":\"XtableDemo.tree.Selection.sample3.label\",\"description\":\"XtableDemo.tree.Selection.sample3.description\",\"code\":\"<vue-xtable\\n  resizable\\n  :data=\\\"tableData\\\"\\n  :tree-config=\\\"{children: 'children'}\\\"\\n  :checkbox-config=\\\"{checkStrictly: true}\\\">\\n  <vue-xtable-column type=\\\"checkbox\\\" width=\\\"120\\\" tree-node></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"size\\\" title=\\\"Size\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"type\\\" title=\\\"Type\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n    }\\n  },\\n  created () {\\n    this.tableData = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\\n  },\\n\\n  methods: {\\n    selectChangeEvent ({ selection }) {\\n      console.info(`勾选${selection.length}个树形节点`, selection)\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      resizable\\n      :data=\\\"tableData\\\"\\n      :tree-config=\\\"{children: 'children'}\\\"\\n      :checkbox-config=\\\"{checkStrictly: true}\\\">\\n      <vue-xtable-column type=\\\"checkbox\\\" width=\\\"120\\\" tree-node></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"size\\\" title=\\\"Size\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"type\\\" title=\\\"Type\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n    }\n  },\n  created () {\n    this.tableData = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\n  },\n\n  methods: {\n    selectChangeEvent ({ selection }) {\n      console.info(`勾选${selection.length}个树形节点`, selection)\n    }\n  }\n}},{\"id\":\"XtableDemo.tree.Selection.sample4\",\"label\":\"XtableDemo.tree.Selection.sample4.label\",\"description\":\"XtableDemo.tree.Selection.sample4.description\",\"code\":\"<vue-xtable\\n  resizable\\n  :data=\\\"tableData\\\"\\n  :tree-config=\\\"{children: 'children'}\\\"\\n  :checkbox-config=\\\"{labelField: 'name', checkMethod}\\\"\\n  @select-change=\\\"selectChangeEvent\\\">\\n  <vue-xtable-column type=\\\"checkbox\\\" width=\\\"180\\\" title=\\\"Sex\\\" tree-node></vue-xtable-column>\\n  <vue-xtable-column field=\\\"size\\\" title=\\\"Size\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"type\\\" title=\\\"Type\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n    }\\n  },\\n  created () {\\n    this.tableData = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\\n  },\\n\\n  methods: {\\n    checkMethod ({ row }) {\\n      return !VueUtil.includes(['js', 'mp4'], row.type)\\n    },\\n    selectChangeEvent ({ selection }) {\\n      console.info(`勾选${selection.length}个树形节点`, selection)\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      resizable\\n      :data=\\\"tableData\\\"\\n      :tree-config=\\\"{children: 'children'}\\\"\\n      :checkbox-config=\\\"{labelField: 'name', checkMethod}\\\"\\n      @select-change=\\\"selectChangeEvent\\\">\\n      <vue-xtable-column type=\\\"checkbox\\\" width=\\\"180\\\" title=\\\"Sex\\\" tree-node></vue-xtable-column>\\n      <vue-xtable-column field=\\\"size\\\" title=\\\"Size\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"type\\\" title=\\\"Type\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n    }\n  },\n  created () {\n    this.tableData = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\n  },\n\n  methods: {\n    checkMethod ({ row }) {\n      return !VueUtil.includes(['js', 'mp4'], row.type)\n    },\n    selectChangeEvent ({ selection }) {\n      console.info(`勾选${selection.length}个树形节点`, selection)\n    }\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/tree/Template\",\"name\":\"XtableDemo.tree.Template\",\"head\":{\"label\":\"XtableDemo.tree.Template.label\",\"description\":\"XtableDemo.tree.Template.description\"},\"samples\":[{\"id\":\"XtableDemo.tree.Template.sample1\",\"label\":\"XtableDemo.tree.Template.sample1.label\",\"description\":\"XtableDemo.tree.Template.sample1.description\",\"code\":\"<vue-xtable\\n  border\\n  resizable\\n  :tree-config=\\\"{children: 'children'}\\\"\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"姓名\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"size\\\" title=\\\"Size\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"type\\\" title=\\\"Type\\\">\\n    <template v-slot=\\\"scope\\\">\\n      <span>{{ '类型：' + (scope.row.type || '无') }}</span>\\n    </template>\\n  </vue-xtable-column>\\n  <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\" tree-node>\\n    <template v-slot=\\\"scope\\\">\\n      <span>{{ formatDate(scope.row.date, 'yyyy-MM-dd HH:mm:ss.S') }}</span>\\n    </template>\\n  </vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n    }\\n  },\\n  created () {\\n    this.tableData = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\\n  },\\n  methods: {\\n    formatDate: VueUtil.formatDate,\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-xtable\\n      border\\n      resizable\\n      :tree-config=\\\"{children: 'children'}\\\"\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"姓名\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"size\\\" title=\\\"Size\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"type\\\" title=\\\"Type\\\">\\n        <template v-slot=\\\"scope\\\">\\n          <span>{{ '类型：' + (scope.row.type || '无') }}</span>\\n        </template>\\n      </vue-xtable-column>\\n      <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\" tree-node>\\n        <template v-slot=\\\"scope\\\">\\n          <span>{{ formatDate(scope.row.date, 'yyyy-MM-dd HH:mm:ss.S') }}</span>\\n        </template>\\n      </vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n    }\n  },\n  created () {\n    this.tableData = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\n  },\n  methods: {\n    formatDate: VueUtil.formatDate,\n  }\n}}],\"styles\":\"\"}","export default {\"path\":\"/XtableDemo/tree/Toolbar\",\"name\":\"XtableDemo.tree.Toolbar\",\"head\":{\"label\":\"XtableDemo.tree.Toolbar.label\",\"description\":\"XtableDemo.tree.Toolbar.description\"},\"samples\":[{\"id\":\"XtableDemo.tree.Toolbar.sample1\",\"label\":\"XtableDemo.tree.Toolbar.sample1.label\",\"description\":\"XtableDemo.tree.Toolbar.sample1.description\",\"code\":\"<vue-toolbar :data=\\\"tableData\\\" export setting>\\n  <template v-slot:buttons>\\n    <vue-button @click=\\\"insertEvent\\\">{{ $t('插入行') }}</vue-button>\\n    <vue-button @click=\\\"removeEvent\\\">移除选中</vue-button>\\n    <vue-button @click=\\\"getInsertEvent\\\">获取新增</vue-button>\\n    <vue-button @click=\\\"getRemoveEvent\\\">获取删除</vue-button>\\n    <vue-button @click=\\\"getUpdateEvent\\\">获取修改</vue-button>\\n  </template>\\n</vue-toolbar>\\n\\n<vue-xtable\\n  resizable\\n  ref=\\\"xTree\\\"\\n  :tree-config=\\\"treeConfig\\\"\\n  :edit-config=\\\"{trigger: 'click', mode: 'row', showStatus: true}\\\"\\n  :data=\\\"tableData\\\">\\n  <vue-xtable-column type=\\\"checkbox\\\" width=\\\"120\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" tree-node></vue-xtable-column>\\n  <vue-xtable-column field=\\\"size\\\" title=\\\"Size\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"type\\\" title=\\\"Type\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n  <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n</vue-xtable>\\n\\n<script>\\nnew Vue({\\n  data () {\\n    return {\\n      tableData: [],\\n      removeList: [],\\n      treeConfig: {\\n        children: 'children'\\n      },\\n\\n    }\\n  },\\n  created () {\\n    this.tableData = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\\n  },\\n\\n  methods: {\\n    insertEvent () {\\n      let xTree = this.$refs.xTree\\n      xTree.createRow({\\n        name: '新数据',\\n        date: VueUtil.formatDate(new Date(), 'yyyy-MM-dd'),\\n        isNew: true\\n      }).then(newRow => {\\n        // 插入到第一行\\n        this.tableData.unshift(newRow)\\n        xTree.refreshData().then(() => xTree.setActiveRow(newRow))\\n      })\\n    },\\n    removeEvent () {\\n      let xTree = this.$refs.xTree\\n      let removeRecords = xTree.getSelectRecords()\\n      removeRecords.forEach(row => {\\n        let matchObj = VueUtil.findTree(this.tableData, item => item === row, this.treeConfig)\\n        if (matchObj) {\\n          let { items, index } = matchObj\\n          // 从树节点中移除\\n          let restRow = items.splice(index, 1)[0]\\n          this.removeList.push(restRow)\\n        }\\n      })\\n      xTree.refreshData()\\n    },\\n    getInsertEvent () {\\n      let insertRecords = VueUtil.filterTree(this.tableData, item => item.isNew, this.treeConfig)\\n      this.$alert({ message: insertRecords.length })\\n    },\\n    getRemoveEvent () {\\n      let removeRecords = this.removeList\\n      this.$alert({ message: removeRecords.length })\\n    },\\n    getUpdateEvent () {\\n      let updateRecords = this.$refs.xTree.getUpdateRecords()\\n      this.$alert({ message: updateRecords.length })\\n    }\\n  }\\n})\\n</script>\",\"template\":\"<div class=\\\"source\\\">    <vue-toolbar :data=\\\"tableData\\\" export setting>\\n      <template v-slot:buttons>\\n        <vue-button @click=\\\"insertEvent\\\">{{ $t('插入行') }}</vue-button>\\n        <vue-button @click=\\\"removeEvent\\\">移除选中</vue-button>\\n        <vue-button @click=\\\"getInsertEvent\\\">获取新增</vue-button>\\n        <vue-button @click=\\\"getRemoveEvent\\\">获取删除</vue-button>\\n        <vue-button @click=\\\"getUpdateEvent\\\">获取修改</vue-button>\\n      </template>\\n    </vue-toolbar>\\n\\n    <vue-xtable\\n      resizable\\n      ref=\\\"xTree\\\"\\n      :tree-config=\\\"treeConfig\\\"\\n      :edit-config=\\\"{trigger: 'click', mode: 'row', showStatus: true}\\\"\\n      :data=\\\"tableData\\\">\\n      <vue-xtable-column type=\\\"checkbox\\\" width=\\\"120\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"name\\\" title=\\\"Name\\\" tree-node></vue-xtable-column>\\n      <vue-xtable-column field=\\\"size\\\" title=\\\"Size\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"type\\\" title=\\\"Type\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n      <vue-xtable-column field=\\\"date\\\" title=\\\"Date\\\" :edit-render=\\\"{name: 'input'}\\\"></vue-xtable-column>\\n    </vue-xtable></div>\",\"parameter\": {\n  data () {\n    return {\n      tableData: [],\n      removeList: [],\n      treeConfig: {\n        children: 'children'\n      },\n\n    }\n  },\n  created () {\n    this.tableData = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\n  },\n\n  methods: {\n    insertEvent () {\n      let xTree = this.$refs.xTree\n      xTree.createRow({\n        name: '新数据',\n        date: VueUtil.formatDate(new Date(), 'yyyy-MM-dd'),\n        isNew: true\n      }).then(newRow => {\n        // 插入到第一行\n        this.tableData.unshift(newRow)\n        xTree.refreshData().then(() => xTree.setActiveRow(newRow))\n      })\n    },\n    removeEvent () {\n      let xTree = this.$refs.xTree\n      let removeRecords = xTree.getSelectRecords()\n      removeRecords.forEach(row => {\n        let matchObj = VueUtil.findTree(this.tableData, item => item === row, this.treeConfig)\n        if (matchObj) {\n          let { items, index } = matchObj\n          // 从树节点中移除\n          let restRow = items.splice(index, 1)[0]\n          this.removeList.push(restRow)\n        }\n      })\n      xTree.refreshData()\n    },\n    getInsertEvent () {\n      let insertRecords = VueUtil.filterTree(this.tableData, item => item.isNew, this.treeConfig)\n      this.$alert({ message: insertRecords.length })\n    },\n    getRemoveEvent () {\n      let removeRecords = this.removeList\n      this.$alert({ message: removeRecords.length })\n    },\n    getUpdateEvent () {\n      let updateRecords = this.$refs.xTree.getUpdateRecords()\n      this.$alert({ message: updateRecords.length })\n    }\n  }\n}}],\"styles\":\"\"}","import NumberInputDemo from './InputNumberDemo.vue';\nimport SplitPanesDemo from './SplitPanesDemo.vue';\nimport SvgIconDemo from './SvgIconDemo.vue';\nvar LayoutDemo = require('./LayoutDemo');\nvar ButtonDemo = require('./ButtonDemo');\nvar IconDemo = require('./IconDemo');\nvar RadioDemo = require('./RadioDemo');\nvar CheckboxDemo = require('./CheckboxDemo');\nvar InputDemo = require('./InputDemo');\nvar SelectDemo = require('./SelectDemo');\nvar CascaderDemo = require('./CascaderDemo');\nvar SwitchDemo = require('./SwitchDemo');\nvar FormDemo = require('./FormDemo');\nvar TableDemo = require('./TableDemo');\nvar TagDemo = require('./TagDemo');\nvar TreeDemo = require('./TreeDemo');\nvar AlertDemo = require('./AlertDemo');\nvar LoadingDemo = require('./LoadingDemo');\nvar NavMenuDemo = require('./NavMenuDemo');\nvar TabsDemo = require('./TabsDemo');\nvar DropdownDemo = require('./DropdownDemo');\nvar StepsDemo = require('./StepsDemo');\nvar DialogDemo = require('./DialogDemo');\nvar TooltipDemo = require('./TooltipDemo');\nvar PopoverDemo = require('./PopoverDemo');\nvar AsideDemo = require('./AsideDemo');\nvar CardDemo = require('./CardDemo');\nvar CarouselDemo = require('./CarouselDemo');\nvar DateTimeDemo = require('./DateTimeDemo');\nvar MessageBoxDemo = require('./MessageBoxDemo');\nvar NotificationDemo = require('./NotificationDemo');\nvar DateDemo = require('./DateDemo');\nvar TimeDemo = require('./TimeDemo');\nvar I18nDemo = require('./I18nDemo');\nvar CollapseDemo = require('./CollapseDemo');\nvar BadgeDemo = require('./BadgeDemo');\nvar InstallDemo = require('./InstallDemo');\nvar BreadcrumbDemo = require('./BreadcrumbDemo');\nvar PaginationDemo = require('./PaginationDemo');\nvar ProgressDemo = require('./ProgressDemo');\nvar SliderDemo = require('./SliderDemo');\nvar RateDemo = require('./RateDemo');\nvar UploadDemo = require('./UploadDemo');\nvar LoadingBarDemo = require('./LoadingBarDemo');\nvar NoteDemo = require('./NoteDemo');\nvar SortableDemo = require('./SortableDemo');\nvar AjaxDemo = require('./AjaxDemo');\nvar ListDemo = require('./ListDemo');\nvar ColorDemo = require('./ColorDemo');\nvar CalendarDemo = require('./CalendarDemo');\n\nvar ImageDemo = require('./ImageDemo');\nvar ImageViewerDemo = require('./ImageViewerDemo');\n\nvar PinDemo = require('./PinDemo');\nvar DraggableDemo = require('./DraggableDemo');\nvar SignatureDemo = require('./SignatureDemo');\nvar ChangeLog = require('./ChangeLog');\nvar AdaptiveGroupDemo = require('./AdaptiveGroupDemo');\nvar RippleDemo = require('./RippleDemo');\n\nvar XtableDemo = require('./XtableDemo');\n\nvar MobileInstallDemo = require('./MobileDemo/installDemo');\nvar ScrollViewDemo = require('./MobileDemo/ScrollViewDemo');\nvar ActionSheetDemo = require('./MobileDemo/ActionSheetDemo');\nvar NavBarDemo = require('./MobileDemo/NavBarDemo');\nvar TabBarDemo = require('./MobileDemo/TabBarDemo');\nvar CellLayoutDemo = require('./MobileDemo/CellLayoutDemo');\nvar SwipeCellDemo = require('./MobileDemo/SwipeCellDemo');\nvar TextIconDemo = require('./MobileDemo/TextIconDemo');\nvar StepperDemo = require('./MobileDemo/StepperDemo');\nvar IndexBarDemo = require('./MobileDemo/IndexBarDemo');\nvar SkeletonDemo = require('./MobileDemo/SkeletonDemo');\n\n\nvar HotkeyDemo = require('./HotkeyDemo');\nvar SyntaxHighlighter = require('./BrushJsp');\nvar DemoLangZh = require('./DemoLangZh');\nvar DemoLangJa = require('./DemoLangJa');\nvar DemoLangEn = require('./DemoLangEn');\n\nrequire('../mock/index')\n\nVueUtil.setLocale('zh', DemoLangZh);\nVueUtil.setLocale('ja', DemoLangJa);\nVueUtil.setLocale('en', DemoLangEn);\n\n// 包装默认 $t 防止因为key值不正确导致出错的问题。\nVue.prototype.$ct = function(key) {\n    try {\n        return key && /^[a-zA-Z0-9.]+$/.test(key) ? Vue.t(key) : key;\n    } catch(e) {\n        return key;\n    }\n}\n\nvar AttrTable = {\n  template: \"<vue-xtable \\\n    ref=\\\"xTable\\\" \\\n    stripe \\\n    highlight-hover-row \\\n    :data=\\\"data\\\"> \\\n    <vue-xtable-column type=\\\"expand\\\" width=\\\"60\\\"> \\\n      <template v-slot=\\\"scope\\\"> \\\n        <span>{{$ct(scope.row.column2)}}</span> \\\n        <br v-if=\\\"scope.row.column5\\\"> \\\n        <br v-if=\\\"scope.row.column5\\\"> \\\n        <span v-if=\\\"scope.row.column5\\\">{{$t('main.table.defaultValue')}}: {{$ct(scope.row.column5)}}</span> \\\n        <br v-if=\\\"scope.row.column4\\\"> \\\n        <br v-if=\\\"scope.row.column4\\\"> \\\n        <span v-if=\\\"scope.row.column4\\\">{{$t('main.table.acceptedValues')}}: {{$ct(scope.row.column4)}}</span> \\\n      </template> \\\n    </vue-xtable-column> \\\n    <vue-xtable-column field=\\\"column1\\\" :title=\\\"$t('main.table.parameters')\\\" header-align=\\\"left\\\"> \\\n        <template v-slot=\\\"scope\\\"> \\\n            {{$ct(scope.row.column1)}} \\\n        </template> \\\n    </vue-xtable-column> \\\n    <vue-xtable-column field=\\\"column3\\\" :title=\\\"$t('main.table.type')\\\" header-align=\\\"left\\\"> \\\n        <template v-slot=\\\"scope\\\"> \\\n            {{$ct(scope.row.column3)}} \\\n        </template> \\\n    </vue-xtable-column> \\\n  </vue-xtable>\",\n  name: 'AttrTable',\n  props: ['data']\n};\nVue.component(AttrTable.name, AttrTable);\n\nvar CodeTable = {\n    template: \"<vue-xtable \\\n    ref=\\\"xTable\\\" \\\n    stripe \\\n    highlight-hover-row \\\n    :data=\\\"data\\\"> \\\n    <vue-xtable-column type=\\\"expand\\\" width=\\\"60\\\"> \\\n      <template v-slot=\\\"scope\\\"> \\\n      <pre class=\\\"toolbar:false;brush:jsp\\\" style=\\\"padding:0\\\">\\\n        <span>{{$ct(scope.row.column3)}}</span> \\\n        <br v-if=\\\"scope.row.column5\\\"> \\\n        <br v-if=\\\"scope.row.column5\\\"> \\\n        <span v-if=\\\"scope.row.column5\\\">{{$t('main.table.defaultValue')}}: {{$ct(scope.row.column5)}}</span> \\\n        <br v-if=\\\"scope.row.column4\\\"> \\\n        <br v-if=\\\"scope.row.column4\\\"> \\\n        <span v-if=\\\"scope.row.column4\\\">{{$t('main.table.acceptedValues')}}: {{$ct(scope.row.column4)}}</span> \\\n        <pre>\\\n      </template> \\\n    </vue-xtable-column> \\\n    <vue-xtable-column field=\\\"column1\\\" :title=\\\"$t('main.table.parameters')\\\" header-align=\\\"left\\\"> \\\n        <template v-slot=\\\"scope\\\"> \\\n            {{$ct(scope.row.column1)}} \\\n        </template> \\\n    </vue-xtable-column> \\\n    <vue-xtable-column field=\\\"column2\\\" :title=\\\"$t('main.table.type')\\\" header-align=\\\"left\\\"> \\\n        <template v-slot=\\\"scope\\\"> \\\n            {{$ct(scope.row.column2)}} \\\n        </template> \\\n    </vue-xtable-column> \\\n  </vue-xtable>\",\n  name: 'CodeTable',\n  props: ['data']\n};\nVue.component(CodeTable.name, CodeTable);\n\nvar EventTable = {\n  template: \"<vue-xtable \\\n    ref=\\\"xTable\\\" \\\n    stripe \\\n    highlight-hover-row \\\n    :data=\\\"data\\\"> \\\n    <vue-xtable-column field=\\\"column1\\\" :title=\\\"$t('main.table.event')\\\" header-align=\\\"left\\\" width=\\\"150\\\"> \\\n        <template v-slot=\\\"scope\\\"> \\\n            {{$ct(scope.row.column1)}} \\\n        </template> \\\n    </vue-xtable-column> \\\n    <vue-xtable-column field=\\\"column2\\\" :title=\\\"$t('main.table.description')\\\" header-align=\\\"left\\\"> \\\n        <template v-slot=\\\"scope\\\"> \\\n            {{$ct(scope.row.column2)}} \\\n        </template> \\\n    </vue-xtable-column> \\\n    <vue-xtable-column field=\\\"column3\\\" :title=\\\"$t('main.table.parameters')\\\" header-align=\\\"left\\\"> \\\n        <template v-slot=\\\"scope\\\"> \\\n            {{$ct(scope.row.column3)}} \\\n        </template> \\\n    </vue-xtable-column> \\\n \\\n  </vue-xtable>\",\n  name: 'EventTable',\n  props: ['data']\n};\nVue.component(EventTable.name, EventTable);\nvar SlotTable = {\n  template: \"<vue-xtable \\\n    ref=\\\"xTable\\\" \\\n    stripe \\\n    highlight-hover-row \\\n    :data=\\\"data\\\"> \\\n    <vue-xtable-column field=\\\"column1\\\" :title=\\\"$t('main.table.name')\\\" header-align=\\\"left\\\" width=\\\"150\\\"> \\\n        <template v-slot=\\\"scope\\\"> \\\n            {{$ct(scope.row.column1)}} \\\n        </template> \\\n    </vue-xtable-column> \\\n    <vue-xtable-column field=\\\"column2\\\" :title=\\\"$t('main.table.description')\\\" header-align=\\\"left\\\"> \\\n        <template v-slot=\\\"scope\\\"> \\\n            {{$ct(scope.row.column2)}} \\\n        </template> \\\n    </vue-xtable-column> \\\n  </vue-xtable>\",\n  name: 'SlotTable',\n  props: ['data']\n};\nVue.component(SlotTable.name, SlotTable);\nvar MethodTable = {\n  template: \"<vue-xtable \\\n    ref=\\\"xTable\\\" \\\n    stripe \\\n    highlight-hover-row \\\n    :data=\\\"data\\\"> \\\n    <vue-xtable-column field=\\\"column1\\\" :title=\\\"$t('main.table.method')\\\" header-align=\\\"left\\\" width=\\\"150\\\"> \\\n        <template v-slot=\\\"scope\\\"> \\\n            {{$ct(scope.row.column1)}} \\\n        </template> \\\n    </vue-xtable-column> \\\n    <vue-xtable-column field=\\\"column2\\\" :title=\\\"$t('main.table.description')\\\" header-align=\\\"left\\\"> \\\n        <template v-slot=\\\"scope\\\"> \\\n            {{$ct(scope.row.column2)}} \\\n        </template> \\\n    </vue-xtable-column> \\\n    <vue-xtable-column field=\\\"column3\\\" :title=\\\"$t('main.table.parameters')\\\" header-align=\\\"left\\\"> \\\n        <template v-slot=\\\"scope\\\"> \\\n            {{$ct(scope.row.column3)}} \\\n        </template> \\\n    </vue-xtable-column> \\\n  </vue-xtable>\",\n  name: 'MethodTable',\n  props: ['data']\n};\n\nVue.component(MethodTable.name, MethodTable);\n\n\n'use strict';\nvar MainTemplate = '<div  :class=\"isMobileDemo ? \\'mobile_content\\':\\'\\'\"><section :class=\"isMobileDemo ? \\'mobile_middle_view\\' : \\'content\\'\"><h2>{{$t($route.params.head.label)}}</h2><p>{{$te($route.params.head.description) ? $t($route.params.head.description) : \"\"}}</p><template v-for=\"sample in $route.params.samples\"><h3>{{$t(sample.label)}}</h3><p v-html=\"$t(sample.description)\"></p><div class=\"demo-block\" :class=\"{\\'no-bottom\\': sample.notshowmeta!==true}\" v-if=\"sample.notshowblock!==true\"><component :is=\"sample.id\"></component></div><vue-collapse v-if=\"sample.notshowmeta!==true\" v-model=\"sample.collapse\" :expand-on-click-header=\"false\"><vue-collapse-item class=\"collapse-item-blue\" name=\"item1\"><template slot=\"title\"><vue-button type=\"text\" icon=\"vue-icon-document\" @click=\"clickHandle(sample)\">{{$t(\"main.code\")}}</vue-button><vue-button v-if=\"sample.notshowblock!==true\" type=\"text\" :style=\"{float:\\'right\\',marginRight:\\'10px\\',lineHeight:\\'22px\\'}\" @click=\"tryHandle(sample)\">Try it on JSRun</vue-button></template><pre class=\"toolbar:false;brush:jsp\" style=\"padding:0\">{{sample.code}}</pre></vue-collapse-item></vue-collapse></template></section><iframe id=\"mobile_demo_iframe\" v-if=\"isMobileDemo\" :src=\"viyMobileDemoUrl+$route.params.head.demoInitUrl+\\'?isForceMobile=true\\'\" class=\"mobile_iframe\" allowfullscreen=\"true\" referrerpolicy=\"unsafe-url\" sandbox=\"allow-same-origin allow-modals allow-scripts allow-popups allow-forms allow-pointer-lock allow-top-navigation\"></iframe></div>';\nvar routes = [];\nvar menuItems1 = [InstallDemo, I18nDemo, AjaxDemo];\nvar menuItems2 = [XtableDemo, LayoutDemo, IconDemo, SvgIconDemo, ButtonDemo, InputDemo, NumberInputDemo, DateDemo, TimeDemo, DateTimeDemo, CalendarDemo, ImageDemo, ImageViewerDemo, RadioDemo, CheckboxDemo, SwitchDemo, SelectDemo, CascaderDemo, DropdownDemo, FormDemo, PaginationDemo, TreeDemo, CollapseDemo, SortableDemo, DraggableDemo, SignatureDemo, MessageBoxDemo, DialogDemo, AsideDemo, NotificationDemo, TabsDemo, SplitPanesDemo, BadgeDemo, PopoverDemo, TooltipDemo, TagDemo, AlertDemo, NoteDemo, ListDemo, CardDemo, CarouselDemo, LoadingDemo, LoadingBarDemo, ProgressDemo, SliderDemo, BreadcrumbDemo, StepsDemo, RateDemo, PinDemo, UploadDemo, ColorDemo, NavMenuDemo, AdaptiveGroupDemo, RippleDemo, HotkeyDemo, TableDemo];\nvar mobileMenuItems = [MobileInstallDemo, ScrollViewDemo,ActionSheetDemo,NavBarDemo,TabBarDemo,CellLayoutDemo,SwipeCellDemo,TextIconDemo,StepperDemo,IndexBarDemo,SkeletonDemo];\nvar demos = [].concat(menuItems1, menuItems2,mobileMenuItems);\nvar components = {};\nvar componentsFn = function (componentId, template, parameter) {\n    var self = this;\n    if (!VueUtil.isDef(template)) return;\n    \n    var vueParameter = parameter ? VueUtil.clone(parameter) : {};\n    vueParameter.template = template;\n    \n    if (componentId.indexOf('i18n') !== -1) {\n        vueParameter.methods = {\n            clickHandle1: function () {\n                var self = this;\n                self.$root.radioLang = '1';\n                self.$nextTick(function () {\n                    self.$notify({ title: self.$t('message.hello', { msg: '你好!' }) });\n                });\n            },\n            clickHandle2: function () {\n                var self = this;\n                self.$root.radioLang = '2';\n                self.$nextTick(function () {\n                    self.$notify({ title: self.$t('message.hello', { msg: 'こんにちは!' }) });\n                });\n            }\n        }\n    }\n    components[componentId] = vueParameter;\n}\ndemos.forEach(regRouter);\n\nfunction regRouter(demo) {\n\n  if(demo.children) {\n    demo.children.forEach(function(childrenDemo) {\n      regRouter(childrenDemo);\n    })\n    return\n  }\n\n  components = {};\n  VueUtil.loop(demo.samples, function (demoSample) {\n      componentsFn(demoSample.id, demoSample.template, demoSample.parameter);\n  });\n\n  routes.push({\n      path: demo.path,\n      name: demo.name,\n      component: {\n          template: MainTemplate,\n          components: components,\n          data: function(){\n              return {viyMobileDemoUrl:\"https://spring21cn.github.io/vue-component/example/vue-mobile/#/\"};\n          },\n          methods: {\n              clickHandle: function (sample) {\n                  if (!VueUtil.isDef(sample.collapse)) sample.collapse = [];\n                  if (sample.collapse.length > 0) {\n                      sample.collapse = [];\n                  } else {\n                      sample.collapse = [\"item1\"];\n                  }\n                  this.$forceUpdate();\n              },\n              tryHandle: function (sample) {\n                  var url = 'http://jsrun.net/QihKp/edit';\n                  window.open(url);\n              }\n          },\n          mounted: function () {\n              this.$nextTick(function () {\n                  SyntaxHighlighter.highlight();\n              });\n          },\n          computed: {\n            isMobileDemo: function() {\n                return demo.name.indexOf('mobile_') == 0;\n            }\n          }\n      },\n      beforeEnter: function (to, from, next) {\n          Vue.loadingBar.start();\n          to.params.head = demo.head;\n          to.params.samples = demo.samples;\n          next();\n      },\n  });\n}\n\nroutes.push({\n    path: '/changeLog',\n    component: ChangeLog,\n    beforeEnter: function (to, from, next) {\n        Vue.loadingBar.start();\n        next();\n    }\n});\nroutes.push({\n    path: '/',\n    component: {\n        template: '<div><div class=\"scene\"><div class=\"scene_titanShadow\"></div><div class=\"t_wrap\"><div class=\"scene_titan\"><div class=\"eyes\"><div class=\"eye eye--left\"></div><div class=\"eye eye--right\"></div></div></div></div></div><section class=\"content root-content\"><h2>{{$t(\\'main.line1\\')}}</h2><p></p><h3 class=\"imitation\">{{txt}}{{h3}}</h3></section></div>',\n        data: function () {\n            return {\n                h3: '',\n                txt: '',\n                typeInterval: null\n            }\n        },\n        beforeDestroy: function () {\n            this.typeInterval && clearInterval(this.typeInterval);\n        },\n        mounted: function () {\n            var self = this;\n            var typeFlg = true;\n            var msgFlg = 0;\n            var typeWriter = {\n                msg: function (msg) {\n                    return msg;\n                },\n                len: function () {\n                    return this.msg.length;\n                },\n                seq: 0,\n                speed: 400,\n                witeTime: 1500,\n                backSpeed: 200,\n                backFlg: true,\n                typeInterval: null,\n                type: function () {\n                    typeFlg = false;\n                    var that = this;\n                    that.typeInterval && clearInterval(that.typeInterval);\n                    self.h3 = that.msg.substring(0, that.seq);\n                    if (that.seq === that.len()) {\n                        if (that.backFlg) {\n                            setTimeout(function () {\n                                that.typeBack()\n                            }, that.witeTime);\n                        } else {\n                            self.txt = self.h3;\n                            self.h3 = \"\";\n                            that.seq = 0;\n                            typeFlg = true;\n                        }\n                    } else {\n                        that.seq++;\n                        setTimeout(function () {\n                            that.type()\n                        }, that.speed);\n                    }\n                },\n                typeBack: function () {\n                    var that = this;\n                    self.h3 = that.msg.substring(that.seq, 0);\n                    if (that.seq === 0) {\n                        typeFlg = true;\n                    } else {\n                        that.seq--\n                        setTimeout(function () {\n                            that.typeBack()\n                        }, that.backSpeed);\n                    }\n                }\n            }\n            var startType = function (msg, speed, backSpeed, backFlg, typeInterval) {\n                typeWriter.msg = msg;\n                typeWriter.speed = speed;\n                typeWriter.backSpeed = backSpeed;\n                typeWriter.backFlg = backFlg;\n                typeWriter.typeInterval = typeInterval;\n                typeWriter.type();\n            }\n            setTimeout(function () {\n                startType(self.$t('main.line21'), 200, 100, true);\n                self.typeInterval = setInterval(function () {\n                    if (typeFlg) {\n                        startType(self.$t('main.line22'), 200, 100, true, self.typeInterval);\n                        self.typeInterval = setInterval(function () {\n                            if (typeFlg) {\n                                startType(self.$t('main.line23'), 200, 0, false, self.typeInterval);\n                                self.typeInterval = setInterval(function () {\n                                    if (typeFlg) {\n                                        switch (msgFlg) {\n                                            case 0:\n                                                msgFlg++\n                                                startType(self.$t('main.line24'), 250, 150, true);\n                                                break;\n                                            case 1:\n                                                msgFlg++\n                                                startType(self.$t('main.line25'), 250, 150, true);\n                                                break;\n                                            case 2:\n                                                msgFlg++\n                                                startType(self.$t('main.line26'), 250, 150, true);\n                                                break;\n                                            case 3:\n                                                msgFlg++\n                                                startType(self.$t('main.line27'), 250, 150, true);\n                                                break;\n                                            case 4:\n                                                msgFlg = 0;\n                                                startType(self.$t('main.line28'), 250, 150, true);\n                                                break;\n                                        }\n                                    }\n                                }, 1500);\n                            }\n                        }, 1500);\n                    }\n                }, 1500);\n            }, 1500);\n        }\n    },\n    beforeEnter: function (to, from, next) {\n        Vue.loadingBar.start();\n        next();\n    }\n});\nroutes.push({\n    path: '/example',\n    redirect: '/'\n});\nroutes.push({\n  path: '/redmine',\n  redirect: '/'\n});\nroutes.push({\n    path: '/@*',\n    redirect: '/'\n  });\nvar DemoRouter = new VueRouter({\n    routes: routes,\n    scrollBehavior: function(to, from, savedPosition) {\n      document.getElementsByClassName('right-container')[0].scrollTop = 0;\n    }\n});\nDemoRouter.afterEach(function (to, from) {\n    Vue.nextTick(function () {\n        Vue.loadingBar.finish();\n        vueDemo && vueDemo.filterHandle();\n    });\n});\nvar vueDemo = new Vue({\n    template: \n    '<div> \\\n      <vue-menu theme=\"dark\" class=\"head-container\"> \\\n        <vue-row type=\"flex\" justify=\"center\"> \\\n          <vue-col :sm=\\'2\\' :xs=\\'2\\' class=\"menu-show\"> \\\n            <vue-button icon=\"vue-icon-menu\" @click=\"clickHandle\" :class=\"[\\'show-menu-btn\\',openMenuClass]\" \\\n              type=\"text\"></vue-button> \\\n          </vue-col> \\\n          <vue-col :span=\"10\" :offset=\"1\"> \\\n            <vue-button type=\"text\" class=\"head-text\" @click=\"headClick\">{{headText}}</vue-button> \\\n          </vue-col> \\\n          <vue-col :span=\"11\"> \\\n            <vue-radio-group v-model=\"radioLang\" class=\"head-right\" size=\"small\"> \\\n              <vue-radio-button label=\"1\">{{$t(\\'main.radiolabel1\\')}}</vue-radio-button> \\\n              <vue-radio-button label=\"2\">{{$t(\\'main.radiolabel2\\')}}</vue-radio-button> \\\n              <vue-radio-button label=\"3\">{{$t(\\'main.radiolabel3\\')}}</vue-radio-button> \\\n            </vue-radio-group> \\\n            <div class=\"head-right padding-right20\">Version： \\\n              <vue-button type=\"text\" @click=\"showChangeLog\">{{version}}</vue-button> \\\n            </div> \\\n          </vue-col> \\\n          <vue-col :span=\"2\"> \\\n            <div class=\"head-right\">\\\n            <vue-button type=\"text\" @click=\"toGitLab\" style=\"color: #fff;\">GitLab</vue-button><i class=\"vue-icon-external\" style=\"padding: 7px;\"/>\\\n            </div>\\\n          </vue-col> \\\n        </vue-row> \\\n      </vue-menu> \\\n      <vue-row class=\"main-container\"> \\\n        <vue-col :lg=\\'5\\' :md=\\'5\\' :sm=\\'10\\' :xs=\\'12\\' :class=\"[\\'left-container\\',leftClass]\"> \\\n          <vue-input class=\"filter-input\" ref=\"input\" icon=\"vue-icon-filter-o\" v-model=\"filter\" @input=\"filterHandle\"></vue-input> \\\n          <vue-scrollbar :height=\"menuHeight\" class=\"menu-container\"> \\\n            <vue-menu router class=\"container-color\" :default-active=\"defaultActive\" :default-openeds=\"defaultOpeneds\" \\\n              @select=\"selectHandle\"> \\\n              <vue-submenu index=\"1\"><template slot=\"title\">{{$t(\\'main.title1\\')}}</template> \\\n                <vue-menu-item-group class=\"container-color\"> \\\n                  <vue-menu-item v-for=\"(menu, index) in menuItems1\" :key=\"index\" :index=\"menu.path\">{{$t(menu.head.label)}}</vue-menu-item> \\\n                </vue-menu-item-group> \\\n              </vue-submenu> \\\n              <vue-submenu index=\"2\"><template slot=\"title\">{{$t(\\'main.title2\\')}}</template> \\\n              <vue-menu-item-group class=\"container-color\"> \\\n              <template v-for=\"(menu, index) in menuItems2\" >\\\n                <vue-menu-item v-if=\"!menu.children\" :index=\"menu.path\">{{$t(menu.head.label)}}</vue-menu-item> \\\n                <vue-submenu v-else :index=\"menu.head.label\">\\\n                <template slot=\"title\">{{$t(menu.head.label)}}</template>\\\n                <vue-menu-item-group class=\"container-color\"> \\\n                  <template v-for=\"(childrenMenu, childrenIndex) in menu.children\" > \\\n                    <template v-if=\"!childrenMenu.children\">\\\n                      <vue-menu-item :index=\"childrenMenu.path\">{{$t(childrenMenu.head.label)}}</vue-menu-item> \\\n                    </template>\\\n                    <vue-submenu v-else :index=\"childrenMenu.head.label\">\\\n                    <template slot=\"title\">{{$t(childrenMenu.head.label)}}</template>\\\n                    <vue-menu-item-group class=\"container-color\"> \\\n                      <template v-for=\"(grandChildrenMenu, childrenIndex) in childrenMenu.children\" > \\\n                        <vue-menu-item :index=\"grandChildrenMenu.path\">{{$t(grandChildrenMenu.head.label)}}</vue-menu-item> \\\n                      </template>\\\n                      </vue-menu-item-group> \\\n                    </vue-submenu> \\\n                  </template> \\\n                  </vue-menu-item-group> \\\n                </vue-submenu> \\\n              </template>\\\n            </vue-menu-item-group> \\\n              </vue-submenu> \\\n              <vue-submenu index=\"3\"><template slot=\"title\">{{$t(\\'main.title5\\')}}</template> \\\n                <vue-menu-item-group class=\"container-color\"> \\\n                 <vue-menu-item index=\"@redirect=example/gantt\">{{$t(\\'main.title6\\')}}</vue-menu-item> \\\n                 <vue-menu-item index=\"@redirect=example/charts/charts.html\">{{$t(\\'main.title7\\')}}</vue-menu-item> \\\n                 <vue-menu-item index=\"@redirect=example/excel\">{{$t(\\'main.title8\\')}}</vue-menu-item> \\\n                 <vue-menu-item index=\"@redirect=example/vue-pic-marker\">{{$t(\\'main.title10\\')}}</vue-menu-item> \\\n                </vue-menu-item-group> \\\n              </vue-submenu> \\\n              <vue-submenu index=\"4\"><template slot=\"title\">{{$t(\\'main.title9\\')}}</template> \\\n              <vue-menu-item-group class=\"container-color\"> \\\n              <template v-for=\"(menu, index) in mobileMenuItems\" >\\\n                <vue-menu-item v-if=\"!menu.children\" :index=\"menu.path\">{{$t(menu.head.label)}}</vue-menu-item> \\\n                <vue-submenu v-else :index=\"menu.head.label\">\\\n                <template slot=\"title\">{{$t(menu.head.label)}}</template>\\\n                <vue-menu-item-group class=\"container-color\"> \\\n                  <template v-for=\"(childrenMenu, childrenIndex) in menu.children\" > \\\n                    <template v-if=\"!childrenMenu.children\">\\\n                      <vue-menu-item :index=\"childrenMenu.path\">{{$t(childrenMenu.head.label)}}</vue-menu-item> \\\n                    </template>\\\n                    <vue-submenu v-else :index=\"childrenMenu.head.label\">\\\n                    <template slot=\"title\">{{$t(childrenMenu.head.label)}}</template>\\\n                    <vue-menu-item-group class=\"container-color\"> \\\n                      <template v-for=\"(grandChildrenMenu, childrenIndex) in childrenMenu.children\" > \\\n                        <vue-menu-item :index=\"grandChildrenMenu.path\">{{$t(grandChildrenMenu.head.label)}}</vue-menu-item> \\\n                      </template>\\\n                      </vue-menu-item-group> \\\n                    </vue-submenu> \\\n                  </template> \\\n                  </vue-menu-item-group> \\\n                </vue-submenu> \\\n              </template>\\\n            </vue-menu-item-group> \\\n              </vue-submenu> \\\n              <vue-menu-item index=\"/example\">{{$t(\\'main.title3\\')}}</vue-menu-item> \\\n              <vue-menu-item index=\"/redmine\">{{$t(\\'main.title4\\')}}</vue-menu-item> \\\n            </vue-menu> \\\n          </vue-scrollbar> \\\n        </vue-col> \\\n        <vue-col :lg=\\'19\\' :md=\\'19\\' class=\"right-container\"> \\\n            <router-view></router-view> \\\n        </vue-col> \\\n      </vue-row> \\\n    </div>',\n    data: function () {\n        return {\n            defaultActive: null,\n            defaultOpeneds: [],\n            menuItems1: menuItems1,\n            menuItems2: menuItems2,\n            mobileMenuItems: mobileMenuItems,\n            leftClass: \"\",\n            openMenuClass: \"\",\n            headText: \"VUE-Component\",\n            radioLang: \"1\",\n            version: VueUtil.version,\n            filter: null,\n            rightHeight: null,\n            menuHeight: null\n        }\n    },\n    watch: {\n        radioLang: function (val) {\n            switch (val) {\n                case \"1\":\n                    VueUtil.setLang(\"zh\");\n                    break;\n                case \"2\":\n                    VueUtil.setLang(\"ja\");\n                    break\n                case \"3\":\n                    VueUtil.setLang(\"en\");\n                    break\n            }\n        }\n    },\n    methods: {\n        filterHandle: function () {\n            var val = this.filter;\n            var menuItems = this.$el.querySelectorAll('.menu-container .vue-menu-item');\n            var subMenus = this.$el.querySelectorAll('.menu-container .vue-submenu');\n            subMenus = VueUtil.reverse(Array.prototype.slice.call(subMenus));\n\n            if (VueUtil.trim(val) === '') {\n                VueUtil.loop(menuItems, function (menuItem) {\n                    VueUtil.removeClass(menuItem, 'hidden');\n                });\n                VueUtil.loop(subMenus, function (subMenu) {\n                    VueUtil.removeClass(subMenu, 'hidden');\n                });\n            } else {\n                VueUtil.loop(menuItems, function (menuItem) {\n                    VueUtil.addClass(menuItem, 'hidden');\n                    if (menuItem.innerHTML.toLowerCase().indexOf(val.toLowerCase()) !== -1) {\n                        VueUtil.removeClass(menuItem, 'hidden');\n                    }\n                });\n\n                VueUtil.loop(subMenus, function (subMenu) {\n                    if (!subMenu.querySelector('.vue-menu-item:not(.hidden)')) {\n                        VueUtil.addClass(subMenu, 'hidden');\n                    } else {\n                        VueUtil.removeClass(subMenu, 'hidden');\n                    }\n                });\n            }\n        },\n        headClick: function () {\n            var self = this;\n            self.$router.push('/');\n            self.defaultOpeneds = ['1'];\n            VueUtil.removeClass(document.querySelector('.left-container .vue-menu-item.is-active'), 'is-active');\n            self.$nextTick(function () {\n                self.leftClass = \"\";\n                self.openMenuClass = \"\";\n            });\n        },\n        showChangeLog: function () {\n            var self = this;\n            self.$router.push('/changeLog');\n            self.defaultOpeneds = ['1'];\n            VueUtil.removeClass(document.querySelector('.left-container .vue-menu-item.is-active'), 'is-active');\n            self.$nextTick(function () {\n                self.leftClass = \"\";\n                self.openMenuClass = \"\";\n            });\n        },\n        clickHandle: function () {\n            if (this.leftClass === \"show-left\") {\n                this.leftClass = \"\";\n                this.openMenuClass = \"\";\n            } else {\n                this.leftClass = \"show-left\";\n                this.openMenuClass = \"menu-opend\"\n            }\n        },\n        selectHandle: function (index) {\n            if(index.indexOf('@redirect') == 0) {\n                document.location.href = index.replace('@redirect=', '');\n            }\n            if (index === \"/example\") {\n                document.location.href = \"example-index.html\"\n            }\n            if (index === \"/redmine\") {\n              document.location.href = \"https://github.com/spring21cn/vue-component/issues/new\"\n            }\n            var self = this;\n            self.$nextTick(function () {\n                self.leftClass = \"\";\n                self.openMenuClass = \"\";\n            });\n        },\n        toGitLab: function () {\n          window.open(\"https://spring21cn.github.io/vue-component/\");\n        }\n    },\n    mounted: function () {\n        var self = this;\n        var lan = VueUtil.getSystemInfo().language.toLowerCase();\n        self.radioLang = \"1\";\n        if (lan.indexOf('ja') !== -1) {\n            self.radioLang = \"2\";\n        } else if (lan.indexOf('en') !== -1) {\n            self.radioLang = \"3\";\n        }\n        var inputHeight = self.$refs.input.$el.clientHeight;\n        VueUtil.addResizeListener(function () {\n            var containerHeight = document.body.clientHeight - self.$el.querySelector('.head-container').clientHeight;\n            self.$el.querySelector('.main-container').style.height = containerHeight + 'px';\n            self.rightHeight = containerHeight;\n            self.menuHeight = containerHeight - inputHeight;\n        });\n        VueUtil.on(document.querySelector('.right-container'), 'click', function () {\n            self.$nextTick(function () {\n                self.leftClass = \"\";\n                self.openMenuClass = \"\";\n            });\n        });\n        self.$nextTick(function () {\n            var urlAry = document.location.href.split('#/');\n            if (VueUtil.trim(urlAry[1]) !== '') {\n                self.defaultActive = \"/\" + urlAry[1];\n            } else {\n                self.defaultOpeneds = ['1'];\n            }\n            var containerHeight = document.body.clientHeight - self.$el.querySelector('.head-container').clientHeight;\n            self.$el.querySelector('.main-container').style.height = containerHeight + 'px';\n            self.rightHeight = containerHeight;\n            self.menuHeight = containerHeight - inputHeight;\n            setTimeout(function () {\n                if (document.querySelector('.left-container .vue-menu-item.is-active')) {\n                    document.querySelector('.left-container').scrollTop = document.querySelector('.left-container .vue-menu-item.is-active').offsetTop;\n                }\n            }, 500);\n        });\n    },\n    router: DemoRouter\n}).$mount('#main');\n","var template = XEAjaxMock.template;\n\nvar userData = template(require('./api/user/list.json'));\nvar columnData = template(require('./api/column/list.json'));\nvar fileData = template(require('./api/file/list.json'));\n\nvar sexData = template(require('./api/conf/sex.json'));\nvar cityAllData = template(require('./api/city/all.json'));\nvar i18nData = template(require('./api/i18n/list.json'));\n\nmodule.exports = {\n  userData: userData,\n  columnData: columnData,\n  fileData: fileData,\n  sexData: sexData,\n  cityAllData: cityAllData,\n  i18nData: i18nData,\n}","var helper = require('./helper');\r\n\r\nMockData = {\r\n  // user\r\n  'GET */api/user/page/list(/:pageSize)(/:currentPage)': function (param, query, request, passThrough) {\r\n    var pageSize = VueUtil.toNumber(param.pageSize);\r\n    var currentPage = VueUtil.toNumber(param.currentPage);\r\n    var totalResult = helper.userData.length;\r\n\r\n    let body = {\r\n      page: {  pageSize: pageSize, currentPage: currentPage, totalResult: totalResult, total: totalResult },\r\n      result: helper.userData.slice((currentPage - 1) * pageSize, currentPage * pageSize)\r\n    }\r\n    return {\r\n      body: body,\r\n      status: 200,\r\n    }\r\n  },\r\n  'GET */api/user/list': helper.userData.slice(0, 10),\r\n  'POST */api/user/save': function(param, query, request, passThrough) {\r\n    var removeRecords = request.body.removeRecords\r\n    VueUtil.remove(helper.userData, function (item) {\r\n      return removeRecords.some(function (row) {\r\n        return row.id === item.id;\r\n      });\r\n    });\r\n    return {\r\n      status: 200,\r\n    }\r\n  },\r\n\r\n\r\n  //column\r\n  'GET */api/column/page/list(/:pageSize)(/:currentPage)': function (param, query, request, passThrough) {\r\n    var pageSize = VueUtil.toNumber(param.pageSize);\r\n    var currentPage = VueUtil.toNumber(param.currentPage);\r\n    var totalResult = helper.columnData.length;\r\n\r\n    let body = {\r\n      page: { pageSize: pageSize, currentPage: currentPage, totalResult: totalResult, total: totalResult },\r\n      result: helper.columnData.slice((currentPage - 1) * pageSize, currentPage * pageSize)\r\n    }\r\n    return {\r\n      body: body,\r\n      status: 200,\r\n    }\r\n  },\r\n  'GET */api/column/list': helper.columnData.slice(0, 10),\r\n\r\n\r\n  // file\r\n  'GET */api/file/list': helper.fileData,\r\n\r\n  \r\n  // sex\r\n  'GET */api/conf/sex/list': helper.sexData,\r\n\r\n  // city\r\n  'GET */api/conf/city/all': helper.cityAllData,\r\n\r\n  // i18n\r\n  'GET */api/i18n/list': helper.i18nData,\r\n\r\n  \r\n}\r\nVue.use(window[\"vue-resource-mock\"].default, MockData, { silent: false })"],"sourceRoot":""}