!function(e){var n={};function t(l){if(n[l])return n[l].exports;var o=n[l]={i:l,l:!1,exports:{}};return e[l].call(o.exports,o,o.exports,t),o.l=!0,o.exports}t.m=e,t.c=n,t.d=function(e,n,l){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:l})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var l=Object.create(null);if(t.r(l),Object.defineProperty(l,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var o in e)t.d(l,o,function(n){return e[n]}.bind(null,o));return l},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s="./demo/index.js")}({"./demo/AdaptiveGroupDemo.js":
/*!***********************************!*\
  !*** ./demo/AdaptiveGroupDemo.js ***!
  \***********************************/
/*! no static exports found */function(e,n,t){"use strict";e.exports={path:"/adaptiveGroup",name:"adaptiveGroup",head:{label:"adaptiveGroup.label",description:"adaptiveGroup.description"},samples:[{id:"adaptiveGroup1",label:"adaptiveGroup.samples1.label",description:"adaptiveGroup.samples1.description",template:'<div class="source"><vue-adaptive-group size="sm" custom-class="more" li-class="custom"><vue-button>主按钮</vue-button><vue-button slot="li1">按钮1</vue-button><vue-button slot="li2">按钮2</vue-button><vue-button slot="li3">按钮3</vue-button></vue-adaptive-group></div>',code:'<vue-adaptive-group size="sm" custom-class="more" li-class="custom">\n  <vue-button>主按钮</vue-button>\n  <vue-button slot="li1">按钮1</vue-button>\n  <vue-button slot="li2">按钮1</vue-button>\n  <vue-button slot="li3">按钮1</vue-button>\n</vue-adaptive-group>'},{id:"adaptiveGroup2",label:"Attributes",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"size",column2:"adaptiveGroup.samples2.row1column2",column3:"String",column4:"lg(1200px), md(992px), sm(768px)",column5:"md"},{column1:"custom-class",column2:"adaptiveGroup.samples2.row2column2",column3:"String",column4:"",column5:""},{column1:"li-class",column2:"adaptiveGroup.samples2.row3column2",column3:"String",column4:"",column5:""},{column1:"icon-class",column2:"adaptiveGroup.samples2.row4column2",column3:"String",column4:"",column5:"vue-icon-more"}]}}},notshowmeta:!0},{id:"adaptiveGroup3",label:"Slots",template:'<slot-table :data="tableData"></slot-table>',parameter:{data:function(){return{tableData:[{column1:"",column2:"adaptiveGroup.samples3.row1column2"},{column1:"li+(index)",column2:"adaptiveGroup.samples3.row2column2"}]}}},notshowmeta:!0}]}},"./demo/AjaxDemo.js":
/*!**************************!*\
  !*** ./demo/AjaxDemo.js ***!
  \**************************/
/*! no static exports found */function(e,n,t){"use strict";e.exports={path:"/ajax",name:"ajax",head:{label:"ajaxDemo.label",description:""},samples:[{id:"ajax1",label:"ajaxDemo.samples1.label",description:"ajaxDemo.samples1.description",collapse:["item1"],notshowblock:!0,code:"//General Vue use http\nVue.http.get('/someUrl', [options]).then(successCallback, errorCallback);\nVue.http.post('/someUrl', [body], [options]).then(successCallback, errorCallback);\n\n//Vue components use $http\nthis.$http.get('/someUrl', [options]).then(successCallback, errorCallback);\nthis.$http.post('/someUrl', [body], [options]).then(successCallback, errorCallback);"},{id:"ajax2",label:"ajaxDemo.samples2.label",description:"ajaxDemo.samples2.description",collapse:["item1"],notshowblock:!0,code:'get(url, [options])\nhead(url, [options])\ndelete(url, [options])\njsonp(url, [options])\npost(url, [body], [options])\nput(url, [body], [options])\npatch(url, [body], [options])\n\n//For more API, please refer to\n"https://github.com/pagekit/vue-resource"'},{id:"ajax3",label:"Options",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"url",column2:"string",column3:"ajaxDemo.samples3.row1column3"},{column1:"method",column2:"string",column3:"ajaxDemo.samples3.row2column3"},{column1:"body",column2:"Object,FormDatastring",column3:"request body"},{column1:"params",column2:"Object",column3:"ajaxDemo.samples3.row4column3"},{column1:"headers",column2:"Object",column3:"request header"},{column1:"timeout",column2:"number",column3:"ajaxDemo.samples3.row6column3"},{column1:"before",column2:"function(request)",column3:"ajaxDemo.samples3.row7column3"},{column1:"progress",column2:"function(event)",column3:"ajaxDemo.samples3.row8column3"},{column1:"credientials",column2:"boolean",column3:"ajaxDemo.samples3.row9column3"},{column1:"emulateHTTP",column2:"boolean",column3:"ajaxDemo.samples3.row10column3"},{column1:"emulateJSON",column2:"boolean",column3:"ajaxDemo.samples3.row11column3"}]}}},notshowmeta:!0}]}},"./demo/AlertDemo.js":
/*!***************************!*\
  !*** ./demo/AlertDemo.js ***!
  \***************************/
/*! no static exports found */function(e,n,t){"use strict";e.exports={path:"/alert",name:"alert",head:{label:"alertDemo.label",description:"alertDemo.description"},samples:[{id:"alert1",label:"alertDemo.samples1.label",description:"alertDemo.samples1.description",template:'<div class="source"><vue-alert title="Success Alert" type="success" show-icon :closable="false">More text description...</vue-alert><vue-alert title="Info Alert" type="info" show-icon>More text description...</vue-alert><vue-alert title="Warning Alert" type="warning" show-icon close-text="Done">More text description...</vue-alert><vue-alert title="Error Alert" type="error" show-icon close-text="Go!" @close="closeHandle">More text description...</vue-alert><vue-alert title="Success Alert" type="success" show-icon dark :closable="false">More text description...</vue-alert><vue-alert title="Info Alert" type="info" show-icon dark>More text description...</vue-alert><vue-alert title="Warning Alert" type="warning" show-icon dark close-text="Done">More text description...</vue-alert><vue-alert title="Error Alert" type="error" show-icon dark close-text="Go!" @close="closeHandle">More text description...</vue-alert></div>',parameter:{methods:{closeHandle:function(){this.$notify({title:"I'm go~"})}}},code:'<vue-alert title="Success Alert" type="success" show-icon :closable="false">More text description...</vue-alert>\n<vue-alert title="Info Alert" type="info" show-icon>More text description...</vue-alert>\n<vue-alert title="Warning Alert" type="warning" show-icon close-text="Done">More text description...</vue-alert>\n<vue-alert title="Error Alert" type="error" show-icon close-text="Go!" @close="closeHandle">More text description...</vue-alert>\n<vue-alert title="Success Alert" type="success" show-icon dark :closable="false">More text description...</vue-alert>\n<vue-alert title="Info Alert" type="info" show-icon dark>More text description...</vue-alert>\n<vue-alert title="Warning Alert" type="warning" show-icon dark close-text="Done">More text description...</vue-alert>\n<vue-alert title="Error Alert" type="error" show-icon dark close-text="Go!" @close="closeHandle">More text description...</vue-alert>\n\n<script>\n  new Vue({\n    methods: {\n      closeHandle: function() {\n        this.$notify({title: "I\'m go~"});\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"alert2",label:"Attributes",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"title",column2:"alertDemo.samples2.row1column2",column3:"String",column4:"",column5:""},{column1:"type",column2:"alertDemo.samples2.row2column2",column3:"String",column4:"success, warning, info, error",column5:"info"},{column1:"closable",column2:"alertDemo.samples2.row3column2",column3:"Boolean",column4:"",column5:"true"},{column1:"close-text",column2:"alertDemo.samples2.row4column2",column3:"String",column4:"",column5:""},{column1:"show-icon",column2:"alertDemo.samples2.row5column2",column3:"Boolean",column4:"",column5:"false"},{column1:"dark",column2:"alertDemo.samples2.row6column2",column3:"Boolean",column4:"",column5:"false"}]}}},notshowmeta:!0},{id:"alert3",label:"Events",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"close",column2:"alertDemo.samples3.row1column2",column3:""}]}}},notshowmeta:!0}]}},"./demo/AsideDemo.js":
/*!***************************!*\
  !*** ./demo/AsideDemo.js ***!
  \***************************/
/*! no static exports found */function(e,n,t){"use strict";e.exports={path:"/aside",name:"aside",head:{label:"asideDemo.label",description:"asideDemo.description"},samples:[{id:"aside1",label:"asideDemo.samples1.label",description:"asideDemo.samples1.description",template:'<div class="source"><vue-aside title="This is title" v-model="asideVisible" :position="asidePos" :before-close="handleClose"><span>This is a message</span><span slot="footer"><vue-button @click="asideVisible = false">Cancel</vue-button><vue-button type="primary" @click="asideVisible = false">Complete</vue-button></span></vue-aside><vue-row><vue-col :span="6"><vue-button @click="openasideLeft">Open in left</vue-button></vue-col><vue-col :span="6"><vue-button @click="openasideRight">Open in right</vue-button></vue-col><vue-col :span="6"><vue-button @click="openasideTop">Open in top</vue-button></vue-col><vue-col :span="6"><vue-button @click="openasideBottom">Open in bottom</vue-button></vue-col></vue-row></div>',parameter:{data:function(){return{asidePos:"",asideVisible:!1}},methods:{openasideLeft:function(){this.asidePos="left",this.asideVisible=!0},openasideRight:function(){this.asidePos="right",this.asideVisible=!0},openasideTop:function(){this.asidePos="top",this.asideVisible=!0},openasideBottom:function(){this.asidePos="bottom",this.asideVisible=!0},handleClose:function(e){this.$confirm({message:"Are you sure to close this aside?"}).then(function(){e()}).catch(function(){e(!1)})}}},code:'<vue-aside v-model="asideVisible" :position="asidePos" title="This is title" :before-close="handleClose">\n  <span>This is a message</span>\n  <span slot="footer">\n    <vue-button @click="asideVisible = false">Cancel</vue-button>\n    <vue-button type="primary" @click="asideVisible = false">Complete</vue-button>\n  </span>\n</vue-aside>\n<vue-button @click="openasideLeft">Open in left</vue-button>\n<vue-button @click="openasideRight">Open in rigth</vue-button>\n\n<vue-button @click="openasideTop">Open in top</vue-button>\n\n<vue-button @click="openasideBottom">Open in Bottom</vue-button>\n\n<script>\n  new Vue({\n    data: {\n      return: function() {\n         asidePos: "",\n         asideVisible: false\n      }\n    },\n    methods: {\n      openasideLeft: function() {\n        this.asidePos = "left";\n        this.asideVisible = true;\n      },\n      openasideRight: function() {\n        this.asidePos = "right";\n        this.asideVisible = true;\n      },\n      openasideTop: function() {\n        this.asidePos = "top";\n        this.asideVisible = true;\n      },\n      openasideBottom: function() {\n        this.asidePos = "bottom";\n        this.asideVisible = true;\n      },\n      handleClose: function(done) {\n        this.$confirm({\n          message: "Are you sure to close this aside?"\n        }).then(function() {\n          done();\n        }).catch(function() {\n          done(false);\n        });\n      },\n    }\n  }).$mount();\n<\/script>'},{id:"aside2",label:"asideDemo.samples2.label",description:"asideDemo.samples2.description",template:'<div class="source"><div class="phone-viewport"><vue-menu theme="dark" default-active="1" mode="horizontal" @select="asideVisible = true"><vue-menu-item index="1"><i class="vue-icon-menu"></i>Aside</vue-menu-item></vue-menu><vue-aside v-model="asideVisible" relative position="left" size="large" close-on-click-modal title="Aside content"><span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Nisi cupiditate esse necessitatibus beatae nobis, deserunt ut est fugit, tempora deleniti, eligendi commodi doloribus. Nemo, assumenda possimus, impedit inventore perferendis iusto!</span></vue-aside></div></div>',parameter:{data:function(){return{asideVisible:!1}}},code:'<div class="phone-viewport">\n  <vue-menu theme="dark" default-active="1" mode="horizontal" @select="asideVisible = true">\n    <vue-menu-item index="1">\n      <i class="vue-icon-menu"></i>Aside\n    </vue-menu-item>\n  </vue-menu>\n  <vue-aside v-model="asideVisible" relative position="left" size="large" close-on-click-modal title="Aside content">\n    <span>\n      Lorem ipsum dolor sit amet, consectetur adipisicing elit. Nisi cupiditate esse necessitatibus beatae nobis, deserunt ut est fugit, tempora deleniti, eligendi commodi doloribus. Nemo, assumenda possimus, impedit inventore perferendis iusto!\n    </span>\n  </vue-aside>\n</div>\n\n<script>\n  new Vue({\n    data: {\n      return: function() {\n         asideVisible: false\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"aside3",label:"asideDemo.samples3.label",description:"asideDemo.samples3.description",template:'<div class="source"><vue-button type="primary" @click="asideVisible = true">Click Me</vue-button><vue-aside v-model="asideVisible" close-on-click-modal><span slot="header">Shipping address</span><vue-xtable :data="gridData"><vue-xtable-column field="date" title="Date" width="150"></vue-xtable-column><vue-xtable-column field="name" title="Name" width="150"></vue-xtable-column><vue-xtable-column field="address" title="Address" width="350"></vue-xtable-column></vue-xtable></vue-aside></div>',parameter:{data:function(){return{gridData:[{date:"2017-07-02",name:"John Smith",address:"No.1518, Jinshajiang Road"},{date:"2017-07-04",name:"John Smith",address:"No.1518, Jinshajiang Road"},{date:"2017-07-01",name:"John Smith",address:"No.1518, Jinshajiang Road"},{date:"2017-07-03",name:"John Smith",address:"No.1518, Jinshajiang Road"}],asideVisible:!1}}},code:'<vue-button type="primary" @click="asideVisible = true">Click Me</vue-button>\n<vue-aside v-model="asideVisible" close-on-click-modal>\n  <span slot="header">Shipping address</span>\n  <vue-xtable :data="gridData">\n    <vue-xtable-column field="date" title="Date" width="150"></vue-xtable-column>\n    <vue-xtable-column field="name" title="Name" width="200"></vue-xtable-column>\n    <vue-xtable-column field="address" title="Address" width="350"></vue-xtable-column>\n  </vue-xtable>\n</vue-aside>\n<script>\n  new Vue({\n    data: function() {\n      return {\n        gridData: [{\n          date: "2017-07-02",\n          name: "John Smith",\n          address: "No.1518, Jinshajiang Road"\n        }, {\n          date: "2017-07-04",\n          name: "John Smith",\n          address: "No.1518, Jinshajiang Road"\n        }, {\n          date: "2017-07-01",\n          name: "John Smith",\n          address: "No.1518, Jinshajiang Road"\n        }, {\n          date: "2017-07-03",\n          name: "John Smith",\n          address: "No.1518, Jinshajiang Road"\n        }],\n        asideVisible: false\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"asid4",label:"Attributes",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"v-model",column2:"asideDemo.samples4.row1column2",column3:"Boolean",column4:"",column5:""},{column1:"title",column2:"asideDemo.samples4.row2column2",column3:"String",column4:"",column5:""},{column1:"size",column2:"asideDemo.samples4.row3column2",column3:"String",column4:"tiny/small/large",column5:"small"},{column1:"custom-class",column2:"asideDemo.samples4.row5column2",column3:"String",column4:"",column5:""},{column1:"close-on-click-modal",column2:"asideDemo.samples4.row6column2",column3:"Boolean",column4:"",column5:"false"},{column1:"close-on-press-escape",column2:"asideDemo.samples4.row7column2",column3:"Boolean",column4:"",column5:"true"},{column1:"show-close",column2:"asideDemo.samples4.row8column2",column3:"Boolean",column4:"",column5:"false"},{column1:"before-close",column2:"asideDemo.samples4.row9column2",column3:"asideDemo.samples4.row9column3",column4:"",column5:""},{column1:"position",column2:"asideDemo.samples4.row10column2",column3:"String",column4:"left, right, top, bottom",column5:"right"},{column1:"relative",column2:"asideDemo.samples4.row11column2",column3:"Boolean",column4:"",column5:"false"},{column1:"cleanness-modal",column2:"dialogDemo.samples3.row10column2",column3:"Boolean",column4:"",column5:"false"}]}}},notshowmeta:!0},{id:"asid5",label:"Slots",template:'<slot-table :data="tableData"></slot-table>',parameter:{data:function(){return{tableData:[{column1:"",column2:"asideDemo.samples5.row1column2"},{column1:"header",column2:"asideDemo.samples5.row2column2"},{column1:"footer",column2:"asideDemo.samples5.row3column2"}]}}},notshowmeta:!0},{id:"aside6",label:"Events",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"close",column2:"asideDemo.samples6.row1column2",column3:""},{column1:"open",column2:"asideDemo.samples6.row2column2",column3:""}]}}},notshowmeta:!0}]}},"./demo/BadgeDemo.js":
/*!***************************!*\
  !*** ./demo/BadgeDemo.js ***!
  \***************************/
/*! no static exports found */function(e,n,t){"use strict";e.exports={path:"/badge",name:"badge",head:{label:"badgeDemo.label",description:"badgeDemo.description"},samples:[{id:"badge1",label:"badgeDemo.samples1.label",description:"badgeDemo.samples1.description",template:'<div class="source"><vue-row><vue-col :span="4"><vue-badge value="12"><vue-button size="small">comments</vue-button></vue-badge></vue-col><vue-col :span="4"><vue-badge :value="100" :max="99"><vue-button size="small">replies</vue-button></vue-badge></vue-col><vue-col :span="4"><vue-badge value="new"><vue-button size="small">news</vue-button></vue-badge></vue-col><vue-col :span="4"><vue-badge is-dot><vue-button size="small">info</vue-button></vue-badge></vue-col><vue-col :span="4"><vue-badge value="12"></vue-badge></vue-col></vue-row></div>',code:'<vue-badge value="12">\n  <vue-button size="small">comments</vue-button>\n</vue-badge>\n<vue-badge :value="100" :max="99">\n  <vue-button size="small">replies</vue-button>\n</vue-badge>\n<vue-badge value="new">\n  <vue-button size="small">news</vue-button>\n</vue-badge>\n<vue-badge is-dot>\n  <vue-button size="small">info</vue-button>\n</vue-badge>\n<vue-badge value="12">\n</vue-badge>'},{id:"badge2",label:"Attributes",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"value",column2:"badgeDemo.samples2.row1column2",column3:"String / Number",column4:"",column5:""},{column1:"max",column2:"badgeDemo.samples2.row2column2",column3:"Number",column4:"",column5:""},{column1:"is-dot",column2:"badgeDemo.samples2.row3column2",column3:"Boolean",column4:"",column5:"false"},{column1:"hidden",column2:"badgeDemo.samples2.row4column2",column3:"Boolean",column4:"",column5:"false"}]}}},notshowmeta:!0}]}},"./demo/BreadcrumbDemo.js":
/*!********************************!*\
  !*** ./demo/BreadcrumbDemo.js ***!
  \********************************/
/*! no static exports found */function(e,n,t){"use strict";e.exports={path:"/breadcrumb",name:"breadcrumb",head:{label:"breadcrumbDemo.label",description:"breadcrumbDemo.description"},samples:[{id:"breadcrumb1",label:"breadcrumbDemo.samples1.label",description:"breadcrumbDemo.samples1.description",template:'<div class="source"><vue-row class="margin-bottom20" type="flex" justify="center"><vue-col :span="8"><span class="demonstration">Default separator</span></vue-col><vue-col :span="14"><vue-breadcrumb class="demonstration"><vue-breadcrumb-item>Home</vue-breadcrumb-item><vue-breadcrumb-item>List</vue-breadcrumb-item><vue-breadcrumb-item>Detail</vue-breadcrumb-item></vue-breadcrumb></vue-col></vue-row><vue-row type="flex" justify="center"><vue-col :span="8"><span class="demonstration">Customized separator</span></vue-col><vue-col :span="14"><vue-breadcrumb separator="-" class="demonstration"><vue-breadcrumb-item>Home</vue-breadcrumb-item><vue-breadcrumb-item>List</vue-breadcrumb-item><vue-breadcrumb-item>Detail</vue-breadcrumb-item></vue-breadcrumb></vue-col></vue-row></div>',code:'<span class="demonstration">Default separator</span>\n<vue-breadcrumb>\n  <vue-breadcrumb-item>Home</vue-breadcrumb-item>\n  <vue-breadcrumb-item>List</vue-breadcrumb-item>\n  <vue-breadcrumb-item>Detail</vue-breadcrumb-item>\n</vue-breadcrumb>\n<span class="demonstration">Customized separator</span>\n<vue-breadcrumb separator="-">\n  <vue-breadcrumb-item>Home</vue-breadcrumb-item>\n  <vue-breadcrumb-item>List</vue-breadcrumb-item>\n  <vue-breadcrumb-item>Detail</vue-breadcrumb-item>\n</vue-breadcrumb>'},{id:"breadcrumb2",label:"Breadcrumb Attributes",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"separator",column2:"breadcrumbDemo.samples2.row1column2",column3:"String",column4:"",column5:"/"}]}}},notshowmeta:!0},{id:"breadcrumb3",label:"Breadcrumb Item Attributes",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"to",column2:"breadcrumbDemo.samples3.row1column2",column3:"String/object",column4:"",column5:""}]}}},notshowmeta:!0},{id:"breadcrumb4",label:"Breadcrumb Item Events",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"click",column2:"breadcrumbDemo.samples4.row1column2",column3:""}]}}},notshowmeta:!0}]}},"./demo/BrushJsp.js":
/*!**************************!*\
  !*** ./demo/BrushJsp.js ***!
  \**************************/
/*! no static exports found */function(e,n,t){var l=t(/*! ./SyntaxHighlighter */"./demo/SyntaxHighlighter.js"),o=t(/*! ./XRegExp */"./demo/XRegExp.js");function a(){this.regexList=[{regex:l.regexLib.multiLineDoubleQuotedString,css:"string"},{regex:l.regexLib.multiLineSingleQuotedString,css:"string"},{regex:new o("(\\&lt;|<)\\!\\[[\\w\\s]*?\\[(.|\\s)*?\\]\\](\\&gt;|>)","gm"),css:"color2"},{regex:l.regexLib.xmlComments,css:"comments"},{regex:l.regexLib.singleLineCComments,css:"comments"},{regex:l.regexLib.multiLineCComments,css:"comments"},{regex:/\s*#.*/gm,css:"preprocessor"},{regex:new RegExp(this.getKeywords("break case catch continue default delete do else false  for function if in instanceof new null return super switch this throw true try typeof var while with"),"gm"),css:"keyword"},{regex:new RegExp(function(e){return"\\b([a-z_]|)"+e.replace(/ /g,"(?=:)\\b|\\b([a-z_\\*]|\\*|)")+"(?=:)\\b"}("ascent azimuth background-attachment background-color background-image background-position background-repeat background baseline bbox border-collapse border-color border-spacing border-style border-top border-right border-bottom border-left border-top-color border-right-color border-bottom-color border-left-color border-top-style border-right-style border-bottom-style border-left-style border-top-width border-right-width border-bottom-width border-left-width border-width border bottom cap-height caption-side centerline clear clip color content counter-increment counter-reset cue-after cue-before cue cursor definition-src descent direction display elevation empty-cells float font-size-adjust font-family font-size font-stretch font-style font-variant font-weight font height left letter-spacing line-height list-style-image list-style-position list-style-type list-style margin-top margin-right margin-bottom margin-left margin marker-offset marks mathline max-height max-width min-height min-width orphans outline-color outline-style outline-width outline overflow padding-top padding-right padding-bottom padding-left padding page page-break-after page-break-before page-break-inside pause pause-after pause-before pitch pitch-range play-during position quotes right richness size slope src speak-header speak-numeral speak-punctuation speak speech-rate stemh stemv stress table-layout text-align top text-decoration text-indent text-shadow text-transform unicode-bidi unicode-range units-per-em vertical-align visibility voice-family volume white-space widows width widths word-spacing x-height z-index opacity transform border-radius stroke"),"gm"),css:"keyword"},{regex:new o("(&lt;|<)[\\s\\/\\?]*(\\w+)(?<attributes>.*?)[\\s\\/\\?]*(&gt;|>)","sg"),func:function(e,n){var t=l.Match,a=e[0],i=new o("(&lt;|<)[\\s\\/\\?]*(?<name>[:\\w-\\.]+)","xg").exec(a),u=[];if(null!=e.attributes)for(var r,m=new o("(?<name> [\\w:\\-\\.]+)\\s*=\\s*(?<value> \".*?\"|'.*?'|\\w+)","xg");null!=(r=m.exec(a));)u.push(new t(r.name,e.index+r.index,"color1")),u.push(new t(r.value,e.index+r.index+r[0].indexOf(r.value),"string"));return null!=i&&u.push(new t(i.name,e.index+i[0].indexOf(i.name),"keyword")),u}}]}a.prototype=new l.Highlighter,a.aliases=["jsp"],l.brushes.Jsp=a,e.exports=l},"./demo/ButtonDemo.js":
/*!****************************!*\
  !*** ./demo/ButtonDemo.js ***!
  \****************************/
/*! no static exports found */function(e,n,t){"use strict";e.exports={path:"/button",name:"button",head:{label:"buttonDemo.label",description:"buttonDemo.description"},samples:[{label:"buttonDemo.samples1.label",description:"buttonDemo.samples1.description",template:'<div class="source"><vue-button>{{$t("buttonDemo.defaultButton")}}</vue-button><vue-button type="primary">{{$t("buttonDemo.mainButton")}}</vue-button><vue-button type="text">{{$t("buttonDemo.textButton")}}</vue-button><vue-button circle>{{$t("buttonDemo.circleButton")}}</vue-button></div>',code:'<vue-button>{{$t("buttonDemo.defaultButton")}}</vue-button>\n<vue-button type="primary">{{$t("buttonDemo.mainButton")}}</vue-button>\n<vue-button type="text">{{$t("buttonDemo.textButton")}}</vue-button>\n<vue-button circle>{{$t("buttonDemo.circleButton")}}</vue-button>',id:"button1"},{label:"buttonDemo.samples2.label",description:"buttonDemo.samples2.description",template:'<div class="source"><vue-row class="margin-bottom20" type="flex" justify="center"><vue-col :span="6"><span class="demonstration">{{$t("buttonDemo.samples2.defaultLabel")}}</span></vue-col><vue-col :span="16"><vue-button type="success">{{$t("buttonDemo.successButton")}}</vue-button><vue-button type="warning">{{$t("buttonDemo.warningButton")}}</vue-button><vue-button type="danger">{{$t("buttonDemo.dangerButton")}}</vue-button><vue-button type="info">{{$t("buttonDemo.infoButton")}}</vue-button></vue-col></vue-row><vue-row type="flex" justify="center"><vue-col :span="6"><span class="demonstration">{{$t("buttonDemo.samples2.hoverLabel")}}</span></vue-col><vue-col :span="16"><vue-button :plain="true" type="success">{{$t("buttonDemo.successButton")}}</vue-button><vue-button :plain="true" type="warning">{{$t("buttonDemo.warningButton")}}</vue-button><vue-button :plain="true" type="danger">{{$t("buttonDemo.dangerButton")}}</vue-button><vue-button :plain="true" type="info">{{$t("buttonDemo.infoButton")}}</vue-button></vue-col></vue-row></div>',code:'<span class="demonstration">{{$t("buttonDemo.samples2.defaultLabel")}}</span>\n<vue-button type="success">{{$t("buttonDemo.successButton")}}</vue-button>\n<vue-button type="warning">{{$t("buttonDemo.warningButton")}}</vue-button>\n<vue-button type="danger">{{$t("buttonDemo.dangerButton")}}</vue-button>\n<vue-button type="info">{{$t("buttonDemo.infoButton")}}</vue-button>\n<span class="demonstration">{{$t("buttonDemo.samples2.hoverLabel")}}</span>\n<vue-button :plain="true" type="success">{{$t("buttonDemo.successButton")}}</vue-button>\n<vue-button :plain="true" type="warning">{{$t("buttonDemo.warningButton")}}</vue-button>\n<vue-button :plain="true" type="danger">{{$t("buttonDemo.dangerButton")}}</vue-button>\n<vue-button :plain="true" type="info">{{$t("buttonDemo.infoButton")}}</vue-button>',id:"button2"},{label:"buttonDemo.samples3.label",description:"buttonDemo.samples3.description",template:'<div class="source"><vue-button :plain="true" :disabled="true">{{$t("buttonDemo.defaultButton")}}</vue-button><vue-button type="primary" :disabled="true">{{$t("buttonDemo.mainButton")}}</vue-button><vue-button type="text" :disabled="true">{{$t("buttonDemo.textButton")}}</vue-button></div>',code:'<vue-button :plain="true" :disabled="true">{{$t("buttonDemo.defaultButton")}}</vue-button>\n<vue-button type="primary" :disabled="true">{{$t("buttonDemo.mainButton")}}</vue-button>\n<vue-button type="text" :disabled="true">{{$t("buttonDemo.textButton")}}</vue-button>',id:"button3"},{label:"buttonDemo.samples4.label",description:"buttonDemo.samples3.description",template:'<div class="source"><vue-button type="primary" icon="vue-icon-edit"></vue-button><vue-button type="primary" icon="vue-icon-share" circle></vue-button><vue-button type="primary" icon="vue-icon-delete2"></vue-button><vue-button type="primary" icon="vue-icon-search">Search</vue-button><vue-button type="primary">Upload<i class="vue-icon-upload vue-icon--right"></i></vue-button></div>',code:'<vue-button type="primary" icon="vue-icon-edit"></vue-button>\n<vue-button type="primary" icon="vue-icon-share" circle></vue-button>\n<vue-button type="primary" icon="vue-icon-delete2"></vue-button>\n<vue-button type="primary" icon="vue-icon-search">Search</vue-button>\n<vue-button type="primary">Upload<i class="vue-icon-upload vue-icon--right"></i></vue-button>',id:"button4"},{label:"buttonDemo.samples5.label",description:"buttonDemo.samples5.description",template:'<div class="source"><vue-row><vue-col :span="8"><vue-button-group><vue-button type="primary" icon="vue-icon-arrow-left">Page up</vue-button><vue-button type="primary">Page down<i class="vue-icon-arrow-right vue-icon--right"></i></vue-button></vue-button-group></vue-col><vue-col :span="8"><vue-button-group><vue-button type="primary" icon="vue-icon-edit"></vue-button><vue-button type="primary" icon="vue-icon-share"></vue-button><vue-button type="primary" icon="vue-icon-delete2"></vue-button></vue-button-group></vue-col></vue-row></div>',code:'<vue-button-group>\n  <vue-button type="primary" icon="vue-icon-arrow-left">Page up</vue-button>\n  <vue-button type="primary">Page down<i class="vue-icon-arrow-right vue-icon--right"></i></vue-button>\n</vue-button-group>\n<vue-button-group>\n  <vue-button type="primary" icon="vue-icon-edit"></vue-button>\n  <vue-button type="primary" icon="vue-icon-share"></vue-button>\n  <vue-button type="primary" icon="vue-icon-delete2"></vue-button>\n</vue-button-group>',id:"button5"},{label:"buttonDemo.samples6.label",description:"buttonDemo.samples6.description",template:'<div class="source"><vue-button type="primary" :loading="true">Loading</vue-button></div>',code:'<vue-button type="primary" :loading="true">Loading</vue-button>',id:"button6"},{label:"buttonDemo.samples7.label",description:"buttonDemo.samples7.description",template:'<div class="source"><vue-button type="primary" size="large">Large Button</vue-button><vue-button type="primary">Normal Button</vue-button><vue-button type="primary" size="small">Small Button</vue-button><vue-button type="primary" size="mini">Mini Button</vue-button></div>',code:'<vue-button type="primary" size="large">Large Button</vue-button>\n<vue-button type="primary">Normal Button</vue-button>\n<vue-button type="primary" size="small">Small Button</vue-button>\n<vue-button type="primary" size="mini">Mini Button</vue-button>',id:"button7"},{id:"button8",label:"Attributes",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"size",column2:"buttonDemo.samples8.row1column2",column3:"String",column4:"large,small,mini",column5:""},{column1:"type",column2:"buttonDemo.samples8.row2column2",column3:"String",column4:"primary,success,warning,danger,info,text",column5:""},{column1:"circle",column2:"buttonDemo.samples8.row3column2",column3:"Boolean",column4:"",column5:"false"},{column1:"plain",column2:"buttonDemo.samples8.row4column2",column3:"Boolean",column4:"",column5:"false"},{column1:"loading",column2:"buttonDemo.samples8.row5column2",column3:"Boolean",column4:"",column5:"false"},{column1:"disabled",column2:"buttonDemo.samples8.row6column2",column3:"Boolean",column4:"",column5:"false"},{column1:"icon",column2:"buttonDemo.samples8.row7column2",column3:"String",column4:"",column5:""},{column1:"autofocus",column2:"buttonDemo.samples8.row8column2",column3:"Boolean",column4:"",column5:"false"},{column1:"native-type",column2:"buttonDemo.samples8.row9column2",column3:"String",column4:"button,submit,reset",column5:"button"}]}}},notshowmeta:!0},{id:"button9",label:"Methods",template:'<method-table :data="tableData"></method-table>',parameter:{data:function(){return{tableData:[{column1:"focus",column2:"inputDemo.samples16.row1column2",column3:""}]}}},notshowmeta:!0}]}},"./demo/CalendarDemo.js":
/*!******************************!*\
  !*** ./demo/CalendarDemo.js ***!
  \******************************/
/*! no static exports found */function(e,n,t){"use strict";var l={path:"/calendar",name:"calendar",head:{label:"calendarDemo.label",description:"calendarDemo.description"},samples:[{id:"calendar1",label:"calendarDemo.samples1.label",description:"calendarDemo.samples1.description",template:'<div class="source"><vue-row type="flex" justify="center" :gutter="20"><vue-col :span="12"><vue-calendar v-model="date" @dayclick="clickHandle" :events="vcevents"></vue-calendar></vue-col><vue-col :span="12"><vue-note plain title="Event List" style="height:100%"><div v-for="(event, index) in noteEvents" style="width:100%" :key="index">Description: {{event.title}}<vue-divider></vue-divider></div></vue-note></vue-col></vue-row></div>',parameter:{data:function(){var e=new Date;return{date:new Date,vcevents:[{start:VueUtil.addDate(e,-5),end:VueUtil.addDate(e,-3),title:"Event 1"},{start:VueUtil.addDate(e,-1,"week"),end:VueUtil.addDate(e,-1),title:"Event 2"},{start:VueUtil.addDate(e,3),end:VueUtil.addDate(e,5),title:"Event 3"},{start:VueUtil.addDate(e,2),end:VueUtil.addDate(e,3,"week"),title:"Event 4"},{start:VueUtil.addDate(e,1),end:VueUtil.addDate(e,1,"week"),title:"Event 5"},{start:e,end:VueUtil.addDate(e,11),title:"Event 6"}],noteEvents:[]}},methods:{clickHandle:function(e,n){this.noteEvents=n}}},code:'<vue-calendar v-model="date" @dayclick="clickHandle" :events="vcevents"></vue-calendar>\n<vue-note plain title="Event List" style="height:100%">\n  <div v-for="(event, index) in noteEvents" style="width:100%" :key="index">\n    Description: {{event.title}}\n    <vue-divider></vue-divider>\n  </div>\n</vue-note>\n\n<script>\n  new Vue({\n    data: function(){\n      var toDay = new Date;\n      return {\n        date: new Date(),\n        vcevents: [{\n          start: VueUtil.addDate(toDay, -5),\n          end: VueUtil.addDate(toDay, -3),\n          title: "Event 1",\n        }, {\n          start: VueUtil.addDate(toDay, -1, "week"),\n          end: VueUtil.addDate(toDay, -1),\n          title: "Event 2"\n        }, {\n          start: VueUtil.addDate(toDay, 3),\n          end: VueUtil.addDate(toDay, 5),\n          title: "Event 3"\n        }, {\n          start: VueUtil.addDate(toDay, 2),\n          end: VueUtil.addDate(toDay, 3, "week"),\n          title: "Event 4",\n        }, {\n          start: VueUtil.addDate(toDay, 1),\n          end: VueUtil.addDate(toDay, 1, "week"),\n          title: "Event 5"\n        }, {\n          start:toDay,\n          end: VueUtil.addDate(toDay, 11),\n          title: "Event 6"\n        }],\n        noteEvents: []\n      }\n    },\n    methods: {\n      clickHandle: function(date, events) {\n        this.noteEvents = events;\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"calendar7",label:"calendarDemo.samples7.label",description:"calendarDemo.samples7.description",template:'<div class="source"><vue-row type="flex" justify="center" :gutter="20"><vue-col :span="12"><vue-calendar v-model="dates" type="dates" fix-month></vue-calendar></vue-col></div>',parameter:{data:function(){return{dates:[new Date(2019,1,2),new Date(2019,1,6),new Date(2019,1,21)]}},methods:{}},code:'<vue-calendar v-model="dates" type="dates" fix-month></vue-calendar>\n<script>\n  new Vue({\n    data: function(){\n      return {\n        date: dates: [new Date(2019, 1, 2), new Date(2019, 1, 6), new Date(2019, 1, 21)],\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"calendar6",label:"calendarDemo.samples4.label",description:"calendarDemo.samples4.description",template:'<div class="source"><vue-row type="flex" justify="center"><vue-calendar full :events="vcevents" :date-class="dateClass" :week-class="weekClass" :week-label="weekLabel" :event-limit="3" @eventclick="eventClick" @dayclick="dayClick" @moreclick="moreClick"></vue-calendar></vue-row></div>',parameter:{data:function(){var e=new Date;return{vcevents:[{start:VueUtil.addDate(e,-5),end:VueUtil.addDate(e,-3),title:"Event 1 (This is level low event)",customClass:"level-low"},{start:VueUtil.addDate(e,-1,"week"),end:VueUtil.addDate(e,-1),title:"Event 2"},{start:VueUtil.addDate(e,3),end:VueUtil.addDate(e,5),title:"Event 3"},{start:VueUtil.addDate(e,2),end:VueUtil.addDate(e,3,"week"),title:"Event 4 (This is level high event)",customClass:"level-high"},{start:VueUtil.addDate(e,1),end:VueUtil.addDate(e,1,"week"),title:"Event 5"},{start:e,end:VueUtil.addDate(e,11),title:"Event 6"}],dateClass:[{date:VueUtil.addDate(e,5),customClass:"day-on"}],weekClass:[{week:0,customClass:"day-off"},{week:6,customClass:"day-off"}],weekLabel:{sun:"星期日",mon:"vue.datepicker.weeks.mon",tue:"星期二",wed:"星期三",thu:"星期四",fri:"星期五",sat:"星期六"}}},methods:{eventClick:function(e,n){this.$notify({title:"Event Click"}),this.$notify({title:"Event: "+e.title}),console.log(n)},moreClick:function(e,n,t){this.$notify({title:"More Click"}),this.$notify({title:"Date: "+VueUtil.formatDate(e)}),this.$notify({title:"Event: ["+n.map(function(e){return e.title}).join(", ")+"]"}),console.log(t)},dayClick:function(e,n,t){this.$notify({title:"Day Click"}),this.$notify({title:"Date: "+VueUtil.formatDate(e)}),this.$notify({title:"Event: ["+n.map(function(e){return e.title}).join(", ")+"]"}),console.log(t)}}},code:'<vue-calendar full :events="vcevents" :event-limit="3" :date-class="dateClass" :week-class="weekClass" :week-label="weekLabel" @eventclick="eventClick" @dayclick="dayClick" @moreclick="moreClick">\n</vue-calendar>\n\n<style>\n  .level-high {\n    background-color: #fbdddd;\n  }\n  .level-low {\n    background-color: #e1f3d8;\n  }\n  .day-off {\n    background-color: #fdfdfd;\n  }\n  .day-on {\n    background-color: #dfdfdf;\n  }\n</style>\n\n<script>\n  new Vue({\n    data: function(){\n      var toDay = new Date;\n      return {\n        vcevents: [{\n          start: VueUtil.addDate(toDay, -5),\n          end: VueUtil.addDate(toDay, -3),\n          title: "Event 1 (This is level low event)",\n          customClass: "level-low"\n        }, {\n          start: VueUtil.addDate(toDay, -1, "week"),\n          end: VueUtil.addDate(toDay, -1),\n          title: "Event 2"\n        }, {\n          start: VueUtil.addDate(toDay, 3),\n          end: VueUtil.addDate(toDay, 5),\n          title: "Event 3"\n        }, {\n          start: VueUtil.addDate(toDay, 2),\n          end: VueUtil.addDate(toDay, 3, "week"),\n          title: "Event 4 (This is level high event)",\n          customClass: "level-high"\n        }, {\n          start: VueUtil.addDate(toDay, 1),\n          end: VueUtil.addDate(toDay, 1, "week"),\n          title: "Event 5"\n        }, {\n          start:toDay,\n          end: VueUtil.addDate(toDay, 11),\n          title: "Event 6"\n        }],\n        dateClass: [{\n          date: VueUtil.addDate(toDay, 5),\n          customClass: "day-on"\n        }],\n        weekClass: [{\n          week: 0,\n          customClass: "day-off"\n        }, {\n          week: 6,\n          customClass: "day-off"\n        }],\n        weekLabel: {\n          sun: "星期日",\n          mon: "vue.datepicker.weeks.mon",\n          tue: "星期二",\n          wed: "星期三",\n          thu: "星期四",\n          fri: "星期五",\n          sat: "星期六" \n        }\n      }\n    },\n    methods: {\n      eventClick: function(event, jsEvents) {\n        this.$notify({title: "Event Click"});\n        this.$notify({title: "Event: " + event.title});\n        console.log(jsEvents);\n      },\n      moreClick: function(date, events, jsEvents) {\n        this.$notify({title: "More Click"});\n        this.$notify({title: "Date: " + VueUtil.formatDate(date)});\n        this.$notify({title: "Event: [" + events.map(function(event){return event.title}).join(", ") + "]"});\n        console.log(jsEvents);\n      },\n      dayClick: function(date, events, jsEvents) {\n        this.$notify({title: "Day Click"});\n        this.$notify({title: "Date: " + VueUtil.formatDate(date)});\n        this.$notify({title: "Event: [" + events.map(function(event){return event.title}).join(", ") + "]"});\n        console.log(jsEvents);\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"calendar2",label:" Attributes",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"full",column2:"calendarDemo.samples2.row4column2",column3:"Boolean",column4:"",column5:"false"},{column1:"events",column2:"calendarDemo.samples2.row1column2",column3:"Array",column4:"",column5:""},{column1:"event-limit",column2:"calendarDemo.samples2.row2column2",column3:"Number",column4:"",column5:"2"},{column1:"show-more",column2:"calendarDemo.samples2.row3column2",column3:"Boolean",column4:"",column5:"true"},{column1:"date-class",column2:"calendarDemo.samples2.row5column2",column3:"Array",column4:"",column5:""},{column1:"week-class",column2:"calendarDemo.samples2.row6column2",column3:"Array",column4:"",column5:""},{column1:"week-label",column2:"calendarDemo.samples2.row7column2",column3:"Object",column4:"",column5:""},{column1:"fix-month",column2:"calendarDemo.samples2.row8column2",column3:"boolean",column4:"",column5:"false"},{column1:"type",column2:"calendarDemo.samples2.row9column2",column3:"string",column4:"date/dates/month/week",column5:"date"}]}}},notshowmeta:!0},{id:"calendar3",label:"Events",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"dayclick",column2:"calendarDemo.samples3.row1column2",column3:"(date: Date, events: Array, jsEvent: $event)"},{column1:"eventclick",column2:"calendarDemo.samples3.row2column2",column3:"(event: Object, jsEvent: $event)"},{column1:"moreclick",column2:"calendarDemo.samples3.row3column2",column3:"(date: Date, events: Array, jsEvent: $event)"}]}}},notshowmeta:!0},{id:"calendar4",label:"Slots",template:'<slot-table :data="tableData"></slot-table>',parameter:{data:function(){return{tableData:[{column1:"headerLeft",column2:"calendarDemo.samples4.row1column2"},{column1:"headerRight",column2:"calendarDemo.samples4.row2column2"}]}}},notshowmeta:!0},{id:"calendar5",label:"Methods",template:'<method-table :data="tableData"></method-table>',parameter:{data:function(){return{tableData:[{column1:"changeToNow",column2:"calendarDemo.samples5.row1column2",column3:""},{column1:"toDate",column2:"calendarDemo.samples5.row2column2",column3:""}]}}},notshowmeta:!0}]};e.exports=l},"./demo/CardDemo.js":
/*!**************************!*\
  !*** ./demo/CardDemo.js ***!
  \**************************/
/*! no static exports found */function(e,n,t){"use strict";e.exports={path:"/card",name:"card",head:{label:"cardDemo.label",description:"cardDemo.description"},samples:[{id:"card1",label:"cardDemo.samples1.label",description:"cardDemo.samples1.description",template:'<div class="source"><vue-card><div slot="header"><span style="line-height: 36px;">Card name</span><vue-button style="float: right;" type="primary">Operation button</vue-button></div><div v-for="o in 4" :key="o">{{"List item  " + o }}</div></vue-card></div>',code:'<vue-card>\n  <div slot="header" >\n    <span style="line-height: 36px;">Card name</span>\n    <vue-button style="float: right;" type="primary">Operation button</vue-button>\n  </div>\n  <div v-for="o in 4" :key="o">\n    {{"List item " + o }}\n  </div>\n</vue-card>'},{id:"card2",label:"cardDemo.samples2.label",description:"cardDemo.samples2.description",template:'<div class="source"><vue-card :body-style="{padding: \'18px\'}"><div v-for="o in 4" :key="o" style="padding: 18px 0;">{{"List item  " + o }}</div></vue-card></div>',code:'<vue-card :body-style="{padding: \'18px\'}">\n  <div v-for="o in 4" :key="o" style="padding: 18px 0;">\n    {{"List item " + o }}\n  </div>\n</vue-card>'},{id:"card4",label:"cardDemo.samples4.label",description:"cardDemo.samples4.description",template:'<div class="source"><vue-row :gutter="20"><vue-col :span="8"><vue-card  shadow="always">always</vue-card></vue-col><vue-col :span="8"><vue-card>hover</vue-card></vue-col><vue-col :span="8"><vue-card shadow="never">never</vue-card></vue-col></vue-row></div>',code:'<vue-card shadow="always">always</vue-card>\n<vue-card>hover</vue-card>\n<vue-card shadow="never">never</vue-card>'},{id:"card3",label:"Attributes",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"header",column2:"cardDemo.samples3.row1column2",column3:"String",column4:"",column5:""},{column1:"body-style",column2:"cardDemo.samples3.row2column2",column3:"Object",column4:"",column5:"{padding: '20px'}"},{column1:"shadow",column2:"cardDemo.samples3.row3column2",column3:"String",column4:"always, never",column5:"hover"}]}}},notshowmeta:!0}]}},"./demo/CarouselDemo.js":
/*!******************************!*\
  !*** ./demo/CarouselDemo.js ***!
  \******************************/
/*! no static exports found */function(e,n,t){"use strict";e.exports={path:"/carousel",name:"carousel",head:{label:"carouselDemo.label",description:"carouselDemo.description"},samples:[{id:"carousel1",label:"carouselDemo.samples1.label",description:"carouselDemo.samples1.description",template:'<div class="source"><vue-row class="margin-bottom20" type="flex" justify="center"><vue-col :span="6"><span class="demonstration" style="position: relative;top: 60px;">Hover Indicator</span></vue-col><vue-col :span="16"><vue-carousel height="150px"><vue-carousel-item v-for="item in 4" :key="item"><h3>{{ item }}</h3></vue-carousel-item></vue-carousel></vue-col></vue-row><vue-row type="flex" justify="center"><vue-col :span="6"><span class="demonstration" style="position: relative;top: 60px;">Click Indicator</span></vue-col><vue-col :span="16"><vue-carousel type="card" trigger="click" height="150px"><vue-carousel-item v-for="item in 4" :key="item"><h3>{{ item }}</h3></vue-carousel-item></vue-carousel></vue-col></vue-row></div>',code:'<span class="demonstration">Hover Indicator</span>\n<vue-carousel height="150px">\n  <vue-carousel-item v-for="item in 4">\n    <h3>{{ item }}</h3>\n  </vue-carousel-item>\n</vue-carousel>\n<span class="demonstration">Click Indicator</span>\n<vue-carousel type="card" trigger="click" height="150px">\n  <vue-carousel-item v-for="item in 4">\n    <h3>{{ item }}</h3>\n  </vue-carousel-item>\n</vue-carousel>'},{id:"carousel2",label:"carouselDemo.samples2.label",description:"carouselDemo.samples2.description",template:'<div class="source"><vue-carousel indicator-position="outside"><vue-carousel-item v-for="item in 4" :key="item"><h3>{{ item }}</h3></vue-carousel-item></vue-carousel></div>',code:'<vue-carousel indicator-position="outside">\n  <vue-carousel-item v-for="item in 4">\n    <h3>{{ item }}</h3>\n  </vue-carousel-item>\n</vue-carousel>'},{id:"carousel3",label:"carouselDemo.samples3.label",description:"carouselDemo.samples3.description",template:'<div class="source"><vue-carousel arrow="always"><vue-carousel-item v-for="item in 4" :key="item"><h3>{{ item }}</h3></vue-carousel-item></vue-carousel></div>',code:'<vue-carousel arrow="always">\n  <vue-carousel-item v-for="item in 4">\n    <h3>{{ item }}</h3>\n  </vue-carousel-item>\n</vue-carousel>'},{id:"carousel4",label:"Carousel Attributes",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"height",column2:"carouselDemo.samples4.row1column2",column3:"String",column4:"",column5:""},{column1:"initial-index",column2:"carouselDemo.samples4.row2column2",column3:"Number",column4:"",column5:"0"},{column1:"trigger",column2:"carouselDemo.samples4.row3column2",column3:"String",column4:"click",column5:""},{column1:"autoplay",column2:"carouselDemo.samples4.row4column2",column3:"Boolean",column4:"",column5:"true"},{column1:"interval",column2:"carouselDemo.samples4.row5column2",column3:"Number",column4:"",column5:"3000"},{column1:"indicator-position",column2:"carouselDemo.samples4.row6column2",column3:"String",column4:"outside, none",column5:""},{column1:"arrow",column2:"carouselDemo.samples4.row7column2",column3:"String",column4:"always, hover, never",column5:"hover"},{column1:"type",column2:"carouselDemo.samples4.row8column2",column3:"String",column4:"card",column5:""},{column1:"hover-stop",column2:"carouselDemo.samples4.row9column2",column3:"Boolean",column4:"",column5:"true"}]}}},notshowmeta:!0},{id:"carousel5",label:"Carousel Events",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"change",column2:"carouselDemo.samples5.row1column2",column3:"carouselDemo.samples5.row1column3"}]}}},notshowmeta:!0},{id:"carousel6",label:"Carousel Methods",template:'<method-table :data="tableData"></method-table>',parameter:{data:function(){return{tableData:[{column1:"setActiveItem",column2:"carouselDemo.samples6.row1column2",column3:"carouselDemo.samples6.row1column3"},{column1:"prev",column2:"carouselDemo.samples6.row2column2",column3:""},{column1:"next",column2:"carouselDemo.samples6.row3column2",column3:""}]}}},notshowmeta:!0},{id:"carousel7",label:"Carousel Item Attributes",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"name",column2:"carouselDemo.samples7.row1column2",column3:"String",column4:"",column5:""}]}}},notshowmeta:!0}]}},"./demo/CascaderDemo.js":
/*!******************************!*\
  !*** ./demo/CascaderDemo.js ***!
  \******************************/
/*! no static exports found */function(e,n,t){"use strict";var l={value:"guide",label:"Guide",children:[{value:"disciplines",label:"Disciplines",children:[{value:"consistency",label:"Consistency"},{value:"feedback",label:"Feedback"},{value:"efficiency",label:"Efficiency"},{value:"controllability",label:"Controllability"}]},{value:"navigation",label:"Navigation",children:[{value:"side nav",label:"Side Navigation"},{value:"top nav",label:"Top Navigation"}]}]},o={value:"component",label:"Component",children:[{value:"basic",label:"Basic",children:[{value:"layout",label:"Layout"},{value:"icon",label:"Icon"},{value:"button",label:"Button"}]},{value:"form",label:"Form",children:[{value:"radio",label:"Radio"},{value:"checkbox",label:"Checkbox"},{value:"input",label:"Input"},{value:"select",label:"Select"},{value:"cascader",label:"Cascader"},{value:"switch",label:"Switch"},{value:"slider",label:"Slider"},{value:"time-picker",label:"TimePicker"},{value:"date-picker",label:"DatePicker"},{value:"datetime-picker",label:"DateTimePicker"},{value:"upload",label:"Upload"},{value:"rate",label:"Rate"},{value:"form",label:"Form"}]},{value:"data",label:"Data",children:[{value:"table",label:"Table"},{value:"tag",label:"Tag"},{value:"progress",label:"Progress"},{value:"tree",label:"Tree"},{value:"pagination",label:"Pagination"},{value:"badge",label:"Badge"}]},{value:"notice",label:"Notice",children:[{value:"alert",label:"Alert"},{value:"loading",label:"Loading"},{value:"message-box",label:"MessageBox"},{value:"notification",label:"Notification"}]},{value:"navigation",label:"Navigation",children:[{value:"menu",label:"NavMenu"},{value:"tabs",label:"Tabs"},{value:"breadcrumb",label:"Breadcrumb"},{value:"dropdown",label:"Dropdown"},{value:"steps",label:"Steps"}]},{value:"others",label:"Others",children:[{value:"dialog",label:"Dialog"},{value:"tooltip",label:"Tooltip"},{value:"popover",label:"Popover"},{value:"card",label:"Card"},{value:"carousel",label:"Carousel"},{value:"collapse",label:"Collapse"}]}]},a={value:"resource",label:"Resource",children:[{value:"axure",label:"Axure Components"},{value:"sketch",label:"Sketch Templates"},{value:"docs",label:"Design Documentation"}]},i=[],u=[];i.push(l),i.push(o),i.push(a),u.push(VueUtil.merge({},l,{disabled:!0})),u.push(o),u.push(a);var r='        options: [{\n          value: "guide",\n          label: "Guide",\n',m='          children: [{\n            value: "disciplines",\n            label: "Disciplines",\n            children: [{\n              value: "consistency",\n              label: "Consistency"\n            }, {\n              value: "feedback",\n              label: "Feedback"\n            }, {\n              value: "efficiency",\n              label: "Efficiency"\n            }, {\n              value: "controllability",\n              label: "Controllability"\n            }]\n          }, {\n            value: "navigation",\n            label: "Navigation",\n            children: [{\n              value: "side nav",\n              label: "Side Navigation"\n            }, {\n              value: "top nav",\n              label: "Top Navigation"\n            }]\n          }]\n        }, {\n          value: "component",\n          label: "Component",\n          children: [{\n            value: "basic",\n            label: "Basic",\n            children: [{\n              value: "layout",\n              label: "Layout"\n            }, {\n              value: "icon",\n              label: "Icon"\n            }, {\n              value: "button",\n              label: "Button"\n            }]\n          }, {\n            value: "form",\n            label: "Form",\n            children: [{\n              value: "radio",\n              label: "Radio"\n            }, {\n              value: "checkbox",\n              label: "Checkbox"\n            }, {\n              value: "input",\n              label: "Input"\n            }, {\n              value: "select",\n              label: "Select"\n            }, {\n              value: "cascader",\n              label: "Cascader"\n            }, {\n              value: "switch",\n              label: "Switch"\n            }, {\n              value: "slider",\n              label: "Slider"\n            }, {\n              value: "time-picker",\n              label: "TimePicker"\n            }, {\n              value: "date-picker",\n              label: "DatePicker"\n            }, {\n              value: "datetime-picker",\n              label: "DateTimePicker"\n            }, {\n              value: "upload",\n              label: "Upload"\n            }, {\n              value: "rate",\n              label: "Rate"\n            }, {\n              value: "form",\n              label: "Form"\n            }]\n          }, {\n            value: "data",\n            label: "Data",\n            children: [{\n              value: "table",\n              label: "Table"\n            }, {\n              value: "tag",\n              label: "Tag"\n            }, {\n              value: "progress",\n              label: "Progress"\n            }, {\n              value: "tree",\n              label: "Tree"\n            }, {\n              value: "pagination",\n              label: "Pagination"\n            }, {\n              value: "badge",\n              label: "Badge"\n            }]\n          }, {\n            value: "notice",\n            label: "Notice",\n            children: [{\n              value: "alert",\n              label: "Alert"\n            }, {\n              value: "loading",\n              label: "Loading"\n            }, {\n              value: "message-box",\n              label: "MessageBox"\n            }, {\n              value: "notification",\n              label: "Notification"\n            }]\n          }, {\n            value: "navigation",\n            label: "Navigation",\n            children: [{\n              value: "menu",\n              label: "NavMenu"\n            }, {\n              value: "tabs",\n              label: "Tabs"\n            }, {\n              value: "breadcrumb",\n              label: "Breadcrumb"\n            }, {\n              value: "dropdown",\n              label: "Dropdown"\n            }, {\n              value: "steps",\n              label: "Steps"\n            }]\n          }, {\n            value: "others",\n            label: "Others",\n            children: [{\n              value: "dialog",\n              label: "Dialog"\n            }, {\n              value: "tooltip",\n              label: "Tooltip"\n            }, {\n              value: "popover",\n              label: "Popover"\n            }, {\n              value: "card",\n              label: "Card"\n            }, {\n              value: "carousel",\n              label: "Carousel"\n            }, {\n              value: "collapse",\n              label: "Collapse"\n            }]\n          }]\n        }, {\n          value: "resource",\n          label: "Resource",\n          children: [{\n            value: "axure",\n            label: "Axure Components"\n          }, {\n            value: "sketch",\n            label: "Sketch Templates"\n          }, {\n            value: "docs",\n            label: "Design Documentation"\n          }]\n        }],\n',c=r+m,s={path:"/cascader",name:"cascader",head:{label:"cascaderDemo.label",description:"cascaderDemo.description"},samples:[{id:"cascader1",label:"cascaderDemo.samples1.label",description:"cascaderDemo.samples1.description",template:'<div class="source"><vue-row class="margin-bottom20" type="flex" justify="center"><vue-col :span="6"><span class="demonstration">{{$t(\'cascaderDemo.samples1.clickLabel\')}}</span></vue-col><vue-col :span="16"><vue-cascader :options="options" v-model="selectedOptions1" @change="handleChange"></vue-cascader></vue-col></vue-row><vue-row type="flex" justify="center"><vue-col :span="6"><span class="demonstration">{{$t(\'cascaderDemo.samples1.hoverLabel\')}}</span></vue-col><vue-col :span="16"><vue-cascader expand-trigger="hover" :options="options" v-model="selectedOptions2" @change="handleChange"></vue-cascader></vue-col></vue-row></div>',parameter:{data:function(){return{options:i,selectedOptions1:[],selectedOptions2:[]}},methods:{handleChange:function(e){this.$notify({title:e.toString()})}}},code:'<span class="demonstration">{{$t(\'cascaderDemo.samples1.clickLabel\')}}</span>\n<vue-cascader :options="options" v-model="selectedOptions1" @change="handleChange"></vue-cascader>\n<span class="demonstration">{{$t(\'cascaderDemo.samples1.hoverLabel\')}}</span>\n<vue-cascader expand-trigger="hover" :options="options" v-model="selectedOptions2" @change="handleChange"></vue-cascader>\n\n<script>\n  new Vue({\n    data: function(){\n      return {\n'+c+"        selectedOptions1: [],\n        selectedOptions2: []\n      }\n    },\n    methods: {\n      handleChange: function(value) {\n        this.$notify({title: value.toString()});\n      }\n    }\n  }).$mount();\n<\/script>"},{id:"cascader2",label:"cascaderDemo.samples2.label",description:"cascaderDemo.samples2.description",template:'<div class="source"><vue-cascader :options="options" v-model="selectedOptions1"></vue-cascader></div>',parameter:{data:function(){return{options:u,selectedOptions1:[]}}},code:'<vue-cascader :options="options" v-model="selectedOptions1"></vue-cascader>\n\n<script>\n  new Vue({\n    data: function(){\n      return {\n        options: [{\n          value: "guide",\n          label: "Guide",\n          disabled: true,\n          children: [{\n            value: "disciplines",\n            label: "Disciplines",\n            children: [{\n              value: "consistency",\n              label: "Consistency"\n            }, {\n              value: "feedback",\n              label: "Feedback"\n            }, {\n              value: "efficiency",\n              label: "Efficiency"\n            }, {\n              value: "controllability",\n              label: "Controllability"\n            }]\n          }, {\n            value: "navigation",\n            label: "Navigation",\n            children: [{\n              value: "side nav",\n              label: "Side Navigation"\n            }, {\n              value: "top nav",\n              label: "Top Navigation"\n            }]\n          }]\n        }, {\n          value: "component",\n          label: "Component",\n          children: [{\n            value: "basic",\n            label: "Basic",\n            children: [{\n              value: "layout",\n              label: "Layout"\n            }, {\n              value: "icon",\n              label: "Icon"\n            }, {\n              value: "button",\n              label: "Button"\n            }]\n          }, {\n            value: "form",\n            label: "Form",\n            children: [{\n              value: "radio",\n              label: "Radio"\n            }, {\n              value: "checkbox",\n              label: "Checkbox"\n            }, {\n              value: "input",\n              label: "Input"\n            }, {\n              value: "select",\n              label: "Select"\n            }, {\n              value: "cascader",\n              label: "Cascader"\n            }, {\n              value: "switch",\n              label: "Switch"\n            }, {\n              value: "slider",\n              label: "Slider"\n            }, {\n              value: "time-picker",\n              label: "TimePicker"\n            }, {\n              value: "date-picker",\n              label: "DatePicker"\n            }, {\n              value: "datetime-picker",\n              label: "DateTimePicker"\n            }, {\n              value: "upload",\n              label: "Upload"\n            }, {\n              value: "rate",\n              label: "Rate"\n            }, {\n              value: "form",\n              label: "Form"\n            }]\n          }, {\n            value: "data",\n            label: "Data",\n            children: [{\n              value: "table",\n              label: "Table"\n            }, {\n              value: "tag",\n              label: "Tag"\n            }, {\n              value: "progress",\n              label: "Progress"\n            }, {\n              value: "tree",\n              label: "Tree"\n            }, {\n              value: "pagination",\n              label: "Pagination"\n            }, {\n              value: "badge",\n              label: "Badge"\n            }]\n          }, {\n            value: "notice",\n            label: "Notice",\n            children: [{\n              value: "alert",\n              label: "Alert"\n            }, {\n              value: "loading",\n              label: "Loading"\n            }, {\n              value: "message-box",\n              label: "MessageBox"\n            }, {\n              value: "notification",\n              label: "Notification"\n            }]\n          }, {\n            value: "navigation",\n            label: "Navigation",\n            children: [{\n              value: "menu",\n              label: "NavMenu"\n            }, {\n              value: "tabs",\n              label: "Tabs"\n            }, {\n              value: "breadcrumb",\n              label: "Breadcrumb"\n            }, {\n              value: "dropdown",\n              label: "Dropdown"\n            }, {\n              value: "steps",\n              label: "Steps"\n            }]\n          }, {\n            value: "others",\n            label: "Others",\n            children: [{\n              value: "dialog",\n              label: "Dialog"\n            }, {\n              value: "tooltip",\n              label: "Tooltip"\n            }, {\n              value: "popover",\n              label: "Popover"\n            }, {\n              value: "card",\n              label: "Card"\n            }, {\n              value: "carousel",\n              label: "Carousel"\n            }, {\n              value: "collapse",\n              label: "Collapse"\n            }]\n          }]\n        }, {\n          value: "resource",\n          label: "Resource",\n          children: [{\n            value: "axure",\n            label: "Axure Components"\n          }, {\n            value: "sketch",\n            label: "Sketch Templates"\n          }, {\n            value: "docs",\n            label: "Design Documentation"\n          }]\n        }],\n        selectedOptions1: []\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"cascader3",label:"cascaderDemo.samples3.label",description:"cascaderDemo.samples3.description",template:'<div class="source"><vue-cascader :options="options" :show-all-levels="false" v-model="selectedOptions1"></vue-cascader></div>',parameter:{data:function(){return{options:i,selectedOptions1:[]}}},code:'<vue-cascader :options="options" :show-all-levels="false" v-model="selectedOptions1"></vue-cascader>\n\n<script>\n  new Vue({\n    data: function(){\n      return {\n'+c+"        selectedOptions1: []\n      }\n    }\n  }).$mount();\n<\/script>"},{id:"cascader4",label:"cascaderDemo.samples4.label",description:"cascaderDemo.samples4.description",template:'<div class="source"><vue-cascader :options="options" v-model="selectedOptions1"></vue-cascader></div>',parameter:{data:function(){return{options:i,selectedOptions1:["component","data","tag"]}}},code:'<vue-cascader :options="options" v-model="selectedOptions1"></vue-cascader>\n\n<script>\n  new Vue({\n    data: function(){\n      return {\n'+c+'        selectedOptions1: ["component", "data", "tag"]\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"cascader5",label:"cascaderDemo.samples5.label",description:"cascaderDemo.samples5.description",template:'<div class="source"><vue-cascader :options="options" v-model="selectedOptions1" change-on-select></vue-cascader></div>',parameter:{data:function(){return{options:i,selectedOptions1:[]}}},code:'<vue-cascader :options="options" v-model="selectedOptions1" change-on-select></vue-cascader>\n\n<script>\n  new Vue({\n    data: function(){\n      return {\n'+c+"        selectedOptions1: []\n      }\n    }\n  }).$mount();\n<\/script>"},{id:"cascader6",label:"cascaderDemo.samples6.label",description:"cascaderDemo.samples6.description",template:'<div class="source"><vue-cascader clearable :options="options" v-model="selectedOptions1" @active-item-change="handleItemChange" :props="props"></vue-cascader></div>',parameter:{data:function(){return{options:[{label:"California",cities:[]},{label:"Florida",cities:[]}],props:{value:"label",children:"cities"},selectedOptions1:[]}},methods:{handleItemChange:function(e){var n=this;this.$notify({title:"active item: "+e}),setTimeout(function(){e.indexOf("California")>-1&&!n.options[0].cities.length?n.options[0].cities=[{label:"Los Angeles"}]:e.indexOf("Florida")>-1&&!n.options[1].cities.length&&(n.options[1].cities=[{label:"Orlando"}])},300)}}},code:'<vue-cascader clearable :options="options" v-model="selectedOptions1" @active-item-change="handleItemChange" :props="props"></vue-cascader>\n\n<script>\n  new Vue({\n    data: function(){\n      return {\n        selectedOptions1: [],\n        options: [{\n          label: "Guide",\n          cities: []\n        }, {\n          label: "Florida",\n          cities: []\n        }],\n        props: {\n          value: "label",\n          children: "cities"\n        }\n      }\n    },\n    methods: {\n      handleItemChange: function (val) {\n        var self = this;\n        this.$notify({title: "active item: "+val});\n        setTimeout(function () {\n          if (val.indexOf("California") > -1 && !self.options[0].cities.length) {\n            self.options[0].cities = [{label: "Los Angeles"}];\n          } else if (val.indexOf("Florida") > -1 && !self.options[1].cities.length) {\n            self.options[1].cities = [{label: "Orlando"}];\n          }\n        }, 300);\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"cascader7",label:"cascaderDemo.samples7.label",description:"cascaderDemo.samples7.description",template:'<div class="source"><vue-row class="margin-bottom20" type="flex" justify="center"><vue-col :span="6"><span class="demonstration">{{$t(\'cascaderDemo.samples7.label1\')}}</span></vue-col><vue-col :span="16"><vue-cascader :options="options" v-model="selectedOptions1" filterable :placeholder="$t(\'cascaderDemo.samples7.placeholderLabel\')"></vue-cascader></vue-col></vue-row><vue-row type="flex" justify="center"><vue-col :span="6"><span class="demonstration">{{$t(\'cascaderDemo.samples7.label2\')}}</span></vue-col><vue-col :span="16"><vue-cascader expand-trigger="hover" :options="options" v-model="selectedOptions2" filterable change-on-select :placeholder="$t(\'cascaderDemo.samples7.placeholderLabel\')"></vue-cascader></vue-col></vue-row></div>',parameter:{data:function(){return{options:i,selectedOptions1:[],selectedOptions2:[]}}},code:'<span class="demonstration">{{$t(\'cascaderDemo.samples7.label1\')}}</span>\n<vue-cascader :options="options" filterable v-model="selectedOptions1" :placeholder="$t(\'cascaderDemo.samples7.placeholderLabel\')"></vue-cascader>\n<span class="demonstration">{{$t(\'cascaderDemo.samples7.label2\')}}</span>\n<vue-cascader expand-trigger="hover" :options="options" filterable change-on-select v-model="selectedOptions2" :placeholder="$t(\'cascaderDemo.samples7.placeholderLabel\')"></vue-cascader>\n\n<script>\n  new Vue({\n    data: function(){\n      return {\n'+c+"        selectedOptions1: [],\n        selectedOptions2: []\n      }\n    }\n  }).$mount();\n<\/script>"},{id:"cascader8",label:"Attributes",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"options",column2:"cascaderDemo.samples8.row1column2",column3:"Array",column4:"",column5:""},{column1:"props",column2:"cascaderDemo.samples8.row2column2",column3:"Object",column4:"",column5:""},{column1:"value",column2:"cascaderDemo.samples8.row3column2",column3:"Array",column4:"",column5:""},{column1:"popper-class",column2:"cascaderDemo.samples8.row4column2",column3:"String",column4:"",column5:""},{column1:"placeholder",column2:"cascaderDemo.samples8.row5column2",column3:"String",column4:"",column5:"vue.cascader.placeholder"},{column1:"disabled",column2:"cascaderDemo.samples8.row6column2",column3:"Boolean",column4:"",column5:"false"},{column1:"clearable",column2:"cascaderDemo.samples8.row7column2",column3:"Boolean",column4:"",column5:"false"},{column1:"expand-trigger",column2:"cascaderDemo.samples8.row8column2",column3:"String",column4:"click, hover",column5:"click"},{column1:"show-all-levels",column2:"cascaderDemo.samples8.row9column2",column3:"Boolean",column4:"",column5:"true"},{column1:"filterable",column2:"cascaderDemo.samples8.row10column2",column3:"Boolean",column4:"",column5:"false"},{column1:"change-on-select",column2:"cascaderDemo.samples8.row12column2",column3:"Boolean",column4:"",column5:"false"},{column1:"size",column2:"cascaderDemo.samples8.row13column2",column3:"String",column4:"large, small, mini",column5:""},{column1:"text-align",column2:"inputDemo.samples10.row22column2",column3:"String",column4:"center, right",column5:""},{column1:"autofocus",column2:"inputDemo.samples10.row19column2",column3:"Boolean",column4:"",column5:"false"},{column1:"popperClass",column2:"cascaderDemo.samples11.row1column2",column3:"String",column4:"",column5:""},{column1:"loading",column2:"cascaderDemo.samples11.row2column2",column3:"Boolean",column4:"",column5:"false"},{column1:"title",column2:"cascaderDemo.samples11.row3column2",column3:"String",column4:"",column5:""},{column1:"confirm-button-text",column2:"cascaderDemo.samples11.row4column2",column3:"String",column4:"",column5:"''"},{column1:"cancel-button-text",column2:"cascaderDemo.samples11.row4column3",column3:"String",column4:"",column5:"''"},{column1:"toolbar-position",column2:"cascaderDemo.samples11.row5column2",column3:"String",column4:"",column5:"top"},{column1:"allow-html",column2:"cascaderDemo.samples11.row6column2",column3:"Boolean",column4:"",column5:"true"},{column1:"item-height",column2:"cascaderDemo.samples11.row7column2",column3:"String | Number",column4:"",column5:""},{column1:"visible-item-count",column2:"cascaderDemo.samples11.row8column2",column3:"Number",column4:"",column5:"5"},{column1:"swipe-duration",column2:"cascaderDemo.samples11.row9column2",column3:"String | Number",column4:"",column5:"1000"}]}}},notshowmeta:!0},{id:"cascader9",label:"Props",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"value",column2:"cascaderDemo.samples9.row1column2",column3:"String",column4:"",column5:""},{column1:"label",column2:"cascaderDemo.samples9.row2column2",column3:"String",column4:"",column5:""},{column1:"children",column2:"cascaderDemo.samples9.row3column2",column3:"String",column4:"",column5:""},{column1:"disabled",column2:"cascaderDemo.samples9.row4column2",column3:"String",column4:"",column5:""},{column1:"before-filter",column2:"cascaderDemo.samples9.row5column2",column3:"Function(value)",column4:"",column5:""}]}}},notshowmeta:!0},{id:"cascader10",label:"Events",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"change",column2:"cascaderDemo.samples10.row1column2",column3:"cascaderDemo.samples10.row1column3"},{column1:"active-item-change",column2:"cascaderDemo.samples10.row2column2",column3:"cascaderDemo.samples10.row2column3"},{column1:"confirm",column2:"cascaderDemo.samples11.row10column2",column3:"cascaderDemo.samples11.row10column3"},{column1:"cancel",column2:"cascaderDemo.samples11.row11column2",column3:"cascaderDemo.samples11.row10column3"}]}}},notshowmeta:!0},{id:"cascader11",label:"Methods",template:'<method-table :data="tableData"></method-table>',parameter:{data:function(){return{tableData:[{column1:"focus",column2:"inputDemo.samples16.row1column2",column3:""}]}}},notshowmeta:!0}]};e.exports=s},"./demo/ChangeLog.js":
/*!***************************!*\
  !*** ./demo/ChangeLog.js ***!
  \***************************/
/*! no static exports found */function(e,n,t){"use strict";e.exports={template:'<div class="content"><h2>更新日志</h2><div style="margin:35px 0 0 60px"><vue-steps direction="vertical"><vue-step class="chang-log-step" v-for="(step, index) in steps" :key="index" icon="vue-icon-step" status="process"><span slot="title">{{step.label}}</span><ul v-for="(info, index) in step.description" :key="index" style="padding-left:20px;"><li>{{info}}</li></ul></vue-step></vue-steps></div></div>',data:function(){return{steps:[{label:"1.6.8 (2020-07-22)",description:["XTable: 全新Grid表格控件","Table: 去除，改为特殊需要时特别引入table.js","图片预览: 加强列表显示","移动控件: 追加大量移动控件","修复问题，所有控件自适应移动端显示效果"]},{label:"1.1.3 (2019-07-12)",description:["Calendar: 支持v-model绑定，日期多选，可隐藏切换月按钮，支持month，week，date等类型",'Autocomplate: 修复trigger-on-focus="false"时，下拉框不能正常弹出问题',"Autocomplate: 修复下拉框不能正常关闭问题","Table: sortMethod添加两个新参数，支持获取整行数据","修复ios cordova下运行时，browser未定义问题"]},{label:"1.1.2 (2019-07-05)",description:["Checkbox: 修复计算属性报错问题","Table: 修复列宽不能动态响应问题","Aside: 支持全屏显示，支持取消滑动动画效果","Dropdown: 下拉框关闭延迟过大","Input: 修复日文输入法快速输入会中断问题","Select: 修复出现<transition-group> index 警告的问题","Upload: 修复出现<transition-group> index 警告的问题","Switch: 修复宽度动态变化，小圆点错位问题","Textarea: 修复resize必须autosize一起使用的问题","Table: 快捷菜单固定列，过滤，排序，列显示支持导入导出JSON"]},{label:"1.1.1 (2019-05-14)",description:["升级vue.js版本至2.6.10最新版"]},{label:"1.1.0 (2019-05-09)",description:["版本号正式确认为1.1.0并加入公司内部的NPM管理","新增pj图标，helpbook图标","Table: 新增highlightFirstAfterSort属性，false排序后清空当前行，或true设为首行","Table: 新增getSelection方法，获取多选行","upload: 新增max参数，上传数量等于max时，上传按钮隐藏","loader: 支持script标签的async属性，设置为false是脚本会被同步加载，防止mounted方法中脚本还未导入","loader: 废除loader自动添加debugger的功能","input: 新增$rules、$formatter 两个对象","validator: type为number时修改min和max为校验数字大小，而非字符串长度","datepicker: 修复跨年日期选择bug","gantt: 新增gantt拓展控件"]},{label:"1.50.190116 (2019-01-16)",description:["Input: 添加noIme参数，限制输入法输入","Table: 修正切换路由，table无法保存滚动位置问题","Table: 修复lazyload导致画面卡死问题","Table: 修复table的快捷菜单（contextmenu）列title为空时错位问题、多个table时，menu被遮挡问题。","Table: filter，sort 序号(type=index)重排","Util: 修正chrome>67全屏报错, ","Menu: 添加collapse参数，使菜单可折叠","ColorPicker: 支持slot写法来自定义触发器外观","Signature: 新增控件"]},{label:"1.50.181121 (2018-11-21)",description:["全局: 代码改善","Tree: getCheckedNodes方法添加indeterminate参数，为true时将会把半选中状态的节点一起返回","Notification: 新增vueutils.setZIndex，设置默认提示zIndex","DatePicker: 切换月份是，选中日期不再跟随到下月同天。解决 10.31 -> nextmonth -> 12.01 bug","Select: 修正select控件 tab键focus时，无法过滤的问题","Button: 防止双击事件穿透","Table: 修正清空数据后懒加载失效问题","Table: 修正数据清空后，合计不变问题","Table: 添加filters属性，自定义过滤项目","Input: Cleave.js版本更新1.4.4"]},{label:"1.50.180920 (2018-09-20)",description:["全局: 代码改善","Dropdown组件: visible-change属性无效","ColorPicker: 增加disabled属性","Carousel: 修正左右切换按钮提交表单bug"]},{label:"1.49.180628 (2018-06-28)",description:["全局: 代码改善","Table组件: aggregate属性改善"]},{label:"1.49.180531 (2018-05-31)",description:["全局: 性能改善"]},{label:"1.49.180523 (2018-05-23)",description:["全局: 代码改善","VueUtil: 移除produceModel方法, 追加config属性","Full Calendar组件: 追加weekLabel属性"]},{label:"1.48.180515 (2018-05-15)",description:["全局: 代码改善","vue-lodaer: 默认开启调试, 启用生产模式可关闭"]},{label:"1.48.9977 (2018-05-08)",description:["全局: 代码改善","Carousel组件: 追加滑动切换功能","i18n: 性能改善","Card组件: 追加shadow属性","vue-resource: 更新至1.5.0","vue-util: 追加mergeArray, deepCopy方法"]},{label:"1.47.9827 (2018-04-23)",description:["Table组件: 改善columnFilter方法"]},{label:"1.47.9823 (2018-04-19)",description:["追加AdaptiveGroup组件","TableColumn组件: 修复label无法动态显示的问题"]},{label:"1.46.9811 (2018-04-17)",description:["Table组件: 改善columnFilter方法"]},{label:"1.46.9805 (2018-04-12)",description:["追加 v-ripple指令: 点击时触发波纹效果","全局: 代码改善"]},{label:"1.45.9783 (2018-04-10)",description:["全局: 代码改善","Icon: 追加图标","VuUtil: 注册至vue.$vu"]},{label:"1.45.9753 (2018-04-08)",description:["Date组件: 修复日历显示不准确的问题"]},{label:"1.45.9743 (2018-04-03)",description:["FormItem组件: 修复label动态显示出错的问题"]},{label:"1.45.9725 (2018-03-29)",description:["VueLoader: 改善错误消息出力, 修复@media样式手机端无法生效的问题"]},{label:"1.45.9709 (2018-03-28)",description:["TableColumn组件: 改善show-overflow-tooltip属性"]},{label:"1.45.9703 (2018-03-27)",description:["VueLoader: 修复无<script>时解析出错的问题","Scrollbar组件: 追加惯性滚动效果"]},{label:"1.45.9696 (2018-03-26)",description:["VueUtil: 追加formatNumber方法","Form校验规则: 追加IPv4","Scrollbar组件: 控件改善","Table组件: 控件改善"]},{label:"1.44.9688 (2018-03-22)",description:["Table组件: 样式改善"]},{label:"1.44.9682 (2018-03-21)",description:["Notification组件: 代码改善","v-imgload指令: 代码改善","Input组件: 追加text-align属性","Autocomplete组件: 追加text-align属性","Select组件: 追加text-align属性","DatePicker组件: 追加text-align属性","TimePicker组件: 追加text-align属性","Cascader组件: 追加text-align属性"]},{label:"1.43.9656 (2018-03-20)",description:["Table组件: 追加highlight-hover-row属性","TableColumn组件: 追加rowspan, label-colspan属性","Scrollbar组件: 控件改善","Upload组件: 修复加入file-list属性后无法手动提交的问题"]},{label:"1.42.9639 (2018-03-15)",description:["追加 v-imgload指令: 懒加载图片, 只对<img>有效","VueUtil: 追加addHoverListener, removeHoverListener方法"]},{label:"1.41.9621 (2018-03-14)",description:["Scrollbar组件: 控件改善"]},{label:"1.41.9615 (2018-03-13)",description:["List组件: 追加scrollbar属性"]},{label:"1.41.9604 (2018-03-09)",description:["Scrollbar组件: 控件改善","VuePopper组件: 修复IE兼容问题"]},{label:"1.41.9572 (2018-03-08)",description:["Table组件: context-menu改善","Draggable指令: 修复IE兼容问题"]},{label:"1.41.9560 (2018-03-07)",description:["Scrollbar组件: 控件改善"]},{label:"1.41.9537 (2018-03-06)",description:["VueLoader: 追加解析script标签的scoped属性, 对应JS异步执行的问题","VuePopper组件: 改善挂载位置","List组件: 修复list-item改变后显现不正确的问题","Aside组件: 删除left属性, 追加position属性"]},{label:"1.40.9522 (2018-03-02)",description:["Tabs组件: 修复路由模式下的路由多次加载的问题","Button组件: 追加tabindex属性","Loading组件: 修复事件重复注册的问题","LoadingBar组件: 追加回调钩子"]},{label:"1.39.9496 (2018-02-28)",description:["Table组件: 追加filterable属性, 过滤方法改变, 具体参考table的筛选demo"]},{label:"1.38.9478 (2018-02-25)",description:["Form组件: 修复label-responsive属性"]},{label:"1.38.9459 (2018-02-23)",description:["Table组件: 修复导出文件格式问题, 追加print-label属性, 修复数据变化时不会重新排序的问题","全局: 代码改善"]},{label:"1.37.9428 (2018-02-11)",description:["Calendar组件: 追加getDate方法"]},{label:"1.36.9420 (2018-02-09)",description:["Calendar组件: 修复初始化event未赋值出错的问题, 修复更多事件计数不准确的问题","Icon: 追加图标"]},{label:"1.36.9384 (2018-02-06)",description:["VueLoader: 修复@media样式无法生效的问题"]},{label:"1.36.9377 (2018-02-05)",description:["Carousel组件: 修复组件销毁时未删除定时器的问题"]},{label:"1.36.9356 (2018-01-31)",description:["Collapse组件: 修复firefox下样式问题"]},{label:"1.36.9345 (2018-01-30)",description:["VueUtil: 代码优化","VueLoader: 代码优化","TableColumn组件: 改善colspan属性"]},{label:"1.36.9327 (2018-01-27)",description:["Icon: 追加图标"]},{label:"1.36.9311 (2018-01-23)",description:["Table组件: 追加getCurrentRow方法"]},{label:"1.35.9288 (2018-01-17)",description:["Table组件: 修复拖动列宽的逻辑问题","Form组件: 修复rules属性未能实时生效的问题"]},{label:"1.35.9278 (2018-01-16)",description:["VueUtil: resizeListener方法改善"]},{label:"1.35.9211 (2018-01-08)",description:["Dialog组件: 追加draggable属性"]},{label:"1.34.9207 (2018-01-04)",description:["VueLoader: 加载vue文件"]},{label:"1.33.9187 (2017-12-30)",description:["全局: css改善 开启GPU加速","Icon: 追加图标","Table组件: 修复懒加载在IE下不正确的问题, 修复拖动列宽layout错乱的问题"]},{label:"1.33.9151 (2017-12-27)",description:["Table组件: 性能改善","Color组件: 改善颜色选择方法","Vue: 升级至2.5.13"]},{label:"1.32.9075 (2017-12-21)",description:["Input组件: Cleave追加customFormatter属性"]},{label:"1.32.9069 (2017-12-20)",description:["Vue: 升级至2.5.11","VueUtil: 追加debounce方法, 改善throttle方法"]},{label:"1.31.9021 (2017-12-15)",description:["全局: 代码改善","Table组件: 改善多列排序算法","VuePopper: 追加autoWidth属性, 自适应宽度","Vue: 升级至2.5.10"]},{label:"1.30.8883 (2017-12-08)",description:["VueUtil: 改善ResizeListener","LoadingBar组件: 代码改善"]},{label:"1.30.8844 (2017-12-06)",description:["VueUtil: 追加getCookie, setCookie, removeCookie, throttle方法"]},{label:"1.29.8806 (2017-12-05)",description:["Table组件: lazyload改善","Loading组件: 样式改善","List组件: 代码改善"]},{label:"1.29.8793 (2017-12-04)",description:["VueUtil: 追加objType和isFunciton方法","VuePopper: 代码改善"]},{label:"1.28.8768 (2017-12-01)",description:["Calendar组件: 完善Full Calendar"]},{label:"1.28.8754 (2017-11-30)",description:["Calendar组件: 追加Full Calendar","Table组件: 修复clearSelection方法无法清除header部checkbox的BUG"]},{label:"1.27.8732 (2017-11-28)",description:["全局: 动画效果改善","Tabs组件: 追加鼠标滚轮事件"]},{label:"1.26.8682 (2017-11-24)",description:["Table组件: 追加scroll-top, scroll-bottom, scroll-left, scroll-right事件","Dialog组件: 样式改善","Aside组件: 样式改善"]},{label:"1.25.8669 (2017-11-22)",description:["Table组件: 排序样式改善, 代码优化",'TableColumn组件: 追加colspan属性, 追加名为"header"的slot-scope, 原嵌套table-column写法废除, 具体参考table的自定义模板demo']},{label:"1.24.8649 (2017-11-21)",description:["Progress组件: 样式改善"]},{label:"1.24.8641 (2017-11-20)",description:["全局: 代码改善","VueUtil: 追加isUndef和isDef方法","Table组件: 修复导出文件不会导出footer部的问题, 优化footer部计算, 改善context-menu功能"]},{label:"1.23.8613 (2017-11-17)",description:["Icon: 追加图标","Table组件: 改善鼠标滚轮事件, 排序改善(支持多列排序), show-summary属性变更为show-footer属性","TableColumn组件: 追加aggregate和aggregate-label属性"]},{label:"1.22.8555 (2017-11-14)",description:["Select组件: 样式改善, 修复多选时可对disabled选项全选的问题","Table组件: 快捷菜单功能改善, 可对列进行全选固定"]},{label:"1.22.8534 (2017-11-10)",description:["VueUtil: 追加getSystemInfo方法","Table组件: 修复选中selection列header部的checkbox会触发两次事件的问题"]},{label:"1.21.8513 (2017-11-09)",description:["全局: 下拉样式改善","Cascader组件: 代码改善","Validator: 代码改善","Table组件: 修复header部鼠标滚轮事件","其他: 代码改善"]},{label:"1.21.8491 (2017-11-08)",description:["Form组件: 追加custom-message属性","VueUtil: 代码改善","Notification组件: 代码改善","MessageBox组件: 代码改善"]},{label:"1.20.8458 (2017-11-07)",description:["Icon: 追加图标, 样式改善","Select组件: 代码改善"]},{label:"1.20.8422 (2017-11-06)",description:["全局: Array类型判断的改善","VueUtil: 追加addDate方法, 追加isArray方法","Icon: 追加图标, 样式改善"]},{label:"1.19.8359 (2017-11-03)",description:["Collapse组件: 改善change事件, 在DOM更新后触发","Input组件: 修复change事件会触发两次的问题","Form组件: 追加notify-message属性"]},{label:"1.18.8309 (2017-11-02)",description:["Table组件: 性能改善, 样式改善","FormItem组件: 代码改善"]},{label:"1.18.8221 (2017-10-31)",description:["CollapseItem组件: 追加expand-on-click属性","List组件: 性能改善, 追加default-selected属性","Table组件: 性能改善"]},{label:"1.17.8175 (2017-10-30)",description:["全局: 代码改善(兼容IE的写法改善)","Table组件: 性能改善, context menu 打开时改为对画面可操作"]},{label:"1.17.8124 (2017-10-26)",description:["FormItem组件: 代码改善","Notification组件: 追加showClose属性","Table组件: 修复table高度变更时懒加载不对的问题"]},{label:"1.16.8074 (2017-10-25)",description:["全局: 去除body样式","Autocomplete组件: 代码改善","Vuex: 升级至3.0.0","Vue-Router:  升级至3.0.1","Collapse组件: 追加expand-on-click-header属性","Table组件: 追加lazyload属性, 代码改善","List组件: 样式改善, 代码改善","其它: 代码改善"]},{label:"1.15.7976 (2017-10-23)",description:["Vue: 升级至2.5.2"]},{label:"1.14.7969 (2017-10-20)",description:["Select组件: 修复单选多选切换的问题","Notification组件: 样式改善","Table组件: 追加数据导出功能, 样式改善"]},{label:"1.13.7918 (2017-10-19)",description:["全局: touch事件修正"]},{label:"1.13.7901 (2017-10-18)",description:["Notification组件: 代码优化, 样式改善","MessageBox组件: 代码优化","Dialog组件: 代码优化, 样式改善","Date组件: 样式改善","Table组件: 性能改善"]},{label:"1.13.7805 (2017-10-16)",description:["全局: 样式调整","Notification组件: 修复已知的功能性BUG及性能改善"]},{label:"1.12.7717 (2017-10-13)",description:["Table组件: 追加可直接调用的列过滤方法和多列排序方法"]},{label:"1.11.7694 (2017-10-12)",description:["全局: css代码优化","Table组件: 代码优化","Tag组件: 代码优化","Draggable组件: 代码优化"]},{label:"1.11.7592 (2017-10-11)",description:["Table组件: 代码优化","ColorPicker组件: 代码优化","Draggable组件: 代码优化","Slider组件: 代码优化"]},{label:"1.11.7579 (2017-10-10)",description:["Table组件: 修复已知的功能性BUG及性能改善","Rate组件: 修复color,class等属性不能动态生效的问题"]},{label:"1.11.7542 (2017-10-09)",description:["VueUtil: 追加noLog方法, 用于取消Vue日志","MessageBox组件: 代码优化"]},{label:"1.11.7484 (2017-10-07)",description:["Notification组件: 改善样式","Dialog组件: full模式下改为不能拖动","Tabs组件: 代码优化","Table组件: 代码优化","List组件: 代码优化"]},{label:"1.11.7426 (2017-10-06)",description:["Table组件: 修复固定列时展开行的自定义类不生效的问题","List组件: 修复初期化不触发select事件的问题"]},{label:"1.11.7375 (2017-09-30)",description:["Vue: 开启开发模式, 调试时显示日志与警告"]},{label:"1.11.7360 (2017-09-29)",description:["Tag组件: 追加width属性","Select组件: 追加auto-height属性","Select组件: 修复clearable属性, 多选模式下可全选全清","Select组件: 修复disabled属性, 多选模式下tag不可关闭","UpLoad组件: 修复disabled属性"]},{label:"1.10.7277 (2017-09-27)",description:["Table组件: 追加context menu功能","Aside组件: 追加clear-modal属性","Dialog组件: 追加clear-modal属性","其它: 已知的功能性BUG修复及代码改善"]},{label:"1.9.7147 (2017-09-21)",description:["Tabs组件: 追加tab-bottom属性"]},{label:"1.8.7111 (2017-09-20)",description:["Carousel组件: 追加hover-stop属性"]},{label:"1.7.7079 (2017-09-19)",description:["Input组件: 追加focus方法","Autocomplete组件: 追加focus方法","Select组件: 追加focus方法","DatePicker组件: 追加focus方法","TimePicker组件: 追加focus方法","Cascader组件: 追加focus方法","Button组件: 追加focus方法","其它: 已知的功能性BUG修复及代码改善"]},{label:"1.6.6982 (2017-09-07)",description:["追加draggable组件","其它: 已知的功能性BUG修复及代码改善"]},{label:"1.5.6780 (2017-09-07)",description:["List组件: 追加default-actived-index属性","其它: 已知的功能性BUG修复及代码改善"]},{label:"1.4.6603 (2017-08-28)",description:["Table组件: 追加隐藏列功能","其它: 已知的功能性BUG修复及代码改善"]},{label:"1.3.5750 (2017-08-03)",description:["Aside组件: 追加beforeClose事件","Dialog组件: 追加beforeClose事件","其它: 已知的功能性BUG修复及代码改善"]},{label:"1.2.5730 (2017-07-31)",description:["Tree组件: 追加子节点的disabled属性","Tree组件: 子节点的check逻辑改善"]},{label:"1.1.5511 (2017-07-21)",description:["Table组件: 追加expand-class-name属性"]},{label:"1.0.5367 (2017-07-18)",description:["UI 发布"]}]}}}},"./demo/CheckboxDemo.js":
/*!******************************!*\
  !*** ./demo/CheckboxDemo.js ***!
  \******************************/
/*! no static exports found */function(e,n,t){"use strict";e.exports={path:"/checkbox",name:"checkbox",head:{label:"checkboxDemo.label",description:"checkboxDemo.description"},samples:[{id:"checkbox1",label:"checkboxDemo.samples1.label",description:"checkboxDemo.samples1.description",template:'<div class="source"><vue-checkbox v-model="checked">Option</vue-checkbox></div>',parameter:{data:function(){return{checked:!0}}},code:'<vue-checkbox v-model="checked">Option</vue-checkbox>\n\n<script>\n  new Vue({\n    data: function(){\n      return {\n        checked: true\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"checkbox2",label:"checkboxDemo.samples2.label",description:"checkboxDemo.samples2.description",template:'<div class="source"><vue-checkbox v-model="checked1" disabled>Option</vue-checkbox><vue-checkbox v-model="checked2" disabled>Option</vue-checkbox></div>',parameter:{data:function(){return{checked1:!1,checked2:!0}}},code:'<vue-checkbox v-model="checked1" disabled>Option</vue-checkbox>\n<vue-checkbox v-model="checked2" disabled>Option</vue-checkbox>\n\n<script>\n  new Vue({\n    data: function(){\n      return {\n        checked1: false,\n        checked2: true\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"checkbox3",label:"checkboxDemo.samples3.label",description:"checkboxDemo.samples3.description",template:'<div class="source"><vue-checkbox-group v-model="checkList"><vue-checkbox label="Option A"></vue-checkbox><vue-checkbox label="Option B"></vue-checkbox><vue-checkbox label="Option C"></vue-checkbox><vue-checkbox label="Disabled" disabled></vue-checkbox><vue-checkbox label="Selected and Disabled" disabled></vue-checkbox></vue-checkbox-group></div>',parameter:{data:function(){return{checkList:["Selected and Disabled","Option A"]}}},code:'<vue-checkbox-group v-model="checkList">\n  <vue-checkbox label="Option A"></vue-checkbox>\n  <vue-checkbox label="Option B"></vue-checkbox>\n  <vue-checkbox label="Option C"></vue-checkbox>\n  <vue-checkbox label="Disabled" disabled></vue-checkbox>\n  <vue-checkbox label="Selected and Disabled" disabled></vue-checkbox>\n</vue-checkbox-group>\n\n<script>\n  new Vue({\n    data: function(){\n      return {\n        checkList: ["Selected and Disabled","Option A"]\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"checkbox4",label:"checkboxDemo.samples4.label",description:"checkboxDemo.samples4.description",template:'<div class="source"><vue-checkbox :indeterminate="isIndeterminate" v-model="checkAll" @change="handleCheckAllChange">Check All</vue-checkbox><div style="margin: 15px 0;"></div><vue-checkbox-group v-model="checkedCities" @change="handleCheckedCitiesChange"><vue-checkbox v-for="city in cities" :key="city" :label="city">{{city}}</vue-checkbox></vue-checkbox-group></div>',parameter:{data:function(){return{checkAll:!0,checkedCities:["New York","Chicago"],cities:["New York","Chicago","Los Angeles","Washington"],isIndeterminate:!0}},methods:{handleCheckAllChange:function(e){this.checkedCities=e.target.checked?["New York","Chicago","Los Angeles","Washington"]:[],this.isIndeterminate=!1},handleCheckedCitiesChange:function(e){var n=e.length;this.checkAll=n===this.cities.length,this.isIndeterminate=n>0&&n<this.cities.length}}},code:"<vue-checkbox :indeterminate=\"isIndeterminate\" v-model=\"checkAll\" @change=\"handleCheckAllChange\">Check All</vue-checkbox>\n<vue-checkbox-group v-model=\"checkedCities\" @change=\"handleCheckedCitiesChange\">\n  <vue-checkbox v-for=\"city in cities\" :key=\"city\" :label=\"city\">{{city}}</vue-checkbox>\n</vue-checkbox-group>\n\n<script>\n  new Vue({\n    data: function(){\n      return {\n        checkAll: true,\n        checkedCities: ['New York', 'Chicago'],\n        cities: ['New York', 'Chicago', 'Los Angeles', 'Washington'],\n        isIndeterminate: true\n      }\n    },\n    methods: {\n      handleCheckAllChange: function(event) {\n        this.checkedCities = event.target.checked ? ['New York', 'Chicago', 'Los Angeles', 'Washington'] : [];\n        this.isIndeterminate = false;\n      },\n      handleCheckedCitiesChange: function(value) {\n        var checkedCount = value.length;\n        this.checkAll = checkedCount === this.cities.length;\n        this.isIndeterminate = checkedCount > 0 && checkedCount < this.cities.length;\n      }\n    }\n  }).$mount();\n<\/script>"},{id:"checkbox5",label:"checkboxDemo.samples5.label",description:"checkboxDemo.samples5.description",template:'<div class="source"><vue-checkbox-group v-model="checkboxGroup1" size="large" fill="#324057" text-color="#a4aebd" :min="1" :max="3"><vue-checkbox-button label="New York"></vue-checkbox-button><vue-checkbox-button label="Chicago"></vue-checkbox-button><vue-checkbox-button label="Los Angeles"></vue-checkbox-button><vue-checkbox-button label="Washington"></vue-checkbox-button></vue-checkbox-group><div style="margin: 15px 0;"></div><vue-checkbox-group v-model="checkboxGroup2"><vue-checkbox-button label="New York"></vue-checkbox-button><vue-checkbox-button label="Chicago" :disabled="true"></vue-checkbox-button><vue-checkbox-button label="Los Angeles"></vue-checkbox-button><vue-checkbox-button label="Washington"></vue-checkbox-button></vue-checkbox-group><div style="margin: 15px 0;"></div><vue-checkbox-group v-model="checkboxGroup3" :disabled="true"><vue-checkbox-button label="New York"></vue-checkbox-button><vue-checkbox-button label="Chicago"></vue-checkbox-button><vue-checkbox-button label="Los Angeles"></vue-checkbox-button><vue-checkbox-button label="Washington"></vue-checkbox-button></vue-checkbox-group></div>',parameter:{data:function(){return{checkboxGroup1:["New York"],checkboxGroup2:["Washington"],checkboxGroup3:["Los Angeles"]}}},code:'<vue-checkbox-group v-model="checkboxGroup1" size="large" fill="#324057" text-color="#a4aebd" :min="1" :max="3">\n  <vue-checkbox-button label="New York"></vue-checkbox-button>\n  <vue-checkbox-button label="Chicago"></vue-checkbox-button>\n  <vue-checkbox-button label="Los Angeles"></vue-checkbox-button>\n  <vue-checkbox-button label="Washington"></vue-checkbox-button>\n</vue-checkbox-group>\n<vue-checkbox-group v-model="checkboxGroup2">\n  <vue-checkbox-button label="New York"></vue-checkbox-button>\n  <vue-checkbox-button label="Chicago" :disabled="true"></vue-checkbox-button>\n  <vue-checkbox-button label="Los Angeles"></vue-checkbox-button>\n  <vue-checkbox-button label="Washington"></vue-checkbox-button>\n</vue-checkbox-group>\n<vue-checkbox-group v-model="checkboxGroup3" :disabled="true">\n  <vue-checkbox-button label="New York"></vue-checkbox-button>\n  <vue-checkbox-button label="Chicago"></vue-checkbox-button>\n  <vue-checkbox-button label="Los Angeles"></vue-checkbox-button>\n  <vue-checkbox-button label="Washington"></vue-checkbox-button>\n</vue-checkbox-group>\n\n<script>\n  new Vue({\n    data: function(){\n      return {\n        checkboxGroup1: ["New York"],\n        checkboxGroup2: ["Washington"],\n        checkboxGroup3: ["Los Angeles"]\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"checkbox6",label:"Checkbox Attributes",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"label",column2:"checkboxDemo.samples6.row1column2",column3:"String",column4:"",column5:""},{column1:"true-label",column2:"checkboxDemo.samples6.row2column2",column3:"String / Number",column4:"",column5:""},{column1:"false-label",column2:"checkboxDemo.samples6.row3column2",column3:"String / Number",column4:"",column5:""},{column1:"name",column2:"checkboxDemo.samples6.row4column2",column3:"String",column4:"",column5:""},{column1:"disabled",column2:"checkboxDemo.samples6.row5column2",column3:"Boolean",column4:"",column5:"false"},{column1:"checked",column2:"checkboxDemo.samples6.row6column2",column3:"Boolean",column4:"",column5:"false"},{column1:"indeterminate",column2:"checkboxDemo.samples6.row7column2",column3:"Boolean",column4:"",column5:"false"}]}}},notshowmeta:!0},{id:"checkbox7",label:"Checkbox-group Attributes",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"size",column2:"checkboxDemo.samples7.row1column2",column3:"String",column4:"large, small, mini",column5:""},{column1:"fill",column2:"checkboxDemo.samples7.row2column2",column3:"String",column4:"",column5:"#20a0ff"},{column1:"text-color",column2:"checkboxDemo.samples7.row3column2",column3:"String",column4:"",column5:"#ffffff"},{column1:"min",column2:"checkboxDemo.samples7.row4column2",column3:"Number",column4:"",column5:""},{column1:"max",column2:"checkboxDemo.samples7.row5column2",column3:"Number",column4:"",column5:""}]}}},notshowmeta:!0},{id:"checkbox8",label:"Checkbox Events",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"change",column2:"checkboxDemo.samples8.row1column2",column3:"Event object"}]}}},notshowmeta:!0}]}},"./demo/CollapseDemo.js":
/*!******************************!*\
  !*** ./demo/CollapseDemo.js ***!
  \******************************/
/*! no static exports found */function(e,n,t){"use strict";e.exports={path:"/collapse",name:"collapse",head:{label:"collapseDemo.label",description:"collapseDemo.description"},samples:[{id:"collapse1",label:"collapseDemo.samples1.label",description:"collapseDemo.samples1.description",template:'<div class="source"><vue-collapse v-model="activeNames" @change="handleChange"><vue-collapse-item :expand-on-click="false" title="Consistency" name="1"><div>Consistent with real life: in line with the process and logic of real life, and comply with languages and habits that the users are used to;</div><div>Consistent within interface: all elements should be consistent, such as: design style, icons and texts, position of elements, etc.</div></vue-collapse-item><vue-collapse-item title="Feedback" name="2"><div>Operation feedback: enable the users to clearly perceive their operations by style updates and interactive effects;</div><div>Visual feedback: reflect current state by updating or rearranging elements of the page.</div></vue-collapse-item><vue-collapse-item title="Efficiency" name="3"><div>Simplify the process: keep operating process simple and intuitive;</div><div>Definite and clear: enunciate your intentions clearly so that the users can quickly understand and make decisions;</div><div>Easy to identify: the interface should be straightforward, which helps the users to identify and frees them from memorizing and recalling.</div></vue-collapse-item><vue-collapse-item title="Controllability" name="4"><div>Decision making: giving advices about operations is acceptable, but do not make decisions for the users;</div><div>Controlled consequences: users should be granted the freedom to operate, including canceling, aborting or terminating current operation.</div></vue-collapse-item></vue-collapse></div>',parameter:{data:function(){return{activeNames:["1"]}},methods:{handleChange:function(e){this.$notify({title:e.toString()||"[]"})}}},code:'<vue-collapse v-model="activeNames" @change="handleChange">\n  <vue-collapse-item :expand-on-click="false" title="Consistency" name="1">\n    <div>Consistent with real life: in line with the process and logic of real life, and comply with languages and habits that the users are used to;</div>\n    <div>Consistent within interface: all elements should be consistent, such as: design style, icons and texts, position of elements, etc.</div>\n  </vue-collapse-item>\n  <vue-collapse-item title="Feedback" name="2">\n    <div>Operation feedback: enable the users to clearly perceive their operations by style updates and interactive effects;</div>\n    <div>Visual feedback: reflect current state by updating or rearranging elements of the page.</div>\n  </vue-collapse-item>\n  <vue-collapse-item title="Efficiency" name="3">\n    <div>Simplify the process: keep operating process simple and intuitive;</div>\n    <div>Definite and clear: enunciate your intentions clearly so that the users can quickly understand and make decisions;</div>\n    <div>Easy to identify: the interface should be straightforward, which helps the users to identify and frees them from memorizing and recalling.</div>\n  </vue-collapse-item>\n  <vue-collapse-item title="Controllability" name="4">\n    <div>Decision making: giving advices about operations is acceptable, but do not make decisions for the users;</div>\n    <div>Controlled consequences: users should be granted the freedom to operate, including canceling, aborting or terminating current operation.</div>\n  </vue-collapse-item>\n</vue-collapse>\n\n<script>\n  new Vue({\n    data: function() {\n      return: {\n        activeNames: [\'1\']\n      }\n    },\n    methods: {\n      handleChange: function(openIndexAry) {\n        this.$notify({title: openIndexAry.toString()||"[]"});\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"collapse2",label:"collapseDemo.samples2.label",description:"collapseDemo.samples2.description",template:'<div class="source"><vue-collapse v-model="activeNames" accordion><vue-collapse-item title="Consistency" name="1"><div>Consistent with real life: in line with the process and logic of real life, and comply with languages and habits that the users are used to;</div><div>Consistent within interface: all elements should be consistent, such as: design style, icons and texts, position of elements, etc.</div></vue-collapse-item><vue-collapse-item title="Feedback" name="2"><div>Operation feedback: enable the users to clearly perceive their operations by style updates and interactive effects;</div><div>Visual feedback: reflect current state by updating or rearranging elements of the page.</div></vue-collapse-item><vue-collapse-item title="Efficiency" name="3"><div>Simplify the process: keep operating process simple and intuitive;</div><div>Definite and clear: enunciate your intentions clearly so that the users can quickly understand and make decisions;</div><div>Easy to identify: the interface should be straightforward, which helps the users to identify and frees them from memorizing and recalling.</div></vue-collapse-item><vue-collapse-item title="Controllability" name="4"><div>Decision making: giving advices about operations is acceptable, but do not make decisions for the users;</div><div>Controlled consequences: users should be granted the freedom to operate, including canceling, aborting or terminating current operation.</div></vue-collapse-item></vue-collapse></div>',parameter:{data:function(){return{activeNames:["1"]}}},code:'<vue-collapse v-model="activeNames" accordion>\n  <vue-collapse-item title="Consistency" name="1">\n    <div>Consistent with real life: in line with the process and logic of real life, and comply with languages and habits that the users are used to;</div>\n    <div>Consistent within interface: all elements should be consistent, such as: design style, icons and texts, position of elements, etc.</div>\n  </vue-collapse-item>\n  <vue-collapse-item title="Feedback" name="2">\n    <div>Operation feedback: enable the users to clearly perceive their operations by style updates and interactive effects;</div>\n    <div>Visual feedback: reflect current state by updating or rearranging elements of the page.</div>\n  </vue-collapse-item>\n  <vue-collapse-item title="Efficiency" name="3">\n    <div>Simplify the process: keep operating process simple and intuitive;</div>\n    <div>Definite and clear: enunciate your intentions clearly so that the users can quickly understand and make decisions;</div>\n    <div>Easy to identify: the interface should be straightforward, which helps the users to identify and frees them from memorizing and recalling.</div>\n  </vue-collapse-item>\n  <vue-collapse-item title="Controllability" name="4">\n    <div>Decision making: giving advices about operations is acceptable, but do not make decisions for the users;</div>\n    <div>Controlled consequences: users should be granted the freedom to operate, including canceling, aborting or terminating current operation.</div>\n  </vue-collapse-item>\n</vue-collapse>\n\n<script>\n  new Vue({\n    data: function() {\n      return: {\n        activeNames: [\'1\']\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"collapse3",label:"collapseDemo.samples3.label",description:"collapseDemo.samples3.description",template:'<div class="source"><vue-collapse accordion><vue-collapse-item name="1"><template slot="title">Consistency<i style="margin-left:5px;" class="header-icon vue-icon-information"></i></template><div>Consistent with real life: in line with the process and logic of real life, and comply with languages and habits that the users are used to;</div><div>Consistent within interface: all elements should be consistent, such as: design style, icons and texts, position of elements, etc.</div></vue-collapse-item><vue-collapse-item title="Feedback" name="2"><div>Operation feedback: enable the users to clearly perceive their operations by style updates and interactive effects;</div><div>Visual feedback: reflect current state by updating or rearranging elements of the page.</div></vue-collapse-item><vue-collapse-item title="Efficiency" name="3"><div>Simplify the process: keep operating process simple and intuitive;</div><div>Definite and clear: enunciate your intentions clearly so that the users can quickly understand and make decisions;</div><div>Easy to identify: the interface should be straightforward, which helps the users to identify and frees them from memorizing and recalling.</div></vue-collapse-item><vue-collapse-item title="Controllability" name="4"><div>Decision making: giving advices about operations is acceptable, but do not make decisions for the users;</div><div>Controlled consequences: users should be granted the freedom to operate, including canceling, aborting or terminating current operation.</div></vue-collapse-item></vue-collapse></div>',code:'<vue-collapse accordion>\n  <vue-collapse-item name="1">\n    <template slot="title">\n      Consistency\n      <i style="margin-left:5px;" class="header-icon vue-icon-information"></i>\n    </template>\n    <div>Consistent with real life: in line with the process and logic of real life, and comply with languages and habits that the users are used to;</div>\n    <div>Consistent within interface: all elements should be consistent, such as: design style, icons and texts, position of elements, etc.</div>\n  </vue-collapse-item>\n  <vue-collapse-item title="Feedback" name="2">\n    <div>Operation feedback: enable the users to clearly perceive their operations by style updates and interactive effects;</div>\n    <div>Visual feedback: reflect current state by updating or rearranging elements of the page.</div>\n  </vue-collapse-item>\n  <vue-collapse-item title="Efficiency" name="3">\n    <div>Simplify the process: keep operating process simple and intuitive;</div>\n    <div>Definite and clear: enunciate your intentions clearly so that the users can quickly understand and make decisions;</div>\n    <div>Easy to identify: the interface should be straightforward, which helps the users to identify and frees them from memorizing and recalling.</div>\n  </vue-collapse-item>\n  <vue-collapse-item title="Controllability" name="4">\n    <div>Decision making: giving advices about operations is acceptable, but do not make decisions for the users;</div>\n    <div>Controlled consequences: users should be granted the freedom to operate, including canceling, aborting or terminating current operation.</div>\n  </vue-collapse-item>\n</vue-collapse>'},{id:"collapse4",label:"Collapse Attributes",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"accordion",column2:"collapseDemo.samples4.row1column2",column3:"Boolean",column4:"",column5:"false"},{column1:"value",column2:"collapseDemo.samples4.row2column2",column3:"String / Array",column4:"",column5:""},{column1:"expand-on-click-header",column2:"treeDemo.samples9.row9column2",column3:"Boolean",column4:"",column5:"true"}]}}},notshowmeta:!0},{id:"collapse5",label:"Collapse Events",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"change",column2:"collapseDemo.samples5.row1column2",column3:"(activeNames: array|string)"}]}}},notshowmeta:!0},{id:"collapse6",label:"Collapse Item Attributes",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"name",column2:"collapseDemo.samples6.row1column2",column3:"String / Number",column4:"",column5:""},{column1:"title",column2:"collapseDemo.samples6.row2column2",column3:"String",column4:"",column5:""},{column1:"expand-on-click",column2:"collapseDemo.samples6.row3column2",column3:"Boolean",column4:"",column5:"true"}]}}},notshowmeta:!0}]}},"./demo/ColorDemo.js":
/*!***************************!*\
  !*** ./demo/ColorDemo.js ***!
  \***************************/
/*! no static exports found */function(e,n,t){"use strict";e.exports={path:"/color",name:"color",head:{label:"colorDemo.label",description:"colorDemo.description"},samples:[{id:"color1",label:"colorDemo.samples1.label",description:"colorDemo.samples1.description",template:'<div class="source"><vue-row class="margin-bottom20" type="flex" justify="center"><vue-col :span="6"><span class="demonstration">Default value</span></vue-col><vue-col :span="16"><vue-color-picker v-model="color1"></vue-color-picker></vue-col></vue-row><vue-row type="flex" justify="center"><vue-col :span="6"><span class="demonstration">No default value</span></vue-col><vue-col :span="16"><vue-color-picker v-model="color2"></vue-color-picker></vue-col></vue-row></div>',parameter:{data:function(){return{color1:"#409eff",color2:null}}},code:'<span class="demonstration">Default value</span>\n<vue-date-picker v-model="color1"></vue-date-picker>\n<span class="demonstration">No default value</span>\n<vue-date-picker v-model="color2"></vue-date-picker>\n\n<script>\n  new Vue({\n    data: function(){\n      return {\n        color1: "#409eff",\n        color2: null\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"color2",label:"colorDemo.samples2.label",description:"colorDemo.samples2.description",template:'<div class="source"><vue-color-picker v-model="color1" show-alpha></vue-color-picker></div>',parameter:{data:function(){return{color1:"rgba(19, 206, 102, 0.8)"}}},code:'<vue-date-picker v-model="color1" show-alpha></vue-date-picker>\n\n<script>\n  new Vue({\n    data: function(){\n      return {\n        color1: "rgba(19, 206, 102, 0.8)"\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"color3",label:"Attributes",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"show-alpha",column2:"colorDemo.samples3.row1column2",column3:"Boolean",column4:"",column5:"false"},{column1:"color-format",column2:"colorDemo.samples3.row2column2",column3:"String",column4:"hsl, hsv, hex, rgb",column5:"colorDemo.samples3.row2column5"},{column1:"disabled",column2:"colorDemo.samples4.row2column2",column3:"Boolean",column5:"colorDemo.samples4.row2column5"}]}}},notshowmeta:!0},{id:"color4",label:" Events",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"change",column2:"colorDemo.samples5.row1column2",column3:"colorDemo.samples5.row1column3"}]}}},notshowmeta:!0}]}},"./demo/DateDemo.js":
/*!**************************!*\
  !*** ./demo/DateDemo.js ***!
  \**************************/
/*! no static exports found */function(e,n,t){"use strict";var l={path:"/date",name:"date",head:{label:"dateDemo.label",description:"dateDemo.description"},samples:[{id:"date1",label:"dateDemo.samples1.label",description:"dateDemo.samples1.description",template:'<div class="source"><vue-row class="margin-bottom20" type="flex" justify="center"><vue-col :span="6"><span class="demonstration">{{$t(\'dateDemo.samples1.defaultLabel\')}}</span></vue-col><vue-col :span="16"><vue-date-picker v-model="value1" type="date" :placeholder="$t(\'dateDemo.samples1.defaultPlaceholder\')" :picker-options="pickerOptions0"></vue-date-picker></vue-col></vue-row><vue-row type="flex" justify="center"><vue-col :span="6"><span class="demonstration">{{$t(\'dateDemo.samples1.optionsLabel\')}}</span></vue-col><vue-col :span="16"><vue-date-picker v-model="value2" align="right" type="date" :placeholder="$t(\'dateDemo.samples1.defaultPlaceholder\')" :picker-options="pickerOptions1"></vue-date-picker></vue-col></vue-row></div>',parameter:{data:function(){return{pickerOptions0:{disabledDate:function(e){return e.getTime()<VueUtil.addDate(new Date,-1).getTime()}},pickerOptions1:{shortcuts:[{text:this.$t("dateDemo.samples1.todayLabel"),onClick:function(e){e.$emit("pick",new Date)}},{text:this.$t("dateDemo.samples1.yesterdayLabel"),onClick:function(e){var n=VueUtil.addDate(new Date,-1);e.$emit("pick",n)}},{text:this.$t("dateDemo.samples1.weekAgoLabel"),onClick:function(e){var n=VueUtil.addDate(new Date,-1,"week");e.$emit("pick",n)}}]},value1:"",value2:""}}},code:'<span class="demonstration">{{$t(\'dateDemo.samples1.defaultLabel\')}}</span>\n<vue-date-picker v-model="value1" type="date" :placeholder="$t(\'dateDemo.samples1.defaultPlaceholder\')" :picker-options="pickerOptions0"></vue-date-picker>\n<span class="demonstration">{{$t(\'dateDemo.samples1.optionsLabel\')}}</span>\n<vue-date-picker v-model="value2" align="right" type="date" :placeholder="$t(\'dateDemo.samples1.defaultPlaceholder\')" :picker-options="pickerOptions1"></vue-date-picker>\n\n<script>\n  new Vue({\n    data: function(){\n      return {\n        pickerOptions0: {\n          disabledDate: function(time) {\n            return time.getTime() < VueUtil.addDate((new Date), -1).getTime();\n          }\n        },\n        pickerOptions1: {\n          shortcuts: [{\n            text: this.$t("dateDemo.samples1.todayLabel"),\n            onClick: function(picker) {\n              picker.$emit("pick", new Date);\n            }\n          }, {\n            text: this.$t("dateDemo.samples1.yesterdayLabel"),\n            onClick: function(picker) {\n              var date = VueUtil.addDate((new Date), -1);\n              picker.$emit("pick", date);\n            }\n          }, {\n            text: this.$t("dateDemo.samples1.weekAgoLabel"),\n            onClick: function(picker) {\n              var date = VueUtil.addDate((new Date), -1, "week");\n              picker.$emit("pick", date);\n            }\n          }]\n        },\n        value1: "",\n        value2: ""\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"date2",label:"dateDemo.samples2.label",description:"dateDemo.samples2.description",template:'<div class="source"><vue-row class="margin-bottom20" type="flex" justify="center"><vue-col :span="6"><span class="demonstration">{{$t("dateDemo.samples2.weekLabel")}}</span></vue-col><vue-col :span="16"><vue-date-picker v-model="value1" type="week" :format="$t(\'dateDemo.samples2.weekFormat\')" :placeholder="$t(\'dateDemo.samples2.weekPlaceholder\')"></vue-date-picker></vue-col></vue-row><vue-row class="margin-bottom20" type="flex" justify="center"><vue-col :span="6"><span class="demonstration">{{$t("dateDemo.samples2.monthLabel")}}</span></vue-col><vue-col :span="16"><vue-date-picker v-model="value2" type="month" :placeholder="$t(\'dateDemo.samples2.monthPlaceholder\')"></vue-date-picker></vue-col></vue-row><vue-row type="flex" justify="center"><vue-col :span="6"><span class="demonstration">{{$t("dateDemo.samples2.yearLabel")}}</span></vue-col><vue-col :span="16"><vue-date-picker v-model="value3" type="year" :placeholder="$t(\'dateDemo.samples2.yearPlaceholder\')"></vue-date-picker></vue-col></vue-row></div>',parameter:{data:function(){return{value1:"",value2:"",value3:""}}},code:'<span class="demonstration">{{$t("dateDemo.samples2.weekLabel")}}</span>\n<vue-date-picker v-model="value1" type="week" :format="$t(\'dateDemo.samples2.weekFormat\')" :placeholder="$t(\'dateDemo.samples2.weekPlaceholder\')"></vue-date-picker>\n<span class="demonstration">{{$t("dateDemo.samples2.monthLabel")}}</span>\n<vue-date-picker v-model="value2" type="month" :placeholder="$t(\'dateDemo.samples2.monthPlaceholder\')"></vue-date-picker>\n<span class="demonstration">{{$t("dateDemo.samples2.yearLabel")}}</span>\n<vue-date-picker v-model="value3" type="year" :placeholder="$t(\'dateDemo.samples2.yearPlaceholder\')"></vue-date-picker>\n\n<script>\n  new Vue({\n    data: function(){\n      return {\n        value1: "",\n        value2: "",\n        value3: ""\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"date3",label:"dateDemo.samples3.label",description:"dateDemo.samples3.description",template:'<div class="source"><vue-row class="margin-bottom20" type="flex" justify="center"><vue-col :span="6"><span class="demonstration">{{$t(\'dateDemo.samples3.defaultLabel\')}}</span></vue-col><vue-col :span="16"><vue-date-picker v-model="value1" type="daterange" :placeholder="$t(\'dateDemo.samples3.defaultPlaceholder\')"></vue-date-picker></vue-col></vue-row><vue-row type="flex" justify="center"><vue-col :span="6"><span class="demonstration">{{$t(\'dateDemo.samples3.optionsLabel\')}}</span></vue-col><vue-col :span="16"><vue-date-picker v-model="value2" align="right" type="daterange" :placeholder="$t(\'dateDemo.samples3.defaultPlaceholder\')" :picker-options="pickerOptions1"></vue-date-picker></vue-col></vue-row></div>',parameter:{data:function(){return{value1:"",value2:"",pickerOptions1:{shortcuts:[{text:this.$t("dateDemo.samples3.lastWeekLabel"),onClick:function(e){var n=new Date,t=VueUtil.addDate(n,-1,"week");e.$emit("pick",[t,n])}},{text:this.$t("dateDemo.samples3.lastMonthLabel"),onClick:function(e){var n=new Date,t=VueUtil.addDate(n,-1,"month");e.$emit("pick",[t,n])}},{text:this.$t("dateDemo.samples3.last3MonthLabel"),onClick:function(e){var n=new Date,t=VueUtil.addDate(n,-3,"month");e.$emit("pick",[t,n])}}]}}}},code:'<span class="demonstration">{{$t(\'dateDemo.samples3.defaultLabel\')}}</span>\n<vue-date-picker v-model="value1" type="daterange" :placeholder="$t(\'dateDemo.samples3.defaultPlaceholder\')"></vue-date-picker>\n<span class="demonstration">{{$t(\'dateDemo.samples3.optionsLabel\')}}</span>\n<vue-date-picker v-model="value2" align="right" type="daterange" :placeholder="$t(\'dateDemo.samples3.defaultPlaceholder\')" :picker-options="pickerOptions1"></vue-date-picker>\n\n<script>\n  new Vue({\n    data: function(){\n      return {\n        value1: "",\n        value2: "",\n        pickerOptions1: {\n          shortcuts: [{\n            text: this.$t("dateDemo.samples3.lastWeekLabel"),\n            onClick: function(picker) {\n              var end = new Date;\n              var start = VueUtil.addDate(end, -1, "week");\n              picker.$emit("pick", [start, end]);\n            }\n          }, {\n            text: this.$t("dateDemo.samples3.lastMonthLabel"),\n            onClick: function(picker) {\n              var end = new Date;\n              var start = VueUtil.addDate(end, -1, "month");\n              picker.$emit("pick", [start, end]);\n            }\n          }, {\n            text: this.$t("dateDemo.samples3.last3MonthLabel"),\n            onClick: function(picker) {\n              var end = new Date;\n              var start = VueUtil.addDate(end, -3, "month");\n              picker.$emit("pick", [start, end]);\n            }\n          }]\n        }\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"date4",label:"Attributes",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"readonly",column2:"dateDemo.samples4.row1column2",column3:"Boolean",column4:"",column5:"true"},{column1:"disabled",column2:"dateDemo.samples4.row2column2",column3:"Boolean",column4:"",column5:"false"},{column1:"editable",column2:"dateDemo.samples4.row21column2",column3:"Boolean",column4:"",column5:"true"},{column1:"clearable",column2:"dateDemo.samples4.row3column2",column3:"Boolean",column4:"",column5:"true"},{column1:"size",column2:"dateDemo.samples4.row4column2",column3:"String",column4:"large, small, mini",column5:""},{column1:"placeholder",column2:"dateDemo.samples4.row5column2",column3:"String",column4:"",column5:"vue.datepicker.selectDate"},{column1:"start-placeholder",column2:"dateDemo.samples4.row51column2",column3:"String",column4:"",column5:""},{column1:"end-placeholder",column2:"dateDemo.samples4.row52column2",column3:"String",column4:"",column5:""},{column1:"type",column2:"dateDemo.samples4.row6column2",column3:"String",column4:"year/month/date/week/datetime/datetimerange/daterange/monthrange",column5:"date"},{column1:"format",column2:"dateDemo.samples4.row7column2",column3:"String",column4:"dateDemo.samples4.row7column4",column5:"yyyy-MM-dd"},{column1:"align",column2:"dateDemo.samples4.row8column2",column3:"String",column4:"left, center, right",column5:"left"},{column1:"popper-class",column2:"dateDemo.samples4.row9column2",column3:"String",column4:"",column5:""},{column1:"range-separator",column2:"dateDemo.samples4.row10column2",column3:"String",column4:"",column5:""},{column1:"default-value",column2:"dateDemo.samples4.row11column2",column3:"Date",column4:"dateDemo.samples4.row11column4",column5:""},{column1:"value-format",column2:"dateDemo.samples4.row111column2",column3:"String",column4:"",column5:""},{column1:"picker-options",column2:"dateDemo.samples4.row12column2",column3:"Object",column4:"",column5:"{}"},{column1:"show-mobile-ui",column2:"dateDemo.samples8.row1column2",column3:"Boolean",column4:"",column5:"true"},{column1:"value",column2:"dateDemo.samples8.row2column2",column3:"Date | Array",column4:"",column5:""},{column1:"text-align",column2:"dateDemo.samples8.row3column2",column3:"String",column4:"",column5:""},{column1:"text-align-range",column2:"dateDemo.samples8.row3column3",column3:"String",column4:"",column5:"center"},{column1:"min-date",column2:"dateDemo.samples8.row4column2",column3:"Date",column4:"",column5:""},{column1:"max-date",column2:"dateDemo.samples8.row4column3",column3:"Date",column4:"",column5:""},{column1:"prefix-icon",column2:"dateDemo.samples8.row5column2",column3:"String",column4:"",column5:""},{column1:"clear-icon",column2:"dateDemo.samples8.row5column3",column3:"String",column4:"",column5:"vue-icon-close"},{column1:"title",column2:"dateDemo.samples8.row8column2",column3:"String",column4:"",column5:""},{column1:"start-title",column2:"dateDemo.samples8.row9column2",column3:"String",column4:"",column5:""},{column1:"end-title",column2:"dateDemo.samples8.row9column3",column3:"String",column4:"",column5:""},{column1:"confirm-button-text",column2:"dateDemo.samples8.row10column2",column3:"String",column4:"",column5:""},{column1:"cancel-button-text",column2:"dateDemo.samples8.row10column3",column3:"String",column4:"",column5:""},{column1:"item-height",column2:"dateDemo.samples8.row12column2",column3:"String | Number",column4:"",column5:""},{column1:"visible-item-count",column2:"dateDemo.samples8.row13column2",column3:"Number",column4:"",column5:"5"},{column1:"swipe-duration",column2:"dateDemo.samples8.row14column2",column3:"String | Number",column4:"",column5:"1000"},{column1:"formatter",column2:"dateDemo.samples8.row15column2",column3:"Function",column4:"",column5:""}]}}},notshowmeta:!0},{id:"date5",label:"Picker Options",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"shortcuts",column2:"dateDemo.samples5.row1column2",column3:"Object / Array",column4:"",column5:""},{column1:"disabledDate",column2:"dateDemo.samples5.row2column2",column3:"Function",column4:"",column5:""},{column1:"firstDayOfWeek",column2:"dateDemo.samples5.row3column2",column3:"Number",column4:"1~7",column5:"7"},{column1:"onPick",column2:"dateDemo.samples5.row4column2",column3:"Function({ maxDate, minDate })",column4:"",column5:""}]}}},notshowmeta:!0},{id:"date6",label:" Shortcuts",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"text",column2:"dateDemo.samples6.row1column2",column3:"String",column4:"",column5:""},{column1:"onClick",column2:"dateDemo.samples6.row2column2",column3:"Function",column4:"",column5:""}]}}},notshowmeta:!0},{id:"date7",label:"Events",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"change",column2:"dateDemo.samples7.row1column2",column3:"dateDemo.samples7.row1column3"},{column1:"confirm",column2:"dateDemo.samples8.row16column2",column3:"dateDemo.samples8.row16column3"},{column1:"cancel",column2:"dateDemo.samples8.row17column2",column3:"dateDemo.samples8.row16column3"}]}}},notshowmeta:!0},{id:"date8",label:"Methods",template:'<method-table :data="tableData"></method-table>',parameter:{data:function(){return{tableData:[{column1:"focus",column2:"inputDemo.samples16.row1column2",column3:""}]}}},notshowmeta:!0}]};e.exports=l},"./demo/DateTimeDemo.js":
/*!******************************!*\
  !*** ./demo/DateTimeDemo.js ***!
  \******************************/
/*! no static exports found */function(e,n,t){"use strict";var l={path:"/dateTime",name:"dateTime",head:{label:"datetimeDemo.label",description:"datetimeDemo.description"},samples:[{id:"dateTime1",label:"datetimeDemo.samples1.label",description:"datetimeDemo.samples1.description",template:'<div class="source"><vue-row class="margin-bottom20" type="flex" justify="center"><vue-col :span="6"><span class="demonstration">{{$t(\'datetimeDemo.samples1.defaultLabel\')}}</span></vue-col><vue-col :span="16"><vue-date-picker v-model="value1" type="datetime" :placeholder="$t(\'datetimeDemo.samples1.defaultPlaceholder\')"></vue-date-picker></vue-col></vue-row><vue-row type="flex" justify="center"><vue-col :span="6"><span class="demonstration">{{$t(\'datetimeDemo.samples1.optionsLabel\')}}</span></vue-col><vue-col :span="16"><vue-date-picker v-model="value2" align="right" type="datetime" :placeholder="$t(\'datetimeDemo.samples1.defaultPlaceholder\')" :picker-options="pickerOptions1"></vue-date-picker></vue-col></vue-row></div>',parameter:{data:function(){return{pickerOptions1:{shortcuts:[{text:this.$t("datetimeDemo.samples1.todayLabel"),onClick:function(e){e.$emit("pick",new Date)}},{text:this.$t("datetimeDemo.samples1.yesterdayLabel"),onClick:function(e){var n=VueUtil.addDate(new Date,-1);e.$emit("pick",n)}},{text:this.$t("datetimeDemo.samples1.weekAgoLabel"),onClick:function(e){var n=VueUtil.addDate(new Date,-1,"week");e.$emit("pick",n)}}]},value1:"",value2:""}}},code:'<span class="demonstration">{{$t(\'datetimeDemo.samples1.defaultLabel\')}}</span>\n<vue-date-picker v-model="value1" type="datetime" :placeholder="$t(\'datetimeDemo.samples1.defaultPlaceholder\')"></vue-date-picker>\n<span class="demonstration">{{$t(\'datetimeDemo.samples1.optionsLabel\')}}</span>\n<vue-date-picker v-model="value2" align="right" type="datetime" :placeholder="$t(\'datetimeDemo.samples1.defaultPlaceholder\')" :picker-options="pickerOptions1"></vue-date-picker>\n\n<script>\n  new Vue({\n    data: function(){\n      return {\n        pickerOptions1: {\n          shortcuts: [{\n            text: this.$t("datetimeDemo.samples1.todayLabel"),\n            onClick: function(picker) {\n              picker.$emit("pick", new Date);\n            }\n          }, {\n            text: this.$t("datetimeDemo.samples1.yesterdayLabel"),\n            onClick: function(picker) {\n              var date = VueUtil.addDate((new Date), -1);\n              picker.$emit("pick", date);\n            }\n          }, {\n            text: this.$t("datetimeDemo.samples1.weekAgoLabel"),\n            onClick: function(picker) {\n              var date = VueUtil.addDate((new Date), -1, "week");\n              picker.$emit("pick", date);\n            }\n          }]\n        },\n        value1: "",\n        value2: ""\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"dateTime2",label:"datetimeDemo.samples2.label",description:"datetimeDemo.samples2.description",template:'<div class="source"><vue-row class="margin-bottom20" type="flex" justify="center"><vue-col :span="6"><span class="demonstration">{{$t(\'datetimeDemo.samples2.defaultLabel\')}}</span></vue-col><vue-col :span="16"><vue-date-picker v-model="value1" type="datetimerange" :placeholder="$t(\'datetimeDemo.samples2.defaultPlaceholder\')"></vue-date-picker></vue-col></vue-row><vue-row type="flex" justify="center"><vue-col :span="6"><span class="demonstration">{{$t(\'datetimeDemo.samples2.optionsLabel\')}}</span></vue-col><vue-col :span="16"><vue-date-picker v-model="value2" align="right" type="datetimerange" :placeholder="$t(\'datetimeDemo.samples2.defaultPlaceholder\')" :picker-options="pickerOptions1"></vue-date-picker></vue-col></vue-row></div>',parameter:{data:function(){return{pickerOptions1:{shortcuts:[{text:this.$t("datetimeDemo.samples2.lastWeekLabel"),onClick:function(e){var n=new Date,t=VueUtil.addDate(n,-1,"week");e.$emit("pick",[t,n])}},{text:this.$t("datetimeDemo.samples2.lastMonthLabel"),onClick:function(e){var n=new Date,t=VueUtil.addDate(n,-1,"month");e.$emit("pick",[t,n])}},{text:this.$t("datetimeDemo.samples2.last3MonthLabel"),onClick:function(e){var n=new Date,t=VueUtil.addDate(n,-3,"month");e.$emit("pick",[t,n])}}]},value1:[new Date,VueUtil.addDate(new Date,5,"week")],value2:""}}},code:'<span class="demonstration">{{$t(\'datetimeDemo.samples2.defaultLabel\')}}</span>\n<vue-date-picker v-model="value1" type="datetimerange" :placeholder="$t(\'datetimeDemo.samples2.defaultPlaceholder\')"></vue-date-picker>\n<span class="demonstration">{{$t(\'datetimeDemo.samples2.optionsLabel\')}}</span>\n<vue-date-picker v-model="value2" align="right" type="datetimerange" :placeholder="$t(\'datetimeDemo.samples2.defaultPlaceholder\')" :picker-options="pickerOptions1"></vue-date-picker>\n\n<script>\n  new Vue({\n    data: function(){\n      return {\n        pickerOptions1: {\n          shortcuts: [{\n            text: this.$t("datetimeDemo.samples2.lastWeekLabel"),\n            onClick: function(picker) {\n              var end = new Date;\n              var start = VueUtil.addDate(end, -1, "week");\n              picker.$emit("pick", [start, end]);\n            }\n          }, {\n            text: this.$t("datetimeDemo.samples2.lastMonthLabel"),\n            onClick: function(picker) {\n              var end = new Date;\n              var start = VueUtil.addDate(end, -1, "month");\n              picker.$emit("pick", [start, end]);\n            }\n          }, {\n            text: this.$t("datetimeDemo.samples2.last3MonthLabel"),\n            onClick: function(picker) {\n              var end = new Date;\n              var start = VueUtil.addDate(end, -3, "month");\n              picker.$emit("pick", [start, end]);\n            }\n          }]\n        },\n        value1: [new Date, VueUtil.addDate((new Date), 5, "week")],\n        value2: ""\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"dateTime3",label:"Attributes",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"readonly",column2:"datetimeDemo.samples3.row1column2",column3:"Boolean",column4:"",column5:"true"},{column1:"disabled",column2:"datetimeDemo.samples3.row2column2",column3:"Boolean",column4:"",column5:"false"},{column1:"editable",column2:"datetimeDemo.samples3.row21column2",column3:"Boolean",column4:"",column5:"true"},{column1:"clearable",column2:"datetimeDemo.samples3.row3column2",column3:"Boolean",column4:"",column5:"true"},{column1:"size",column2:"datetimeDemo.samples3.row4column2",column3:"String",column4:"large, small, mini",column5:""},{column1:"placeholder",column2:"datetimeDemo.samples3.row5column2",column3:"String",column4:"",column5:""},{column1:"start-placeholder",column2:"datetimeDemo.samples3.row51column2",column3:"String",column4:"",column5:""},{column1:"end-placeholder",column2:"datetimeDemo.samples3.row52column2",column3:"String",column4:"",column5:""},{column1:"time-arrow-control",column2:"datetimeDemo.samples3.row54column2",column3:"boolean",column4:"",column5:"false"},{column1:"type",column2:"datetimeDemo.samples3.row6column2",column3:"String",column4:"year/month/date/week/datetime/datetimerange/daterange",column5:"date"},{column1:"format",column2:"datetimeDemo.samples3.row7column2",column3:"String",column4:"datetimeDemo.samples3.row7column4",column5:"yyyy-MM-dd"},{column1:"align",column2:"datetimeDemo.samples3.row8column2",column3:"String",column4:"left, center, right",column5:"left"},{column1:"popper-class",column2:"datetimeDemo.samples3.row9column2",column3:"String",column4:"",column5:""},{column1:"range-separator",column2:"datetimeDemo.samples3.row10column2",column3:"String",column4:"",column5:""},{column1:"value-format",column2:"datetimeDemo.samples3.row56column2",column3:"string",column4:"",column5:""},{column1:"picker-options",column2:"datetimeDemo.samples3.row11column2",column3:"Object",column4:"",column5:"{}"},{column1:"show-mobile-ui",column2:"dateDemo.samples8.row1column2",column3:"Boolean",column4:"",column5:"true"},{column1:"value",column2:"dateDemo.samples8.row2column2",column3:"Date | Array",column4:"",column5:""},{column1:"text-align",column2:"dateDemo.samples8.row3column2",column3:"String",column4:"",column5:""},{column1:"text-align-range",column2:"dateDemo.samples8.row3column3",column3:"String",column4:"",column5:"center"},{column1:"min-date",column2:"dateDemo.samples8.row4column2",column3:"Date",column4:"",column5:""},{column1:"max-date",column2:"dateDemo.samples8.row4column3",column3:"Date",column4:"",column5:""},{column1:"prefix-icon",column2:"dateDemo.samples8.row5column2",column3:"String",column4:"",column5:""},{column1:"clear-icon",column2:"dateDemo.samples8.row5column3",column3:"String",column4:"",column5:"vue-icon-close"},{column1:"title",column2:"dateDemo.samples8.row8column2",column3:"String",column4:"",column5:""},{column1:"start-title",column2:"dateDemo.samples8.row9column2",column3:"String",column4:"",column5:""},{column1:"end-title",column2:"dateDemo.samples8.row9column3",column3:"String",column4:"",column5:""},{column1:"confirm-button-text",column2:"dateDemo.samples8.row10column2",column3:"String",column4:"",column5:""},{column1:"cancel-button-text",column2:"dateDemo.samples8.row10column3",column3:"String",column4:"",column5:""},{column1:"item-height",column2:"dateDemo.samples8.row12column2",column3:"String | Number",column4:"",column5:""},{column1:"visible-item-count",column2:"dateDemo.samples8.row13column2",column3:"Number",column4:"",column5:"5"},{column1:"swipe-duration",column2:"dateDemo.samples8.row14column2",column3:"String | Number",column4:"",column5:"1000"},{column1:"formatter",column2:"dateDemo.samples8.row15column2",column3:"Function",column4:"",column5:""}]}}},notshowmeta:!0},{id:"dateTime4",label:"Picker Options",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"shortcuts",column2:"datetimeDemo.samples4.row1column2",column3:"Object/array",column4:"",column5:""},{column1:"disabledDate",column2:"datetimeDemo.samples4.row2column2",column3:"Function",column4:"",column5:""}]}}},notshowmeta:!0},{id:"dateTime5",label:" Shortcuts",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"text",column2:"datetimeDemo.samples5.row1column2",column3:"String",column4:"",column5:""},{column1:"onClick",column2:"datetimeDemo.samples5.row2column2",column3:"Function",column4:"",column5:""}]}}},notshowmeta:!0},{id:"dateTime6",label:"Events",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"change",column2:"datetimeDemo.samples6.row1column2",column3:"datetimeDemo.samples6.row1column3"},{column1:"confirm",column2:"dateDemo.samples8.row16column2",column3:"dateDemo.samples8.row16column3"},{column1:"cancel",column2:"dateDemo.samples8.row17column2",column3:"dateDemo.samples8.row16column3"}]}}},notshowmeta:!0},{id:"dateTime7",label:"Methods",template:'<method-table :data="tableData"></method-table>',parameter:{data:function(){return{tableData:[{column1:"focus",column2:"inputDemo.samples16.row1column2",column3:""}]}}},notshowmeta:!0}]};e.exports=l},"./demo/DemoLangEn.js":
/*!****************************!*\
  !*** ./demo/DemoLangEn.js ***!
  \****************************/
/*! no static exports found */function(e,n,t){"use strict";e.exports={main:{title1:"Guide",title2:"Components",title3:"Example",title4:"Feedback",title5:"Extensions",title6:"Gantt Chart",title7:"Charts",title8:"Excel Export/Import",title9:"Mobile Component",radiolabel1:"中",radiolabel2:"日",radiolabel3:"EN",code:"代码",line1:"网站快速成型工具",line21:"只为守护世界和平!",line22:"只为让你少加班!",line23:"只为成就这样的你: ",line24:"产品设计师",line25:"交互设计师",line26:"视觉设计师",line27:"产品经理",line28:"前端工程师",table:{method:"方法名",description:"概述",usage:"用法",parameters:"参数",type:"类型",acceptedValues:"可选值",defaultValue:"默认值",event:"事件",name:"名称"}},installDemo:{label:"Quick Start",samples1:{label:"Installation",description:"在页面上引入 js 和 css 文件即可开始使用."},samples6:{label:"npm Install",description:"Installing with npm is recommended and it works seamlessly with webpack."},samples2:{description:"通过 vue 组件可以很容易地写出一个 Hello world 页面."},samples3:{description:"组件内封装的一些常用方法",row1column2:"判断参数是否定义(undefined或null状态为未定义)",row2column2:"判断参数是否为String类型",row3column2:"判断参数是否为Number类型",row4column2:"判断参数是否为Boolean类型",row5column2:"判断参数是否为File类型",row6column2:"判断参数是否为Object类型",row7column2:"判断参数是否为Array类型",row8column2:"判断参数是否为Function类型",row9column2:"判断参数是否为Date类型",row10column2:"判断参数是否为NodeList类型",row11column2:"判断参数是否为Element类型",row12column2:"判断参数是否为VNode类型",row13column2:"参数转换为String类型并返回",row14column2:"参数转换为Date类型并返回, 如果失败返回null",row15column2:"将参数按指定日期格式转换为String类型并返回, 如果失败返回null",row16column2:"将参数按指定日期格式转换为Date类型并返回, 如果失败返回null",row17column2:"根据年月获取当月的天数, 失败返回null",row18column2:"根据日期获取当月第一天是星期几, 失败返回null",row19column2:"根据日期获取本周是第几周, 失败返回null",row20column2:"根据类型返回指定日期的向前或向后日期, 如果失败返回null",row21column2:"对包含length属性的对象进行循环, 类似forEach方法",row22column2:"循环对象的可枚举属性",row23column2:'去除参数的首尾空格并返回, 参数不为String时返回""',row24column2:"将来自一个或多个源对象中的值复制到一个目标对象, 只复制可枚举属性",row25column2:"将来自一个或多个源数组中的值复制到一个目标数组",row26column2:"对一个元素绑定事件",row27column2:"对一个元素移除事件",row28column2:"对一个元素绑定事件, 触发后移除该事件",row29column2:"判断元素是否存在某一名称的class",row30column2:"对元素追加某一名称的class",row31column2:"对元素移除某一名称的class",row32column2:"获取元素某一属性的style, 如果失败返回null",row33column2:"设置元素某一属性的style",row34column2:"根据名称获取Cookie, 如果失败返回null",row35column2:"根据名称设置Cookie",row36column2:"根据名称移除Cookie",row37column2:"函数节流, 当调用时刻大于等于执行周期则执行该动作，然后进入下一个新周期, 默认16ms为一周期",row38column2:"函数防抖, 当调用时刻大于等于执行周期则执行该动作，若在周期内又调用此动作则进入新一个周期, 默认16ms为一周期",row39column2:"对一个元素绑定resize事件, 内置函数防抖",row40column2:"对一个元素移除resize事件",row41column2:"DOM树上移除某个节点",row42column2:"DOM树上对某个节点插入一个子节点",row43column2:"获取浏览器竖滚动条宽度",row44column2:"对一个元素绑定接触屏幕时触发事件",row45column2:"对一个元素绑定屏幕上移动时触发事件",row46column2:"对一个元素绑定屏幕上移开时触发事件",row47column2:"对一个元素移除接触屏幕时触发事件",row48column2:"对一个元素移除屏幕上移动时触发事件",row49column2:"对一个元素移除屏幕上移开时触发事件",row50column2:"浏览器全屏, 类似F11效果",row51column2:"获取系统信息",row52column2:"设置显示的语言",row53column2:"设置语言内容",row54column2:"VueUtil.config 是一个对象，包含 VueUtil 的全局配置。",row55column2:"获取当前画面控件的最大zindex",row56column2:"对一个元素绑定hover事件",row57column2:"对一个元素移除hover事件",row58column2:"将参数按指定数据格式转换为String类型并返回, 如果失败返回null",row59column2:"深拷贝一个对象"},samples4:{label:"Vue 基础知识",description:"强烈建议先学习下Vue基本用法和思想。",row1column2:"事件绑定",row2column2:"事件解除",row3column2:"绑定只触发一次的事件",row4column2:"判断是否存在class",row5column2:"追加class",row6column2:"移除class",row7column2:"获取style值",row8column2:"设置style值",row9column2:'去除src开始和末尾的空格, 如src类型不为string则返回""',row10column2:"将src1, src2, src3...合并到dest中, 返回值为合并后的dest",row11column2:"绑定元素尺寸变动时的事件",row12column2:"移除元素尺寸变动时的事件",row13column2:'将string按format转换为date型, 转换失败返回false, format默认为"yyyy-MM-dd"',row14column2:'将date按format转换为string型, 转换失败返回"", format默认为"yyyy-MM-dd"',row15column2:"判断src是否可以转换为date型, 返回true/false",row16column2:"将src转换为date型, 失败返回null",row17column2:"设置组件要显示的语言",row18column2:'设置组件多语言(可参看"I18n 国际化")',row19column2:"从DOM上移除node",row20column2:"把node元素插入fatherNode元素的第position个位置",row21column2:"把数组arr转换为Object型",row22column2:"使页面全屏(效果类似F11, 必须使用事件触发)",row23column2:"返回src的上一月",row24column2:"返回src的下一月"},samples5:{description:"异步读取.vue文件"}},i18nDemo:{label:"I18n",samples1:{label:"基本用法",description:"使用 VueUtil.setLocale() 来设置多语言, 使用 VueUtil.setLang() 来设置显示的语言, 在Vue组件内部可以使用 $t() 来获取多语言的值, 在Vue组件外部可以使用 Vue.t() 来获取多语言的值;"},samples2:{label:"Compatible with vue-i18n@5.x",description:"Viy is compatible with vue-i18n@5.x, which makes multilingual switching even easier."},samples3:{label:"Compatible with vue-i18n@6.x",description:"You need to manually handle it for compatibility with 6.x."}},ajaxDemo:{label:"Ajax",samples1:{label:"基本用法",description:"可以基于全局的Vue对象使用http, 也可以基于某个控件使用http."},samples2:{label:"支持的HTTP方法",description:"请求API是按照REST风格设计的, 它提供了7种请求API"},samples3:{row1column3:"请求的URL",row2column3:'请求的HTTP方法, 例如："GET", "POST"或其他HTTP方法',row4column3:"请求的URL参数对象",row6column3:"单位为毫秒的请求超时时间 (0 表示无超时时间)",row7column3:"请求发送前的处理函数, 类似于jQuery的beforeSend函数",row8column3:"ProgressEvent回调处理函数",row9column3:"表示跨域请求时是否需要使用凭证",row10column3:"发送PUT, PATCH, DELETE请求时以HTTP POST的方式发送, 并设置请求头的X-HTTP-Method-Override",row11column3:"将request body以application/x-www-form-urlencoded content type发送"}},layoutDemo:{label:"Layout",description:"通过基础的 24 分栏, 迅速简便地创建布局.",samples1:{label:"基础布局",description:"通过 row 和 col 组件, 并通过 col 组件的 span 属性我们就可以自由地组合布局."},samples2:{label:"分栏间隔",description:"row 组件 提供 gutter 属性来指定每一栏之间的间隔, 默认间隔为 0."},samples3:{label:"混合布局",description:"通过基础的 1/24 分栏任意扩展组合形成较为复杂的混合布局."},samples4:{label:"对齐方式",description:"将 type 属性赋值为 'flex', 可以启用 flex 布局, 并可通过 justify 属性来指定 start, center, end, space-between, space-around 其中的值来定义子元素的排版方式."},samples5:{label:"响应式布局",description:"参照了 Bootstrap 的 响应式设计, 预设了四个响应尺寸：xs、sm、md 和 lg."},samples6:{row1column2:"栅格间隔",row2column2:"布局模式, 可选 flex",row3column2:"flex 布局下的水平排列方式",row4column2:"flex 布局下的垂直排列方式"},samples7:{row1column2:"栅格占据的列数",row2column2:"栅格左侧的间隔格数",row3column2:"栅格向右移动格数",row4column2:"栅格向左移动格数",row5column2:"'<768px' 响应式栅格数或者栅格属性对象",row6column2:"'≥768px' 响应式栅格数或者栅格属性对象",row7column2:"'≥992px' 响应式栅格数或者栅格属性对象",row8column2:"'≥1200px' 响应式栅格数或者栅格属性对象",row5column3:"Number / Object (例如： {span: 4, offset: 4})",row6column3:"Number / Object (例如： {span: 4, offset: 4})",row7column3:"Number / Object (例如： {span: 4, offset: 4})",row8column3:"Number / Object (例如： {span: 4, offset: 4})"}},iconDemo:{label:"Icon",description:"常用的图标集合",samples1:{label:"使用方法",description:"直接通过设置类名为 vue-icon-iconName 来使用即可."},samples2:{label:"图标集合"}},buttonDemo:{label:"Button",description:"常用的操作按钮.",defaultButton:"默认按钮",mainButton:"主要按钮",textButton:"文字按钮",circleButton:"圆角按钮",successButton:"成功按钮",warningButton:"警告按钮",dangerButton:"危险按钮",infoButton:"信息按钮",samples1:{label:"基础用法",description:"Button 组件默认提供7种主题, 由type属性来定义, 默认为default."},samples2:{label:"有颜色倾向",description:"设置了不同的type属性对应的样式.设置plain属性, 它接受一个Boolean.注意, 在该情况下, type虽然可以为text, 但是是没有意义的, 会显示为text button的样式.",defaultLabel:"默认显示颜色",hoverLabel:"hover 显示颜色"},samples3:{label:"禁用状态",description:"设置disabled属性即可, 它接受一个Boolean, true为禁用."},samples4:{label:"图标按钮",description:"设置icon属性即可, 也可以设置在文字右边的 icon , 只要使用i标签即可, 可以使用自定义图标."},samples5:{label:"按钮组",description:"使用<vue-button-group>标签来嵌套你的按钮"},samples6:{label:"加载中",description:"设置loading属性为true即可."},samples7:{label:"不同尺寸",description:"通过设置size属性来配置它们."},samples8:{row1column2:"尺寸",row2column2:"类型",row3column2:"是否圆角按钮",row4column2:"是否朴素按钮",row5column2:"是否加载中状态",row6column2:"是否禁用状态",row7column2:"图标",row8column2:"自动获取焦点",row9column2:"原生type属性"}},inputDemo:{label:"Input",description:"通过鼠标或键盘输入字符.",defaultPlaceholder:"请输入内容",selectPlaceholder:"请选择",samples1:{label:"基础用法"},samples2:{label:"禁用状态",description:"设置disabled属性即可, 它接受一个Boolean, true为禁用."},samples3:{label:"带icon的输入框",description:"可以通过icon属性在input组件尾部增加显示图标, 可以通过on-icon-click钩子函数来在点击图标后执行需要的逻辑."},samples4:{label:"文本域",description:"通过将type属性的值指定为textarea.文本域高度可通过rows属性控制, "},samples5:{label:"可自适应文本高度的文本域",description:"通过设置 autosize 属性可以使得文本域的高度能够根据文本内容自动进行调整, 并且 autosize 还可以设定为一个对象, 指定最小行数和最大行数."},samples6:{label:"复合型输入框",description:"可前置或后置元素, 一般为标签或按钮.可通过slot来指定在input中前置或者后置内容.",selectLabel1:"餐厅名",selectLabel2:"订单号",selectLabel3:"用户电话"},samples7:{label:"尺寸",description:"可通过size属性指定输入框的尺寸, 除了默认的大小外, 还提供了large、small和 mini三种尺寸."},samples8:{label:"带输入建议",description:"autocomplete是一个可带输入建议的输入框组件, fetch-suggestions是一个返回输入建议的方法属性, 如 querySearch(queryString, cb), 在该方法中你可以在你的输入建议数据准备好时通过cb(data)返回到 autocomplete组件中.",label1:"激活即列出输入建议",label2:"输入后匹配输入建议"},samples9:{label:"自定义格式",description:"设置cleave属性即可, 它接受一个Object."},samples10:{row1column2:"类型",row2column2:"绑定值",row3column2:"最大输入长度",row4column2:"最小输入长度",row5column2:"占位文本",row6column2:"禁用",row7column2:'输入框尺寸, 只对type!="textarea"时有效',row8column2:"输入框前部图标",row9column2:"输入框尾部图标",row10column2:'输入框行数, 只对type=="textarea"有效',row11column2:'自定义格式, 只对type!="textarea"有效, 更多格式请参考下表',row12column2:'自适应内容高度, 只对type=="textarea"有效, 可传入对象, 如 {minRows: 2, maxRows: 6}',row13column2:"原生属性, 自动补全",row14column2:"原生属性",row15column2:"原生属性, 是否只读",row16column2:"原生属性, 设置最大值",row17column2:"原生属性, 设置最小值",row18column2:"原生属性, 设置输入字段的合法数字间隔",row19column2:'控制是否能被用户缩放, 只对 type="textarea" 有效',row20column2:"原生属性，自动获取焦点",row21column2:"文本对齐",row22column2:"原生属性, 所属的一个或多个表单的id",row23column2:"点击 Input内的图标的钩子函数",row24column2:"键盘弹出类型，仅在移动端上使用"},samples11:{row1column2:"点击Input内的图标时触发",row2column2:"在Input失去焦点时触发",row3column2:"在Input获得焦点时触发",row4column2:"在Input值改变时触发"},samples12:{row1column2:"占位文本",row2column2:"禁用",row3column2:"必填值输入绑定值",row4column2:"通过该参数指定自定义的输入建议列表项的组件名",row5column2:"返回输入建议的方法, 仅当你的输入建议数据resolve时, 通过调用callback(data:[])来返回它",row6column2:"Autocomplete下拉列表的类名",row7column2:"是否在输入框focus时显示建议列表",row8column2:"点击图标的回调函数",row9column2:"输入框尾部图标",row10column2:"配置选项, 具体见下表"},samples13:{row1column2:"指定选项的值为选项对象的某个属性值",row2column2:"指定选项标签为选项对象的某个属性值"},samples14:{row1column2:"点击选中建议项时触发"},samples15:{row1column2:"是否信用卡格式,启用后会根据IIN自动检测信用卡类型。",row2column2:"在信用卡类型改变后触发的一个回调函数。",row3column2:"是否启用手机格式, 必须与phoneRegionCode一起使用",row4column2:"各国地区的电话号码格式编码, 编码请参考 ISO 3166-1 alpha-2",row5column2:"是否启用日期格式",row6column2:"通过数组来定义日期格式",row7column2:"是否启用数字格式",row8column2:"分隔符分组样式",row9column2:"设置几位整数部分",row10column2:"设置几位小数部分",row11column2:"小数点样式",row12column2:"是否只能是正数",row13column2:"根据数组值来格式化输入位数",row14column2:"设置分隔符",row15column2:"使用多个分隔符",row16column2:"在开始处预设的值,它不能被删除或更改",row17column2:"获取原值时预设的值是否去除",row18column2:"是否只能输入数字(0~9)",row19column2:"是否转换为大写字母",row20column2:"是否转换为小写字母",row21column2:"自定义格式"},samples16:{row1column2:"手动聚焦"}},dateDemo:{label:"DatePicker",description:"用于选择或输入日期",samples1:{label:"基础用法",description:"快捷选项需配置picker-options对象中的shortcuts, 禁用日期通过disabledDate设置.",defaultLabel:"默认",optionsLabel:"带快捷选项",defaultPlaceholder:"选择日期",todayLabel:"今天",yesterdayLabel:"昨天",weekAgoLabel:"上周"},samples2:{label:"其他日期单位",description:"基本单位由type属性指定",weekLabel:"周",weekPlaceholder:"选择周",weekFormat:"yyyy 第 WW 周",monthLabel:"月",monthPlaceholder:"选择月",yearLabel:"年",yearPlaceholder:"选择年"},samples3:{label:"选择日期范围",description:"可在一个选择器中便捷地选择一个时间范围.",defaultLabel:"默认",optionsLabel:"带快捷选项",defaultPlaceholder:"选择日期范围",lastWeekLabel:"最近一周",lastMonthLabel:"最近一个月",last3MonthLabel:"最近三个月"},samples4:{row1column2:"是否只读(PC only available)",row2column2:"是否禁用",row21column2:"文本框可输入(PC only available)",row3column2:"是否显示清除按钮",row4column2:"输入框尺寸",row5column2:"占位文本",row6column2:"显示类型",row7column2:"显示时间日期格式",row7column4:"年:yyyy, 月:MM, 日:dd, 时:HH, 分:mm, 秒:ss, 周:WW",row8column2:"下拉框的对齐方式(PC only available)",row9column2:"下拉框的类名",row10column2:"选择范围时的分隔符",row11column2:"下拉框打开时默认选中的日期(PC only available)",row11column4:"会被new Date()解析",row12column2:"当前选择器特有的选项, 参考下表(PC only available)"},samples5:{row1column2:"设置快捷选项, 需要传入{text, onClick}对象用法参考demo或下表",row2column2:"设置禁用状态, 参数为当前日期, 要求返回 Boolean",row3column2:"周起始日",row4column2:"选中日期后会执行的回调, 只有当 daterange 或 datetimerange 才生效"},samples6:{row1column2:"标题文本",row2column2:'选中后的回调函数, 参数是 vm, 可通过触发 "pick" 事件设置选择器的值.例如 vm.$emit("pick", new Date())'},samples7:{row1column2:"当input的值改变时触发, 返回值和文本框一致",row1column3:"格式化后的值"},samples8:{row1column2:"Display mobile UI or not",row2column2:"Selector currently selected value (using v-model)",row3column2:"Input box text horizontal alignment(Used when show-mobile-ui is true, and type is 'daterange','datetimerange' is invalid)",row3column3:"Range selection input box text horizontal alignment(Used when show-mobile-ui is true, and type is 'daterange','datetimerange' is valid)",row4column2:"Minimum date for selector optional range(Available only when show-mobile-ui is true)",row4column3:"Maximum date for selector optional range(Available only when show-mobile-ui is true)",row5column2:"Settings of icon on the left side of component(Available only when show-mobile-ui is true)",row5column3:"Setting of content clear icon on the right side of component(Available only when show-mobile-ui is true)",row6column2:"Week start date(Available only when show-mobile-ui is true)",row7column2:"Whether to show loading status(Available only when show-mobile-ui is true)",row8column2:"Top bar title(Available only when show-mobile-ui is true)",row9column2:"Top bar title of start date(Available only when show-mobile-ui is true)",row9column3:"Top bar title of end date(Available only when show-mobile-ui is true)",row10column2:"Confirm button text content(Available only when show-mobile-ui is true)",row10column3:"Cancel button text content(Available only when show-mobile-ui is true)",row11column2:"Whether to display the top bar(Available only when show-mobile-ui is true)",row12column2:"Item height(Available only when show-mobile-ui is true)",row13column2:"Number of options visible(Available only when show-mobile-ui is true)",row14column2:"The length of inertial scrolling during rapid sliding, in units of ms(Available only when show-mobile-ui is true)",row15column2:"Option format function(Available only when show-mobile-ui is true)",row16column2:"Triggers when the Confirm button is clicked(Available only when show-mobile-ui is true)",row16column3:"Current value, i.e(value, index)",row17column2:"Triggers when the Cancel button is clicked(Available only when show-mobile-ui is true)"}},timeDemo:{label:"TimePicker",description:"用于选择或输入时间.",samples1:{label:"基础用法",description:"使用vue-time-select时, 通过star、end和step指定可选的起始时间、结束时间和步长; 使用vue-time-picker时, 通过selectableRange限制可选时间范围",timelabel1:"固定时间点",timelabel2:"任意时间点",timePlaceholder1:"选择时间",timePlaceholder2:"任意时间点"},samples2:{label:"时间范围",description:"使用vue-time-select时, 若先选择开始时间, 则结束时间内备选项的状态会随之改变; 使用vue-time-picker时, 添加is-range属性即可选择时间范围",timelabel1:"固定时间范围",timelabel2:"任意时间范围",timePlaceholder1:"起始时间",timePlaceholder2:"结束时间",timePlaceholder3:"选择时间范围"},samples3:{row1column2:"是否只读",row2column2:"是否禁用",row3column2:"是否显示清除按钮",row4column2:"输入框尺寸",row5column2:"占位文本",row6column2:"下拉框的对齐方式",row7column2:"下拉框的类名",row8column2:"当前选择器特有的选项, 参考下表",row9column2:"Minimum number of hours(Available only when show-mobile-ui is true)",row9column3:"Maximum number of hours(Available only when show-mobile-ui is true)",row10column2:"Minimum number of minutes(Available only when show-mobile-ui is true)",row10column3:"Maximum number of minutes(Available only when show-mobile-ui is true)",row11column2:"Minimum number of seconds(Available only when show-mobile-ui is true)",row11column3:"Maximum number of seconds(Available only when show-mobile-ui is true)"},samples4:{row1column2:"开始时间",row2column2:"结束时间",row3column2:"间隔时间",row4column2:"最小时间, 小于该时间的时间段将被禁用",row5column2:"最大时间, 大于该时间的时间段将被禁用"},samples5:{row1column2:'可选时间段, 例如"18:30:00 - 20:30:00"或者传入数组["09:30:00 - 12:00:00", "14:30:00 - 18:30:00"]',row2column2:"时间格式化",row2column4:"时:HH, 分:mm, 秒:ss"},samples6:{row1column2:"当 input 的值改变时触发, 返回值和文本框一致",row1column3:"格式化后的值"}},datetimeDemo:{label:"DateTimePicker",description:"用于选择或输入日期时间",samples1:{label:"基础用法",description:"通过设置type属性为datetime, 即可在同一个选择器里同时进行日期和时间的选择.快捷选项的使用方法与Date Picker相同.",defaultLabel:"默认",optionsLabel:"带快捷选项",defaultPlaceholder:"选择日期时间",todayLabel:"今天",yesterdayLabel:"昨天",weekAgoLabel:"上周"},samples2:{label:"日期和时间范围",description:"设置type为datetimerange即可选择日期和时间范围",defaultLabel:"默认",optionsLabel:"带快捷选项",defaultPlaceholder:"选择时间范围",lastWeekLabel:"最近一周",lastMonthLabel:"最近一个月",last3MonthLabel:"最近三个月"},samples3:{row1column2:"是否只读",row2column2:"是否禁用",row3column2:"是否显示清除按钮",row4column2:"输入框尺寸",row5column2:"占位文本",row6column2:"显示类型",row7column2:"显示时间日期格式",row7column4:"年:yyyy, 月:MM, 日:dd, 时:HH, 分:mm, 秒:ss, 周:WW",row8column2:"下拉框的对齐方式",row9column2:"下拉框的类名",row10column2:"选择范围时的分隔符",row11column2:"当前选择器特有的选项, 参考下表"},samples4:{row1column2:"设置快捷选项, 需要传入{text, onClick}对象用法参考demo或下表",row2column2:"设置禁用状态, 参数为当前日期, 要求返回 Boolean"},samples5:{row1column2:"标题文本",row2column2:'选中后的回调函数, 参数是 vm, 可通过触发 "pick" 事件设置选择器的值.例如 vm.$emit("pick", new Date())'},samples6:{row1column2:"当input的值改变时触发, 返回值和文本框一致",row1column3:"格式化后的值"}},calendarDemo:{label:"Calendar",description:"用于查看或选择日期和事件.",samples1:{label:"基础用法",description:'通过绑定events来绑定事件, 绑定数据为数组且每个元素需包含"date"属性, 通过dayclick事件可获取选择日的日期和事件'},samples2:{row1column2:"要绑定的事件集合",row2column2:"每天显示的事件条数, full calendar时有效",row3column2:'点击"+"时是否显示更多事件, full calendar时有效',row4column2:"是否使用full calendar",row5column2:"日期的class集, full calendar时有效",row6column2:"星期的class集, full calendar时有效",row7column2:"自定义星期的label, full calendar时有效"},samples3:{row1column2:"点击日期时触发",row2column2:"点击事件时触发, full calendar时有效",row3column2:'点击"+"时触发, full calendar时有效'},samples4:{label:"Full Calendar",description:"设置full属性即可",row1column2:"head部的左边内容, full calendar时有效",row2column2:'head部的右边内容, full calendar时有效, 有效时"本月"按钮不显示'},samples5:{row1column2:"月历返回本月, full calendar时有效",row2column2:"获取月历年月(Date型), full calendar时有效"}},imageDemo:{label:"Image",description:"Besides the native features of img, support lazy load, custom placeholder and load failure, etc.",defatltText:"Default",customText:"Custom",samples1:{label:"Basic Usage",description:"Indicate how the image should be resized to fit its container by fit, same as native object-fit."},samples2:{label:"Placeholder",loading:"Loading",description:"Custom placeholder content when image hasn't loaded yet by slot = placeholder"},samples3:{label:"Load Failed",description:"Custom failed content when error occurs to image load by slot = error"},samples4:{label:"Lazy Load",description:"Use lazy load by lazy = true. Image will load until scroll into view when set. You can indicate scroll container that adds scroll listener to by scroll-container. If undefined, will be the nearest parent container whose overflow property is auto or scroll."},samples5:{label:"Image Preview",description:"Allow big image preview by setting preview-src-list prop.If img-label is set, the SRC property is invalid and only img-label content is displayed.",imgLabelText:"Preview big picture"},samples6:{row1column2:"Image source, same as native",row2column2:"Indicate how the image should be resized to fit its container, same as object-fit",row3column2:"Native alt",row4column2:"Native referrerPolicy",row5column2:"Whether to use lazy load",row6column2:"The container to add scroll listener when using lazy load",row6column5:"The nearest parent container whose overflow property is auto or scroll",row7column2:"Allow big image preview",row8column2:"Set image preview z-index",row9column2:"If img-label content is not empty, only the content will be displayed and no picture will be displayed",row10column2:"If the attribute round is true, the image is displayed in a circle"},samples7:{row1column2:"Triggers when image load",row2column2:"Triggers when image load failed"},samples8:{row1column2:"Occupied content of picture not loaded",row2column2:"Content of load failed "}},imageviewerDemo:{label:"ImageViewer",description:"Image preview container, with the original img features, supports image zooming and rotating, PC side click the left and right button to switch pictures, mobile side slide to switch pictures, etc",defatltText:"Default",customText:"Custom",samples1:{label:"Basic usage",description:"You can pass in the pictures you want to preview through URL list."},samples2:{label:"Open the preview image by default",description:"Open the first few pictures of picture preview by default through the active-index attribute"},samples3:{row1column2:"Preview image data",row2column2:"Set z-index for picture preview",row3column2:"Activate the corner value of picture preview",row4column2:"Trigger function of picture switching",row5column2:"Turn off the trigger function of picture preview"}},checkboxDemo:{label:"Checkbox",description:"在一组备选项中进行多选.",samples1:{label:"基础用法",description:"在vue-checkbox元素中定义v-model绑定变量, 单一的checkbox中, 默认绑定变量的值会是Boolean, 选中为true."},samples2:{label:"禁用状态",description:"设置disabled属性即可, 它接受一个Boolean, true为禁用."},samples3:{label:"多选框组",description:"checkbox-group元素能把多个checkbox管理为一组, 只需要在Group中使用v-model绑定Array类型的变量即可. vue-checkbox的label属性是该checkbox对应的值, 若该标签中无内容, 则该属性也充当checkbox按钮后的介绍. label与数组中的元素值相对应, 如果存在指定的值则为选中状态, 否则为不选中."},samples4:{label:"indeterminate 状态",description:"indeterminate属性用以表示checkbox的不确定状态, 一般用于实现全选的效果"},samples5:{label:"按钮样式",description:"只需要把vue-checkbox元素换成vue-checkbox-button元素即可."},samples6:{row1column2:"选中状态的值(只有在checkbox-group或者绑定对象类型为array时有效)",row2column2:"选中时的值",row3column2:"没有选中时的值",row4column2:"原生属性",row5column2:"按钮禁用",row6column2:"当前是否勾选",row7column2:"设置indeterminate状态, 只负责样式控制"},samples7:{row1column2:"按钮组尺寸",row2column2:"按钮激活时的填充色和边框色",row3column2:"按钮激活时的文本颜色",row4column2:"可被勾选的最小数量",row5column2:"可被勾选的最大数量"},samples8:{row1column2:"当绑定值变化时触发的事件"}},radioDemo:{label:"Radio",description:"在一组Option中进行单选.",samples1:{label:"基础用法",description:"选中的条件是绑定的变量值等于label中的值.只需要设置v-model绑定变量, 选中意味着变量的值为相应 Radio label属性的值, label可以是String或者Number."},samples2:{label:"禁用状态",description:"设置disabled属性即可, 它接受一个Boolean, true为禁用."},samples3:{label:"单选框组",description:"结合vue-radio-group元素和子元素vue-radio可以实现单选组, 在vue-radio-group中绑定v-model, 在vue-radio中设置好label即可, 无需再给每一个vue-radio绑定变量, "},samples4:{label:"按钮样式",description:"只需要把vue-radio元素换成vue-radio-button元素即可, "},samples5:{row1column2:"Radio的value",row2column2:"是否禁用",row3column2:"原生属性"},samples6:{row1column2:"按钮组尺寸",row2column2:"按钮激活时的填充色和边框色",row3column2:"按钮激活时的文本颜色"},samples7:{row1column2:"当绑定值变化时触发的事件",row1column3:"选中的Radio label值"},samples8:{row1column2:"Radio的value",row2column2:"是否禁用"}},switchDemo:{label:"Switch",description:"表示两种相互对立的状态间的切换, 多用于触发「开/关」.",samples1:{label:"基础用法",description:"绑定v-model到一个Boolean类型的变量.可以使用on-text属性与off-text属性来设置开关的文字描述, 使用on-color属性与off-color属性来设置开关的背景色"},samples2:{label:"禁用状态",description:"设置disabled属性即可, 它接受一个Boolean, true为禁用."},samples3:{row1column2:"是否禁用",row2column2:"switch的宽度(像素)",row2column5:"58(有文字), 46(无文字)",row3column2:"switch打开时所显示图标的类名, 设置此项会忽略 on-text",row4column2:"switch关闭时所显示图标的类名, 设置此项会忽略 off-text",row5column2:"switch打开时的文字",row6column2:"switch关闭时的文字",row7column2:"switch打开时的背景色",row8column2:"switch关闭时的背景色",row9column2:"switch对应的name属性"},samples4:{row1column2:"switch状态发生变化时的回调函数"}},dropdownDemo:{label:"Dropdown",description:"将动作或菜单折叠到下拉菜单中.",samples1:{label:"基础用法",description:"通过组件slot来设置下拉触发的元素以及需要通过名称为dropdown的slot来设置下拉菜单.默认情况下下拉按钮只要hover即可, 无需点击也会显示下拉菜单."},samples2:{label:"触发对象",description:"设置split-button属性来让触发下拉元素呈现为按钮组, 左边是功能按钮, 右边是触发下拉菜单的按钮, 设置为true即可."},samples3:{label:"触发方式",description:"在trigger属性设置为click即可配置click激活.",hoverLabel:"hover 激活",clickLabel:"click 激活"},samples4:{label:"菜单隐藏方式",description:"下拉菜单默认在点击菜单项后会被隐藏, 将hide-on-click属性默认为false可以关闭此功能."},samples5:{label:"指令事件",description:"点击菜单项后会触发事件, 用户可以通过相应的菜单项 key进行不同的操作."},samples6:{row1column2:"菜单按钮类型, 同Button组件(只在split-button为true的情况下有效)",row2column2:"菜单按钮类型, 同Button组件(只在split-button为true的情况下有效)",row3column2:"下拉触发元素呈现为按钮组",row4column2:"菜单水平对齐方向",row5column2:"触发下拉的行为",row6column2:"是否在点击菜单项后隐藏菜单"},samples7:{row1column2:"split-button为true时, 点击左侧按钮的回调",row2column2:"点击菜单项触发的事件回调",row2column3:"dropdown-item的指令",row3column2:"下拉框出现/隐藏时触发",row3column3:"出现为 true, 隐藏为 false"},samples8:{row1column2:"指令",row2column2:"禁用",row3column2:"显示分割线"}},selectDemo:{label:"Select",description:"当选项过多时, 使用下拉菜单展示并选择内容.",samples1:{label:"基础用法",description:"v-model的值为当前被选中的vue-option的value属性值"},samples2:{label:"有禁用选项",description:"在vue-option中, 设定disabled值为 true, 即可禁用该选项"},samples3:{label:"禁用状态",description:"设置disabled属性即可, 它接受一个Boolean, true为禁用."},samples4:{label:"可清空单选",description:"设置clearable属性, 则可将选择器清空.需要注意的是, clearable属性仅适用于单选"},samples5:{label:"基础多选",description:"设置multiple属性即可启用多选, 此时v-model的值为当前选中值所组成的数组"},samples6:{label:"自定义模板",description:"将自定义的HTML模板插入vue-option的slot中即可."},samples7:{label:"分组",description:"使用vue-option-group对备选项进行分组, 它的label属性为分组名"},samples8:{label:"搜索",description:"为vue-select添加filterable属性即可启用搜索功能.默认情况下, Select会找出所有label属性包含输入值的选项.如果希望使用其他的搜索逻辑, 可以通过传入一个filter-method来实现.filter-method为一个Function, 它会在输入值发生变化时调用, 参数为当前输入值."},samples9:{label:"远程搜索",description:"启用远程搜索, 需要将filterable和remote设置为true, 同时传入一个remote-method.remote-method为一个Function, 它会在输入值发生变化时调用, 参数为当前输入值.",placeholderLabel:"请输入关键词"},samples10:{label:"创建条目",description:"使用allow-create属性即可通过在输入框中输入文字来创建新的条目.注意此时filterable必须为真."},samples11:{row1column2:"是否多选",row2column2:"是否禁用",row3column2:"输入框尺寸",row4column2:"是否可以清空选项, 多选时可全选",row5column2:"多选时用户最多可以选择的项目数, 为0则不限制",row6column2:"原生属性",row7column2:"占位文本",row8column2:"是否可搜索",row9column2:"是否允许用户创建新条目, 需配合filterable使用",row10column2:"自定义搜索方法",row11column2:"是否为远程搜索",row12column2:"远程搜索方法",row13column2:"是否正在从远程获取数据",row14column2:"远程加载时显示的文字",row15column2:"搜索条件无匹配时显示的文字",row16column2:"选项为空时显示的文字",row17column2:"Select下拉框的类名",row18column2:"在输入框按下回车, 选择第一个匹配项.需配合filterable或remote使用",row19column2:"输入框自适应高度"},samples12:{row1column2:"选中值发生变化时触发",row1column3:"目前的选中值",row2column2:"下拉框出现/隐藏时触发",row2column3:"出现为 true, 隐藏为 false",row3column2:"多选模式下移除tag时触发",row3column3:"移除的tag值"},samples13:{row1column2:"分组的组名",row2column2:"是否将该分组下所有选项置为禁用"},samples14:{row1column2:"选项的值",row2column2:"选项的标签, 若不设置则默认与value相同",row3column2:"是否禁用该选项"}},cascaderDemo:{label:"Cascader",description:"当一个数据集合有清晰的层级结构时, 可通过级联选择器逐级查看并选择.",samples1:{label:"基础用法",description:"只需为Cascader的options属性指定选项数组即可渲染出一个级联选择器.通过expand-trigger可以定义展开子级菜单的触发方式. change事件的参数为 Cascader的绑定值：一个由各级菜单的值所组成的数组.",clickLabel:"click 触发子菜单",hoverLabel:"hover 触发子菜单"},samples2:{label:"禁用选项",description:"Cascader会检查数据中每一项的disabled字段是否为true, 如果你的数据中表示禁用含义的字段名不为disabled, 可以通过props属性来指定"},samples3:{label:"仅显示最后一级",description:"属性show-all-levels定义了是否显示完整的路径, 将其赋值为false则仅显示最后一级"},samples4:{label:"默认值",description:"默认值通过数组的方式指定"},samples5:{label:"选择即改变",description:"将change-on-select赋值为true, 点击或移入选项即表示选中该项"},samples6:{label:"动态加载次级选项",description:"利用active-item-change事件, 可以在点击某个option时拉取该option下的子数据"},samples7:{label:"可搜索",description:"将filterable赋值为true即可打开搜索功能",label1:"选择最后一级菜单的选项",label2:"选择任意一级菜单的选项",placeholderLabel:"试试搜索：component"},samples8:{row1column2:"可选项数据源, 键名可通过props属性配置",row2column2:"配置选项, 具体见下表",row3column2:"选中项绑定值",row4column2:"自定义浮层类名",row5column2:"占位文本",row6column2:"是否禁用",row7column2:"是否支持清空选项",row8column2:"次级菜单的展开方式",row9column2:"输入框中是否显示选中值的完整路径",row10column2:"是否可搜索选项",row11column2:"搜索关键词输入的去抖延迟, 毫秒",row12column2:"是否允许选择任意一级的选项",row13column2:"尺寸"},samples9:{row1column2:"指定选项的值为选项对象的某个属性值",row2column2:"指定选项标签为选项对象的某个属性值",row3column2:"指定选项的子选项为选项对象的某个属性值",row4column2:"指定选项的禁用为选项对象的某个属性值",row5column2:"可选参数, 筛选之前的钩子, 参数为输入的值, 若返回false或者返回Promise且被reject, 则停止筛选."},samples10:{row1column2:"当绑定值变化时触发的事件",row1column3:"当前值",row2column2:"当父级选项变化时触发的事件, 仅在change-on-select为false时可用",row2column3:"各父级选项组成的数组"},samples11:{row1column2:"Custom level selector name",row2column2:"Whether to show loading status(Mobile only available)",row3column2:"Top bar title(Mobile only available)",row4column2:"Confirm button text content(Mobile only available)",row4column3:"Cancel button text content(Mobile only available)",row5column2:"Top bar position(Mobile only available)",row5column3:"Whether to display the top bar(Mobile only available)",row6column2:"Whether HTML is allowed to apply(Mobile only available)",row7column2:"Item height(Mobile only available)",row8column2:"Number of options visible(Mobile only available)",row9column2:"The length of inertial scrolling during rapid sliding, in units of ms(Mobile only available)",row10column2:"Triggers when the Confirm button is clicked(Mobile only available)",row10column3:"Current value, i.e(value, index)",row11column2:"Triggers when the Cancel button is clicked(Mobile only available)"}},formDemo:{label:"Form",description:"由输入框、选择器、单选框、多选框等控件组成, 用以收集、校验、提交数据.",samples1:{label:"基础表单",description:"在Form组件中, 每一个表单域由一个Form-Item组件构成, 表单域中可以放置各种类型的表单控件, "},samples2:{label:"行内表单",description:"设置inline属性可以让表单域变为行内的表单域"},samples3:{label:"对齐方式",description:"通过设置label-position属性可以改变表单域标签的位置, 可选值为 top、left、right"},samples4:{label:"表单验证",description:"Form组件提供了表单验证的功能, 只需要通过rule属性传入约定的验证规则, 并Form-Item的prop属性设置为需校验的字段名即可."},samples5:{label:"自定义校验规则",description:"使用自定义规则来完成验证;"},samples6:{label:"动态增减表单项",description:"除了在Form组件上一次性传递所有的验证规则外还可以在单个的表单域上传递属性的验证规则"},samples7:{row1column2:"表单数据对象",row2column2:"表单验证规则",row3column2:"行内表单模式",row4column2:"表单域标签的位置",row5column2:"表单域标签的宽度, 作为Form直接子元素的form-item会继承该值",row6column2:"表单域标签的后缀(如':')",row7column2:"是否显示校验错误信息",row8column2:"表单域标签是否自适应",row9column2:"错误信息是否以通知形式显示",row10column2:"自定义消息,参数为错误信息"},samples8:{row1column2:"对整个表单进行校验的方法",row2column2:"对部分表单字段进行校验的方法",row3column2:"对整个表单进行重置, 将所有字段值重置为初始值并移除校验结果",row4column2:"将所有字段值的当前值设为初始值",row5column2:"判断表单是否有值发生变动"},samples9:{row1column2:"表单域model字段, 在使用validate、resetFields方法的情况下, 该属性是必填的",row1column4:"传入Form组件的model中的字段",row2column2:"标签文本",row3column2:'表单域标签的的宽度, 例如"50px"',row4column2:"是否必填, 如不设置, 则会根据校验规则自动生成",row5column2:"表单验证规则",row6column2:"表单域验证错误信息, 设置该值会使表单验证状态变为error, 并显示该错误信息",row7column2:"是否显示校验错误信息"},samples10:{row1column2:"是否必入",row2column2:"入力长度, 只对number, String, Array有效",row3column2:"最小长度, 只对number, String, Array有效",row4column2:"最大长度, 只对number, String, Array有效",row5column2:"校验类型"}},paginationDemo:{label:"Pagination",description:"当数据量过多时, 使用分页分解数据.",samples1:{label:"基础用法",description:"设置layout, 表示需要显示的内容, 用逗号分隔, 布局元素会依次显示.prev表示上一页, next为下一页, pager表示页码列表, page-size表示每页显示条目个数, total表示总条目数",label1:"页数较少时的效果",label2:"页数较多时的效果",label3:"小型分页"},samples2:{label:"附加功能",description:"使用size-change和current-change事件来处理页码大小和当前页变动时候触发的事件.page-sizes接受一个整型数组, 数组元素为展示的选择每页显示个数的选项",label1:"显示总数",label2:"调整每页显示条数",label3:"直接前往",label4:"完整功能"},samples3:{row1column2:"是否使用小型分页样式",row2column2:"每页显示条目个数",row3column2:"总条目数",row4column2:"总页数, total和page-count设置任意一个就可以达到显示页码的功能；如果要支持page-sizes的更改, 则需要使用total属性",row5column2:"当前页数, 支持sync修饰符",row6column2:"组件布局, 子组件名用逗号分隔",row7column2:"每页显示个数选择器的选项设置"},samples4:{row1column2:"pageSize改变时触发",row1column3:"每页条数size",row2column2:"currentPage改变时触发",row2column3:"当前页currentPage"}},treeDemo:{label:"Tree",description:"用清晰的层级结构展示信息, 可展开或折叠.",samples1:{label:"基础用法",description:"基础的树形结构展示."},samples2:{label:"选择和获取数据",description:"show-checkbox属性可以设置节点是否可被选择, lazy属性设置是否在点击时才进行数据获取, load属性可以设置加载子树数据的方法."},samples3:{label:"默认展开和默认选中",description:"分别通过default-expanded-keys和default-checked-keys设置默认展开和默认选中的节点.需要注意的是, 此时必须设置node-key, 其值为节点数据中的一个字段名, 该字段在整棵树中是唯一的."},samples4:{label:"禁用状态",description:"通过disabled设置禁用状态."},samples5:{label:"树节点的选择",description:"获取和设置各有两种方式：通过node或通过key.如果需要通过key来获取或设置, 则必须设置node-key"},samples13:{label:"高亮节点的选择",description:"获取和设置各有两种方式：通过node或通过key.如果需要通过key来获取或设置, 则必须设置node-key"},samples6:{label:"自定义节点内容",description:"使用render-content指定渲染函数, 该函数返回需要的节点区内容即可.渲染函数的用法请参考Vue文档"},samples7:{label:"节点过滤",description:"调用Tree实例的filter方法, 参数为关键字.需要注意的是, 此时需要设置filter-node-method, 值为过滤函数."},samples8:{label:"手风琴模式",description:"对于同一级的节点, 每次只能展开一个"},samples9:{row1column2:"展示数据",row2column2:"每个树节点用来作为唯一标识的属性, 整颗树应该是唯一的",row3column2:"懒加载",row4column2:"加载子树数据的方法, 当lazy为true时生效",row5column2:"树节点的内容区的渲染Function",row6column2:"是否高亮当前选中节点",row7column2:"当前选中节点的key",row8column2:"是否默认展开所有节点",row9column2:"是否在点击节点的时候展开或者收缩节点",row10column2:"展开子节点的时候是否自动展开父节点",row11column2:"默认展开的节点的key的数组",row12column2:"节点是否可被选择",row13column2:"在显示复选框的情况下, 是否严格的遵循父子不互相关联的做法, ",row14column2:"默认勾选的节点的key的数组",row15column2:"对树节点进行筛选时执行的方法, 返回true表示这个节点可以显示, 返回false则表示这个节点会被隐藏",row16column2:"是否每次只打开一个同级树节点展开",row17column2:"相邻级节点间的水平缩进, 单位为像素",row18column2:"配置选项, 具体看下表"},samples10:{row1column2:"指定节点标签为节点对象的某个属性值",row2column2:"指定子树为节点对象的某个属性值",row3column2:"指定节点选择框是否禁用"},samples11:{row1column2:"对树节点进行筛选操作",row1column3:"接收一个任意类型的参数, 该参数会在filter-node-method中作为第一个参数",row2column2:"若节点可被选择(即show-checkbox为true), 则返回目前被选中的节点所组成的数组",row2column3:"(leafOnly, indeterminate)参数1：boolean类型的参数, 若为true则仅返回被选中的子节点, 默认值为 false。 参数2：boolean，是否包含半选中状态的节点，默认false",row3column2:"设置目前勾选的节点, 使用此方法必须设置node-key属性",row3column3:"(nodes)接收勾选节点数据的数组",row4column2:"若节点可被选择(即show-checkbox为true), 则返回目前被选中的节点的 key所组成的数组",row4column3:"(leafOnly, indeterminate) 参数1：boolean类型的参数, 若为 true则仅返回被选中的子节点的 keys, 默认值为 false。 参数2：boolean，是否包含半选中状态的节点，默认false",row5column2:"通过keys设置目前勾选的节点, 使用此方法必须设置node-key属性",row5column3:"(keys, leafOnly)接收两个参数, 1.勾选节点的key的数组 2.boolean类型的参数, 若为true则仅设置叶子节点的选中状态, 默认值为 false",row6column2:"通过key/data设置某个节点的勾选状态, 使用此方法必须设置node-key属性",row6column3:"(key/data, checked, deep)接收三个参数, 1.勾选节点的key或者data 2.boolean类型, 节点是否选中 3.boolean类型, 是否设置子节点 , 默认为 false",row7column2:"若节点可被高亮(即highlight-current为true), 则返回目前被高亮的节点",row8column2:"若节点可被高亮(即highlight-current为true), 则返回目前被高亮的节点的 key",row9column2:"设置目前高亮的节点, 使用此方法必须设置node-key属性",row10column2:"通过key设置目前高亮的节点, 使用此方法必须设置node-key属性"},samples12:{row1column2:"节点被点击时的回调",row1column3:"共三个参数, 依次为：传递给data属性的数组中该节点所对应的对象、节点对应的Node、节点组件本身.",row2column2:"节点选中状态发生变化时的回调",row2column3:"共三个参数, 依次为：传递给data属性的数组中该节点所对应的对象、节点本身是否被选中、节点的子树中是否有被选中的节点",row3column2:"当前选中节点变化时触发的事件",row3column3:"共两个参数, 依次为：当前节点的数据, 当前节点的Node对象",row4column2:"节点被展开时触发的事件",row4column3:"共三个参数, 依次为：传递给data属性的数组中该节点所对应的对象、节点对应的 Node、节点组件本身.",row5column2:"节点被关闭时触发的事件",row5column3:"共三个参数, 依次为：传递给data属性的数组中该节点所对应的对象、节点对应的 Node、节点组件本身."}},collapseDemo:{label:"Collapse",description:"通过折叠面板收纳内容区域",samples1:{label:"基础用法",description:"可同时展开多个面板, 面板之间不影响"},samples2:{label:"手风琴效果",description:"每次只能展开一个面板, 通过accordion属性来设置是否以手风琴模式显示"},samples3:{label:"自定义面板标题",description:"除了可以通过title属性以外, 还可以通过具名slot来实现自定义面板的标题内容, 以实现增加图标等效果."},samples4:{row1column2:"是否手风琴模式",row2column2:"当前激活的面板(如果是手风琴模式, 绑定值类型需要为string, 否则为array)",row3column2:"是否手风琴模式"},samples5:{row1column2:"当前激活面板改变时触发(如果是手风琴模式, 参数 activeNames 类型为string, 否则为array)"},samples6:{row1column2:"唯一标志符",row2column2:"面板标题",row3column2:"点击时是否可以展开或者收缩"}},messageBoxDemo:{label:"MessageBox",description:"模拟系统的消息提示框而实现的一套模态对话框组件.",samples1:{label:"消息提示",description:"调用$alert方法即可打开消息提示, 它模拟了系统的alert, "},samples2:{label:"确认消息",description:"调用$confirm方法即可打开消息提示, 它模拟了系统的confirm."},samples3:{label:"自定义",description:"可自定义配置不同内容."},samples4:{row1column2:"MessageBox标题",row2column2:"MessageBox消息正文内容",row3column2:"消息类型, 用于显示图标",row4column2:"MessageBox的自定义类名",row5column2:'MessageBox关闭后的回调, action的值为"confirm"或"cancel", instance为 MessageBox实例',row5column3:"Function(action, instance)",row6column2:'MessageBox关闭前的回调, 会暂停实例的关闭, action的值为"confirm"或"cancel", instance为 MessageBox实例, done用于关闭 MessageBox实例',row6column3:"Function(action, instance, done)",row7column2:"取消按钮的文本内容",row8column2:"确定按钮的文本内容",row9column2:"取消按钮的自定义类名",row10column2:"确定按钮的自定义类名"}},dialogDemo:{label:"Dialog",description:"在保留当前页面状态的情况下, 告知用户并承载相关操作.",samples1:{label:"基础用法",description:"需要设置v-model属性, 它接收Boolean, 当为true时显示Dialog.Dialog分为三个部分：header, body和footer, header需要具名为header的slot, footer需要具名为footer的slot.title属性用于定义标题, 它是可选的, 默认值为空, 当header存在时title不显示.show-close属性显示关闭按钮, 默认为false."},samples2:{label:"自定义内容",description:"Dialog组件的内容可以是任意的"},samples3:{row1column2:"是否显示Dialog",row2column2:"Dialog的标题",row3column2:"Dialog的大小",row4column2:"Dialog CSS中的top值(仅在size不为full时有效)",row5column2:"Dialog的自定义类名",row6column2:"是否可以通过点击 modal关闭Dialog",row7column2:"是否可以通过按下ESC关闭Dialog",row8column2:"是否显示关闭按钮",row9column2:"关闭前的回调, 会暂停Dialog的关闭, done()用于关闭, done(false)用于取消关闭",row9column3:"Function(done)",row10column2:"使modal层透明",row11column2:"是否可以拖动, size为full时不可拖动"},samples4:{row1column2:"Dialog的内容",row2column2:"Dialog head部的内容",row3column2:"Dialog foot部的内容"},samples5:{row1column2:"Dialog关闭的回调",row2column2:"Dialog打开的回调"}},asideDemo:{label:"Aside",description:"在保留当前页面状态的情况下, 在侧边承载相关操作.",samples1:{label:"基础用法",description:"需要设置v-model属性, 它接收Boolean, 当为true时显示Aside.Aside分为三个部分：header, body和footer, header需要具名为header的slot, footer需要具名为footer的slot.title属性用于定义标题, 它是可选的, 默认值为空, 当header存在时title不显示.show-close属性显示关闭按钮, 默认为false."},samples2:{label:"区域表示",description:"设置relative属性, 可以在父容器内展示"},samples3:{label:"自定义内容",description:"Aside组件的内容可以是任意的"},samples4:{row1column2:"是否显示Aside",row2column2:"Aside的标题",row3column2:"Aside的大小",row5column2:"Aside的自定义类名",row6column2:"是否可以通过点击 modal关闭Aside",row7column2:"是否可以通过按下ESC关闭Aside",row8column2:"是否显示关闭按钮",row9column2:"关闭前的回调, 会暂停Aside的关闭, done()用于关闭, done(false)用于取消关闭",row9column3:"Function(done)",row10column2:"显示位置",row11column2:"是否在父容器内显示Aside"},samples5:{row1column2:"Aside的内容",row2column2:"Aside head部的内容",row3column2:"Aside foot部的内容"},samples6:{row1column2:"Aside关闭的回调",row2column2:"Aside打开的回调"}},notificationDemo:{label:"Notification",description:"悬浮出现在页面右上角,显示全局的通知提醒消息.",samples1:{label:"基础用法",description:"title和message用于设置标题和正文. 默认情况下, 经过一段时间后组件会自动关闭, 但是通过设置duration, 可以控制关闭的时间间隔, 如果设置为0, 则不会自动关闭. 有四种通知类型：success, warning, info, error. 通过type字段来设置"},samples2:{label:"消息位置",description:'通过设置position属性来定位, 默认为"top-right"'},samples3:{row1column2:"标题",row2column2:"正文内容",row3column2:"主题样式, 如果不在可选值内将被忽略",row4column2:"自定义图标的类名. 若设置了 type, 则iconClass会被覆盖",row5column2:"自定义类名",row6column2:"显示时间, 毫秒. 设为0则不会自动关闭, 并显示关闭按钮",row7column2:"关闭时的回调函数",row8column2:"定位, 如果不在可选值内将无法显示",row9column2:"是否显示关闭按钮"}},badgeDemo:{label:"Badge",description:"出现在按钮、图标旁的数字或状态标记. ",samples1:{label:"基础用法",description:"定义value属性, 它接受Number或者String. 最大值由max属性定义, 它接受一个Number, 只有当value为Number时, 它才会生效. 设置is-dot属性以红点的形式标注"},samples2:{row1column2:"显示值",row2column2:'最大值, 超过最大值会显示 "{max}+", 要求 value 是 Number 类型',row3column2:"小圆点",row4column2:"隐藏"}},tabsDemo:{label:"Tabs",description:"分隔内容上有关联但属于不同类别的数据集合. ",samples1:{label:"基础用法",description:"通过value属性来指定当前选中的标签页. "},samples2:{label:"选项卡样式",description:"设置type属性为card"},samples3:{label:"卡片化样式",description:"设置type属性为border-card"},samples4:{label:"自定义标签",description:"可以通过具名为label的slot来实现自定义标签内容"},samples5:{label:"动态增减标签页"},samples6:{label:"自定义增加标签页触发器"},samples10:{label:"标签置于底部",description:"设置tab-bottom属性为true"},samples7:{row1column2:"风格类型",row2column2:"标签是否显示关闭按钮",row3column2:"标签是否显示新增按钮",row4column2:"标签是否同时显示增加和关闭按钮",row5column2:"绑定值, 选中选项卡的 name",row5column5:"第一个选项卡的name",row6column2:"标签是否置于底部"},samples8:{row1column2:"选项卡被选中时触发",row1column3:"被选中的选项卡实例, 事件实例",row2column2:"点击选项卡关闭按钮触发",row2column3:"被选中的选项卡的name",row3column2:"点击选项卡的新增按钮触发",row4column2:"点击选项卡的新增或关闭后触发",row4column3:"被选中的选项卡的name, 事件行为(add, remove)"},samples9:{row1column2:"选项卡标题",row2column2:"是否禁用",row3column2:"选项卡别名",row4column2:"标签是否显示关闭按钮"}},popoverDemo:{label:"Popover",description:"用于展示小段信息",samples1:{label:"基础用法",description:"trigger属性用于设置何时触发 Popover, 提供三种触发方式：hover, click, focus. 可以通过slot指定reference. "},samples2:{label:"嵌套信息",description:"可以在Popover中嵌套多种信息"},samples3:{label:"嵌套信息",description:"可以在Popover中嵌套多种操作"},samples4:{row1column2:"触发方式",row2column2:"标题",row3column2:"显示的内容, 也可以通过slot传入",row4column2:"宽度",row5column2:"出现位置",row6column2:"是否可用",row7column2:"是否可见",row8column2:"为popper添加类名",row9column2:"触发方式为hover时的显示延迟, 单位为毫秒",row10column2:"是否显示箭头"},samples5:{row1column2:"Popover内嵌内容",row2column2:"触发Popover显示的元素"},samples6:{row1column2:"显示时触发",row2column2:"隐藏时触发"}},tooltipDemo:{label:"Tooltip",description:"用于展示鼠标hover时的提示信息. ",samples1:{label:"基础用法",description:'使用content属性来决定hover时的提示信息. 由placement属性决定展示效果：placement属性值为：方向-对齐位置；四个方向：top、left、right、bottom；三种对齐位置：start, end, 默认为空. 如placement="left-end", 则提示信息出现在目标元素的左侧, 且提示信息的底部与目标元素的底部对齐. '},samples2:{label:"主题",description:"Tooltip组件提供了两个不同的主题：dark和light. "},samples3:{label:"自定义内容",description:"用具名content的slot替代tooltip中的content属性. "},samples4:{label:"禁用状态",description:"设置disabled属性即可, 它接受一个Boolean, true为禁用."},samples5:{row1column2:"默认提供的主题",row2column2:"鼠标是否可进入到 tooltip中",row3column2:"显示的内容, 也可以通过slot传入",row4column2:"出现位置",row5column2:"是否可用",row6column2:"是否可见",row7column2:"为popper添加类名",row9column2:"是否显示箭头"}},tagDemo:{label:"Tag",description:"用于标记和选择. ",samples1:{label:"基础用法",description:"用type属性来选择tag的类型, 用width属性来设置tag的宽度, 设置closable属性可以定义一个标签是否可移除, 设置hit属性为true可以开启边框描边．"},samples2:{label:"动态编辑标签"},samples3:{row1column2:"主题",row2column2:"是否可关闭",row4column2:"是否有边框描边",row5column2:"tag的宽度"},samples4:{row1column2:"关闭tag时触发的事件"}},alertDemo:{label:"Alert",description:"用于页面中展示重要的提示信息. ",samples1:{label:"基础用法",description:"组件提供四种主题, 由type属性指定, 默认值为info. closable属性决定是否可关闭, 可以设置close-text属性来代替右侧的关闭图标, 设置close事件来设置关闭时的回调. 设置show-icon属性来显示icon. 设置dark属性来显示深色样式. "},samples2:{row1column2:"标题",row2column2:"主题",row3column2:"是否可关闭",row4column2:"关闭按钮自定义文本",row5column2:"是否显示图标",row6column2:"是否开启暗色模式"},samples3:{row1column2:"关闭alert时触发的事件"}},noteDemo:{label:"Note",description:"用于页面中展示信息. ",samples1:{label:"基础用法",description:"组件提供四种主题, 由type属性指定, 默认值为info. "},samples2:{row1column2:"标题",row2column2:"主题",row3column2:"是否开启朴素模式"}},cardDemo:{label:"Card",description:"将信息聚合在卡片容器中展示. ",samples1:{label:"基础用法",description:"Card组件包括header和body部分, header部分需要有显式具名slot分发, 同时也是可选的. "},samples2:{label:"简单卡片",description:"卡片可以只有内容区域. "},samples3:{row1column2:"设置 header, 也可以通过名为header的slot传入DOM",row2column2:"设置 body的样式",row3column2:"设置阴影显示时机"},samples4:{label:"卡片阴影",description:"通过shadow属性设置卡片阴影出现的时机：always、hover或never。"}},carouselDemo:{label:"Carousel",description:"在有限空间内, 循环播放同一类型的图片、文字等内容. ",samples1:{label:"基础用法",description:"内容是任意的, 默认情况下, 在鼠标hover底部的指示器时就会触发切换. 通过设置trigger属性为click, 可以达到点击触发的效果. 将type属性设置为card即可启用卡片模式. "},samples2:{label:"指示器",description:"indicator-position属性定义了指示器的位置. 默认情况下, 它会显示在走马灯内部, 设置为outside则会显示在外部；设置为none则不会显示指示器. "},samples3:{label:"箭头",description:"arrow属性定义了切换箭头的显示时机. 默认情况下, 切换箭头只有在鼠标hover到走马灯上时才会显示；若将arrow设置为always, 则会一直显示；设置为never, 则会一直隐藏. "},samples4:{row1column2:"走马灯的高度",row2column2:"初始状态激活的幻灯片的索引, 从0开始",row3column2:"指示器的触发方式",row4column2:"是否自动切换",row5column2:"自动切换的时间间隔, 单位为毫秒",row6column2:"指示器的位置",row7column2:"切换箭头的显示时机",row8column2:"走马灯的类型",row9column2:"悬停时是否停止自动切换"},samples5:{row1column2:"幻灯片切换时触发",row1column3:"目前激活的幻灯片的索引, 原幻灯片的索引. (newIndex, oldIndex)"},samples6:{row1column2:"手动切换幻灯片",row1column3:"需要切换的幻灯片的索引, 从0开始；或相应vue-carousel-item的name属性值",row2column2:"切换至上一张幻灯片",row3column2:"切换至下一张幻灯片"},samples7:{row1column2:"幻灯片的名字, 可用作setActiveItem的参数",row1column3:"该幻灯片所对应指示器的文本"}},loadingDemo:{label:"Loading",description:"加载数据时显示动效. ",samples1:{label:"基础用法",description:"使用自定义指令v-loading, 在绑定了v-loading指令的元素上添加vue-loading-text属性, 其值会被渲染为加载文案, 并显示在加载图标的下方．当需要全屏遮罩时, 可使用fullscreen修饰符. "},samples2:{row1column2:"显示在加载图标下方的加载文案",row2column2:"Loading的自定义类名"}},loadingBarDemo:{label:"LoadingBar",description:"全局创建一个显示页面加载、异步请求、文件上传等的加载进度条. ",samples1:{label:"基础用法",description:"在调用start()方法后, 组件会自动模拟进度, 当调用finish()或error()时, 补全进度并自动消失. "},samples2:{row1column2:"开始从0显示进度条, 并自动加载进度",row1column3:"回调函数",row2column2:"结束进度条, 自动补全剩余进度",row2column3:"回调函数",row3column2:"以错误的类型结束进度条, 自动补全剩余进度",row3column3:"回调函数",row4column2:"精确加载到指定的进度",row4column3:"指定的进度百分比(percent), 回调函数"}},progressDemo:{label:"Progress",description:"用于展示操作进度, 告知用户当前状态和预期. ",samples1:{label:"基础用法",description:"设置percentage属性即可, 表示进度条对应的百分比, 可通过 stroke-width 属性更改进度条的高度, 并可通过 text-inside 属性来将进度条描述置于进度条内部. 可通过 type 属性来指定使用环形进度条, 在环形进度条中, 还可以通过 width 属性来设置其大小. "},samples2:{row1column2:"百分比",row2column2:"进度条类型",row3column2:"进度条的宽度, 单位 px",row4column2:"进度条显示文字内置在进度条内(只在type==line时可用)",row5column2:"进度条当前状态",row6column2:"环形进度条画布宽度(只在type==circle时可用)",row7column2:"是否显示进度条文字内容"}},sliderDemo:{label:"Slider",description:"通过拖动滑块在一个固定区间内进行选择. ",samples1:{label:"基础用法",description:"通过设置绑定值自定义滑块的初始值. "},samples2:{label:"离散值",description:"改变step的值可以改变步长, 通过设置show-step属性可以显示间断点"},samples3:{label:"范围选择",description:"设置range即可开启范围选择, 此时绑定值是一个数组, 其元素分别为最小边界值和最大边界值"},samples4:{label:"竖向模式",description:"设置vertical可使Slider变成竖向模式, 此时必须设置高度height属性"},samples5:{row1column2:"最小值",row2column2:"最大值",row3column2:"是否禁用",row4column2:"步长",row5column2:"是否显示间断点",row6column2:"是否显示 tooltip",row7column2:"格式化 tooltip message",row8column2:"是否为范围选择",row9column2:"是否竖向模式",row10column2:"Slider高度(只在竖向模式可用)"},samples6:{row1column2:"值改变时触发(使用鼠标拖曳时, 只在松开鼠标后触发)",row1column3:"改变后的值"}},breadcrumbDemo:{label:"Breadcrumb",description:"显示当前页面的路径, 快速返回之前的任意页面. ",samples1:{label:"基础用法",description:"设置separator属性改变分隔符,默认为斜杠'/'"},samples2:{row1column2:"分隔符"},samples3:{row1column2:"路由跳转对象, 同vue-router的to"},samples4:{row1column2:"点击事件, 只有当没有定义to属性时点击触发"}},stepsDemo:{label:"Steps",description:"引导用户按照流程完成任务的分步导航条, 可根据实际应用场景设定步骤, 步骤不得少于 2 步. ",samples1:{label:"基础用法",description:"设置active属性, 接受一个Number, 表明步骤的index, 从0开始. 需要定宽的步骤条时, 设置space属性即可, 单位为px, 如果不设置, 则为自适应. 设置finish-status属性可以改变已经完成的步骤的状态. "},samples2:{label:"有描述的步骤条",description:"每个步骤有其对应的步骤状态描述."},samples3:{label:"带图标的步骤条",description:"通过icon属性来设置图标"},samples4:{label:"竖式步骤条",description:"设置direction属性为vertical可使steps变成竖向模式"},samples5:{row1column2:"每个step的间距，不填写将自适应间距。支持百分比",row2column2:"显示方向",row3column2:"设置当前激活步骤",row4column2:"设置当前步骤的状态",row5column2:"设置结束步骤的状态",row6column2:"标题描述居中对齐",row7column2:"组件居中显示"},samples6:{row1column2:"标题",row2column2:"图标",row3column2:"设置当前步骤的状态，不设置则根据steps确定状态"},samples7:{row1column2:"内容",row2column2:"标题"}},rateDemo:{label:"Rate",description:"出现在按钮、图标旁的数字或状态标记。",samples1:{label:"基础用法",description:"评分被分为三个等级，可以利用颜色对分数及情感倾向进行分级(默认情况下不区分颜色)。三个等级所对应的颜色用过colors属性设置"},samples2:{label:"辅助文字",description:"为组件设置show-text属性会在右侧显示辅助文字。通过设置texts可以为每一个分值指定对应的辅助文字。texts为一个数组，长度应等于最大值max。"},samples3:{label:"其它 icon",description:"设置icon-classes属性可以自定义对应3个不同分段的图标。void-icon-class指定未选中时的图标类名。"},samples4:{label:"只读",description:"设置disabled属性表示组件为只读，支持小数分值。此时若设置show-text，则会在右侧显示目前的分值。可以提供text-template作为显示模板，模板为一个包含了{value}的字符串，{value}会被解析为分值。"},samples5:{row1column2:"最大分值",row2column2:"是否为只读",row3column2:"是否允许半选",row4column2:"低分和中等分数的界限值，值本身被划分在低分中",row5column2:"高分和中等分数的界限值，值本身被划分在高分中",row6column2:"icon的颜色数组，共有3个元素，为3个分段所对应的颜色",row7column2:"未选中icon的颜色",row8column2:"只读时未选中icon的颜色",row9column2:"icon的类名数组，共有3个元素，为3个分段所对应的类名",row10column2:"未选中icon的类名",row11column2:"只读时未选中icon的类名",row12column2:"是否显示辅助文字",row13column2:"辅助文字的颜色",row14column2:"辅助文字数组",row15column2:"只读时的辅助文字模板"},samples6:{row1column2:"分值改变后触发",row1column3:"改变后的分值"}},pinDemo:{label:"Pin",description:"使用图钉，可以将内容固定在屏幕上，并且不随页面的滚动而滚动。常用于侧边菜单等。可以通过调整浏览器窗口高度来查看效果",samples1:{label:"基础用法",description:"简单使用，当元素不可见时，直接固定在最顶端。当固定状态发生改变时，会触发change事件。"},samples2:{label:"偏移",description:"设置offset-top或offset-bottom可当滚动到一定距离时再固定。"},samples3:{label:"固定在底部",description:"在屏幕下方固定。注意，offset-top和offset-bottom只可以设置一个，如果都设置，会使用offset-top。"},samples4:{label:"始终固定",description:"设置fixed属性可始终固定在一个位置"},samples5:{row1column2:"距离窗口顶部达到指定偏移量后触发",row2column2:"距离窗口底部达到指定偏移量后触发",row3column2:"是始终固定在一个位置"},samples6:{row1column2:"在固定状态发生改变时触发",row1column3:"固定状态(true/false)"}},uploadDemo:{label:"Upload",description:"通过点击或者拖拽上传文件。",samples1:{label:"基础用法",description:"通过slot你可以传入自定义的上传按钮类型和文字提示。使用before-upload限制用户上传的格式和大小"},samples2:{label:"照片墙",description:"设置list-type属性为picture-card。"},samples3:{label:"图片列表缩略图",description:"设置list-type属性为picture。"},samples4:{label:"上传文件列表控制",description:"通过on-change钩子函数来对列表进行控制"},samples5:{label:"拖拽上传",description:"设置drag属性即可"},samples6:{label:"手动上传"},samples7:{row1column2:"上传的地址",row2column2:"可选参数, 设置上传的请求头部",row3column2:"可选参数, 是否支持多选文件",row4column2:"可选参数, 上传时附带的额外参数",row5column2:"可选参数, 上传的文件字段名",row6column2:"支持发送cookie凭证信息",row7column2:"是否显示已上传文件列表",row8column2:"是否启用拖拽上传",row9column2:"可选参数, 接受上传的文件类型(thumbnail-mode模式下此参数无效)",row10column2:"可选参数, 点击已上传的文件链接时的钩子, 可以通过file.response拿到服务端返回数据",row11column2:"可选参数, 文件列表移除文件时的钩子",row12column2:"可选参数, 文件上传成功时的钩子",row13column2:"可选参数, 文件上传失败时的钩子",row14column2:"可选参数, 文件上传时的钩子",row15column2:"可选参数, 文件状态改变时的钩子, 添加文件、上传成功和上传失败时都会被调用",row16column2:"可选参数, 上传文件之前的钩子, 参数为上传的文件, 若返回 false 或者返回 Promise 且被 reject, 则停止上传.",row17column2:"文件列表的类型",row18column2:"是否在选取文件后立即进行上传",row19column2:"上传的文件列表",row20column2:"覆盖默认的上传行为, 可以自定义上传的实现",row21column2:"是否禁用",row22column2:"可选参数, 最大上传数量"},samples8:{row1column2:"清空已上传的文件列表(该方法不支持在before-upload中调用)"}},colorDemo:{label:"ColorPicker",description:"用于颜色选择，支持多种格式。",samples1:{label:"基础用法",description:"使用v-model绑定变量, 需字符串类型。"},samples2:{label:"选择透明度",description:"ColorPicker支持普通颜色，也支持带Alpha通道的颜色，通过show-alpha属性即可控制是否支持透明度的选择。"},samples3:{row1column2:"是否支持透明度选择",row2column2:"写入v-model的颜色的格式",row2column5:"hex(show-alpha为false)/rgb(show-alpha为true)"},samples4:{row2column2:"是否禁用状态",row2column5:"false"},samples5:{row1column2:"当绑定值变化时触发",row1column3:"当前值"}},navMenuDemo:{label:"NavMenu",description:"为网站提供导航功能的菜单。",samples1:{label:"顶栏",description:"导航菜单默认为垂直模式，通过 mode属性可以使导航菜单变更为水平模式。另外，在菜单中通过submenu组件可以生成二级菜单。通过theme属性可以设置主题"},samples2:{label:"侧栏",description:"通过vue-menu-item-group组件可以实现菜单进行分组，分组名可以通过title属性直接设定也可以通过具名slot来设定。"},samples3:{row1column2:"模式",row2column2:"主题色",row3column2:"当前激活菜单的index",row4column2:"当前打开的submenu的key数组",row5column2:"是否只保持一个子菜单的展开",row6column2:"子菜单打开的触发方式(只在 mode为 horizontal时有效)",row7column2:"是否使用vue-router的模式，启用该模式会在激活导航时以index作为path进行路由跳转"},samples4:{row1column2:"菜单激活回调",row1column3:"index:选中菜单项的index, indexPath:选中菜单项的index path",row2column2:"SubMenu展开的回调",row2column3:"index:打开的subMenu的index, indexPath:打开的subMenu的index path",row3column2:"SubMenu收起的回调",row3column3:"index:收起的subMenu的index, indexPath:收起的subMenu的index path"},samples5:{row1column2:"唯一标志"},samples6:{row1column2:"唯一标志",row2column2:"Vue Router路径对象"},samples7:{row1column2:"分组标题"},samples8:{label:"Collapse",description:"Vertical NavMenu could be collapsed."}},listDemo:{label:"List",description:"用于相似元素信息的展示。",samples1:{label:"基础用法",description:"通过height属性设置list高度, 通过<vue-divider>控件来追加item间的分隔线"},samples2:{row1column2:"list高度",row2column2:"滚动竖向滚动条时的钩子",row3column2:"默认选中的item index",row4column2:"是否默认选中item",row5column2:"是否启用虚拟滚动条"},samples3:{row1column2:"选中item时的回调",row1column3:"选中的item"}},sortableDemo:{label:"Sortable",description:"使用鼠标调整列表中或者网格中元素的排序。",samples1:{label:"基础用法",description:'根据属性element设置sortable的容器, 如:"div"'},samples2:{label:"数据绑定",description:"绑定数据后进行拖动,数据会相应地发生变化"},samples3:{label:"克隆",description:'设置options的group的pull属性为"clone"可以开启克隆模式,同一容器内无法克隆'},samples4:{row1column2:"绑定一个拖拽同步的数组",row2column2:"可以拖拽组件的HTML节点类型",row3column2:"当sortable的clone选项为true时的回调函数, 返回要克隆的数据, 只在绑定数据时生效",row4column2:"拖拽时的回调函数, 只在绑定数据时生效",row5column2:"初始化sortable对象的选项, 参考下表"},samples5:{row1column2:"将元素从一个容器中拖放到另一个容器中，两个容器必须具有相同的组名, 参考下表",row2column2:"同一个容器内是否可以自由排序",row3column2:"选中元素几毫秒后可以开始拖拽",row4column2:"是否禁用sortable",row5column2:"在容器中可以拖动的句柄选择器",row6column2:"在容器中不能拖动的句柄选择器",row7column2:"拖动元素时的占位类名",row8column2:"选中元素时的类名"},samples6:{row1column2:"组名",row2column2:'是否可以从容器中拖出元素, "clone"为克隆元素',row3column2:"是否可以把元素拖入容器中"},samples7:{row1column2:"开始拖拽的回调事件",row2column2:"容器追加元素的回调事件",row3column2:"容器移除元素的回调事件",row4column2:"容器更新元素的回调事件",row5column2:"结束拖拽的回调事件",row6column2:"选中元素的回调事件",row7column2:"同一容器内元素排序的回调事件",row8column2:"选中不能拖动的句柄选择器时的回调事件",row9column2:"克隆的回调事件"}},tableDemo:{label:"Table",description:"用于展示多条结构类似的数据，可对数据进行排序、筛选、对比或其他自定义操作。(1.6.4 removed, can be import separately)",samples1:{label:"基础用法",description:"当vue-table元素中注入data对象数组后，在vue-table-column中用prop属性来对应对象中的键名即可填入数据，用label属性来定义表格的列名，可以使用width属性来定义列宽；设置stripe属性为true可以创建带斑马纹的表格，它默认为false；设置border属性为true可以具有竖直方向的边框的。它默认为false．"},samples2:{label:"固定列",description:"固定列需要使用fixed属性，它接受 Boolean 值或者left, right，表示左边固定还是右边固定。"},samples3:{label:"自定义模板",description:"通过slot-scope可以获取到row, column, $index 和store(table 内部的状态管理)的数据, 可组合其他组件自定义显示的内容"},samples4:{label:"增删改"},samples5:{label:"排序",description:"通过表的default-sort属性设置默认的排序列和排序顺序。在列中设置sortable属性即可实现以该列为基准的排序"},samples6:{label:"筛选",description:"在列中设置filterable属性为true即可开启该列的筛选。"},samples7:{label:"自定义样式",description:"通过table的属性row-class-name可以给行指定样式, 通过table-column的属性class-name可以给列指定样式, 通过table-column的属性label-class-name可以给label的指定样式"},samples8:{label:"展开行",description:'设置type="expand"和Scoped slot可以开启展开行功能，vue-table-column的模板会被渲染成为展开行的内容，展开行可访问的属性与使用自定义列模板时的 Scoped slot 相同。设置table的expand-class-name属性 可以给展开行指定样式'},samples14:{label:"单选",description:"配置highlight-current-row属性即可实现单选。之后由current-change事件来管理选中时触发的事件，它会传入currentRow, oldCurrentRow"},samples15:{label:"多选",description:"手动添加一个vue-table-column，设type属性为selection即可实现多选"},samples16:{label:"合计",description:"将show-footer设置为true就会在表格尾部展示合计行。对于合计行，根据每列的aggregate属性进行计算"},samples17:{label:"隐藏列",description:"对vue-table-column设置visible属性为false, 可以隐藏该列"},samples18:{label:"快捷菜单",description:"设置context-menu属性为true, 可以开启快捷菜单功能, 调用table的内部方法toggleContextMenu切换快捷菜单"},samples19:{label:"懒加载",description:"设置lazyload属性为true, 可以开启懒加载模式, 设置了height时有效"},samples20:{label:"排序过滤选中行定位",description:"排序过滤选中行定位"},samples9:{row1column2:"显示的数据",row2column2:"Table的高度，默认为自动高度。",row3column2:"是否为斑马纹table",row4column2:"是否带有纵向边框",row5column2:"列的宽度是否自撑开",row6column2:"是否显示表头",row7column2:"是否要高亮选择行",row8column2:"行的className的回调方法，也可以使用字符串为所有行设置一个固定的className。",row9column2:'空数据时显示的文本内容，也可以通过slot="empty"设置',row10column2:'是否默认展开所有行，只对type="expand"的Column有效',row11column2:'展开行的className的回调方法，也可以使用字符串为所有展开行设置一个固定的className。只对type="expand"的Column有效',row12column2:"默认的排序列的prop和顺序。它的prop属性指定默认的排序的列，order属性指定默认排序的顺序",row12column5:"如果只指定了prop, 没有指定order, 则默认顺序是ascending",row13column2:"tooltip effect 属性",row14column2:"是否在表尾显示合计行",row15column2:"合计行第一列的文本",row16column2:"自定义的合计计算方法",row17column2:"懒加载DOM模式, 设置了height时有效",row18column2:"是否要高亮当前行",row19column2:"过滤后自动高亮第一行",row20column2:"排序后自动高亮第一行"},samples10:{row1column2:"当用户手动勾选数据行的Checkbox时触发的事件",row2column2:"当用户手动勾选全选Checkbox时触发的事件",row3column2:"当选择项发生变化时会触发该事件",row4column2:"当单元格hover进入时会触发该事件",row5column2:"当单元格hover退出时会触发该事件",row6column2:"当某个单元格被点击时会触发该事件",row7column2:"当某个单元格被双击击时会触发该事件",row8column2:"当某一行被点击时会触发该事件",row9column2:"当某一行被鼠标右键点击时会触发该事件",row10column2:"当某一行被双击时会触发该事件",row11column2:"当某一列的表头被点击时会触发该事件",row12column2:"当拖动表头改变了列的宽度的时候会触发该事件",row13column2:"当表格的排序条件发生变化的时候会触发该事件",row14column2:"当表格的筛选条件发生变化的时候会触发该事件，参数的值是一个对象，对象的key是column的columnKey，对应的value为用户选择的筛选条件的数组",row15column2:"当表格的当前行发生变化的时候会触发该事件，如果要高亮当前行，请打开表格的highlight-current-row属性",row16column2:"当对某一行展开或者关闭的时候触发该事件",row17column2:"当滚动条拉至顶部的时候触发该事件",row18column2:"当滚动条拉至底部的时候触发该事件",row19column2:"当滚动条拉至最左部的时候触发该事件",row20column2:"当滚动条拉至最右部的时候触发该事件"},samples11:{row11column2:"用于多选表格，获取用户的选择",row1column2:"用于多选表格，清空用户的选择",row2column2:"用于多选表格，切换某一行的选中状态",row3column2:"用于单选表格，设定某一行为选中行",row4column2:"切换context menu状态",row5column2:"对某列进行过滤",row6column2:"对多列进行排序",row7column2:"将数据导出为 csv文件",row7column3:"params(Object): fileName文件名，默认为table.csv; original是否导出为原始数据，默认为true",row8column2:"用于单选表格，获取选中行",row9column2:"重置所有过滤",row10column2:"重置所有排序"},samples12:{row1column2:"自定义模板",row2column2:"头部自定义模板"},samples13:{row1column2:"对应列的类型. 如果设置了selection则显示多选框; 如果设置了index则显示该行的索引(从1开始计算); 如果设置了expand则显示为一个可展开的按钮",row3column2:"显示的标题",row4column2:"对应列数据的字段名",row5column2:"对应列的宽度",row6column2:"对应列的最小宽度，会把table剩余宽度按比例分配给设置了min-width的列",row7column2:"列是否固定在左侧或者右侧，true表示固定在左侧",row8column2:"列标题Label区域渲染使用的Function",row9column2:"对应列是否可以排序，",row10column2:"对数据进行排序的时候使用的方法，仅当sortable为true的时候有效，需返回一个布尔值",row11column2:"对应列是否可以通过拖动改变宽度(需要在vue-table上设置border属性为true)",row12column2:"用来格式化内容",row13column2:"当内容过长显示tooltip",row14column2:"对齐方式",row15column2:"表头对齐方式",row16column2:"列的自定义类名",row17column2:"当前列标题的自定义类名",row18column2:"仅对type==selection的列有效，返回一个boolean用来决定这一行的 CheckBox是否可以勾选",row19column2:"对应列是否可以过滤",row20column2:"数据过滤的选项，数组格式，数组中的元素需要有text和value属性",row22column2:"数据过滤使用的方法，返回一个boolean用来决定是否显示",row23column2:"是否显示列",row24column2:"合计类型",row25column2:"合计标题",row26column2:"csv文件的标题",row27column2:"标题是否被前一列合并",row28column2:"数据相同的行合并"}},draggableDemo:{label:"Draggable",description:"通过单击鼠标并拖动对象在窗口内任意移动. ",samples1:{label:"基础用法",description:"绑定了v-draggable指令的元素即可在带滚动条的父层窗口范围内任意移动"},samples2:{row1column2:"通过选择器指定元素内的子元素无法触发拖动事件"}},adaptiveGroup:{label:"AdaptiveGroup",description:"根据窗口大小对li slot聚集. ",samples1:{label:"基础用法",description:""},samples2:{row1column2:"触发自适应的大小",row2column2:"自定义class",row3column2:"自定义下拉列class",row4column2:"自定义触发下拉列图标的class"},samples3:{row1column2:"不被收至下拉列内",row2column2:"被收至下拉列内"}},rippleDemo:{label:"Ripple",description:"点击时触发波纹效果.",samples1:{label:"基础用法",description:"对需要触发波纹效果的元素设定v-ripple指令即可"}},signatureDemo:{label:"Signature",description:"签名画布控件，可生成base64数据",samples1:{label:"基础用法",description:"基础签名画布"},samples2:{label:"获取签名图片base64数据",description:"调用saveSignature方法，返回结果包含是否为空和base64数据"},samples3:{label:"清空签名",description:"调用clearSignature方法"},samples4:{label:"撤销",description:"调用undoSignature方法"},samples5:{label:"锁定、解锁",description:"lockSignaturePad、openSignaturePad"},samples6:{row1column2:"宽度",row2column2:"高度",row3column2:"保存图片格式，支持image/png, image/jpeg, image/svg+xml",row4column2:"设置项目 {backgroundColor: string, penColor: string, onBegin：function, onEnd：function}",row5column2:"自定义外层div样式 :custom-style=\"{border: 'black 1px dotted'}\""},samples7:{row1column2:"返回签名的状态和base64数据",row2column2:"撤销最后一笔笔画",row3column2:"清空签名",row4column2:"锁定",row5column2:"解锁",row6column2:"读取base64数据到画布",row7column2:"是否是空的"}},mobileInstallDemo:{label:"快速上手",description:"",detail1:{label:"引入",description:'在页面头部VIY PC版代码后引入'}},scrollviewDemo:{label:"ScrollView 滚动列表",description:"用于模拟原生的滚动区域，并支持下拉刷新和加载更多",defatltText:"默认",customText:"自定义",detail2:{label:"使用指南",description1:"ScrollViewRefresh为组件库内置的下拉刷新组件，仅用于作为视觉展示，需在插槽refresh中使用，下拉刷新组件也可自定义",description2:"ScrollViewMore为组件库内置的加载更多组件，仅用于作为视觉展示，需在插槽more中使用，加载更多组件也可自定义",description3:"组件容器需具有高度，否则会出现无法滚动或回弹问题。更多使用的常见问题请查看附录"},samples1:{label:"基础用法",description:"实现纵向滚动"},samples2:{label:"横向滚动",description:""},samples3:{label:"下拉刷新",description:""},samples4:{label:"上拉加载",description:""},samples5:{label:"粘性标题",description:""},samples6:{label:"配合TabBar",description:""},samples7:{label:"手动初始化",description:""},attrsinfo:{row1column2:"水平滚动",row2column2:"垂直滚动",row3column2:"可回弹",row4column2:"内容发生变化时自动重置滚动区域尺寸",row5column2:"手动初始化",row6column2:"触发到达底部的提前量",row7column2:"初始化时立即触发是否到达底部检查",row8column2:"触发滚动的角度值范围",row9column2:"防止浏览器默认滚动"},refreshAttrs:{row1column2:"距离顶部的距离，输入值仅为数字",row2column2:"释放刷新的状态",row3column2:"刷新状态",row4column2:"下拉刷新文本内容",row4column5:"下拉刷新",row5column2:"释放刷新文本内容",row5column5:"释放刷新",row6column2:"刷新中的文本内容",row6column5:"刷新中...",row7column2:"进度条颜色"},moreAttrs:{row1column2:"全部已加载",row2column2:"加载中的文本内容",row2column5:"更多加载中...",row3column2:"全部已加载的文本内容",row3column5:"全部已加载"},slotInfo:{default:"滚动区域内容槽。当内容更改时，需要调用reflowScroller来重置滚动区域。具体请参阅reflowScroller refresh。",refresh:"下拉刷新组件槽，您可以使用slot-scoped来获得相关的滚动状态（当槽作用域不兼容时，滚动状态也可以通过事件动态设置），如下所示：",more:"更多加载组件槽，通过实际加载情况，在事件中改变isFinished的值。默认为false。"},eventInfo:{row1column2:"距左侧距离，输入值仅为数字",row2column2:"距顶部距离，输入值仅为数字",detail1:"参数说明",detail2:"释放刷新事件",detail3:"刷新事件",detail4:"加载结束事件"},methodInfo:{row1column2:"距左侧距离，输入值仅为数字",row2column2:"距顶部距离，输入值仅为数字",row3column2:"使用动画",detail1:"初始化滚动区域。（当manual-init被设置为true时使用。）",detail2:"重置滚动区域，需要在常规滚动区域的内容发生更改后调用该区域。",detail3:"滚动到指定位置，以下为参数说明：",detail4:"获取滚动位置，其返回对象为 {left: number, top: number}",detail5:"开启手动下拉刷新",detail6:"下拉刷新结束方法，，示例代码：",detail7:"上拉加载结束方法，示例代码："}},actionsheetDemo:{label:"ActionSheet 动作面板",description:"",defatltText:"默认",customText:"自定义",detail1:{label:"介绍",description:"底部弹起的模态面板，包含与当前情境相关的多个选项。"},attrsInfo:{row1column2:"是否显示动作面板",row2column2:"面板选项列表",row3column2:"顶部标题",row4column2:"取消按钮文字",row5column2:"选项上方的描述信息",row6column2:"关闭图标名称或图片链接",row7column2:"动画时长，单位秒",row8column2:"是否显示圆角",row9column2:"是否显示遮罩层",row10column2:"是否锁定背景滚动",row11column2:"是否在显示弹层时才渲染节点",row12column2:"是否在页面回退时自动关闭",row13column2:"是否在点击选项后关闭",row14column2:"是否在点击遮罩层后关闭",row15column2:"是否开启底部安全区适配",row16column2:"指定挂载的节点"},actionsInfo:{description:"actions 属性是由对象构成的数组，数组中的每个对象配置一列，对象可以包含以下值：",row1column2:"标题",row2column2:"二级标题",row3column2:"选项文字颜色",row4column2:"为对应列添加额外的 class",row5column2:"是否为加载状态",row6column2:"是否为禁用状态"},eventInfo:{row1column2:"点击选项时触发，禁用或加载状态下不会触发",row2column2:"点击取消按钮时触发",row3column2:"打开面板时触发",row4column2:"关闭面板时触发",row5column2:"打开面板且动画结束后触发",row6column2:"关闭面板且动画结束后触发",row7column2:"点击遮罩层时触发"}},navbarDemo:{label:"NavBar 导航栏",description:"",defatltText:"默认",customText:"自定义",samples1:{label:"基础用法",description:""},samples2:{label:"插槽的使用",description:"使用插槽，通过插槽自定义导航栏两侧的内容"},attrsInfo:{row1column2:"标题",row2column2:"左侧文案",row3column2:"右侧文案",row4column2:"是否显示左侧箭头",row5column2:"是否显示下边框",row6column2:"是否固定在顶部",row7column2:"固定顶部时，是否在标签位置生成一个等高的占位元素",row8column2:"元素 z-index"},slotInfo:{row1column2:"自定义标题",row2column2:"自定义左侧区域内容",row3column2:"自定义右侧区域内容"},eventInfo:{row1column2:"点击左侧按钮时触发",row2column2:"点击右侧按钮时触发"}},tabbarDemo:{label:"TabBar 标签栏",description:"",defatltText:"默认",customText:"自定义",samples1:{label:"基础用法",description:""},samples2:{label:"通过名称匹配",description:""},samples3:{label:"微标提示",description:""},samples4:{label:"自定义图标",description:"通过icon插槽自定义图标，可以通过 slot-scope 判断标签是否选中"},samples5:{label:"自定义颜色+监听切换事件用法",description:""},samples6:{label:"路由模式",description:"用于搭配vue-router使用。路由模式下会匹配页面路径和标签的to属性，并自动选中对应的标签"},attrsInfo:{row1column2:"当前选中标签的名称或索引值",row2column2:"是否固定在底部",row3column2:"是否显示外边框",row4column2:"元素 z-index",row5column2:"选中标签的颜色",row6column2:"未选中标签的颜色",row7column2:"固定在底部时，是否在标签位置生成一个等高的占位元素",row8column2:"是否开启底部安全区适配，设置 fixed 时默认开启",row9column2:"是否开启路由模式"},eventInfo:{row1column2:"切换标签时触发",row1column3:"active: 当前选中标签的名称或索引值"},tabBarItemAttrsInfo:{row1column2:"标签名称，作为匹配的标识符",row1column5:"当前标签的索引值",row2column2:"图标名称或图片链接",row3column2:"是否显示图标右上角小红点",row4column2:"图标右上角徽标的内容",row5column2:"图标右上角徽标的内容（已废弃，请使用 badge 属性）",row6column2:"点击后跳转的链接地址",row7column2:"点击后跳转的目标路由对象，同 vue-router 的 to 属性",row8column2:"是否在跳转时替换当前页面历史"},tabBarItemSlotInfo:{row1column2:"自定义图标,其中active表示是否为选中标签"}},celllayoutDemo:{label:"CellLayout 宫格",description:"",defatltText:"默认",customText:"自定义",detail1:{label:"介绍",description:"宫格可以在水平方向上把页面分隔成等宽度的区块，用于展示内容或进行页面导航"},samples1:{label:"基础用法",description:"默认一行展示四个格子,有边框"},samples2:{label:"自定义列数",description:"可以通过column-num自定义列数"},samples3:{label:"自定义显示内容",description:"通过插槽可以自定义格子展示的内容"},samples4:{label:"方形格子+自定义（间距+列数）+微标提示",description:""},samples5:{label:"页面导航",description:"使用url属性注意是跳转页面的路径"},attrsInfo:{row1column2:"列数",row2column2:"图标大小，默认单位为px",row3column2:"格子之间的间距，默认单位为px",row4column2:"是否显示边框",row5column2:"是否将格子内容居中显示",row6column2:"是否将格子固定为正方形",row7column2:"是否开启格子点击反馈"},celllayoutitemAttrsInfo:{row1column2:"文字",row2column2:"图标名称或图片链接",row3column2:"图标颜色",row4column2:"是否显示图标右上角小红点",row5column2:"图标右上角徽标的内容",row6column2:"图标右上角徽标的内容（已废弃，请使用 badge 属性）",row7column2:"点击后跳转的链接地址",row8column2:"点击后跳转的目标路由对象，同 vue-router 的 to 属性",row9column2:"是否在跳转时替换当前页面历史"},celllayoutitemEventInfo:{row1column2:"点击格子时触发"},celllayoutitemSlotsInfo:{row1column2:"自定义宫格的所有内容",row2column2:"自定义图标",row3column2:"自定义文字"}},swipecellDemo:{label:"SwipeCell 滑动单元格",description:"",defatltText:"默认",customText:"自定义",samples1:{label:"基础用法",description:""},samples2:{label:"自定义内容",description:""},samples3:{label:"异步关闭调用",description:"通过传入before-close回调函数，可以自定义两侧滑动内容关闭时的行为"},attrsInfo:{row1column2:"标识符，可以在事件参数中获取到",row2column2:"指定左侧滑动区域宽度，单位为px",row3column2:"指定右侧滑动区域宽度，单位为px",row4column2:"关闭前的回调函数",row5column2:"是否禁用滑动",row6column2:"是否阻止滑动事件冒泡"},beforecloseAttrsInfo:{description:"beforeClose 的第一个参数为对象，对象中包含以下属性：",row1column2:"标识符",row2column2:"关闭时的点击位置 (left right cell outside)",row3column2:"SwipeCell 实例，用于调用实例方法"},slotsInfo:{row1column2:"自定义显示内容",row2column2:"左侧滑动内容",row3column2:"右侧滑动内容"},eventInfo:{row1column2:"点击时触发",row1column3:"关闭时的点击位置 (left right cell outside)",row2column2:"打开时触发",row3column2:"关闭时触发"},methodInfo:{description:"通过 ref 可以获取到 SwipeCell 实例并调用实例方法，详见组件实例方法",row1column2:"打开单元格侧边栏,其参数 position: left | right",row2column2:"收起单元格侧边栏"}},texticonDemo:{label:"TextIcon 文本图标",description:"",defatltText:"默认",customText:"自定义",samples1:{label:"基础用法",description:""},samples2:{label:"颜色+字体大小设置",description:""},samples3:{label:"文本排布方式(默认文本在下方)",description:""},samples4:{label:"文本排布方式+文本边距设置（默认为2px）",description:""},attrsInfo:{row1column2:"图标形状",row2column2:"图标颜色",row3column2:"图标大小",row4column2:"是否有圆点标记",row5column2:"角标内容",row6column2:"文本名称",row7column2:"文本字体颜色",row8column2:"文本字体大小",row9column2:"文本相对于图标的位置，分别有 'top' | 'right' | 'bottom' | 'left'",row10column2:"文本距离图标的边距"},eventInfo:{row1column2:"点击时触发"}},stepperDemo:{label:"Stepper 步进器",description:"",defatltText:"默认",customText:"自定义",detail1:{label:"介绍",description:"步进器由增加按钮、减少按钮和输入框组成，用于在一定范围内输入、调整数字"},samples1:{label:"基础用法",description:""},samples2:{label:"步长设置",description:"通过step属性设置每次点击增加或减少按钮时变化的值，默认值为1，间隔设置为3"},samples3:{label:"限制输入范围",description:"通过min和max属性限制输入值的范围"},samples4:{label:"限制输入整数",description:"设置integer属性后，输入框将限制只能输入整数"},samples5:{label:"禁用状态",description:"通过设置disabled属性来禁用步进器，禁用状态下无法点击按钮或修改输入框"},samples6:{label:"禁用输入框",description:"通过设置disable-input属性来禁用输入框，此时按钮仍然可以点击"},samples7:{label:"固定小数位数",description:"通过设置decimal-length属性可以保留固定的小数位数"},samples8:{label:"自定义大小",description:"通过input-width属性设置输入框宽度，通过button-size属性设置按钮大小和输入框高度"},samples9:{label:"异步变更",description:"如果需要异步地修改输入框的值，可以设置async-change属性，并在change事件中手动修改value"},attrsInfo:{row1column2:"当前输入的值",row2column2:"最小值",row3column2:"最大值",row4column2:"初始值，当 v-model 为空时生效",row5column2:"步长，每次点击时改变的值",row6column2:"标识符，可以在change事件回调参数中获取",row7column2:"输入框宽度，默认单位为px",row8column2:"按钮大小以及输入框高度，默认单位为px",row9column2:"固定显示的小数位数",row10column2:"是否只允许输入整数",row11column2:"是否禁用步进器",row12column2:"是否禁用增加按钮",row13column2:"是否禁用减少按钮",row14column2:"是否禁用输入框",row15column2:"是否开启异步变更，开启后需要手动控制输入值",row16column2:"是否显示增加按钮",row17column2:"是否显示减少按钮",row18column2:"是否开启长按手势"},eventInfo:{row1column2:"当绑定值变化时触发的事件",row2column2:"点击不可用的按钮时触发",row3column2:"点击增加按钮时触发",row4column2:"点击减少按钮时触发",row5column2:"输入框聚焦时触发",row6column2:"输入框失焦时触发"}},indexbarDemo:{label:"IndexBar 索引栏",description:"",defatltText:"默认",customText:"自定义",samples1:{label:"基础用法",description:""},attrsInfo:{row1column2:"索引字符列表",row2column2:"z-index 层级",row3column2:"是否开启锚点自动吸顶",row4column2:"锚点自动吸顶时与顶部的距离",row5column2:"索引字符高亮颜色"},eventInfo:{row1column2:"选中字符时触发",row2column2:"index: 索引字符"},indexanchorAttrsInfo:{row1column2:"索引字符"},indexanchorSlotsInfo:{row1column2:"锚点位置显示内容，默认为索引字符"}},skeletonDemo:{label:"Skeleton 骨架屏",description:"",defatltText:"默认",customText:"自定义",samples1:{label:"基础用法",description:""},samples2:{label:"显示头像",description:"通过avatar属性显示头像占位图"},samples3:{label:"展示子组件",description:"将loading属性设置成false表示内容加载完成，此时会隐藏占位图，并显示Skeleton的子组件,1秒后显示"},attrsInfo:{row1column2:"段落占位图行数",row2column2:"段落占位图宽度，可传数组来设置每一行的宽度",row3column2:"是否显示标题占位图",row4column2:"是否显示头像占位图",row5column2:"是否显示骨架屏，传 false 时会展示子组件内容",row6column2:"是否开启动画",row7column2:"标题占位图宽度",row8column2:"头像占位图大小",row9column2:"头像占位图形状，可选值为square"}}}},"./demo/DemoLangJa.js":
/*!****************************!*\
  !*** ./demo/DemoLangJa.js ***!
  \****************************/
/*! no static exports found */function(e,n,t){"use strict";e.exports={main:{title1:"開発マニュアル",title2:"コンポーネントリスト",title3:"総合デモ",title4:"フィードバック",title5:"拡張機能",title6:"Gantt ガントチャート",title7:"Charts チャート",title8:"Excel Export/Import",title9:"モバイル",radiolabel1:"中",radiolabel2:"日",radiolabel3:"EN",code:"コード",line1:"サイトクイック成型ツール",line21:"たった世界平和を守るために!",line22:"たった残業を減らすために!",line23:"たったこんな君になれるように: ",line24:"製品デザイナー",line25:"インタラクティブデザイナー",line26:"視覚デザイナー",line27:"製品マネージャー",line28:"フロントエンジニア",table:{method:"メソッド名",description:"概説",usage:"使い方",parameters:"パラメータ",type:"タイプ",acceptedValues:"オプション値",defaultValue:"デフォルト値",event:"イベント",name:"名称"}},installDemo:{label:"素早く使いこなす",samples1:{label:"インストール",description:"ページにjsとcss をインポートすれば、使い始められる。"},samples6:{label:"npm インストール",description:"npmを使用します。これは、webpackパッケージツールでより適切に使用できます。"},samples2:{description:"vueコンポーネントで Hello world ページを簡単に出来上がれる。"},samples3:{description:"组件内封装的一些常用方法",row1column2:"判断参数是否定义(undefined或null状态为未定义)",row2column2:"判断参数是否为String类型",row3column2:"判断参数是否为Number类型",row4column2:"判断参数是否为Boolean类型",row5column2:"判断参数是否为File类型",row6column2:"判断参数是否为Object类型",row7column2:"判断参数是否为Array类型",row8column2:"判断参数是否为Function类型",row9column2:"判断参数是否为Date类型",row10column2:"判断参数是否为NodeList类型",row11column2:"判断参数是否为Element类型",row12column2:"判断参数是否为VNode类型",row13column2:"参数转换为String类型并返回",row14column2:"参数转换为Date类型并返回, 如果失败返回null",row15column2:"将参数按指定日期格式转换为String类型并返回, 如果失败返回null",row16column2:"将参数按指定日期格式转换为Date类型并返回, 如果失败返回null",row17column2:"根据年月获取当月的天数, 失败返回null",row18column2:"根据日期获取当月第一天是星期几, 失败返回null",row19column2:"根据日期获取本周是第几周, 失败返回null",row20column2:"根据类型返回指定日期的向前或向后日期, 如果失败返回null",row21column2:"对Array或NodeList循环, 类似forEach方法",row22column2:"循环对象的可枚举属性",row23column2:'去除参数的首尾空格并返回, 参数不为String时返回""',row24column2:"将来自一个或多个源对象中的值复制到一个目标对象, 只复制可枚举属性",row25column2:"将Array类型转换为Object类型",row26column2:"对一个元素绑定事件",row27column2:"对一个元素移除事件",row28column2:"对一个元素绑定事件, 触发后移除该事件",row29column2:"判断元素是否存在某一名称的class",row30column2:"对元素追加某一名称的class",row31column2:"对元素移除某一名称的class",row32column2:"获取元素某一属性的style, 如果失败返回null",row33column2:"设置元素某一属性的style",row34column2:"根据名称获取Cookie, 如果失败返回null",row35column2:"根据名称设置Cookie",row36column2:"根据名称移除Cookie",row37column2:"函数节流, 当调用时刻大于等于执行周期则执行该动作，然后进入下一个新周期, 默认16ms为一周期",row38column2:"函数防抖, 当调用时刻大于等于执行周期则执行该动作，若在周期内又调用此动作则进入新一个周期, 默认16ms为一周期",row39column2:"对一个元素绑定resize事件, 内置函数防抖",row40column2:"对一个元素移除resize事件",row41column2:"DOM树上移除某个节点",row42column2:"DOM树上对某个节点插入一个子节点",row43column2:"获取浏览器竖滚动条宽度",row44column2:"对一个元素绑定接触屏幕时触发事件",row45column2:"对一个元素绑定屏幕上移动时触发事件",row46column2:"对一个元素绑定屏幕上移开时触发事件",row47column2:"对一个元素移除接触屏幕时触发事件",row48column2:"对一个元素移除屏幕上移动时触发事件",row49column2:"对一个元素移除屏幕上移开时触发事件",row50column2:"浏览器全屏, 类似F11效果",row51column2:"获取系统信息",row52column2:"设置显示的语言",row53column2:"设置语言内容",row54column2:"生产模式, 取消Vue代码检查及日志输出",row55column2:"获取当前画面控件的最大zindex"}},i18nDemo:{label:"I18n 國際化",samples1:{label:"基本使い方",description:"VueUtil.setLocale()で多言語を設定し、VueUtil.setLang()で表示言語を設定する。Vueコンポーネント内に$t()で多言語の値を取得でき、Vueコンポーネント外にVue.t()で多言語の値を取得できる;"},samples2:{label:"vue-i18n@5.xを使用",description:"viyはvue-i18n@5.xと互換性があり、多言語切り替えがさらに簡単になります。"},samples3:{label:"vue-i18n@6.x +を使用 ",description:"6.xとの互換性のために、手動で処理する必要があります。"}},ajaxDemo:{label:"非同期データ伝送",samples1:{label:"基本使い方",description:"グローバルのVueオブジェクトに基付くhttpを利用でき、あるコントロールにに基付くhttpも利用できる。"},samples2:{label:"サポートされたHTTPメソッド",description:"リクエストAPIはRESTスタイルにより設定され、7種リクエストAPIを提供している"},samples3:{row1column3:"リクエストURL",row2column3:'リクエストHTTPメソッド。例："GET", "POST"又は他のHTTPメソッド',row4column3:"リクエストURLパラメータオブジェクト",row6column3:"ミリ秒単位のリクエストタイムアウト時間(0とはタイムアウト時間なし)",row7column3:"リクエスト送信前の処理関数、jQueryのbeforeSend関数に類似",row8column3:"ProgressEventコールバック処理関数",row9column3:"クロスドメインリクエスト時に証明書を使う必要かを表す",row10column3:"PUT, PATCH, DELETEリクエストを発信時、HTTP POSTで発信し、リクエストヘッダのX-HTTP-Method-Overrideも設定する",row11column3:"request bodyをapplication/x-www-form-urlencoded content typeで発信"}},layoutDemo:{label:"Layout レイアウト",description:"基礎の24段組で、レイアウトを素早く簡単に作成。",samples1:{label:"基礎レイアウト",description:"row と col コンポーネントで、 col コンポーネントの span 属性ても自由にレイアウトを組合せる。"},samples2:{label:"段組間隔",description:"rowコンポーネントはgutter 属性を提供し、各カラム間の間隔を指定できる。デフォルト間隔は0とする"},samples3:{label:"混合レイアウト",description:"基礎の 1/24 段組で、任意に組み合わせを拡張し、複雑な混合レイアウトにする。"},samples4:{label:"寄せ式",description:"type 属性を 'flex'にセットし、flex レイアウトを使用可になる。justify 属性でstart、center、end、space-between、space-around 中の値を指定してから、子元素の組版式を定義できる。"},samples5:{label:"レスポンス式レイアウト",description:"Bootstrapのレスポンスデザインを参照した上、 4つレスポンスサイズをプリセットした：xs、sm、md と lg."},samples6:{row1column2:"グリッド間隔",row2column2:"レイアウトモデル、 オプション flex",row3column2:"flex レイアウトにおける水平アレンジモード",row4column2:"flex レイアウトにおける垂直アレンジモード"},samples7:{row1column2:"グリッド占めた列数",row2column2:"グリッド左側の間隔セル数",row3column2:"グリッド右移動セル数",row4column2:"グリッド左移動セル数",row5column2:"'<768px' レスポンス式グリッド数又はグリッドプロパティオブジェクト",row6column2:"'≥768px' レスポンス式グリッド数又はグリッドプロパティオブジェクト",row7column2:"'≥992px' レスポンス式グリッド数又はグリッドプロパティオブジェクト",row8column2:"'≥1200px' レスポンス式グリッド数又はグリッドプロパティオブジェクト",row5column3:"Number / Object (例： {span: 4, offset: 4})",row6column3:"Number / Object (例： {span: 4, offset: 4})",row7column3:"Number / Object (例： {span: 4, offset: 4})",row8column3:"Number / Object (例： {span: 4, offset: 4})"}},iconDemo:{label:"Icon アイコン",description:"よく使用うアイコンセット",samples1:{label:"使い方",description:"クラス名をvue-icon-iconNameに設定することによって直接使用可になる"},samples2:{label:"アイコンセット"}},buttonDemo:{label:"Button ボタン",description:"よく使う操作ボタン",defaultButton:"デフォルトボタン",mainButton:"メインボタン",textButton:"文字ボタン",circleButton:"角丸ボタン",successButton:"成功ボタン",warningButton:"警告ボタン",dangerButton:"危険ボタン",infoButton:"情報ボタン",samples1:{label:"基本使い方",description:"Button コンポーネントは７種テーマをデフォルトで提供している。type属性で定義し、デフォルトはdefaultとする。"},samples2:{label:"色傾向有り",description:"異なるtype属性対応となるスタイルを設定し、plain属性を設定する。Booleanを受取。注意すべき点：その場合は、typeはtextで良いが、意味がない。text buttonスタイルが表示されるから。",defaultLabel:"デフォルト色表示",hoverLabel:"hover 色表示"},samples3:{label:"使用不可状態",description:"disabled 属性を設定すれば良い。Booleanを受取。trueは使用不可とする。"},samples4:{label:"アイコンボタン",description:"icon属性を設定すれば良い。文字右のiconに設定しても良い、iタグだけ使えば良い。カスタマイズアイコンても使用できる。"},samples5:{label:"ボタングループ",description:"<vue-button-group>タグでボタンをネスティングする"},samples6:{label:"ロード中",description:"loading属性をtrueに設定すれば良い。"},samples7:{label:"異なるサイズ",description:"size属性を設定して配置する。"},samples8:{row1column2:"サイズ",row2column2:"タイプ",row3column2:"角丸ボタンか",row4column2:"シンプルボタンか",row5column2:"ロード中状態か",row6column2:"使用不可状態か",row7column2:"アイコン",row8column2:"デフォルトフォーカスか",row9column2:"原生type属性"}},inputDemo:{label:"Input 入力欄",description:"マウスやキーボードで文字を入力する。",defaultPlaceholder:"内容を入力してください",selectPlaceholder:"選択してください",samples1:{label:"基本使い方"},samples2:{label:"使用不可状態",description:"disabled属性を設定すれば良い。Booleanを受取、trueは使用不可とする。"},samples3:{label:"icon付き入力欄",description:"icon属性でinputコンポーネントの後ろに表示アイコンを追加できる。on-icon-clickフック関数でアイコンクリック後の必要なロジックを実行される。"},samples4:{label:"テキストエリア",description:"type属性の値をtextareaに設定できる。テキストエリアの高さはrows属性で制御できる"},samples5:{label:"テキスト高さにセルフ適応するテキストエリア",description:"autosize 属性を設定により、テキストエリアの高さはテキスト内容に応じて自動調整できる。また autosize をオブジェクトに設定し、最小行数と最大行数も設定できる。"},samples6:{label:"ミックス型入力欄",description:"元素を前置又は後置可能、通常はタグ又はボタンとする。input内の前置又は後置の内容はslotで指定できる。",selectLabel1:"レストラン名",selectLabel2:"注文番号",selectLabel3:"ユーザー電話"},samples7:{label:"サイズ",description:"size属性で入力欄のサイズを指定できる。デフォルトの大きさ以外、large、smallと mini三種サイズも提供している。"},samples8:{label:"入力アドバイス付き",description:"autocompleteは入力アドバイス付き入力コンポーネントである。fetch-suggestionsは入力アドバイスを返すメソッド属性である。例えば、querySearch(queryString, cb)の場合、当該メソッドに入力アドバイスデータを準備できた時にcb(data)でautocompleteコンポーネントに返す。",label1:"活性化、つまり入力アドバイスをリスト化する",label2:"入力後入力提案のマッチング"},samples9:{label:"カスタムフォーマット",description:"cleave属性を設定すれば良い。Objectを受取"},samples10:{row1column2:"タイプ",row2column2:"バインディング値",row3column2:"最大入力長さ",row4column2:"最小入力長さ",row5column2:"プレースホルダテキスト",row6column2:"使用不可",row7column2:'入力欄サイズ、type!="textarea"時のみ有効',row8column2:"入力欄前部アイコン",row9column2:"入力欄尾部アイコン",row10column2:'入力欄行数、type=="textarea"時のみ有効',row11column2:'カスタムフォーマット, type!="extarea"時のみ有効、更なるフォーマットは下表を参考',row12column2:'内容高さにセルフ適応、type=="textarea"時のみ有効、オブジェクトをインプット可、例 {minRows: 2, maxRows: 6}',row13column2:"原生属性、自動補充",row14column2:"原生属性",row15column2:"原生属性、読み取り専用か",row16column2:"原生属性、最大値を設定",row17column2:"原生属性、最小値を設定",row18column2:"原生属性、入力フィールドの合法数字間隔を設定",row19column2:'ユーザーにズームされるかを制御、 type="textarea" 時のみ有効',row20column2:"原生属性、自動的にフォーカスを取得する",row21column2:"テキストの配置",row22column2:"原生属性、所属する1つまたは複数のフォームのID",row23column2:"Input内アイコンのフック関数をクリック",row24column2:"キーボードポップアップタイプは、移動端のみで使用します。"},samples11:{row1column2:"Input内のアイコンをクリック時にトリガー",row2column2:"Inputはフォーカスを失った時にトリガー",row3column2:"Inputはフォーカスを取得時にトリガー",row4column2:"Input値チェンジ時にトリガー"},samples12:{row1column2:"プレースホルダテキスト",row2column2:"使用不可",row3column2:"必須値にバンディング値を入力",row4column2:"当該パラメータでカスタマイズした入力アドバイスリスト表の項目コンポーネント名を指定する",row5column2:"入力アドバイスのメソッドを返し、入力アドバイスデータresolve時のみ、callback(data:[])を呼び出してそれを返す",row6column2:"Autocompleteリスト表のクラス名をドロップダウン",row7column2:"入力欄focus時にアドバイスリスト表を表示するか",row8column2:"アイコンのコールバック関数をクリック",row9column2:"入力欄尾部アイコン",row10column2:"コンフィグレーションオプション、詳細は下表を参照"},samples13:{row1column2:"オプションの値をオプションオブジェクトのある属性値に指定",row2column2:"オプションのタグをプションオブジェクトのある属性値に指定"},samples14:{row1column2:"アドバイス項目に選択時にトリガー"},samples15:{row1column2:"クレジットカードフォーマットにするかは、有効にする後IINによるクレジットカードタイプを自動検出する。",row2column2:"クレジットカードタイプをチェンジした後、トリガーしたコールバック関数。",row3column2:"携帯フォーマットを有効にするかは、必ずphoneRegionCodeと一緒に利用",row4column2:"各国地域の電話番号フォーマットエンコード、エンコードはISO 3166-1 alpha-2を参考",row5column2:"日付フォーマットを有効にするか",row6column2:"配列で日付フォーマットを定義する",row7column2:"数字フォーマットを有効にするか",row8column2:"区切り文字グループスタイル",row9column2:"整数部を何桁に設定する",row10column2:"小数部を何桁に設定する",row11column2:"小数点スタイル",row12column2:"正数しか許可しないか",row13column2:"配列値で入力桁数をフォーマット化する",row14column2:"区切り文字設定",row15column2:"多数区切り文字使用",row16column2:"スタートにプリセットした値、それは削除又は更新させない",row17column2:"元値取得時プリセット値を削除するか",row18column2:"数字(0~9)しか入力できないか ",row19column2:"大文字に変換するか",row20column2:"小文字に変換するか",row21column2:"カスタマイズフォーマット"}},dateDemo:{label:"DatePicker 日付セレクター",description:"日付選択または入力用",samples1:{label:"基本使い方",description:"ショートカットオプションはpicker-optionsオブジェクトのshortcutsを設定要、日付使用不可にはdisabledDateで設定。",defaultLabel:"デフォルト",optionsLabel:"ショートカットオプション付き",defaultPlaceholder:"日付選択",todayLabel:"今日",yesterdayLabel:"昨日",weekAgoLabel:"先週"},samples2:{label:"他日付単位",description:"基本単位はtype属性で指定",weekLabel:"週",weekPlaceholder:"週選択",weekFormat:"yyyy 第 WW 週",monthLabel:"月",monthPlaceholder:"月選択",yearLabel:"年",yearPlaceholder:"年選択"},samples3:{label:"日付範囲選択",description:"セレクターで時間範囲を手軽に選択できる。",defaultLabel:"デフォルト",optionsLabel:"ショートカットオプション付き",defaultPlaceholder:"日付範囲選択",lastWeekLabel:"直近１週間",lastMonthLabel:"直近１ヶ月間",last3MonthLabel:"直近３ヶ月間"},samples4:{row1column2:"読み取り専用か(PCのみ使用可能です)",row2column2:"使用不可か",row21column2:"テキストボックスを入力できます(PCのみ使用可能です)",row3column2:"クリアボタンを表示するか",row4column2:"入力欄サイズ",row5column2:"プレースホルダテキスト",row51column2:"開始日のプレースホルダ",row52column2:"終了日のプレースホルダ",row6column2:"タイプ表示",row7column2:"時間日付フォーマット表示",row7column4:"年:yyyy, 月:MM, 日:dd, 時:HH, 分:mm, 秒:ss, 週:WW",row8column2:"ドロップダウンの寄せ方(PCのみ使用可能です)",row9column2:"ドロップダウンのクラス名",row10column2:"範囲選択時の区切り文字",row11column2:"ドロップダウンオープン時デフォルトで選択された日付(PCのみ使用可能です)",row11column4:"new Date()に解析される",row111column2:"値バインディングのフォーマット。 指定されていない場合、バインディング値はDateオブジェクトです。",row12column2:"カレントセレクター特有なオプション、下表を参考(PCのみ使用可能です)"},samples5:{row1column2:"ショートカットオプションを設定、 {text, onClick}オブジェクトをインプット要、使い方はdemoまたは下表を参考",row2column2:"使用不可状態を設定、パラメータはカレント日付、要求としてはBooleanを返す",row3column2:"週開始日",row4column2:"日付選択した後実行するコールバック、daterange または datetimerange の場合だけ有効になる"},samples6:{row1column2:"タイトルテキスト",row2column2:'選択した後のコールバック関数は、パラメータが vmで、 "pick" イベントをトリガーによるセレクターの値を設定する。例 vm.$emit("pick", new Date())'},samples7:{row1column2:"inputの値がチェンジ時トリガーされ、戻り値とテキストボックスは一致",row1column3:"フォーマット後の値"},samples8:{row1column2:"モバイル端UIを表示するかどうか",row2column2:"現在の選択値を選択します(v-modelで使用します)",row3column2:"入力ボックスのテキストの水平方向の配置(show-mobile-uiがtrueの時に使用され、かつtypeが「daterange」であり、「datetimerange」は無効です。)",row3column3:"区間選択入力ボックスのテキストの水平方向の配置(show-mobile-uiがtrueの時に使用され、かつtypeが「daterange」であり、「datetimerange」が有効です。)",row4column2:"選択範囲の最小日付(show-mobile-uiがtrueの場合のみ使用できます。)",row4column3:"選択範囲の最大日付(show-mobile-uiがtrueの場合のみ使用できます。)",row5column2:"コンポーネントの一番左のアイコンの設定(show-mobile-uiがtrueの場合のみ使用できます。)",row5column3:"コンポーネントの一番右側の内容はアイコンの設定をクリアします。(show-mobile-uiがtrueの場合のみ使用できます。)",row6column2:"週の開始日(show-mobile-uiがtrueの場合のみ使用できます。)",row7column2:"ロード状態を表示するかどうか(show-mobile-uiがtrueの場合のみ使用できます。)",row8column2:"トップバーのタイトル(show-mobile-uiがtrueの場合のみ使用できます。)",row9column2:"開始日のトップバーのタイトル(show-mobile-uiがtrueの場合のみ使用できます。)",row9column3:"終了日の上の列のタイトル(show-mobile-uiがtrueの場合のみ使用できます。)",row10column2:"決定ボタンのテキスト内容(show-mobile-uiがtrueの場合のみ使用できます。)",row10column3:"キャンセルボタンのテキスト内容(show-mobile-uiがtrueの場合のみ使用できます。)",row11column2:"トップバーを表示するかどうか(show-mobile-uiがtrueの場合のみ使用できます。)",row12column2:"オプションの高さ(show-mobile-uiがtrueの場合のみ使用できます。)",row13column2:"表示されるオプションの個数(show-mobile-uiがtrueの場合のみ使用できます。)",row14column2:"高速スライド時の慣性スクロールの時間は長く、単位ms(show-mobile-uiがtrueの場合のみ使用できます。)",row15column2:"オプションの書式設定関数(show-mobile-uiがtrueの場合のみ使用できます。)",row16column2:"確定ボタンをクリックした時にトリガします。(show-mobile-uiがtrueの場合のみ使用できます。)",row16column3:"現在の値、すなわち(value, index)",row17column2:"キャンセルボタンをクリックしたときにトリガします。(show-mobile-uiがtrueの場合のみ使用できます。)"}},timeDemo:{label:"TimePicker 時間セレクター",description:"時間を選択または入力用。",samples1:{label:"基本使い方",description:"vue-time-selectを利用時、star、endとstepaで開始時間、終了時間とステップのオプションを指定する; vue-time-pickerを利用時、selectableRangeで時間範囲オプションを制限する",timelabel1:"固定時間点",timelabel2:"任意時間点",timePlaceholder1:"時間選択",timePlaceholder2:"任意時間点"},samples2:{label:"時間範囲",description:"vue-time-selectを利用時、もし先に開始時間を選択した場合、終了時間内の候補オプションの状態はそれに伴い変わる; vue-time-picker利用時、is-range属性を追加すれば時間範囲を選択できるようになる",timelabel1:"固定時間範囲",timelabel2:"任意時間範囲",timePlaceholder1:"開始時間",timePlaceholder2:"終了時間",timePlaceholder3:"時間範囲選択"},samples3:{row1column2:"読み取り専用か",row2column2:"使用不可か",row21column2:"テキストボックスを入力できます",row3column2:"クリアボタンを表示するか",row4column2:"入力欄サイズ",row5column2:"プレースホルダテキスト",row51column2:"開始日のプレースホルダ",row52column2:"終了日のプレースホルダ",row53column2:"時間範囲選択かどうか、timepickerにのみ有効",row54column2:"方向キーで時間を選択できます，timepickerのみ有効",row55column2:"範囲選択時の区切り文字",row56column2:"値バインディングのフォーマット。 指定されていない場合、バインディング値はDateオブジェクトです。",row6column2:"ドロップダウンの寄せ方",row7column2:"ドロップダウンのクラス名",row8column2:"カレントセレクター特有なオプション、下表を参考",row9column2:"最小時間数(show-mobile-uiがtrueの場合のみ使用できます。)",row9column3:"最大時間数(show-mobile-uiがtrueの場合のみ使用できます。)",row10column2:"最小分数(show-mobile-uiがtrueの場合のみ使用できます。)",row10column3:"最大分数(show-mobile-uiがtrueの場合のみ使用できます。)",row11column2:"最小秒数(show-mobile-uiがtrueの場合のみ使用できます。)",row11column3:"最大秒数(show-mobile-uiがtrueの場合のみ使用できます。)"},samples4:{row1column2:"開始時間",row2column2:"終了時間",row3column2:"間隔時間",row4column2:"最小時間、当該時間より小さい時間帯が使用不可にする",row5column2:"最大時間、当該時間より大きい時間帯が使用不可にする"},samples5:{row1column2:'時間帯オプション, 例　"18:30:00 - 20:30:00"または配列["09:30:00 - 12:00:00", "14:30:00 - 18:30:00"]をインプット',row2column2:"時間フォマード化(TimePicker)",row2column4:"時:HH, 分:mm, 秒:ss"},samples6:{row1column2:"inputの値がチェンジ時トリガーされ、戻り値とテキストボックスは一致",row1column3:"フォーマット後の値"}},datetimeDemo:{label:"DateTimePicker 日付時間セレクター",description:"日付時間を選択または入力用。",samples1:{label:"基本使い方",description:"type属性をdatetimeに設定することで、同じセレクターで日付と時間を同時に選択できる。ショートカットオプションの使い方はDate Pickerと同様。",defaultLabel:"デフォルト",optionsLabel:"ショートカットオプション付き",defaultPlaceholder:"日付時間選択",todayLabel:"今日",yesterdayLabel:"昨日",weekAgoLabel:"先週"},samples2:{label:"日付と時間範囲",description:"typeをdatetimerangeに設定することで、日付と時間範囲を選択できる",defaultLabel:"デフォルト",optionsLabel:"ショートカットオプション付き",defaultPlaceholder:"時間範囲選択",lastWeekLabel:"直近一週",lastMonthLabel:"直近１ヶ月間",last3MonthLabel:"直近３ヶ月間"},samples3:{row1column2:"読み取り専用か",row2column2:"使用不可か",row21column2:"テキストボックスを入力できます",row3column2:"クリアボタンを表示するか",row4column2:"入力欄サイズ",row5column2:"プレースホルダテキスト",row51column2:"開始日のプレースホルダ",row52column2:"終了日のプレースホルダ",row54column2:"方向キーで時間を選択できます，timepickerのみ有効",row56column2:"値バインディングのフォーマット。 指定されていない場合、バインディング値はDateオブジェクトです。",row6column2:"タイプ表示",row7column2:"時間日付フォーマット表示",row7column4:"年:yyyy, 月:MM, 日:dd, 時:HH, 分:mm, 秒:ss, 週:WW",row8column2:"ドロップダウンの寄せ方",row9column2:"ドロップダウンのクラス名",row10column2:"範囲選択時の区切り文字",row11column2:"カレントセレクター特有なオプション、下表を参考"},samples4:{row1column2:"ショートカットオプション設定、{text, onClick}オブジェクトをインプット要、使い方はdemoまたは下表を参考",row2column2:"使用不可状態設定、パラメータはカレント日付とし、要求としてはBooleanを返す"},samples5:{row1column2:"タイトルテキスト",row2column2:'選択した後のコールバック関数は、パラメータが vmで、 "pick" イベントをトリガーによるセレクターの値を設定する。例 vm.$emit("pick", new Date())'},samples6:{row1column2:"inputの値がチェンジ時トリガーされ、戻り値とテキストボックスは一致",row1column3:"フォーマット後の値"}},calendarDemo:{label:"Calendar カレンダー",description:"日付とイベントを確認または選択用。",samples1:{label:"基本使い方",description:'eventsをバンディングで、イベントをバンディングし、バンディングデータは配列とし、且各元素は"date"属性を含む要、dayclickイベントで選択日の日付とイベントを取得できる'},samples2:{row1column2:"バンディングイベントセット",row2column2:"表示のイベントの件数、 full calendar時のみ有効",row3column2:'"+"を押して時に、もとイベントを表示か、 full calendar時のみ有効',row4column2:"使用full calendarか",row5column2:"日付のclass集合, full calendar時のみ有効",row6column2:"週のclass集合, full calendar時のみ有効",row7column2:"週のラベル, full calendar時のみ有効",row8column2:"月を切り替えられないようにする, calendar時のみ有効",row9column2:"カレンダーの種類, calendar時のみ有効"},samples3:{row1column2:"日付に選択時にトリガー",row2column2:"イベントに選択時にトリガー、 full calendar時のみ有効",row3column2:'"+"を押して時にトリガー、 full calendar時のみ有効'},samples4:{label:"Full Calendar",description:"full属性を設定すれば良い",row1column2:"headの左側, full calendar時のみ有効",row2column2:'headの右側, full calendar時のみ有効, 有効のときに"今月"表示しない'},samples5:{row1column2:"今月へ帰る, full calendar時のみ有効",row2column2:"指定日に移動する, full calendar時のみ有効"},samples7:{label:"スタティックカレンダー",description:"fix-month属性を設定すれば良い"}},imageDemo:{label:"イメージ",description:"IMGの固有の機能のほかに、怠惰な負荷、カスタムプレースホルダ、および負荷失敗などをサポートしています。",defatltText:"デフォルト",customText:"カスタム",samples1:{label:"基本的な使い方",description:"どのようにイメージをそのコンテナに合うようにサイズ変更されるべきかを示します。"},samples2:{label:"プレースホルダ",loading:"読み込み中",description:"slaot=placholderによって、ビットの内容をカスタマイズできます。"},samples3:{label:"読み込みに失敗しました",description:"slaot=errorで失敗した内容をカスタマイズできます。"},samples4:{label:"遅延ローディング",description:"lazyによって遅延負荷機能がオンになり、画像が視認範囲にスクロールされてロードされます。スクロール容器はscroll-containerによって設定できます。定義されていない場合、最近のoverflow値はautまたはscrollの親要素です。"},samples5:{label:"イメージプレビュー",description:"preview-src-list propを設定することで大きなイメージプレビューを許可します。img-labelが設定されていると、src属性は無効となり、img-labelの内容のみが表示されます。",imgLabelText:"プレビュー大図"},samples6:{row1column2:"イメージソース、ネイティブと同じ",row2column2:"イメージがどのようにコンテナに合うようにサイズ変更されるべきかを示します",row3column2:"原生 alt",row4column2:"原生 referrerPolicy",row5column2:"遅延ロードをオンにしますか？",row6column2:"遅延負荷をオンにした後、scrollイベントをモニターするコンテナ",row6column5:"最近のoverflow値はautoまたはscrollの親要素です。",row7column2:"画像のプレビュー機能を開く",row8column2:"画像のプレビューのz-index値を設定します。",row9column2:"img-labelの内容が空でないと、その内容が表示され、画像が表示されません。",row10column2:"このプロパティのroundがtrueであれば、画像は円形に表示されます。"},samples7:{row1column2:"画像読み込み成功トリガ",row2column2:"画像読み込み失敗のトリガ"},samples8:{row1column2:"画像未ロードのビット内容",row2column2:"読み込みに失敗した内容"}},imageviewerDemo:{label:"イメージのプレビュー ",description:"画像プレビュー容器は、元の特性を保持して、画像のスケーリング、回転、PCの端点が左右のボタンをクリックして画像を切り替え、移動端が左右にスライドして画像を切り替えるなどのサポートをしています。",defatltText:"デフォルト",customText:"カスタム",samples1:{label:"基本的な使い方",description:"必要なプレビューの画像はurl-listによって伝えられます。"},samples2:{label:"デフォルトで何枚目のプレビューを開きます",description:"active-inndex属性によってデフォルトで画像プレビューの何枚目の画像を開きます"},samples3:{row1column2:"画像データのプレビュー",row2column2:"写真のプレビューを設定するz-indx",row3column2:"画像のプレビューの角標値をアクティブにします。",row4column2:"画像切り替えのトリガ関数",row5column2:"画像のプレビューを閉じるためのトリガ関数"}},checkboxDemo:{label:"Checkbox チェックボックス",description:"選択肢から複選択する。",samples1:{label:"基本使い方",description:"vue-checkbox元素にv-modelを定義して変数をバンディングし、単一のcheckboxに、デフォルトバンディング変数の値はBooleanとし、チェックオンはtrueとする。"},samples2:{label:"使用不可状態",description:"disabled属性を設定すれば良い、Booleanを受取、 trueは使用不可とする。"},samples3:{label:"チェックボックスグループ",description:"checkbox-group元素複数checkboxを一組に管理し、Groupにv-modelでArrayタイプの変数をバンディングするだけで良い。vue-checkboxのlabel属性は該checkbox対応となる値、該タブに内容がなければ、該属性もcheckboxボタン後の紹介となる。labelと配列の元素値と対応となり、指定値が存在すればチェックオンとし、でなかったらチェックオフとする。"},samples4:{label:"indeterminate 状態",description:"indeterminate属性はcheckboxの不確定状態に表示用、通常はフルオンの効果に実現用"},samples5:{label:"ボタンスタイル",description:"vue-checkbox元素だけをvue-checkbox-button元素に変換すればよい。"},samples6:{row1column2:"チェックオン状態の値(checkbox-groupにまたはバンディングオブジェクトタイプはarrayの場合だけ有効)",row2column2:"チェックオン時の値",row3column2:"チェックオフ時の値",row4column2:"原生属性",row5column2:"ボタン使用不可",row6column2:"現在チェックか",row7column2:"indeterminate状態を設定し、スタイル制御のみ負う"},samples7:{row1column2:"ボタングループサイズ",row2column2:"ボタン活性化時の充填色と枠色",row3column2:"ボタン活性化時のテキスト色",row4column2:"チェックできる最小数量",row5column2:"チェックできる最大数量"},samples8:{row1column2:"バンディング値チェンジ時トリガーされたイベント"}},radioDemo:{label:"Radio ラジオボックス",description:"Optionグループに単一選択。",samples1:{label:"基本使い方",description:"チェックオンの条件はバンディング変数値イコールlabelの値。v-modelバンディング変数のみ設定し、チェックオンとは変数の値は対応となるRadio label属性の値、labelはStringまたはNumberとも良い。"},samples2:{label:"使用不可状態",description:"isabled属性を設定すれば良い、Booleanを受取、 trueは使用不可とする。"},samples3:{label:"ラジオボックスグループ",description:"vue-radio-group元素と子元素vue-radioを結合してラジオボックスグループを実現できる。vue-radio-groupにv-modelをバンディングし、vue-radioにlabelを設定すれば良い。再び各vue-radioに変数をバンディングする必要なし。"},samples4:{label:"ボタンスタイル",description:"vue-radio元素だけをvue-radio-button元素に変換すれば良い。 "},samples5:{row1column2:"Radioのvalue",row2column2:"使用不可か",row3column2:"原生属性"},samples6:{row1column2:"ボタングループサイズ",row2column2:"ボタン活性化時の充填色と枠色",row3column2:"ボタン活性化時のテキスト色"},samples7:{row1column2:"バンディング時チェンジ時トリガーされたイベント",row1column3:"選択されたRadio label値"},samples8:{row1column2:"Radioのvalue",row2column2:"使用不可か"}},switchDemo:{label:"Switch スイッチ",description:"二種互いに対立状態の切替を表し、「オン/オフ」トリガーによく使われる。",samples1:{label:"基本使い方",description:"v-modelをBooleanタイプ変数にバンディング。on-text属性とoff-text属性でスイッチの文字記述を設定し、on-color属性とoff-color属性でスイッチの背景色を設定する"},samples2:{label:"使用不可状態",description:"isabled属性を設定すれば良い、Booleanを受取、 trueは使用不可とする。"},samples3:{row1column2:"使用不可か",row2column2:"switchの幅(画素)",row2column5:"58(文字有り)、46(文字無し)",row3column2:"switchオン時表示されたアイコンのクラス名、本項目を設定すればon-textが見落とされる",row4column2:"switchオフ時表示されたアイコンのクラス名、本項目を設定すればoff-textが見落とされる",row5column2:"switchオン時の文字",row6column2:"switchオフ時の文字",row7column2:"switchオン時の背景色",row8column2:"switchオフ時の背景色",row9column2:"switch対応となるname属性"},samples4:{row1column2:"switch状態チェンジ時のコールバック関数"}},dropdownDemo:{label:"Dropdown ドロップダウンメニュー",description:"アクションやメニューをドロップダウンメニューに折り畳む。",samples1:{label:"基本使い方",description:'コンポーネントslotでドロップダウントリガーされた元素を設定し、また名称は"dropdown"であるslotでドロップダウンメニューを設定する。デフォルトの場合では、hoverだけでメニューがドロップダウンされ、クリックしなくてもドロップダウンメニューが表示される。'},samples2:{label:"トリガーオブジェクト",description:"split-button属性を設定してドロップダウン元素がボタングループとして表すことをトリガー、左側は機能ボタン、右側はドロップダウンメニューをトリガーするボタン、trueに設定すれば良い。"},samples3:{label:"トリガー式",description:"trigger属性をclickに設定すれば、click活性化を設定できる。",hoverLabel:"hover 活性化",clickLabel:"click 活性化"},samples4:{label:"メニュー隠す式",description:"ドロップダウンメニューはメニューをクリック後デフォルト隠される。hide-on-click属性デフォルトfalseで本機能をクローズできる。"},samples5:{label:"コマンドイベント",description:"メニューをクリック後イベントをトリガーし、ユーザーは対応となるメニューキー項目で異なる操作する。"},samples6:{row1column2:"メニューボタンタイプ、Buttonコンポーネントと同様(split-buttonはtrueの場合のみ有効)",row2column2:"メニューボタンタイプ、Buttonコンポーネントと同様(split-buttoはtrueの場合のみ有効)",row3column2:"元素をドロップダウンでトリガーし、ボタングループとして表示する",row4column2:"メニュー水平寄せ方向",row5column2:"ドロップダウン動作をトリガー",row6column2:"メニューをクリック後メニューを隠すか"},samples7:{row1column2:"split-buttonはtrue時、左側ボタンのコールバックをクリック",row2column2:"メニューをクリックしてトリガーされたイベントコールバック",row2column3:"dropdown-itemコマンド",row3column2:"ドロップダウン表示/非表示時トリガー",row3column3:"表示はtrue、非表示はfalseとする"},samples8:{row1column2:"コマンド",row2column2:"使用不可",row3column2:"分割線表示"}},selectDemo:{label:"Select セレクター",description:"オプションが多すぎ時、ドロップダウンメニューで表示してから内容を選択。",samples1:{label:"基本使い方",description:"v-modelの値は現在選択されたvue-optionのvalue属性値とする"},samples2:{label:"使用不可オプション有り",description:"vue-optionにdisabled値をtrueに設定すれば、当該オプションを使用不可にする"},samples3:{label:"使用不可状態",description:"isabled属性を設定すれば良い、Booleanを受取、trueは使用不可とする。"},samples4:{label:"単一選択をクリアできる",description:"clearable属性を設定すれば、セレクターをクリアできる。注意すべきことは、clearable属性はラジオボックスしか適応しない"},samples5:{label:"基礎複数選択",description:"multiple属性を設定すれば、複数選択を使用可にする。その時v-modelの値はカレント選択された値で出来上がった配列とする"},samples6:{label:"テンプレートカスタマイズ",description:"カスタマイズしたHTMLテンプレートをvue-optionのslotに挿入すれば良い。"},samples7:{label:"グループ",description:"vue-option-groupで選択対象をグループ化し、label属性はグループ名とする"},samples8:{label:"検索",description:"vue-selectにfilterable属性を追加すれば検索機能を使用可にする。デフォルトの場合、Selectは入力値のオプションが含まれるlabel属性を全て探し出す。他の検索ロジックを使用したい場合、filter-methodをインプットして実現できる。filter-methodはFunctionであり、入力値チェンジ時に呼び出され、パラメータはカレント入力値とする。"},samples9:{label:"リモート検索",description:"リモート検索を使用可にするには、filterableとremoteをtrueに設定する必要あり、またインプットしたremote-method.remote-methodはFunctionとし、入力値チェンジ時に呼び出され、パラメータはカレント入力値とする。",placeholderLabel:"キーワードを入力してください。"},samples10:{label:"条目作成",description:"allow-create属性を利用するによる入力欄に文字入力で新しい条目を作成できる。その時filterableは必ずtrueとすることを注意。"},samples11:{row1column2:"複数選択か",row2column2:"使用不可か",row3column2:"入力欄サイズ",row4column2:"単一選択時オプションをクリアできるか",row5column2:"複数選択時ユーザーが最大選択できる項目数、0なら制限なし",row6column2:"原生属性",row7column2:"プレースホルダテキスト",row8column2:"検索できるか",row9column2:"ユーザー条目作成を許可するか、filterableと合わせて利用要",row10column2:"カスタマイズ検索方法",row11column2:"リモート検索であるか",row12column2:"リモート検索方法",row13column2:"リモートからデータ取得中か",row14column2:"リモートロード時表示された文字",row15column2:"検索条件アンマッチ時表示された文字",row16column2:"オプションが空時表示された文字",row17column2:"ドロップダウンのクラス名をSelect",row18column2:"入力欄にEnterを押し、一番目マッチングした項目を選択する。filterable又はremoteと合わせて利用要"},samples12:{row1column2:"選択値チェンジ時にトリガー",row1column3:"現在の選択値",row2column2:"ドロップダウン表示/非表示時にトリガー",row2column3:"表示は true、非表示はfalseとする",row3column2:"複数選択モードにtagを削除時にトリガー",row3column3:"tag値を削除する"},samples13:{row1column2:"グループのグループ名",row2column2:"該グループ下の全てのオプションを使用不可にするか"},samples14:{row1column2:"オプションの値",row2column2:"オプションのタグ、設定しない場合、デフォルトはvalueと同様",row3column2:"該オプションを使用不可にするか"}},cascaderDemo:{label:"Cascader カスケードセレクター",description:"データセットに階層構造がはっきりしている時、カスケードセレクターで段階的に確認してから選択。",samples1:{label:"基本使い方",description:"Cascaderのoptions属性にオプション配列だけ指定すれば、カスケードセレクターをレンダリングできる。通过expand-triggerでサブメニュー展開のトリガー型を定義できる。changeイベントはパラメータはCascaderのバインディング値：各レベルのメニュー値で構成する配列。",clickLabel:"click サブメニューをトリガー",hoverLabel:"hover サブメニューをトリガー"},samples2:{label:"使用不可オプション",description:"Cascaderはデータに各disabledフィールドはtrueであるかをチェックし、データに使用不可意味合いのフィールド名はdisabledでない場合、props属性で指定できる"},samples3:{label:"最後レベルのみ表示",description:"属性show-all-levelsはフルパス表示かを定義し、falseに設定した場合、最後レベルしか表示しない"},samples4:{label:"デフォルト値",description:"デフォルト値は配列で指定"},samples5:{label:"選択つまりチェンジ",description:"change-on-selectをtrueに設定し、オプションにクリックまたは移入とはセレクトオン"},samples6:{label:"二次オプション動的にロード",description:"active-item-changeイベントで、あるoptionをクリック時該option下のサブデータをドロップダウンできる"},samples7:{label:"検索可",description:"filterableをtrueに設定すれば検索機能を使用可になる",label1:"最後レベルメニューを選択するオプション",label2:"任意レベルメニューを選択するオプション",placeholderLabel:"検索試し：component"},samples8:{row1column2:"オプションデータソース，鍵名はprops属性で設定できる",row2column2:"構成オプション 、詳細は下表を参照",row3column2:"選択項目バンディング値",row4column2:"フローティングクラス名をカスタマイズ",row5column2:"プレースホルダテキスト",row6column2:"使用不可か",row7column2:"オプションクリアをサポートか",row8column2:"二次メニュー展開式",row9column2:"入力欄に選択値のフルパスを表示するか",row10column2:"オプションを検索できるか",row11column2:"キーワード入力したデバウンシング遅延を検索、ミリ秒",row12column2:"任意レベルオプション選択を許可するか",row13column2:"サイズ"},samples9:{row1column2:"オプション値をオプションオブジェクトのある属性値に指定する",row2column2:"オプションタグをオプションオブジェクトのある属性値に指定する",row3column2:"オプションのサブオプションをオプションオブジェクトのある属性値に指定する",row4column2:"オプションの使用不可をオプションオブジェクトのある属性値に指定する",row5column2:"オプションパラメータ、フィルター前のフック、パラメータは入力された値、戻り値はfalseまたはPromise、かつrejectされた場合、フィルターをストップ。"},samples10:{row1column2:"バンディング時チェンジ時トリガーされたイベント",row1column3:"カレント値",row2column2:"親オプションチェンジ時にトリガーされたイベント、 change-on-selectはfalse時にのみ使用可",row2column3:"各親オプション構成した配列"},samples11:{row1column2:"カスタムレベル選択名",row2column2:"ロード状態を表示するかどうか(移動先のみ利用可能です)",row3column2:"トップバーのタイトル(移動先のみ利用可能です)",row4column2:"決定ボタンのテキスト内容(移動先のみ利用可能です)",row4column3:"キャンセルボタンのテキスト内容(移動先のみ利用可能です)",row5column2:"トップバーの位置(移動先のみ利用可能です)",row5column3:"トップバーを表示するかどうか(移動先のみ利用可能です)",row6column2:"HTMLの適用を許可しますか？(移動先のみ利用可能です)",row7column2:"オプションの高さ(移動先のみ利用可能です)",row8column2:"表示されるオプションの個数(移動先のみ利用可能です)",row9column2:"高速スライド時の慣性スクロールの時間は長く、単位ms(移動先のみ利用可能です)",row10column2:"確定ボタンをクリックした時にトリガします。(移動先のみ利用可能です)",row10column3:"現在の値、すなわち(value, index)",row11column2:"キャンセルボタンをクリックしたときにトリガします。(移動先のみ利用可能です)"}},formDemo:{label:"Form フォーム",description:"入力欄、セレクター、ラジオボックス、チェックボックス等のコントロールから組成され、データ収集、チェック、サブミット用。",samples1:{label:"基礎フォーム",description:"Formコントロールに、各フォーム域はForm-Itemコンポーネントから構成され、フォーム域に各種タイプのフォームコントロールが置かれている。"},samples2:{label:"行内フォーム",description:"inline属性を設定すれば、フォーム域は行内のフォーム域になる"},samples3:{label:"寄せ方",description:"label-position属性を設定することで、フォーム域タグの位置をチェンジでき、選択値top、left、rightとする"},samples4:{label:"フォーム検証",description:"Formコンポーネントはフォーム検証機能を提供し、rule属性で約束した検証ルールを渡し、Form-Itemのprop属性をチェック対象フィールド名に設定すれば良い。"},samples5:{label:"検証ルールカスタマイズ",description:"カスタマイズ検証ルールで検証完了させる。"},samples6:{label:"フォーム項目動的に増減",description:"Formコンポーネントに一回限りで全ての検証ルールを渡せる以外、単一のフォーム域に属性の検証ルールも渡せる"},samples7:{row1column2:"フォームデータオブジェクト",row2column2:"フォーム検証ルール",row3column2:"行内フォームモード",row4column2:"フォーム域ラベルの位置",row5column2:"フォーム域ラベルの幅、Form直接子元素としたform-itemは該値を継承する",row6column2:"フォーム域ラベルのサフィックス",row7column2:"チェックエラーメッセージを表示するか",row8column2:"フォーム域ラベルはセルフ適応となる",row9column2:"チェックエラーメッセージはお知らせヒントメッセージを表示するか",row10column2:"カスタマイズメッセージ,パラメータはエラーメッセージ"},samples8:{row1column2:"フォーム全体のチェック方法",row2column2:"一部フォームのフィールドのチェック方法",row3column2:"フォーム全体のリセット。全てのフィールドをデフォルト値にリセットし、チェック結果もクリア"},samples9:{row1column2:"フォームエリアmodelフィールド、validate、resetFieldsメソッドを使用した場合、該属性は必須となる",row1column4:"Formコンポーネントのmodelフィールドをインプット",row2column2:"タグテキスト",row3column2:'フォームエリアタグの幅、例"50px"',row4column2:"必須入力か。設定しない場合、チェックルールに従って自動生成",row5column2:"フォーム検証ルール",row6column2:"フォームエリアエラーメッセージ検証。該値を設定すればフォーム検証状態はerrorになり、当該エラーメッセージも表示される",row7column2:"チェックエラーメッセージを表示するか"}},paginationDemo:{label:"Pagination ページング",description:"データが多すぎた場合、ページングでデータを分解する。",samples1:{label:"基本使い方",description:"layoutを設定し、表示要内容を表示し、カンマで区切り、レイアウト元素が順次に表示される。prevは前のページ、nextは次のページ。pagerはページリスト、page-sizeは各ページ表示する条目数、totalは総条目数とする",label1:"ページ少ない時の効果",label2:"ページ多い時の効果",label3:"ミニペーシング"},samples2:{label:"付加機能",description:"size-changeとcurrent-changeイベントでページ大きさとカレントページチェンジ時トリガーされたイベントを処理する。page-sizesは一つ整形配列を受取、配列元素は各ページ表示数のオプションをデモ選択とする",label1:"総数表示",label2:"各ページ表示数を調整",label3:"直接へ",label4:"機能を完備"},samples3:{row1column2:"ミニペーシングスタイルを使用か",row2column2:"各ページは条目数を表示する",row3column2:"総条目数",row4column2:"総ページ数。 totalとpage-countを任意設定すればページ数を表示機能が付く；もしpage-sizesの変更をサポートするには、total属性を使用必要がある",row5column2:"カレントページ数、sync修飾子をサポートする",row6column2:"コンポーネントレイアウト、子コンポーネント名はカンマで区切り",row7column2:"各ページは数セレクターのオプション位置を表示する"},samples4:{row1column2:"pageSizeチェンジ時にトリガー",row1column3:"各ページ条目数size",row2column2:"currentPageチェンジ時にトリガー",row2column3:"カレントページcurrentPage"}},treeDemo:{label:"Tree ツリーコントロール",description:"情報をはっきりした階層構造で表示し、大きく広げる又は折り畳むことができる。",samples1:{label:"基本使い方",description:"基礎のツリー構造を展示する。"},samples2:{label:"データを選択と取得",description:"show-checkbox属性はノード選択できるかを設定する。lazy属性はクリック時にのみデータを取得するかを設定する。load属性はサブツリーロードの方法を設定できる。"},samples3:{label:"デフォルト大きく広げるとデフォルトチェックオン",description:"デフォルト大きく広げるとデフォルトチェックオンノードはそれぞれdefault-expanded-keysとdefault-checked-keysで設定。注意すべき点は、この時必ずnode-keyを設定し、値はノードデータのフィールド名とし、そのフィールドは木の中で唯一である。"},samples4:{label:"使用不可状態",description:"disabledで使用不可状態を設定."},samples5:{label:"ツリーノードの選択",description:"取得と設定はそれぞれ二種の方法があり：node又はkeyで。keyで取得又は設定する場合、必ずnode-keyを設定する"},samples13:{label:"ハイライトノードの選択",description:"取得と設定はそれぞれ二種の方法があり：node又はkeyで。keyで取得又は設定する場合、必ずnode-keyを設定する"},samples6:{label:"ノード内容カスタマイズ",description:"render-contentでレンダリング関数を指定し、該関数は必要なノードエリア内容を返しすれば良い。レンダリング関数の使い方はVueドキュメントをご参考ください"},samples7:{label:"ノードフィルター",description:"Treeインスタンスのfilterメソッドを呼び出す。パラメータはキーワードとする。注意すべき点は、この時filter-node-methodを設定要、値はフィルター関数とする。"},samples8:{label:"アコーディオンモード",description:"同じレベルのノードに対して、毎回1つしか展開できない"},samples9:{row1column2:"データ展示",row2column2:"各ツリーノードを唯一標識する属性とし、ツリー丸ごとは唯一であるべき",row3column2:"レージーロード",row4column2:"サブデータをロードする方法、lazyはtrue時に有効",row5column2:"ツリーノードの内容エリアのレンダリングFunction",row6column2:"カレント選択ノードをハイライトするか",row7column2:"カレント選択ノードのkey",row8column2:"全てのノードをデフォルト展開するか",row9column2:"ノードをクリック時にノードを展開又は収縮するか",row10column2:"サブノードを展開時に親ノードを自動的に展開するか",row11column2:"デフォルト展開されたノードのキー配列",row12column2:"ノード選択できるか",row13column2:"チェックボックスが表示された場合、親子互いに関連しないやり方に厳しく従うか",row14column2:"デフォルトチェックされたノードのキー配列",row15column2:"ツリーノードをフィルター時に実行したメソッド。trueを返した場合、本ノードを表示とし、falseを返した場合、本ノードが非表示とする",row16column2:"毎回同じレベルツリーノードを一つのみ展開するか",row17column2:"隣接レベルのノード間の水平インデント、単位は画素とする",row18column2:"コンフィグレーションオプション、詳細は下表を参考"},samples10:{row1column2:"ノードタグをノードオブジェクトのある属性値に指定",row2column2:"サブツリーををノードオブジェクトのある属性値に指定",row3column2:"ノード選択フレームが使用不可かを指定"},samples11:{row1column2:"ツリーノードに対してフィルター操作を行う",row1column3:"任意タイプのパラメータを受取、該パラメータはfilter-node-methodに一番目のパラメータとする",row2column2:"ノードが選択可(つまり、show-checkboxはtrue)の場合、現在選択されたノード構成した配列を返す",row2column3:"(leafOnly、indeterminate)1はboolean型のパラメータを受取、trueであれば、選択されたサブノードを返し、デフォルト値はfalseとする、2はboolean型のパラメータを受取、中間状態ノードを含めるかどうかを定義する、デフォルト値はfalseとする",row3column2:"現在チェックしたノードを設定する。この方法を使用するには必ずnode-key属性を設定する",row3column3:"(nodes)はチェックしたノードデータの配列を受取る",row4column2:"ノードが選択可(つまり、show-checkboxはtrue)の場合、現在選択されたノードのkeyで構成した配列を返す",row4column3:"(leafOnly、indeterminate)1はboolean型のパラメータを受取、trueであれば、選択されたサブノードのkeysを返し、デフォルト値はfalseとする、2はboolean型のパラメータを受取、中間状態ノードを含めるかどうかを定義する、デフォルト値はfalseとする",row5column2:"keysで現在チェックされたノードを設定し、, この方法を使用するには必ずnode-key属性を設定する",row5column3:"(keys, leafOnly)は二つのパラメータを受取る。1.チェックオンしたノードのkeyの配列 2.booleanタイプのパラメータ、trueなら、葉ノードのみチェックオンに設定し、デフォルト値はfalseとする",row6column2:"key/dataであるノードのチェック状態を設定する。 この方法を使用するには必ずnode-key属性を設定する",row6column3:"(key/data, checked, deep)三つのパラメータを受取る。 1.チェックオンしたノードのkey又はdata 2.booleanタイプ、 ノード選択されるか 3.booleanタイプ、サブノードを設定するか、 デフォルト値はfalseとする",row7column2:"ノードがハイライトできる(つまり、highlight-currentはtrue)の場合、現在ハイライトされたノードを返す",row8column2:"ノードがハイライトできる(つまり、highlight-currentはtrue)の場合、現在ハイライトされたノードのkeyを返す",row9column2:"カレントハイライトのノードを設定する。 この方法を使用するには必ずnode-key属性を設定する",row10column2:"keyでカレントハイライトのノードを設定する。この方法を使用するには必ずnode-key属性を設定する"},samples12:{row1column2:"ノードクリックされた時のコールバック",row1column3:"計三つパラメータ、順次は：data属性に渡す配列の中に該ノード対応となるオブジェクト、ノード対応となるNode、ノードコンポーネント自体。",row2column2:"ノード選択状態チェンジ時のコールバック",row2column3:"計三つパラメータ、順次は：data属性に渡す配列の中に該ノード対応となるオブジェクト、ノード自体が選択されるか、ノードのサブツリーに選択されたノードがあるか",row3column2:"カレント選択したノードがチェンジ時にトリガーされたイベント",row3column3:"計二つパラメータ、順次は：カレントノードのデータ、カレントノードのNodeオブジェクト",row4column2:"ノードが展開された時にトリガーされたイベント",row4column3:"計三つパラメータ、順次は：data属性に渡す配列の中に該ノード対応となるオブジェクト、ノード対応となるNode、ノードコンポーネント本身.",row5column2:"ノードがクローズされた時にトリガーされたイベント",row5column3:"計三つパラメータ、順次は：data属性に渡す配列の中に該ノード対応となるオブジェクト、ノード対応となるNode、ノードコンポーネント本身."}},collapseDemo:{label:"Collapse 折り畳みパネル",description:"折り畳みパネルで内容エリアを収納する",samples1:{label:"基本使い方",description:"同時に対数のパネルを展開でき、パネルの間では影響しない"},samples2:{label:"アコーディオン効果",description:"毎回は一つのパネルしか展開しない、accordion属性でアコーディオンモードで表示するかを設定する"},samples3:{label:"パネルタイトルカスタマイズ",description:"title属性以外、名slotもパネルタイトルをカスタマイズでき、追加アイコン等の効果を実現する。"},samples4:{row1column2:"アコーディオンモードか",row2column2:"カレント活性化したパネル(アコーディオンモードであれば、バインディング値タイプは必ずstringで、なければarrayとする)"},samples5:{row1column2:"カレント活性化パネルチェンジ時にトリガー(アコーディオンモードであれば、パラメータ activeNames タイプはstringで、なければarrayとする)"},samples6:{row1column2:"唯一の標識符",row2column2:"パネルタイトル",row3column2:"クリック時に展開又は収縮するか"}},messageBoxDemo:{label:"MessageBox ポップアップ",description:"システムのメッセージヒントフレームを模擬して実現したワンセットモーダルダイアログボックスコンポーネント。",samples1:{label:"メッセージヒント",description:"$alertメソッドを呼び出してメッセージヒントオープンできる。システムのalertを模擬した "},samples2:{label:"メッセージ確認",description:"$confirmメソッドを呼び出してメッセージヒントオープンできる。システムのconfirmを模擬した。"},samples3:{label:"カスタマイズ",description:"異なる内容をカスタマイズ配置できる。"},samples4:{row1column2:"MessageBoxタイトル",row2column2:"MessageBoxメッセージ本文の内容 ",row3column2:"メッセージタイプ、アイコン表示用",row4column2:"MessageBoxのカスタマイズクラス名",row5column2:'MessageBoxクローズ後のコールバック, actionの値は"confirm"又は"cancel"で、 instanceは MessageBoxインスタントとする',row5column3:"Function(action, instance)",row6column2:'MessageBoxクローズ前のコールバック、インスタントのクローズを一時的にストップする, actionの値は"confirm"又は"cancel"で、instanceは MessageBoxインスタントとし、 doneはMessageBoxインスタントをクローズ用',row6column3:"Function(action, instance, done)",row7column2:"キャンセルボタンのテキスト内容",row8column2:"確定ボタンのテキスト内容",row9column2:"キャンセルボタンのカスタマイズクラス名",row10column2:"確定ボタンのカスタマイズクラス名"}},dialogDemo:{label:"Dialog ダイアログボックス",description:"現在ページ状態を保留した上に、ユーザーにお知らせ、関連操作も伝える。",samples1:{label:"基本使い方",description:"v-model属性を設定要。Booleanを受取、true時Dialog.Dialog表示は三分に分ける：header, bodyとfooter、 headerは名headerのslotが必要、 footerは名footerのslot.title属性でタイトルを定義する要。それはオプションで、デフォルトは空とする。header存在時にtitleが表示しない。show-close属性は閉じるボタンを表示し、デフォルトはfalseとする。"},samples2:{label:"内容カスタマイズ",description:"Dialogコンポーネントの内容は任意で良い"},samples3:{row1column2:"Dialogを表示するか",row2column2:"Dialogのタイトル",row3column2:"Dialogの大きさ",row4column2:"Dialog CSS中のtop値(sizeはfullでない時のみ有効)",row5column2:"Dialogのカスタマイズクラス名",row6column2:"modalをクリックでDialogをクローズできるか",row7column2:"ESCを押下でDialogをクローズできるか",row8column2:"閉じるボタンを表示するか",row9column2:"クローズ前のコールバック、Dialogのクローズを一時的にストップし、done()はクローズ用、done(false)はクローズをキャンセル用",row9column3:"Function(done)"},samples4:{row1column2:"Dialogの内容",row2column2:"Dialog head部の内容",row3column2:"Dialog foot部の内容"},samples5:{row1column2:"Dialogクローズのコールバック",row2column2:"Dialogオープンのコールバック"}},asideDemo:{label:"Aside サイド欄",description:"現在ページ状態を保留した上に、サイドで関連操作を伝える。",samples1:{label:"基本使い方",description:"v-model属性を設定要。Booleanを受取、true時Aside.Aside表示は三分に分ける：header, bodyとfooter、headerは名headerのslotが必要、footerは名footerのslot.title属性でタイトルを定義する要。それはオプションで、デフォルトは空とする。header存在時にtitleが表示しない。show-close属性は閉じるボタンを表示し、デフォルトはfalseとする。"},samples2:{label:"エリア表示",description:"relative属性を設定し、親容器内で展示できる"},samples3:{label:"内容カスタマイズ",description:"Asideコンポーネントの内容は任意で良い"},samples4:{row1column2:"Asideを表示するか",row2column2:"Asideのタイトル",row3column2:"Asideの大きさ",row4column2:"Aside CSS中のtop値(sizeはfullでない時のみ有効)",row5column2:"Asideのカスタマイズクラス名",row6column2:"modalをクリックでAsideをクローズできるか",row7column2:"ESCを押下でAsideをクローズできるか",row8column2:"閉じるボタンを表示するか",row9column2:"クローズ前のコールバック, Asideのクローズを一時的にストップし、done()はクローズ用、 done(false)はクローズをキャンセル用",row9column3:"Function(done)",row10column2:"現れる位置",row11column2:"親容器内にAsideを表示するか"},samples5:{row1column2:"Asideの内容",row2column2:"Aside head部の内容",row3column2:"Aside foot部の内容"},samples6:{row1column2:"Asideクローズのコールバック",row2column2:"Asideオープンのコールバック"}},notificationDemo:{label:"Notification お知らせ",description:"ページ右上に浮かび上がって表示する。グローバルのお知らせヒントメッセージを表示する。",samples1:{label:"基本使い方",description:"titleとmessageはタイトルと本文を設定用。デフォルトの場合では、しばらく経ってからコンポーネント自動的にクローズするが、durationを設定すれば、クローズの時間間隔を制御できる。0に設定した場合、自動的にクローズしない。4種の通知タイプがある：success, warning, info, error。typeフィールドで設定する"},samples2:{label:"お知らせ位置",description:'position属性を設定して定位し、デフォルトは"top-right"とする'},samples3:{row1column2:"タイトル",row2column2:"本文内容",row3column2:"テーマスタイル、選択値外の場合、見落とされる",row4column2:"アイコンのクラス名をカスタマイズ。typeを設定した場合、iconClassが覆われる",row5column2:"クラス名カスタマイズ",row6column2:"時間表示、ミリ秒。0に設定した場合、自動的にクローズしない",row7column2:"クローズ時のコールバック関数",row8column2:"定位、選択値外の場合表示できない",row9column2:"クローズボタンを表示するか"}},badgeDemo:{label:"Badge マーク",description:"ボタン、アイコンの横にある数字または状態マーク。",samples1:{label:"基本使い方",description:"value属性を定義し、Number又はStringを受取。最大値max属性で定義し、Numberを受取、valueはNumber時のみ有効となる。is-dot属性を設定し、赤点の形でマーク"},samples2:{row1column2:"表示値",row2column2:'最大値、最大値を超えた時 "{max}+"が表示され、 value は Number 型とする',row3column2:"ドット",row4column2:"非表示"}},tabsDemo:{label:"Tabs タグページ",description:"区切り内容には関連があるが違うカテゴリーのデータ集合。",samples1:{label:"基本使い方",description:"value属性で現在選択されたタグページを指定する。 "},samples2:{label:"オプションカードスタイル",description:"type属性をcardに設定"},samples3:{label:"カード化スタイル",description:"type属性をborder-cardに設定"},samples4:{label:"タグカスタマイズ",description:"名labelのslotでカスタマイズタグ内容を実現する"},samples5:{label:"動的にタグページを増減"},samples6:{label:"タグページトリガーをカスタマイズで増加"},samples7:{row1column2:"スタイルタイプ",row2column2:"タグは閉じるボタンを表示するか",row3column2:"タグは追加ボタンを表示するか",row4column2:"タグは追加と閉じるボタンを同時に表示するか",row5column2:"バインディング値、オプションカードの nameを選択",row5column5:"一番目オプションカードのname"},samples8:{row1column2:"オプションカードが選択された時にトリガー",row1column3:"選択されたオプションカードインスタンス、イベントインスタンス",row2column2:"オプションカードの閉じるボタンをクリック時にトリガー",row2column3:"選択されたオプションカードのname",row3column2:"オプションカードの追加ボタンをクリック時にトリガー",row4column2:"オプションカードの追加をクリック、又はクローズ後トリガー",row4column3:"選択されたオプションカード的name、イベント挙動(add, remove)"},samples9:{row1column2:"オプションカードタイトル",row2column2:"使用不可か",row3column2:"オプションカード別名",row4column2:"タグは閉じるボタンを表示するか"}},popoverDemo:{label:"Popover ポップアップフレーム",description:"節メッセージに展示用",samples1:{label:"基本使い方",description:"trigger属性は何時Popoverをトリガーかを設定する。三種類のトリガー方式を提供する：hover, click, focus。slotでreferenceを指定できる。 "},samples2:{label:"ネスティングメッセージ",description:"Popoverに多種のメッセージをネスティングできる"},samples3:{label:"ネスティングメッセージ",description:"Popoverに多種の操作をネスティングできる"},samples4:{row1column2:"トリガー方式",row2column2:"タイトル",row3column2:"表示内容、slotても渡せる",row4column2:"幅",row5column2:"現れる位置",row6column2:"使用可か",row7column2:"表示するか",row8column2:"popperにクラス名を追加",row9column2:"トリガー方式はhover時の遅延表示。単位はミリ秒",row10column2:"矢印を表示するか"},samples5:{row1column2:"Popover埋込内容",row2column2:"Popover表示の元素をトリガー"},samples6:{row1column2:"表示時にトリガー",row2column2:"非表示にトリガー"}},tooltipDemo:{label:"Tooltip 文字ヒント",description:"マウスhover時のヒントメッセージを表示用。",samples1:{label:"基本使い方",description:'content属性でhover時のヒントメッセージを決める。placement属性展示効果を決定：placement属性値は：方向-寄せ位置；四つ方向：top、left、right、bottom；三種類寄せ位置：start, end, デフォルトは空。placement="left-end"の場合は、ヒントメッセージを目標元素の左側に表示させ、またヒントメッセージの底部は目標元素の底部に寄せる。'},samples2:{label:"テーマ",description:"Tooltipコンポーネントは二つ異なるテーマを提供：darkとlight. "},samples3:{label:"内容カスタマイズ",description:"名contentのslotでtooltipのcontent属性を代替する。"},samples4:{label:"使用不可状態",description:"isabled属性を設定すれば良い、Booleanを受取、 trueは使用不可とする。"},samples5:{row1column2:"デフォルト提供したテーマ",row2column2:"マウスtooltipに入られるか",row3column2:"表示内容、slotても渡せる",row4column2:"現れる位置",row5column2:"使用可か",row6column2:"表示するか",row7column2:"popperにクラス名を追加",row9column2:"矢印を表示するか"}},tagDemo:{label:"Tag タグ",description:"マークと選択用。",samples1:{label:"基本使い方",description:"type属性でtagのタイプを選択し、width属性てtagの幅を設定できる；closable属性でタグ削除できるかを定義できる。hit属性をtrueに設定で枠描きがある。"},samples2:{label:"動的編集タグ"},samples3:{row1column2:"テーマ",row2column2:"クローズできるか",row4column2:"枠描きがあるか",row5column2:"tagの幅"},samples4:{row1column2:"tagをクローズ時トリガーされたイベント"}},alertDemo:{label:"Alert 警告",description:"ページに重要なヒントメッセージを表示用。 ",samples1:{label:"基本使い方",description:"コンポーネントは四種類のテーマを提供し、type属性で指定、デフォルト値はinfo。 closable属性はクローズできるかを決定する。close-text属性設定で右側のクローズアイコンを代替し、closeイベント設定でクリック時のコールバックを設定する。show-icon属性設定でiconを表示。dark属性設定でダークスタイルを表示。"},samples2:{row1column2:"タイトル",row2column2:"テーマ",row3column2:"クローズできるか",row4column2:"ボタンカスタマイズテキストをクローズ",row5column2:"アイコンを表示するか",row6column2:"ダークモードをオンにするか"},samples3:{row1column2:"alert時トリガーされたイベントをクローズ"}},noteDemo:{label:"Note ノート",description:"ページメッセージ表示用。 ",samples1:{label:"基本使い方",description:"コンポーネントは四種類のテーマを提供し、type属性で指定、デフォルト値はinfo。 "},samples2:{row1column2:"タイトル",row2column2:"テーマ",row3column2:"地味モードをオンにするか"}},cardDemo:{label:"Card カード",description:"メッセージをカード容器に集まって表示する。 ",samples1:{label:"基本使い方",description:"Cardコンポーネントはheaderとbodyが含まれる。 header部明示名slotで配り、選択可である。 "},samples2:{label:"シンプルカード",description:"カードは内容エリアしかないはOK。"},samples3:{row1column2:"headerを設定、名headerのslotでDOMをインプット",row2column2:"bodyのスタイルを設定"}},carouselDemo:{label:"Carousel 回転コンベア",description:"有限空間内に、同じタイプの画像、文字等内容を循環的に放送する。",samples1:{label:"基本使い方",description:"内容は任意で、 デフォルトの場合では、マウスは底部のインジケータにhover時切替をトリガー。trigger属性をclickに設定すれば、クリックトリガー効果を達成できる。type属性をcardに設定すればカードモードをオンにできる。"},samples2:{label:"インジケータ",description:"indicator-position属性はインジケータの位置を定義。 デフォルトの場合では、回転コンベア内に表示され、outsideに設定すれば外部に表示される；noneに設定した場合インジケータを表示しない。"},samples3:{label:"矢印",description:"arrow属性は切替矢印の表示タイミングを定義。デフォルトの場合では、切替矢印はマウスを回転コンベアにhover時のみ表示；arrowをalwaysに設定した場合、終始表示とする；neverに設定し場合、終始非表示とする。"},samples4:{row1column2:"回転コンベアの高さ",row2column2:"状態活性化スライドのインデックスを初期化し、 0からスタート",row3column2:"インジケータのトリガー方式",row4column2:"自動切替か",row5column2:"自動切替の時間間隔、単位はミリ秒",row6column2:"インジケータの位置",row7column2:"切替矢印の表示タイミング",row8column2:"回転コンベアのタイプ"},samples5:{row1column2:"スライド切替時トリガー",row1column3:"カレント活性化したスライドのインデックス、元スライドのインデックス。 (newIndex, oldIndex)"},samples6:{row1column2:"スライドを手動で切替",row1column3:"切替必要なスライドのインデックス、0からスタート；又は対応となるvue-carousel-itemのname属性値",row2column2:"前のスライドへ切替",row3column2:"次のスライドへ切替"},samples7:{row1column2:"スライドの名前、setActiveItemのパラメータ用",row1column3:"該スライド対応となるインジケータのテキスト"}},loadingDemo:{label:"Loading ロード",description:"データロード時動効果を表示。",samples1:{label:"基本使い方",description:"カスタマイズコマンドv-loadingを利用し、v-loadingコマンドをバインディングした元素にvue-loading-text属性を追加し、その値がロード文案にレンダリングされ、ロードアイコン下に表示される。スクリーンマスクが必要とした場合、fullscreen修飾子を利用する。 "},samples2:{row1column2:"ロードアイコン下のロード文案に表示",row2column2:"Loadingのカスタマイズクラス名"}},loadingBarDemo:{label:"LoadingBar 進捗バーをロード",description:"ページロード表示、非同期要求、ファイルアップロード等のロード進捗バーをグローバルに作成。",samples1:{label:"基本使い方",description:"start()メソッドを呼び出した後、コンポーネントは自動的に進捗を模擬する。finish()又はerror()を呼び出し時には、進捗完了させてから自動的に消える"},samples2:{row1column2:"0から進捗バーを表示し、自動的に進捗をリロード",row1column3:"コールバック",row2column2:"進捗完了させ、残進捗を自動的に完了させる",row2column3:"コールバック",row3column2:"エラーで進捗バーを完了させ、残進捗を自動的に完了させる",row3column3:"コールバック",row4column2:"指定した進捗まで精確にロード",row4column3:"指定した進捗パーセンテージ(percent), コールバック"}},progressDemo:{label:"Progress 進捗バー",description:"操作進捗に表示用、カレント状態と予期をユーザーにお知らせる。 ",samples1:{label:"基本使い方",description:"percentage属性を設定すれば良い。進捗バー対応となるパーセンテージを表示し、stroke-width 属性で進捗バーの高さを変更できる。また、 text-inside 属性で進捗バー説明を進捗バー内に置く。 type 属性で環状進捗バー利用指定できる。環状進捗バーでは、 width 属性で大きさを設定できる。"},samples2:{row1column2:"パーセンテージ",row2column2:"進捗バータイプ",row3column2:"進捗バーの高さ、単位px",row4column2:"進捗バーに表示された文字は進捗バーに内蔵されている(type==line時のみ使用可)",row5column2:"進捗バーカレント状態",row6column2:"環状進捗バーキャンバス幅(type==circle時のみ使用可)",row7column2:"進捗バー文字内容を表示するか"}},sliderDemo:{label:"Slider スライダー",description:"スライダーをドラッグし、固定区間で選択する。",samples1:{label:"基本使い方",description:"バインディング値でカスタマイズしたスライダーの初期値を設定する。 "},samples2:{label:"離散値",description:"ステップ値を変更することがでステップ長を変更できる。show-step属性を設定すれば切れ点を表示できる"},samples3:{label:"範囲選択",description:"rangeを設定すれば範囲選択は使用可になる。その時バインディング値は配列であり、その元素はそれぞれ最小境界値と最大境界値である"},samples4:{label:"垂直モード",description:"verticalを設定すればSliderは垂直モードになる。その時必ず高さheight属性を設定すること"},samples5:{row1column2:"最小値",row2column2:"最大値",row3column2:"使用不可か",row4column2:"ステップ長",row5column2:"切れ点を表示するか",row6column2:"tooltipを表示するか",row7column2:"tooltip messageをフォーマット化",row8column2:"範囲選択であるか",row9column2:"垂直モードにするか",row10column2:"Slider高さ(垂直モードのみ使用可)"},samples6:{row1column2:"値チェンジ時にトリガー(マウスをドラッグ時、マウスをドロップ後にトリガー)",row1column3:"チェンジ後の値"}},breadcrumbDemo:{label:"Breadcrumb パン屑",description:"カレントページのパスを表示し、直前の任意ページへ速やかに戻す。",samples1:{label:"基本使い方",description:"separator属性を設定することで区切り文字をチェンジする。デフォルトはスラッシュ'/'"},samples2:{row1column2:"区切り文字"},samples3:{row1column2:"パス遷移オブジェクト、 vue-routerのtoと同様"},samples4:{row1column2:"クリックイベント、to属性定義しない時のみトリガー"}},stepsDemo:{label:"Steps ステップ",description:"ユーザーにプロセスどおりに任務を完成できるように導くステップナビゲーション。実際応用シーンに従ってステップを設定できる。ステップは 2 ステップ以上。",samples1:{label:"基本使い方",description:"active属性設定、Numberを受取、ステップのindexを表明し、0からスタート。定幅のステップが必要時、space属性設定すれば良い。単位はpx。設定しない場合、セルフ適応となる。finish-status属性設定すれば完了したステップ状態を変更できる。 "},samples2:{label:"説明ありステップ",description:"各ステップは対応となるステップ状態説明がある。"},samples3:{label:"アイコン付きステップ",description:"icon属性でアイコンを設定する"},samples4:{label:"垂直ステップ",description:"direction属性をverticalに設定すればstepsは垂直モードになる"},samples5:{row1column2:"各stepの間隔、記入しない場合、間隔をセルフ適応となる。パーセンテージをサポート",row2column2:"方向表示",row3column2:"カレント活性化ステップを設定",row4column2:"カレントステップの状態を設定",row5column2:"完了ステップの状態を設定",row6column2:"タイトル説明中央寄せ",row7column2:"コンポーネントセンタリング表示"},samples6:{row1column2:"タイトル",row2column2:"アイコン",row3column2:"カレントステップの状態を設定、設定しない場合、stepsで状態を確認"},samples7:{row1column2:"内容",row2column2:"タイトル"}},rateDemo:{label:"Rate 採点",description:"ボタン、アイコンの横に現れた数字又は状態マーク。",samples1:{label:"基本使い方",description:"点数は3つのレベルに分けられる。色を利用し、点数と感情傾向を等級付けさせる(既定の状況下では色を区別しない)。3つのレベルに対応となる色はcolors属性で設定"},samples2:{label:"補助文字",description:"コンポーネントにshow-text属性を設定すれば右側に補助文字が表示される。textsを設定すれば各点数値対応となる補助文字を指定できる。textsは配列であり、長さは最大値maxにイコールすべき。"},samples3:{label:"その他 icon",description:"icon-classes属性を設定すれば3つ異なる小節のアイコンをカスタマイズ対応できる。void-icon-classは未选択時のアイコンクラス名を指定。"},samples4:{label:"読み取り専用",description:"disabled属性を設定してコンポーネントは読み取り専用となる。小数点数値サポート。その時show-textを設定した場合、右側に現在の点数値が表示される。text-templateを表示テンプレートとして提供でき、テンプレートが{value}文字列が含まれ、{value}が点数値に分析される。"},samples5:{row1column2:"最大点数値",row2column2:"読み取り専用であるか",row3column2:"半選を許すか",row4column2:"低い点数と中等点数の限界値、値自体が低い点数に分類される",row5column2:"高い点数と中等点数の限界値、値自体が高い点数に分類される",row6column2:"iconの色配列、計3つ元素、三つ小節対応となる色である",row7column2:"未選択iconの色",row8column2:"読み取り専用時未選択iconの色",row9column2:"iconのクラス名配列、計3つ元素、三つ小節対応となるクラス名である",row10column2:"未選択iconのクラス名",row11column2:"読み取り専用時未選択iconのクラス名",row12column2:"補助文字を表示するか",row13column2:"補助文字の色",row14column2:"補助文字配列",row15column2:"読み取り専用時の補助文字テンプレート"},samples6:{row1column2:"点数値チェンジ後にトリガー",row1column3:"チェンジ後の点数値"}},pinDemo:{label:"Pin ピン",description:"ピンを使い、内容をスクリーンに固定でき、ページのスクロールによりスクロールしない。サイドメニュー等によく使われる。ブラウザウィンドウの高さを調整で効果を確認できる",samples1:{label:"基本使い方",description:"利用簡単、要素非表示時、直接に最先端部に固定する。固定状態がチェンジ時、changeイベントがトリガー。"},samples2:{label:"オフセット",description:"offset-top又はoffset-bottomを設定すれば、一定の距離をスクロールしたら再固定できる。"},samples3:{label:"底部に固定",description:"スクリーン下に固定。注意点、offset-topとoffset-bottomを一つしか設定できない。二つとも設定した場合、offset-topになる。"},samples4:{label:"終始固定",description:"fixed属性を設定すれば、終始一箇所に固定"},samples5:{row1column2:"窓頂部まである指定オフセットに達したらトリガー",row2column2:"窓底部まである指定オフセットに達したらトリガー",row3column2:"終始一箇所に固定"},samples6:{row1column2:"固定状態チェンジ時にトリガー",row1column3:"固定状態(true/false)"}},uploadDemo:{label:"Upload アップロード",description:"アップロードファイルをクリックまたはドラッグ。",samples1:{label:"基本使い方",description:"slotでカスタマイズしたアップロードボタンタイプと文字ヒントを渡せる。before-uploadでユーザーアップロードのフォーマットと大きさを制限できる"},samples2:{label:"写真壁",description:"list-type属性をpicture-cardに設定。"},samples3:{label:"画像リストサムネイル ",description:"list-type属性をpictureに設定。"},samples4:{label:"アップロードファイルリスト制御",description:"on-changeフック関数でリストを制御する"},samples5:{label:"ドラッグアップロード",description:"drag属性を設定すれば良い"},samples6:{label:"手動アップロード"},samples7:{row1column2:"アップロードのアドレス",row2column2:"オプションパラメータ、アップロードのリクエストヘッダを設定する",row3column2:"オプションパラメータ、複数選択ファイルをサポートするか",row4column2:"オプションパラメータ、アップロード時付けた余分パラメーター",row5column2:"オプションパラメータ、アップロードのファイルフィールド名",row6column2:"cookie証書情報送信をサポート",row7column2:"アップロード済ファイルリストを表示するか",row8column2:"ドラッグアップロードを使用可にするか",row9column2:"オプションパラメータ、アップロードのファイルタイプを受取(thumbnail-modeモードでは本パラメータ無効)",row10column2:"オプションパラメータ、アップロード済ファイルリンク時のフックをクリックし、file.responseでサーバーからの戻りデータを取得できる",row11column2:"オプションパラメータ、ファイルリストはファイルを削除時のフック",row12column2:"オプションパラメータ、ファイルアップロード成功時のフック",row13column2:"オプションパラメータ、ファイルアップロード失敗時のフック",row14column2:"オプションパラメータ、ファイルアップロード時のフック",row15column2:"オプションパラメータ、ファイル状態チェンジ時のフック、ファイル追加、アップロード成功とアップロード失敗時に共呼出させる",row16column2:"オプションパラメータ、アップロードファイル之前的フック, パラメータはアップロードのファイルで、 戻り値はfalseまたはPromise、かつrejectされた場合、アップロードをストップ。",row17column2:"ファイルリストのタイプ",row18column2:"ファイルを選択後直にアップロードするか",row19column2:"アップロードのファイルリスト",row20column2:"デフォルトのアップロード行動を上書き、アップロードの実現をカスタマイズできる",row21column2:"使用不可か",row22column2:"オプションパラメータ、最大アップロード数"},samples8:{row1column2:"アップロード済ファイルリストをクリア(本メソッドはbefore-uploadに呼出すのをサポートしない)"}},colorDemo:{label:"ColorPicker 色セレクター",description:"色選択用、多種フォーマットサポート。",samples1:{label:"基本使い方",description:"v-modelで変数をバインディング、文字列タイプで必要。"},samples2:{label:"選択透明度",description:"ColorPickerは普通色をサポート、Alphaチャンネルの色もサポート、show-alpha属性で透明度の選択をサポートするかを制御できる。"},samples3:{row1column2:"透明度選択をサポートするか",row2column2:"v-modelの色のフォーマットを書込む",row2column5:"hex(show-alphaはfalse)/rgb(show-alphaはtrue)"},samples4:{row2column2:"使用不可状態か",row2column5:"false"},samples5:{row1column2:"バインディング値チェンジ時にトリガー",row1column3:"カレント値"}},navMenuDemo:{label:"NavMenu ナビゲーションメニュー",description:"ウェブサイトにナビゲーション機能のメニューを提供する。",samples1:{label:"トップ欄",description:"ナビゲーションメニューデフォルトは垂直モードとなる。 mode属性でナビゲーションメニューを水平モードへ変更できる。また、メニューにsubmenuコンポーネントで二次メニューを生成できる。theme属性でテーマ設定できる"},samples2:{label:"横欄",description:"vue-menu-item-groupコンポーネントでメニューをグループ化できる。グループ名はtitle属性で直接設定、また名slotも設定できる。"},samples3:{row1column2:"モード",row2column2:"テーマ色",row3column2:"カレント活性化したメニューのindex",row4column2:"カレントオープンしたsubmenuのkey配列",row5column2:"一つサブメニューの展開のみ保持するか",row6column2:"サブメニューオープンのトリガー方式(modeは horizontal時のみ有効)",row7column2:"vue-routerのモードを使用するか、本モード使用可にするなら、活性化ナビゲーション時indexをpathとしてパス遷移"},samples4:{row1column2:"メニュー活性化コールバック",row1column3:"index:メニューのindexを選択、indexPath:メニューのindex pathを選択",row2column2:"SubMenu展開したコールバック",row2column3:"index:オープンしたsubMenuのindex, indexPath:オープンしたsubMenuのindex path",row3column2:"SubMenuしまっておいたコールバック",row3column3:"index:しまっておいたsubMenuのindex, indexPath:しまっておいたsubMenuのindex path"},samples5:{row1column2:"唯一マーク"},samples6:{row1column2:"唯一マーク",row2column2:"Vue Routerパスオブジェクト"},samples7:{row1column2:"グループタイトル"},samples8:{label:"折りたたむ",description:"横欄は折りたたむことができます。"}},listDemo:{label:"List リスト",description:"似た元素情報に展示用。",samples1:{label:"基本使い方",description:"height属性でlist高さを設定、<vue-divider>コントロールでitem間の区切り線を追加"},samples2:{row1column2:"list高さ",row2column2:"垂直スクロールをスクロール時のフック",row3column2:"デフォルト選択されたのitem index",row4column2:"デフォルト選択itemするか",row5column2:"バーチャルスクロールバーするか"},samples3:{row1column2:"itemを選択時のコールバック",row1column3:"選択されたitem"}},sortableDemo:{label:"Sortable ドラッグソート",description:"リスト又はグリッドに元素のソートをマウスで調整する。",samples1:{label:"基本使い方",description:'element属性でsortable容器を設定、例:"div"'},samples2:{label:"データバインディング",description:"データバインディング後ドラッグし、データはそれなりに変化する"},samples3:{label:"クローン",description:'optionsのgroupのpull属性を"clone"に設定すればクローンモードは使用可になる。同一容器内ではクローンできない'},samples4:{row1column2:"一つドラッグ同期の配列をバインディング",row2column2:"コンポーネントのHTMLノードタイプをドラッグできる",row3column2:"sortableのclone選択項はtrue時のコールバック関数、クローンしようデータを返し、バインディングデータ時のみ有効",row4column2:"ドラッグ時のコールバック関数、バインディングデータ時のみ有効",row5column2:"sortableオブジェクトを初期化のオプション、下表を参照"},samples5:{row1column2:"元素を一つの容器から別の容器へドラッグアンドドロップし、2つの容器は同じグループ名を持つ必要がある。下表を参照",row2column2:"同一容器内に自由にソートできるか",row3column2:"元素を数ミリ選択後ドラッグを開始できる",row4column2:"sortableを使用不可か",row5column2:"容器にドラッグできるハンドルセレクター",row6column2:"容器にドラッグできないハンドルセレクター",row7column2:"元素ドラッグ時のスペース取りクラス名",row8column2:"元素選択時のクラス名"},samples6:{row1column2:"グループ名",row2column2:'容器から元素をドラッグできるか、"clone"はクローン元素となる',row3column2:"容器へ元素をドラッグできるか"},samples7:{row1column2:"ドラッグスタートのコールバックイベント",row2column2:"容器追加元素のコールバックイベント",row3column2:"容器削除元素のコールバックイベント",row4column2:"容器更新元素のコールバックイベント",row5column2:"ドラッグ完了のコールバックイベント",row6column2:"元素選択されたコールバックイベント",row7column2:"同一容器内元素ソートのコールバックイベント",row8column2:"ドラッグできないハンドルセレクターを選択された時のコールバックイベント",row9column2:"クローンのコールバックイベント"}},tableDemo:{label:"Table テーブル",description:"複数構造類似なデータに展示用、データにソート、フィルター、比較又は他のカスタマイズ操作できる。（1.6.4から削除、個別にインポート可能）",samples1:{label:"基本使い方",description:"vue-table元素にdataオブジェクト配列を注いだ後、vue-table-columnにprop属性でオブジェクトのキー名を対応すればデータを入力できるようになる。label属性でテーブルの列名を定義し、width属性で列幅を定義する；stripe属性をtrueにすればゼブラしわのテーブルを作成できる。デフォルトはfalse；border属性をtrueにすれば垂直方向の枠になる。デフォルトはfalse。"},samples2:{label:"固定列",description:"固定列はfixed属性が必要になる。 Boolean 値又はleft、rightを受取、左固定又は右固定となる。"},samples3:{label:"テンプレートカスタマイズ",description:"slot-scopeでrow、column、$index とstore(table 内部の状態管理)のデータを取得できる。他のコンポーネントと組み合わせで表示内容もカスタマイズできる"},samples4:{label:"追加削除更新"},samples5:{label:"ソート",description:"テーブルのdefault-sort属性でデフォルトソート列とソート順序を設定。列にsortable属性を設定すれば本列に準じてソートできる"},samples6:{label:"フィルター",description:"列にfilterable属性を設定すれば本列のフィルターを使用可になる。"},samples7:{label:"スタイルカスタマイズ",description:"tableのrow-class-name属性で行のスタイルを指定できる。table-columnのclass-name属性で列のスタイルを指定できる。table-columnのlabel-class-name属性でlabelのスタイルを指定できる"},samples8:{label:"行展開",description:'type="expand"とScoped slotを設定すれば行展開機能を使用可になる。vue-table-columnのテンプレートが展開された行の内容にレンダリングされ、展開された行アクセスできる属性はカスタマイズ列テンプレートを利用時の Scoped slot と同様。tableのexpand-class-name属性を設定すれば展開された行にスタイルを指定できる'},samples14:{label:"単一選択",description:"highlight-current-row属性を設定すれば単一選択できるよになる。その後current-changeイベントでチェックオン時トリガーされるイベントを管理する。currentRow, oldCurrentRowを渡す"},samples15:{label:"複数選択",description:"vue-table-column一つを手動で追加し、type属性をselectionに設定すれば複数選択できるよになる"},samples16:{label:"合計",description:"show-footerをtrueにすればテーブルの下で合計行が表示される。"},samples17:{label:"列表示",description:""},samples18:{label:"コンテキスト・メニュー",description:""},samples19:{label:"レージーロード",description:""},samples20:{label:"ソートフィルタ選択行位置",description:"ソートフィルタ選択行位置"},samples9:{row1column2:"表示されたデータ",row2column2:"Tableの高さ、デフォルトは自動高さとする。",row3column2:"ゼブラしわtableであるか",row4column2:"縦枠付きか",row5column2:"列の幅は自動的に広げるか",row6column2:"テーブルヘッダーを表示するか",row7column2:"カレント行をハイライトにするか",row8column2:"行のclassNameのコールバック関数、全ての行に固定したclassNameを文字列ても設定できる。",row9column2:'空データ時に表示されたテキスト内容、slot="empty"ても設定できる',row10column2:'全ての行をデフォルトで展開するか 、type="expand"のColumnのみ有効',row11column2:'展開された行のclassNameのコールバック関数、全ての行に固定したclassNameを文字列ても設定できる。type="expand"のColumnのみ有効',row12column2:"デフォルトソート列のpropと順序。prop属性はデフォルトのソート列を指定し、order属性デフォルトソートの順序を指定する",row12column5:"propのみ設定し、order設定しない場合、デフォルト順序はascendingとなる",row13column2:"tooltip effect 属性",row14column2:"テーブルの下に合計行を表示するか",row15column2:"合計行一列目のテキスト",row16column2:"カスタマイズした合計計算方法",row17column2:"DOMレージーロードモード, heightが設定した場合有効",row18column2:"マウスオーバー行をハイライトにするか",row19column2:"フィルター後に最初の行を自動的にハイライトする",row20column2:"ソート後に最初の行を自動的にハイライトする"},samples10:{row1column2:"ユーザーはデータ行のCheckboxを手動でチェック時にトリガーされたイベント",row2column2:"ユーザーはCheckboxを手動でフルチェック時にトリガーされたイベント",row3column2:"選択項目がチェンジされた時に本イベントがトリガーされる",row4column2:"セルがhoverされた時に本イベントがトリガーされる",row5column2:"セルがhoverアウト時に本イベントがトリガーされる",row6column2:"あるセルがクリックされた時に本イベントがトリガーされる",row7column2:"あるセルがダブルクリックされた時に本イベントがトリガーされる",row8column2:"ある行がクリックされた時に本イベントがトリガーされる",row9column2:"ある行が右クリックされた時に本イベントがトリガーされる",row10column2:"ある行がダブルクリックされた時に本イベントがトリガーされる",row11column2:"ある列のヘッダーがクリックされた時に本イベントがトリガーされる",row12column2:"ヘッダードラッグして列幅がチェンジされた時に本イベントがトリガーされる",row13column2:"テーブルのソート条件がチェンジされた時に本イベントがトリガーされる",row14column2:"テーブルのフィルター条件がチェンジされた時に本イベントがトリガーされる。パラメータの値オブジェクトである。オブジェクトのkeyはcolumnのcolumnKeyである。対応となるvalueはユーザー選択したフィルター条件の配列である",row15column2:"テーブルのカレント行がチェンジされた時に本イベントがトリガーされる。カレント行をハイライトしたい場合、テーブルのhighlight-current-row属性をオンにてください",row16column2:"ある行展開又はクローズ時に本イベントがトリガーされる",row17column2:"上部にスクロール時にトリガーされたイベント",row18column2:"下部にスクロール時にトリガーされたイベント",row19column2:"左部にスクロール時にトリガーされたイベント",row20column2:"右部にスクロール時にトリガーされたイベント"},samples11:{row11column2:"複数選択テーブル用、選択行",row1column2:"複数選択テーブル用、ユーザー選択をクリア",row2column2:"複数選択テーブル用、切换某一行的选中状態",row3column2:"単一選択テーブル用、ある行を選択行に設定",row4column2:"コンテキスト・メニューの表示を変更する",row5column2:"カラムをフィルター",row6column2:"複数のカラムをソート",row7column2:"データ出力へcsvファイル",row7column3:"params(Object): fileName ファイル名，デフォルトはtable.csv; original 元データですか，デフォルトは true",row8column2:"単一選択テーブル用、選択行",row9column2:"すべてのフィルタをリセットする",row10column2:"すべての並べ替えをリセット",row12column2:"ユーザー設定のエクスポート（ソート、フィルタ、列表示など）",row13column2:"ユーザー設定をインポートする"},samples12:{row1column2:"テンプレートカスタマイズ",row2column2:"ヘッダーのテンプレートカスタマイズ"},samples13:{row1column2:"対応列のタイプ。selectionを設定した場合、チェックボックスを表示; indexを設定し場合、該行のインデックスを表示(1から計算);expandを設定した場合、展開可ボタンを表示",row3column2:"表示されたタイトル",row4column2:"対応列データのフィールド名",row5column2:"対応列の幅",row6column2:"対応列の最小幅、tableが余った幅を割合でmin-widthを設定した列に割当てる",row7column2:"列を左側又は右側に固定するか、trueは左側に固定とする",row8column2:"列タイトルLabelエリアレンダリング用Function",row9column2:"対応列はソートできるか。",row10column2:"データソート時に使用したメソッド、sortableはtrue時のみ有効。ブール値を返す要",row11column2:"対応列はドラッグで幅を変更できるか(vue-tableにborder属性をtrueに設定要)",row12column2:"内容フォマード化用",row13column2:"内容が長すぎ時tooltipを表示",row14column2:"寄せ方",row15column2:"ヘッダー寄せ方",row16column2:"列のカスタマイズクラス名",row17column2:"カレント列タイトルのカスタマイズクラス名",row18column2:"type==selectionの列のみ有効、booleanを返してこの行の CheckBoxがチェックできるかを決定",row19column2:"対応列はデータフィルターできるか",row20column2:"フィルターオプション，textとvalueの属性が必要です",row22column2:"データフィルター用のメソッド、booleanを返して表示するかを決定",row23column2:"列表示",row24column2:"合計のタイプ",row25column2:"合計のヘッド",row26column2:"csvファイルのヘッド",row27column2:"前の列に統合されるかどうか"}},signatureDemo:{label:"Signature サイン",description:"マウスによるサイン、Base64データを生成する",samples1:{label:"基本使い方",description:"width、heightと背景色を設定する"},samples2:{label:"画像base64データを取得する",description:"saveSignatureメソッドを呼び出し、ステータスとbase64のデータを返します。"},samples3:{label:"サインをクリアする",description:"clearSignatureメソッドを呼び出します。"},samples4:{label:"元に戻す",description:"undoSignatureメソッドを呼び出します。"},samples5:{label:"ロック、ロック解除",description:"lockSignaturePad、openSignaturePad"},samples6:{row1column2:"幅",row2column2:"高さ",row3column2:"画像フォーマット、サポートimage/png, image/jpeg, image/svg+xml",row4column2:"詳細設定 {backgroundColor: string, penColor: string, onBegin：function, onEnd：function}",row5column2:"外側のdivスタイル :custom-style=\"{border: 'black 1px dotted'}\""},samples7:{row1column2:"ステータスとbase64のデータを返します",row2column2:"最後のストロークを元に戻す",row3column2:"サインをクリアする",row4column2:"ロック",row5column2:"ロック解除",row6column2:"base64データの読み取り",row7column2:"ブランクかどうか"}},hotkeyDemo:{label:"Hotkey ホットキー",description:"ホットキーをバインドします",samples1:{label:"基本使い方",description:"v-hotkeyディレクティブをバインドします，デフォルトclickイベント、methodを指定することもできます"}},mobileInstallDemo:{label:"快速上手",description:"",detail1:{label:"引入",description:'在页面头部VIY PC版代码后引入'}},scrollviewDemo:{label:"ScrollView 滚动列表",description:"用于模拟原生的滚动区域，并支持下拉刷新和加载更多",defatltText:"默认",customText:"自定义",detail2:{label:"使用指南",description1:"ScrollViewRefresh为组件库内置的下拉刷新组件，仅用于作为视觉展示，需在插槽refresh中使用，下拉刷新组件也可自定义",description2:"ScrollViewMore为组件库内置的加载更多组件，仅用于作为视觉展示，需在插槽more中使用，加载更多组件也可自定义",description3:"组件容器需具有高度，否则会出现无法滚动或回弹问题。更多使用的常见问题请查看附录"},samples1:{label:"基础用法",description:"实现纵向滚动"},samples2:{label:"横向滚动",description:""},samples3:{label:"下拉刷新",description:""},samples4:{label:"上拉加载",description:""},samples5:{label:"粘性标题",description:""},samples6:{label:"配合TabBar",description:""},samples7:{label:"手动初始化",description:""},attrsinfo:{row1column2:"水平滚动",row2column2:"垂直滚动",row3column2:"可回弹",row4column2:"内容发生变化时自动重置滚动区域尺寸",row5column2:"手动初始化",row6column2:"触发到达底部的提前量",row7column2:"初始化时立即触发是否到达底部检查",row8column2:"触发滚动的角度值范围",row9column2:"防止浏览器默认滚动"},refreshAttrs:{row1column2:"距离顶部的距离，输入值仅为数字",row2column2:"释放刷新的状态",row3column2:"刷新状态",row4column2:"下拉刷新文本内容",row4column5:"下拉刷新",row5column2:"释放刷新文本内容",row5column5:"释放刷新",row6column2:"刷新中的文本内容",row6column5:"刷新中...",row7column2:"进度条颜色"},moreAttrs:{row1column2:"全部已加载",row2column2:"加载中的文本内容",row2column5:"更多加载中...",row3column2:"全部已加载的文本内容",row3column5:"全部已加载"},slotInfo:{default:"滚动区域内容槽。当内容更改时，需要调用reflowScroller来重置滚动区域。具体请参阅reflowScroller refresh。",refresh:"下拉刷新组件槽，您可以使用slot-scoped来获得相关的滚动状态（当槽作用域不兼容时，滚动状态也可以通过事件动态设置），如下所示：",more:"更多加载组件槽，通过实际加载情况，在事件中改变isFinished的值。默认为false。"},eventInfo:{row1column2:"距左侧距离，输入值仅为数字",row2column2:"距顶部距离，输入值仅为数字",detail1:"参数说明",detail2:"释放刷新事件",detail3:"刷新事件",detail4:"加载结束事件"},methodInfo:{row1column2:"距左侧距离，输入值仅为数字",row2column2:"距顶部距离，输入值仅为数字",row3column2:"使用动画",detail1:"初始化滚动区域。（当manual-init被设置为true时使用。）",detail2:"重置滚动区域，需要在常规滚动区域的内容发生更改后调用该区域。",detail3:"滚动到指定位置，以下为参数说明：",detail4:"获取滚动位置，其返回对象为 {left: number, top: number}",detail5:"开启手动下拉刷新",detail6:"下拉刷新结束方法，，示例代码：",detail7:"上拉加载结束方法，示例代码："}},actionsheetDemo:{label:"ActionSheet 动作面板",description:"",defatltText:"默认",customText:"自定义",detail1:{label:"介绍",description:"底部弹起的模态面板，包含与当前情境相关的多个选项。"},attrsInfo:{row1column2:"是否显示动作面板",row2column2:"面板选项列表",row3column2:"顶部标题",row4column2:"取消按钮文字",row5column2:"选项上方的描述信息",row6column2:"关闭图标名称或图片链接",row7column2:"动画时长，单位秒",row8column2:"是否显示圆角",row9column2:"是否显示遮罩层",row10column2:"是否锁定背景滚动",row11column2:"是否在显示弹层时才渲染节点",row12column2:"是否在页面回退时自动关闭",row13column2:"是否在点击选项后关闭",row14column2:"是否在点击遮罩层后关闭",row15column2:"是否开启底部安全区适配",row16column2:"指定挂载的节点"},actionsInfo:{description:"actions 属性是由对象构成的数组，数组中的每个对象配置一列，对象可以包含以下值：",row1column2:"标题",row2column2:"二级标题",row3column2:"选项文字颜色",row4column2:"为对应列添加额外的 class",row5column2:"是否为加载状态",row6column2:"是否为禁用状态"},eventInfo:{row1column2:"点击选项时触发，禁用或加载状态下不会触发",row2column2:"点击取消按钮时触发",row3column2:"打开面板时触发",row4column2:"关闭面板时触发",row5column2:"打开面板且动画结束后触发",row6column2:"关闭面板且动画结束后触发",row7column2:"点击遮罩层时触发"}},navbarDemo:{label:"NavBar 导航栏",description:"",defatltText:"默认",customText:"自定义",samples1:{label:"基础用法",description:""},samples2:{label:"插槽的使用",description:"使用插槽，通过插槽自定义导航栏两侧的内容"},attrsInfo:{row1column2:"标题",row2column2:"左侧文案",row3column2:"右侧文案",row4column2:"是否显示左侧箭头",row5column2:"是否显示下边框",row6column2:"是否固定在顶部",row7column2:"固定顶部时，是否在标签位置生成一个等高的占位元素",row8column2:"元素 z-index"},slotInfo:{row1column2:"自定义标题",row2column2:"自定义左侧区域内容",row3column2:"自定义右侧区域内容"},eventInfo:{row1column2:"点击左侧按钮时触发",row2column2:"点击右侧按钮时触发"}},tabbarDemo:{label:"TabBar 标签栏",description:"",defatltText:"默认",customText:"自定义",samples1:{label:"基础用法",description:""},samples2:{label:"通过名称匹配",description:""},samples3:{label:"微标提示",description:""},samples4:{label:"自定义图标",description:"通过icon插槽自定义图标，可以通过 slot-scope 判断标签是否选中"},samples5:{label:"自定义颜色+监听切换事件用法",description:""},samples6:{label:"路由模式",description:"用于搭配vue-router使用。路由模式下会匹配页面路径和标签的to属性，并自动选中对应的标签"},attrsInfo:{row1column2:"当前选中标签的名称或索引值",row2column2:"是否固定在底部",row3column2:"是否显示外边框",row4column2:"元素 z-index",row5column2:"选中标签的颜色",row6column2:"未选中标签的颜色",row7column2:"固定在底部时，是否在标签位置生成一个等高的占位元素",row8column2:"是否开启底部安全区适配，设置 fixed 时默认开启",row9column2:"是否开启路由模式"},eventInfo:{row1column2:"切换标签时触发",row1column3:"active: 当前选中标签的名称或索引值"},tabBarItemAttrsInfo:{row1column2:"标签名称，作为匹配的标识符",row1column5:"当前标签的索引值",row2column2:"图标名称或图片链接",row3column2:"是否显示图标右上角小红点",row4column2:"图标右上角徽标的内容",row5column2:"图标右上角徽标的内容（已废弃，请使用 badge 属性）",row6column2:"点击后跳转的链接地址",row7column2:"点击后跳转的目标路由对象，同 vue-router 的 to 属性",row8column2:"是否在跳转时替换当前页面历史"},tabBarItemSlotInfo:{row1column2:"自定义图标,其中active表示是否为选中标签"}},celllayoutDemo:{label:"CellLayout 宫格",description:"",defatltText:"默认",customText:"自定义",detail1:{label:"介绍",description:"宫格可以在水平方向上把页面分隔成等宽度的区块，用于展示内容或进行页面导航"},samples1:{label:"基础用法",description:"默认一行展示四个格子,有边框"},samples2:{label:"自定义列数",description:"可以通过column-num自定义列数"},samples3:{label:"自定义显示内容",description:"通过插槽可以自定义格子展示的内容"},samples4:{label:"方形格子+自定义（间距+列数）+微标提示",description:""},samples5:{label:"页面导航",description:"使用url属性注意是跳转页面的路径"},attrsInfo:{row1column2:"列数",row2column2:"图标大小，默认单位为px",row3column2:"格子之间的间距，默认单位为px",row4column2:"是否显示边框",row5column2:"是否将格子内容居中显示",row6column2:"是否将格子固定为正方形",row7column2:"是否开启格子点击反馈"},celllayoutitemAttrsInfo:{row1column2:"文字",row2column2:"图标名称或图片链接",row3column2:"图标颜色",row4column2:"是否显示图标右上角小红点",row5column2:"图标右上角徽标的内容",row6column2:"图标右上角徽标的内容（已废弃，请使用 badge 属性）",row7column2:"点击后跳转的链接地址",row8column2:"点击后跳转的目标路由对象，同 vue-router 的 to 属性",row9column2:"是否在跳转时替换当前页面历史"},celllayoutitemEventInfo:{row1column2:"点击格子时触发"},celllayoutitemSlotsInfo:{row1column2:"自定义宫格的所有内容",row2column2:"自定义图标",row3column2:"自定义文字"}},swipecellDemo:{label:"SwipeCell 滑动单元格",description:"",defatltText:"默认",customText:"自定义",samples1:{label:"基础用法",description:""},samples2:{label:"自定义内容",description:""},samples3:{label:"异步关闭调用",description:"通过传入before-close回调函数，可以自定义两侧滑动内容关闭时的行为"},attrsInfo:{row1column2:"标识符，可以在事件参数中获取到",row2column2:"指定左侧滑动区域宽度，单位为px",row3column2:"指定右侧滑动区域宽度，单位为px",row4column2:"关闭前的回调函数",row5column2:"是否禁用滑动",row6column2:"是否阻止滑动事件冒泡"},beforecloseAttrsInfo:{description:"beforeClose 的第一个参数为对象，对象中包含以下属性：",row1column2:"标识符",row2column2:"关闭时的点击位置 (left right cell outside)",row3column2:"SwipeCell 实例，用于调用实例方法"},slotsInfo:{row1column2:"自定义显示内容",row2column2:"左侧滑动内容",row3column2:"右侧滑动内容"},eventInfo:{row1column2:"点击时触发",row1column3:"关闭时的点击位置 (left right cell outside)",row2column2:"打开时触发",row3column2:"关闭时触发"},methodInfo:{description:"通过 ref 可以获取到 SwipeCell 实例并调用实例方法，详见组件实例方法",row1column2:"打开单元格侧边栏,其参数 position: left | right",row2column2:"收起单元格侧边栏"}},texticonDemo:{label:"TextIcon 文本图标",description:"",defatltText:"默认",customText:"自定义",samples1:{label:"基础用法",description:""},samples2:{label:"颜色+字体大小设置",description:""},samples3:{label:"文本排布方式(默认文本在下方)",description:""},samples4:{label:"文本排布方式+文本边距设置（默认为2px）",description:""},attrsInfo:{row1column2:"图标形状",row2column2:"图标颜色",row3column2:"图标大小",row4column2:"是否有圆点标记",row5column2:"角标内容",row6column2:"文本名称",row7column2:"文本字体颜色",row8column2:"文本字体大小",row9column2:"文本相对于图标的位置，分别有 'top' | 'right' | 'bottom' | 'left'",row10column2:"文本距离图标的边距"},eventInfo:{row1column2:"点击时触发"}},stepperDemo:{label:"Stepper 步进器",description:"",defatltText:"默认",customText:"自定义",detail1:{label:"介绍",description:"步进器由增加按钮、减少按钮和输入框组成，用于在一定范围内输入、调整数字"},samples1:{label:"基础用法",description:""},samples2:{label:"步长设置",description:"通过step属性设置每次点击增加或减少按钮时变化的值，默认值为1，间隔设置为3"},samples3:{label:"限制输入范围",description:"通过min和max属性限制输入值的范围"},samples4:{label:"限制输入整数",description:"设置integer属性后，输入框将限制只能输入整数"},samples5:{label:"禁用状态",description:"通过设置disabled属性来禁用步进器，禁用状态下无法点击按钮或修改输入框"},samples6:{label:"禁用输入框",description:"通过设置disable-input属性来禁用输入框，此时按钮仍然可以点击"},samples7:{label:"固定小数位数",description:"通过设置decimal-length属性可以保留固定的小数位数"},samples8:{label:"自定义大小",description:"通过input-width属性设置输入框宽度，通过button-size属性设置按钮大小和输入框高度"},samples9:{label:"异步变更",description:"如果需要异步地修改输入框的值，可以设置async-change属性，并在change事件中手动修改value"},attrsInfo:{row1column2:"当前输入的值",row2column2:"最小值",row3column2:"最大值",row4column2:"初始值，当 v-model 为空时生效",row5column2:"步长，每次点击时改变的值",row6column2:"标识符，可以在change事件回调参数中获取",row7column2:"输入框宽度，默认单位为px",row8column2:"按钮大小以及输入框高度，默认单位为px",row9column2:"固定显示的小数位数",row10column2:"是否只允许输入整数",row11column2:"是否禁用步进器",row12column2:"是否禁用增加按钮",row13column2:"是否禁用减少按钮",row14column2:"是否禁用输入框",row15column2:"是否开启异步变更，开启后需要手动控制输入值",row16column2:"是否显示增加按钮",row17column2:"是否显示减少按钮",row18column2:"是否开启长按手势"},eventInfo:{row1column2:"当绑定值变化时触发的事件",row2column2:"点击不可用的按钮时触发",row3column2:"点击增加按钮时触发",row4column2:"点击减少按钮时触发",row5column2:"输入框聚焦时触发",row6column2:"输入框失焦时触发"}},indexbarDemo:{label:"IndexBar 索引栏",description:"",defatltText:"默认",customText:"自定义",samples1:{label:"基础用法",description:""},attrsInfo:{row1column2:"索引字符列表",row2column2:"z-index 层级",row3column2:"是否开启锚点自动吸顶",row4column2:"锚点自动吸顶时与顶部的距离",row5column2:"索引字符高亮颜色"},eventInfo:{row1column2:"选中字符时触发",row2column2:"index: 索引字符"},indexanchorAttrsInfo:{row1column2:"索引字符"},indexanchorSlotsInfo:{row1column2:"锚点位置显示内容，默认为索引字符"}},skeletonDemo:{label:"Skeleton 骨架屏",description:"",defatltText:"默认",customText:"自定义",samples1:{label:"基础用法",description:""},samples2:{label:"显示头像",description:"通过avatar属性显示头像占位图"},samples3:{label:"展示子组件",description:"将loading属性设置成false表示内容加载完成，此时会隐藏占位图，并显示Skeleton的子组件,1秒后显示"},attrsInfo:{row1column2:"段落占位图行数",row2column2:"段落占位图宽度，可传数组来设置每一行的宽度",row3column2:"是否显示标题占位图",row4column2:"是否显示头像占位图",row5column2:"是否显示骨架屏，传 false 时会展示子组件内容",row6column2:"是否开启动画",row7column2:"标题占位图宽度",row8column2:"头像占位图大小",row9column2:"头像占位图形状，可选值为square"}}}},"./demo/DemoLangZh.js":
/*!****************************!*\
  !*** ./demo/DemoLangZh.js ***!
  \****************************/
/*! no static exports found */function(e,n,t){"use strict";e.exports={app:{body:{label:{name:"姓名",sex:"性别",age:"年龄"}}},main:{title1:"开发指南",title2:"组件列表",title3:"综合示例",title4:"问题反馈",title5:"拓展组件",title6:"Gantt 甘特图",title7:"Charts 图表",title8:"Excel 导入导出",title9:"移动端组件",radiolabel1:"中",radiolabel2:"日",radiolabel3:"EN",code:"代码",line1:"网站快速成型工具",line21:"只为守护世界和平!",line22:"只为让你少加班!",line23:"只为成就这样的你: ",line24:"产品设计师",line25:"交互设计师",line26:"视觉设计师",line27:"产品经理",line28:"前端工程师",table:{method:"方法名",description:"概述",usage:"用法",parameters:"参数",type:"类型",acceptedValues:"可选值",defaultValue:"默认值",event:"事件",name:"名称"}},installDemo:{label:"快速上手",samples1:{label:"安装",description:"在页面上引入 js 和 css 文件即可开始使用."},samples6:{label:"npm 安装",description:"使用 npm 的方式安装，它能更好地和 webpack 打包工具配合使用。"},samples2:{description:"通过 vue 组件可以很容易地写出一个 Hello world 页面."},samples3:{description:"组件内封装的一些常用方法",row1column2:"判断参数是否定义(undefined或null状态为未定义)",row2column2:"判断参数是否为String类型",row3column2:"判断参数是否为Number类型",row4column2:"判断参数是否为Boolean类型",row5column2:"判断参数是否为File类型",row6column2:"判断参数是否为Object类型",row7column2:"判断参数是否为Array类型",row8column2:"判断参数是否为Function类型",row9column2:"判断参数是否为Date类型",row10column2:"判断参数是否为NodeList类型",row11column2:"判断参数是否为Element类型",row12column2:"判断参数是否为VNode类型",row13column2:"参数转换为String类型并返回",row14column2:"参数转换为Date类型并返回, 如果失败返回null",row15column2:"将参数按指定日期格式转换为String类型并返回, 如果失败返回null",row16column2:"将参数按指定日期格式转换为Date类型并返回, 如果失败返回null",row17column2:"根据年月获取当月的天数, 失败返回null",row18column2:"根据日期获取当月第一天是星期几, 失败返回null",row19column2:"根据日期获取本周是第几周, 失败返回null",row20column2:"根据类型返回指定日期的向前或向后日期, 如果失败返回null",row21column2:"对包含length属性的对象进行循环, 类似forEach方法",row22column2:"循环对象的可枚举属性",row23column2:'去除参数的首尾空格并返回, 参数不为String时返回""',row24column2:"将来自一个或多个源对象中的值复制到一个目标对象, 只复制可枚举属性",row25column2:"将来自一个或多个源数组中的值复制到一个目标数组",row26column2:"对一个元素绑定事件",row27column2:"对一个元素移除事件",row28column2:"对一个元素绑定事件, 触发后移除该事件",row29column2:"判断元素是否存在某一名称的class",row30column2:"对元素追加某一名称的class",row31column2:"对元素移除某一名称的class",row32column2:"获取元素某一属性的style, 如果失败返回null",row33column2:"设置元素某一属性的style",row34column2:"根据名称获取Cookie, 如果失败返回null",row35column2:"根据名称设置Cookie",row36column2:"根据名称移除Cookie",row37column2:"函数节流, 当调用时刻大于等于执行周期则执行该动作，然后进入下一个新周期, 默认16ms为一周期",row38column2:"函数防抖, 当调用时刻大于等于执行周期则执行该动作，若在周期内又调用此动作则进入新一个周期, 默认16ms为一周期",row39column2:"对一个元素绑定resize事件, 内置函数防抖",row40column2:"对一个元素移除resize事件",row41column2:"DOM树上移除某个节点",row42column2:"DOM树上对某个节点插入一个子节点",row43column2:"获取浏览器竖滚动条宽度",row44column2:"对一个元素绑定接触屏幕时触发事件",row45column2:"对一个元素绑定屏幕上移动时触发事件",row46column2:"对一个元素绑定屏幕上移开时触发事件",row47column2:"对一个元素移除接触屏幕时触发事件",row48column2:"对一个元素移除屏幕上移动时触发事件",row49column2:"对一个元素移除屏幕上移开时触发事件",row50column2:"浏览器全屏, 类似F11效果",row51column2:"获取系统信息",row52column2:"设置显示的语言",row53column2:"设置语言内容",row54column2:"VueUtil.config 是一个对象，包含 VueUtil 的全局配置。",row55column2:"获取当前画面控件的最大zindex",row56column2:"对一个元素绑定hover事件",row57column2:"对一个元素移除hover事件",row58column2:"将参数按指定数据格式转换为String类型并返回, 如果失败返回null",row59column2:"深拷贝一个对象"},samples4:{label:"Vue 基础知识",description:"强烈建议先学习下Vue基本用法和思想。",row1column2:"事件绑定",row2column2:"事件解除",row3column2:"绑定只触发一次的事件",row4column2:"判断是否存在class",row5column2:"追加class",row6column2:"移除class",row7column2:"获取style值",row8column2:"设置style值",row9column2:'去除src开始和末尾的空格, 如src类型不为string则返回""',row10column2:"将src1, src2, src3...合并到dest中, 返回值为合并后的dest",row11column2:"绑定元素尺寸变动时的事件",row12column2:"移除元素尺寸变动时的事件",row13column2:'将string按format转换为date型, 转换失败返回false, format默认为"yyyy-MM-dd"',row14column2:'将date按format转换为string型, 转换失败返回"", format默认为"yyyy-MM-dd"',row15column2:"判断src是否可以转换为date型, 返回true/false",row16column2:"将src转换为date型, 失败返回null",row17column2:"设置组件要显示的语言",row18column2:'设置组件多语言(可参看"I18n 国际化")',row19column2:"从DOM上移除node",row20column2:"把node元素插入fatherNode元素的第position个位置",row21column2:"把数组arr转换为Object型",row22column2:"使页面全屏(效果类似F11, 必须使用事件触发)",row23column2:"返回src的上一月",row24column2:"返回src的下一月"},samples5:{description:"异步读取.vue文件"}},i18nDemo:{label:"I18n 国际化",samples1:{label:"基本用法",description:"使用 VueUtil.setLocale() 来设置多语言, 使用 VueUtil.setLang() 来设置显示的语言, 在Vue组件内部可以使用 $t() 来获取多语言的值, 在Vue组件外部可以使用 Vue.t() 来获取多语言的值;"},samples2:{label:"兼容 vue-i18n@5.x",description:"兼容 vue-i18n@5.x，搭配使用能更方便地实现多语言切换。"},samples3:{label:"兼容 vue-i18n@6.x +",description:"默认不支持 6.x + 的 vue-i18n，你需要手动处理。"}},ajaxDemo:{label:"异步数据传输",samples1:{label:"基本用法",description:"可以基于全局的Vue对象使用http, 也可以基于某个控件使用http."},samples2:{label:"支持的HTTP方法",description:"请求API是按照REST风格设计的, 它提供了7种请求API"},samples3:{row1column3:"请求的URL",row2column3:'请求的HTTP方法, 例如："GET", "POST"或其他HTTP方法',row4column3:"请求的URL参数对象",row6column3:"单位为毫秒的请求超时时间 (0 表示无超时时间)",row7column3:"请求发送前的处理函数, 类似于jQuery的beforeSend函数",row8column3:"ProgressEvent回调处理函数",row9column3:"表示跨域请求时是否需要使用凭证",row10column3:"发送PUT, PATCH, DELETE请求时以HTTP POST的方式发送, 并设置请求头的X-HTTP-Method-Override",row11column3:"将request body以application/x-www-form-urlencoded content type发送"}},layoutDemo:{label:"Layout 布局",description:"通过基础的 24 分栏, 迅速简便地创建布局.",samples1:{label:"基础布局",description:"通过 row 和 col 组件, 并通过 col 组件的 span 属性我们就可以自由地组合布局."},samples2:{label:"分栏间隔",description:"row 组件 提供 gutter 属性来指定每一栏之间的间隔, 默认间隔为 0."},samples3:{label:"混合布局",description:"通过基础的 1/24 分栏任意扩展组合形成较为复杂的混合布局."},samples4:{label:"对齐方式",description:"将 type 属性赋值为 'flex', 可以启用 flex 布局, 并可通过 justify 属性来指定 start, center, end, space-between, space-around 其中的值来定义子元素的排版方式."},samples5:{label:"响应式布局",description:"参照了 Bootstrap 的 响应式设计, 预设了四个响应尺寸：xs、sm、md 和 lg."},samples6:{row1column2:"栅格间隔",row2column2:"布局模式, 可选 flex",row3column2:"flex 布局下的水平排列方式",row4column2:"flex 布局下的垂直排列方式"},samples7:{row1column2:"栅格占据的列数",row2column2:"栅格左侧的间隔格数",row3column2:"栅格向右移动格数",row4column2:"栅格向左移动格数",row5column2:"'<768px' 响应式栅格数或者栅格属性对象",row6column2:"'≥768px' 响应式栅格数或者栅格属性对象",row7column2:"'≥992px' 响应式栅格数或者栅格属性对象",row8column2:"'≥1200px' 响应式栅格数或者栅格属性对象",row5column3:"Number / Object (例如： {span: 4, offset: 4})",row6column3:"Number / Object (例如： {span: 4, offset: 4})",row7column3:"Number / Object (例如： {span: 4, offset: 4})",row8column3:"Number / Object (例如： {span: 4, offset: 4})"}},iconDemo:{label:"Icon 图标",description:"常用的图标集合",samples1:{label:"使用方法",description:"直接通过设置类名为 vue-icon-iconName 来使用即可."},samples2:{label:"图标集合"}},buttonDemo:{label:"Button 按钮",description:"常用的操作按钮.",defaultButton:"默认按钮",mainButton:"主要按钮",textButton:"文字按钮",circleButton:"圆角按钮",successButton:"成功按钮",warningButton:"警告按钮",dangerButton:"危险按钮",infoButton:"信息按钮",samples1:{label:"基础用法",description:"Button 组件默认提供7种主题, 由type属性来定义, 默认为default."},samples2:{label:"有颜色倾向",description:"设置了不同的type属性对应的样式.设置plain属性, 它接受一个Boolean.注意, 在该情况下, type虽然可以为text, 但是是没有意义的, 会显示为text button的样式.",defaultLabel:"默认显示颜色",hoverLabel:"hover 显示颜色"},samples3:{label:"禁用状态",description:"设置disabled属性即可, 它接受一个Boolean, true为禁用."},samples4:{label:"图标按钮",description:"设置icon属性即可, 也可以设置在文字右边的 icon , 只要使用i标签即可, 可以使用自定义图标."},samples5:{label:"按钮组",description:"使用<vue-button-group>标签来嵌套你的按钮"},samples6:{label:"加载中",description:"设置loading属性为true即可."},samples7:{label:"不同尺寸",description:"通过设置size属性来配置它们."},samples8:{row1column2:"尺寸",row2column2:"类型",row3column2:"是否圆角按钮",row4column2:"是否朴素按钮",row5column2:"是否加载中状态",row6column2:"是否禁用状态",row7column2:"图标",row8column2:"自动获取焦点",row9column2:"原生type属性"}},inputDemo:{label:"Input 输入框",description:"通过鼠标或键盘输入字符.",defaultPlaceholder:"请输入内容",selectPlaceholder:"请选择",samples1:{label:"基础用法"},samples2:{label:"禁用状态",description:"设置disabled属性即可, 它接受一个Boolean, true为禁用."},samples3:{label:"带icon的输入框",description:"可以通过icon属性在input组件尾部增加显示图标, 可以通过on-icon-click钩子函数来在点击图标后执行需要的逻辑."},samples4:{label:"文本域",description:"通过将type属性的值指定为textarea.文本域高度可通过rows属性控制, "},samples5:{label:"可自适应文本高度的文本域",description:"通过设置 autosize 属性可以使得文本域的高度能够根据文本内容自动进行调整, 并且 autosize 还可以设定为一个对象, 指定最小行数和最大行数."},samples6:{label:"复合型输入框",description:"可前置或后置元素, 一般为标签或按钮.可通过slot来指定在input中前置或者后置内容.",selectLabel1:"餐厅名",selectLabel2:"订单号",selectLabel3:"用户电话"},samples7:{label:"尺寸",description:"可通过size属性指定输入框的尺寸, 除了默认的大小外, 还提供了large、small和 mini三种尺寸."},samples8:{label:"带输入建议",description:"autocomplete是一个可带输入建议的输入框组件, fetch-suggestions是一个返回输入建议的方法属性, 如 querySearch(queryString, cb), 在该方法中你可以在你的输入建议数据准备好时通过cb(data)返回到 autocomplete组件中.",label1:"激活即列出输入建议",label2:"输入后匹配输入建议"},samples9:{label:"自定义格式",description:"设置cleave属性即可, 它接受一个Object."},samples10:{row1column2:"类型",row2column2:"绑定值",row3column2:"最大输入长度",row4column2:"最小输入长度",row5column2:"占位文本",row6column2:"禁用",row7column2:'输入框尺寸, 只对type!="textarea"时有效',row8column2:"输入框前部图标",row9column2:"输入框尾部图标",row10column2:'输入框行数, 只对type=="textarea"有效',row11column2:'自定义格式, 只对type!="textarea"有效, 更多格式请参考下表',row12column2:'自适应内容高度, 只对type=="textarea"有效, 可传入对象, 如 {minRows: 2, maxRows: 6}',row13column2:"原生属性, 自动补全",row14column2:"原生属性",row15column2:"原生属性, 是否只读",row16column2:"原生属性, 设置最大值",row17column2:"原生属性, 设置最小值",row18column2:"原生属性, 设置输入字段的合法数字间隔",row19column2:'控制是否能被用户缩放, 只对 type="textarea" 有效',row20column2:"自动获取焦点",row21column2:"文本对齐",row22column2:"原生属性, 所属的一个或多个表单的id",row23column2:"点击 Input内的图标的钩子函数",row24column2:"键盘弹出类型，仅在移动端上使用"},samples11:{row1column2:"点击Input内的图标时触发",row2column2:"在Input失去焦点时触发",row3column2:"在Input获得焦点时触发",row4column2:"在Input值改变时触发"},samples12:{row1column2:"占位文本",row2column2:"禁用",row3column2:"必填值输入绑定值",row4column2:"通过该参数指定自定义的输入建议列表项的组件名",row5column2:"返回输入建议的方法, 仅当你的输入建议数据resolve时, 通过调用callback(data:[])来返回它",row6column2:"Autocomplete下拉列表的类名",row7column2:"是否在输入框focus时显示建议列表",row8column2:"点击图标的回调函数",row9column2:"输入框尾部图标",row10column2:"配置选项, 具体见下表"},samples13:{row1column2:"指定选项的值为选项对象的某个属性值",row2column2:"指定选项标签为选项对象的某个属性值"},samples14:{row1column2:"点击选中建议项时触发"},samples15:{row1column2:"是否信用卡格式,启用后会根据IIN自动检测信用卡类型。",row2column2:"在信用卡类型改变后触发的一个回调函数。",row3column2:"是否启用手机格式, 必须与phoneRegionCode一起使用",row4column2:"各国地区的电话号码格式编码, 编码请参考 ISO 3166-1 alpha-2",row5column2:"是否启用日期格式",row6column2:"通过数组来定义日期格式",row7column2:"是否启用数字格式",row8column2:"分隔符分组样式",row9column2:"设置几位整数部分",row10column2:"设置几位小数部分",row11column2:"小数点样式",row12column2:"是否只能是正数",row13column2:"根据数组值来格式化输入位数",row14column2:"设置分隔符",row15column2:"使用多个分隔符",row16column2:"在开始处预设的值,它不能被删除或更改",row17column2:"获取原值时预设的值是否去除",row18column2:"是否只能输入数字(0~9)",row19column2:"是否转换为大写字母",row20column2:"是否转换为小写字母",row21column2:"自定义格式"},samples16:{row1column2:"手动聚焦"}},dateDemo:{label:"DatePicker 日期选择器",description:"用于选择或输入日期",samples1:{label:"基础用法",description:"快捷选项需配置picker-options对象中的shortcuts, 禁用日期通过disabledDate设置.",defaultLabel:"默认",optionsLabel:"带快捷选项",defaultPlaceholder:"选择日期",todayLabel:"今天",yesterdayLabel:"昨天",weekAgoLabel:"上周"},samples2:{label:"其他日期单位",description:"基本单位由type属性指定",weekLabel:"周",weekPlaceholder:"选择周",weekFormat:"yyyy 第 WW 周",monthLabel:"月",monthPlaceholder:"选择月",yearLabel:"年",yearPlaceholder:"选择年"},samples3:{label:"选择日期范围",description:"可在一个选择器中便捷地选择一个时间范围.",defaultLabel:"默认",optionsLabel:"带快捷选项",defaultPlaceholder:"选择日期范围",lastWeekLabel:"最近一周",lastMonthLabel:"最近一个月",last3MonthLabel:"最近三个月"},samples4:{row1column2:"是否只读(仅show-mobile-ui为false时可用)",row2column2:"是否禁用",row21column2:"文本框可输入(仅show-mobile-ui为false时可用)",row3column2:"是否显示清除按钮",row4column2:"输入框尺寸",row5column2:"占位文本",row51column2:"范围选择时开始日期的占位内容",row52column2:"范围选择时结束日期的占位内容",row6column2:"显示类型",row7column2:"显示时间日期格式",row7column4:"年:yyyy, 月:MM, 日:dd, 时:HH, 分:mm, 秒:ss, 周:WW",row8column2:"下拉框的对齐方式(仅show-mobile-ui为false时可用)",row9column2:"下拉框的类名",row10column2:"选择范围时的分隔符",row11column2:"下拉框打开时默认选中的日期(仅show-mobile-ui为false时可用)",row11column4:"会被new Date()解析",row111column2:"可选，绑定值的格式。不指定则绑定值为 Date 对象",row12column2:"当前选择器特有的选项, 参考下表(仅show-mobile-ui为false时可用)"},samples5:{row1column2:"设置快捷选项, 需要传入{text, onClick}对象用法参考demo或下表",row2column2:"设置禁用状态, 参数为当前日期, 要求返回 Boolean",row3column2:"周起始日",row4column2:"选中日期后会执行的回调, 只有当 daterange 或 datetimerange 才生效"},samples6:{row1column2:"标题文本",row2column2:'选中后的回调函数, 参数是 vm, 可通过触发 "pick" 事件设置选择器的值.例如 vm.$emit("pick", new Date())'},samples7:{row1column2:"当input的值改变时触发, 返回值和文本框一致",row1column3:"格式化后的值"},samples8:{row1column2:"是否显示移动端UI",row2column2:"选择器当前选中值(通过v-model使用)",row3column2:"输入框文字水平对齐方式(当show-mobile-ui为true时使用,且type为 'daterange','datetimerange'无效)",row3column3:"区间选择输入框文字水平对齐方式(当show-mobile-ui为true时使用,且type为 'daterange','datetimerange'有效)",row4column2:"选择器可选范围的最小日期(仅show-mobile-ui为true时可用)",row4column3:"选择器可选范围的最大日期(仅show-mobile-ui为true时可用)",row5column2:"组件左侧图标的设置(仅show-mobile-ui为true时可用)",row5column3:"组件右侧内容清空图标的设置(仅show-mobile-ui为true时可用)",row6column2:"周起始日(仅show-mobile-ui为true时可用)",row7column2:"是否显示加载状态(仅show-mobile-ui为true时可用)",row8column2:"顶部栏标题(仅show-mobile-ui为true时可用)",row9column2:"开始日期的顶部栏标题(仅show-mobile-ui为true时可用)",row9column3:"结束日期的顶部栏标题(仅show-mobile-ui为true时可用)",row10column2:"确定按钮文本内容(仅show-mobile-ui为true时可用)",row10column3:"取消按钮文本内容(仅show-mobile-ui为true时可用)",row11column2:"是否显示顶部栏(仅show-mobile-ui为true时可用)",row12column2:"选项高度(仅show-mobile-ui为true时可用)",row13column2:"可见的选项个数(仅show-mobile-ui为true时可用)",row14column2:"快速滑动时惯性滚动的时长，单位ms(仅show-mobile-ui为true时可用)",row15column2:"选项格式化函数(仅show-mobile-ui为true时可用)",row16column2:"点击确定按钮时触发(仅show-mobile-ui为true时可用)",row16column3:"当前值,即(value, index)",row17column2:"点击取消按钮时触发(仅show-mobile-ui为true时可用)"}},timeDemo:{label:"TimePicker 时间选择器",description:"用于选择或输入时间.",samples1:{label:"基础用法",description:"使用vue-time-select时, 通过star、end和step指定可选的起始时间、结束时间和步长; 使用vue-time-picker时, 通过selectableRange限制可选时间范围",timelabel1:"固定时间点",timelabel2:"任意时间点",timePlaceholder1:"选择时间",timePlaceholder2:"任意时间点"},samples2:{label:"时间范围",description:"使用vue-time-select时, 若先选择开始时间, 则结束时间内备选项的状态会随之改变; 使用vue-time-picker时, 添加is-range属性即可选择时间范围",timelabel1:"固定时间范围",timelabel2:"任意时间范围",timePlaceholder1:"起始时间",timePlaceholder2:"结束时间",timePlaceholder3:"选择时间范围"},samples3:{row1column2:"是否只读",row2column2:"是否禁用",row21column2:"文本框可输入",row3column2:"是否显示清除按钮",row4column2:"输入框尺寸",row5column2:"占位文本",row51column2:"范围选择时开始日期的占位内容",row52column2:"范围选择时结束日期的占位内容",row53column2:"是否为时间范围选择，仅对timepicker有效",row54column2:"是否使用箭头进行时间选择，仅对timepicker有效",row55column2:"选择范围时的分隔符",row56column2:"可选，绑定值的格式。不指定则绑定值为 Date 对象",row6column2:"下拉框的对齐方式",row7column2:"下拉框的类名",row8column2:"当前选择器特有的选项, 参考下表",row9column2:"最小的小时数(仅show-mobile-ui为true时可用)",row9column3:"最大的小时数(仅show-mobile-ui为true时可用)",row10column2:"最小分钟数(仅show-mobile-ui为true时可用)",row10column3:"最大分钟数(仅show-mobile-ui为true时可用)",row11column2:"最小秒数(仅show-mobile-ui为true时可用)",row11column3:"最大秒数(仅show-mobile-ui为true时可用)"},samples4:{row1column2:"开始时间",row2column2:"结束时间",row3column2:"间隔时间",row4column2:"最小时间, 小于该时间的时间段将被禁用",row5column2:"最大时间, 大于该时间的时间段将被禁用"},samples5:{row1column2:'可选时间段, 例如"18:30:00 - 20:30:00"或者传入数组["09:30:00 - 12:00:00", "14:30:00 - 18:30:00"]',row2column2:"时间格式化",row2column4:"时:HH, 分:mm, 秒:ss"},samples6:{row1column2:"当 input 的值改变时触发, 返回值和文本框一致",row1column3:"格式化后的值"}},datetimeDemo:{label:"DateTimePicker 日期时间选择器",description:"用于选择或输入日期时间",samples1:{label:"基础用法",description:"通过设置type属性为datetime, 即可在同一个选择器里同时进行日期和时间的选择.快捷选项的使用方法与Date Picker相同.",defaultLabel:"默认",optionsLabel:"带快捷选项",defaultPlaceholder:"选择日期时间",todayLabel:"今天",yesterdayLabel:"昨天",weekAgoLabel:"上周"},samples2:{label:"日期和时间范围",description:"设置type为datetimerange即可选择日期和时间范围",defaultLabel:"默认",optionsLabel:"带快捷选项",defaultPlaceholder:"选择时间范围",lastWeekLabel:"最近一周",lastMonthLabel:"最近一个月",last3MonthLabel:"最近三个月"},samples3:{row1column2:"是否只读",row2column2:"是否禁用",row21column2:"文本框可输入",row3column2:"是否显示清除按钮",row4column2:"输入框尺寸",row5column2:"占位文本",row51column2:"范围选择时开始日期的占位内容",row52column2:"范围选择时结束日期的占位内容",row54column2:"是否使用箭头进行时间选择，仅对timepicker有效",row56column2:"可选，绑定值的格式。不指定则绑定值为 Date 对象",row6column2:"显示类型",row7column2:"显示时间日期格式",row7column4:"年:yyyy, 月:MM, 日:dd, 时:HH, 分:mm, 秒:ss, 周:WW",row8column2:"下拉框的对齐方式",row9column2:"下拉框的类名",row10column2:"选择范围时的分隔符",row11column2:"当前选择器特有的选项, 参考下表"},samples4:{row1column2:"设置快捷选项, 需要传入{text, onClick}对象用法参考demo或下表",row2column2:"设置禁用状态, 参数为当前日期, 要求返回 Boolean"},samples5:{row1column2:"标题文本",row2column2:'选中后的回调函数, 参数是 vm, 可通过触发 "pick" 事件设置选择器的值.例如 vm.$emit("pick", new Date())'},samples6:{row1column2:"当input的值改变时触发, 返回值和文本框一致",row1column3:"格式化后的值"}},calendarDemo:{label:"Calendar 日历",description:"用于查看或选择日期和事件.",samples1:{label:"基础用法",description:'通过绑定events来绑定事件, 绑定数据为数组且每个元素需包含"date"属性, 通过dayclick事件可获取选择日的日期和事件'},samples2:{row1column2:"要绑定的事件集合",row2column2:"每天显示的事件条数, full calendar时有效",row3column2:'点击"+"时是否显示更多事件, full calendar时有效',row4column2:"是否使用full calendar",row5column2:"日期的class集, full calendar时有效",row6column2:"星期的class集, full calendar时有效",row7column2:"自定义星期的label, full calendar时有效",row8column2:"使日历不能切换月份, calendar时有效",row9column2:"日历类型, calendar时有效"},samples3:{row1column2:"点击日期时触发",row2column2:"点击事件时触发, full calendar时有效",row3column2:'点击"+"时触发, full calendar时有效'},samples4:{label:"Full Calendar",description:"设置full属性即可",row1column2:"head部的左边内容, full calendar时有效",row2column2:'head部的右边内容, full calendar时有效, 有效时"本月"按钮不显示'},samples5:{row1column2:"月历返回本月, full calendar时有效",row2column2:"转到指定日期，calendar时有效"},samples7:{label:"静态日历",description:"设置fix-month属性"}},imageDemo:{label:"Image 图片",description:"图片容器，在保留原生img的特性下，支持懒加载，自定义占位、加载失败等",defatltText:"默认",customText:"自定义",samples1:{label:"基础用法",description:"可通过fit确定图片如何适应到容器框，同原生 object-fit"},samples2:{label:"占位内容",loading:"加载中",description:"通过 slot = placeholder 可自定义占位内容"},samples3:{label:"加载失败",description:"通过 slot = error 可自定义加载失败内容"},samples4:{label:"懒加载",description:"可通过lazy开启懒加载功能，当图片滚动到可视范围内才会加载。可通过scroll-container来设置滚动容器，若未定义，则为最近一个overflow值为auto或scroll的父元素。"},samples5:{label:"大图预览",description:"可通过 preview-src-list 开启预览大图的功能。如果设置了img-label，则src属性无效，只显示img-label的内容。",imgLabelText:"点我预览大图"},samples6:{row1column2:"图片源，同原生",row2column2:"确定图片如何适应容器框，同原生 object-fit",row3column2:"原生 alt",row4column2:"原生 referrerPolicy",row5column2:"是否开启懒加载",row6column2:"开启懒加载后，监听 scroll 事件的容器",row6column5:"最近一个 overflow 值为 auto 或 scroll 的父元素",row7column2:"开启大图预览功能",row8column2:"设置图片预览的 z-index",row9column2:"如果设置了属性img-label，则显示该属性内容并且属性src无效",row10column2:"如果该属性round为true，则图片圆形显示"},samples7:{row1column2:"图片加载成功触发",row2column2:"图片加载失败触发"},samples8:{row1column2:"图片未加载的占位内容",row2column2:"加载失败的内容"},samples9:{label:"显示文本",description:"通过设置show-label属性来配置显示内容并隐藏图片"}},imageviewerDemo:{label:"ImageViewer 图片",description:"图片预览容器，在保留原生img的特性下，支持图片缩放，旋转，PC端点击左右按钮切换图片，移动端左右滑动切换图片等",defatltText:"默认",customText:"自定义",samples1:{label:"基础用法",description:"可通过url-list将所需预览的图片传入。"},samples2:{label:"默认打开第几张预览图",description:"通过active-index属性默认打开图片预览的第几张图片"},samples3:{row1column2:"预览图片数据",row2column2:"设置图片预览的 z-index",row3column2:"激活图片预览的角标值",row4column2:"图片切换的触发函数",row5column2:"关闭图片预览的触发函数"}},checkboxDemo:{label:"Checkbox 多选框",description:"在一组备选项中进行多选.",samples1:{label:"基础用法",description:"在vue-checkbox元素中定义v-model绑定变量, 单一的checkbox中, 默认绑定变量的值会是Boolean, 选中为true."},samples2:{label:"禁用状态",description:"设置disabled属性即可, 它接受一个Boolean, true为禁用."},samples3:{label:"多选框组",description:"checkbox-group元素能把多个checkbox管理为一组, 只需要在Group中使用v-model绑定Array类型的变量即可. vue-checkbox的label属性是该checkbox对应的值, 若该标签中无内容, 则该属性也充当checkbox按钮后的介绍. label与数组中的元素值相对应, 如果存在指定的值则为选中状态, 否则为不选中."},samples4:{label:"indeterminate 状态",description:"indeterminate属性用以表示checkbox的不确定状态, 一般用于实现全选的效果"},samples5:{label:"按钮样式",description:"只需要把vue-checkbox元素换成vue-checkbox-button元素即可."},samples6:{row1column2:"选中状态的值(只有在checkbox-group或者绑定对象类型为array时有效)",row2column2:"选中时的值",row3column2:"没有选中时的值",row4column2:"原生属性",row5column2:"按钮禁用",row6column2:"当前是否勾选",row7column2:"设置indeterminate状态, 只负责样式控制"},samples7:{row1column2:"按钮组尺寸",row2column2:"按钮激活时的填充色和边框色",row3column2:"按钮激活时的文本颜色",row4column2:"可被勾选的最小数量",row5column2:"可被勾选的最大数量"},samples8:{row1column2:"当绑定值变化时触发的事件"}},radioDemo:{label:"Radio 单选框",description:"在一组Option中进行单选.",samples1:{label:"基础用法",description:"选中的条件是绑定的变量值等于label中的值.只需要设置v-model绑定变量, 选中意味着变量的值为相应 Radio label属性的值, label可以是String或者Number."},samples2:{label:"禁用状态",description:"设置disabled属性即可, 它接受一个Boolean, true为禁用."},samples3:{label:"单选框组",description:"结合vue-radio-group元素和子元素vue-radio可以实现单选组, 在vue-radio-group中绑定v-model, 在vue-radio中设置好label即可, 无需再给每一个vue-radio绑定变量, "},samples4:{label:"按钮样式",description:"只需要把vue-radio元素换成vue-radio-button元素即可, "},samples5:{row1column2:"Radio的value",row2column2:"是否禁用",row3column2:"原生属性"},samples6:{row1column2:"按钮组尺寸",row2column2:"按钮激活时的填充色和边框色",row3column2:"按钮激活时的文本颜色"},samples7:{row1column2:"当绑定值变化时触发的事件",row1column3:"选中的Radio label值"},samples8:{row1column2:"Radio的value",row2column2:"是否禁用"}},switchDemo:{label:"Switch 开关",description:"表示两种相互对立的状态间的切换, 多用于触发「开/关」.",samples1:{label:"基础用法",description:"绑定v-model到一个Boolean类型的变量.可以使用on-text属性与off-text属性来设置开关的文字描述, 使用on-color属性与off-color属性来设置开关的背景色"},samples2:{label:"禁用状态",description:"设置disabled属性即可, 它接受一个Boolean, true为禁用."},samples3:{row1column2:"是否禁用",row2column2:"switch的宽度(像素)",row2column5:"58(有文字), 46(无文字)",row3column2:"switch打开时所显示图标的类名, 设置此项会忽略 on-text",row4column2:"switch关闭时所显示图标的类名, 设置此项会忽略 off-text",row5column2:"switch打开时的文字",row6column2:"switch关闭时的文字",row7column2:"switch打开时的背景色",row8column2:"switch关闭时的背景色",row9column2:"switch对应的name属性"},samples4:{row1column2:"switch状态发生变化时的回调函数"}},dropdownDemo:{label:"Dropdown 下拉菜单",description:"将动作或菜单折叠到下拉菜单中.",samples1:{label:"基础用法",description:"通过组件slot来设置下拉触发的元素以及需要通过名称为dropdown的slot来设置下拉菜单.默认情况下下拉按钮只要hover即可, 无需点击也会显示下拉菜单."},samples2:{label:"触发对象",description:"设置split-button属性来让触发下拉元素呈现为按钮组, 左边是功能按钮, 右边是触发下拉菜单的按钮, 设置为true即可."},samples3:{label:"触发方式",description:"在trigger属性设置为click即可配置click激活.",hoverLabel:"hover 激活",clickLabel:"click 激活"},samples4:{label:"菜单隐藏方式",description:"下拉菜单默认在点击菜单项后会被隐藏, 将hide-on-click属性默认为false可以关闭此功能."},samples5:{label:"指令事件",description:"点击菜单项后会触发事件, 用户可以通过相应的菜单项 key进行不同的操作."},samples6:{row1column2:"菜单按钮类型, 同Button组件(只在split-button为true的情况下有效)",row2column2:"菜单按钮类型, 同Button组件(只在split-button为true的情况下有效)",row3column2:"下拉触发元素呈现为按钮组",row4column2:"菜单水平对齐方向",row5column2:"触发下拉的行为",row6column2:"是否在点击菜单项后隐藏菜单"},samples7:{row1column2:"split-button为true时, 点击左侧按钮的回调",row2column2:"点击菜单项触发的事件回调",row2column3:"dropdown-item的指令",row3column2:"下拉框出现/隐藏时触发",row3column3:"出现为 true, 隐藏为 false"},samples8:{row1column2:"指令",row2column2:"禁用",row3column2:"显示分割线"}},selectDemo:{label:"Select 选择器",description:"当选项过多时, 使用下拉菜单展示并选择内容.",samples1:{label:"基础用法",description:"v-model的值为当前被选中的vue-option的value属性值"},samples2:{label:"有禁用选项",description:"在vue-option中, 设定disabled值为 true, 即可禁用该选项"},samples3:{label:"禁用状态",description:"设置disabled属性即可, 它接受一个Boolean, true为禁用."},samples4:{label:"可清空单选",description:"设置clearable属性, 则可将选择器清空.需要注意的是, clearable属性仅适用于单选"},samples5:{label:"基础多选",description:"设置multiple属性即可启用多选, 此时v-model的值为当前选中值所组成的数组"},samples6:{label:"自定义模板",description:"将自定义的HTML模板插入vue-option的slot中即可."},samples7:{label:"分组",description:"使用vue-option-group对备选项进行分组, 它的label属性为分组名"},samples8:{label:"搜索",description:"为vue-select添加filterable属性即可启用搜索功能.默认情况下, Select会找出所有label属性包含输入值的选项.如果希望使用其他的搜索逻辑, 可以通过传入一个filter-method来实现.filter-method为一个Function, 它会在输入值发生变化时调用, 参数为当前输入值."},samples9:{label:"远程搜索",description:"启用远程搜索, 需要将filterable和remote设置为true, 同时传入一个remote-method.remote-method为一个Function, 它会在输入值发生变化时调用, 参数为当前输入值.",placeholderLabel:"请输入关键词"},samples10:{label:"创建条目",description:"使用allow-create属性即可通过在输入框中输入文字来创建新的条目.注意此时filterable必须为真."},samples11:{row1column2:"是否多选",row2column2:"是否禁用",row3column2:"输入框尺寸",row4column2:"是否可以清空选项, 多选时可全选",row5column2:"多选时用户最多可以选择的项目数, 为0则不限制",row6column2:"原生属性",row7column2:"占位文本",row8column2:"是否可搜索",row9column2:"是否允许用户创建新条目, 需配合filterable使用",row10column2:"自定义搜索方法",row11column2:"是否为远程搜索",row12column2:"远程搜索方法",row13column2:"是否正在从远程获取数据",row14column2:"远程加载时显示的文字",row15column2:"搜索条件无匹配时显示的文字",row16column2:"选项为空时显示的文字",row17column2:"Select下拉框的类名",row18column2:"在输入框按下回车, 选择第一个匹配项.需配合filterable或remote使用",row19column2:"输入框自适应高度"},samples12:{row1column2:"选中值发生变化时触发",row1column3:"目前的选中值",row2column2:"下拉框出现/隐藏时触发",row2column3:"出现为 true, 隐藏为 false",row3column2:"多选模式下移除tag时触发",row3column3:"移除的tag值"},samples13:{row1column2:"分组的组名",row2column2:"是否将该分组下所有选项置为禁用"},samples14:{row1column2:"选项的值",row2column2:"选项的标签, 若不设置则默认与value相同",row3column2:"是否禁用该选项"}},cascaderDemo:{label:"Cascader 级联选择器",description:"当一个数据集合有清晰的层级结构时, 可通过级联选择器逐级查看并选择.",samples1:{label:"基础用法",description:"只需为Cascader的options属性指定选项数组即可渲染出一个级联选择器.通过expand-trigger可以定义展开子级菜单的触发方式. change事件的参数为 Cascader的绑定值：一个由各级菜单的值所组成的数组.",clickLabel:"click 触发子菜单",hoverLabel:"hover 触发子菜单"},samples2:{label:"禁用选项",description:"Cascader会检查数据中每一项的disabled字段是否为true, 如果你的数据中表示禁用含义的字段名不为disabled, 可以通过props属性来指定"},samples3:{label:"仅显示最后一级",description:"属性show-all-levels定义了是否显示完整的路径, 将其赋值为false则仅显示最后一级"},samples4:{label:"默认值",description:"默认值通过数组的方式指定"},samples5:{label:"选择即改变",description:"将change-on-select赋值为true, 点击或移入选项即表示选中该项"},samples6:{label:"动态加载次级选项",description:"利用active-item-change事件, 可以在点击某个option时拉取该option下的子数据"},samples7:{label:"可搜索",description:"将filterable赋值为true即可打开搜索功能",label1:"选择最后一级菜单的选项",label2:"选择任意一级菜单的选项",placeholderLabel:"试试搜索：component"},samples8:{row1column2:"可选项数据源, 键名可通过props属性配置",row2column2:"配置选项, 具体见下表",row3column2:"选中项绑定值",row4column2:"自定义浮层类名",row5column2:"占位文本",row6column2:"是否禁用",row7column2:"是否支持清空选项",row8column2:"次级菜单的展开方式",row9column2:"输入框中是否显示选中值的完整路径",row10column2:"是否可搜索选项",row11column2:"搜索关键词输入的去抖延迟, 毫秒",row12column2:"是否允许选择任意一级的选项",row13column2:"尺寸"},samples9:{row1column2:"指定选项的值为选项对象的某个属性值",row2column2:"指定选项标签为选项对象的某个属性值",row3column2:"指定选项的子选项为选项对象的某个属性值",row4column2:"指定选项的禁用为选项对象的某个属性值",row5column2:"可选参数, 筛选之前的钩子, 参数为输入的值, 若返回false或者返回Promise且被reject, 则停止筛选."},samples10:{row1column2:"当绑定值变化时触发的事件",row1column3:"当前值",row2column2:"当父级选项变化时触发的事件, 仅在change-on-select为false时可用",row2column3:"各父级选项组成的数组"},samples11:{row1column2:"自定义级选择器名称",row2column2:"是否显示加载状态(仅移动端可用)",row3column2:"顶部栏标题(仅移动端可用)",row4column2:"确定按钮文本内容(仅移动端可用)",row4column3:"取消按钮文本内容(仅移动端可用)",row5column2:"顶部栏位置(仅移动端可用)",row5column3:"是否显示顶部栏(仅移动端可用)",row6column2:"是否允许应用HTML(仅移动端可用)",row7column2:"选项高度(仅移动端可用)",row8column2:"可见的选项个数(仅移动端可用)",row9column2:"快速滑动时惯性滚动的时长，单位ms(仅移动端可用)",row10column2:"点击确定按钮时触发(仅移动端可用)",row10column3:"当前值,即(value, index)",row11column2:"点击取消按钮时触发(仅移动端可用)"}},formDemo:{label:"Form 表单",description:"由输入框、选择器、单选框、多选框等控件组成, 用以收集、校验、提交数据.",samples1:{label:"基础表单",description:"在Form组件中, 每一个表单域由一个Form-Item组件构成, 表单域中可以放置各种类型的表单控件, "},samples2:{label:"行内表单",description:"设置inline属性可以让表单域变为行内的表单域"},samples3:{label:"对齐方式",description:"通过设置label-position属性可以改变表单域标签的位置, 可选值为 top、left、right"},samples4:{label:"表单验证",description:"Form组件提供了表单验证的功能, 只需要通过rule属性传入约定的验证规则, 并Form-Item的prop属性设置为需校验的字段名即可."},samples5:{label:"自定义校验规则",description:"使用自定义规则来完成验证;"},samples6:{label:"动态增减表单项",description:"除了在Form组件上一次性传递所有的验证规则外还可以在单个的表单域上传递属性的验证规则"},samples7:{row1column2:"表单数据对象",row2column2:"表单验证规则",row3column2:"行内表单模式",row4column2:"表单域标签的位置",row5column2:"表单域标签的宽度, 作为Form直接子元素的form-item会继承该值",row6column2:"表单域标签的后缀(如':')",row7column2:"是否显示校验错误信息",row8column2:"表单域标签是否自适应",row9column2:"错误信息是否以通知形式显示",row10column2:"自定义消息,参数为错误信息"},samples8:{row1column2:"对整个表单进行校验的方法",row2column2:"对部分表单字段进行校验的方法",row3column2:"对整个表单进行重置, 将所有字段值重置为初始值并移除校验结果",row4column2:"将所有字段值的当前值设为初始值",row5column2:"判断表单是否有值发生变动"},samples9:{row1column2:"表单域model字段, 在使用validate、resetFields方法的情况下, 该属性是必填的",row1column4:"传入Form组件的model中的字段",row2column2:"标签文本",row3column2:'表单域标签的的宽度, 例如"50px"',row4column2:"是否必填, 如不设置, 则会根据校验规则自动生成",row5column2:"表单验证规则",row6column2:"表单域验证错误信息, 设置该值会使表单验证状态变为error, 并显示该错误信息",row7column2:"是否显示校验错误信息"},samples10:{row1column2:"是否必入",row2column2:"入力长度, 只对number, String, Array有效",row3column2:"最小长度, 只对number, String, Array有效",row4column2:"最大长度, 只对number, String, Array有效",row5column2:"校验类型"}},paginationDemo:{label:"Pagination 分页",description:"当数据量过多时, 使用分页分解数据.",samples1:{label:"基础用法",description:"设置layout, 表示需要显示的内容, 用逗号分隔, 布局元素会依次显示.prev表示上一页, next为下一页, pager表示页码列表, page-size表示每页显示条目个数, total表示总条目数",label1:"页数较少时的效果",label2:"页数较多时的效果",label3:"小型分页"},samples2:{label:"附加功能",description:"使用size-change和current-change事件来处理页码大小和当前页变动时候触发的事件.page-sizes接受一个整型数组, 数组元素为展示的选择每页显示个数的选项",label1:"显示总数",label2:"调整每页显示条数",label3:"直接前往",label4:"完整功能"},samples3:{row1column2:"是否使用小型分页样式",row2column2:"每页显示条目个数",row3column2:"总条目数",row4column2:"总页数, total和page-count设置任意一个就可以达到显示页码的功能；如果要支持page-sizes的更改, 则需要使用total属性",row5column2:"当前页数, 支持sync修饰符",row6column2:"组件布局, 子组件名用逗号分隔",row7column2:"每页显示个数选择器的选项设置"},samples4:{row1column2:"pageSize改变时触发",row1column3:"每页条数size",row2column2:"currentPage改变时触发",row2column3:"当前页currentPage"}},treeDemo:{label:"Tree 树形控件",description:"用清晰的层级结构展示信息, 可展开或折叠.",samples1:{label:"基础用法",description:"基础的树形结构展示."},samples2:{label:"选择和获取数据",description:"show-checkbox属性可以设置节点是否可被选择, lazy属性设置是否在点击时才进行数据获取, load属性可以设置加载子树数据的方法."},samples3:{label:"默认展开和默认选中",description:"分别通过default-expanded-keys和default-checked-keys设置默认展开和默认选中的节点.需要注意的是, 此时必须设置node-key, 其值为节点数据中的一个字段名, 该字段在整棵树中是唯一的."},samples4:{label:"禁用状态",description:"通过disabled设置禁用状态."},samples5:{label:"树节点的选择",description:"获取和设置各有两种方式：通过node或通过key.如果需要通过key来获取或设置, 则必须设置node-key"},samples13:{label:"高亮节点的选择",description:"获取和设置各有两种方式：通过node或通过key.如果需要通过key来获取或设置, 则必须设置node-key"},samples6:{label:"自定义节点内容",description:"使用render-content指定渲染函数, 该函数返回需要的节点区内容即可.渲染函数的用法请参考Vue文档"},samples7:{label:"节点过滤",description:"调用Tree实例的filter方法, 参数为关键字.需要注意的是, 此时需要设置filter-node-method, 值为过滤函数."},samples8:{label:"手风琴模式",description:"对于同一级的节点, 每次只能展开一个"},samples9:{row1column2:"展示数据",row2column2:"每个树节点用来作为唯一标识的属性, 整颗树应该是唯一的",row3column2:"懒加载",row4column2:"加载子树数据的方法, 当lazy为true时生效",row5column2:"树节点的内容区的渲染Function",row6column2:"是否高亮当前选中节点",row7column2:"当前选中节点的key",row8column2:"是否默认展开所有节点",row9column2:"是否在点击节点的时候展开或者收缩节点",row10column2:"展开子节点的时候是否自动展开父节点",row11column2:"默认展开的节点的key的数组",row12column2:"节点是否可被选择",row13column2:"在显示复选框的情况下, 是否严格的遵循父子不互相关联的做法, ",row14column2:"默认勾选的节点的key的数组",row15column2:"对树节点进行筛选时执行的方法, 返回true表示这个节点可以显示, 返回false则表示这个节点会被隐藏",row16column2:"是否每次只打开一个同级树节点展开",row17column2:"相邻级节点间的水平缩进, 单位为像素",row18column2:"配置选项, 具体看下表"},samples10:{row1column2:"指定节点标签为节点对象的某个属性值",row2column2:"指定子树为节点对象的某个属性值",row3column2:"指定节点选择框是否禁用"},samples11:{row1column2:"对树节点进行筛选操作",row1column3:"接收一个任意类型的参数, 该参数会在filter-node-method中作为第一个参数",row2column2:"若节点可被选择(即show-checkbox为true), 则返回目前被选中的节点所组成的数组",row2column3:"(leafOnly, indeterminate)参数1：boolean类型的参数, 若为true则仅返回被选中的子节点, 默认值为 false。 参数2：boolean，是否包含半选中状态的节点，默认false",row3column2:"设置目前勾选的节点, 使用此方法必须设置node-key属性",row3column3:"(nodes)接收勾选节点数据的数组",row4column2:"若节点可被选择(即show-checkbox为true), 则返回目前被选中的节点的 key所组成的数组",row4column3:"(leafOnly, indeterminate) 参数1：boolean类型的参数, 若为 true则仅返回被选中的子节点的 keys, 默认值为 false。 参数2：boolean，是否包含半选中状态的节点，默认false",row5column2:"通过keys设置目前勾选的节点, 使用此方法必须设置node-key属性",row5column3:"(keys, leafOnly)接收两个参数, 1.勾选节点的key的数组 2.boolean类型的参数, 若为true则仅设置叶子节点的选中状态, 默认值为 false",row6column2:"通过key/data设置某个节点的勾选状态, 使用此方法必须设置node-key属性",row6column3:"(key/data, checked, deep)接收三个参数, 1.勾选节点的key或者data 2.boolean类型, 节点是否选中 3.boolean类型, 是否设置子节点 , 默认为 false",row7column2:"若节点可被高亮(即highlight-current为true), 则返回目前被高亮的节点",row8column2:"若节点可被高亮(即highlight-current为true), 则返回目前被高亮的节点的 key",row9column2:"设置目前高亮的节点, 使用此方法必须设置node-key属性",row10column2:"通过key设置目前高亮的节点, 使用此方法必须设置node-key属性"},samples12:{row1column2:"节点被点击时的回调",row1column3:"共三个参数, 依次为：传递给data属性的数组中该节点所对应的对象、节点对应的Node、节点组件本身.",row2column2:"节点选中状态发生变化时的回调",row2column3:"共三个参数, 依次为：传递给data属性的数组中该节点所对应的对象、节点本身是否被选中、节点的子树中是否有被选中的节点",row3column2:"当前选中节点变化时触发的事件",row3column3:"共两个参数, 依次为：当前节点的数据, 当前节点的Node对象",row4column2:"节点被展开时触发的事件",row4column3:"共三个参数, 依次为：传递给data属性的数组中该节点所对应的对象、节点对应的 Node、节点组件本身.",row5column2:"节点被关闭时触发的事件",row5column3:"共三个参数, 依次为：传递给data属性的数组中该节点所对应的对象、节点对应的 Node、节点组件本身."}},collapseDemo:{label:"Collapse 折叠面板",description:"通过折叠面板收纳内容区域",samples1:{label:"基础用法",description:"可同时展开多个面板, 面板之间不影响"},samples2:{label:"手风琴效果",description:"每次只能展开一个面板, 通过accordion属性来设置是否以手风琴模式显示"},samples3:{label:"自定义面板标题",description:"除了可以通过title属性以外, 还可以通过具名slot来实现自定义面板的标题内容, 以实现增加图标等效果."},samples4:{row1column2:"是否手风琴模式",row2column2:"当前激活的面板(如果是手风琴模式, 绑定值类型需要为string, 否则为array)",row3column2:"是否手风琴模式"},samples5:{row1column2:"当前激活面板改变时触发(如果是手风琴模式, 参数 activeNames 类型为string, 否则为array)"},samples6:{row1column2:"唯一标志符",row2column2:"面板标题",row3column2:"点击时是否可以展开或者收缩"}},messageBoxDemo:{label:"MessageBox 弹框",description:"模拟系统的消息提示框而实现的一套模态对话框组件.",samples1:{label:"消息提示",description:"调用$alert方法即可打开消息提示, 它模拟了系统的alert, "},samples2:{label:"确认消息",description:"调用$confirm方法即可打开消息提示, 它模拟了系统的confirm."},samples3:{label:"自定义",description:"可自定义配置不同内容."},samples4:{row1column2:"MessageBox标题",row2column2:"MessageBox消息正文内容",row3column2:"消息类型, 用于显示图标",row4column2:"MessageBox的自定义类名",row5column2:'MessageBox关闭后的回调, action的值为"confirm"或"cancel", instance为 MessageBox实例',row5column3:"Function(action, instance)",row6column2:'MessageBox关闭前的回调, 会暂停实例的关闭, action的值为"confirm"或"cancel", instance为 MessageBox实例, done用于关闭 MessageBox实例',row6column3:"Function(action, instance, done)",row7column2:"取消按钮的文本内容",row8column2:"确定按钮的文本内容",row9column2:"取消按钮的自定义类名",row10column2:"确定按钮的自定义类名"}},dialogDemo:{label:"Dialog 对话框",description:"在保留当前页面状态的情况下, 告知用户并承载相关操作.",samples1:{label:"基础用法",description:"需要设置v-model属性, 它接收Boolean, 当为true时显示Dialog.Dialog分为三个部分：header, body和footer, header需要具名为header的slot, footer需要具名为footer的slot.title属性用于定义标题, 它是可选的, 默认值为空, 当header存在时title不显示.show-close属性显示关闭按钮, 默认为false."},samples2:{label:"自定义内容",description:"Dialog组件的内容可以是任意的"},samples3:{row1column2:"是否显示Dialog",row2column2:"Dialog的标题",row3column2:"Dialog的大小",row4column2:"Dialog CSS中的top值(仅在size不为full时有效)",row5column2:"Dialog的自定义类名",row6column2:"是否可以通过点击 modal关闭Dialog",row7column2:"是否可以通过按下ESC关闭Dialog",row8column2:"是否显示关闭按钮",row9column2:"关闭前的回调, 会暂停Dialog的关闭, done()用于关闭, done(false)用于取消关闭",row9column3:"Function(done)",row10column2:"使modal层透明",row11column2:"是否可以拖动, size为full时不可拖动"},samples4:{row1column2:"Dialog的内容",row2column2:"Dialog head部的内容",row3column2:"Dialog foot部的内容"},samples5:{row1column2:"Dialog关闭的回调",row2column2:"Dialog打开的回调"}},asideDemo:{label:"Aside 侧边栏",description:"在保留当前页面状态的情况下, 在侧边承载相关操作.",samples1:{label:"基础用法",description:"需要设置v-model属性, 它接收Boolean, 当为true时显示Aside.Aside分为三个部分：header, body和footer, header需要具名为header的slot, footer需要具名为footer的slot.title属性用于定义标题, 它是可选的, 默认值为空, 当header存在时title不显示.show-close属性显示关闭按钮, 默认为false."},samples2:{label:"区域表示",description:"设置relative属性, 可以在父容器内展示"},samples3:{label:"自定义内容",description:"Aside组件的内容可以是任意的"},samples4:{row1column2:"是否显示Aside",row2column2:"Aside的标题",row3column2:"Aside的大小",row5column2:"Aside的自定义类名",row6column2:"是否可以通过点击 modal关闭Aside",row7column2:"是否可以通过按下ESC关闭Aside",row8column2:"是否显示关闭按钮",row9column2:"关闭前的回调, 会暂停Aside的关闭, done()用于关闭, done(false)用于取消关闭",row9column3:"Function(done)",row10column2:"显示位置",row11column2:"是否在父容器内显示Aside"},samples5:{row1column2:"Aside的内容",row2column2:"Aside head部的内容",row3column2:"Aside foot部的内容"},samples6:{row1column2:"Aside关闭的回调",row2column2:"Aside打开的回调"}},notificationDemo:{label:"Notification 通知",description:"悬浮出现在页面右上角,显示全局的通知提醒消息.",samples1:{label:"基础用法",description:"title和message用于设置标题和正文. 默认情况下, 经过一段时间后组件会自动关闭, 但是通过设置duration, 可以控制关闭的时间间隔, 如果设置为0, 则不会自动关闭. 有四种通知类型：success, warning, info, error. 通过type字段来设置"},samples2:{label:"消息位置",description:'通过设置position属性来定位, 默认为"top-right"'},samples3:{row1column2:"标题",row2column2:"正文内容",row3column2:"主题样式, 如果不在可选值内将被忽略",row4column2:"自定义图标的类名. 若设置了 type, 则iconClass会被覆盖",row5column2:"自定义类名",row6column2:"显示时间, 毫秒. 设为0则不会自动关闭, 并显示关闭按钮",row7column2:"关闭时的回调函数",row8column2:"定位, 如果不在可选值内将无法显示",row9column2:"是否显示关闭按钮"}},badgeDemo:{label:"Badge 标记",description:"出现在按钮、图标旁的数字或状态标记. ",samples1:{label:"基础用法",description:"定义value属性, 它接受Number或者String. 最大值由max属性定义, 它接受一个Number, 只有当value为Number时, 它才会生效. 设置is-dot属性以红点的形式标注"},samples2:{row1column2:"显示值",row2column2:'最大值, 超过最大值会显示 "{max}+", 要求 value 是 Number 类型',row3column2:"小圆点",row4column2:"隐藏"}},tabsDemo:{label:"Tabs 标签页",description:"分隔内容上有关联但属于不同类别的数据集合. ",samples1:{label:"基础用法",description:"通过value属性来指定当前选中的标签页. "},samples2:{label:"选项卡样式",description:"设置type属性为card"},samples3:{label:"卡片化样式",description:"设置type属性为border-card"},samples4:{label:"自定义标签",description:"可以通过具名为label的slot来实现自定义标签内容"},samples5:{label:"动态增减标签页"},samples6:{label:"自定义增加标签页触发器"},samples10:{label:"标签置于底部",description:"设置tab-bottom属性为true"},samples7:{row1column2:"风格类型",row2column2:"标签是否显示关闭按钮",row3column2:"标签是否显示新增按钮",row4column2:"标签是否同时显示增加和关闭按钮",row5column2:"绑定值, 选中选项卡的 name",row5column5:"第一个选项卡的name",row6column2:"标签是否置于底部"},samples8:{row1column2:"选项卡被选中时触发",row1column3:"被选中的选项卡实例, 事件实例",row2column2:"点击选项卡关闭按钮触发",row2column3:"被选中的选项卡的name",row3column2:"点击选项卡的新增按钮触发",row4column2:"点击选项卡的新增或关闭后触发",row4column3:"被选中的选项卡的name, 事件行为(add, remove)"},samples9:{row1column2:"选项卡标题",row2column2:"是否禁用",row3column2:"选项卡别名",row4column2:"标签是否显示关闭按钮"}},popoverDemo:{label:"Popover 弹出框",description:"用于展示小段信息",samples1:{label:"基础用法",description:"trigger属性用于设置何时触发 Popover, 提供三种触发方式：hover, click, focus. 可以通过slot指定reference. "},samples2:{label:"嵌套信息",description:"可以在Popover中嵌套多种信息"},samples3:{label:"嵌套信息",description:"可以在Popover中嵌套多种操作"},samples4:{row1column2:"触发方式",row2column2:"标题",row3column2:"显示的内容, 也可以通过slot传入",row4column2:"宽度",row5column2:"出现位置",row6column2:"是否可用",row7column2:"是否可见",row8column2:"为popper添加类名",row9column2:"触发方式为hover时的显示延迟, 单位为毫秒",row10column2:"是否显示箭头"},samples5:{row1column2:"Popover内嵌内容",row2column2:"触发Popover显示的元素"},samples6:{row1column2:"显示时触发",row2column2:"隐藏时触发"}},tooltipDemo:{label:"Tooltip 文字提示",description:"用于展示鼠标hover时的提示信息. ",samples1:{label:"基础用法",description:'使用content属性来决定hover时的提示信息. 由placement属性决定展示效果：placement属性值为：方向-对齐位置；四个方向：top、left、right、bottom；三种对齐位置：start, end, 默认为空. 如placement="left-end", 则提示信息出现在目标元素的左侧, 且提示信息的底部与目标元素的底部对齐. '},samples2:{label:"主题",description:"Tooltip组件提供了两个不同的主题：dark和light. "},samples3:{label:"自定义内容",description:"用具名content的slot替代tooltip中的content属性. "},samples4:{label:"禁用状态",description:"设置disabled属性即可, 它接受一个Boolean, true为禁用."},samples5:{row1column2:"默认提供的主题",row2column2:"鼠标是否可进入到 tooltip中",row3column2:"显示的内容, 也可以通过slot传入",row4column2:"出现位置",row5column2:"是否可用",row6column2:"是否可见",row7column2:"为popper添加类名",row9column2:"是否显示箭头"}},tagDemo:{label:"Tag 标签",description:"用于标记和选择. ",samples1:{label:"基础用法",description:"用type属性来选择tag的类型, 用width属性来设置tag的宽度, 设置closable属性可以定义一个标签是否可移除, 设置hit属性为true可以开启边框描边．"},samples2:{label:"动态编辑标签"},samples3:{row1column2:"主题",row2column2:"是否可关闭",row4column2:"是否有边框描边",row5column2:"tag的宽度"},samples4:{row1column2:"关闭tag时触发的事件"}},alertDemo:{label:"Alert 警告",description:"用于页面中展示重要的提示信息. ",samples1:{label:"基础用法",description:"组件提供四种主题, 由type属性指定, 默认值为info. closable属性决定是否可关闭, 可以设置close-text属性来代替右侧的关闭图标, 设置close事件来设置关闭时的回调. 设置show-icon属性来显示icon. 设置dark属性来显示深色样式. "},samples2:{row1column2:"标题",row2column2:"主题",row3column2:"是否可关闭",row4column2:"关闭按钮自定义文本",row5column2:"是否显示图标",row6column2:"是否开启暗色模式"},samples3:{row1column2:"关闭alert时触发的事件"}},noteDemo:{label:"Note 笔记",description:"用于页面中展示信息. ",samples1:{label:"基础用法",description:"组件提供四种主题, 由type属性指定, 默认值为info. "},samples2:{row1column2:"标题",row2column2:"主题",row3column2:"是否开启朴素模式"}},cardDemo:{label:"Card 卡片",description:"将信息聚合在卡片容器中展示. ",samples1:{label:"基础用法",description:"Card组件包括header和body部分, header部分需要有显式具名slot分发, 同时也是可选的. "},samples2:{label:"简单卡片",description:"卡片可以只有内容区域. "},samples3:{row1column2:"设置 header, 也可以通过名为header的slot传入DOM",row2column2:"设置 body的样式",row3column2:"设置阴影显示时机"},samples4:{label:"卡片阴影",description:"通过shadow属性设置卡片阴影出现的时机：always、hover或never。"}},carouselDemo:{label:"Carousel 走马灯",description:"在有限空间内, 循环播放同一类型的图片、文字等内容. ",samples1:{label:"基础用法",description:"内容是任意的, 默认情况下, 在鼠标hover底部的指示器时就会触发切换. 通过设置trigger属性为click, 可以达到点击触发的效果. 将type属性设置为card即可启用卡片模式. "},samples2:{label:"指示器",description:"indicator-position属性定义了指示器的位置. 默认情况下, 它会显示在走马灯内部, 设置为outside则会显示在外部；设置为none则不会显示指示器. "},samples3:{label:"箭头",description:"arrow属性定义了切换箭头的显示时机. 默认情况下, 切换箭头只有在鼠标hover到走马灯上时才会显示；若将arrow设置为always, 则会一直显示；设置为never, 则会一直隐藏. "},samples4:{row1column2:"走马灯的高度",row2column2:"初始状态激活的幻灯片的索引, 从0开始",row3column2:"指示器的触发方式",row4column2:"是否自动切换",row5column2:"自动切换的时间间隔, 单位为毫秒",row6column2:"指示器的位置",row7column2:"切换箭头的显示时机",row8column2:"走马灯的类型",row9column2:"悬停时是否停止自动切换"},samples5:{row1column2:"幻灯片切换时触发",row1column3:"目前激活的幻灯片的索引, 原幻灯片的索引. (newIndex, oldIndex)"},samples6:{row1column2:"手动切换幻灯片",row1column3:"需要切换的幻灯片的索引, 从0开始；或相应vue-carousel-item的name属性值",row2column2:"切换至上一张幻灯片",row3column2:"切换至下一张幻灯片"},samples7:{row1column2:"幻灯片的名字, 可用作setActiveItem的参数",row1column3:"该幻灯片所对应指示器的文本"}},loadingDemo:{label:"Loading 加载",description:"加载数据时显示动效. ",samples1:{label:"基础用法",description:"使用自定义指令v-loading, 在绑定了v-loading指令的元素上添加vue-loading-text属性, 其值会被渲染为加载文案, 并显示在加载图标的下方．当需要全屏遮罩时, 可使用fullscreen修饰符. "},samples2:{row1column2:"显示在加载图标下方的加载文案",row2column2:"Loading的自定义类名"}},loadingBarDemo:{label:"LoadingBar 加载进度条",description:"全局创建一个显示页面加载、异步请求、文件上传等的加载进度条. ",samples1:{label:"基础用法",description:"在调用start()方法后, 组件会自动模拟进度, 当调用finish()或error()时, 补全进度并自动消失. "},samples2:{row1column2:"开始从0显示进度条, 并自动加载进度",row1column3:"回调函数",row2column2:"结束进度条, 自动补全剩余进度",row2column3:"回调函数",row3column2:"以错误的类型结束进度条, 自动补全剩余进度",row3column3:"回调函数",row4column2:"精确加载到指定的进度",row4column3:"指定的进度百分比(percent), 回调函数"}},progressDemo:{label:"Progress 进度条",description:"用于展示操作进度, 告知用户当前状态和预期. ",samples1:{label:"基础用法",description:"设置percentage属性即可, 表示进度条对应的百分比, 可通过 stroke-width 属性更改进度条的高度, 并可通过 text-inside 属性来将进度条描述置于进度条内部. 可通过 type 属性来指定使用环形进度条, 在环形进度条中, 还可以通过 width 属性来设置其大小. "},samples2:{row1column2:"百分比",row2column2:"进度条类型",row3column2:"进度条的宽度, 单位 px",row4column2:"进度条显示文字内置在进度条内(只在type==line时可用)",row5column2:"进度条当前状态",row6column2:"环形进度条画布宽度(只在type==circle时可用)",row7column2:"是否显示进度条文字内容"}},sliderDemo:{label:"Slider 滑块",description:"通过拖动滑块在一个固定区间内进行选择. ",samples1:{label:"基础用法",description:"通过设置绑定值自定义滑块的初始值. "},samples2:{label:"离散值",description:"改变step的值可以改变步长, 通过设置show-step属性可以显示间断点"},samples3:{label:"范围选择",description:"设置range即可开启范围选择, 此时绑定值是一个数组, 其元素分别为最小边界值和最大边界值"},samples4:{label:"竖向模式",description:"设置vertical可使Slider变成竖向模式, 此时必须设置高度height属性"},samples5:{row1column2:"最小值",row2column2:"最大值",row3column2:"是否禁用",row4column2:"步长",row5column2:"是否显示间断点",row6column2:"是否显示 tooltip",row7column2:"格式化 tooltip message",row8column2:"是否为范围选择",row9column2:"是否竖向模式",row10column2:"Slider高度(只在竖向模式可用)"},samples6:{row1column2:"值改变时触发(使用鼠标拖曳时, 只在松开鼠标后触发)",row1column3:"改变后的值"}},breadcrumbDemo:{label:"Breadcrumb 面包屑",description:"显示当前页面的路径, 快速返回之前的任意页面. ",samples1:{label:"基础用法",description:"设置separator属性改变分隔符,默认为斜杠'/'"},samples2:{row1column2:"分隔符"},samples3:{row1column2:"路由跳转对象, 同vue-router的to"},samples4:{row1column2:"点击事件, 只有当没有定义to属性时点击触发"}},stepsDemo:{label:"Steps 步骤条",description:"引导用户按照流程完成任务的分步导航条, 可根据实际应用场景设定步骤, 步骤不得少于 2 步. ",samples1:{label:"基础用法",description:"设置active属性, 接受一个Number, 表明步骤的index, 从0开始. 需要定宽的步骤条时, 设置space属性即可, 单位为px, 如果不设置, 则为自适应. 设置finish-status属性可以改变已经完成的步骤的状态. "},samples2:{label:"有描述的步骤条",description:"每个步骤有其对应的步骤状态描述."},samples3:{label:"带图标的步骤条",description:"通过icon属性来设置图标"},samples4:{label:"竖式步骤条",description:"设置direction属性为vertical可使steps变成竖向模式"},samples5:{row1column2:"每个step的间距，不填写将自适应间距。支持百分比",row2column2:"显示方向",row3column2:"设置当前激活步骤",row4column2:"设置当前步骤的状态",row5column2:"设置结束步骤的状态",row6column2:"标题描述居中对齐",row7column2:"组件居中显示"},samples6:{row1column2:"标题",row2column2:"图标",row3column2:"设置当前步骤的状态，不设置则根据steps确定状态"},samples7:{row1column2:"内容",row2column2:"标题"}},rateDemo:{label:"Rate 评分",description:"出现在按钮、图标旁的数字或状态标记。",samples1:{label:"基础用法",description:"评分被分为三个等级，可以利用颜色对分数及情感倾向进行分级(默认情况下不区分颜色)。三个等级所对应的颜色用过colors属性设置"},samples2:{label:"辅助文字",description:"为组件设置show-text属性会在右侧显示辅助文字。通过设置texts可以为每一个分值指定对应的辅助文字。texts为一个数组，长度应等于最大值max。"},samples3:{label:"其它 icon",description:"设置icon-classes属性可以自定义对应3个不同分段的图标。void-icon-class指定未选中时的图标类名。"},samples4:{label:"只读",description:"设置disabled属性表示组件为只读，支持小数分值。此时若设置show-text，则会在右侧显示目前的分值。可以提供text-template作为显示模板，模板为一个包含了{value}的字符串，{value}会被解析为分值。"},samples5:{row1column2:"最大分值",row2column2:"是否为只读",row3column2:"是否允许半选",row4column2:"低分和中等分数的界限值，值本身被划分在低分中",row5column2:"高分和中等分数的界限值，值本身被划分在高分中",row6column2:"icon的颜色数组，共有3个元素，为3个分段所对应的颜色",row7column2:"未选中icon的颜色",row8column2:"只读时未选中icon的颜色",row9column2:"icon的类名数组，共有3个元素，为3个分段所对应的类名",row10column2:"未选中icon的类名",row11column2:"只读时未选中icon的类名",row12column2:"是否显示辅助文字",row13column2:"辅助文字的颜色",row14column2:"辅助文字数组",row15column2:"只读时的辅助文字模板"},samples6:{row1column2:"分值改变后触发",row1column3:"改变后的分值"}},pinDemo:{label:"Pin 图钉",description:"使用图钉，可以将内容固定在屏幕上，并且不随页面的滚动而滚动。常用于侧边菜单等。可以通过调整浏览器窗口高度来查看效果",samples1:{label:"基础用法",description:"简单使用，当元素不可见时，直接固定在最顶端。当固定状态发生改变时，会触发change事件。"},samples2:{label:"偏移",description:"设置offset-top或offset-bottom可当滚动到一定距离时再固定。"},samples3:{label:"固定在底部",description:"在屏幕下方固定。注意，offset-top和offset-bottom只可以设置一个，如果都设置，会使用offset-top。"},samples4:{label:"始终固定",description:"设置fixed属性可始终固定在一个位置"},samples5:{row1column2:"距离窗口顶部达到指定偏移量后触发",row2column2:"距离窗口底部达到指定偏移量后触发",row3column2:"是始终固定在一个位置"},samples6:{row1column2:"在固定状态发生改变时触发",row1column3:"固定状态(true/false)"}},uploadDemo:{label:"Upload 上传",description:"通过点击或者拖拽上传文件。",samples1:{label:"基础用法",description:"通过slot你可以传入自定义的上传按钮类型和文字提示。使用before-upload限制用户上传的格式和大小"},samples2:{label:"照片墙",description:"设置list-type属性为picture-card。"},samples3:{label:"图片列表缩略图",description:"设置list-type属性为picture。"},samples4:{label:"上传文件列表控制",description:"通过on-change钩子函数来对列表进行控制"},samples5:{label:"拖拽上传",description:"设置drag属性即可"},samples6:{label:"手动上传"},samples7:{row1column2:"上传的地址",row2column2:"可选参数, 设置上传的请求头部",row3column2:"可选参数, 是否支持多选文件",row4column2:"可选参数, 上传时附带的额外参数",row5column2:"可选参数, 上传的文件字段名",row6column2:"支持发送cookie凭证信息",row7column2:"是否显示已上传文件列表",row8column2:"是否启用拖拽上传",row9column2:"可选参数, 接受上传的文件类型(thumbnail-mode模式下此参数无效)",row10column2:"可选参数, 点击已上传的文件链接时的钩子, 可以通过file.response拿到服务端返回数据",row11column2:"可选参数, 文件列表移除文件时的钩子",row12column2:"可选参数, 文件上传成功时的钩子",row13column2:"可选参数, 文件上传失败时的钩子",row14column2:"可选参数, 文件上传时的钩子",row15column2:"可选参数, 文件状态改变时的钩子, 添加文件、上传成功和上传失败时都会被调用",row16column2:"可选参数, 上传文件之前的钩子, 参数为上传的文件, 若返回 false 或者返回 Promise 且被 reject, 则停止上传.",row17column2:"文件列表的类型",row18column2:"是否在选取文件后立即进行上传",row19column2:"上传的文件列表",row20column2:"覆盖默认的上传行为, 可以自定义上传的实现",row21column2:"是否禁用",row22column2:"可选参数, 最大上传数量"},samples8:{row1column2:"清空已上传的文件列表(该方法不支持在before-upload中调用)"}},colorDemo:{label:"ColorPicker 颜色选择器",description:"用于颜色选择，支持多种格式。",samples1:{label:"基础用法",description:"使用v-model绑定变量, 需字符串类型。"},samples2:{label:"选择透明度",description:"ColorPicker支持普通颜色，也支持带Alpha通道的颜色，通过show-alpha属性即可控制是否支持透明度的选择。"},samples3:{row1column2:"是否支持透明度选择",row2column2:"写入v-model的颜色的格式",row2column5:"hex(show-alpha为false)/rgb(show-alpha为true)"},samples4:{row2column2:"是否禁用状态",row2column5:"false"},samples5:{row1column2:"当绑定值变化时触发",row1column3:"当前值"}},navMenuDemo:{label:"NavMenu 导航菜单",description:"为网站提供导航功能的菜单。",samples1:{label:"顶栏",description:"导航菜单默认为垂直模式，通过 mode属性可以使导航菜单变更为水平模式。另外，在菜单中通过submenu组件可以生成二级菜单。通过theme属性可以设置主题"},samples2:{label:"侧栏",description:"通过vue-menu-item-group组件可以实现菜单进行分组，分组名可以通过title属性直接设定也可以通过具名slot来设定。"},samples3:{row1column2:"模式",row2column2:"主题色",row3column2:"当前激活菜单的index",row4column2:"当前打开的submenu的key数组",row5column2:"是否只保持一个子菜单的展开",row6column2:"子菜单打开的触发方式(只在 mode为 horizontal时有效)",row7column2:"是否使用vue-router的模式，启用该模式会在激活导航时以index作为path进行路由跳转"},samples4:{row1column2:"菜单激活回调",row1column3:"index:选中菜单项的index, indexPath:选中菜单项的index path",row2column2:"SubMenu展开的回调",row2column3:"index:打开的subMenu的index, indexPath:打开的subMenu的index path",row3column2:"SubMenu收起的回调",row3column3:"index:收起的subMenu的index, indexPath:收起的subMenu的index path"},samples5:{row1column2:"唯一标志"},samples6:{row1column2:"唯一标志",row2column2:"Vue Router路径对象"},samples7:{row1column2:"分组标题"},samples8:{label:"折叠",description:"侧栏菜单可以折叠"}},listDemo:{label:"List 列表",description:"用于相似元素信息的展示。",samples1:{label:"基础用法",description:"通过height属性设置list高度, 通过<vue-divider>控件来追加item间的分隔线"},samples2:{row1column2:"list高度",row2column2:"滚动竖向滚动条时的钩子",row3column2:"默认选中的item index",row4column2:"是否默认选中item",row5column2:"是否启用虚拟滚动条"},samples3:{row1column2:"选中item时的回调",row1column3:"选中的item"}},sortableDemo:{label:"Sortable 拖拽排序",description:"使用鼠标调整列表中或者网格中元素的排序。",samples1:{label:"基础用法",description:'根据属性element设置sortable的容器, 如:"div"'},samples2:{label:"数据绑定",description:"绑定数据后进行拖动,数据会相应地发生变化"},samples3:{label:"克隆",description:'设置options的group的pull属性为"clone"可以开启克隆模式,同一容器内无法克隆'},samples4:{row1column2:"绑定一个拖拽同步的数组",row2column2:"可以拖拽组件的HTML节点类型",row3column2:"当sortable的clone选项为true时的回调函数, 返回要克隆的数据, 只在绑定数据时生效",row4column2:"拖拽时的回调函数, 只在绑定数据时生效",row5column2:"初始化sortable对象的选项, 参考下表"},samples5:{row1column2:"将元素从一个容器中拖放到另一个容器中，两个容器必须具有相同的组名, 参考下表",row2column2:"同一个容器内是否可以自由排序",row3column2:"选中元素几毫秒后可以开始拖拽",row4column2:"是否禁用sortable",row5column2:"在容器中可以拖动的句柄选择器",row6column2:"在容器中不能拖动的句柄选择器",row7column2:"拖动元素时的占位类名",row8column2:"选中元素时的类名"},samples6:{row1column2:"组名",row2column2:'是否可以从容器中拖出元素, "clone"为克隆元素',row3column2:"是否可以把元素拖入容器中"},samples7:{row1column2:"开始拖拽的回调事件",row2column2:"容器追加元素的回调事件",row3column2:"容器移除元素的回调事件",row4column2:"容器更新元素的回调事件",row5column2:"结束拖拽的回调事件",row6column2:"选中元素的回调事件",row7column2:"同一容器内元素排序的回调事件",row8column2:"选中不能拖动的句柄选择器时的回调事件",row9column2:"克隆的回调事件"}},tableDemo:{label:"Table 表格",description:"用于展示多条结构类似的数据，可对数据进行排序、筛选、对比或其他自定义操作。(1.6.4移除，可单独引入)",samples1:{label:"基础用法",description:"当vue-table元素中注入data对象数组后，在vue-table-column中用prop属性来对应对象中的键名即可填入数据，用label属性来定义表格的列名，可以使用width属性来定义列宽；设置stripe属性为true可以创建带斑马纹的表格，它默认为false；设置border属性为true可以具有竖直方向的边框的。它默认为false．"},samples2:{label:"固定列",description:"固定列需要使用fixed属性，它接受 Boolean 值或者left, right，表示左边固定还是右边固定。"},samples3:{label:"自定义模板",description:"通过slot-scope可以获取到row, column, $index 和store(table 内部的状态管理)的数据, 可组合其他组件自定义显示的内容"},samples4:{label:"增删改"},samples5:{label:"排序",description:"通过表的default-sort属性设置默认的排序列和排序顺序。在列中设置sortable属性即可实现以该列为基准的排序"},samples6:{label:"筛选",description:"在列中设置filterable属性为true即可开启该列的筛选。"},samples7:{label:"自定义样式",description:"通过table的属性row-class-name可以给行指定样式, 通过table-column的属性class-name可以给列指定样式, 通过table-column的属性label-class-name可以给label的指定样式"},samples8:{label:"展开行",description:'设置type="expand"和Scoped slot可以开启展开行功能，vue-table-column的模板会被渲染成为展开行的内容，展开行可访问的属性与使用自定义列模板时的 Scoped slot 相同。设置table的expand-class-name属性 可以给展开行指定样式'},samples14:{label:"单选",description:"配置highlight-current-row属性即可实现单选。之后由current-change事件来管理选中时触发的事件，它会传入currentRow, oldCurrentRow"},samples15:{label:"多选",description:"手动添加一个vue-table-column，设type属性为selection即可实现多选"},samples16:{label:"合计",description:"将show-footer设置为true就会在表格尾部展示合计行。对于合计行，根据每列的aggregate属性进行计算"},samples17:{label:"隐藏列",description:"对vue-table-column设置visible属性为false, 可以隐藏该列"},samples18:{label:"快捷菜单",description:"设置context-menu属性为true, 可以开启快捷菜单功能, 调用table的内部方法toggleContextMenu切换快捷菜单"},samples19:{label:"懒加载",description:"设置lazyload属性为true, 可以开启懒加载模式, 设置了height时有效"},samples20:{label:"排序过滤选中行定位",description:"排序过滤选中行定位"},samples9:{row1column2:"显示的数据",row2column2:"Table的高度，默认为自动高度。",row3column2:"是否为斑马纹table",row4column2:"是否带有纵向边框",row5column2:"列的宽度是否自撑开",row6column2:"是否显示表头",row7column2:"是否要高亮选择行",row8column2:"行的className的回调方法，也可以使用字符串为所有行设置一个固定的className。",row9column2:'空数据时显示的文本内容，也可以通过slot="empty"设置',row10column2:'是否默认展开所有行，只对type="expand"的Column有效',row11column2:'展开行的className的回调方法，也可以使用字符串为所有展开行设置一个固定的className。只对type="expand"的Column有效',row12column2:"默认的排序列的prop和顺序。它的prop属性指定默认的排序的列，order属性指定默认排序的顺序",row12column5:"如果只指定了prop, 没有指定order, 则默认顺序是ascending",row13column2:"tooltip effect 属性",row14column2:"是否在表尾显示合计行",row15column2:"合计行第一列的文本",row16column2:"自定义的合计计算方法",row17column2:"懒加载DOM模式, 设置了height时有效",row18column2:"是否要高亮当前行",row19column2:"过滤后自动高亮第一行",row20column2:"排序后自动高亮第一行"},samples10:{row1column2:"当用户手动勾选数据行的Checkbox时触发的事件",row2column2:"当用户手动勾选全选Checkbox时触发的事件",row3column2:"当选择项发生变化时会触发该事件",row4column2:"当单元格hover进入时会触发该事件",row5column2:"当单元格hover退出时会触发该事件",row6column2:"当某个单元格被点击时会触发该事件",row7column2:"当某个单元格被双击击时会触发该事件",row8column2:"当某一行被点击时会触发该事件",row9column2:"当某一行被鼠标右键点击时会触发该事件",row10column2:"当某一行被双击时会触发该事件",row11column2:"当某一列的表头被点击时会触发该事件",row12column2:"当拖动表头改变了列的宽度的时候会触发该事件",row13column2:"当表格的排序条件发生变化的时候会触发该事件",row14column2:"当表格的筛选条件发生变化的时候会触发该事件，参数的值是一个对象，对象的key是column的columnKey，对应的value为用户选择的筛选条件的数组",row15column2:"当表格的当前行发生变化的时候会触发该事件，如果要高亮当前行，请打开表格的highlight-current-row属性",row16column2:"当对某一行展开或者关闭的时候触发该事件",row17column2:"当滚动条拉至顶部的时候触发该事件",row18column2:"当滚动条拉至底部的时候触发该事件",row19column2:"当滚动条拉至最左部的时候触发该事件",row20column2:"当滚动条拉至最右部的时候触发该事件"},samples11:{row11column2:"用于多选表格，获取用户的选择",row1column2:"用于多选表格，清空用户的选择",row2column2:"用于多选表格，切换某一行的选中状态",row3column2:"用于单选表格，设定某一行为选中行",row4column2:"切换context menu状态",row5column2:"对某列进行过滤",row6column2:"对多列进行排序",row7column2:"将数据导出为 csv文件",row7column3:"params(Object): fileName文件名，默认为table.csv; original是否导出为原始数据，默认为true",row8column2:"用于单选表格，获取选中行",row9column2:"重置所有过滤",row10column2:"重置所有排序",row12column2:"导出用户设置（排序，过滤，列显示等）",row13column2:"导入用户设置"},samples12:{row1column2:"自定义模板",row2column2:"头部自定义模板"},samples13:{row1column2:"对应列的类型. 如果设置了selection则显示多选框; 如果设置了index则显示该行的索引(从1开始计算); 如果设置了expand则显示为一个可展开的按钮",row3column2:"显示的标题",row4column2:"对应列数据的字段名",row5column2:"对应列的宽度",row6column2:"对应列的最小宽度，会把table剩余宽度按比例分配给设置了min-width的列",row7column2:"列是否固定在左侧或者右侧，true表示固定在左侧",row8column2:"列标题Label区域渲染使用的Function",row9column2:"对应列是否可以排序，",row10column2:"对数据进行排序的时候使用的方法，仅当sortable为true的时候有效，需返回一个布尔值",row11column2:"对应列是否可以通过拖动改变宽度(需要在vue-table上设置border属性为true)",row12column2:"用来格式化内容",row13column2:"当内容过长显示tooltip",row14column2:"对齐方式",row15column2:"表头对齐方式",row16column2:"列的自定义类名",row17column2:"当前列标题的自定义类名",row18column2:"仅对type==selection的列有效，返回一个boolean用来决定这一行的 CheckBox是否可以勾选",row19column2:"对应列是否可以过滤",row20column2:"数据过滤的选项，数组格式，数组中的元素需要有text和value属性",row22column2:"数据过滤使用的方法，返回一个boolean用来决定是否显示",row23column2:"是否显示列",row24column2:"合计类型",row25column2:"合计标题",row26column2:"csv文件的标题",row27column2:"标题是否被前一列合并",row28column2:"数据相同的行合并"}},draggableDemo:{label:"Draggable 拖放",description:"通过单击鼠标并拖动对象在窗口内任意移动. ",samples1:{label:"基础用法",description:"绑定了v-draggable指令的元素即可在带滚动条的父层窗口范围内任意移动"},samples2:{row1column2:"通过选择器指定元素内的子元素无法触发拖动事件"}},adaptiveGroup:{label:"AdaptiveGroup 自适应组",description:"根据窗口大小对li slot聚集. ",samples1:{label:"基础用法",description:""},samples2:{row1column2:"触发自适应的大小",row2column2:"自定义class",row3column2:"自定义下拉列class",row4column2:"自定义触发下拉列图标的class"},samples3:{row1column2:"不被收至下拉列内",row2column2:"被收至下拉列内"}},rippleDemo:{label:"Ripple 波纹效果",description:"点击时触发波纹效果.",samples1:{label:"基础用法",description:"对需要触发波纹效果的元素设定v-ripple指令即可"}},signatureDemo:{label:"Signature 签名",description:"签名画布控件，可生成base64数据",samples1:{label:"基础用法",description:"基础签名画布"},samples2:{label:"获取签名图片base64数据",description:"调用saveSignature方法，返回结果包含是否为空和base64数据"},samples3:{label:"清空签名",description:"调用clearSignature方法"},samples4:{label:"撤销",description:"调用undoSignature方法"},samples5:{label:"锁定、解锁",description:"lockSignaturePad、openSignaturePad"},samples6:{row1column2:"宽度",row2column2:"高度",row3column2:"保存图片格式，支持image/png, image/jpeg, image/svg+xml",row4column2:"设置项目 {backgroundColor: string, penColor: string, onBegin：function, onEnd：function}",row5column2:"自定义外层div样式 :custom-style=\"{border: 'black 1px dotted'}\""},samples7:{row1column2:"返回签名的状态和base64数据",row2column2:"撤销最后一笔笔画",row3column2:"清空签名",row4column2:"锁定",row5column2:"解锁",row6column2:"读取base64数据到画布",row7column2:"是否是空的"}},hotkeyDemo:{label:"Hotkey 快捷键",description:"给指定的元素绑定快捷键",samples1:{label:"基础用法",description:"绑定v-hotkey指令，默认触发click事件，也可指定触发的函数"}},XtableDemo:{label:"Xtable 高级表格",advanced:{label:"更多功能",Custom:{label:"显示/隐藏列",sample1:{description:"通过 customs 来初始化绑定动态列：{field: 字段名, visible: 默认是否显示}<br>\n      通过函数式调用 showColumn、hideColumn 操作列的显示/隐藏<br>\n      还可以通过修改列的 visible 属性，可以轻松实现强大的显示/隐藏列的配置功能，最后调用 refreshColumn 刷新列",label:"基本用法"},sample2:{description:"如果是根据服务端数据控制显示/隐藏列，则需要手动调用 reloadCustoms 更新即可",label:"动态显示/隐藏列"},sample3:{description:"通过属性 field 和 visible 设置默认隐藏",label:"默认隐藏"}},CustomSort:{label:"自定义列头排序",sample1:{description:"自定义列头排序的实现，你可以把表格封装成子组件进行定制，通过 slot 非常简单就可以实现自定义排序"}},CustomStorage:{label:"显示/隐藏列 + localStorage",sample1:{label:"基本用法",description:"显示/隐藏列功能，通过设置 id 和 setting={storage: true} 参数开启将列个性化 localStorage 保存功能<br>\n      也可以通过配合 reloadCustoms 函数实现服务端保存"}},CustomlWidthStorage:{label:"显示/隐藏/列宽 + localStorage",sample1:{label:"基本用法",description:"显示/隐藏列和列宽拖动保存功能，通过设置 id 和 resizable={storage: true} 参数开启列宽拖动 localStorage 保存功能<br>\n      还可以通过 checkMethod 设置个性化列禁止勾选<br>\n      也可以通过配合 resizable-change 事件实现服务端保存"}},Dynamic:{label:"使用 v-for 动态实现",sample1:{description:'配合 v-for 动态生成，动态改变宽度、固定列..等<br><span class="red">（注：动态更新属性必须要先定义，否则无法监听到属性变化）</span>',label:"基本用法"}},Event:{label:"事件绑定",sample1:{description:"事件绑定",label:"基本用法"}},Expand:{label:"展开行",sample1:{description:"通过设置 expand-config 属性和 type=expand 与 slot 可以开启展开行功能",label:"基本用法"},sample2:{description:"默认展开指定行，通过 expandRowKeys 参数设置默认展开行，指定默认值需要有 row-id",label:"默认展开"},sample3:{description:"默认展开所有行，通过 expandAll 参数设置默认展开所有行",label:"展开所有"}},Export:{label:"导出数据",sample1:{description:"通过调用 exportData 函数指定 type='csv' 可以直接将表格导出为 CSV/HTML/XML/TXT 格式的文件<br>\n      <span class=\"red\">注：默认会排除 field 为空和 type 相关的功能列；如果需要导出索引，请通过 columnFilterMethod 自定义筛选条件</span>",label:"基本用法"},sample2:{description:"配置 columnFilterMethod 参数过滤指定列",label:"过滤指定列"},sample3:{description:"配置 dataFilterMethod 参数过滤指定行",label:"过滤指定行"},sample4:{description:"不导出表头，指定文件名，导出源数据,格式化数据",label:"完整配置"}},FixedType:{label:"固定类型 + 导入/导出",sample1:{description:"导入/导出文件类型：通过 types 设置文件类型，例如：限制只允许使用 CSV 格式<br>",label:"固定类型 + 导入/导出"}},Footer:{label:"表尾合计",sample1:{description:'设置 show-footer show-footer 和 footer-method 自定义表尾合计<br>\n      需要注意的是表尾的的计算并非实时的，而是在 data 初始化时才会触发自动计算；如果要达到实时计算请手动调用 updateFooter 方法<br>\n      <span class="red">（注：footer-method 合计的逻辑都是自行实现的，该示例仅供参考）</span>',label:"基本用法"},sample2:{description:"还可以配合 footer-cell-class-name 自定义不同列颜色",label:"自定义样式"},sample3:{description:"还可以固定列",label:"固定列"}},FooterSpan:{label:"表尾合并行或列",sample1:{description:'表尾合并列，通过 footer-span-method 方法<br>\n      <span class="red">（注：footer-method 合计的逻辑都是自行实现的，该示例仅供参考）</span>',label:"合并列"},sample2:{description:"合并行",label:"合并行"}},Highlight:{label:"键盘移动高亮行",sample1:{description:"键盘移动高亮行，设置 keyboard-config={isArrow: true} 启用方向键功能",label:"基本用法"}},Import:{label:"导入数据",sample1:{description:'导入数据：通过 importData 函数可以直接将数据导入表格中<br>\n      <span class="red">注：附件中的字段名必须和表格一致，数据格式不正确将无法导入</span>',label:"基本用法"}},ManualFilter:{label:"筛选高级用法",sample1:{description:'筛选高级用法、动态更改筛选条件、自定义更加复杂的模板事件，通过调用 filter 和 updateData 方法来处理复杂场景的筛选逻辑<br>\n      context 对象:<br>\n      &nbsp;&nbsp;<span class="orange">changeOption(event, checked, option) 更新选项的状态</span><br>\n      &nbsp;&nbsp;<span class="orange">confirmFilter() 确认筛选</span><br>\n      &nbsp;&nbsp;<span class="orange">resetFilter() 清除筛选条件</span>',label:"基本用法"}},Menu:{label:"快捷菜单",sample1:{description:"右键快捷菜单，支持表头菜单、内容菜单、表尾菜单，配置项 context-menu={header,body,footer}",label:"基本用法"}},MenuPrivilege:{label:"快捷菜单 + 权限控制",sample1:{description:"右键快捷菜单，支持表头菜单、内容菜单、表尾菜单，通过 visibleMethod 和 visible | disabled 属性来控制菜单选项的操作权限",label:"基本用法"}},Page:{label:"分页",sample1:{description:'使用自带的分页 <pager-api-link name="vue-xtable-pager"></pager-api-link><br>\n      如果要支持动态序号，可以通过 start-index 属性设置起始值<br>\n      如果要支持保留选中状态，可以通过设置 checkbox-config 的 reserve 属性<br>\n      启用 reserve 功能需要有 row-id 唯一主键',label:"基本用法"},sample2:{description:"设置分页 border 样式",label:"border 样式"},sample3:{description:"设置分页 background 样式",label:"background 样式"},sample4:{description:"设置分页 perfect 样式"}},Print:{label:"打印",sample1:{description:"通过调用 print 函数打印表格",label:"基本用法"}},Search:{label:"全表搜索",sample1:{description:"表格搜索功能，非常简单就可以实现表格内容搜索",label:"基本用法"},sample2:{description:"树表格搜索功能，非常简单就可以实现树表格内容搜索",label:"树表格搜索"}},Span:{label:"合并行或列",sample1:{description:'合并列，通过 span-method 方法，使用 $rowIndex 获取渲染中的行索引，rowIndex 指向真实数据的行索引，可以根据不同场景使用<br>\n      <span class="red">（注：span-method 合并的逻辑都是自行实现的，该示例仅供参考）</span>',label:"合并列"},sample2:{label:"合并行",description:"合并行"}},SpanRow:{label:"更加复杂的合并行",sample1:{description:'更加复杂的合并行，实现横向树结构<br><span class="red">（注：span-method 合并的逻辑都是自行实现的，该示例仅供参考）</span>',label:"复杂合并行"}},Template:{label:"自定义模板",sample1:{description:"使用 slot 自定义模板；可以实现自定义任意内容及 html 元素<br>\n      default：自定义内容模板（提前格式化（最优） > formatter（值发生变化时） > slots（即时））<br>\n      header：自定义表头模板<br>\n      filter：自定义筛选模板（建议使用<router-link :to=\"{name: 'RendererAPI'}\">渲染器</router-link>，可以更好的复用）<br>\n      edit：自定义可编辑模板（建议使用<router-link :to=\"{name: 'RendererAPI'}\">渲染器</router-link>，可以更好的复用）",label:"基本用法"}},Toolbar:{label:"工具栏",sample1:{description:'使用自带的工具栏 <toolbar-api-link name="vue-toolbar"></toolbar-api-link>，配合模板可以非常简单的实现强大的功能<br>\n      支持显示/隐藏列、列宽拖动状态的保存功能<br>\n      <span class="red">注：组成一套完整的表格，工具栏和表格必须是上下相邻关系，渲染时会自动进行上下关联，不允许更换位置（如果是复杂的布局不建议使用工具栏，自行写模板即可）</span>',label:"基本用法"}}},bad:{label:"糟糕的用法",Edit:{label:"全表渲染为编辑状态",sample1:{description:'将单元格渲染成可编辑<span class="red">（该方式将无法使用 v3 的极速渲染模式）</span><br>\n      <span class="red">由于不符合 vue-xtable 单行编辑的设计原则，使用这个方式的所有逻辑都应该自行处理</span>'},sample2:{description:'将可编辑全部设为可视类型<span class="red">（该方式将无法使用 v3 的极速渲染模式）</span><br>\n      <span class="red">由于不符合 vue-xtable 单行编辑的设计原则，使用这个方式的所有逻辑都应该自行处理</span>'}}},base:{label:"基础功能",AutoHeight:{label:"响应式宽高",sample1:{description:"当一个表格需要铺满父容器时，这个功能将非常有用<br>\n      通过设置 height=auto表格会相对于父容器的高度去铺满，但是只会在数据重新加载时才会计算<br>\n      还可以根据不同场景添加 sync-resize（属性监听） 或 auto-resize（父元素监听），这样就只需要通过样式控制父容器高度就可以实现响应式表格",label:"自动铺满"},sample2:{label:"百分比高度",description:"也可以设置相对于父容器的百分比"}},Basic:{label:"基础",sample1:{description:'<table-api-link name="vue-xtable"></table-api-link> 静态化表格，基于模板方式使用简单、便捷',label:"基本功能"},sample2:{description:"使用 highlight-hover-row 属性启用 hover 行高亮",label:"hover行高亮"}},Border:{label:"边框",sample1:{description:"带边框的表格，通过设置 border 参数",label:"显示边框"}},Current:{label:"高亮行",sample1:{description:"使用 highlight-current-row 显示高亮行；用户操作点击选项时会触发事件 current-change",label:"高亮当前行"}},DynamicStyle:{label:"单元格动态样式",sample1:{description:'行的动态样色、单元格动态样式，表头的动态样式、表尾的动态样式、全部都可以完全自定义<br>\n      <span class="red">（注：当自定义样式之后可能会覆盖表格的样式，比如选中行..等，记得自行处理好相关样式）</span>',label:"动态样式"}},Empty:{label:"空数据",sample1:{description:"基础使用",label:"默认功能"},sample2:{description:"出现滚动条",label:"出现滚动条"},sample3:{description:"配合 loading 使用，可以通过 slot=empty 自定义提示语",label:"提示语"}},Filter:{label:"筛选",sample1:{description:'通过设置 filters 属性和 filter-method 方法可以支持列筛选功能<br>\n      如果是服务端筛选，只需加上 remote-filter 和 filter-change 事件就可以实现<br>\n      如果是动态数据请配合 filter 方法，参数 filters 不支持动态数据<br>\n      context 对象（<router-link  class="link" :to="{name: \'TableManualFilter\'}">查看高级用法</router-link>）:<br>\n      &nbsp;&nbsp;<span class="orange">changeOption(event, checked, option) 更新选项的状态</span><br>\n      &nbsp;&nbsp;<span class="orange">confirmFilter() 确认筛选</span><br>\n      &nbsp;&nbsp;<span class="orange">resetFilter() 清除筛选条件</span>',label:"基本功能"},sample2:{description:"默认的筛选，通过 checked 属性设置默认的选中的选项",label:"默认选中选项"}},Fixed:{label:"固定列",sample1:{description:"固定列，通过设置 fixed 参数<br>\n      当横向内容过多时，将列固定在左右两侧",label:"基本功能"},sample2:{description:"如果列宽足够的情况下，固定列不会浮动",label:"列宽联动"}},FixedFull:{label:"固定表头和列",sample1:{description:"横纵内容过多时，同时固定列和表头",label:"固定表头和列"},sample2:{description:"固定列建议设置 show-overflow 该值，禁用自动换行，大幅提升渲染速度",label:"show-overflow"}},Format:{label:"格式化内容",sample1:{description:'局部自定义 formatter 格式化内容，formatter 会确保在指定的 field 值发生改变时调用，如果想要多字段关联变化请使用<router-link class="nav-link" :to="{name: \'TableTemplate\'}">自定义模板</router-link>',label:"基本用法"},sample2:{description:"全局格式化内容，会在需要的时候自动调用对应 VueUtil 函数库的方法进行数据处理<br>\n      可以通过自定义函数实现统一的格式化处理，这对于很多场景非常有用，减少很多不必要的重复代码",label:"调用内置函数"}},Group:{label:"表头分组",sample1:{description:"当数据结构比较复杂的时候，可以使用多级表头显示更加直观",label:"基本用法"},sample2:{description:"固定列",label:"分组固定列"}},Header:{label:"隐藏头部",sample1:{description:"隐藏头部，通过设置 show-header 参数",label:"隐藏头部"},sample2:{description:"当纵向或横向内容过多时，自动出现滚动条",label:"滚动条"}},HeaderHighlight:{label:"高亮列",sample1:{description:"列选中高亮，通过设置 highlight-current-column 参数",label:"列选中高亮"},sample2:{description:"列和行选中高亮，通过设置 highlight-hover-row、highlight-hover-column 参数",label:"列和行选中高亮"}},Height:{label:"固定表头",sample1:{description:"当纵向内容过多时，固定表头就非常有用了，通过设置 height 参数",label:"固定表头"}},Index:{label:"序号",sample1:{description:"设置 type=index 开启序号列",label:"开启序号列"},sample2:{description:"使用 start-index 自定义起始序号",label:"自定义起始序号"},sample3:{description:"使用 index-method 自定义方法",label:"自定义方法"}},Loading:{label:"加载中",sample1:{description:"通过设置 loading 属性可以使用自带的加载效果",label:"默认"},sample2:{description:"加载中",label:"加载动画"}},MaxHeight:{label:"最大高度",sample1:{description:"当一个表格高度需要自适应的时候可以设置为最大高度",label:"最大高度"},sample2:{description:"如果设置 max-height，当内容为达到最大高度时会自适应",label:"自适应"},sample3:{description:"也可以设置相对于父容器的百分比",label:"百分比高度"}},Overflow:{label:"内容显示省略号",sample1:{description:"当内容或表头超过隐藏时显示为省略号，show-overflow 和 show-header-overflow <br>\n      ellipsis 当内容超过时显示为省略号<br>\n      title 当内容超过时显示为省略号并用原生 title 显示<br>\n      tooltip 当内容超过隐藏时显示为省略号并用 tooltip 显示<br>\n      还可以通过 enterable 开启鼠标是否可进入到 tooltip 中",label:"基本用法"},sample2:{description:"使用 light 主题，通过 tooltip-config 参数配置",label:"使用主题"}},Radio:{label:"单选框",sample1:{description:"单选表格，用户手动选中时会触发事件 radio-change",label:"单选表格"},sample2:{description:"还可以通过 checkMethod 方法控制 CheckBox 是否允许用户手动选中，还可以配置 labelField 列显示属性<br>\n      禁止用户手动选中，但是可以通过函数式调用强制选中，该功能对于某些场景需要强制选中指定行时非常有用",label:"禁用选项"},sample3:{description:"默认选中，通过指定 checkRowKey 设置默认选中的行，指定默认值需要有 row-id",label:"默认选中选项"},sample4:{description:"使用 highlight-current-row 高亮方式",label:"行选中模式"},sample5:{description:"两种方式混合使用",label:"两种方式混合使用"},sample6:{description:"当然也可以两种方式同时使用",label:"两种方式同时使用"}},Resizable:{label:"列宽拖动",sample1:{description:"通过设置 resizable 属性启用列宽拖动功能",label:"基本用法"},sample2:{description:"横向滚动条",label:"滚动条变化"},sample3:{description:"固定左列宽拖动（固定左不允许超过表格右边距）",label:"固定左列宽拖动"},sample4:{description:"固定右列宽拖动（固定右不允许超过表格左边距）",label:"固定右列宽拖动"},sample5:{description:"左右固定列宽拖动（固定左不允许超过固定右，固定右不允许超过固定左）",label:"左右固定列宽拖动"},sample6:{description:"分组表头拖动（只允许列拖动，不允许分组标题拖动）",label:"分组表头拖动"},sample7:{description:"左右固定列的分组表头拖动（只允许列拖动，不允许分组标题拖动）",label:"左右固定列的分组表头拖动"}},Selection:{label:"复选框",sample1:{description:"多选表格，用户手动勾选时会触发事件 select-change",label:"多选表格"},sample2:{description:"还可以通过 checkMethod 方法控制 CheckBox 是否允许用户手动勾选，还可以配置 labelField 列显示属性<br>\n      禁止用户手动勾选，但是可以通过函数式调用强制勾选，该功能对于某些场景需要强制勾选指定行时非常有用",label:"禁用选项"},sample3:{description:"多选表格，通过配置 trigger 设置触发源，使用渲染最快的 checkField 属性绑定方式",label:"属性绑定"},sample4:{description:"默认选中，通过指定 checkRowKeys 设置默认选中的行，指定默认值需要有 row-id",label:"默认选中选项"},sample5:{description:"通过 checkStrictly 设置父子节点不互相关联，启用后 showHeader 默认为 false",label:"父子节点不互相关联"},sample6:{description:"多选可单选同时使用",label:"混合单选"},sample7:{description:"不仅如此，还可以多种方式混合使用",label:"多种混合方式"}},Size:{label:"尺寸",sample1:{description:"可以设置大小尺寸：medium / small / mini 默认 48px 高度",label:"默认高度"},sample2:{description:"设置大小为 medium，默认 44px 高度",label:"medium"},sample3:{description:"设置大小为 small，默认 40px 高度",label:"small"},sample4:{description:"设置大小为 mini，默认 36px 高度",label:"mini"}},Sort:{label:"排序",sample1:{description:"通过给需要排序功能的列加上 sortable 属性可以支持排序，还可以通过设置 sort-by 多字段进行排序<br>\n      如果是服务端排序，只需加上 remote-sort 和 sort-change 事件就可以实现",label:"基本功能"},sample2:{description:"配置 sort-by 多个字段组合排序",label:"组合排序"},sample3:{description:"配置 sort-method 自定义排序",label:"自定义排序"},sample4:{description:"点击表头排序，可以通过配置 trigger 设置触发源",label:"设置触发源"}},Stripe:{label:"斑马线条纹",sample1:{description:'斑马线条纹<br><span class="red">（注：在可编辑表格场景下，临时插入的数据不会有斑马纹样式）</span>',label:"基本功能"},sample2:{description:"使用 highlight-hover-row 属性启用 hover 行高亮",label:"hover行高亮"}},Style:{label:"单元格样式",sample1:{description:'行的样色、单元格样式，表头的样式、表尾的样式、全部都可以完全自定义<br>\n      <span class="red">（注：当自定义样式之后可能会覆盖表格的样式，比如选中行..等，记得自行处理好相关样式）</span>',label:"自定义样式"},sample2:{description:"通过 cell-click 事件点击改变颜色",label:"点击改变样式"}}},edit:{label:"可编辑表格",AutoClear:{label:"关闭自动清除",sample1:{description:"设置 edit-config={trigger: 'manual', mode: 'row', autoClear: false}，还可以通过设置 autoClear 关闭默认的单元格清除激活行为",label:"基本用法"}},CascadingSelect:{label:"联动下拉选项",sample1:{description:"实现简单的级联下拉选项列表",label:"基本用法"}},CellDisable:{label:"禁用编辑 cell",sample1:{description:"设置 edit-config 的 activeMethod 方法判断单元格是否禁用",label:"列模式"},sample2:{description:"禁用第二行编辑",label:"行模式"}},CellValid:{label:"数据校验 cell",sample1:{description:"通过调用 validate 函数校验数据，edit-rules 校验规则配置",label:"基本用法"}},Click:{label:"点击触发",sample1:{description:"设置 edit-config={trigger: 'click', mode: 'cell'} 启用单元格点击编辑的功能<br><span class=\"red\">注：原生的 select 只支持字符串的 value</span>",label:"单元格编辑"},sample2:{description:"设置 edit-config={trigger: 'click', mode: 'row'} 启用行点击编辑的功能",label:"行编辑"}},DBLClick:{label:"双击触发",sample1:{description:"设置 edit-config={trigger: 'dblclick', mode: 'cell'} 启用单元格双击编辑的功能<br><span class=\"red\">注：原生的 select 只支持字符串的 value</span>",label:"单元格编辑"},sample2:{description:"设置 edit-config={trigger: 'dblclick', mode: 'row'} 启用行双击编辑的功能",label:"行编辑"}},Events:{label:"事件绑定",sample1:{description:'通过 events 自定义目标组件的事件<br><span class="red">（注：只有目标组件支持的事件才有效）</span>',label:"基本用法"}},Expand:{label:"展开行",sample1:{description:"展开行",label:"基本用法"}},Footer:{label:"表尾合计",sample1:{description:'统计编辑列的表尾合计，对于某些场景下如果需要频繁计算的可以手动调用 updateFooter 函数<br>\n      <span class="red">（注：footer-method 合计的逻辑都是自行实现的，该示例仅供参考）</span>',label:"基本用法"}},FooterImmediately:{label:"表尾合计 + 实时更新",sample1:{description:"统计编辑列的表尾合计，数据发生变化时实时统计<br>如果是原生的渲染器，可以设置 immediate 属性和相关事件去实时更新",label:"基本用法"}},ForceCellValid:{label:"数据校验 cell + 强制锁定"},ForceRowValid:{label:"数据校验 row + 强制锁定"},Full:{label:"完整功能"},Insert:{label:"插入数据",sample1:{description:'调用 insert、insertAt 函数插入临时数据<br><span class="red">注：原生的 select 只支持字符串的 value</span>',label:"基本用法"}},Keyboard:{label:"键盘导航",sample1:{description:'设置 mouse-config={selected: true} 启用单元格选中功能<br>\n      设置 keyboard-config={isArrow: true, isDel: true, isTab: true, isEdit: true} 启用按键功能及任意键编辑功能，方向键、Tab 键、Esc 键、F2 键、Del、Back 键<br>\n      <span class="red">（注：isEdit 启用任意键覆盖式编辑的）</span>',label:"基本用法"}},Manual:{label:"手动触发",sample1:{description:"设置 edit-config={trigger: 'manual', mode: 'row'} 启用行编辑的功能<br><span class=\"red\">注：原生的 select 只支持字符串的 value</span>",label:"基本用法"}},Menu:{label:"快捷菜单",sample1:{description:"通过快捷菜单增删改查",label:"基本用法"}},Remove:{label:"删除数据",sample1:{description:"调用 remove 删除指定行数据",label:"基本用法"}},Revert:{label:"还原数据",sample1:{description:"调用 revertData 还原数据",label:"基本用法"}},RowDisable:{label:"禁用编辑 row",sample1:{description:"设置 edit-config 的 activeMethod 方法判断单元格是否禁用，例如：限制第一行不允许编辑",label:"activeMethod "},sample2:{description:"配合  edit-actived 事件，实现行编辑中对列的权限控制，例如：限制 age 小于 27 的与 name 为 'a' 开头的列禁止编辑",label:"edit-actived "}},RowValid:{label:"数据校验 row",sample1:{description:"通过调用 validate 函数校验数据，edit-rules 校验规则配置",label:"基本用法"}},Select:{label:"选中内容",sample1:{description:"单元格点击编辑，还可以通过 autoselect 开启默认选中",label:"基本用法"}},Span:{label:"合并行或列",sample1:{description:'可编辑的合并行<br><span class="red">（注：span-method 合并的逻辑都是自行实现的，该示例仅供参考）</span>',label:"基本用法"}},Status:{label:"编辑状态",sample1:{description:"设置 edit-config={trigger: 'click', mode: 'cell', showStatus: true} 开启编辑状态显示功能<br>\n      对于某些需要局部保存的场景，可以在数据保存完成后调用 reloadRow 方法加载行数据并恢复到初始状态",label:"基本用法"}},Template:{label:"自定义模板",sample1:{description:"使用 edit slot 自定义渲染任意 Vue 组件",label:"基本用法"}},UniqueSelect:{label:"唯一下拉选项",sample1:{description:"实现简单的唯一下拉选项列表",label:"基本用法"}}},grid:{label:"高级表格",Basic:{label:"基础",sample1:{description:'<grid-api-link name="vue-xgrid"></grid-api-link> 动态化表格，解决动态数据一切需求（动态列、动态数据、动态个性化...）<br>\n      渲染性能对比：<grid-api-link name="vue-xgrid"></grid-api-link>（性能最优，不需要为每一列创建实例） > <table-api-link name="vue-xtable"></table-api-link>（性能略差，需要为每一列创建实例）<br>\n      通过 columns 动态配置列信息，这非常适用于动态渲染的场景，完全使用数据进行配置',label:"基本用法"}},CustomToolbar:{label:"自定义工具栏",sample1:{description:"工具栏：通过 toolbar 属性配置，使用 slot 自定义模板",label:"基本用法"}},Dynamic:{label:"实现可配置动态列",sample1:{description:"实现可配置动态列、数据代理、工具栏、增删改查",label:"可配置动态列"},sample2:{description:"级联动态列渲染，可以非常简单的实现功能复杂的可配置动态列",label:"级联动态列"}},Edit:{label:"可编辑",sample1:{description:"可编辑表格",label:"基本用法"}},Footer:{label:"表尾合计",sample1:{description:"底部合计",label:"基本用法"}},FullEdit:{label:"完整功能",sample1:{description:'查询代理、服务端排序代理、服务端筛选代理、分页代理、增删改查<br>\n      对于分页场景下，如果想要保留选中状态，可以通过设置 checkbox-config 的 reserve 属性<br>\n      还可以通过 checkMethod 设置个性化列禁止勾选<br>\n      由 <grid-api-link name="vue-xgrid"></grid-api-link> 代理数据转换，只需要配置好数据源即可；非常简单就可以渲染一个表格，从重复写冗余的代码中解放出来',label:"完整功能"}},FullQuery:{label:"完整查询",sample1:{description:"数据代理、固定列、服务端排序、服务端筛选、服务端分页，对于分页场景下，如果想要保留选中状态，可以通过设置 checkbox-config 的 reserve 属性",label:"完整查询"}},Group:{label:"表头分组",sample1:{description:"分组表头",label:"基本用法"}},Menu:{label:"快捷菜单",sample1:{description:"快捷菜单，实现对按钮的控制，通过 visibleMethod 和 visible | disabled 属性来控制菜单选项的操作权限",label:"基本用法"}},Page:{label:"分页",sample1:{description:"数据代理：通过配置 proxy-config 启用数据代理将不需要再主动发送请求，由表格代理增删改查的相关调用逻辑，只需要配好对应的接口即可自动渲染<br>\n      响应结果默认必须是数组，非数组情况下可以通过 props 修改",label:"基本用法"}},PageProxy:{label:"数据代理 + 分页",sample1:{description:"数据代理：通过配置 proxy-config 启用数据代理将不需要再主动发送请求，由表格代理增删改查的相关调用逻辑，只需要配好对应的接口即可自动渲染<br>\n      通过配置 pager-config 参数开启分页功能，对于分页场景下，如果要实现分页动态序号，可以通过 start-index 属性设置起始值<br>\n      分页情况下则默认读取响应结果中 page.total 和 result 属性，可以通过 props 修改",label:"基本用法"}},Proxy:{label:"数据代理",sample1:{description:"数据代理：通过配置 proxy-config 参数，默认直接读取结果，响应结果应该为数组；可以通过 props 修改默认值，由 pager-config 代理数据转换，只需要配置好数据源即可；非常简单就可以渲染一个表格，从重复写冗余的代码中解放出来",label:"基本用法"}},Reverse:{label:"反转表格",sample1:{description:"反转表格，只需要将 columns 和 data 数据进行反转",label:"基本用法"},sample2:{description:"更多配置",label:"更多"}},Span:{label:"合并行或列"},Template:{label:"自定义模板",sample1:{description:'使用自定义模板渲染，通过 slots 属性编写 <a class="link" href="https://cn.vuejs.org/v2/guide/render-function.html#JSX" target="_blank">JSX</a> 模板或 <a class="link" href="https://cn.vuejs.org/v2/guide/render-function.html#%E8%99%9A%E6%8B%9F-DOM" target="_blank">VNode</a><br>\n      列：<br>\n      default：自定义内容模板（提前格式化好数据 > formatter > slots）<br>\n      header：自定义表头模板<br>\n      filter：自定义筛选模板（建议使用<router-link :to="{name: \'RendererAPI\'}">渲染器</router-link>，可以更好的复用）<br>\n      edit：自定义可编辑模板（建议使用<router-link :to="{name: \'RendererAPI\'}">渲染器</router-link>，可以更好的复用）<br>\n      工具栏：<br>\n      buttons：自定义按钮模板',label:"基本用法"}},Toolbar:{label:"增删改查 + 工具栏",sample1:{description:"工具栏：通过 toolbar 属性配置，支持显示/隐藏列、列宽拖动状态的保存功能，可以通过 storage 开启将列个性化的设置状态保存到本地",label:"基本用法"}},Tree:{label:"基础树",sample1:{description:"树表格、数据代理",label:"基本用法"}},TreeEdit:{label:"树 + 增删改查 + 工具栏",sample1:{description:"树表格、增删改查、工具栏，可以通过 storage 开启将列个性化的设置状态保存到本地",label:"基本用法"}}},interceptor:{label:"(进阶)事件拦截器",API:{label:"API",sample1:{description:'通过内置事件拦截器可以很容易的处理表格事件行为与第三方组件的兼容性；比如这些插件 <a class="link" href="https://www.npmjs.com/package/vue-xtable-plugin-element" target="_blank">vue-xtable-plugin-element</a>'},sample2:{description:"例子：比如自定义渲染某个组件后，由于弹出层面板不在单元格之内，按键事件的交互行为存在冲突，对于这些场景就很有用了"}}},menus:{label:"快捷菜单",API:{label:"API",sample1:{description:"你可以很简单的将常用的快捷菜单注册成全局可复用的"}}},optimize:{Edit:{label:""},Scroller:{label:""}},renderer:{label:"（进阶）渲染器",API:{label:"API",sample1:{description:'通过渲染器你可以轻松实现筛选、单元格的复用，可以根据不同业务实现不一样的渲染器，这个功能将非常实用；比如这些插件 <a class="link" href="https://www.npmjs.com/package/vue-xtable-plugin-element" target="_blank">vue-xtable-plugin-element</a>'},sample2:{description:'<span class="orange">渲染器：抽象一切可复用的功能（类似组件的概念），实现非常简单的可配置化；</span><br>\n      <span class="orange">插槽：自定义程度高，但需要重复写冗余代码，比较繁琐；</span><br>\n      <span class="red">建议通过 JSX 实现更加简单，可维护性更好</span>'}},Default:{label:"默认的渲染器",sample1:{description:"默认的渲染器 cell-render<br>\n      配置参数：<br>\n      renderDefault (h, cellRender, { row, rowIndex, $rowIndex, column, columnIndex, $columnIndex }, context) 渲染函数"}},Edit:{label:"可编辑渲染器",sample1:{description:"可编辑渲染器 edit-render<br>\n      默认支持原生的：input、textarea、select<br>\n      配置参数：<br>\n      autofocus 自动聚焦的类名<br>\n      renderEdit (h, editRender, { row, rowIndex, $rowIndex, column, columnIndex, $columnIndex }, context) 编辑的渲染函数<br>\n      renderCell (h, editRender, { row, rowIndex, $rowIndex, column, columnIndex, $columnIndex }, context) 显示的渲染函数"}},Filter:{label:"筛选渲染器",sample1:{description:"筛选渲染器 filter-render<br>\n      默认支持原生的：input、textarea、select<br>\n      配置参数：<br>\n      renderFilter (h, filterRender, { column, columnIndex, $columnIndex }, context) 渲染函数<br>\n      filterMethod ({ option, row, column }) 筛选函数"}}},scroll:{label:"大数据表格",CellValid:{label:"数据校验 cell",sample1:{description:'虚拟滚动渲染，可编辑表格<br><span class="red">当数据量非常大时，由于需要进行大量数据运算，所以数据校验或者获取数据...等函数执行会相对耗时</span>',label:"基本用法"}},Edit:{label:"可编辑",sample1:{description:'虚拟滚动渲染，可编辑表格<br><span class="red">当数据量非常大时，由于需要进行大量数据运算，所以数据校验或者获取数据...等函数执行会相对耗时</span>',label:"基本用法"}},ForceCellValid:{label:"数据校验 cell + 强制锁定"},ForceRowValid:{label:"数据校验 row + 强制锁定"},FullPartialLoad:{label:"完整的局部加载",sample1:{description:"虚拟滚动渲染，更加复杂局部递增数据、局部递增列、固定列<br>",label:"基本用法"}},Highlight:{label:"键盘移动高亮行",sample1:{description:"虚拟滚动渲染，键盘移动高亮行，设置 keyboard-config={isArrow: true} 启用方向键功能",label:"基本用法"}},Keyboard:{label:"键盘导航",sample1:{description:"虚拟滚动渲染，全键盘操作",label:"基本用法"}},PartialLoad:{label:"局部加载",sample1:{description:"虚拟滚动渲染，局部递增数据<br>",label:"基本用法"}},RowValid:{label:"数据校验 row",sample1:{description:'虚拟滚动渲染，可编辑表格<br><span class="red">当数据量非常大时，由于需要进行大量数据运算，所以数据校验或者获取数据...等函数执行会相对耗时</span>',label:"基本用法"}},Scroll:{label:"虚拟滚动",sample1:{description:'<span class="orange">虚拟滚动的取舍：牺牲提前编译数据的耗时，用来换取使用时的绝对流畅</span><br>\n      如果列较多请使用 <grid-api-link name="vue-xgrid"></grid-api-link>，使渲染性能达到最优，虚拟滚动只会渲染可视区域的数据，对于海量数据的性能提升非常大<br>\n      数据超大情况下必须使用：show-overflow，show-header-overflow 参数<br>\n      相关参数说明 {seq: 序号, $rowIndex: 获取渲染中的行索引, rowIndex: 获取真实的行索引, row: 获取行数据, column: 获取列配置, columnIndex: 获取真实列索引，$columnIndex:获取渲染中的列索引}',label:"基本用法"},sample2:{label:"配置调优",description:'手动调优，默认自动优化（<span class="red">注：默认的优化一般情况下是最流畅的，如果某些场景下需要手动调优就自行去更改参数即可，至于流不流畅取决于渲染参数</span>）<br>\n      通过指定 optimization ：{scrollX,scrollY} 适合的参数可以手动调优<br>\n      数据超大情况下必须使用：show-overflow，show-header-overflow 参数'}},ScrollCols:{label:"1 万行 1 万列",sample1:{description:'虚拟滚动渲染，加载 1 万行 1 万列<br>\n      大数据不建议使用双向绑定的 <table-api-link name="data"></table-api-link> 属性（vue 监听会大数据会短暂的卡顿），建议使用 loadData/loadColumn 函数<br>\n      <span class="red">注意：如果要启用横向虚拟滚动，不支持分组表头</span>',label:"基本用法"}},ScrollFullCols:{label:"10 万行 1 万列 + 固定列",sample1:{description:'虚拟滚动渲染，加载 10 万行 1 万列，左右固定列<br>\n      大数据不建议使用双向绑定的 <table-api-link name="data"></table-api-link> 属性（vue 监听会大数据会短暂的卡顿），建议使用 loadData/loadColumn 函数<br>\n      对于多选 type=checkbox 当数据量海量时应该绑定 checkField 属性渲染速度更快<br>\n      <span class="red">注意：如果要启用横向虚拟滚动，不支持分组表头</span>',label:"基本用法"}},ScrollFullRows:{label:"10 万行 + 固定列",sample1:{description:'虚拟滚动渲染，加载 10 万行，左右固定列<br>\n      大数据不建议使用双向绑定的 data 属性（vue 监听会大数据会短暂的卡顿），建议使用 loadData/reloadData 函数<br>\n      对于多选 type=checkbox 当数据量海量时应该绑定 checkField 属性渲染速度更快<br>\n      <span class="red">注意：如果要启用纵向虚拟滚动，所有的行高必须一致，否则无法兼容</span>',label:"基本用法"}},ScrollRows:{label:"1 万行",sample1:{description:'虚拟滚动渲染，加载 1 万行<br>\n      大数据不建议使用双向绑定的 <table-api-link name="data"></table-api-link> 属性（vue 监听会大数据会短暂的卡顿），建议使用 loadData/reloadData 函数<br>\n      data 和 loadData/reloadData 不应该同时使用，请根据数据量决定使用哪种方式，保证一致性<br>\n      <span class="red">注意：如果要启用纵向虚拟滚动，所有的行高必须一致，否则无法兼容</span>',label:"基本用法"}},Template:{label:"自定义模板",sample1:{description:'使用自定义模板渲染，通过 slots 属性编写 <a class="link" href="https://cn.vuejs.org/v2/guide/render-function.html#JSX" target="_blank">JSX</a> 模板或 <a class="link" href="https://cn.vuejs.org/v2/guide/render-function.html#%E8%99%9A%E6%8B%9F-DOM" target="_blank">VNode</a><br>\n      列：<br>\n      &nbsp;&nbsp;default：自定义内容模板（提前格式化好数据 > formatter > slots）<br>\n      &nbsp;&nbsp;header：自定义表头模板<br>\n      &nbsp;&nbsp;filter：自定义筛选模板（建议使用<router-link :to="{name: \'RendererAPI\'}">渲染器</router-link>，可以更好的复用）<br>\n      &nbsp;&nbsp;edit：自定义可编辑模板（建议使用<router-link :to="{name: \'RendererAPI\'}">渲染器</router-link>，可以更好的复用）<br>\n      工具栏：<br>\n      &nbsp;&nbsp;buttons：自定义按钮模板<br>\n      <span class="red">注意：请处理好单元格显示的内容，虚拟滚动无法支持动态行高</span>',label:"基本用法"}},Tree:{label:"虚拟树",sample1:{description:"虚拟树封装原理可供参考：实现支持大数据的虚拟树表格，基于表格组件很容易就可以封装一个高性能的虚拟树",label:"基本用法"}}},tree:{label:"树表格",Basic:{label:"基础",sample1:{description:"树表格，通过配置 tree-config 和指定列 tree-node 属性来开启树表格，还可以通过 trigger 指定触发方式",label:"基本用法"},sample2:{description:"默认展开所有树节点，通过 expand-config 参数设置默认展开树节点",label:"默认展开"}},CellValid:{label:"数据校验 cell",sample1:{description:"通过调用 validate 函数校验数据，edit-rules 校验规则配置",label:"基本用法"}},Edit:{label:"可编辑",sample1:{description:'可编辑树表格，还可以通过手动调用展开收起<br><span class="red">注：树形结构默认不支持 insert 相关方法，如果要往子节点插入数据，你可以把表格当成一个子组件进行封装，自行操作数据源即可</span>',label:"基本用法"}},Expand:{label:"展开行",sample1:{description:"树表格与展开行同时使用，非常简单就能实现很复杂的树形展开行",label:"基本用法"}},Fixed:{label:"固定列",sample1:{description:"树表格，固定列",label:"基本用法"}},ForceCellValid:{label:"数据校验 cell + 强制锁定"},ForceRowValid:{label:"数据校验 row + 强制锁定"},FullEdit:{label:"可编辑",sample1:{description:"可编辑树表格",label:"基本用法"}},GroupBy:{label:"分组统计",sample1:{description:"基于树表格实现分组统计",label:"基本用法"}},Highlight:{label:"键盘移动高亮行",sample1:{description:"键盘移动高亮行，设置 keyboard-config={isArrow: true} 启用方向键功能",label:"基本用法"}},Insert:{label:"插入数据",sample1:{description:'插入数据，简单的实现示例<br><span class="red">注：树形结构默认不支持 insert 相关方法，如果要往子节点插入数据，你可以把表格当成一个子组件进行封装，自行操作数据源即可</span>',label:"基本用法"}},Keyboard:{label:"键盘导航"},Lazy:{label:"懒加载",sample1:{description:"树表格的懒加载，通过配置 tree-config={hasLazy 和 lazyLoad} 加载方法来开启树形懒加载",label:"基本用法"}},Menu:{label:"快捷菜单",sample1:{description:'快捷菜单操作<br><span class="red">注：树形结构默认不支持 insert 相关方法，如果要往子节点插入数据，你可以把表格当成一个子组件进行封装，自行操作数据源即可</span>',label:"基本用法"}},Radio:{label:"单选框",sample1:{description:"使用 highlight-current-row 方式",label:"高亮行方式"},sample2:{description:"使用 radio 方式",label:"单选框方式"},sample3:{description:"当然也可以两种方式同时使用",label:"混合使用"}},RowValid:{label:"数据校验 row",sample1:{description:"通过调用 validate 函数校验数据，edit-rules 校验规则配置",label:"基本用法"}},Selection:{label:"复选框",sample1:{description:"多选树表格",label:"基本用法"},sample2:{description:"默认选中，通过指定 checkRowKeys 设置默认选中的行",label:"默认选中"},sample3:{description:"通过 checkStrictly 设置父子节点不互相关联",label:"父子不关联"},sample4:{description:"还可以通过 checkMethod 方法控制 CheckBox 是否允许用户手动勾选，还可以配置 labelField 列显示属性，禁止用户手动勾选，但是可以通过函数式调用强制勾选，该功能对于某些场景需要强制勾选指定行时非常有用",label:"允许勾选"}},Span:{label:"合并行或列"},Template:{label:"自定义模板",sample1:{description:"树表格，使用自定义模板渲染",label:"基本用法"}},Toolbar:{label:"增删改查 + 工具栏",sample1:{description:'增删改查、工具栏<br><span class="red">注：树形结构默认不支持 insert 相关方法，如果要往子节点插入数据，你可以把表格当成一个子组件进行封装，自行操作数据源即可</span>',label:"基本用法"}}}},mobileInstallDemo:{label:"快速上手",description:"",detail1:{label:"引入",description:'在页面头部VIY PC版代码后引入'}},scrollviewDemo:{label:"ScrollView 滚动列表",description:"用于模拟原生的滚动区域，并支持下拉刷新和加载更多",defatltText:"默认",customText:"自定义",detail2:{label:"使用指南",description1:"ScrollViewRefresh为组件库内置的下拉刷新组件，仅用于作为视觉展示，需在插槽refresh中使用，下拉刷新组件也可自定义",description2:"ScrollViewMore为组件库内置的加载更多组件，仅用于作为视觉展示，需在插槽more中使用，加载更多组件也可自定义",description3:"组件容器需具有高度，否则会出现无法滚动或回弹问题。更多使用的常见问题请查看附录"},samples1:{label:"基础用法",description:"实现纵向滚动"},samples2:{label:"横向滚动",description:""},samples3:{label:"下拉刷新",description:""},samples4:{label:"上拉加载",description:""},samples5:{label:"粘性标题",description:""},samples6:{label:"配合TabBar",description:""},samples7:{label:"手动初始化",description:""},attrsinfo:{row1column2:"水平滚动",row2column2:"垂直滚动",row3column2:"可回弹",row4column2:"内容发生变化时自动重置滚动区域尺寸",row5column2:"手动初始化",row6column2:"触发到达底部的提前量",row7column2:"初始化时立即触发是否到达底部检查",row8column2:"触发滚动的角度值范围",row9column2:"防止浏览器默认滚动"},refreshAttrs:{row1column2:"距离顶部的距离，输入值仅为数字",row2column2:"释放刷新的状态",row3column2:"刷新状态",row4column2:"下拉刷新文本内容",row4column5:"下拉刷新",row5column2:"释放刷新文本内容",row5column5:"释放刷新",row6column2:"刷新中的文本内容",row6column5:"刷新中...",row7column2:"进度条颜色"},moreAttrs:{row1column2:"全部已加载",row2column2:"加载中的文本内容",row2column5:"更多加载中...",row3column2:"全部已加载的文本内容",row3column5:"全部已加载"},slotInfo:{default:"滚动区域内容槽。当内容更改时，需要调用reflowScroller来重置滚动区域。具体请参阅reflowScroller refresh。",refresh:"下拉刷新组件槽，您可以使用slot-scoped来获得相关的滚动状态（当槽作用域不兼容时，滚动状态也可以通过事件动态设置），如下所示：",more:"更多加载组件槽，通过实际加载情况，在事件中改变isFinished的值。默认为false。"},eventInfo:{row1column2:"距左侧距离，输入值仅为数字",row2column2:"距顶部距离，输入值仅为数字",detail1:"参数说明",detail2:"释放刷新事件",detail3:"刷新事件",detail4:"加载结束事件"},methodInfo:{row1column2:"距左侧距离，输入值仅为数字",row2column2:"距顶部距离，输入值仅为数字",row3column2:"使用动画",detail1:"初始化滚动区域。（当manual-init被设置为true时使用。）",detail2:"重置滚动区域，需要在常规滚动区域的内容发生更改后调用该区域。",detail3:"滚动到指定位置，以下为参数说明：",detail4:"获取滚动位置，其返回对象为 {left: number, top: number}",detail5:"开启手动下拉刷新",detail6:"下拉刷新结束方法，，示例代码：",detail7:"上拉加载结束方法，示例代码："}},actionsheetDemo:{label:"ActionSheet 动作面板",description:"",defatltText:"默认",customText:"自定义",detail1:{label:"介绍",description:"底部弹起的模态面板，包含与当前情境相关的多个选项。"},attrsInfo:{row1column2:"是否显示动作面板",row2column2:"面板选项列表",row3column2:"顶部标题",row4column2:"取消按钮文字",row5column2:"选项上方的描述信息",row6column2:"关闭图标名称或图片链接",row7column2:"动画时长，单位秒",row8column2:"是否显示圆角",row9column2:"是否显示遮罩层",row10column2:"是否锁定背景滚动",row11column2:"是否在显示弹层时才渲染节点",row12column2:"是否在页面回退时自动关闭",row13column2:"是否在点击选项后关闭",row14column2:"是否在点击遮罩层后关闭",row15column2:"是否开启底部安全区适配",row16column2:"指定挂载的节点"},actionsInfo:{description:"actions 属性是由对象构成的数组，数组中的每个对象配置一列，对象可以包含以下值：",row1column2:"标题",row2column2:"二级标题",row3column2:"选项文字颜色",row4column2:"为对应列添加额外的 class",row5column2:"是否为加载状态",row6column2:"是否为禁用状态"},eventInfo:{row1column2:"点击选项时触发，禁用或加载状态下不会触发",row2column2:"点击取消按钮时触发",row3column2:"打开面板时触发",row4column2:"关闭面板时触发",row5column2:"打开面板且动画结束后触发",row6column2:"关闭面板且动画结束后触发",row7column2:"点击遮罩层时触发"}},navbarDemo:{label:"NavBar 导航栏",description:"",defatltText:"默认",customText:"自定义",samples1:{label:"基础用法",description:""},samples2:{label:"插槽的使用",description:"使用插槽，通过插槽自定义导航栏两侧的内容"},attrsInfo:{row1column2:"标题",row2column2:"左侧文案",row3column2:"右侧文案",row4column2:"是否显示左侧箭头",row5column2:"是否显示下边框",row6column2:"是否固定在顶部",row7column2:"固定顶部时，是否在标签位置生成一个等高的占位元素",row8column2:"元素 z-index"},slotInfo:{row1column2:"自定义标题",row2column2:"自定义左侧区域内容",row3column2:"自定义右侧区域内容"},eventInfo:{row1column2:"点击左侧按钮时触发",row2column2:"点击右侧按钮时触发"}},tabbarDemo:{label:"TabBar 标签栏",description:"",defatltText:"默认",customText:"自定义",samples1:{label:"基础用法",description:""},samples2:{label:"通过名称匹配",description:""},samples3:{label:"微标提示",description:""},samples4:{label:"自定义图标",description:"通过icon插槽自定义图标，可以通过 slot-scope 判断标签是否选中"},samples5:{label:"自定义颜色+监听切换事件用法",description:""},samples6:{label:"路由模式",description:"用于搭配vue-router使用。路由模式下会匹配页面路径和标签的to属性，并自动选中对应的标签"},attrsInfo:{row1column2:"当前选中标签的名称或索引值",row2column2:"是否固定在底部",row3column2:"是否显示外边框",row4column2:"元素 z-index",row5column2:"选中标签的颜色",row6column2:"未选中标签的颜色",row7column2:"固定在底部时，是否在标签位置生成一个等高的占位元素",row8column2:"是否开启底部安全区适配，设置 fixed 时默认开启",row9column2:"是否开启路由模式"},eventInfo:{row1column2:"切换标签时触发",row1column3:"active: 当前选中标签的名称或索引值"},tabBarItemAttrsInfo:{row1column2:"标签名称，作为匹配的标识符",row1column5:"当前标签的索引值",row2column2:"图标名称或图片链接",row3column2:"是否显示图标右上角小红点",row4column2:"图标右上角徽标的内容",row5column2:"图标右上角徽标的内容（已废弃，请使用 badge 属性）",row6column2:"点击后跳转的链接地址",row7column2:"点击后跳转的目标路由对象，同 vue-router 的 to 属性",row8column2:"是否在跳转时替换当前页面历史"},tabBarItemSlotInfo:{row1column2:"自定义图标,其中active表示是否为选中标签"}},celllayoutDemo:{label:"CellLayout 宫格",description:"",defatltText:"默认",customText:"自定义",detail1:{label:"介绍",description:"宫格可以在水平方向上把页面分隔成等宽度的区块，用于展示内容或进行页面导航"},samples1:{label:"基础用法",description:"默认一行展示四个格子,有边框"},samples2:{label:"自定义列数",description:"可以通过column-num自定义列数"},samples3:{label:"自定义显示内容",description:"通过插槽可以自定义格子展示的内容"},samples4:{label:"方形格子+自定义（间距+列数）+微标提示",description:""},samples5:{label:"页面导航",description:"使用url属性注意是跳转页面的路径"},attrsInfo:{row1column2:"列数",row2column2:"图标大小，默认单位为px",row3column2:"格子之间的间距，默认单位为px",row4column2:"是否显示边框",row5column2:"是否将格子内容居中显示",row6column2:"是否将格子固定为正方形",row7column2:"是否开启格子点击反馈"},celllayoutitemAttrsInfo:{row1column2:"文字",row2column2:"图标名称或图片链接",row3column2:"图标颜色",row4column2:"是否显示图标右上角小红点",row5column2:"图标右上角徽标的内容",row6column2:"图标右上角徽标的内容（已废弃，请使用 badge 属性）",row7column2:"点击后跳转的链接地址",row8column2:"点击后跳转的目标路由对象，同 vue-router 的 to 属性",row9column2:"是否在跳转时替换当前页面历史"},celllayoutitemEventInfo:{row1column2:"点击格子时触发"},celllayoutitemSlotsInfo:{row1column2:"自定义宫格的所有内容",row2column2:"自定义图标",row3column2:"自定义文字"}},swipecellDemo:{label:"SwipeCell 滑动单元格",description:"",defatltText:"默认",customText:"自定义",samples1:{label:"基础用法",description:""},samples2:{label:"自定义内容",description:""},samples3:{label:"异步关闭调用",description:"通过传入before-close回调函数，可以自定义两侧滑动内容关闭时的行为"},attrsInfo:{row1column2:"标识符，可以在事件参数中获取到",row2column2:"指定左侧滑动区域宽度，单位为px",row3column2:"指定右侧滑动区域宽度，单位为px",row4column2:"关闭前的回调函数",row5column2:"是否禁用滑动",row6column2:"是否阻止滑动事件冒泡"},beforecloseAttrsInfo:{description:"beforeClose 的第一个参数为对象，对象中包含以下属性：",row1column2:"标识符",row2column2:"关闭时的点击位置 (left right cell outside)",row3column2:"SwipeCell 实例，用于调用实例方法"},slotsInfo:{row1column2:"自定义显示内容",row2column2:"左侧滑动内容",row3column2:"右侧滑动内容"},eventInfo:{row1column2:"点击时触发",row1column3:"关闭时的点击位置 (left right cell outside)",row2column2:"打开时触发",row3column2:"关闭时触发"},methodInfo:{description:"通过 ref 可以获取到 SwipeCell 实例并调用实例方法，详见组件实例方法",row1column2:"打开单元格侧边栏,其参数 position: left | right",row2column2:"收起单元格侧边栏"}},texticonDemo:{label:"TextIcon 文本图标",description:"",defatltText:"默认",customText:"自定义",samples1:{label:"基础用法",description:""},samples2:{label:"颜色+字体大小设置",description:""},samples3:{label:"文本排布方式(默认文本在下方)",description:""},samples4:{label:"文本排布方式+文本边距设置（默认为2px）",description:""},attrsInfo:{row1column2:"图标形状",row2column2:"图标颜色",row3column2:"图标大小",row4column2:"是否有圆点标记",row5column2:"角标内容",row6column2:"文本名称",row7column2:"文本字体颜色",row8column2:"文本字体大小",row9column2:"文本相对于图标的位置，分别有 'top' | 'right' | 'bottom' | 'left'",row10column2:"文本距离图标的边距"},eventInfo:{row1column2:"点击时触发"}},stepperDemo:{label:"Stepper 步进器",description:"",defatltText:"默认",customText:"自定义",detail1:{label:"介绍",description:"步进器由增加按钮、减少按钮和输入框组成，用于在一定范围内输入、调整数字"},samples1:{label:"基础用法",description:""},samples2:{label:"步长设置",description:"通过step属性设置每次点击增加或减少按钮时变化的值，默认值为1，间隔设置为3"},samples3:{label:"限制输入范围",description:"通过min和max属性限制输入值的范围"},samples4:{label:"限制输入整数",description:"设置integer属性后，输入框将限制只能输入整数"},samples5:{label:"禁用状态",description:"通过设置disabled属性来禁用步进器，禁用状态下无法点击按钮或修改输入框"},samples6:{label:"禁用输入框",description:"通过设置disable-input属性来禁用输入框，此时按钮仍然可以点击"},samples7:{label:"固定小数位数",description:"通过设置decimal-length属性可以保留固定的小数位数"},samples8:{label:"自定义大小",description:"通过input-width属性设置输入框宽度，通过button-size属性设置按钮大小和输入框高度"},samples9:{label:"异步变更",description:"如果需要异步地修改输入框的值，可以设置async-change属性，并在change事件中手动修改value"},attrsInfo:{row1column2:"当前输入的值",row2column2:"最小值",row3column2:"最大值",row4column2:"初始值，当 v-model 为空时生效",row5column2:"步长，每次点击时改变的值",row6column2:"标识符，可以在change事件回调参数中获取",row7column2:"输入框宽度，默认单位为px",row8column2:"按钮大小以及输入框高度，默认单位为px",row9column2:"固定显示的小数位数",row10column2:"是否只允许输入整数",row11column2:"是否禁用步进器",row12column2:"是否禁用增加按钮",row13column2:"是否禁用减少按钮",row14column2:"是否禁用输入框",row15column2:"是否开启异步变更，开启后需要手动控制输入值",row16column2:"是否显示增加按钮",row17column2:"是否显示减少按钮",row18column2:"是否开启长按手势"},eventInfo:{row1column2:"当绑定值变化时触发的事件",row2column2:"点击不可用的按钮时触发",row3column2:"点击增加按钮时触发",row4column2:"点击减少按钮时触发",row5column2:"输入框聚焦时触发",row6column2:"输入框失焦时触发"}},indexbarDemo:{label:"IndexBar 索引栏",description:"",defatltText:"默认",customText:"自定义",samples1:{label:"基础用法",description:""},attrsInfo:{row1column2:"索引字符列表",row2column2:"z-index 层级",row3column2:"是否开启锚点自动吸顶",row4column2:"锚点自动吸顶时与顶部的距离",row5column2:"索引字符高亮颜色"},eventInfo:{row1column2:"选中字符时触发",row2column2:"index: 索引字符"},indexanchorAttrsInfo:{row1column2:"索引字符"},indexanchorSlotsInfo:{row1column2:"锚点位置显示内容，默认为索引字符"}},skeletonDemo:{label:"Skeleton 骨架屏",description:"",defatltText:"默认",customText:"自定义",samples1:{label:"基础用法",description:""},samples2:{label:"显示头像",description:"通过avatar属性显示头像占位图"},samples3:{label:"展示子组件",description:"将loading属性设置成false表示内容加载完成，此时会隐藏占位图，并显示Skeleton的子组件,1秒后显示"},attrsInfo:{row1column2:"段落占位图行数",row2column2:"段落占位图宽度，可传数组来设置每一行的宽度",row3column2:"是否显示标题占位图",row4column2:"是否显示头像占位图",row5column2:"是否显示骨架屏，传 false 时会展示子组件内容",row6column2:"是否开启动画",row7column2:"标题占位图宽度",row8column2:"头像占位图大小",row9column2:"头像占位图形状，可选值为square"}}}},"./demo/DialogDemo.js":
/*!****************************!*\
  !*** ./demo/DialogDemo.js ***!
  \****************************/
/*! no static exports found */function(e,n,t){"use strict";e.exports={path:"/dialog",name:"dialog",head:{label:"dialogDemo.label",description:"dialogDemo.description"},samples:[{id:"dialog1",label:"dialogDemo.samples1.label",description:"dialogDemo.samples1.description",template:'<div class="source"><vue-button type="primary" @click="dialogVisible = true">Click Me</vue-button><vue-dialog title="This is title" v-model="dialogVisible" size="tiny" show-close :before-close="handleClose"><span slot="header">This is header</span><span>This is a message</span><span slot="footer"><vue-button @click="dialogVisible = false">Cancel</vue-button><vue-button type="primary" @click="dialogVisible = false">Complete</vue-button></span></vue-dialog></div>',parameter:{data:function(){return{dialogVisible:!1,handleClose:function(e){this.$confirm({message:"Are you sure to close this dialog?"}).then(function(){e()}).catch(function(){e(!1)})}}}},code:'<vue-button type="primary" @click="dialogVisible = true">Click Me</vue-button>\n<vue-dialog title="This is title" v-model="dialogVisible" size="tiny" show-close :before-close="handleClose">\n  <span slot="header">This is header</span>\n  <span>This is a message</span>\n  <span slot="footer" class="dialog-footer">\n    <vue-button @click="dialogVisible = false">Cancel</vue-button>\n    <vue-button type="primary" @click="dialogVisible = false">Complete</vue-button>\n  </span>\n</vue-dialog>\n\n<script>\n  new Vue({\n    data: function() {\n      return {\n        dialogVisible: false,\n        handleClose: function(done) {\n          this.$confirm({\n            message: "Are you sure to close this dialog?"\n          }).then(function() {\n            done();\n          }).catch(function() {\n            done(false);\n          });\n        }\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"dialog2",label:"dialogDemo.samples2.label",description:"dialogDemo.samples2.description",template:'<div class="source"><vue-button type="primary" @click="dialogVisible = true">Click Me</vue-button><vue-dialog title="Shipping address" v-model="dialogVisible" show-close><vue-xtable :data="gridData"><vue-xtable-column field="date" title="Date" width="150"></vue-xtable-column><vue-xtable-column field="name" title="Name" width="150"></vue-xtable-column><vue-xtable-column field="address" title="Address"  width="350"></vue-xtable-column></vue-xtable></vue-dialog></div>',parameter:{data:function(){return{gridData:[{date:"2017-07-02",name:"John Smith",address:"No.1518, Jinshajiang Road"},{date:"2017-07-04",name:"John Smith",address:"No.1518, Jinshajiang Road"},{date:"2017-07-01",name:"John Smith",address:"No.1518, Jinshajiang Road"},{date:"2017-07-03",name:"John Smith",address:"No.1518, Jinshajiang Road"}],dialogVisible:!1}}},code:'<vue-button type="primary" @click="dialogVisible = true">Click Me</vue-button>\n<vue-dialog title="Shipping address" v-model="dialogVisible" show-close>\n  <vue-xtable :data="gridData">\n    <vue-xtable-column field="date" title="Date" width="150"></vue-xtable-column>\n    <vue-xtable-column field="name" title="Name" width="200"></vue-xtable-column>\n    <vue-xtable-column field="address" title="Address" width="350"></vue-xtable-column>\n  </vue-xtable>\n</vue-dialog>\n<script>\n  new Vue({\n    data: function() {\n      return {\n        gridData: [{\n          date: "2017-07-02",\n          name: "John Smith",\n          address: "No.1518, Jinshajiang Road"\n        }, {\n          date: "2017-07-04",\n          name: "John Smith",\n          address: "No.1518, Jinshajiang Road"\n        }, {\n          date: "2017-07-01",\n          name: "John Smith",\n          address: "No.1518, Jinshajiang Road"\n        }, {\n          date: "2017-07-03",\n          name: "John Smith",\n          address: "No.1518, Jinshajiang Road"\n        }],\n        dialogVisible: false\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"dialog3",label:"Attributes",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"v-model",column2:"dialogDemo.samples3.row1column2",column3:"Boolean",column4:"",column5:""},{column1:"title",column2:"dialogDemo.samples3.row2column2",column3:"String",column4:"",column5:""},{column1:"size",column2:"dialogDemo.samples3.row3column2",column3:"String",column4:"tiny/small/large/full",column5:"small"},{column1:"top",column2:"dialogDemo.samples3.row4column2",column3:"String",column4:"",column5:"15%"},{column1:"custom-class",column2:"dialogDemo.samples3.row5column2",column3:"String",column4:"",column5:""},{column1:"close-on-click-modal",column2:"dialogDemo.samples3.row6column2",column3:"Boolean",column4:"",column5:"false"},{column1:"close-on-press-escape",column2:"dialogDemo.samples3.row7column2",column3:"Boolean",column4:"",column5:"true"},{column1:"show-close",column2:"dialogDemo.samples3.row8column2",column3:"Boolean",column4:"",column5:"false"},{column1:"before-close",column2:"dialogDemo.samples3.row9column2",column3:"dialogDemo.samples3.row9column3",column4:"",column5:""},{column1:"cleanness-modal",column2:"dialogDemo.samples3.row10column2",column3:"Boolean",column4:"",column5:"false"},{column1:"draggable",column2:"dialogDemo.samples3.row11column2",column3:"Boolean",column4:"",column5:"true"}]}}},notshowmeta:!0},{id:"dialog4",label:"Slots",template:'<slot-table :data="tableData"></slot-table>',parameter:{data:function(){return{tableData:[{column1:"",column2:"dialogDemo.samples4.row1column2"},{column1:"header",column2:"dialogDemo.samples4.row2column2"},{column1:"footer",column2:"dialogDemo.samples4.row3column2"}]}}},notshowmeta:!0},{id:"dialog5",label:"Events",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"close",column2:"dialogDemo.samples5.row1column2",column3:""},{column1:"open",column2:"dialogDemo.samples5.row2column2",column3:""}]}}},notshowmeta:!0}]}},"./demo/DraggableDemo.js":
/*!*******************************!*\
  !*** ./demo/DraggableDemo.js ***!
  \*******************************/
/*! no static exports found */function(e,n,t){"use strict";e.exports={path:"/draggable",name:"draggable",head:{label:"draggableDemo.label",description:"draggableDemo.description"},samples:[{id:"draggable1",label:"draggableDemo.samples1.label",description:"draggableDemo.samples1.description",template:'<div class="source"><vue-note v-draggable title="I can move" >Move anywhere...</vue-note><vue-xtable v-draggable draggable-cancel-selector=".vue-xtable-table--body-wrapper" :data="tableData" border stripe><vue-xtable-column field="date" title="Date" width="180"></vue-xtable-column><vue-xtable-column field="name" title="Name" width="180"></vue-xtable-column><vue-xtable-column field="address" title="Address"></vue-xtable-column></vue-xtable></div>',parameter:{data:function(){return{tableData:[{date:"2016-05-02",name:"John Smith",address:"No.1518,  Jinshajiang Road, Putuo District"},{date:"2016-05-04",name:"John Smith",address:"No.1518,  Jinshajiang Road, Putuo District"},{date:"2016-05-01",name:"John Smith",address:"No.1518,  Jinshajiang Road, Putuo District"}]}}},code:'<vue-note v-draggable title="I can move" >Move anywhere...</vue-note>\n<vue-xtable v-draggable draggable-cancel-selector=".vue-table__body-wrapper" :data="tableData" border stripe style="width: 100%">\n  <vue-xtable-column field="date" title="Date" width="180"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" width="180"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" width="350"></vue-xtable-column>\n</vue-xtable>\n\n<script>\n  new Vue({\n    data: function() {\n      return {\n        tableData: [{\n          date: "2016-05-02",\n          name: "John Smith",\n          address: "No.1518,  Jinshajiang Road, Putuo District"\n        }, {\n          date: "2016-05-04",\n          name: "John Smith",\n          address: "No.1518,  Jinshajiang Road, Putuo District"\n        }, {\n          date: "2016-05-01",\n          name: "John Smith",\n          address: "No.1518,  Jinshajiang Road, Putuo District"\n        }]\n      };\n    }\n  }).$mount();\n<\/script>'},{id:"draggable2",label:"Attributes",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"draggable-cancel-selector",column2:"draggableDemo.samples2.row1column2",column3:"String",column4:"",column5:""}]}}},notshowmeta:!0}]}},"./demo/DropdownDemo.js":
/*!******************************!*\
  !*** ./demo/DropdownDemo.js ***!
  \******************************/
/*! no static exports found */function(e,n,t){"use strict";e.exports={path:"/dropdown",name:"dropdown",head:{label:"dropdownDemo.label",description:"dropdownDemo.description"},samples:[{id:"dropdown1",label:"dropdownDemo.samples1.label",description:"dropdownDemo.samples1.description",template:'<div class="source"><vue-row><vue-col :span="6"><vue-dropdown><span class="dropdown-link">Dropdown List<i class="vue-icon-arrow-down vue-icon--right"></i></span><vue-dropdown-menu slot="dropdown"><vue-dropdown-item>YAMAHA</vue-dropdown-item><vue-dropdown-item disabled>HONDA</vue-dropdown-item><vue-dropdown-item divided>TOYOTA</vue-dropdown-item></vue-dropdown-menu></vue-dropdown></vue-col></vue-row></div>',code:'<vue-dropdown>\n  <span class="dropdown-link">\n    Dropdown List\n    <i class="vue-icon-arrow-down vue-icon--right"></i>\n  </span>\n  <vue-dropdown-menu slot="dropdown">\n    <vue-dropdown-item>YAMAHA</vue-dropdown-item>\n    <vue-dropdown-item disabled>HONDA</vue-dropdown-item>\n    <vue-dropdown-item divided>TOYOTA</vue-dropdown-item>\n  </vue-dropdown-menu>\n</vue-dropdown>'},{id:"dropdown2",label:"dropdownDemo.samples2.label",description:"dropdownDemo.samples2.description",template:'<div class="source"><vue-row><vue-col :span="6"><vue-dropdown><vue-button type="primary">Dropdown List<i class="vue-icon-arrow-down vue-icon--right"></i></vue-button><vue-dropdown-menu slot="dropdown"><vue-dropdown-item>YAMAHA</vue-dropdown-item><vue-dropdown-item disabled>HONDA</vue-dropdown-item><vue-dropdown-item divided>TOYOTA</vue-dropdown-item></vue-dropdown-menu></vue-dropdown></vue-col><vue-col :span="6"><vue-dropdown split-button type="primary" @click="handleClick">Dropdown List<vue-dropdown-menu slot="dropdown"><vue-dropdown-item>YAMAHA</vue-dropdown-item><vue-dropdown-item>HONDA</vue-dropdown-item><vue-dropdown-item>TOYOTA</vue-dropdown-item></vue-dropdown-menu></vue-dropdown></vue-col></vue-row></div>',parameter:{methods:{handleClick:function(){this.$notify({title:"button click"})}}},code:'<vue-dropdown>\n  <vue-button type="primary">\n    Dropdown List\n    <i class="vue-icon-arrow-down vue-icon--right"></i>\n  </vue-button>\n  <vue-dropdown-menu slot="dropdown">\n    <vue-dropdown-item>YAMAHA</vue-dropdown-item>\n    <vue-dropdown-item disabled>HONDA</vue-dropdown-item>\n    <vue-dropdown-item divided>TOYOTA</vue-dropdown-item>\n  </vue-dropdown-menu>\n</vue-dropdown>\n\n<vue-dropdown split-button type="primary" @click="handleClick">\n  Dropdown List\n  <vue-dropdown-menu slot="dropdown">\n    <vue-dropdown-item>YAMAHA</vue-dropdown-item>\n    <vue-dropdown-item>HONDA</vue-dropdown-item>\n    <vue-dropdown-item>TOYOTA</vue-dropdown-item>\n  </vue-dropdown-menu>\n</vue-dropdown>\n\n<script>\n  new Vue({\n    methods: {\n      handleClick: function() {\n        this.$notify({title: "button click"});\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"dropdown3",label:"dropdownDemo.samples3.label",description:"dropdownDemo.samples3.description",template:'<div class="source"><vue-row class="margin-bottom20" type="flex" justify="center"><vue-col :span="6"><span class="demonstration">{{$t(\'dropdownDemo.samples3.hoverLabel\')}}</span></vue-col><vue-col :span="16"><vue-dropdown><vue-button type="primary">Dropdown List<i class="vue-icon-arrow-down vue-icon--right"></i></vue-button><vue-dropdown-menu slot="dropdown"><vue-dropdown-item>YAMAHA</vue-dropdown-item><vue-dropdown-item>HONDA</vue-dropdown-item><vue-dropdown-item>TOYOTA</vue-dropdown-item></vue-dropdown-menu></vue-dropdown></vue-col></vue-row><vue-row type="flex" justify="center"><vue-col :span="6"><span class="demonstration">{{$t(\'dropdownDemo.samples3.clickLabel\')}}</span></vue-col><vue-col :span="16"><vue-dropdown trigger="click"><vue-button type="primary">Dropdown List<i class="vue-icon-arrow-down vue-icon--right"></i></vue-button><vue-dropdown-menu slot="dropdown"><vue-dropdown-item>YAMAHA</vue-dropdown-item><vue-dropdown-item>HONDA</vue-dropdown-item><vue-dropdown-item>TOYOTA</vue-dropdown-item></vue-dropdown-menu></vue-dropdown></vue-col></vue-row></div>',code:'<span class="demonstration">{{$t(\'dropdownDemo.samples3.hoverLabel\')}}</span>\n<vue-dropdown>\n  <vue-button type="primary">\n    Dropdown List\n    <i class="vue-icon-arrow-down vue-icon--right"></i>\n  </vue-button>\n  <vue-dropdown-menu slot="dropdown">\n    <vue-dropdown-item>YAMAHA</vue-dropdown-item>\n    <vue-dropdown-item>HONDA</vue-dropdown-item>\n    <vue-dropdown-item>TOYOTA</vue-dropdown-item>\n  </vue-dropdown-menu>\n</vue-dropdown>\n<span class="demonstration">{{$t(\'dropdownDemo.samples3.clickLabel\')}}</span>\n<vue-dropdown trigger="click">\n  <vue-button type="primary">\n    Dropdown List\n    <i class="vue-icon-arrow-down vue-icon--right"></i>\n  </vue-button>\n  <vue-dropdown-menu slot="dropdown">\n    <vue-dropdown-item>YAMAHA</vue-dropdown-item>\n    <vue-dropdown-item>HONDA</vue-dropdown-item>\n    <vue-dropdown-item>TOYOTA</vue-dropdown-item>\n  </vue-dropdown-menu>\n</vue-dropdown>'},{id:"dropdown4",label:"dropdownDemo.samples4.label",description:"dropdownDemo.samples4.description",template:'<div class="source"><vue-row><vue-col :span="6"><vue-dropdown :hide-on-click="false"><vue-button type="primary">Dropdown List<i class="vue-icon-arrow-down vue-icon--right"></i></vue-button><vue-dropdown-menu slot="dropdown"><vue-dropdown-item>YAMAHA</vue-dropdown-item><vue-dropdown-item>HONDA</vue-dropdown-item><vue-dropdown-item>TOYOTA</vue-dropdown-item></vue-dropdown-menu></vue-dropdown></vue-col></vue-row></div>',code:'<vue-dropdown :hide-on-click="false">\n  <vue-button type="primary">\n    Dropdown List\n    <i class="vue-icon-arrow-down vue-icon--right"></i>\n  </vue-button>\n  <vue-dropdown-menu slot="dropdown">\n    <vue-dropdown-item>YAMAHA</vue-dropdown-item>\n    <vue-dropdown-item>HONDA</vue-dropdown-item>\n    <vue-dropdown-item>TOYOTA</vue-dropdown-item>\n  </vue-dropdown-menu>\n</vue-dropdown>'},{id:"dropdown5",label:"dropdownDemo.samples5.label",description:"dropdownDemo.samples5.description",template:'<div class="source"><vue-row><vue-col :span="6"><vue-dropdown @command="handleCommand"><vue-button type="primary">Dropdown List<i class="vue-icon-arrow-down vue-icon--right"></i></vue-button><vue-dropdown-menu slot="dropdown"><vue-dropdown-item command="YMA">YAMAHA</vue-dropdown-item><vue-dropdown-item command="HD">HONDA</vue-dropdown-item><vue-dropdown-item command="TYT">TOYOTA</vue-dropdown-item></vue-dropdown-menu></vue-dropdown></vue-col></vue-row></div>',parameter:{methods:{handleCommand:function(e){this.$notify({title:"click on item "+e})}}},code:'<vue-dropdown @command="handleCommand">\n  <vue-button type="primary">\n    Dropdown List\n    <i class="vue-icon-arrow-down vue-icon--right"></i>\n  </vue-button>\n  <vue-dropdown-menu slot="dropdown">\n    <vue-dropdown-item command="YMA">YAMAHA</vue-dropdown-item>\n    <vue-dropdown-item command="HD">HONDA</vue-dropdown-item>\n    <vue-dropdown-item command="TYT">TOYOTA</vue-dropdown-item>\n  </vue-dropdown-menu>\n</vue-dropdown>\n\n<script>\n  new Vue({\n    methods: {\n      handleCommand: function() {\n        this.$notify({title:"click on item " + command});\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"dropdown6",label:"Dropdown Attributes",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"type",column2:"dropdownDemo.samples6.row1column2",column3:"String",column4:"primary, success, warning, danger, info, text",column5:""},{column1:"size",column2:"dropdownDemo.samples6.row2column2",column3:"String",column4:"large, small, mini",column5:""},{column1:"split-button",column2:"dropdownDemo.samples6.row3column2",column3:"Boolean",column4:"",column5:"false"},{column1:"menu-align",column2:"dropdownDemo.samples6.row4column2",column3:"String",column4:"start, end",column5:"end"},{column1:"trigger",column2:"dropdownDemo.samples6.row5column2",column3:"String",column4:"hover, click",column5:"hover"},{column1:"hide-on-click",column2:"dropdownDemo.samples6.row6column2",column3:"Boolean",column4:"",column5:"true"}]}}},notshowmeta:!0},{id:"dropdown7",label:" Dropdown Events",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"click",column2:"dropdownDemo.samples7.row1column2",column3:""},{column1:"command",column2:"dropdownDemo.samples7.row2column2",column3:"dropdownDemo.samples7.row2column3"},{column1:"visible-change",column2:"dropdownDemo.samples7.row3column2",column3:"dropdownDemo.samples7.row3column3"}]}}},notshowmeta:!0},{id:"dropdown8",label:"Dropdown Menu Item Attributes",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"command",column2:"dropdownDemo.samples8.row1column2",column3:"String",column4:"",column5:""},{column1:"disabled",column2:"dropdownDemo.samples8.row2column2",column3:"Boolean",column4:"",column5:"false"},{column1:"divided",column2:"dropdownDemo.samples8.row3column2",column3:"Boolean",column4:"",column5:"false"}]}}},notshowmeta:!0}]}},"./demo/FormDemo.js":
/*!**************************!*\
  !*** ./demo/FormDemo.js ***!
  \**************************/
/*! no static exports found */function(e,n,t){"use strict";var l={path:"/form",name:"form",head:{label:"formDemo.label",description:"formDemo.description"},samples:[{id:"form1",label:"formDemo.samples1.label",description:"formDemo.samples1.description",template:'<div class="source"><vue-form ref="form" :model="form" label-width="150px"><vue-form-item label="Activity name"><vue-input v-model="form.name"></vue-input></vue-form-item><vue-form-item label="Activity zone"><vue-select clearable v-model="form.region" placeholder="please select your zone"><vue-option label="Zone one" value="shanghai"></vue-option><vue-option label="Zone two" value="beijing"></vue-option></vue-select></vue-form-item><vue-form-item label="Activity time"><vue-col :span="11"><vue-date-picker type="date" placeholder="Pick a date" v-model="form.date1"></vue-date-picker></vue-col><vue-col style="text-align:center;" :span="2">-</vue-col><vue-col :span="11"><vue-time-picker type="fixed-time" placeholder="Pick a time" v-model="form.date2"></vue-time-picker></vue-col></vue-form-item><vue-form-item label="Instant delivery"><vue-switch on-text="" off-text="" v-model="form.delivery"></vue-switch></vue-form-item><vue-form-item label="Activity type"><vue-checkbox-group v-model="form.type"><vue-checkbox label="Online activities" name="type"></vue-checkbox><vue-checkbox label="Promotion activities" name="type"></vue-checkbox><vue-checkbox label="Offline activities" name="type"></vue-checkbox></vue-checkbox-group></vue-form-item><vue-form-item label="Resources"><vue-radio-group v-model="form.resource"><vue-radio label="Sponsor"></vue-radio><vue-radio label="Venue"></vue-radio></vue-radio-group></vue-form-item><vue-form-item label="Activity form"><vue-input type="textarea" v-model="form.desc"></vue-input></vue-form-item><vue-form-item><vue-button type="primary" @click="onSubmit">Create</vue-button><vue-button @click="onCancel">Cancel</vue-button></vue-form-item></vue-form></div>',parameter:{data:function(){return{form:{name:"",region:"",date1:"",date2:"",delivery:!1,type:[],resource:"",desc:""}}},methods:{onSubmit:function(){this.$notify({title:"submit!"})},onCancel:function(){this.$notify({title:"cancel!"})}}},code:'<vue-form ref="form" :model="form" label-width="150px">\n  <vue-form-item label="Activity name">\n    <vue-input v-model="form.name"></vue-input>\n  </vue-form-item>\n  <vue-form-item label="Activity zone">\n    <vue-select clearable v-model="form.region" placeholder="please select your zone">\n      <vue-option label="Zone one" value="shanghai"></vue-option>\n      <vue-option label="Zone two" value="beijing"></vue-option>\n    </vue-select>\n  </vue-form-item>\n  <vue-form-item label="Activity time">\n    <vue-col :span="11">\n      <vue-date-picker type="date" placeholder="Pick a date" v-model="form.date1"></vue-date-picker>\n    </vue-col>\n    <vue-col style="text-align:center;" :span="2">-</vue-col>\n    <vue-col :span="11">\n      <vue-time-picker type="fixed-time" placeholder="Pick a time" v-model="form.date2"></vue-time-picker>\n    </vue-col>\n  </vue-form-item>\n  <vue-form-item label="Instant delivery">\n    <vue-switch on-text="" off-text="" v-model="form.delivery"></vue-switch>\n  </vue-form-item>\n  <vue-form-item label="Activity type">\n    <vue-checkbox-group v-model="form.type">\n      <vue-checkbox label="Online activities" name="type"></vue-checkbox>\n      <vue-checkbox label="Promotion activities" name="type"></vue-checkbox>\n      <vue-checkbox label="Offline activities" name="type"></vue-checkbox>\n    </vue-checkbox-group>\n  </vue-form-item>\n  <vue-form-item label="Resources">\n    <vue-radio-group v-model="form.resource">\n      <vue-radio label="Sponsor"></vue-radio>\n      <vue-radio label="Venue"></vue-radio>\n    </vue-radio-group>\n  </vue-form-item>\n  <vue-form-item label="Activity form">\n    <vue-input type="textarea" v-model="form.desc"></vue-input>\n  </vue-form-item>\n  <vue-form-item>\n    <vue-button type="primary" @click="onSubmit">Create</vue-button>\n    <vue-button @click="onCancel">Cancel</vue-button>\n  </vue-form-item>\n</vue-form>\n\n<script>\n  new Vue({\n    data: function(){\n      return {\n        form: {\n          name: "",\n          region: "",\n          date1: "",\n          date2: "",\n          delivery: false,\n          type: [],\n          resource: "",\n          desc: ""\n        }\n      }\n    },\n    methods: {\n      onSubmit: function() {\n        this.$notify({title: "submit!"});\n      },\n      onCancel: function() {\n        this.$notify({title: "cancel!"});\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"form2",label:"formDemo.samples2.label",description:"formDemo.samples2.description",template:'<div class="source"><vue-form inline :model="formInline"><vue-form-item label="Approved by"><vue-input v-model="formInline.user" placeholder="Approved by"></vue-input></vue-form-item><vue-form-item label="Activity zone"><vue-select v-model="formInline.region" placeholder="Approved zone"><vue-option label="Zone one" value="zone1"></vue-option><vue-option label="Zone two" value="zone2"></vue-option></vue-select></vue-form-item><vue-form-item><vue-button type="primary" @click="onSubmit">Query</vue-button></vue-form-item></vue-form></div>',parameter:{data:function(){return{formInline:{user:"",region:""}}},methods:{onSubmit:function(e){this.$notify({title:"submit!"})}}},code:'<vue-form inline :model="formInline">\n  <vue-form-item label="Approved by">\n    <vue-input v-model="formInline.user" placeholder="Approved by"></vue-input>\n  </vue-form-item>\n  <vue-form-item label="Activity zone">\n    <vue-select v-model="formInline.region" placeholder="Approved zone">\n      <vue-option label="Zone one" value="zone1"></vue-option>\n      <vue-option label="Zone two" value="zone2"></vue-option>\n    </vue-select>\n  </vue-form-item><vue-form-item>\n    <vue-button type="primary" @click="onSubmit">Query</vue-button>\n  </vue-form-item>\n</vue-form>\n\n<script>\n  new Vue({\n    data: function(){\n      return {\n        formInline: {\n          user: "",\n          region: "",\n        }\n      }\n    },\n    methods: {\n      onSubmit: function(formName) {\n        this.$notify({title: "submit!"});\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"form3",label:"formDemo.samples3.label",description:"formDemo.samples3.description",template:'<div class="source"><vue-radio-group v-model="labelPosition" size="small"><vue-radio-button label="left">Left</vue-radio-button><vue-radio-button label="right">Right</vue-radio-button><vue-radio-button label="top">Top</vue-radio-button></vue-radio-group><div style="margin: 20px;"></div><vue-form :label-position="labelPosition" :label-responsive="false" label-width="150px" :model="formLabelAlign"><vue-form-item label="Name"><vue-input v-model="formLabelAlign.name"></vue-input></vue-form-item><vue-form-item label="Activity zone"><vue-input v-model="formLabelAlign.region"></vue-input></vue-form-item><vue-form-item label="Activity form"><vue-input v-model="formLabelAlign.type"></vue-input></vue-form-item></vue-form></div>',parameter:{data:function(){return{labelPosition:"right",formLabelAlign:{name:"",region:"",type:""}}},methods:{onSubmit:function(e){this.$notify({title:"submit!"})}}},code:'<vue-radio-group v-model="labelPosition" size="small">\n  <vue-radio-button label="left">Left</vue-radio-button>\n  <vue-radio-button label="right">Right</vue-radio-button>\n  <vue-radio-button label="top">Top</vue-radio-button>\n</vue-radio-group>\n<vue-form :label-position="labelPosition" :label-responsive="false" label-width="150px" :model="formLabelAlign">\n  <vue-form-item label="Name">\n    <vue-input v-model="formLabelAlign.name"></vue-input>\n  </vue-form-item>\n  <vue-form-item label="Activity zone">\n    <vue-input v-model="formLabelAlign.region"></vue-input>\n  </vue-form-item>\n  <vue-form-item label="Activity form">\n    <vue-input v-model="formLabelAlign.type"></vue-input>\n  </vue-form-item>\n</vue-form>\n\n<script>\n  new Vue({\n    data: function(){\n      return {\n        labelPosition: "right",\n        formLabelAlign: {\n          name: "",\n          region: "",\n          type: ""\n        }\n      }\n    }\n    methods: {\n      onSubmit: function(formName) {\n        this.$notify({title: "submit!"});\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"form4",label:"formDemo.samples4.label",description:"formDemo.samples4.description",template:'<div class="source"><vue-form :model="ruleForm" :rules="rules" ref="ruleForm" label-width="150px"><vue-form-item label="Activity name" prop="name"><vue-input v-model="ruleForm.name"></vue-input></vue-form-item><vue-form-item label="Activity zone" prop="region"><vue-select clearable v-model="ruleForm.region" placeholder="please select your zone"><vue-option label="Zone one" value="shanghai"></vue-option><vue-option label="Zone two" value="beijing"></vue-option></vue-select></vue-form-item><vue-form-item label="Activity time" required><vue-col :span="11"><vue-form-item prop="date1"><vue-date-picker type="date" placeholder="Pick a date" v-model="ruleForm.date1"></vue-date-picker></vue-form-item></vue-col><vue-col style="text-align:center;" :span="2">-</vue-col><vue-col :span="11"><vue-form-item prop="date2"><vue-time-picker type="fixed-time" placeholder="Pick a time" v-model="ruleForm.date2"></vue-time-picker></vue-form-item></vue-col></vue-form-item><vue-form-item label="Instant delivery" prop="delivery"><vue-switch on-text="" off-text="" v-model="ruleForm.delivery"></vue-switch></vue-form-item><vue-form-item label="Activity type" prop="type"><vue-checkbox-group v-model="ruleForm.type"><vue-checkbox label="Online activities" name="type"></vue-checkbox><vue-checkbox label="Promotion activities" name="type"></vue-checkbox><vue-checkbox label="Offline activities" name="type"></vue-checkbox></vue-checkbox-group></vue-form-item><vue-form-item label="Resources" prop="resource"><vue-radio-group v-model="ruleForm.resource"><vue-radio label="Sponsor"></vue-radio><vue-radio label="Venue"></vue-radio></vue-radio-group></vue-form-item><vue-form-item label="Activity form" prop="desc"><vue-input type="textarea" v-model="ruleForm.desc"></vue-input></vue-form-item><vue-form-item><vue-button type="primary" @click="submitForm(\'ruleForm\')">Create</vue-button><vue-button @click="resetForm(\'ruleForm\')">Reset</vue-button></vue-form-item></vue-form></div>',parameter:{data:function(){return{ruleForm:{name:"",region:"",type:[],resource:"",desc:"",date1:"",date2:"",delivery:!1},rules:{name:[{required:!0,message:"Please input Activity name"},{min:3,max:5,message:"Length should be 3 to 5"}],region:[{required:!0,message:"Please select Activity zone"}],date1:[{type:"date",required:!0,message:"Please pick a date"}],date2:[{type:"date",required:!0,message:"Please pick a time"}],type:[{type:"array",required:!0,message:"Please select at least one activity type"}],resource:[{required:!0,message:"Please select activity resource"}],desc:[{required:!0,message:"Please input activity form"}]}}},methods:{submitForm:function(e){var n=this;n.$refs[e].validate(function(e){if(!e)return n.$notify({title:"error submit!"}),!1;n.$notify({title:"submit!"})})},resetForm:function(e){this.$refs[e].resetFields()}}},code:'<vue-form :model="ruleForm" :rules="rules" ref="ruleForm" label-width="120px">\n  <vue-form-item label="Activity name" prop="name">\n    <vue-input v-model="ruleForm.name"></vue-input>\n  </vue-form-item>\n  <vue-form-item label="Activity zone" prop="region">\n    <vue-select clearable v-model="ruleForm.region" placeholder="please select your zone">\n      <vue-option label="Zone one" value="shanghai"></vue-option>\n      <vue-option label="Zone two" value="beijing"></vue-option>\n    </vue-select>\n  </vue-form-item>\n  <vue-form-item label="Activity time" required>\n    <vue-col :span="11">\n      <vue-form-item prop="date1">\n        <vue-date-picker type="date" placeholder="Pick a date" v-model="ruleForm.date1"></vue-date-picker>\n      </vue-form-item>\n    </vue-col>\n    <vue-col style="text-align:center;" :span="2">-</vue-col>\n    <vue-col :span="11">\n      <vue-form-item prop="date2">\n        <vue-time-picker type="fixed-time" placeholder="Pick a time" v-model="ruleForm.date2"></vue-time-picker>\n      </vue-form-item>\n    </vue-col>\n  </vue-form-item>\n  <vue-form-item label="Instant delivery" prop="delivery">\n    <vue-switch on-text="" off-text="" v-model="ruleForm.delivery"></vue-switch>\n  </vue-form-item>\n  <vue-form-item label="Activity type" prop="type">\n    <vue-checkbox-group v-model="ruleForm.type">\n      <vue-checkbox label="Online activities" name="type"></vue-checkbox>\n      <vue-checkbox label="Promotion activities" name="type"></vue-checkbox>\n      <vue-checkbox label="Offline activities" name="type"></vue-checkbox>\n    </vue-checkbox-group>\n  </vue-form-item>\n  <vue-form-item label="Resources" prop="resource">\n    <vue-radio-group v-model="ruleForm.resource">\n      <vue-radio label="Sponsor"></vue-radio>\n      <vue-radio label="Venue"></vue-radio>\n    </vue-radio-group>\n  </vue-form-item>\n  <vue-form-item label="Activity form" prop="desc">\n    <vue-input type="textarea" v-model="ruleForm.desc"></vue-input>\n  </vue-form-item>\n  <vue-form-item>\n    <vue-button type="primary" @click="submitForm(\'ruleForm\')">Create</vue-button>\n    <vue-button @click="resetForm(\'ruleForm\')">Reset</vue-button>\n  </vue-form-item>\n</vue-form>\n\n<script>\n  new Vue({\n    data: function(){\n      return {\n        ruleForm: {\n          name: "",\n          region: "",\n          date1: "",\n          date2: "",\n          delivery: false,\n          type: [],\n          resource: "",\n          desc: ""\n        },\n        rules: {\n          name: [\n            { required: true, message: "Please input Activity name"},\n            { min: 3, max: 5, message: "Length should be 3 to 5"},\n          ],\n          region: [\n            { required: true, message: "Please select Activity zone"},\n          ],\n          date1: [\n            { type: "date", required: true, message: "Please pick a date"},\n          ],\n          date2: [\n            { type: "date", required: true, message: "Please pick a time"},\n          ],\n          type: [\n            { type: "array", required: true, message: "Please select at least one activity type"},\n          ],\n          resource: [\n            { required: true, message: "Please select activity resource"},\n          ],\n          desc: [\n            { required: true, message: "Please input activity form"},\n          ]\n        }\n      }\n    },\n    methods: {\n      submitForm: function(formName) {\n        var self = this;\n        self.$refs[formName].validate(function(valid) {\n           if (valid) {\n             self.$notify({title: "submit!"});\n           } else {\n             self.$notify({title: "error submit!"});\n             return false;\n           }\n        });\n      },\n      resetForm: function(formName) {\n        this.$refs[formName].resetFields();\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"form5",label:"formDemo.samples5.label",description:"formDemo.samples5.description",template:'<div class="source"><vue-form :model="ruleForm" :rules="rules" ref="ruleForm" label-width="120px" :custom-message-method="showError"><vue-form-item label="Password" prop="pass"><vue-input type="password" v-model="ruleForm.pass" auto-complete="off"></vue-input></vue-form-item><vue-form-item label="Confirm" prop="checkPass"><vue-input type="password" v-model="ruleForm.checkPass" auto-complete="off"></vue-input></vue-form-item><vue-form-item label="Age" prop="age"><vue-input v-model="ruleForm.age"></vue-input>{{ruleForm.age}}</vue-form-item><vue-form-item><vue-button type="primary" @click="submitForm(\'ruleForm\')">Submit</vue-button><vue-button @click="resetForm(\'ruleForm\')">Reset</vue-button></vue-form-item></vue-form></div>',parameter:{data:function(){return{ruleForm:{pass:"",checkPass:"",age:""},rules:{pass:[{validator:this.validatePass,trigger:"blur"}],checkPass:[{validator:this.validatePass2,trigger:"blur"}],age:[{validator:this.checkAge,trigger:"blur"}]}}},methods:{checkAge:function(e,n,t){if(!n)return t(new Error("Please input the age"));setTimeout(function(){Number.isInteger(n)?n<18?t(new Error("Age must be greater than 18")):t():t(new Error("Please input digits"))},1e3)},validatePass:function(e,n,t){""===n?t(new Error("Please input the password")):(""!==this.ruleForm.checkPass&&this.$refs.ruleForm.validateField("checkPass"),t())},validatePass2:function(e,n,t){""===n?t(new Error("Please input the password again")):n!==this.ruleForm.pass?t(new Error("Two password don't match!")):t()},showError:function(e){var n=this;VueUtil.isArray(e)?e.forEach(function(e){e&&n.$notify.error({message:e})}):e&&n.$notify.error({message:e})},submitForm:function(e){var n=this;n.$refs[e].validate(function(e){e&&n.$notify({title:"submit!"})})},resetForm:function(e){this.$refs[e].resetFields()}}},code:'<vue-form :model="ruleForm" :rules="rules" ref="ruleForm" label-width="120px" :custom-message-method="showError">\n  <vue-form-item label="Password" prop="pass">\n    <vue-input type="password" v-model="ruleForm.pass" auto-complete="off"></vue-input>\n  </vue-form-item>\n  <vue-form-item label="Confirm" prop="checkPass">\n    <vue-input type="password" v-model="ruleForm.checkPass" auto-complete="off"></vue-input>\n  </vue-form-item>\n  <vue-form-item label="Age" prop="age">\n    <vue-input v-model="ruleForm.age"></vue-input>\n  </vue-form-item>\n  <vue-form-item>\n    <vue-button type="primary" @click="submitForm(\'ruleForm\')">Submit</vue-button>\n    <vue-button @click="resetForm(\'ruleForm\')">Reset</vue-button>\n  </vue-form-item>\n</vue-form>\n\n<script>\n  new Vue({\n    data: function() {\n      return {\n        ruleForm: {\n          pass: "",\n          checkPass: "",\n          age: ""\n        },\n        rules: {\n          pass: [{\n            validator: this.validatePass,\n            trigger: "blur"\n          }],\n          checkPass: [{\n            validator: this.validatePass2,\n            trigger: "blur"\n          }],\n          age: [{\n            validator: this.checkAge,\n            trigger: "blur"\n          }]\n        }\n      }\n    },\n    methods: {\n      checkAge: function(rule, value, callback) {\n        if (!value) {\n          return callback(new Error("Please input the age"));\n        }\n        setTimeout(function() {\n          if (!Number.isInteger(value)) {\n            callback(new Error("Please input digits"));\n          } else {\n            if (value < 18) {\n              callback(new Error("Age must be greater than 18"));\n            } else {\n              callback();\n            }\n          }\n        }, 1000);\n      },\n      validatePass: function(rule, value, callback) {\n        if (value === "") {\n          callback(new Error("Please input the password"));\n        } else {\n          if (this.ruleForm.checkPass !== "") {\n            this.$refs.ruleForm.validateField("checkPass");\n          }\n          callback();\n        }\n      },\n      validatePass2: function(rule, value, callback) {\n        if (value === "") {\n          callback(new Error("Please input the password again"));\n        } else if (value !== this.ruleForm.pass) {\n          callback(new Error("Two password don\'t match!"));\n        } else {\n          callback();\n        }\n      },\n      showError: function(msgs) {\n        var self = this;\n        if (VueUtil.isArray(msgs)) {\n          msgs.forEach(function(msg) {\n            msg && self.$notify.error({message: msg});\n          });\n        } else {\n          msgs && self.$notify.error({message: msgs});\n        }\n      },\n      submitForm: function(formName) {\n        var self = this;\n        self.$refs[formName].validate(function(valid) {\n          if (valid) {\n            self.$notify({title: "submit!"});\n          }\n        });\n      },\n      resetForm: function(formName) {\n        this.$refs[formName].resetFields();\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"form6",label:"formDemo.samples6.label",description:"formDemo.samples6.description",template:'<div class="source"><vue-form :model="dynamicValidateForm" ref="dynamicValidateForm" label-width="120px" notify-message><vue-form-item prop="email" label="Email" :rules="[{ required: true, message: \'Please input email address\', trigger: \'blur\' }, { type: \'email\', message: \'Please input correct email address\', trigger: \'blur\' }]"><vue-col :span="22"><vue-input v-model="dynamicValidateForm.email"></vue-input></vue-col></vue-form-item><vue-form-item v-for="(domain, index) in dynamicValidateForm.domains" :label="\'Domain\'+index" :key="domain.key" :prop="\'domains.\'+index+\'.value\'" :rules="{required: true, message: \'domain can not be null\', trigger: \'blur\'}"><vue-col :span="22"><vue-input v-model="domain.value"></vue-input></vue-col><vue-col :span="2"><vue-button @click.prevent="removeDomain(domain)">Delete</vue-button></vue-col></vue-form-item><vue-form-item><vue-button type="primary" @click="submitForm(\'dynamicValidateForm\')">Submit</vue-button><vue-button @click="addDomain">New domain</vue-button><vue-button @click="resetForm(\'dynamicValidateForm\')">Reset</vue-button></vue-form-item></vue-form></div>',parameter:{data:function(){return{dynamicValidateForm:{domains:[{key:1,value:""}],email:""}}},methods:{removeDomain:function(e){var n=this.dynamicValidateForm.domains.indexOf(e);-1!==n&&this.dynamicValidateForm.domains.splice(n,1)},addDomain:function(){this.dynamicValidateForm.domains.push({key:Date.now(),value:""})},submitForm:function(e){var n=this;n.$refs[e].validate(function(e){e&&n.$notify({title:"submit!"})})},resetForm:function(e){this.$refs[e].resetFields()}}},code:'<vue-form :model="dynamicValidateForm" ref="dynamicValidateForm" label-width="120px" notify-message>\n  <vue-form-item prop="email" label="Email" :rules="[{ required: true, message: \'Please input email address\', trigger: \'blur\' }, { type: \'email\', message: \'Please input correct email address\', trigger: \'blur\' }]">\n    <vue-col :span="22"><vue-input v-model="dynamicValidateForm.email"></vue-input></vue-col>\n  </vue-form-item>\n  <vue-form-item v-for="(domain, index) in dynamicValidateForm.domains" :label="\'Domain\'+index" :key="domain.key" :prop="\'domains.\'+index+\'.value\'" :rules="{required: true, message: \'domain can not be null\', trigger: \'blur\'}">\n    <vue-col :span="22"><vue-input v-model="domain.value"></vue-input></vue-col>\n    <vue-col :span="2"><vue-button @click.prevent="removeDomain(domain)">Delete</vue-button></vue-col>\n  </vue-form-item>\n  <vue-form-item>\n    <vue-button type="primary" @click="submitForm(\'dynamicValidateForm\')">Submit</vue-button>\n    <vue-button @click="addDomain">New domain</vue-button>\n    <vue-button @click="resetForm(\'dynamicValidateForm\')">Reset</vue-button>\n  </vue-form-item>\n</vue-form>\n\n<script>\n  new Vue({\n    data: function () {\n      return {\n        dynamicValidateForm: {\n          domains: [{\n              key: 1,\n              value: \'\'\n            }\n          ],\n          email: \'\'\n        }\n      }\n    },\n    methods: {\n      removeDomain: function (item) {\n        var index = this.dynamicValidateForm.domains.indexOf(item);\n        if (index !== -1) {\n          this.dynamicValidateForm.domains.splice(index, 1);\n        }\n      },\n      addDomain: function () {\n        this.dynamicValidateForm.domains.push({\n          key: Date.now(),\n          value: \'\'\n        });\n      },\n      submitForm: function (formName) {\n        var self = this;\n        self.$refs[formName].validate(function (valid) {\n          if (valid) {\n            self.$notify({title: "submit!"});\n          }\n        });\n      },\n      resetForm: function (formName) {\n        this.$refs[formName].resetFields();\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"form7",label:"Form Attributes",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"model",column2:"formDemo.samples7.row1column2",column3:"Object",column4:"",column5:""},{column1:"rules",column2:"formDemo.samples7.row2column2",column3:"Object",column4:"",column5:""},{column1:"inline",column2:"formDemo.samples7.row3column2",column3:"Boolean",column4:"",column5:"false"},{column1:"label-position",column2:"formDemo.samples7.row4column2",column3:"String",column4:"right, left, top",column5:"right"},{column1:"label-width",column2:"formDemo.samples7.row5column2",column3:"String",column4:"",column5:""},{column1:"label-suffix",column2:"formDemo.samples7.row6column2",column3:"String",column4:"",column5:""},{column1:"label-responsive",column2:"formDemo.samples7.row8column2",column3:"Boolean",column4:"",column5:"true"},{column1:"show-message",column2:"formDemo.samples7.row7column2",column3:"Boolean",column4:"",column5:"true"},{column1:"notify-message",column2:"formDemo.samples7.row9column2",column3:"Boolean",column4:"",column5:"false"},{column1:"custom-message-method",column2:"formDemo.samples7.row10column2",column3:"Function",column4:"",column5:""}]}}},notshowmeta:!0},{id:"form8",label:"Form Methods",template:'<method-table :data="tableData"></method-table>',parameter:{data:function(){return{tableData:[{column1:"validate",column2:"formDemo.samples8.row1column2",column3:"Function(callback: Function(boolean))"},{column1:"validateField",column2:"formDemo.samples8.row2column2",column3:"Function(prop: string, callback: Function(errorMessage: string))"},{column1:"resetFields",column2:"formDemo.samples8.row3column2",column3:""},{column1:"initValue",column2:"formDemo.samples8.row4column2",column3:""},{column1:"isModify",column2:"formDemo.samples8.row5column2",column3:""}]}}},notshowmeta:!0},{id:"form9",label:"Form-Item Attributes",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"prop",column2:"formDemo.samples9.row1column2",column3:"String",column4:"formDemo.samples9.row1column4",column5:""},{column1:"label",column2:"formDemo.samples9.row2column2",column3:"String",column4:"",column5:""},{column1:"label-width",column2:"formDemo.samples9.row3column2",column3:"String",column4:"",column5:""},{column1:"required",column2:"formDemo.samples9.row4column2",column3:"bolean",column4:"",column5:"false"},{column1:"rules",column2:"formDemo.samples9.row5column2",column3:"Object",column4:"",column5:""},{column1:"error",column2:"formDemo.samples9.row6column2",column3:"String",column4:"",column5:""},{column1:"show-message",column2:"formDemo.samples9.row7column2",column3:"Boolean",column4:"",column5:"true"}]}}},notshowmeta:!0},{id:"form10",label:"Rules",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"required",column2:"formDemo.samples10.row1column2",column3:"Boolean",column4:"",column5:""},{column1:"len",column2:"formDemo.samples10.row2column2",column3:"Number",column4:"",column5:""},{column1:"min",column2:"formDemo.samples10.row3column2",column3:"Number",column4:"",column5:""},{column1:"max",column2:"formDemo.samples10.row4column2",column3:"Number",column4:"",column5:""},{column1:"type",column2:"formDemo.samples10.row5column2",column3:"String",column4:"integer, float, array, date, number, object, method, email, url, hex, ipv4",column5:""}]}}},notshowmeta:!0}]};e.exports=l},"./demo/HotkeyDemo.js":
/*!****************************!*\
  !*** ./demo/HotkeyDemo.js ***!
  \****************************/
/*! no static exports found */function(e,n,t){"use strict";e.exports={path:"/hotkey",name:"hotkey",head:{label:"hotkeyDemo.label",description:"hotkeyDemo.description"},samples:[{id:"hotkey1",label:"hotkeyDemo.samples1.label",description:"hotkeyDemo.samples1.description",template:'<div class="source">  <vue-button v-hotkey:f1 @click="click">F1</vue-button>  <vue-button v-hotkey:f2="handler">F2</vue-button>  <vue-input placeholder="f3 to focus" v-hotkey:f3="\'focus\'"></vue-input></div>',parameter:{methods:{click:function(e){this.$notify({title:"F1"})},handler:function(e,n){this.$notify({title:"F2"})}}},code:'<div class="source"> \n  <vue-button v-hotkey:f1 @click="click">F1</vue-button>\n  <vue-button v-hotkey:f2="handler">F2</vue-button>\n  <vue-input placeholder="f3 to focus" v-hotkey:f3="\'focus\'"></vue-input>\n</div>\n\n<script>\n  new Vue({\n      methods: { \n        click: function(event) {\n          this.$notify({title: \'F1\'});\n        },\n        handler: function(event, el) {\n          this.$notify({title: \'F2\'});\n        }\n      }\n  }).$mount();\n<\/script>'}]}},"./demo/I18nDemo.js":
/*!**************************!*\
  !*** ./demo/I18nDemo.js ***!
  \**************************/
/*! no static exports found */function(e,n,t){"use strict";var l={path:"/i18n",name:"i18n",head:{label:"i18nDemo.label",description:""},samples:[{id:"i18n1",label:"i18nDemo.samples1.label",description:"i18nDemo.samples1.description",template:'<div class="source"><vue-row ><vue-col :span="6"><vue-button plain @click="clickHandle1">{{$t(\'button.label1\')}}</vue-button></vue-col><vue-col :span="6"><vue-button plain @click="clickHandle2">{{$t(\'button.label2\')}}</vue-button></vue-col></vue-row></div>',parameter:{mounted:function(){var e={button:{label1:"中文",label2:"日文",label3:"英文"},message:{hello:"{msg} 世界!"}},n={button:{label1:"中国語",label2:"日本語",label3:"英語"},message:{hello:"世界! {msg} "}};VueUtil.setLocale("zh",e),VueUtil.setLocale("ja",n),this.$forceUpdate()}},code:'<vue-button plain @click="clickHandle1">{{$t(\'button.label1\')}}</vue-button>\n<vue-button plain @click="clickHandle2">{{$t(\'button.label2\')}}</vue-button>\n\n<script>\n  new Vue({\n    mounted: function() {\n      var locales = {\n        zh: {\n          button: {\n            label1: "中文",\n            label2: "日文",\n            label3: "英文"\n          },\n          message: {\n            hello: "{msg} 世界!"\n          }\n        },\n        ja: {\n          button: {\n            label1: "中国語",\n            label2: "日本語",\n            label3: "英語"\n          },\n          message: {\n            hello: "世界! {msg}"\n          }\n        }\n      };\n      VueUtil.setLocale("zh", locales.zh);\n      VueUtil.setLocale("ja", locales.ja);\n    },\n    methods: {\n      clickHandle1: function() {\n        VueUtil.setLang("zh");\n        var self = this;\n        self.$nextTick(function(){\n          self.$notify({title: self.$t("message.hello", { msg: "你好!"})});\n        });\n      },\n      clickHandle2: function() {\n        VueUtil.setLang("ja");\n        var self = this;\n        self.$nextTick(function(){\n          self.$notify({title: self.$t("message.hello", { msg: "こんにちは!"})});\n        });\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"i18n2",label:"i18nDemo.samples2.label",description:"i18nDemo.samples2.description",collapse:["item1"],code:"import Vue from 'vue' \nimport VueI18n from 'vue-i18n' \nimport Viy from 'viy-ui' \nimport App from './App.vue' \n\nVue.use(VueI18n) \nVue.use(Viy) \n\nVueUtil.setLocale('ja', pjMessage); //set pj message \nVueUtil.setLang('ja'); \n\nVue.config.productionTip = false \n\nnew Vue({ \n  render: h => h(App), \n}).$mount('#app')"},{id:"i18n2",label:"i18nDemo.samples3.label",description:"i18nDemo.samples3.description",collapse:["item1"],code:"import Vue from 'vue' \nimport VueI18n from 'vue-i18n' \nimport Viy from 'viy-ui' \nimport App from './App.vue' \n\nVue.use(VueI18n) \nVue.use(Viy) \n\nconst messages = { \n  ja: { \n    message: 'こんにちは', //Pj message \n    ...Viy.lang.ja  //Extend viy component i18n message \n  }, \n  en: { \n    message: 'Hello', \n    ...Viy.lang.en \n  }, \n  zh: { \n    message: '你好', \n    ...Viy.lang.zh \n  } \n} \n\n// Create VueI18n instance with options \nconst i18n = new VueI18n({ \n  locale: 'ja', // set default locale \n  messages, // set locale messages \n}) \n\nViy.setI18n(i18n); //set i18n function to viy \n\nVue.config.productionTip = false \n\nnew Vue({ \n  i18n, \n  render: h => h(App), \n}).$mount('#app')"}]};e.exports=l},"./demo/IconDemo.js":
/*!**************************!*\
  !*** ./demo/IconDemo.js ***!
  \**************************/
/*! no static exports found */function(e,n,t){"use strict";e.exports={path:"/icon",name:"icon",head:{label:"iconDemo.label",description:"iconDemo.description"},samples:[{label:"iconDemo.samples1.label",description:"iconDemo.samples1.description",template:'<div class="source"><i class="vue-icon-edit"></i><i class="vue-icon-share"></i><i class="vue-icon-delete"></i><vue-button type="primary" icon="vue-icon-search">Search</vue-button></div>',code:'<i class="vue-icon-edit"></i>\n<i class="vue-icon-share"></i>\n<i class="vue-icon-delete"></i>\n<vue-button type="primary" icon="vue-icon-search">Search</vue-button>',id:"icon1"},{label:"iconDemo.samples2.label",description:"",template:'<div class="source source-icon"><ul class="icon-list"><li v-for="(icon,index) in iconAry" :key="index"><span><i :class="icon.split(\',\')[0]"></i><span v-for="title in icon.split(\',\')" style="font-size: 11px;">{{title}}</span></span></li></ul></div>',parameter:{data:function(){return{iconAry:["vue-icon-arrow-down","vue-icon-arrow-left","vue-icon-arrow-right","vue-icon-arrow-up","vue-icon-d-arrow-left","vue-icon-d-arrow-right","vue-icon-caret-bottom","vue-icon-caret-left","vue-icon-caret-right","vue-icon-caret-top","vue-icon-d-caret","vue-icon-loading","vue-icon-menu","vue-icon-success","vue-icon-question","vue-icon-information","vue-icon-warning","vue-icon-error","vue-icon-check","vue-icon-close","vue-icon-upload","vue-icon-download","vue-icon-upload2","vue-icon-download2","vue-icon-plus","vue-icon-minus","vue-icon-circled-plus","vue-icon-circled-minus","vue-icon-plus2","vue-icon-minus2","vue-icon-date","vue-icon-time","vue-icon-history","vue-icon-document","vue-icon-folder-open","vue-icon-folder-open2","vue-icon-edit","vue-icon-pencil","vue-icon-edit2","vue-icon-delete","vue-icon-delete2","vue-icon-more","vue-icon-message","vue-icon-picture","vue-icon-box","vue-icon-desktop","vue-icon-mobile","vue-icon-print","vue-icon-share","vue-icon-search","vue-icon-view,vue-icon-zoom-in","vue-icon-zoom-out","vue-icon-setting","vue-icon-star-off","vue-icon-star-on","vue-icon-user","vue-icon-user-plus","vue-icon-user-times","vue-icon-lock","vue-icon-out","vue-icon-in","vue-icon-th-list","vue-icon-list-alt","vue-icon-table","vue-icon-columns","vue-icon-cube","vue-icon-server","vue-icon-cubes","vue-icon-database","vue-icon-codeopen","vue-icon-level-up","vue-icon-level-down","vue-icon-wrench","vue-icon-suitcase","vue-icon-refresh","vue-icon-direction","vue-icon-home","vue-icon-attachment","vue-icon-attach-file","vue-icon-filter","vue-icon-filter-o","vue-icon-comment-o","vue-icon-user-o","vue-icon-bell-o","vue-icon-bell","vue-icon-sort-asc","vue-icon-sort-desc","vue-icon-enlarge","vue-icon-shrink","vue-icon-switch","vue-icon-sort","vue-icon-cart-o","vue-icon-copy","vue-icon-cart","vue-icon-tags","vue-icon-tag","vue-icon-phone","vue-icon-bar-chart","vue-icon-phone-o","vue-icon-truck-o","vue-icon-pie-chart","vue-icon-stats-chart","vue-icon-truck","vue-icon-clipboard","vue-icon-users","vue-icon-save","vue-icon-save-o","vue-icon-barcode","vue-icon-qrcode","vue-icon-scan","vue-icon-external","vue-icon-keyboard","vue-icon-key","vue-icon-language","vue-icon-undo,vue-icon-rotate-left","vue-icon-repeat,vue-icon-rotate-right","vue-icon-edit-crop"]}}},id:"icon2",notshowmeta:!0}]}},"./demo/ImageDemo.js":
/*!***************************!*\
  !*** ./demo/ImageDemo.js ***!
  \***************************/
/*! no static exports found */function(e,n,t){"use strict";e.exports={path:"/image",name:"image",head:{label:"imageDemo.label",description:"imageDemo.description"},samples:[{label:"imageDemo.samples1.label",description:"imageDemo.samples1.description",template:'<div class="source"><div class="demo-image"><div class="block" v-for="fit in fits" :key="fit"><span  class="demonstration">{{ fit }}</span><vue-image style="width: 100px; height: 100px" :src="url" :fit="fit"></vue-image></div></div></div>',parameter:{data:function(){return{fits:["fill","contain","cover","none","scale-down"],url:"image/image_fit.png"}}},code:'<div class="demo-image">\n     <div class="block" v-for="fit in fits" :key="fit">\n         <span  class="demonstration">{{ fit }}</span>\n         <vue-image\n             style="width: 100px; height: 100px"\n             :src="url"\n             :fit="fit">\n         </vue-image>\n     </div>\n </div>\n\n<script>\n  new Vue({\n    data: function() {\n      return {\n'+"        fits: ['fill', 'contain', 'cover', 'none', 'scale-down'],\n        url: 'image/image_fit.png'\n      };\n    }\n  }).$mount();\n<\/script>",id:"image1"},{label:"imageDemo.samples2.label",description:"imageDemo.samples2.description",template:'<div class="source"><div class="demo-image__placeholder"><div class="block"><span class="demonstration">{{$t("imageDemo.defatltText")}}</span><vue-image :src="src"></vue-image></div><div class="block"><span class="demonstration">{{$t("imageDemo.customText")}}</span><vue-image :src="src"><div slot="placeholder" class="image-slot">{{$t("imageDemo.samples2.loading")}}<span class="dot">...</span></div></vue-image></div></div></div>',parameter:{data:function(){return{src:"image/image_placeholder.png"}}},code:'<div class="demo-image__placeholder">\n     <div class="block">\n         <span class="demonstration">{{$t("imageDemo.defatltText")}}</span>\n         <vue-image :src="src"></vue-image>\n     </div>\n     <div class="block">\n         <span class="demonstration">{{$t("imageDemo.customText")}}</span>\n         <vue-image :src="src">\n             <div slot="placeholder" class="image-slot">\n                 {{$t("imageDemo.samples2.loading")}}<span class="dot">...</span>\n             </div>\n         </vue-image>\n     </div>\n</div>\n\n<script>\n  new Vue({\n    data: function() {\n      return {\n        src: \'image/image_placeholder.png\'\n      };\n    }\n  }).$mount();\n<\/script>',id:"image2"},{label:"imageDemo.samples3.label",description:"imageDemo.samples3.description",template:'<div class="source"><div class="demo-image__error"><div class="block"><span class="demonstration">{{$t("imageDemo.defatltText")}}</span><vue-image></vue-image></div><div class="block"><span class="demonstration">{{$t("imageDemo.customText")}}</span><vue-image><div slot="error" class="image-slot"><i class="vue-icon-picture"></i></div></vue-image></div></div></div>',code:'<div class="demo-image__error">\n     <div class="block">\n         <span class="demonstration">{{$t("imageDemo.defatltText")}}</span>\n         <vue-image></vue-image>\n     </div>\n     <div class="block">\n         <span class="demonstration">{{$t("imageDemo.customText")}}</span>\n         <vue-image >\n             <div slot="error" class="image-slot">\n                 <i class="vue-icon-picture"></i>\n             </div>\n         </vue-image>\n     </div>\n</div>\n',id:"image3"},{label:"imageDemo.samples4.label",description:"imageDemo.samples4.description",template:'<div class="source" > <div class="demo-image__lazy"><vue-image v-for="url in urls" :key="url" :src="url" lazy></vue-image></div></div>',parameter:{data:function(){return{urls:["image/image_lazy1.png","image/image_lazy2.png","image/image_lazy3.png","image/image_lazy4.png"]}}},code:"<div class=\"demo-image__lazy\">\n     <vue-image v-for=\"url in urls\" :key=\"url\" :src=\"url\" lazy></vue-image>\n</div>\n\n<script>\n  new Vue({\n    data: function() {\n      return {\n        urls: [\n          'image/image_lazy1.png'\n          'image/image_lazy2.png'\n          'image/image_lazy3.png'\n          'image/image_lazy4.png'\n        ]\n      };\n    }\n  }).$mount();\n<\/script>",id:"image4"},{label:"imageDemo.samples5.label",description:"imageDemo.samples5.description",template:'<div class="source" ><div class="demo-image__preview"><vue-image style="width: 100px; height: 100px" :src="url" :preview-src-list="srcList"></vue-image><vue-image :img-label="$t(\'imageDemo.samples5.imgLabelText\')" style="width: 200px; height: 100px;margin-left: 100px; line-height: 100px;font-size: 20px;background:#dfe6ec;text-align: center;" :src="url" :preview-src-list="srcList"></vue-image></div></div>',parameter:{data:function(){return{url:"image/image_fit.png",srcList:["image/image_fit.png","image/image_preview1.png","image/image_preview2.png"]}}},code:'<div class="demo-image__preview">\n     <vue-image \n         style="width: 100px; height: 100px"\n         :src="url" \n         :preview-src-list="srcList">\n     </vue-image>\n     <vue-image \n         :img-label="$t(\'imageDemo.samples5.imgLabelText\')" style="width: 200px; height: 100px;margin-left: 100px;\n             line-height: 100px;font-size: 20px;background:#dfe6ec;text-align: center;" \n         :src="url" \n         :preview-src-list="srcList">\n     </vue-image>\n</div>\n\n<script>\n  new Vue({\n    data: function() {\n      return {\n        url: \'image/image_fit.png\'\n        srcList: [\n          \'image/image_fit.png\',\n          \'image/image_preview1.png\',\n          \'image/image_preview2.png\'\n        ]\n      };\n    }\n  }).$mount();\n<\/script>',id:"image5"},{id:"image6",label:"Attributes",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"src",column2:"imageDemo.samples6.row1column2",column3:"String",column4:"",column5:""},{column1:"fit",column2:"imageDemo.samples6.row2column2",column3:"String",column4:"fill,contain,cover,none,scale-down",column5:""},{column1:"alt",column2:"imageDemo.samples6.row3column2",column3:"String",column4:"",column5:""},{column1:"referrer-policy",column2:"imageDemo.samples6.row4column2",column3:"String",column4:"",column5:""},{column1:"lazy",column2:"imageDemo.samples6.row5column2",column3:"Boolean",column4:"",column5:"false"},{column1:"scroll-container",column2:"imageDemo.samples6.row6column2",column3:"String / HTMLElement",column4:"",column5:"imageDemo.samples6.row6column5"},{column1:"preview-src-list",column2:"imageDemo.samples6.row7column2",column3:"Array",column4:"",column5:""},{column1:"z-index",column2:"imageDemo.samples6.row8column2",column3:"Number",column4:"",column5:"2000"},{column1:"img-label",column2:"imageDemo.samples6.row9column2",column3:"String",column4:"",column5:""},{column1:"round",column2:"imageDemo.samples6.row10column2",column3:"Boolean",column4:"",column5:""}]}}},notshowmeta:!0},{id:"image7",label:"Events",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"load",column2:"imageDemo.samples7.row1column2",column3:"Event object"},{column1:"error",column2:"imageDemo.samples7.row2column2",column3:"Event object"}]}}},notshowmeta:!0},{id:"image8",label:"Slots",template:'<slot-table :data="tableData"></slot-table>',parameter:{data:function(){return{tableData:[{column1:"placeholder",column2:"imageDemo.samples8.row1column2"},{column1:"error",column2:"imageDemo.samples8.row2column2"}]}}},notshowmeta:!0}]}},"./demo/ImageViewerDemo.js":
/*!*********************************!*\
  !*** ./demo/ImageViewerDemo.js ***!
  \*********************************/
/*! no static exports found */function(e,n,t){"use strict";e.exports={path:"/image-viewer",name:"imageviewer",head:{label:"imageviewerDemo.label",description:"imageviewerDemo.description"},samples:[{id:"imageviewer1",label:"imageviewerDemo.samples1.label",description:"imageviewerDemo.samples1.description",template:'<div class="source"><i class="vue-icon-picture" style="font-size:80px" @click="showViewer=true"></i><vue-image-viewer v-if="showViewer" :on-close="closeViewer" :url-list="imgList" /></div>',parameter:{data:function(){return{showViewer:!1,imgList:["image/image_lazy1.png","image/image_lazy2.png","image/image_lazy3.png","image/image_lazy4.png"]}},methods:{closeViewer:function(){this.showViewer=!1}}},code:'<i class="vue-icon-picture" style="font-size:80px" @click="showViewer=true"></i>\n\n<vue-image-viewer v-if="showViewer" :on-close="closeViewer" :url-list="imgList1" />\n\n<script>\n  new Vue({\n    data: function() {\n      return {\n        showViewer: false,\n        imgList1: [\n          \'image/image_lazy1.png\',\n          \'image/image_lazy2.png\',\n          \'image/image_lazy3.png\',\n          \'image/image_lazy4.png\'\n        ]\n      };\n    }\n  }).$mount();\n<\/script>'},{id:"imageviewer2",label:"imageviewerDemo.samples2.label",description:"imageviewerDemo.samples2.description",template:'<div class="source"><i class="vue-icon-picture" style="font-size:80px" @click="showViewer=true"></i><vue-image-viewer v-if="showViewer" :on-close="closeViewer" :url-list="imgList" :active-index="activeImgIndex"/></div>',parameter:{data:function(){return{showViewer:!1,imgList:["image/image_lazy1.png","image/image_lazy2.png","image/image_lazy3.png","image/image_lazy4.png"],activeImgIndex:2}},methods:{closeViewer:function(){this.showViewer=!1}}},code:'<i class="vue-icon-picture" style="font-size:80px" @click="showViewer=true"></i>\n\n<vue-image-viewer v-if="showViewer" :on-close="closeViewer" :url-list="imgList1" :active-index="activeImgIndex" />\n\n<script>\n  new Vue({\n    data: function() {\n      return {\n        showViewer: false,\n        imgList1: [\n          \'image/image_lazy1.png\',\n          \'image/image_lazy2.png\',\n          \'image/image_lazy3.png\',\n          \'image/image_lazy4.png\'\n        ],\n        activeImgIndex:2\n      };\n    }\n  }).$mount();\n<\/script>'},{id:"imageviewer3",label:"Attributes",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"url-list",column2:"imageviewerDemo.samples3.row1column2",column3:"Array",column4:"",column5:"[]"},{column1:"z-index",column2:"imageviewerDemo.samples3.row2column2",column3:"Number",column4:"",column5:"2000"},{column1:"active-index",column2:"imageviewerDemo.samples3.row3column2",column3:"Number",column4:"",column5:"0"},{column1:"on-switch",column2:"imageviewerDemo.samples3.row4column2",column3:"Function",column4:"",column5:"function(){ return {};}"},{column1:"on-close",column2:"imageviewerDemo.samples3.row5column2",column3:"Function",column4:"",column5:"function(){ return {};}"}]}}},notshowmeta:!0}]}},"./demo/InputDemo.js":
/*!***************************!*\
  !*** ./demo/InputDemo.js ***!
  \***************************/
/*! no static exports found */function(e,n,t){"use strict";e.exports={path:"/input",name:"input",head:{label:"inputDemo.label",description:"inputDemo.description"},samples:[{id:"input1",label:"inputDemo.samples1.label",description:"",template:'<div class="source"><vue-input v-model="input" :placeholder="$t(\'inputDemo.defaultPlaceholder\')"></vue-input></div>',parameter:{data:function(){return{input:""}}},code:'<vue-input v-model="input" :placeholder="$t(\'inputDemo.defaultPlaceholder\')"></vue-input>\n\n<script>\n  new Vue({\n    data: function(){\n      return {\n        input: ""\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"input9",label:"inputDemo.samples9.label",description:"inputDemo.samples9.description",template:'<div class="source"><vue-input v-model="input" :placeholder="$t(\'inputDemo.defaultPlaceholder\')" :cleave="{delimiter: \'-\', blocks: [4, 3, 3, 4], uppercase: true}"></vue-input></div>',parameter:{data:function(){return{input:""}}},code:'<vue-input v-model="input" :placeholder="$t(\'inputDemo.defaultPlaceholder\')" :cleave="{delimiter: \'-\', blocks: [4, 3, 3, 4], uppercase: true}">\n</vue-input>\n\n<script>\n  new Vue({\n    data: function(){\n      return {\n        input: ""\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"input2",label:"inputDemo.samples2.label",description:"inputDemo.samples2.description",template:'<div class="source"><vue-input :placeholder="$t(\'inputDemo.defaultPlaceholder\')" v-model="input" :disabled="true"></vue-input></div>',parameter:{data:function(){return{input:""}}},code:'<vue-input :placeholder="$t(\'inputDemo.defaultPlaceholder\')" v-model="input" :disabled="true"></vue-input>\n\n<script>\n  new Vue({\n    data: function(){\n      return {\n        input: ""\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"input3",label:"inputDemo.samples3.label",description:"inputDemo.samples3.description",template:'<div class="source"><vue-input :placeholder="$t(\'inputDemo.selectPlaceholder\')" icon="vue-icon-search" v-model="input" :on-icon-click="handleIconClick"></vue-input></div>',parameter:{data:function(){return{input:""}},methods:{handleIconClick:function(e){this.$notify({title:this.$t("inputDemo.selectPlaceholder")})}}},code:'<vue-input :placeholder="$t(\'inputDemo.selectPlaceholder\')" icon="vue-icon-search" v-model="input" :on-icon-click="handleIconClick"></vue-input>\n\n<script>\n  new Vue({\n    data: function(){\n      return {\n        input: "",\n      }\n    }\n    methods: {\n      handleIconClick: function(event) {\n        this.$notify({title: this.$t(\'inputDemo.selectPlaceholder\')});\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"input4",label:"inputDemo.samples4.label",description:"inputDemo.samples4.description",template:'<div class="source"><vue-input type="textarea" :rows="2" :placeholder="$t(\'inputDemo.defaultPlaceholder\')" v-model="textarea"></vue-input></div>',parameter:{data:function(){return{textarea:""}}},code:'<vue-input type="textarea" :rows="2" :placeholder="$t(\'inputDemo.defaultPlaceholder\')" v-model="textarea"></vue-input>\n\n<script>\n  new Vue({\n  data: function(){\n    return {\n    textarea: ""\n    }\n  }\n  }).$mount();\n<\/script>'},{id:"input5",label:"inputDemo.samples5.label",description:"inputDemo.samples5.description",template:'<div class="source"><vue-input type="textarea" autosize :placeholder="$t(\'inputDemo.defaultPlaceholder\')" v-model="textarea1"></vue-input><div style="margin: 20px 0;"></div><vue-input type="textarea" :autosize="{ minRows: 2, maxRows: 4}" :placeholder="$t(\'inputDemo.defaultPlaceholder\')" v-model="textarea2"></vue-input></div>',parameter:{data:function(){return{textarea1:"",textarea2:""}}},code:'<vue-input type="textarea" autosize :placeholder="$t(\'inputDemo.defaultPlaceholder\')" v-model="textarea1"></vue-input>\n<vue-input type="textarea" :autosize="{ minRows: 2, maxRows: 4}" :placeholder="$t(\'inputDemo.defaultPlaceholder\')" v-model="textarea2"></vue-input>\n\n<script>\n  new Vue({\n    data: function(){\n      return {\n        textarea1: "",\n        textarea2: ""\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"input6",label:"inputDemo.samples6.label",description:"inputDemo.samples6.description",template:'<div class="source"><vue-input :placeholder="$t(\'inputDemo.defaultPlaceholder\')" v-model="input1"><template slot="prepend">Http://</template></vue-input><div style="margin-top: 15px;"></div><vue-input :placeholder="$t(\'inputDemo.defaultPlaceholder\')" v-model="input2"><template slot="append">.com</template></vue-input><div style="margin-top: 15px;"></div><vue-input :placeholder="$t(\'inputDemo.defaultPlaceholder\')" v-model="input3"><vue-select v-model="select" slot="prepend" :placeholder="$t(\'inputDemo.selectPlaceholder\')" style="width:120px"><vue-option :label="$t(\'inputDemo.samples6.selectLabel1\')" value="1"></vue-option><vue-option :label="$t(\'inputDemo.samples6.selectLabel2\')" value="2"></vue-option><vue-option :label="$t(\'inputDemo.samples6.selectLabel3\')" value="3"></vue-option></vue-select><vue-button slot="append" icon="vue-icon-search"></vue-button></vue-input></div>',parameter:{data:function(){return{input1:"",input2:"",input3:"",select:""}}},code:'<vue-input :placeholder="$t(\'inputDemo.defaultPlaceholder\')" v-model="input1">\n  <template slot="prepend">Http://</template>\n</vue-input>\n<vue-input :placeholder="$t(\'inputDemo.defaultPlaceholder\')" v-model="input2">\n  <template slot="append">.com</template>\n</vue-input>\n<vue-input :placeholder="$t(\'inputDemo.defaultPlaceholder\')" v-model="input3">\n  <vue-select v-model="select" slot="prepend" :placeholder="$t(\'inputDemo.selectPlaceholder\')" style="width:120px">\n    <vue-option :label="$t(\'inputDemo.samples6.selectLabel1\')" value="1"></vue-option>\n    <vue-option :label="$t(\'inputDemo.samples6.selectLabel2\')" value="2"></vue-option>\n    <vue-option :label="$t(\'inputDemo.samples6.selectLabel3\')" value="3"></vue-option>\n  </vue-select>\n  <vue-button slot="append" icon="vue-icon-search"></vue-button>\n</vue-input>\n\n<script>\n  new Vue({\n    data: function(){\n      return {\n        input1: "",\n        input2: "",\n        input3: "",\n        select: ""\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"input7",label:"inputDemo.samples7.label",description:"inputDemo.samples7.description",template:'<div class="source"><vue-input size="large" :placeholder="$t(\'inputDemo.defaultPlaceholder\')" v-model="input1"></vue-input><div style="margin-top: 15px;"></div><vue-input :placeholder="$t(\'inputDemo.defaultPlaceholder\')" v-model="input2"></vue-input><div style="margin-top: 15px;"></div><vue-input size="small" :placeholder="$t(\'inputDemo.defaultPlaceholder\')" v-model="input3"></vue-input><div style="margin-top: 15px;"></div><vue-input size="mini" :placeholder="$t(\'inputDemo.defaultPlaceholder\')" v-model="input4"></vue-input></div>',parameter:{data:function(){return{input1:"",input2:"",input3:"",input4:""}}},code:'<vue-input size="large" :placeholder="$t(\'inputDemo.defaultPlaceholder\')" v-model="input1"></vue-input>\n<vue-input :placeholder="$t(\'inputDemo.defaultPlaceholder\')" v-model="input2"></vue-input>\n<vue-input size="small" :placeholder="$t(\'inputDemo.defaultPlaceholder\')" v-model="input3"></vue-input>\n<vue-input size="mini" :placeholder="$t(\'inputDemo.defaultPlaceholder\')" v-model="input4"></vue-input>\n\n<script>\n  new Vue({\n    data: function(){\n      return {\n        input1: "",\n        input2: "",\n        input3: "",\n        input4: ""\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"input8",label:"inputDemo.samples8.label",description:"inputDemo.samples8.description",template:'<div class="source"><vue-row class="demo-autocomplete"><vue-col :span="12"><div class="sub-title">{{$t(\'inputDemo.samples8.label1\')}}</div><vue-autocomplete v-model="state1" :fetch-suggestions="querySearch" :placeholder="$t(\'inputDemo.defaultPlaceholder\')" @select="handleSelect"></vue-autocomplete></vue-col><vue-col :span="12"><div class="sub-title">{{$t(\'inputDemo.samples8.label2\')}}</div><vue-autocomplete v-model="state2" :fetch-suggestions="querySearch" :placeholder="$t(\'inputDemo.defaultPlaceholder\')" :trigger-on-focus="false" @select="handleSelect"></vue-autocomplete></vue-col></vue-row></div>',parameter:{data:function(){return{restaurants:[],state1:"",state2:""}},methods:{querySearch:function(e,n){var t=this.restaurants;n(e?t.filter(this.createFilter(e)):t)},createFilter:function(e){return function(n){return 0===n.value.indexOf(e.toLowerCase())}},handleSelect:function(e){this.$notify({title:e.value})},loadAll:function(){return[{value:"first"},{value:"second"},{value:"first and second"}]}},mounted:function(){this.restaurants=this.loadAll()}},code:'<vue-row class="demo-autocomplete">\n  <vue-col :span="12">\n    <div class="sub-title"{{$t(\'inputDemo.samples8.label1\')}}</div>\n    <vue-autocomplete v-model="state1"\n            :fetch-suggestions="querySearch"\n            :placeholder="$t(\'inputDemo.defaultPlaceholder\')"\n            @select="handleSelect">\n    </vue-autocomplete>\n  </vue-col>\n  <vue-col :span="12">\n    <div class="sub-title">{{$t(\'inputDemo.samples8.label2\')}}</div>\n    <vue-autocomplete v-model="state2"\n            :fetch-suggestions="querySearch"\n            :placeholder="$t(\'inputDemo.defaultPlaceholder\')"\n            :trigger-on-focus="false"\n            @select="handleSelect">\n    </vue-autocomplete>\n  </vue-col>\n</vue-row>\n\n<script>\n  new Vue({\n    data: function(){\n      return {\n        restaurants: [],\n        state1: "",\n        state2: ""\n      }\n    },\n    methods: {\n      querySearch: function(queryString, cb) {\n        var restaurants = this.restaurants;\n        var results = queryString ? restaurants.filter(this.createFilter(queryString)) : restaurants;\n        cb(results);\n      },\n      createFilter: function(queryString) {\n        return function(restaurant) {\n          return (restaurant.value.indexOf(queryString.toLowerCase()) === 0);\n        };\n      },\n      handleSelect: function(item) {\n        this.$notify({title: item.value});\n      },\n      loadAll: function() {\n        return [\n          { "value": "first" },\n          { "value": "second" },\n          { "value": "first and second" }\n        ]\n      }\n    },\n    mounted: function() {\n      this.restaurants = this.loadAll();\n    }\n  }).$mount();\n<\/script>'},{id:"input10",label:"Input Attributes",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"type",column2:"inputDemo.samples10.row1column2",column3:"String",column4:"text, textarea",column5:"text"},{column1:"value",column2:"inputDemo.samples10.row2column2",column3:"String, number",column4:"",column5:""},{column1:"maxlength",column2:"inputDemo.samples10.row3column2",column3:"Number",column4:"",column5:""},{column1:"minlength",column2:"inputDemo.samples10.row4column2",column3:"Number",column4:"",column5:""},{column1:"placeholder",column2:"inputDemo.samples10.row5column2",column3:"String",column4:"",column5:""},{column1:"disabled",column2:"inputDemo.samples10.row6column2",column3:"Boolean",column4:"",column5:"false"},{column1:"size",column2:"inputDemo.samples10.row7column2",column3:"String",column4:"large, small, mini",column5:""},{column1:"prefix-icon",column2:"inputDemo.samples10.row8column2",column3:"String",column4:"",column5:""},{column1:"icon",column2:"inputDemo.samples10.row9column2",column3:"String",column4:"",column5:""},{column1:"rows",column2:"inputDemo.samples10.row10column2",column3:"Number",column4:"",column5:"2"},{column1:"cleave",column2:"inputDemo.samples10.row11column2",column3:"Object",column4:"",column5:""},{column1:"autosize",column2:"inputDemo.samples10.row12column2",column3:"Boolean / Object",column4:"",column5:"false"},{column1:"auto-complete",column2:"inputDemo.samples10.row13column2",column3:"String",column4:"on, off",column5:"off"},{column1:"name",column2:"inputDemo.samples10.row14column2",column3:"String",column4:"",column5:""},{column1:"readonly",column2:"inputDemo.samples10.row15column2",column3:"Boolean",column4:"",column5:"false"},{column1:"max",column2:"inputDemo.samples10.row16column2",column3:"Number",column4:"",column5:""},{column1:"min",column2:"inputDemo.samples10.row17column2",column3:"Number",column4:"",column5:""},{column1:"step",column2:"inputDemo.samples10.row18column2",column3:"Number",column4:"",column5:""},{column1:"resize",column2:"inputDemo.samples10.row19column2",column3:"String",column4:"none, both, horizontal, vertical",column5:""},{column1:"autofocus",column2:"inputDemo.samples10.row20column2",column3:"Boolean",column4:"",column5:"false"},{column1:"text-align",column2:"inputDemo.samples10.row21column2",column3:"String",column4:"center, right",column5:""},{column1:"form",column2:"inputDemo.samples10.row22column2",column3:"String",column4:"",column5:""},{column1:"on-icon-click",column2:"inputDemo.samples10.row23column2",column3:"Function",column4:"",column5:""},{column1:"key-board-type",column2:"inputDemo.samples10.row24column2",column3:"Boolean",column4:"",column5:"true"}]}}},notshowmeta:!0},{id:"input15",label:"Cleave Options",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"creditCard",column2:"inputDemo.samples15.row1column2",column3:"Boolean",column4:"",column5:"false"},{column1:"onCreditCardTypeChanged",column2:"inputDemo.samples15.row2column2",column3:"Function",column4:"",column5:""},{column1:"phone",column2:"inputDemo.samples15.row3column2",column3:"Boolean",column4:"",column5:"false"},{column1:"phoneRegionCode",column2:"inputDemo.samples15.row4column2",column3:"String",column4:"",column5:"CN"},{column1:"date",column2:"inputDemo.samples15.row5column2",column3:"Boolean",column4:"",column5:"false"},{column1:"datePattern",column2:"inputDemo.samples15.row6column2",column3:"Array",column4:"'Y', 'y', 'm', 'd'",column5:"['Y', 'm', 'd']"},{column1:"numeral",column2:"inputDemo.samples15.row7column2",column3:"Boolean",column4:"",column5:"false"},{column1:"numeralThousandsGroupStyle",column2:"inputDemo.samples15.row8column2",column3:"String",column4:"thousand, lakh, wan (lakh: '12,34,567.89', wan: '123,4567.89')",column5:"thousand"},{column1:"numeralIntegerScale",column2:"inputDemo.samples15.row9column2",column3:"Number",column4:"",column5:""},{column1:"numeralDecimalScale",column2:"inputDemo.samples15.row10column2",column3:"Number",column4:"",column5:"2"},{column1:"numeralDecimalMark",column2:"inputDemo.samples15.row11column2",column3:"String",column4:"",column5:"."},{column1:"numeralPositiveOnly",column2:"inputDemo.samples15.row12column2",column3:"Boolean",column4:"",column5:"false"},{column1:"blocks",column2:"inputDemo.samples15.row13column2",column3:"Array",column4:"",column5:""},{column1:"delimiter",column2:"inputDemo.samples15.row14column2",column3:"String",column4:"",column5:"date:'/', numeral:','"},{column1:"delimiters",column2:"inputDemo.samples15.row15column2",column3:"Array",column4:"",column5:""},{column1:"prefix",column2:"inputDemo.samples15.row16column2",column3:"String",column4:"",column5:"null"},{column1:"rawValueTrimPrefix",column2:"inputDemo.samples15.row17column2",column3:"Boolean",column4:"",column5:"false"},{column1:"numericOnly",column2:"inputDemo.samples15.row18column2",column3:"Boolean",column4:"",column5:"false"},{column1:"uppercase",column2:"inputDemo.samples15.row19column2",column3:"Boolean",column4:"",column5:"false"},{column1:"lowercase",column2:"inputDemo.samples15.row20column2",column3:"Boolean",column4:"",column5:"false"},{column1:"customFormatter",column2:"inputDemo.samples15.row21column2",column3:"Function",column4:"",column5:""}]}}},notshowmeta:!0},{id:"input11",label:"Input Events",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"click",column2:"inputDemo.samples11.row1column2",column3:"(event: Event)"},{column1:"blur",column2:"inputDemo.samples11.row2column2",column3:"(event: Event)"},{column1:"focus",column2:"inputDemo.samples11.row3column2",column3:"(event: Event)"},{column1:"change",column2:"inputDemo.samples11.row4column2",column3:"(value: string | number)"}]}}},notshowmeta:!0},{id:"input12",label:"Autocomplete Attributes",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"placeholder",column2:"inputDemo.samples12.row1column2",column3:"String",column4:"",column5:""},{column1:"disabled",column2:"inputDemo.samples12.row2column2",column3:"Boolean",column4:"",column5:"false"},{column1:"value",column2:"inputDemo.samples12.row3column2",column3:"String",column4:"",column5:""},{column1:"custom-item",column2:"inputDemo.samples12.row4column2",column3:"String",column4:"",column5:""},{column1:"text-align",column2:"inputDemo.samples10.row22column2",column3:"String",column4:"center, right",column5:""},{column1:"fetch-suggestions",column2:"inputDemo.samples12.row5column2",column3:"Function(queryString, callback)",column4:"",column5:""},{column1:"popper-class",column2:"inputDemo.samples12.row6column2",column3:"String",column4:"",column5:""},{column1:"trigger-on-focus",column2:"inputDemo.samples12.row7column2",column3:"Boolean",column4:"",column5:"true"},{column1:"on-icon-click",column2:"inputDemo.samples12.row8column2",column3:"Function",column4:"",column5:""},{column1:"icon",column2:"inputDemo.samples12.row9column2",column3:"String",column4:"",column5:""},{column1:"props",column2:"inputDemo.samples12.row10column2",column3:"Object",column4:"",column5:""}]}}},notshowmeta:!0},{id:"input13",label:"Autocomplete props",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"value",column2:"inputDemo.samples13.row1column2",column3:"String",column4:"",column5:""},{column1:"label",column2:"inputDemo.samples13.row2column2",column3:"String",column4:"",column5:""}]}}},notshowmeta:!0},{id:"input14",label:"Autocomplete Events",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"select",column2:"inputDemo.samples14.row1column2",column3:"(selectItem: SelectItem)"}]}}},notshowmeta:!0},{id:"input16",label:"Methods",template:'<method-table :data="tableData"></method-table>',parameter:{data:function(){return{tableData:[{column1:"focus",column2:"inputDemo.samples16.row1column2",column3:""}]}}},notshowmeta:!0}]}},"./demo/InstallDemo.js":
/*!*****************************!*\
  !*** ./demo/InstallDemo.js ***!
  \*****************************/
/*! no static exports found */function(e,n,t){var l=t(/*! ./BrushJsp */"./demo/BrushJsp.js"),o={path:"/install",name:"install",head:{label:"installDemo.label",description:""},samples:[{id:"install1",label:"installDemo.samples1.label",description:"installDemo.samples1.description",collapse:["item1"],notshowblock:!0,code:'\x3c!-- import css --\x3e\n<link rel="stylesheet" href="https://spring21cn.github.io/vue-component/css/component.min.css">\n\x3c!-- import Vue --\x3e\n<script src="https://spring21cn.github.io/vue-component/js/vue-all.min.js"><\/script>\n\x3c!-- import component --\x3e\n<script src="https://spring21cn.github.io/vue-component/js/vue-component-all.min.js"><\/script>\n\n\x3c!-- GitLab --\x3e\n"https://spring21cn.github.io/vue-component/"'},{id:"install6",label:"installDemo.samples6.label",description:"installDemo.samples6.description",collapse:["item1"],notshowblock:!0,code:"npm i viy-ui \n    \n//vue.config.js    \nmodule.exports = { \n  chainWebpack: config => { \n    config.module \n      .rule('js') \n      .exclude \n      .add(function() { \n          return [ \n              'node_modules/viy-ui', //babel-loader exclude viy-ui, speed up compile. \n          ] \n      }) \n      .end() \n  }, \n  runtimeCompiler: true  //viy-ui use the build of Vue core that includes the runtime compiler. \n} \n    "},{id:"install2",label:"Hello world",description:"installDemo.samples2.description",collapse:["item1"],notshowblock:!0,code:'<!DOCTYPE html>\n<html>\n<head>\n  <meta charset="UTF-8">\n  \x3c!-- import css --\x3e\n  <link rel="stylesheet" href="https://spring21cn.github.io/vue-component/css/component.min.css">\n</head>\n<body>\n  <div id="app" v-cloak>\n    <vue-button @click="visible = true">OK</vue-button>\n    <vue-dialog v-model="visible" title="Hello world" show-close>\n      <p>Welcome</p>\n    </vue-dialog>\n  </div>\n</body>\n\x3c!-- import Vue --\x3e\n<script src="https://spring21cn.github.io/vue-component/js/vue-all.min.js"><\/script>\n\x3c!-- import component --\x3e\n<script src="https://spring21cn.github.io/vue-component/js/vue-component-all.min.js"><\/script>\n<script>\n  var app = new Vue({\n    data: function(){\n      return { visible: false }\n    }\n  }).$mount("#app");\n<\/script>\n</html>'},{id:"install3",label:"VueUtil",description:"installDemo.samples3.description",template:'<code-table :data="tableData"></code-table>',parameter:{methods:{expandHandle:function(e,n){n&&l.highlight()}},data:function(){return{tableData:[{column1:"isDef",column2:"installDemo.samples3.row1column2",column3:" /*  @param   : {Object}\n  *  @return  : {Boolean}\n  */\n   VueUtil.isDef(123);  // true\n   VueUtil.isDef(null); // false"},{column1:"isString",column2:"installDemo.samples3.row2column2",column3:" /*  @param   : {Object}\n  *  @return  : {Boolean}\n  */\n   VueUtil.isString(123);   // false\n   VueUtil.isString('123'); // true"},{column1:"isNumber",column2:"installDemo.samples3.row3column2",column3:" /*  @param   : {Object}\n  *  @return  : {Boolean}\n  */\n   VueUtil.isNumber(123);   // true\n   VueUtil.isNumber('123'); // false"},{column1:"isBoolean",column2:"installDemo.samples3.row4column2",column3:" /*  @param   : {Object}\n  *  @return  : {Boolean}\n  */\n   VueUtil.isBoolean(123);   // false\n   VueUtil.isBoolean(false); // true"},{column1:"isFile",column2:"installDemo.samples3.row5column2",column3:" /*  @param   : {Object}\n  *  @return  : {Boolean}\n  */\n   VueUtil.isFile(123);   // false"},{column1:"isObject",column2:"installDemo.samples3.row6column2",column3:' /*  @param   : {Object}\n  *  @return  : {Boolean}\n  */\n   VueUtil.isObject(123);     // false\n   VueUtil.isObject({"a":"a"}); // true'},{column1:"isArray",column2:"installDemo.samples3.row7column2",column3:" /*  @param   : {Object}\n  *  @return  : {Boolean}\n  */\n   VueUtil.isArray(123);   // false\n   VueUtil.isArray([1,2]); // true"},{column1:"isFunction",column2:"installDemo.samples3.row8column2",column3:" /*  @param   : {Object}\n  *  @return  : {Boolean}\n  */\n   VueUtil.isFunction(123);   // false\n   var test = function() {};\n   VueUtil.isFunction(test); // true"},{column1:"isDate",column2:"installDemo.samples3.row9column2",column3:" /*  @param   : {Object}\n  *  @return  : {Boolean}\n  */\n   VueUtil.isDate(123);    // false\n   VueUtil.isDate(new Date()); // true"},{column1:"isNodeList",column2:"installDemo.samples3.row10column2",column3:' /*  @param   : {Object}\n  *  @return  : {Boolean}\n  */\n   VueUtil.isNodeList(123);  // false\n   var test = document.querySelectorAll("div")\n   VueUtil.isNodeList(test); // true'},{column1:"isElement",column2:"installDemo.samples3.row11column2",column3:' /*  @param   : {Object}\n  *  @return  : {Boolean}\n  */\n   var divAll = document.querySelectorAll("div")\n   VueUtil.isElement(divAll); // false\n   var div = document.querySelector("div")\n   VueUtil.isElement(div);  // true'},{column1:"isVNode",column2:"installDemo.samples3.row12column2",column3:" /*  @param   : {Object}\n  *  @return  : {Boolean}\n  */\n   VueUtil.isVNode(123);  // false"},{column1:"toString",column2:"installDemo.samples3.row13column2",column3:' /*  @param   : {Object}\n  *  @return  : {String}\n  */\n   VueUtil.toString(null); // ""\n   VueUtil.toString(123);  // "123"\n   var test = {"a":1};\n   VueUtil.toString(test); // "{"a": 1}"\n   var test = function() {};\n   VueUtil.toString(test); // "function() {}"\n   var test = [1,2];\n   VueUtil.toString(test); // "[1,2]"'},{column1:"toDate",column2:"installDemo.samples3.row14column2",column3:' /*  @param   : {Object}\n  *  @return  : {Date}\n  */\n   VueUtil.toDate(null);     // null\n   VueUtil.toDate(123);      // Thu Jan 01 1970 08:00:00 GMT+0800 (中国标准时间)\n   VueUtil.toDate("abc");    // null\n   VueUtil.toDate("2017-01-01"); // Sun Jan 01 2017 08:00:00 GMT+0800 (中国标准时间)'},{column1:"formatNumber",column2:"installDemo.samples3.row58column2",column3:' /*  @param   : {Number}\n  *  @param   : {Number} 保留小数位数, 默认为2\n  *  @param   : {String} 小数位, 默认为"."\n  *  @param   : {String} 千分位, 默认为","\n  *  @return  : {String}\n  */\n   VueUtil.formatNumber("abc");             // null\n   VueUtil.formatNumber(12345);             // 12,345.00\n   VueUtil.formatNumber(12345.6789, 3);         // 12,345.679\n   VueUtil.formatNumber(12345.6789, 3, ",", ".");     // 12.345,679'},{column1:"formatDate",column2:"installDemo.samples3.row15column2",column3:' /*  @param   : {Object}\n  *  @param   : {String} 转换格式, 默认为"yyyy-MM-dd"\n  *  @return  : {String}\n  */\n   VueUtil.formatDate("abc");             // null\n   VueUtil.formatDate(new Date);            // "2017-12-21"\n   VueUtil.formatDate(new Date, "yy/MM/dd");      // "17/12/21"\n   VueUtil.formatDate(1234, "yyyy-MM-dd HH:mm:ssss"); // "1970-01-01 08:00:0101"'},{column1:"parseDate",column2:"installDemo.samples3.row16column2",column3:' /*  @param   : {Object}\n  *  @param   : {String} 转换格式, 默认为"yyyy-MM-dd"\n  *  @return  : {Date}\n  */\n   VueUtil.parseDate("abc");             // null\n   VueUtil.parseDate("2017-01-01");          // Sun Jan 01 2017 00:00:00 GMT+0800 (中国标准时间)\n   VueUtil.parseDate("17/11/01", "yy/MM/dd");    // Wed Nov 01 2017 00:00:00 GMT+0800 (中国标准时间)\n   VueUtil.parseDate(1234, "yyyy-MM-dd HH:mm:ssss"); // Thu Jan 01 1970 08:00:01 GMT+0800 (中国标准时间)'},{column1:"getDayCountOfMonth",column2:"installDemo.samples3.row17column2",column3:' /*  @param   : {Number} 年\n  *  @param   : {Number} 月\n  *  @return  : {Number}\n  */\n   VueUtil.getDayCountOfMonth("2017", 1); // null\n   VueUtil.getDayCountOfMonth(2017, 1);   // 31\n   VueUtil.getDayCountOfMonth(2000, 2);   // 29'},{column1:"getFirstDayOfMonth",column2:"installDemo.samples3.row18column2",column3:' /*  @param   : {Date}\n  *  @return  : {Number}\n  */\n   VueUtil.getFirstDayOfMonth("abc");               // null\n   VueUtil.getFirstDayOfMonth(VueUtil.parseDate("2017-01-01")); // 0 /*周日*/\n   VueUtil.getFirstDayOfMonth(VueUtil.parseDate("2017-12-21")); // 5 /*周五*/'},{column1:"getWeekNumber",column2:"installDemo.samples3.row19column2",column3:' /*  @param   : {Date}\n  *  @return  : {Number}\n  */\n   VueUtil.getWeekNumber("abc");               // null\n   VueUtil.getWeekNumber(VueUtil.parseDate("2017-01-01")); // 1 /*第1周*/\n   VueUtil.getWeekNumber(VueUtil.parseDate("2017-12-21")); // 51 /*第51周*/'},{column1:"addDate",column2:"installDemo.samples3.row20column2",column3:' /*  @param   : {Date}\n  *  @param   : {Number} 向前或向后的天数\n  *  @param   : {String} 类型: "week", "day", "month", "year", 默认为 "day"\n  *  @return  : {Date}\n  */\n   VueUtil.addDate(VueUtil.parseDate("2017-01-01"), 5);      // Fri Jan 06 2017 00:00:00 GMT+0800 (中国标准时间)\n   VueUtil.addDate(VueUtil.parseDate("2017-10-01"), -1, "week"); // Sun Sep 24 2017 00:00:00 GMT+0800 (中国标准时间)\n   VueUtil.addDate(VueUtil.parseDate("2017-10-01"), 3, "year");  // Thu Oct 01 2020 00:00:00 GMT+0800 (中国标准时间)'},{column1:"loop",column2:"installDemo.samples3.row21column2",column3:' /*  @param   : {Object}\n  *  @param   : {Function}\n  */\n   VueUtil.loop([1,2], function(item) {\n     console.log(item)\n   });\n\n   VueUtil.loop(document.querySelectorAll("div"), function(div) {\n     console.log(div.className)\n   });'},{column1:"ownPropertyLoop",column2:"installDemo.samples3.row22column2",column3:' /*  @param   : {Object}\n  *  @param   : {Function}\n  */\n   var test = {"a":2, "b":1};\n   VueUtil.ownPropertyLoop(test, function(key) {\n     console.log(key)    // a b\n     console.log(test[key]) // 2 1\n   });'},{column1:"trim",column2:"installDemo.samples3.row23column2",column3:' /*  @param   : {String}\n  *  @return  : {String}\n  */\n   VueUtil.trim(" abc "); // "abc"\n   VueUtil.trim(123);   // ""'},{column1:"deepCopy",column2:"installDemo.samples3.row59column2",column3:' /*  @param   : {Object}\n  *  @return  : {Object}\n  */\n   var test1 = {"a":1, "b":2, "c":{"a":[{"a":4, "b":function(){}}]}};\n   var test2 = VueUtil.deepCopy(test1);\n   test2.c.a[0].a= 2;\n   console.log(test1) // {"a":1, "b":2, "c":{"a":[{"a":4, "b":function(){}}]}}\n   console.log(test2) // {"a":1, "b":2, "c":{"a":[{"a":2, "b":function(){}}]}}'},{column1:"merge",column2:"installDemo.samples3.row24column2",column3:' /*  @param   : {Object}\n  *  @return  : {Object}\n  */\n   var test1 = {"a":2, "b":1};\n   var test2 = {"a":3, "c":4};\n   var test3 = VueUtil.merge(test1, test2);\n   console.log(test1) // {a: 3, b: 1, c: 4}\n   console.log(test3) // {a: 3, b: 1, c: 4}'},{column1:"mergeArray",column2:"installDemo.samples3.row25column2",column3:" /*  @param   : {Array}\n  *  @return  : {Array}\n  */\n   var test1 = [1,2,3,[1,2]];\n   var test2 = VueUtil.mergeArray([], test1);\n   test2[3][0] = 2;\n   console.log(test1) // [1,2,3,[1,2]]\n   console.log(test2) // [1,2,3,[2,2]]"},{column1:"on",column2:"installDemo.samples3.row26column2",column3:' /*  @param   : {Object} 绑定事件对象\n  *  @param   : {String} 表示绑定事件类型的字符串\n  *  @param   : {Function} 绑定事件的回调函数\n  */\n   VueUtil.on(document.querySelector("div"), "click", function() {});'},{column1:"off",column2:"installDemo.samples3.row27column2",column3:' /*  @param   : {Object} 移除事件对象\n  *  @param   : {String} 表示移除事件类型的字符串\n  *  @param   : {Function} 移除事件的回调函数\n  */\n   VueUtil.off(document.querySelector("div"), "click", function() {});'},{column1:"once",column2:"installDemo.samples3.row28column2",column3:' /*  @param   : {Object} 绑定事件对象\n  *  @param   : {String} 表示绑定事件类型的字符串\n  *  @param   : {Function} 绑定事件的回调函数\n  */\n   VueUtil.once(document.querySelector("div"), "click", function() {});'},{column1:"removeNode",column2:"installDemo.samples3.row41column2",column3:' /*  @param   : {Element}  */\n   VueUtil.removeNode(document.querySelector("div"));'},{column1:"insertNodeAt",column2:"installDemo.samples3.row42column2",column3:' /*  @param   : {Element} 父节点\n  *  @param   : {Element} 插入节点\n  *  @param   : {Number} 节点位置  */\n   VueUtil.insertNodeAt(document.body, document.querySelector("div"), 3);'},{column1:"scrollBarWidth",column2:"installDemo.samples3.row43column2",column3:" /*  @return  : {Number} */\n   var scrollBarWidth = VueUtil.scrollBarWidth();"},{column1:"hasClass",column2:"installDemo.samples3.row29column2",column3:' /*  @param   : {Element}\n  *  @param   : {String}\n  *  @return  : {Boolean}\n  */\n   VueUtil.hasClass(document.querySelector("div"), "test");'},{column1:"addClass",column2:"installDemo.samples3.row30column2",column3:' /*  @param   : {Element}\n  *  @param   : {String}\n  */\n   VueUtil.addClass(document.querySelector("div"), "test");'},{column1:"removeClass",column2:"installDemo.samples3.row31column2",column3:' /*  @param   : {Element}\n  *  @param   : {String}\n  */\n   VueUtil.removeClass(document.querySelector("div"), "test");'},{column1:"getStyle",column2:"installDemo.samples3.row32column2",column3:' /*  @param   : {Element}\n  *  @param   : {String}\n  *  @return  : {Boolean}\n  */\n   VueUtil.getStyle(document.querySelector("div"), "display");'},{column1:"setStyle",column2:"installDemo.samples3.row33column2",column3:' /*  @param   : {Element}\n  *  @param   : {String}\n  *  @param   : {String}\n  */\n   VueUtil.setStyle(document.querySelector("div"), "display", "none");'},{column1:"getCookie",column2:"installDemo.samples3.row34column2",column3:' /*  @param   : {String}\n  */\n   VueUtil.getCookie("myCookie");'},{column1:"setCookie",column2:"installDemo.samples3.row35column2",column3:' /*  @param   : {String}\n  *  @param   : {String}\n  *  @param   : {Number} cookie 几天后失效, 默认为1天\n  */\n   VueUtil.setCookie("myCookie", "this is my cookie", 2);'},{column1:"removeCookie",column2:"installDemo.samples3.row36column2",column3:' /*  @param   : {String}\n  */\n   VueUtil.removeCookie("myCookie");'},{column1:"throttle",column2:"installDemo.samples3.row37column2",column3:' /*  @param   : {Number} 可选, 周期时间, 默认16ms\n  *  @param   : {Function}\n  *  @return  : {Function}\n  */\n   var fn = VueUtil.throttle(100, function() {\n     console.log("throttle");\n   });\n   var fn = VueUtil.throttle(function() {\n     console.log("throttle");\n   });\n'},{column1:"debounce",column2:"installDemo.samples3.row38column2",column3:' /*  @param   : {Number} 可选, 周期时间, 默认16ms\n  *  @param   : {Function}\n  *  @return  : {Function}\n  */\n   var fn = VueUtil.debounce(100, function() {\n     console.log("debounce");\n   });\n   var fn = VueUtil.debounce(function() {\n     console.log("debounce");\n   });\n'},{column1:"addResizeListener",column2:"installDemo.samples3.row39column2",column3:' /*  @param   : {Object} 绑定resize事件的对象\n  *  @param   : {Function} 绑定resize事件的回调函数\n  */\n   VueUtil.addResizeListener(document.querySelector("div"), function() {\n     console.log("test");\n   });\n'},{column1:"removeResizeListener",column2:"installDemo.samples3.row40column2",column3:' /*  @param   : {Object} 移除resize事件的对象\n  *  @param   : {Function} 移除resize事件的回调函数\n  */\n   VueUtil.removeResizeListener(document.querySelector("div"), function() {\n     console.log("test");\n   });\n'},{column1:"addHoverListener",column2:"installDemo.samples3.row56column2",column3:' /*  @param   : {Object} 绑定hover事件的对象\n  *  @param   : {Function} 绑定in的回调函数\n  *  @param   : {Function} 绑定out的回调函数, 可选, 默认为in的回调函数\n   */\n   VueUtil.addHoverListener(document.querySelector("div"), function() {\n     console.log("test");\n   });\n'},{column1:"removeHoverListener",column2:"installDemo.samples3.row57column2",column3:' /*  @param   : {Object} 移除hover事件的对象\n  *  @param   : {Function} 移除in事件的回调函数\n  *  @param   : {Function} 移除out事件的回调函数, 可选, 默认为in的回调函数\n  */\n   VueUtil.removeHoverListener(document.querySelector("div"), function() {\n     console.log("test");\n   });\n'},{column1:"addTouchStart",column2:"installDemo.samples3.row44column2",column3:' /*  @param   : {Object}\n  *  @param   : {Function}\n  */\n   VueUtil.addTouchStart(document.querySelector("div"), function() {\n     console.log("test");\n   });\n'},{column1:"addTouchMove",column2:"installDemo.samples3.row45column2",column3:' /*  @param   : {Object}\n  *  @param   : {Function}\n  */\n   VueUtil.addTouchMove(document.querySelector("div"), function() {\n     console.log("test");\n   });\n'},{column1:"addTouchEnd",column2:"installDemo.samples3.row46column2",column3:' /*  @param   : {Object}\n  *  @param   : {Function}\n  */\n   VueUtil.addTouchEnd(document.querySelector("div"), function() {\n     console.log("test");\n   });\n'},{column1:"removeTouchStart",column2:"installDemo.samples3.row47column2",column3:' /*  @param   : {Object}\n  *  @param   : {Function}\n  */\n   VueUtil.removeTouchStart(document.querySelector("div"), function() {\n     console.log("test");\n   });\n'},{column1:"removeTouchMove",column2:"installDemo.samples3.row48column2",column3:' /*  @param   : {Object}\n  *  @param   : {Function}\n  */\n   VueUtil.removeTouchMove(document.querySelector("div"), function() {\n     console.log("test");\n   });\n'},{column1:"removeTouchEnd",column2:"installDemo.samples3.row49column2",column3:' /*  @param   : {Object}\n  *  @param   : {Function}\n  */\n   VueUtil.removeTouchEnd(document.querySelector("div"), function() {\n     console.log("test");\n   });\n'},{column1:"screenfull",column2:"installDemo.samples3.row50column2",column3:" /*  */\n VueUtil.screenfull();"},{column1:"getSystemInfo",column2:"installDemo.samples3.row51column2",column3:' /*  */\n VueUtil.getSystemInfo();\n // result\n // {\n //   device:"PC"\n //   os:"Windows"\n //   osVersion:"7"\n //   browser:"Chrome"\n //   version:"63.0.3239.84"\n //   language:"zh_CN"\n // }'},{column1:"setLang",column2:"installDemo.samples3.row52column2",column3:' /*  @param   : {String}  */\n   VueUtil.setLang("zh");'},{column1:"setLocale",column2:"installDemo.samples3.row53column2",column3:' /*  @param   : {String}\n  *  @param   : {Object}\n  */\n   var locales = {\n     zh: {\n       button: {\n         label1: "中文",\n         label2: "日文",\n         label3: "英文"\n       }\n     }\n   };\n   VueUtil.setLocale("zh", locales.zh);'},{column1:"config",column2:"installDemo.samples3.row54column2",column3:" /*  */\n VueUtil.config.produceModel = true; //开启生产模式, 取消Vue代码检查及日志输出\n VueUtil.config.notifyStack = true; //开启通知堆叠效果"},{column1:"nextZIndex",column2:"installDemo.samples3.row55column2",column3:" /*  */\n var zIndex = VueUtil.nextZIndex();"}]}}},notshowmeta:!0},{id:"install4",label:"installDemo.samples4.label",description:"installDemo.samples4.description",collapse:["item1"],notshowblock:!0,code:'\x3c!-- 挂载方法 --\x3e\n// 创建并挂载到 #app (会替换 #app)\nnew MyComponent().$mount(\'#app\')\n\n// 同上\nnew MyComponent({ el: \'#app\' })\n\n// 在文档之外渲染并且随后挂载\nvar component = new MyComponent().$mount()\ndocument.getElementById(\'app\').appendChild(component.$el)\n\n\n\x3c!-- 在表单控件或者组件上创建双向绑定 v-model --\x3e\n<input v-model="message">\n<p>Message is: {{ message }}</p>\n\n\n\x3c!-- 表单控件或者组件的循环 v-for --\x3e\n// 遍历当前的元素\n<div v-for="item in items">\n  {{ item.text }}\n</div>\n\n// 为数组索引指定别名（或者用于对象的键）\n<div v-for="(item, index) in items"></div>\n<div v-for="(val, key) in object"></div>\n<div v-for="(val, key, index) in object"></div>\n\n// v-for 默认行为试着不改变整体，而是替换元素。迫使其重新排序的元素,您需要提供一个 key 的特殊属性\n<div v-for="item in items" :key="item.id">\n  {{ item.text }}\n</div>\n\n\n\x3c!-- 表单控件或者组件的判断 v-if --\x3e\n// 条件可见\n<h1 v-if="ok">Yes</h1>\n\n// 添加else\n<h1 v-if="ok">Yes</h1>\n<h1 v-else>No</h1>\n\n// 条件为表达式\n<div v-if="Math.random() > 0.5">\n  Now you see me\n</div>\n<div v-else>\n  Now you do not\n</div>\n\n\n\x3c!-- 表单控件或者组件的事件绑定 \'v-on\' 缩写：\'@\' --\x3e\n// 方法处理器\n<button v-on:click="doThis"></button>\n\n// 对象语法 (2.4.0+)\n<button v-on="{ mousedown: doThis, mouseup: doThat }"></button>\n\n// 内联语句\n<button v-on:click="doThat(\'hello\', $event)"></button>\n\n// 缩写\n<button @click="doThis"></button>\n\n// 停止冒泡\n<button @click.stop="doThis"></button>\n\n// 阻止默认行为\n<button @click.prevent="doThis"></button>\n\n// 阻止默认行为，没有表达式\n<form @submit.prevent></form>\n\n// 串联修饰符\n<button @click.stop.prevent="doThis"></button>\n\n// 键修饰符，键别名\n<input @keyup.enter="onEnter">\n\n// 键修饰符，键代码\n<input @keyup.13="onEnter">\n\n// 点击回调只会触发一次\n<button v-on:click.once="doThis"></button>\n\n\n\x3c!-- 表单控件或者组件的绑定 DOM 属性 \'v-bind\' 缩写：\':\' --\x3e\n// 绑定一个属性\n<img v-bind:src="imageSrc">\n\n// 缩写\n<img :src="imageSrc">\n\n// 内联字符串拼接\n<img :src="\'/path/to/images/\' + fileName">\n\n// class 绑定\n<div :class="{ red: isRed }"></div>\n<div :class="[classA, classB]"></div>\n<div :class="[classA, { classB: isB, classC: isC }]">\n\n// style 绑定\n<div :style="{ fontSize: size + \'px\' }"></div>\n<div :style="[styleObjectA, styleObjectB]"></div>\n\n// 绑定一个有属性的对象\n<div v-bind="{ id: someProp, \'other-attr\': otherProp }"></div>\n\n// 通过 prop 修饰符绑定 DOM 属性\n<div v-bind:text-content.prop="text"></div>\n\n// prop 绑定。“prop”必须在 my-component 中声明。\n<my-component :prop="someThing"></my-component>\n\n// 通过 $props 将父组件的 props 一起传给子组件\n<child-component v-bind="$props"></child-component>'}]};e.exports=o},"./demo/LayoutDemo.js":
/*!****************************!*\
  !*** ./demo/LayoutDemo.js ***!
  \****************************/
/*! no static exports found */function(e,n,t){"use strict";e.exports={path:"/layout",name:"layout",head:{label:"layoutDemo.label",description:"layoutDemo.description"},samples:[{id:"layout1",label:"layoutDemo.samples1.label",description:"layoutDemo.samples1.description",template:'<div class="source"><vue-row class="margin-bottom20"><vue-col :span="24"><div class="grid-content bg-purple-dark"></div></vue-col></vue-row><vue-row class="margin-bottom20"><vue-col :span="12"><div class="grid-content bg-purple"></div></vue-col><vue-col :span="12"><div class="grid-content bg-purple-light"></div></vue-col></vue-row><vue-row class="margin-bottom20"><vue-col :span="8"><div class="grid-content bg-purple"></div></vue-col><vue-col :span="8"><div class="grid-content bg-purple-light"></div></vue-col><vue-col :span="8"><div class="grid-content bg-purple"></div></vue-col></vue-row><vue-row class="margin-bottom20"><vue-col :span="6"><div class="grid-content bg-purple"></div></vue-col><vue-col :span="6"><div class="grid-content bg-purple-light"></div></vue-col><vue-col :span="6"><div class="grid-content bg-purple"></div></vue-col><vue-col :span="6"><div class="grid-content bg-purple-light"></div></vue-col></vue-row><vue-row class="margin-bottom20"><vue-col :span="4"><div class="grid-content bg-purple"></div></vue-col><vue-col :span="4"><div class="grid-content bg-purple-light"></div></vue-col><vue-col :span="4"><div class="grid-content bg-purple"></div></vue-col><vue-col :span="4"><div class="grid-content bg-purple-light"></div></vue-col><vue-col :span="4"><div class="grid-content bg-purple"></div></vue-col><vue-col :span="4"><div class="grid-content bg-purple-light"></div></vue-col></vue-row></div>',code:'<vue-row>\n  <vue-col :span="24"><div class="grid-content bg-purple-dark"></div></vue-col>\n</vue-row>\n<vue-row>\n  <vue-col :span="12"><div class="grid-content bg-purple"></div></vue-col>\n  <vue-col :span="12"><div class="grid-content bg-purple-light"></div></vue-col>\n  </vue-row>\n<vue-row>\n  <vue-col :span="8"><div class="grid-content bg-purple"></div></vue-col>\n  <vue-col :span="8"><div class="grid-content bg-purple-light"></div></vue-col>\n  <vue-col :span="8"><div class="grid-content bg-purple"></div></vue-col>\n</vue-row>\n<vue-row>\n  <vue-col :span="6"><div class="grid-content bg-purple"></div></vue-col>\n  <vue-col :span="6"><div class="grid-content bg-purple-light"></div></vue-col>\n  <vue-col :span="6"><div class="grid-content bg-purple"></div></vue-col>\n  <vue-col :span="6"><div class="grid-content bg-purple-light"></div></vue-col>\n</vue-row>\n<vue-row>\n  <vue-col :span="4"><div class="grid-content bg-purple"></div></vue-col>\n  <vue-col :span="4"><div class="grid-content bg-purple-light"></div></vue-col>\n  <vue-col :span="4"><div class="grid-content bg-purple"></div></vue-col>\n  <vue-col :span="4"><div class="grid-content bg-purple-light"></div></vue-col>\n  <vue-col :span="4"><div class="grid-content bg-purple"></div></vue-col>\n  <vue-col :span="4"><div class="grid-content bg-purple-light"></div></vue-col>\n</vue-row>'},{id:"layout2",label:"layoutDemo.samples2.label",description:"layoutDemo.samples2.description",template:'<div class="source"><vue-row :gutter="20"><vue-col :span="6"><div class="grid-content bg-purple"></div></vue-col><vue-col :span="6"><div class="grid-content bg-purple"></div></vue-col><vue-col :span="6"><div class="grid-content bg-purple"></div></vue-col><vue-col :span="6"><div class="grid-content bg-purple"></div></vue-col></vue-row></div>',code:'<vue-row :gutter="20">\n  <vue-col :span="6"><div class="grid-content bg-purple"></div></vue-col>\n  <vue-col :span="6"><div class="grid-content bg-purple"></div></vue-col>\n  <vue-col :span="6"><div class="grid-content bg-purple"></div></vue-col>\n  <vue-col :span="6"><div class="grid-content bg-purple"></div></vue-col>\n</vue-row>'},{id:"layout3",label:"layoutDemo.samples3.label",description:"layoutDemo.samples3.description",template:'<div class="source"><vue-row class="margin-bottom20" :gutter="20"><vue-col :span="16"><div class="grid-content bg-purple"></div></vue-col><vue-col :span="8"><div class="grid-content bg-purple"></div></vue-col></vue-row><vue-row class="margin-bottom20" :gutter="20"><vue-col :span="8"><div class="grid-content bg-purple"></div></vue-col><vue-col :span="8"><div class="grid-content bg-purple"></div></vue-col><vue-col :span="4"><div class="grid-content bg-purple"></div></vue-col><vue-col :span="4"><div class="grid-content bg-purple"></div></vue-col></vue-row><vue-row class="margin-bottom20" :gutter="20"><vue-col :span="4"><div class="grid-content bg-purple"></div></vue-col><vue-col :span="16"><div class="grid-content bg-purple"></div></vue-col><vue-col :span="4"><div class="grid-content bg-purple"></div></vue-col></vue-row></div>',code:'<vue-row :gutter="20">\n  <vue-col :span="16"><div class="grid-content bg-purple"></div></vue-col>\n  <vue-col :span="8"><div class="grid-content bg-purple"></div></vue-col>\n</vue-row>\n<vue-row :gutter="20">\n  <vue-col :span="8"><div class="grid-content bg-purple"></div></vue-col>\n  <vue-col :span="8"><div class="grid-content bg-purple"></div></vue-col>\n  <vue-col :span="4"><div class="grid-content bg-purple"></div></vue-col>\n  <vue-col :span="4"><div class="grid-content bg-purple"></div></vue-col>\n</vue-row>\n<vue-row :gutter="20">\n  <vue-col :span="4"><div class="grid-content bg-purple"></div></vue-col>\n  <vue-col :span="16"><div class="grid-content bg-purple"></div></vue-col>\n  <vue-col :span="4"><div class="grid-content bg-purple"></div></vue-col>\n</vue-row>'},{id:"layout4",label:"layoutDemo.samples4.label",description:"layoutDemo.samples4.description",template:'<div class="source"><vue-row class="margin-bottom20 row-bg" type="flex"><vue-col :span="6"><div class="grid-content bg-purple"></div></vue-col><vue-col :span="6"><div class="grid-content bg-purple-light"></div></vue-col><vue-col :span="6"><div class="grid-content bg-purple"></div></vue-col></vue-row><vue-row class="margin-bottom20 row-bg" type="flex" justify="center"><vue-col :span="6"><div class="grid-content bg-purple"></div></vue-col><vue-col :span="6"><div class="grid-content bg-purple-light"></div></vue-col><vue-col :span="6"><div class="grid-content bg-purple"></div></vue-col></vue-row><vue-row class="margin-bottom20 row-bg" type="flex" justify="end"><vue-col :span="6"><div class="grid-content bg-purple"></div></vue-col><vue-col :span="6"><div class="grid-content bg-purple-light"></div></vue-col><vue-col :span="6"><div class="grid-content bg-purple"></div></vue-col></vue-row><vue-row class="margin-bottom20 row-bg" type="flex" justify="space-between"><vue-col :span="6"><div class="grid-content bg-purple"></div></vue-col><vue-col :span="6"><div class="grid-content bg-purple-light"></div></vue-col><vue-col :span="6"><div class="grid-content bg-purple"></div></vue-col></vue-row><vue-row class="margin-bottom20 row-bg" type="flex" justify="space-around"><vue-col :span="6"><div class="grid-content bg-purple"></div></vue-col><vue-col :span="6"><div class="grid-content bg-purple-light"></div></vue-col><vue-col :span="6"><div class="grid-content bg-purple"></div></vue-col></vue-row></div>',code:'<vue-row class="row-bg" type="flex">\n  <vue-col :span="6"><div class="grid-content bg-purple"></div></vue-col>\n  <vue-col :span="6"><div class="grid-content bg-purple-light"></div></vue-col>\n  <vue-col :span="6"><div class="grid-content bg-purple"></div></vue-col>\n</vue-row>\n<vue-row class="row-bg" type="flex" justify="center">\n  <vue-col :span="6"><div class="grid-content bg-purple"></div></vue-col>\n  <vue-col :span="6"><div class="grid-content bg-purple-light"></div></vue-col>\n  <vue-col :span="6"><div class="grid-content bg-purple"></div></vue-col>\n</vue-row>\n<vue-row class="row-bg" type="flex" justify="end">\n  <vue-col :span="6"><div class="grid-content bg-purple"></div></vue-col>\n  <vue-col :span="6"><div class="grid-content bg-purple-light"></div></vue-col>\n  <vue-col :span="6"><div class="grid-content bg-purple"></div></vue-col>\n</vue-row>\n<vue-row class="row-bg" type="flex" justify="space-between">\n  <vue-col :span="6"><div class="grid-content bg-purple"></div></vue-col>\n  <vue-col :span="6"><div class="grid-content bg-purple-light"></div></vue-col>\n  <vue-col :span="6"><div class="grid-content bg-purple"></div></vue-col>\n</vue-row>\n<vue-row class="row-bg" type="flex" justify="space-around">\n  <vue-col :span="6"><div class="grid-content bg-purple"></div></vue-col>\n  <vue-col :span="6"><div class="grid-content bg-purple-light"></div></vue-col>\n  <vue-col :span="6"><div class="grid-content bg-purple"></div></vue-col>\n</vue-row>'},{id:"layout5",label:"layoutDemo.samples5.label",description:"layoutDemo.samples5.description",template:'<div class="source"><vue-row :gutter="10"><vue-col :xs="8" :sm="6" :md="4" :lg="3"><div class="grid-content bg-purple"></div></vue-col><vue-col :xs="4" :sm="6" :md="8" :lg="9"><div class="grid-content bg-purple-light"></div></vue-col><vue-col :xs="4" :sm="6" :md="8" :lg="9"><div class="grid-content bg-purple"></div></vue-col><vue-col :xs="8" :sm="6" :md="4" :lg="3"><div class="grid-content bg-purple-light"></div></vue-col></vue-row></div>',code:'<vue-row :gutter="10">\n  <vue-col :xs="8" :sm="6" :md="4" :lg="3"><div class="grid-content bg-purple"></div></vue-col>\n  <vue-col :xs="4" :sm="6" :md="8" :lg="9"><div class="grid-content bg-purple-light"></div></vue-col>\n  <vue-col :xs="4" :sm="6" :md="8" :lg="9"><div class="grid-content bg-purple"></div></vue-col>\n  <vue-col :xs="8" :sm="6" :md="4" :lg="3"><div class="grid-content bg-purple-light"></div></vue-col>\n</vue-row>'},{id:"layout6",label:"Row Attributes",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"gutter",column2:"layoutDemo.samples6.row1column2",column3:"Number",column4:"",column5:"0"},{column1:"type",column2:"layoutDemo.samples6.row2column2",column3:"String",column4:"",column5:""},{column1:"justify",column2:"layoutDemo.samples6.row3column2",column3:"String",column4:"start/end/center/space-around/space-between",column5:"start"},{column1:"align",column2:"layoutDemo.samples6.row4column2",column3:"String",column4:"top/middle/bottom",column5:"top"}]}}},notshowmeta:!0},{id:"layout7",label:"Col Attributes",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"span",column2:"layoutDemo.samples7.row1column2",column3:"Number",column4:"",column5:""},{column1:"offset",column2:"layoutDemo.samples7.row2column2",column3:"Number",column4:"",column5:"0"},{column1:"push",column2:"layoutDemo.samples7.row3column2",column3:"Number",column4:"",column5:"0"},{column1:"pull",column2:"layoutDemo.samples7.row4column2",column3:"Number",column4:"",column5:"0"},{column1:"xs",column2:"layoutDemo.samples7.row5column2",column3:"layoutDemo.samples7.row5column3",column4:"",column5:""},{column1:"sm",column2:"layoutDemo.samples7.row6column2",column3:"layoutDemo.samples7.row6column3",column4:"",column5:""},{column1:"md",column2:"layoutDemo.samples7.row7column2",column3:"layoutDemo.samples7.row7column3",column4:"",column5:""},{column1:"lg",column2:"layoutDemo.samples7.row8column2",column3:"layoutDemo.samples7.row8column3",column4:"",column5:""}]}}},notshowmeta:!0}]}},"./demo/ListDemo.js":
/*!**************************!*\
  !*** ./demo/ListDemo.js ***!
  \**************************/
/*! no static exports found */function(e,n,t){"use strict";var l={path:"/list",name:"list",head:{label:"listDemo.label",description:"listDemo.description"},samples:[{id:"list1",label:"listDemo.samples1.label",description:"listDemo.samples1.description",template:'<div class="source"><vue-list :height="250" :default-actived-index="5" scrollbar @scroll="scrollHandle" ref="list"><vue-list-item v-for="index of 10000" :key="index" @select="selectHandle"><vue-button type="text" :icon="index%2 ===0 ? \'vue-icon-check\' : \'vue-icon-close\'" style="width:20px;margin:0 20px;float:left;padding: 9px 0"></vue-button><div style="line-height:35px;">Item #{{index}}: Content...</div><vue-divider v-if="index!==10000"></vue-divider></vue-list-item></vue-list></div>',parameter:{methods:{selectHandle:function(e){this.$notify({title:"Selected Item Index: "+e.index})},scrollHandle:function(e,n,t,l){t&&this.$notify({title:"Scroll Top"}),l&&this.$notify({title:"Scroll Bottom"}),console.log(e)}}},code:'<vue-list :height="250" :default-actived-index="5" scrollbar @scroll="scrollHandle" ref="list">\n  <vue-list-item v-for="index of 10000" :key="index" @select="selectHandle">\n    <vue-button type="text" :icon="index%2 ===0 ? \'vue-icon-check\' : \'vue-icon-close\'" style="width:20px;margin-left:20px;margin-right:20px;float:left;"></vue-button>\n    <div style="line-height:35px;">Item #{{index}}: Content...</div>\n    <vue-divider v-if="index!==10000"></vue-divider>\n  </vue-list-item>\n</vue-list>\n\n<script>\n  new Vue({\n    methods: {\n      selectHandle: function(listItem) {\n        this.$notify({title: \'Selected Item Index: \' + listItem.index});\n      },\n      scrollHandle: function(event, scrollTop, isTop, isBottom) {\n        if (isTop) {\n          this.$notify({title: \'Scroll Top\'});\n        }\n        if (isBottom) {\n          this.$notify({title: \'Scroll Bottom\'});\n        }\n        console.log(event);\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"list2",label:"Attributes",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"height",column2:"listDemo.samples2.row1column2",column3:"Number",column4:"",column5:"200"},{column1:"default-selected",column2:"listDemo.samples2.row4column2",column3:"Boolean",column4:"",column5:"true"},{column1:"default-actived-index",column2:"listDemo.samples2.row3column2",column3:"Number",column4:"",column5:"0"},{column1:"scrollbar",column2:"listDemo.samples2.row5column2",column3:"Boolean",column4:"",column5:"false"}]}}},notshowmeta:!0},{id:"list4",label:"List Events",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"scroll",column2:"listDemo.samples2.row2column2",column3:"event, scrollTop"}]}}},notshowmeta:!0},{id:"list3",label:"List Item Events",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"select",column2:"listDemo.samples3.row1column2",column3:"listItem"}]}}},notshowmeta:!0}]};e.exports=l},"./demo/LoadingBarDemo.js":
/*!********************************!*\
  !*** ./demo/LoadingBarDemo.js ***!
  \********************************/
/*! no static exports found */function(e,n,t){"use strict";var l={path:"/loadingBar",name:"loadingBar",head:{label:"loadingBarDemo.label",description:"loadingBarDemo.description"},samples:[{id:"loadingBar1",label:"loadingBarDemo.samples1.label",description:"loadingBarDemo.samples1.description",template:'<div class="source"><vue-button @click="start">Start</vue-button><vue-button @click="finish">Finish</vue-button><vue-button @click="error">Error</vue-button><vue-button @click="update">Update</vue-button></div>',parameter:{methods:{start:function(){Vue.loadingBar.start()},finish:function(){Vue.loadingBar.finish()},error:function(){Vue.loadingBar.error()},update:function(){Vue.loadingBar.update(50)}}},code:'<vue-button @click="start">Start</vue-button>\n<vue-button @click="finish">Finish</vue-button>\n<vue-button @click="error">Error</vue-button>\n<vue-button @click="update">Update</vue-button>\n\n<script>\n  new Vue({\n    methods: {\n      start: function() {\n        Vue.loadingBar.start();\n      },\n      finish: function() {\n        Vue.loadingBar.finish();\n      },\n      error: function() {\n        Vue.loadingBar.error();\n      },\n      update: function() {\n        Vue.loadingBar.update(50);\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"loadingBar2",label:"Methods",template:'<method-table :data="tableData"></method-table>',parameter:{data:function(){return{tableData:[{column1:"start",column2:"loadingBarDemo.samples2.row1column2",column3:"loadingBarDemo.samples2.row1column3"},{column1:"finish",column2:"loadingBarDemo.samples2.row2column2",column3:"loadingBarDemo.samples2.row2column3"},{column1:"error",column2:"loadingBarDemo.samples2.row3column2",column3:"loadingBarDemo.samples2.row3column3"},{column1:"update",column2:"loadingBarDemo.samples2.row4column2",column3:"loadingBarDemo.samples2.row4column3"}]}}},notshowmeta:!0}]};e.exports=l},"./demo/LoadingDemo.js":
/*!*****************************!*\
  !*** ./demo/LoadingDemo.js ***!
  \*****************************/
/*! no static exports found */function(e,n,t){"use strict";var l={path:"/loading",name:"loading",head:{label:"loadingDemo.label",description:"loadingDemo.description"},samples:[{id:"loading1",label:"loadingDemo.samples1.label",description:"loadingDemo.samples1.description",template:'<div class="source"><vue-xtable v-loading="loading" vue-loading-text="Loading..." :data="tableData" border stripe><vue-xtable-column prop="date" label="Date" width="180"></vue-xtable-column><vue-xtable-column prop="name" label="Name" width="180"></vue-xtable-column><vue-xtable-column prop="address" label="Address" width="350"></vue-xtable-column></vue-xtable><div style="margin-top:30px"></div><vue-button type="primary" @click="openFullScreen1" v-loading.fullscreen="fullscreenLoading1" vue-loading-text="Loading..." vue-loading-class="loading-yellow">Full screen loading for 3 seconds</vue-button><div style="margin-top:10px"></div><vue-button type="primary" @click="openFullScreen2" v-loading.fullscreen="fullscreenLoading2" vue-loading-text="Loading..." vue-loading-class="min-loading">Min loading for 3 seconds</vue-button></div>',parameter:{data:function(){return{tableData:[{date:"2016-05-02",name:"John Smith",address:"No.1518,  Jinshajiang Road, Putuo District"},{date:"2016-05-04",name:"John Smith",address:"No.1518,  Jinshajiang Road, Putuo District"},{date:"2016-05-01",name:"John Smith",address:"No.1518,  Jinshajiang Road, Putuo District"}],loading:!0,fullscreenLoading1:!1,fullscreenLoading2:!1}},methods:{openFullScreen1:function(){var e=this;e.fullscreenLoading1=!0,setTimeout(function(){e.fullscreenLoading1=!1},3e3)},openFullScreen2:function(){var e=this;e.fullscreenLoading2=!0,setTimeout(function(){e.fullscreenLoading2=!1},3e3)}}},code:'<vue-xtable v-loading="loading" vue-loading-text="Loading..." :data="tableData" border stripe>\n  <vue-xtable-column prop="date" label="Date" width="180"></vue-xtable-column>\n  <vue-xtable-column prop="name" label="Name" width="180"></vue-xtable-column>\n  <vue-xtable-column prop="address" label="Address" width="350"></vue-xtable-column>\n</vue-xtable>\n<vue-button type="primary" @click="openFullScreen1" v-loading.fullscreen="fullscreenLoading1" vue-loading-text="Loading..." vue-loading-class="loading-yellow">\n  Full screen loading for 3 seconds\n</vue-button>\n<vue-button type="primary" @click="openFullScreen2" v-loading.fullscreen="fullscreenLoading2" vue-loading-text="Loading..." vue-loading-class="min-loading">\n  Min loading for 3 seconds\n</vue-button>\n\n<style>\n  .loading-yellow {\n    background-color:yellow;\n  }\n  .min-loading {\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%,-50%);\n    border-radius: 5px;\n    background: rgba(0,0,0,.7);\n    width: 120px;\n    height: 120px;\n  }\n  .min-loading .path {\n    stroke: #fff;\n  }\n  .min-loading .vue-loading-text {\n    color: #fff;\n  }\n</style>\n\n<script>\n  new Vue({\n    data: function() {\n      return {\n        tableData: [{\n          date: "2016-05-02",\n          name: "John Smith",\n          address: "No.1518,  Jinshajiang Road, Putuo District"\n        }, {\n          date: "2016-05-04",\n          name: "John Smith",\n          address: "No.1518,  Jinshajiang Road, Putuo District"\n        }, {\n          date: "2016-05-01",\n          name: "John Smith",\n          address: "No.1518,  Jinshajiang Road, Putuo District"\n        }],\n        loading: true,\n        fullscreenLoading1: false,\n        fullscreenLoading2: false\n      };\n    },\n    methods: {\n      openFullScreen1: function() {\n        var self = this;\n        self.fullscreenLoading1 = true;\n        setTimeout(function() {\n          self.fullscreenLoading1 = false;\n        }, 3000);\n      },\n      openFullScreen2: function() {\n        var self = this;\n        self.fullscreenLoading2 = true;\n        setTimeout(function() {\n          self.fullscreenLoading2 = false;\n        }, 3000);\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"loading2",label:"Attributes",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"vue-loading-text",column2:"loadingDemo.samples2.row1column2",column3:"String",column4:"",column5:""},{column1:"vue-loading-class",column2:"loadingDemo.samples2.row2column2",column3:"String",column4:"",column5:""}]}}},notshowmeta:!0}]};e.exports=l},"./demo/MessageBoxDemo.js":
/*!********************************!*\
  !*** ./demo/MessageBoxDemo.js ***!
  \********************************/
/*! no static exports found */function(e,n,t){"use strict";var l={path:"/messageBox",name:"messageBox",head:{label:"messageBoxDemo.label",description:"messageBoxDemo.description"},samples:[{id:"messageBox1",label:"messageBoxDemo.samples1.label",description:"messageBoxDemo.samples1.description",template:'<div class="source"><vue-button type="text" @click="open">Click Me</vue-button></div>',parameter:{methods:{open:function(){var e=this;e.$alert({title:"Title",message:"This is a message",callback:function(n){e.$notify({title:n})}})}}},code:'<vue-button type="text" @click="open">Click Me</vue-button>\n\n<script>\n  new Vue({\n    methods: {\n      open: function() {\n        var self = this;\n        self.$alert({\n          title: "Title",\n          message: "This is a message",\n          callback: function(action) {\n            self.$notify({title: action});\n          }\n        });\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"messageBox2",label:"messageBoxDemo.samples2.label",description:"messageBoxDemo.samples2.description",template:'<div class="source"><vue-button type="text" @click="open">Click Me</vue-button></div>',parameter:{methods:{open:function(){var e=this;e.$confirm({title:"Warning",message:"This will delete the file. Continue?",type:"warning"}).then(function(n){e.$notify({title:n})}).catch(function(n){e.$notify({title:n})})}}},code:'<vue-button type="text" @click="open">Click Me</vue-button>\n\n<script>\n  new Vue({\n    methods: {\n      open: function() {\n        var self = this;\n        self.$confirm({\n          title: "Warning",\n          message: "This will delete the file. Continue?",\n          type: "warning"\n        }).then(function(action) {\n          self.$notify({title: action});\n        }).catch(function(action) {\n          self.$notify({title: action});\n        });\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"messageBox3",label:"messageBoxDemo.samples3.label",description:"messageBoxDemo.samples3.description",template:'<div class="source"><vue-button type="text" @click="open">Click Me</vue-button></div>',parameter:{methods:{open:function(){var e=this,n=e.$createElement;e.$confirm({title:"Title",message:n("p",null,[n("span",null,"Message can be "),n("i",{style:"color: teal"},"VNode")]),beforeClose:function(e,n,t){"confirm"===e?(n.confirmButtonLoading=!0,n.confirmButtonText="Loading...",setTimeout(function(){t(),n.confirmButtonLoading=!1},3e3)):t()},callback:function(n){e.$notify({title:n})}})}}},code:'<vue-button type="text" @click="open">Click Me</vue-button>\n\n<script>\n  new Vue({\n    methods: {\n      open: function() {\n        var self = this;\n        var createElement = self.$createElement;\n        self.$confirm({\n          title: "Title",\n          message: createElement("p", null, [createElement("span", null, "Message can be "), createElement("i", {style: "color: teal"}, "VNode")]),\n          beforeClose: function(action, instance, done) {\n            if (action === "confirm") {\n              instance.confirmButtonLoading = true;\n              instance.confirmButtonText = "Loading...";\n              setTimeout(function() {\n                done();\n                instance.confirmButtonLoading = false;\n              }, 3000);\n            } else {\n              done();\n            }\n          },\n          callback: function(action) {\n            self.$notify({title: action});\n          }\n        });\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"messageBox4",label:"Options",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"title",column2:"messageBoxDemo.samples4.row1column2",column3:"String",column4:"",column5:""},{column1:"message",column2:"messageBoxDemo.samples4.row2column2",column3:"String / VNode",column4:"",column5:""},{column1:"type",column2:"messageBoxDemo.samples4.row3column2",column3:"String",column4:"success, info, warning, error",column5:""},{column1:"customClass",column2:"messageBoxDemo.samples4.row4column2",column3:"String",column4:"",column5:""},{column1:"callback",column2:"messageBoxDemo.samples4.row5column2",column3:"messageBoxDemo.samples4.row5column3",column4:"",column5:""},{column1:"beforeClose",column2:"messageBoxDemo.samples4.row6column2",column3:"messageBoxDemo.samples4.row6column3",column4:"",column5:""},{column1:"cancelButtonText",column2:"messageBoxDemo.samples4.row7column2",column3:"String",column4:"",column5:""},{column1:"confirmButtonText",column2:"messageBoxDemo.samples4.row8column2",column3:"String",column4:"",column5:""},{column1:"cancelButtonClass",column2:"messageBoxDemo.samples4.row9column2",column3:"String",column4:"",column5:""},{column1:"confirmButtonClass",column2:"messageBoxDemo.samples4.row10column2",column3:"String",column4:"",column5:""}]}}},notshowmeta:!0}]};e.exports=l},"./demo/MobileDemo/ActionSheetDemo.js":
/*!********************************************!*\
  !*** ./demo/MobileDemo/ActionSheetDemo.js ***!
  \********************************************/
/*! no static exports found */function(e,n,t){"use strict";e.exports={path:"/action-sheet",name:"mobile_actionsheet",head:{label:"actionsheetDemo.label",description:"",demoInitUrl:"action-sheet"},samples:[{id:"actionsheet1",label:"actionsheetDemo.detail1.label",description:"actionsheetDemo.detail1.description",template:"",parameter:{},code:'<vue-button\n      type="success"\n      style="position:absolute;bottom:0;margin: 10px 0;width:100%;text-aligin:center;"\n      @click="click">\n  打开actionSheet\n</vue-button>\n <vue-action-sheet\n  v-model="show"\n  :actions="actions"\n  cancel-text="取消"\n  @select="onSelect"\n  @cancel="onCancel"/>\n<script>\n  new Vue({\n    data: function() {\n      return {\n       show: false,\n       actions: [\n         { name: \'选项\' },\n         { name: \'选项\' },\n'+"         { name: '选项', subname: '描述息' },\n       ],\n      };\n    },\nNaN     click() {\n       this.show = true;\n     },\n     onSelect() {\n       this.show = false;\n     },\n     onCancel() {\n       this.show = false;\n     },\n    }\nNaN<\/script>"},{id:"actionsheet_attrs",label:"Attributes",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"v-model(value)",column2:"actionsheetDemo.attrsInfo.row1column2",column3:"Boolean",column4:"",column5:"false"},{column1:"actions",column2:"actionsheetDemo.attrsInfo.row2column2",column3:"ArrayObject",column4:"",column5:"[]"},{column1:"title",column2:"actionsheetDemo.attrsInfo.row3column2",column3:"String",column4:"",column5:""},{column1:"cancel-text",column2:"actionsheetDemo.attrsInfo.row4column2",column3:"String",column4:"",column5:""},{column1:"description ",column2:"actionsheetDemo.attrsInfo.row5column2",column3:"String",column4:"",column5:""},{column1:"close-icon",column2:"actionsheetDemo.attrsInfo.row6column2",column3:"String",column4:"",column5:"cross"},{column1:"duration",column2:"actionsheetDemo.attrsInfo.row7column2",column3:"Number",column4:"",column5:"0.3"},{column1:"round",column2:"actionsheetDemo.attrsInfo.row8column2",column3:"Boolean",column4:"",column5:"true"},{column1:"overlay",column2:"actionsheetDemo.attrsInfo.row9column2",column3:"Boolean",column4:"",column5:"true"},{column1:"lock-scroll",column2:"actionsheetDemo.attrsInfo.row10column2",column3:"Boolean",column4:"",column5:"true"},{column1:"lazy-render",column2:"actionsheetDemo.attrsInfo.row11column2",column3:"Boolean",column4:"",column5:"true"},{column1:"close-on-popstate",column2:"actionsheetDemo.attrsInfo.row12column2",column3:"Boolean",column4:"",column5:"false"},{column1:"close-on-click-action",column2:"actionsheetDemo.attrsInfo.row13column2",column3:"Boolean",column4:"",column5:"false"},{column1:"close-on-click-overlay",column2:"actionsheetDemo.attrsInfo.row14column2",column3:"Boolean",column4:"",column5:"true"},{column1:"safe-area-inset-bottom",column2:"actionsheetDemo.attrsInfo.row15column2",column3:"Boolean",column4:"",column5:"true"},{column1:"get-container",column2:"actionsheetDemo.attrsInfo.row16column2",column3:"String | () => Element",column4:"",column5:""}]}}},notshowmeta:!0},{id:"actions_attrs",label:"Actions Attributes",template:'<div style="padding:20px;"><div style="padding:10px 0;">{{$t("actionsheetDemo.actionsInfo.description")}}</div><attr-table :data="tableData"></attr-table></div>',parameter:{data:function(){return{tableData:[{column1:"name",column2:"actionsheetDemo.actionsInfo.row1column2",column3:"String",column4:"",column5:""},{column1:"subname",column2:"actionsheetDemo.actionsInfo.row2column2",column3:"String",column4:"",column5:""},{column1:"color",column2:"actionsheetDemo.actionsInfo.row3column2",column3:"String",column4:"",column5:""},{column1:"className",column2:"actionsheetDemo.actionsInfo.row4column2",column3:"Any",column4:"",column5:""},{column1:"loading",column2:"actionsheetDemo.actionsInfo.row5column2",column3:"Boolean",column4:"",column5:""},{column1:"disabled",column2:"actionsheetDemo.actionsInfo.row6column2",column3:"Boolean",column4:"",column5:""}]}}},notshowmeta:!0},{id:"actionsheet_event",label:"Events",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"select",column2:"actionsheetDemo.eventInfo.row1column2",column3:"Event object"},{column1:"cancel",column2:"actionsheetDemo.eventInfo.row2column2",column3:"Event object"},{column1:"open",column2:"actionsheetDemo.eventInfo.row3column2",column3:"Event object"},{column1:"close",column2:"actionsheetDemo.eventInfo.row4column2",column3:"Event object"},{column1:"opened",column2:"actionsheetDemo.eventInfo.row5column2",column3:"Event object"},{column1:"closed",column2:"actionsheetDemo.eventInfo.row6column2",column3:"Event object"},{column1:"click-overlay",column2:"actionsheetDemo.eventInfo.row7column2",column3:"Event object"}]}}},notshowmeta:!0}]}},"./demo/MobileDemo/CellLayoutDemo.js":
/*!*******************************************!*\
  !*** ./demo/MobileDemo/CellLayoutDemo.js ***!
  \*******************************************/
/*! no static exports found */function(e,n,t){"use strict";e.exports={path:"/cell-layout",name:"mobile_celllayout",head:{label:"celllayoutDemo.label",description:"",demoInitUrl:"cell-layout"},samples:[{id:"celllayout_top1",label:"celllayoutDemo.detail1.label",description:"celllayoutDemo.detail1.description",template:"",code:"",notshowmeta:!0},{id:"celllayout_sample1",label:"celllayoutDemo.samples1.label",description:"celllayoutDemo.samples1.description",template:"",code:'<vue-cell-layout>\n  <vue-cell-layout-item v-for="item in mCellLayoutList" :key="item.textLabel" :icon="item.iconName" :text="item.textLabel" />\n</vue-cell-layout>\n<script>\n  new Vue({\n    data: function() {\n      return {\n       mCellLayoutList: [\n'+"         { iconName: 'vue-icon-photo', textLabel: '选项1' },\n         { iconName: 'vue-icon-photo', textLabel: '选项2' },\n         { iconName: 'vue-icon-photo', textLabel: '选项3' },\n         { iconName: 'vue-icon-photo', textLabel: '选项4' },\n         { iconName: 'vue-icon-photo', textLabel: '选项5' },\n         { iconName: 'vue-icon-photo', textLabel: '选项6' },\n       ]\n      };\n    },\n    methods:{\n    }\n  }).$mount();\n<\/script>"},{id:"celllayout_sample2",label:"celllayoutDemo.samples2.label",description:"celllayoutDemo.samples2.description",template:"",code:'<vue-cell-layout :column-num="6">\n  <vue-cell-layout-item v-for="item in mCellLayoutList" :key="item.textLabel" :icon="item.iconName" :text="item.textLabel" />\n</vue-cell-layout>\n<script>\n  new Vue({\n    data: function() {\n      return {\n       mCellLayoutList: [\n'+"         { iconName: 'vue-icon-photo', textLabel: '选项1' },\n         { iconName: 'vue-icon-photo', textLabel: '选项2' },\n         { iconName: 'vue-icon-photo', textLabel: '选项3' },\n         { iconName: 'vue-icon-photo', textLabel: '选项4' },\n         { iconName: 'vue-icon-photo', textLabel: '选项5' },\n         { iconName: 'vue-icon-photo', textLabel: '选项6' },\n       ]\n      };\n    },\n    methods:{\n    }\n  }).$mount();\n<\/script>"},{id:"celllayout_sample3",label:"celllayoutDemo.samples3.label",description:"celllayoutDemo.samples3.description",template:"",code:'<vue-cell-layout :column-num="3">\n  <vue-cell-layout-item v-for="item in mCellLayoutList2" :key="item.textLabel">\n      <vue-image :src="item.imgUrl" />\n      <span style="padding:10px;">{{item.textLabel}}</span>\n  </vue-cell-layout-item>\n</vue-cell-layout><script>\n  new Vue({\n    data: function() {\n      return {\n       mCellLayoutList2: [\n'+"         { imgUrl: 'https://img.yzcdn.cn/vant/apple-1.jpg', textLabel: '图片1' },\n         { imgUrl: 'https://img.yzcdn.cn/vant/apple-2.jpg', textLabel: '图片2' },\n         { imgUrl: 'https://img.yzcdn.cn/vant/apple-3.jpg', textLabel: '图片3' }\n       ],\n      };\n    },\n    methods:{\n    }\n  }).$mount();\n<\/script>"},{id:"celllayout_sample4",label:"celllayoutDemo.samples4.label",description:"celllayoutDemo.samples4.description",template:"",code:'<vue-cell-layout square :gutter="10" :column-num="3">\n  <vue-cell-layout-item v-for="item in mCellLayoutList3" :key="item.textLabel" :icon="item.iconName"\n                 :text="item.textLabel" :dot="item.isDot" :badge="item.badge"/>\n</vue-cell-layout><script>\n  new Vue({\n    data: function() {\n      return {\n       mCellLayoutList3: [\n'+"         { iconName: 'vue-icon-information', textLabel: '信息', isDot:true, badge:''},\n         { iconName: 'vue-icon-menu', textLabel: '菜单', isDot:false, badge:'99+' },\n         { iconName: 'vue-icon-upload', textLabel: '上传', isDot:false, badge:'' },\n         { iconName: 'vue-icon-download', textLabel: '下载', isDot:false, badge:'' },\n         { iconName: 'vue-icon-date', textLabel: '日历', isDot:false, badge:'' },\n         { iconName: 'vue-icon-document', textLabel: '文档', isDot:false, badge:'8' },\n       ]\n      };\n    },\n    methods:{\n    }\n  }).$mount();\n<\/script>"},{id:"celllayout_sample5",label:"celllayoutDemo.samples5.label",description:"celllayoutDemo.samples5.description",template:"",code:'<vue-cell-layout :column-num="2">\n  <vue-cell-layout-item v-for="item in mCellLayoutList4" :key="item.textLabel" :icon="item.iconName" icon-color="lightgreen"\n                 :text="item.textLabel" :to="item.to" :url="item.url" :replace="item.isReplace" :badge="item.badge" />\n</vue-cell-layout>\n<script>\n  new Vue({\n    data: function() {\n      return {\n       mCellLayoutList4: [\n'+"         { iconName: 'vue-icon-document', textLabel: '文本页', to:'/input' , url:null, isReplace: true, badge: '99+'},\n         { iconName: 'vue-icon-menu', textLabel: '菜单', to:null , url:'http://www.baidu.com', isReplace: false, badge:'' }\n       ]\n      };\n    },\n    methods:{\n    }\n  }).$mount();\n<\/script>"},{id:"celllayout_attrs",label:"CellLayout Attributes",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"column-num",column2:"celllayoutDemo.attrsInfo.row1column2",column3:"Number | String",column4:"",column5:"4"},{column1:"icon-size",column2:"celllayoutDemo.attrsInfo.row2column2",column3:"Number | String",column4:"",column5:"28px"},{column1:"gutter",column2:"celllayoutDemo.attrsInfo.row3column2",column3:"Number | String",column4:"",column5:"0"},{column1:"border",column2:"celllayoutDemo.attrsInfo.row4column2",column3:"Boolean",column4:"",column5:"true"},{column1:"center",column2:"celllayoutDemo.attrsInfo.row5column2",column3:"Boolean",column4:"",column5:"true"},{column1:"square",column2:"celllayoutDemo.attrsInfo.row6column2",column3:"Boolean",column4:"",column5:"false"},{column1:"clickable",column2:"celllayoutDemo.attrsInfo.row7column2",column3:"Boolean",column4:"",column5:"false"}]}}},notshowmeta:!0},{id:"celllayoutitem_attrs",label:"CellLayoutItem Attributes",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"text",column2:"celllayoutDemo.celllayoutitemAttrsInfo.row1column2",column3:"String",column4:"",column5:""},{column1:"icon",column2:"celllayoutDemo.celllayoutitemAttrsInfo.row2column2",column3:"String",column4:"",column5:""},{column1:"icon-color",column2:"celllayoutDemo.celllayoutitemAttrsInfo.row3column2",column3:"String",column4:"",column5:""},{column1:"dot",column2:"celllayoutDemo.celllayoutitemAttrsInfo.row4column2",column3:"Boolean",column4:"",column5:"false"},{column1:"badge",column2:"celllayoutDemo.celllayoutitemAttrsInfo.row5column2",column3:"Number | String",column4:"",column5:""},{column1:"info",column2:"celllayoutDemo.celllayoutitemAttrsInfo.row6column2",column3:"Number | String",column4:"",column5:""},{column1:"url",column2:"celllayoutDemo.celllayoutitemAttrsInfo.row7column2",column3:"String",column4:"",column5:""},{column1:"to",column2:"celllayoutDemo.celllayoutitemAttrsInfo.row8column2",column3:"String | Object",column4:"",column5:""},{column1:"replace",column2:"celllayoutDemo.celllayoutitemAttrsInfo.row9column2",column3:"Boolean",column4:"",column5:"false"}]}}},notshowmeta:!0},{id:"celllayoutitem_event",label:"CellLayoutItem Events",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"click",column2:"celllayoutDemo.celllayoutitemEventInfo.row1column2",column3:"Event object"}]}}},notshowmeta:!0},{id:"celllayoutitem_slots",label:"CellLayoutItem Slots",template:'<div style="padding:20px;"> <div style="font-size:20px;font-weight:500;line-height:1.1;color:inherit;">default</div> <div style="padding:6px 0;">{{$t("celllayoutDemo.celllayoutitemSlotsInfo.row1column2")}}</div> <div style="margin-top:15px;font-size:20px;font-weight:500;line-height:1.1;color:inherit;">icon</div> <div style="padding:6px 0;">{{$t("celllayoutDemo.celllayoutitemSlotsInfo.row2column2")}}</div> <div style="margin-top:15px;font-size:20px;font-weight:500;line-height:1.1;color:inherit;">text</div> <div style="padding:6px 0;">{{$t("celllayoutDemo.celllayoutitemSlotsInfo.row3column2")}}</div></div>',parameter:{},notshowmeta:!0}]}},"./demo/MobileDemo/IndexBarDemo.js":
/*!*****************************************!*\
  !*** ./demo/MobileDemo/IndexBarDemo.js ***!
  \*****************************************/
/*! no static exports found */function(e,n,t){"use strict";e.exports={path:"/index-bar",name:"mobile_indexbar",head:{label:"indexbarDemo.label",description:"",demoInitUrl:"index-bar"},samples:[{id:"indexbar_sample1",label:"indexbarDemo.samples1.label",description:"",template:"",code:'<vue-index-bar>\n  <div v-for="item in indexList" :key="item.index">\n    <vue-index-anchor :index="item.index" />\n    <vue-form-item v-for="child in item.child" :key="child" :label="child"/>\n  </div>\n</vue-index-bar>\n<script>\n  new Vue({\n    data: function() {\n      var indexList = [];\n      var charCodeOfA = \'A\'.charCodeAt(0);\n      for (let i = 0; i < 26; i++) {\n        var alphabet = String.fromCharCode(charCodeOfA + i);\n        var item = {index:alphabet}\n        var mTextList = [];\n        for (let j = 0; j < 3; j++) {\n          var key = j+1;\n          var text = alphabet+\'字母\'+key;\n          mTextList.push(text);\n        }\n        item.child = mTextList;\n        indexList.push(item);\n      }\n      return {\n       indexList,\n      };\n    },\n    methods:{\n    }\n  }).$mount();\n<\/script>'},{id:"indexbar_attrs",label:"IndexBar Attributes",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"index-list",column2:"indexbarDemo.attrsInfo.row1column2",column3:"Array",column4:"",column5:"A-Z"},{column1:"z-index",column2:"indexbarDemo.attrsInfo.row2column2",column3:"Number | String",column4:"",column5:"1"},{column1:"sticky",column2:"indexbarDemo.attrsInfo.row3column2",column3:"Boolean",column4:"",column5:"true"},{column1:"sticky-offset-top",column2:"indexbarDemo.attrsInfo.row4column2",column3:"Number",column4:"",column5:"0"},{column1:"highlight-color",column2:"indexbarDemo.attrsInfo.row5column2",column3:"String",column4:"",column5:"#07c160"}]}}},notshowmeta:!0},{id:"indexbar_event",label:"IndexBar Events",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"select",column2:"indexbarDemo.eventInfo.row1column2",column3:"indexbarDemo.eventInfo.row2column2"}]}}},notshowmeta:!0},{id:"indexanchor_attrs",label:"IndexAnchor Attributes",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"index",column2:"indexbarDemo.indexanchorAttrsInfo.row1column2",column3:"Number | String",column4:"",column5:""}]}}},notshowmeta:!0},{id:"indexanchor_slots",label:"IndexAnchor Slots",template:'<div style="padding:20px;"> <div style="font-size:20px;font-weight:500;line-height:1.1;color:inherit;">default</div> <div style="padding:6px 0;">{{$t("indexbarDemo.indexanchorSlotsInfo.row1column2")}}</div></div>',parameter:{},notshowmeta:!0}]}},"./demo/MobileDemo/NavBarDemo.js":
/*!***************************************!*\
  !*** ./demo/MobileDemo/NavBarDemo.js ***!
  \***************************************/
/*! no static exports found */function(e,n,t){"use strict";e.exports={path:"/nav-bar",name:"mobile_navbar",head:{label:"navbarDemo.label",description:"",demoInitUrl:"nav-bar"},samples:[{id:"navbar_sample1",label:"navbarDemo.samples1.label",description:"navbarDemo.samples1.description",template:"",code:'<vue-nav-bar\ntitle="标题"\nleft-text="返回"\nright-text="按钮"\nleft-arrow\n@click-left="onClickLeft"\n@click-right="onClickRight"/>\n<script>\n  new Vue({\n    data: function() {\n      return {\n      };\n    },\n    methods:{\n     onClickLeft() {\n       this.$notify({ message: \'点击了返回按钮\' });\n     },\n     onClickRight() {\n       this.$notify({ message: \'点击了右侧按钮\' });\n     }\n    }\n  }).$mount();\n<\/script>'},{id:"navbar_sample2",label:"navbarDemo.samples2.label",description:"navbarDemo.samples2.description",template:"",code:'<vue-nav-bar title="标题" left-text="返回" left-arrow>\n    <template #right>\n      <i class="vue-icon-search" style="color:#1989fa;"/>\n    </template>\n</vue-nav-bar>\n'},{id:"navbar_attrs",label:"Attributes",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"title",column2:"navbarDemo.attrsInfo.row1column2",column3:"String",column4:"",column5:'""'},{column1:"left-text",column2:"navbarDemo.attrsInfo.row2column2",column3:"String",column4:"",column5:'""'},{column1:"right-text",column2:"navbarDemo.attrsInfo.row3column2",column3:"String",column4:"",column5:'""'},{column1:"left-arrow",column2:"navbarDemo.attrsInfo.row4column2",column3:"Boolean",column4:"",column5:"false"},{column1:"border",column2:"navbarDemo.attrsInfo.row5column2",column3:"Boolean",column4:"",column5:"true"},{column1:"fixed",column2:"navbarDemo.attrsInfo.row6column2",column3:"Bollean",column4:"",column5:"false"},{column1:"placeholder",column2:"navbarDemo.attrsInfo.row7column2",column3:"Boolean",column4:"",column5:"false"},{column1:"z-index",column2:"navbarDemo.attrsInfo.row8column2",column3:"Number | String",column4:"",column5:"1"}]}}},notshowmeta:!0},{id:"navbar_slots",label:"Slots",template:'<div style="padding:20px;"> <div style="font-size:20px;font-weight:500;line-height:1.1;color:inherit;">title</div> <div style="padding:6px 0;">{{$t("navbarDemo.slotInfo.row1column2")}}</div> <div style="margin-top:15px;font-size:20px;font-weight:500;line-height:1.1;color:inherit;">left</div> <div style="padding:6px 0;">{{$t("navbarDemo.slotInfo.row2column2")}}</div> <div style="margin-top:15px;font-size:20px;font-weight:500;line-height:1.1;color:inherit;">right</div> <div style="padding:6px 0;">{{$t("navbarDemo.slotInfo.row3column2")}}</div></div>',parameter:{},notshowmeta:!0},{id:"navbar_event",label:"Events",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"click-left",column2:"navbarDemo.eventInfo.row1column2",column3:"Event object"},{column1:"click-right",column2:"navbarDemo.eventInfo.row2column2",column3:"Event object"}]}}},notshowmeta:!0}]}},"./demo/MobileDemo/ScrollViewDemo.js":
/*!*******************************************!*\
  !*** ./demo/MobileDemo/ScrollViewDemo.js ***!
  \*******************************************/
/*! no static exports found */function(e,n,t){"use strict";e.exports={path:"/scroll-view",name:"mobile_scrollview",head:{label:"scrollviewDemo.label",description:"scrollviewDemo.description",demoInitUrl:"scroll-view"},samples:[{id:"scrollview2",label:"scrollviewDemo.detail2.label",description:"",template:'<div style="padding:20px;"><li>{{$t("scrollviewDemo.detail2.description1")}}</li><li>{{$t("scrollviewDemo.detail2.description2")}}</li><li>{{$t("scrollviewDemo.detail2.description3")}}</li></div>',parameter:{},notshowmeta:!0},{id:"scrollview_sample1",label:"scrollviewDemo.samples1.label",description:"scrollviewDemo.samples1.description",template:"",code:'<vue-scroll-view\nref="scrollView"\n:scrolling-x="false"\n:autoReflow = "true"\n@scroll="onScroll">\n  <div\n    v-for="i in list"\n    class="vue-list-item"\n    :key="i"\n    @click="onItemClick(i)">\n    item {{i}}\n  </div>\n</vue-scroll-view>\n\n<script>\n  new Vue({\n    data: function() {\n      return {\n        list: 100,\n      };\n    },\nmethods:{\n onItemClick(i) {\n   var currItem = document.getElementsByClassName(\'vue-list-item\')[i-1];\n   var lastActiveItem = document.getElementsByClassName(\'is-active\')[0];\n   if(lastActiveItem)\n   lastActiveItem.classList.remove(\'is-active\');\n   currItem.classList.add(\'is-active\');\n   this.$notify({message: `Click ${i}`});\n }\n}\n  }).$mount();\n<\/script>'},{id:"scrollview_sample2",label:"scrollviewDemo.samples2.label",description:"scrollviewDemo.samples2.description",template:"",code:'<vue-scroll-view\nref="scrollView"\n:scrolling-x="false"\n:autoReflow = "true"\n@scroll="onScroll">\n  <div\n    v-for="i in list"\n    class="vue-list-item"\n    :key="i"\n    @click="onItemClick(i)">\n    item {{i}}\n  </div>\n</vue-scroll-view>\n\n<script>\n  new Vue({\n    data: function() {\n      return {\n        list: 100,\n      };\n    },\nmethods:{\n onItemClick(i) {\n   var currItem = document.getElementsByClassName(\'vue-list-item\')[i-1];\n   var lastActiveItem = document.getElementsByClassName(\'is-active\')[0];\n   if(lastActiveItem)\n   lastActiveItem.classList.remove(\'is-active\');\n   currItem.classList.add(\'is-active\');\n   this.$notify({message: `Click ${i}`});\n }\n}\n  }).$mount();\n<\/script>'},{id:"scrollview_sample3",label:"scrollviewDemo.samples3.label",description:"scrollviewDemo.samples3.description",template:"",code:'<vue-scroll-view\n  ref="scrollView"\n  :scrolling-x="false"\n  @refreshing="onRefresh">\n  <vue-scroll-view-refresh\n    slot="refresh"\n    slot-scope="{ scrollTop, isRefreshActive, isRefreshing }"\n    :scroll-top="scrollTop"\n    :is-refreshing="isRefreshing"\n    :is-refresh-active="isRefreshActive">\n  </vue-scroll-view-refresh>\n  <div\n    v-for="i in list"\n    class="scroll-view-item"\n    :key="i"\n    @click="onItemClick(i)">\n    {{i}}\n  </div>\n</vue-scroll-view>\n<script>\n  new Vue({\n    data: function() {\n      return {\n        list: 100,\n      };\n    },\n   methods:{\n       onRefresh() {\n        // async data\n        setTimeout(() => {\n          this.list += 5\n          this.$refs.scrollView.finishRefresh();\n        }, 2000)\n       },\n   onItemClick(i) {\n     this.$notify({message: `Click ${i}`});\n   },\n}\n  }).$mount();\n<\/script>'},{id:"scrollview_sample4",label:"scrollviewDemo.samples4.label",description:"scrollviewDemo.samples4.description",template:"",code:'<vue-scroll-view\n    ref="scrollView"\n    :scrolling-x="false"\n    @end-reached="onEndReached">\n    <div\n        v-for="i in list"\n        class="scroll-view-item"\n        :key="i"\n        @click="onItemClick(i)">\n        {{i}}\n    </div>\n    <vue-scroll-view-more\n        slot="more"\n        :is-finished="isFinished">\n    </vue-scroll-view-more>\n</vue-scroll-view>\n<script>\n  new Vue({\n    data: function() {\n      return {\n        list: 20,\n        isFinished: false,\n      };\n    },\nmethods:{\n onEndReached() {\n   if (this.isFinished) {\n     return;\n   }\n   // async data\n   setTimeout(() => {\n     this.list += 5;\n     if (this.list >= 50) {\n     this.isFinished = true;\n   }\n     this.$refs.scrollView.finishLoadMore();\n   }, 1000);\n },\n onItemClick(i) {\n   this.$notify({message: `Click ${i}`});\n },\n}\n  }).$mount();\n<\/script>'},{id:"scrollview_sample5",label:"scrollviewDemo.samples5.label",description:"scrollviewDemo.samples5.description",template:"",code:'<vue-scroll-view\n  ref="scrollView"\n  :scrolling-x="false"\n  @scroll="onScroll">\n  <div\n    v-for="i in category"\n    :key="i"\n    class="scroll-view-category">\n    <p class="scroll-view-category-title">{{ i }}</p>\n    <div\n      v-for="j in list"\n      :key="j"\n      class="scroll-view-item">\n      {{`${i} - ${j}`}}\n    </div>\n  </div>\n</vue-scroll-view>\n<p v-if="activeBlockIndex > 0" class="scroll-view-striky-title">{{ activeBlockIndex }}</p>\n<script>\n  new Vue({\n    data: function() {\n      return {\n        category: 20,\n        list: 5,\n        dimensions: [],\n        scrollY: 0,\n      };\n    },\n   methods:{\n    initScrollBlock() {\n        var blocks = this.$el.querySelectorAll(\'.scroll-view-category\');\n        let offset = 0;\n        Array.prototype.slice.call(blocks).forEach((block, index) => {\n          var innerHeight = block.clientHeight\n          this.$set(this.dimensions, index, [offset, offset + innerHeight]);\n          offset += innerHeight;\n        });\n      },\n      onScroll({scrollTop}) {\n        this.scrollY = scrollTop;\n      },\n}\n  }).$mount();\n<\/script>'},{id:"scrollview_sample6",label:"scrollviewDemo.samples6.label",description:"scrollviewDemo.samples6.description",template:"",code:'<vue-tabbar\nv-model="activeBlockIndex"\nref="tabBar"\n:fixed="false"\n@change="onTabChange">\n<vue-tabbar-item v-for="item in tabBarItems" :key="item.index">{{item.label}}</vue-tabbar-item>\n</vue-tabbar>\n<vue-scroll-view\n  id="myScrollViewId"\n  class="scroll-view-with-tab-bar"\n  ref="scrollView"\n  :scrolling-x="false"\n  @scroll="onScroll"\n  @mousedown.native="onScrollStart"\n  @touchstart.native="onScrollStart">\n  <div\n    v-for="i in category"\n    :key="i"\n    class="scroll-view-category">\n    <div\n      v-for="j in list"\n      :key="j"\n      class="scroll-view-item">{{`${i} - ${j}`}}\n    </div>\n  </div>\n</vue-scroll-view>\n<script>\n  var debounce = function(fn, delay) {\n    let timer;\n    return function() {\n      var context = this;\n      timer && clearTimeout(timer);\n      timer = setTimeout(function() {\n        fn.apply(context, arguments);\n      }, delay);\n    };\n  };\n  new Vue({\n    data: function() {\n      return {\n        category: 6,\n        list: 20,\n        dimensions: [],\n        scrollY: 0,\n        isManual: false,\n        activeBlockIndex: 0,\n      };\n    },\n   computed: {\n     tabBarItems() {\n       return this.dimensions.map((item, index) => {\n         return {name: index, label: `Tab - ${index + 1}`};\n       });\n     },\n   },\n   mounted() {\n     // 如果内容发生变化，需重新初始化block和scroller\n     this.initScrollBlock();\n   },\n   methods: {\n     goBack() {\n       this.$router.go(-1);\n     },\n     initScrollBlock() {\n       var blocks = this.$el.querySelectorAll(\'.scroll-view-category\');\n       let offset = 0;\n       Array.prototype.slice.call(blocks).forEach((block, index) => {\n         var innerHeight = block.clientHeight;\n         this.$set(this.dimensions, index, [offset, offset + innerHeight]);\n         offset += innerHeight;\n       });\n     },\n     onScrollStart() {\n       this.isManual = false;\n     },\n     onScroll({scrollTop}) {\n       if (!this.isManual) {\n         this.dimensions.some((dimension, index) => {\n           if (scrollTop >= dimension[0] && scrollTop <= dimension[1]) {\n             this.activeBlockIndex = index;\n             return true;\n           }\n         });\n       }\n     },\n     onTabChange(index) {\n       this.isManual = true;\n       debounce(() => {\n         var offsetTop = this.dimensions[index][0];\n         this.$refs.scrollView.scrollTo(0, offsetTop, true);\n         this.scrollY = offsetTop;\n       }, 100)();\n     },\n    },\n  }).$mount();\n<\/script>'},{id:"scrollview_sample7",label:"scrollviewDemo.samples7.label",description:"scrollviewDemo.samples7.description",template:"",code:'<vue-tabs\n  v-model="activeName"\n  @tab-click="onTabClick">\n  <vue-tab-pane class="content" name="scrollView0" label="Block - 1">\n    <vue-scroll-view\n      ref="scrollView0"\n      :scrolling-x="false"\n      manual-init\n      @refreshing="onRefresh(0)">\n      <vue-scroll-view-refresh\n        slot="refresh"\n        slot-scope="{ scrollTop, isRefreshActive, isRefreshing }"\n        :scroll-top="scrollTop"\n        :is-refreshing="isRefreshing"\n        :is-refresh-active="isRefreshActive">\n      </vue-scroll-view-refresh>\n      <div\n        v-for="i in list0"\n        :key="i"\n        class="scroll-view-item">{{`1 - ${i}`}}\n      </div>\n    </vue-scroll-view>\n  </vue-tab-pane>\n  <vue-tab-pane class="content" name="scrollView1" label="Block - 2">\n    <vue-scroll-view\n      ref="scrollView1"\n      :scrolling-x="false"\n      manual-init\n      @refreshing="onRefresh(1)">\n      <vue-scroll-view-refresh\n        slot="refresh"\n        slot-scope="{ scrollTop, isRefreshActive, isRefreshing }"\n        :scroll-top="scrollTop"\n        :is-refreshing="isRefreshing"\n        :is-refresh-active="isRefreshActive">\n      </vue-scroll-view-refresh>\n      <div\n        v-for="i in list1"\n        :key="i"\n        class="scroll-view-item">{{`2 - ${i}`}}\n      </div>\n    </vue-scroll-view>\n  </vue-tab-pane>\n</vue-tabs>\n<script>\n  new Vue({\n    data: function() {\n      return {\n        list0: 20,\n        list1: 5,\n        isFinished: false,\n        activeName: \'scrollView0\',\n      };\n    },\n    mounted() {\n      //手动初始化\n      this.$refs[\'scrollView0\'].init();\n    },\n    methods: {\n      onRefresh(index) {\n        // async data\n        setTimeout(() => {\n          this[`list${index}`] += 5;\n          this.$refs[`scrollView${index}`].finishRefresh();\n        }, 2000);\n      },\n      onTabClick(tab) {\n        console.log(tab.name);\n        //手动初始化\n        this.$refs[tab.name].init();\n      },\n    },\n  }).$mount();\n<\/script>'},{id:"scrollview_attrs",label:"Attributes",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"scrolling-x",column2:"scrollviewDemo.attrsinfo.row1column2",column3:"Boolean",column4:"",column5:"true"},{column1:"scrolling-y",column2:"scrollviewDemo.attrsinfo.row2column2",column3:"Boolean",column4:"",column5:"true"},{column1:"bouncing",column2:"scrollviewDemo.attrsinfo.row3column2",column3:"Boolean",column4:"",column5:"true"},{column1:"auto-reflow",column2:"scrollviewDemo.attrsinfo.row4column2",column3:"Boolean",column4:"",column5:"false"},{column1:"manual-init",column2:"scrollviewDemo.attrsinfo.row5column2",column3:"Boolean",column4:"",column5:"false"},{column1:"end-reached-threshold",column2:"scrollviewDemo.attrsinfo.row6column2",column3:"Number",column4:"",column5:"0"},{column1:"immediate-check-end-reaching",column2:"scrollviewDemo.attrsinfo.row7column2",column3:"Boolean",column4:"",column5:"false"},{column1:"touch-angle",column2:"scrollviewDemo.attrsinfo.row8column2",column3:"Number",column4:"",column5:"45"},{column1:"is-prevent",column2:"scrollviewDemo.attrsinfo.row9column2",column3:"Boolean",column4:"",column5:"true"}]}}},notshowmeta:!0},{id:"scrollview_touchangle",label:"ScrollView TouchAngle",template:'<vue-image src="../image/scrollview_touch_ange.png" ></vue-image>',parameter:{data:function(){return{}}},notshowmeta:!0},{id:"scrollview_refresh_attrs",label:"ScrollViewRefresh Attributes",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"scroll-top",column2:"scrollviewDemo.refreshAttrs.row1column2",column3:"Number",column4:"",column5:"0"},{column1:"is-refresh-active",column2:"scrollviewDemo.refreshAttrs.row2column2",column3:"Boolean",column4:"",column5:"false"},{column1:"is-refreshing",column2:"scrollviewDemo.refreshAttrs.row3column2",column3:"Boolean",column4:"",column5:"false"},{column1:"refresh-text",column2:"scrollviewDemo.refreshAttrs.row4column2",column3:"String",column4:"",column5:"scrollviewDemo.refreshAttrs.row4column5"},{column1:"refresh-active-text",column2:"scrollviewDemo.refreshAttrs.row5column2",column3:"String",column4:"",column5:"scrollviewDemo.refreshAttrs.row5column5"},{column1:"refreshing-text",column2:"scrollviewDemo.refreshAttrs.row6column2",column3:"String",column4:"",column5:"scrollviewDemo.refreshAttrs.row6column5"},{column1:"roller-color",column2:"scrollviewDemo.refreshAttrs.row7column2",column3:"String",column4:"",column5:"#2F86F6"}]}}},notshowmeta:!0},{id:"scrollview_more_attrs",label:"ScrollViewMore Attributes",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"is-finished",column2:"scrollviewDemo.moreAttrs.row1column2",column3:"Boolean",column4:"",column5:"false"},{column1:"loading-text",column2:"scrollviewDemo.moreAttrs.row2column2",column3:"String",column4:"",column5:"scrollviewDemo.moreAttrs.row2column5"},{column1:"finished-text",column2:"scrollviewDemo.moreAttrs.row3column2",column3:"String",column4:"",column5:"scrollviewDemo.moreAttrs.row3column5"}]}}},notshowmeta:!0},{id:"scrollview_slot",label:"ScrollView Slots",description:"",template:'<div style="padding:20px;"> <div style="font-size:20px;font-weight:500;line-height:1.1;color:inherit;">default</div> <div style="padding:6px 0;">{{$t("scrollviewDemo.slotInfo.default")}}</div> <div style="margin-top:15px;font-size:20px;font-weight:500;line-height:1.1;color:inherit;">refresh</div> <div style="padding:6px 0;">{{$t("scrollviewDemo.slotInfo.refresh")}}</div> <vue-collapse v-model="activeNames" :expand-on-click-header="false"> \t<vue-collapse-item class="collapse-item-blue" name="refresh_item"> \t\t<template slot="title"> \t\t\t<vue-button type="text" icon="vue-icon-document">{{$t("main.code")}}</vue-button> \t\t</template> \t\t<pre class="toolbar:false;brush:jsp">{{refresh_code}}</pre> \t</vue-collapse-item> </vue-collapse> <div style="margin-top:15px;font-size:20px;font-weight:500;line-height:1.1;color:inherit;">more</div> <div style="padding:6px 0;">{{$t("scrollviewDemo.slotInfo.more")}}</div> <vue-collapse v-model="activeNames2" :expand-on-click-header="false"> \t<vue-collapse-item class="collapse-item-blue" name="more_item"> \t\t<template slot="title"> \t\t\t<vue-button type="text" icon="vue-icon-document">{{$t("main.code")}}</vue-button> \t\t</template> \t\t<pre class="toolbar:false;brush:jsp">{{more_code}}</pre> \t</vue-collapse-item> </vue-collapse></div>',parameter:{data:function(){return{activeNames:["refresh_item"],activeNames2:["more_item"],refresh_code:'<vue-scroll-view-refresh\n  slot="refresh"\n  slot-scope="{ scrollTop, isRefreshActive, isRefreshing }"\n  :scroll-top="scrollTop"\n  :is-refreshing="isRefreshing"\n  :is-refresh-active="isRefreshActive">\n</vue-scroll-view-refresh>',more_code:'<vue-scroll-view-more\n    slot="more"\n    :is-finished="isFinished">\n</vue-scroll-view-more>\n'}}},notshowmeta:!0},{id:"scrollview_event",label:"Scroll Events",template:'<div style="padding:20px;"> <div style="font-size:20px;font-weight:500;line-height:1.1;color:inherit;">@scroll({scrollLeft,scrollTop})</div> <div style="padding:6px 0;margin:8px 0;">{{$t("scrollviewDemo.eventInfo.detail1")}}</div> <attr-table :data="tableData"></attr-table> <div style="margin-top:20px;font-size:20px;font-weight:500;line-height:1.5;color:inherit;">@refreshActive()<span style="padding-left:15px;font-size:20px;font-weight:500;line-height:1.5;color:inherit;">{{$t("scrollviewDemo.eventInfo.detail2")}}</span></div> <div style="margin-top:20px;font-size:20px;font-weight:500;line-height:1.5;color:inherit;">@refreshing()<span style="padding-left:15px;font-size:20px;font-weight:500;line-height:1.5;color:inherit;">{{$t("scrollviewDemo.eventInfo.detail3")}}</span></div> <div style="margin-top:20px;font-size:20px;font-weight:500;line-height:1.5;color:inherit;">@end-reached()<span style="padding-left:15px;font-size:20px;font-weight:500;line-height:1.5;color:inherit;">{{$t("scrollviewDemo.eventInfo.detail4")}}</span></div></div>',parameter:{data:function(){return{tableData:[{column1:"scrollLeft",column2:"scrollviewDemo.eventInfo.row1column2",column3:"Number"},{column1:"scrollTop",column2:"scrollviewDemo.eventInfo.row2column2",column3:"Number"}]}}},notshowmeta:!0},{id:"scrollview_method",label:"ScrollView Method",description:"",template:'<div style="padding:20px;"> <div style="font-size:20px;font-weight:500;line-height:1.1;color:inherit;">init()</div> <div style="padding:6px 0;">{{$t("scrollviewDemo.methodInfo.detail1")}}</div> <div style="margin-top:15px;font-size:20px;font-weight:500;line-height:1.1;color:inherit;">reflowScroller()</div> <div style="padding:6px 0;">{{$t("scrollviewDemo.methodInfo.detail2")}}</div> <div style="margin-top:15px;font-size:20px;font-weight:500;line-height:1.1;color:inherit;">scrollTo(left, top, animate = false)</div> <div style="padding:6px 0;">{{$t("scrollviewDemo.methodInfo.detail3")}}</div> <attr-table :data="tableData"></attr-table> <div style="margin-top:15px;margin-top:15px;font-size:20px;font-weight:500;line-height:1.1;color:inherit;">getOffsets()</div> <div style="padding:6px 0;">{{$t("scrollviewDemo.methodInfo.detail4")}}</div> <div style="margin-top:15px;font-size:20px;font-weight:500;line-height:1.1;color:inherit;">triggerRefresh()</div> <div style="padding:6px 0;">{{$t("scrollviewDemo.methodInfo.detail5")}}</div> <div style="margin-top:15px;font-size:20px;font-weight:500;line-height:1.1;color:inherit;">finishRefresh()</div> <div style="padding:6px 0;">{{$t("scrollviewDemo.methodInfo.detail6")}}</div> <vue-collapse v-model="activeNames" :expand-on-click-header="false"> \t<vue-collapse-item class="collapse-item-blue" name="finish_refresh_item"> \t\t<template slot="title"> \t\t\t<vue-button type="text" icon="vue-icon-document">{{$t("main.code")}}</vue-button> \t\t</template> \t\t<pre class="toolbar:false;brush:jsp">{{finish_refresh_code}}</pre> \t</vue-collapse-item> </vue-collapse> <div style="margin-top:15px;font-size:20px;font-weight:500;line-height:1.1;color:inherit;">finishLoadMore()</div> <div style="padding:6px 0;">{{$t("scrollviewDemo.methodInfo.detail7")}}</div> <vue-collapse v-model="activeNames2" :expand-on-click-header="false"> \t<vue-collapse-item class="collapse-item-blue" name="finish_loadmore_item"> \t\t<template slot="title"> \t\t\t<vue-button type="text" icon="vue-icon-document">{{$t("main.code")}}</vue-button> \t\t</template> \t\t<pre class="toolbar:false;brush:jsp">{{finish_loadmore_code}}</pre> \t</vue-collapse-item> </vue-collapse></div>',parameter:{data:function(){return{tableData:[{column1:"left",column2:"scrollviewDemo.methodInfo.row1column2",column3:"Number"},{column1:"top",column2:"scrollviewDemo.methodInfo.row2column2",column3:"Number"},{column1:"animate",column2:"scrollviewDemo.methodInfo.row3column2",column3:"Boolean"}],activeNames:["finish_refresh_item"],activeNames2:["finish_loadmore_item"],finish_refresh_code:"this.$refs.scrollView.finishRefresh();",finish_loadmore_code:"this.$refs.scrollView.finishLoadMore();"}}},notshowmeta:!0}]}},"./demo/MobileDemo/SkeletonDemo.js":
/*!*****************************************!*\
  !*** ./demo/MobileDemo/SkeletonDemo.js ***!
  \*****************************************/
/*! no static exports found */function(e,n,t){"use strict";e.exports={path:"/skeleton",name:"mobile_skeleton",head:{label:"skeletonDemo.label",description:"",demoInitUrl:"skeleton"},samples:[{id:"skeleton_sample1",label:"skeletonDemo.samples1.label",description:"skeletonDemo.samples1.description",template:'<vue-skeleton title :row="3" />',code:""},{id:"skeleton_sample2",label:"skeletonDemo.samples2.label",description:"skeletonDemo.samples2.description",template:"",code:'<vue-skeleton title avatar :row="3" />'},{id:"skeleton_sample3",label:"skeletonDemo.samples3.label",description:"skeletonDemo.samples3.description",template:"",code:'<vue-skeleton title avatar :row="3" :loading="!mLoading">\n  <div style="display: flex;padding: 10px;">\n    <img style="flex-shrink: 0;width: 32px;height: 32px;margin-right:8px;" src="https://dss0.bdstatic.com/70cFuHSh_Q1YnxGkpoWK1HF6hhy/it/u=563868590,2220608420&fm=26&gp=0.jpg" />\n    <div style="padding-top: 6px;">\n      <h3 style="margin: 0;font-size: 18px;line-height: 20px;">{{mTitle}}</h3>\n      <p style="margin: 13px 0 0;font-size: 14px;line-height: 20px;">{{mDesc}}</p>\n    </div>\n  </div>\n</vue-skeleton><script>\n  new Vue({\n    data: function() {\n      return {\n       mLoading: false,\n       mTitle: \'骨架屏的应用\',\n       mDesc: \'当前使用的骨架屏组件是应用了第三方组件库vant中的骨架屏，如有疑问请联系开发组\',\n      };\n    },\n    mounted(){\n      setTimeout(()=>{\n        this.mLoading = true;\n      },1000);\n    },\n    methods:{\n    }\n  }).$mount();\n<\/script>'},{id:"skeleton_attrs",label:"Attributes",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"row",column2:"skeletonDemo.attrsInfo.row1column2",column3:"Number | String",column4:"",column5:"0"},{column1:"row-width",column2:"skeletonDemo.attrsInfo.row2column2",column3:"Number | String | Array",column4:"",column5:"100%"},{column1:"title",column2:"skeletonDemo.attrsInfo.row3column2",column3:"Boolean",column4:"",column5:"false"},{column1:"avatar",column2:"skeletonDemo.attrsInfo.row4column2",column3:"Boolean",column4:"",column5:"false"},{column1:"loading",column2:"skeletonDemo.attrsInfo.row5column2",column3:"Boolean",column4:"",column5:"true"},{column1:"animate",column2:"skeletonDemo.attrsInfo.row6column2",column3:"Boolean",column4:"",column5:"true"},{column1:"title-width",column2:"skeletonDemo.attrsInfo.row7column2",column3:"Number | String",column4:"",column5:"40%"},{column1:"avatar-size",column2:"skeletonDemo.attrsInfo.row8column2",column3:"Number | String",column4:"",column5:"32px"},{column1:"avatar-shape",column2:"skeletonDemo.attrsInfo.row9column2",column3:"String",column4:"",column5:"round"}]}}},notshowmeta:!0}]}},"./demo/MobileDemo/StepperDemo.js":
/*!****************************************!*\
  !*** ./demo/MobileDemo/StepperDemo.js ***!
  \****************************************/
/*! no static exports found */function(e,n,t){"use strict";e.exports={path:"/stepper",name:"mobile_stepper",head:{label:"stepperDemo.label",description:"",demoInitUrl:"stepper"},samples:[{id:"stepper_top1",label:"stepperDemo.detail1.label",description:"stepperDemo.detail1.description",template:"",code:"",notshowmeta:!0},{id:"stepper_sample1",label:"stepperDemo.samples1.label",description:"stepperDemo.samples1.description",template:"",code:'<vue-stepper v-model="value1" />\n<script>\n  new Vue({\n    data: function() {\n      return {\n       value1:0\n      };\n    },\n    methods:{\n    }\n  }).$mount();\n<\/script>'},{id:"stepper_sample2",label:"stepperDemo.samples2.label",description:"stepperDemo.samples2.description",template:"",code:'<vue-stepper v-model="value2" step="3" />\n<script>\n  new Vue({\n    data: function() {\n      return {\n       value2:0\n      };\n    },\n    methods:{\n    }\n  }).$mount();\n<\/script>'},{id:"stepper_sample3",label:"stepperDemo.samples3.label",description:"stepperDemo.samples3.description",template:"",code:'<vue-stepper v-model="value3" min="3" max="9"/>\n<script>\n  new Vue({\n    data: function() {\n      return {\n       value3:0\n      };\n    },\n    methods:{\n    }\n  }).$mount();\n<\/script>'},{id:"stepper_sample4",label:"stepperDemo.samples4.label",description:"stepperDemo.samples4.description",template:"",code:'<vue-stepper v-model="value4" integer/>\n<script>\n  new Vue({\n    data: function() {\n      return {\n       value4:0\n      };\n    },\n    methods:{\n    }\n  }).$mount();\n<\/script>'},{id:"stepper_sample5",label:"stepperDemo.samples5.label",description:"stepperDemo.samples5.description",template:"",code:'<vue-stepper v-model="value4" disabled/>\n<script>\n  new Vue({\n    data: function() {\n      return {\n       value4:0\n      };\n    },\n    methods:{\n    }\n  }).$mount();\n<\/script>'},{id:"stepper_sample6",label:"stepperDemo.samples6.label",description:"stepperDemo.samples6.description",template:"",code:'<vue-stepper v-model="value5" disable-input/>\n<script>\n  new Vue({\n    data: function() {\n      return {\n       value5:0\n      };\n    },\n    methods:{\n    }\n  }).$mount();\n<\/script>'},{id:"stepper_sample7",label:"stepperDemo.samples7.label",description:"stepperDemo.samples7.description",template:"",code:'<vue-stepper v-model="value6" step="0.01" :decimal-length="2"/>\n<script>\n  new Vue({\n    data: function() {\n      return {\n       value6:0\n      };\n    },\n    methods:{\n    }\n  }).$mount();\n<\/script>'},{id:"stepper_sample8",label:"stepperDemo.samples8.label",description:"stepperDemo.samples8.description",template:"",code:'<vue-stepper v-model="value7" input-width="50px"  button-size="40px"/>\n<script>\n  new Vue({\n    data: function() {\n      return {\n       value7:0\n      };\n    },\n    methods:{\n    }\n  }).$mount();\n<\/script>'},{id:"stepper_sample9",label:"stepperDemo.samples9.label",description:"stepperDemo.samples9.description",template:"",code:'<vue-stepper :value="value8" async-change @change="onChange" :disabled="isDisabled" />\n<script>\n  new Vue({\n    data: function() {\n      return {\n       value8: 0,\n       isDisabled:false\n      };\n    },\n    methods:{\n     onChange(value){\n       // eslint-disable-next-line @typescript-eslint/no-this-alias\n       var self = this;\n       self.isDisabled = true;\n       this.$notify({message: \'Loading\',\n       iconClass: \'vue-icon-loading\',\n       onClose: function() {\n           self.value8 = value;\n           self.isDisabled = false;\n       }\n       });\n     }\n    }\n  }).$mount();\n<\/script>'},{id:"stepper_attrs",label:"Attributes",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"v-model",column2:"stepperDemo.attrsInfo.row1column2",column3:"Number | String",column4:"",column5:""},{column1:"min",column2:"stepperDemo.attrsInfo.row2column2",column3:"Number | String",column4:"",column5:"0"},{column1:"max",column2:"stepperDemo.attrsInfo.row3column2",column3:"Number | String",column4:"",column5:""},{column1:"default-value",column2:"stepperDemo.attrsInfo.row4column2",column3:"Number | String",column4:"",column5:"0"},{column1:"step",column2:"stepperDemo.attrsInfo.row5column2",column3:"Number | String",column4:"",column5:"1"},{column1:"name",column2:"stepperDemo.attrsInfo.row6column2",column3:"Number | String",column4:"",column5:""},{column1:"input-width",column2:"stepperDemo.attrsInfo.row7column2",column3:"Number | String",column4:"",column5:"32px"},{column1:"button-size",column2:"stepperDemo.attrsInfo.row8column2",column3:"Number | String",column4:"",column5:"28px"},{column1:"decimal-length",column2:"stepperDemo.attrsInfo.row9column2",column3:"Number | String",column4:"",column5:""},{column1:"integer",column2:"stepperDemo.attrsInfo.row10column2",column3:"Boolean",column4:"",column5:"false"},{column1:"disabled",column2:"stepperDemo.attrsInfo.row11column2",column3:"Boolean",column4:"",column5:"false"},{column1:"disable-plus",column2:"stepperDemo.attrsInfo.row12column2",column3:"Boolean",column4:"",column5:"false"},{column1:"disable-minus",column2:"stepperDemo.attrsInfo.row13column2",column3:"Boolean",column4:"",column5:"false"},{column1:"disable-input",column2:"stepperDemo.attrsInfo.row14column2",column3:"Boolean",column4:"",column5:"false"},{column1:"async-change",column2:"stepperDemo.attrsInfo.row15column2",column3:"Boolean",column4:"",column5:"false"},{column1:"show-plus",column2:"stepperDemo.attrsInfo.row16column2",column3:"Boolean",column4:"",column5:"true"},{column1:"show-minus",column2:"stepperDemo.attrsInfo.row17column2",column3:"Boolean",column4:"",column5:"true"},{column1:"long-press",column2:"stepperDemo.attrsInfo.row18column2",column3:"Boolean",column4:"",column5:"true"}]}}},notshowmeta:!0},{id:"stepper_event",label:"Events",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"change",column2:"stepperDemo.eventInfo.row1column2",column3:"value: string, detail: { name: string }"},{column1:"overlimit",column2:"stepperDemo.eventInfo.row2column2",column3:""},{column1:"plus",column2:"stepperDemo.eventInfo.row3column2",column3:""},{column1:"minus",column2:"stepperDemo.eventInfo.row4column2",column3:""},{column1:"focus",column2:"stepperDemo.eventInfo.row5column2",column3:""},{column1:"blur",column2:"stepperDemo.eventInfo.row6column2",column3:""}]}}},notshowmeta:!0}]}},"./demo/MobileDemo/SwipeCellDemo.js":
/*!******************************************!*\
  !*** ./demo/MobileDemo/SwipeCellDemo.js ***!
  \******************************************/
/*! no static exports found */function(e,n,t){"use strict";e.exports={path:"/swipe-cell",name:"mobile_swipecell",head:{label:"swipecellDemo.label",description:"",demoInitUrl:"swipe-cell"},samples:[{id:"swipecell_sample1",label:"swipecellDemo.samples1.label",description:"swipecellDemo.samples1.description",template:"",code:'       <vue-swipe-cell>\n  <template #left>\n    <vue-button type="success" style="height:100%;border-radius:0;" @click="clickSelect">选择</vue-button>\n  </template>\n  <vue-form-item label="单元格">\n    <span style="display:block;text-align:right;padding-right:10px;">内容1</span>\n  </vue-form-item>\n  <template #right>\n    <vue-button type="danger" style="height:100%;border-radius:0;" @click="clickDelete">删除</vue-button>\n    <vue-button type="success" style="height:100%;border-radius:0;margin-left:0;" @click="clickCollect">收藏</vue-button>\n  </template>\n</vue-swipe-cell>\n<script>\n  new Vue({\n    data: function() {\n      return {\n      };\n    },\n    methods:{\n     clickSelect() {\n'+"       this.$notify({message: 'click the select button',position:'bottom-center'});\n     },\n     clickDelete() {\n       this.$notify({message: 'click the delete button'});\n     },\n     clickCollect() {\n       this.$notify({message: 'click the collect button'});\n     },\n    }\n  }).$mount();\n<\/script>"},{id:"swipecell_sample2",label:"swipecellDemo.samples2.label",description:"swipecellDemo.samples2.description",template:"",code:'<vue-swipe-cell>\n      <div class="custom_area">\n        <a class="thumb_view">\n          <img class="img_view" src="https://img.yzcdn.cn/vant/cat.jpeg" />\n        </a>\n        <div class="right_sub_area">\n          <div style="margin:4px 0;">商品标题</div>\n          <div style="margin:6px 0;">描述信息</div>\n          <div style="display:flex;justify-content:space-between;margin-top:15px;">\n            <span>￥2.00</span>\n            <span>x2</span>\n          </div>\n        </div>\n      </div>\n    <template #right>\n      <vue-button type="danger" style="height:100%;border-radius:0;">删除</vue-button>\n      <vue-button type="success" style="height:100%;border-radius:0;margin-left:0;">收藏</vue-button>\n    </template>\n</vue-swipe-cell>\n<script>\n  new Vue({\n    data: function() {\n      return {\n      };\n    },\n    methods:{\n    }\n  }).$mount();\n<\/script>'},{id:"swipecell_sample3",label:"swipecellDemo.samples3.label",description:"swipecellDemo.samples3.description",template:"",code:'<vue-swipe-cell :before-close="beforeClose">\n  <template #left>\n    <vue-button type="success" style="height:100%;border-radius:0;" @click="clickSelect">选择</vue-button>\n  </template>\n  <vue-form-item label="单元格2">\n    <span style="display:block;text-align:right;padding-right:10px;">内容2</span>\n  </vue-form-item>\n  <template #right>\n    <vue-button type="danger" style="height:100%;border-radius:0;">删除</vue-button>\n    <vue-button type="success" style="height:100%;border-radius:0;margin-left:0;">收藏</vue-button>\n  </template>\n</vue-swipe-cell>\n<vue-dialog v-model="dialogVisible" size="tiny" show-close :before-close="handleClose">\n  <span slot="header">This is header</span>\n  <span>Are you sure delete it?</span>\n  <span slot="footer" class="dialog-footer">\n    <vue-button @click="dialogVisible = false">Cancel</vue-button>\n    <vue-button type="primary" @click="dialogVisible = false">Complete</vue-button>\n  </span>\n</vue-dialog>\n<script>\n  new Vue({\n    data: function() {\n      return {\n         dialogVisible:false,\n         handleClose: function(done) {\n             this.$confirm({\n               message: "Are you sure to close this dialog?"\n             }).then(function() {\n               done();\n             }).catch(function() {\n               done(false);\n             });\n          }\n      };\n    },\n    methods:{\n       beforeClose({position, instance}) {\n         // position 为关闭时点击的位置\n         // instance 为对应的 SwipeCell 实例\n         switch (position) {\n           case \'left\':\n             this.$notify({message: \'click the left position\'});\n             break;\n           case \'cell\':\n             this.$notify({message: \'click the cell position\'});\n             break;\n           case \'outside\':\n             instance.close();\n             break;\n           case \'right\':\n             this.$notify({message: \'click the right position\'});\n             this.dialogVisible = true;\n             break;\n         }\n       }\n    }\n  }).$mount();\n<\/script>'},{id:"swipecell_attrs",label:"Attributes",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"name",column2:"swipecellDemo.attrsInfo.row1column2",column3:"Number | String",column4:"",column5:"false"},{column1:"left-width",column2:"swipecellDemo.attrsInfo.row2column2",column3:"Number | String",column4:"",column5:"auto"},{column1:"right-width",column2:"swipecellDemo.attrsInfo.row3column2",column3:"Number | String",column4:"",column5:"auto"},{column1:"before-close",column2:"swipecellDemo.attrsInfo.row4column2",column3:"Function",column4:"",column5:""},{column1:"disabled",column2:"swipecellDemo.attrsInfo.row5column2",column3:"Boolean",column4:"",column5:"false"},{column1:"stop-propagation",column2:"swipecellDemo.attrsInfo.row6column2",column3:"Boolean",column4:"",column5:"false"}]}}},notshowmeta:!0},{id:"beforeclose_attrs",label:"beforeClose Params",template:'<div style="padding:20px;"><div style="padding:6px 0;">{{$t("swipecellDemo.beforecloseAttrsInfo.description")}}</div><attr-table :data="tableData"></attr-table></div>',parameter:{data:function(){return{tableData:[{column1:"name",column2:"swipecellDemo.beforecloseAttrsInfo.row1column2",column3:"String",column4:"",column5:""},{column1:"position",column2:"swipecellDemo.beforecloseAttrsInfo.row2column2",column3:"String",column4:"",column5:""},{column1:"instance",column2:"swipecellDemo.beforecloseAttrsInfo.row3column2",column3:"String",column4:"",column5:""}]}}},notshowmeta:!0},{id:"swipecell_slots",label:"Slots",template:'<div style="padding:20px;"> <div style="font-size:20px;font-weight:500;line-height:1.1;color:inherit;">default</div> <div style="padding:6px 0;">{{$t("swipecellDemo.slotsInfo.row1column2")}}</div> <div style="margin-top:15px;font-size:20px;font-weight:500;line-height:1.1;color:inherit;">left</div> <div style="padding:6px 0;">{{$t("swipecellDemo.slotsInfo.row2column2")}}</div> <div style="margin-top:15px;font-size:20px;font-weight:500;line-height:1.1;color:inherit;">right</div> <div style="padding:6px 0;">{{$t("swipecellDemo.slotsInfo.row3column2")}}</div></div>',parameter:{},notshowmeta:!0},{id:"swipecell_event",label:"Events",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"click",column2:"swipecellDemo.eventInfo.row1column2",column3:"swipecellDemo.eventInfo.row1column3"},{column1:"open",column2:"swipecellDemo.eventInfo.row2column2",column3:"{ position: 'left' | 'right' , name: string }"},{column1:"close",column2:"swipecellDemo.eventInfo.row3column2",column3:"{ position: string , name: string }"}]}}},notshowmeta:!0},{id:"swipecell_methods",label:"Method",template:'<div style="padding:20px;"> <div style="padding:10px 0;">{{$t("swipecellDemo.methodInfo.description")}}</div> <div style="font-size:20px;font-weight:500;line-height:1.1;color:inherit;">open()</div> <div style="padding:6px 0;">{{$t("swipecellDemo.methodInfo.row1column2")}}</div> <div style="margin-top:15px;font-size:20px;font-weight:500;line-height:1.1;color:inherit;">close()</div> <div style="padding:6px 0;">{{$t("swipecellDemo.methodInfo.row2column2")}}</div></div>',parameter:{},notshowmeta:!0}]}},"./demo/MobileDemo/TabBarDemo.js":
/*!***************************************!*\
  !*** ./demo/MobileDemo/TabBarDemo.js ***!
  \***************************************/
/*! no static exports found */function(e,n,t){"use strict";e.exports={path:"/tab-bar",name:"mobile_tabbar",head:{label:"tabbarDemo.label",description:"",demoInitUrl:"tab-bar"},samples:[{id:"tabbar_sample1",label:"tabbarDemo.samples1.label",description:"tabbarDemo.samples1.description",template:"",code:'<vue-tabbar v-model="activeIndex" :fixed="isFixed">\n    <vue-tabbar-item icon="vue-icon-home">首页</vue-tabbar-item>\n    <vue-tabbar-item icon="vue-icon-search">搜索</vue-tabbar-item>\n    <vue-tabbar-item icon="vue-icon-user">通讯录</vue-tabbar-item>\n    <vue-tabbar-item icon="vue-icon-setting">设置</vue-tabbar-item>\n</vue-tabbar>\n<script>\n  new Vue({\n    data: function() {\n      return {\n       activeIndex:0,\n       isFixed:false\n      };\n    },\n    methods:{\n    }\n  }).$mount();\n<\/script>'},{id:"tabbar_sample2",label:"tabbarDemo.samples2.label",description:"tabbarDemo.samples2.description",template:"",code:'<vue-tabbar v-model="activeName" :fixed="isFixed">\n    <vue-tabbar-item name="home" icon="vue-icon-home">首页</vue-tabbar-item>\n    <vue-tabbar-item name="search" icon="vue-icon-search">搜索</vue-tabbar-item>\n    <vue-tabbar-item name="user" icon="vue-icon-user">通讯录</vue-tabbar-item>\n    <vue-tabbar-item name="setting" icon="vue-icon-setting">设置</vue-tabbar-item>\n</vue-tabbar>\n<script>\n  new Vue({\n    data: function() {\n      return {\n       activeName: \'search\',\n       isFixed:false\n      };\n    },\n    methods:{\n    }\n  }).$mount();\n<\/script>'},{id:"tabbar_sample3",label:"tabbarDemo.samples3.label",description:"tabbarDemo.samples3.description",template:"",code:'<vue-tabbar v-model="activeIndex2" :fixed="isFixed">\n    <vue-tabbar-item icon="vue-icon-home" badge="8">首页</vue-tabbar-item>\n    <vue-tabbar-item icon="vue-icon-search" dot>搜索</vue-tabbar-item>\n    <vue-tabbar-item icon="vue-icon-user" badge="6">通讯录</vue-tabbar-item>\n    <vue-tabbar-item icon="vue-icon-setting">设置</vue-tabbar-item>\n</vue-tabbar>\n<script>\n  new Vue({\n    data: function() {\n      return {\n       activeIndex2:0,\n       isFixed:false\n      };\n    },\n    methods:{\n    }\n  }).$mount();\n<\/script>'},{id:"tabbar_sample4",label:"tabbarDemo.samples4.label",description:"tabbarDemo.samples4.description",template:"",code:'<vue-tabbar v-model="active" :fixed="isFixed">\n  <vue-tabbar-item dot>\n    <span>自定义</span>\n    <template #icon="props">\n      <img :src="props.active ? mIcon.active:mIcon.inactive"/>\n    </template>\n  </vue-tabbar-item>\n  <vue-tabbar-item icon="vue-icon-search">搜索</vue-tabbar-item>\n  <vue-tabbar-item icon="vue-icon-user" badge="6">通讯录</vue-tabbar-item>\n  <vue-tabbar-item icon="vue-icon-setting">设置</vue-tabbar-item>\n</vue-tabbar>\n<script>\n  new Vue({\n    data: function() {\n      return {\n       isFixed:false,\n       active:0,\n       mIcon: {\n         active: \'https://img.yzcdn.cn/vant/user-active.png\',\n         inactive: \'https://img.yzcdn.cn/vant/user-inactive.png\',\n       }\n      };\n    },\n    methods:{\n    }\n  }).$mount();\n<\/script>'},{id:"tabbar_sample5",label:"tabbarDemo.samples5.label",description:"tabbarDemo.samples5.description",template:"",code:"<vue-tabbar v-model=\"activeIndex3\" :fixed=\"isFixed\" active-color=\"#07c160\" inactive-color=\"lightblue\" @change=\"onTabChange\">\n    <vue-tabbar-item v-for=\"item in mItemList\" :key=\"item.iconName\" :icon=\"item.iconName\">{{item.tabLabel}}</vue-tabbar-item>\n</vue-tabbar>\n<script>\n  new Vue({\n    data: function() {\n      return {\n       activeIndex3:3,\n       isFixed:false,\n       mItemList:[\n         {\n           iconName: 'vue-icon-home',\n           tabLabel: '首页'\n         },\n         {\n           iconName: 'vue-icon-search',\n           tabLabel: '搜索'\n         },\n         {\n           iconName: 'vue-icon-user',\n           tabLabel: '通讯录'\n         },\n         {\n           iconName: 'vue-icon-setting',\n           tabLabel: '设置'\n         },\n       ],\n      };\n    },\n    methods:{\n     onTabChange(index) {\n       var item = this.mItemList[index];\n       this.$notify({message:'当前点击了'+item.tabLabel+'标签项'});\n     }\n    }\n  }).$mount();\n<\/script>"},{id:"tabbar_sample6",label:"tabbarDemo.samples6.label",description:"tabbarDemo.samples6.description",template:"",code:"<router-view></router-view>\n<vue-tabbar v-model=\"activeIndex4\" :fixed=\"isFixed\" route>\n    <vue-tabbar-item v-for=\"item in mItemList2\" :key=\"item.iconName\" :to=\"item.toUrl\" :icon=\"item.iconName\">{{item.tabLabel}}</vue-tabbar-item>\n</vue-tabbar>\n<script>\n  new Vue({\n    data: function() {\n      return {\n       activeIndex4:0,\n       isFixed:false,\n       mItemList2:[\n         {\n           toUrl: '/form1',\n           iconName: 'vue-icon-home',\n           tabLabel: '表单页'\n         },\n         {\n           toUrl: '/select',\n           iconName: 'vue-icon-menu',\n           tabLabel: '选择页'\n         },\n         {\n           toUrl: '/cascader',\n           iconName: 'vue-icon-user',\n           tabLabel: '级联页'\n         },\n         {\n           toUrl: '/input',\n           iconName: 'vue-icon-setting',\n           tabLabel: '输入页'\n         }\n       ]\n      };\n    },\n    methods:{\n    }\n  }).$mount();\n<\/script>"},{id:"tabbar_attrs",label:"TabBar Attributes",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"v-model",column2:"tabbarDemo.attrsInfo.row1column2",column3:"Number |String",column4:"",column5:"0"},{column1:"fixed",column2:"tabbarDemo.attrsInfo.row2column2",column3:"Boolean",column4:"",column5:"true"},{column1:"border",column2:"tabbarDemo.attrsInfo.row3column2",column3:"Boolean",column4:"",column5:"true"},{column1:"z-index",column2:"tabbarDemo.attrsInfo.row4column2",column3:"Nubmber | String",column4:"",column5:""},{column1:"active-color",column2:"tabbarDemo.attrsInfo.row5column2",column3:"String",column4:"",column5:"#1989fa"},{column1:"inactive-color",column2:"tabbarDemo.attrsInfo.row6column2",column3:"String",column4:"",column5:"#7d7e80"},{column1:"placeholder",column2:"tabbarDemo.attrsInfo.row7column2",column3:"Boolean",column4:"",column5:"false"},{column1:"safe-area-inset-bottom",column2:"tabbarDemo.attrsInfo.row8column2",column3:"Boolean",column4:"",column5:"false"},{column1:"route",column2:"tabbarDemo.attrsInfo.row9column2",column3:"Boolean",column4:"",column5:""}]}}},notshowmeta:!0},{id:"tabbar_event",label:"TabBar Events",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"change",column2:"tabbarDemo.eventInfo.row1column2",column3:"tabbarDemo.eventInfo.row1column3"}]}}},notshowmeta:!0},{id:"tabbaritem_attrs",label:"TabBarItem Attributes",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"name",column2:"tabbarDemo.tabBarItemAttrsInfo.row1column2",column3:"Number |String",column4:"",column5:"tabbarDemo.tabBarItemAttrsInfo.row1column5"},{column1:"icon",column2:"tabbarDemo.tabBarItemAttrsInfo.row2column2",column3:"String",column4:"",column5:""},{column1:"dot",column2:"tabbarDemo.tabBarItemAttrsInfo.row3column2",column3:"Boolean",column4:"",column5:"false"},{column1:"badge",column2:"tabbarDemo.tabBarItemAttrsInfo.row4column2",column3:"Nubmber | String",column4:"",column5:""},{column1:"info",column2:"tabbarDemo.tabBarItemAttrsInfo.row5column2",column3:"Nubmber | String",column4:"",column5:""},{column1:"url",column2:"tabbarDemo.tabBarItemAttrsInfo.row6column2",column3:"String",column4:"",column5:""},{column1:"to",column2:"tabbarDemo.tabBarItemAttrsInfo.row7column2",column3:"String | Object",column4:"",column5:""},{column1:"replace",column2:"tabbarDemo.tabBarItemAttrsInfo.row8column2",column3:"Boolean",column4:"",column5:"false"}]}}},notshowmeta:!0},{id:"tabbaritem_slots",label:"TabBarItem Slots",template:'<div style="padding:20px;"> <div style="font-size:20px;font-weight:500;line-height:1.1;color:inherit;">icon</div> <div style="padding:6px 0;">{{$t(" tabbarDemo.tabBarItemSlotInfo.row1column2")}}</div></div>',parameter:{},notshowmeta:!0}]}},"./demo/MobileDemo/TextIconDemo.js":
/*!*****************************************!*\
  !*** ./demo/MobileDemo/TextIconDemo.js ***!
  \*****************************************/
/*! no static exports found */function(e,n,t){"use strict";e.exports={path:"/text-icon",name:"mobile_texticon",head:{label:"texticonDemo.label",description:"",demoInitUrl:"text-icon"},samples:[{id:"texticon_sample1",label:"texticonDemo.samples1.label",description:"texticonDemo.samples1.description",template:"",code:'<vue-text-icon icon-name="vue-icon-document" label="文档"></vue-text-icon>'},{id:"texticon_sample2",label:"texticonDemo.samples2.label",description:"texticonDemo.samples2.description",template:"",code:'<vue-text-icon icon-name="vue-icon-upload" icon-color="blue" icon-size="20" \n   label="上传" label-color="blue" label-size="20"  @click="doThisIcon">\n</vue-text-icon>\n<script>\n  new Vue({\n    data: function() {\n      return {\n      };\n    },\n    methods:{\n      doThisIcon() {\n        this.$notify({message: \'点击了当前图标\'});\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"texticon_sample3",label:"texticonDemo.samples3.label",description:"texticonDemo.samples3.description",template:"",code:'<div style="display:flex;justify-content: space-around;">\n  <vue-text-icon icon-name="vue-icon-arrow-up" label="上方" labelPosition="top" @click="doThisIcon">\n  </vue-text-icon>\n  <vue-text-icon icon-name="vue-icon-arrow-right" label="右侧" labelPosition="right" @click="doThisIcon">\n  </vue-text-icon>\n  <vue-text-icon icon-name="vue-icon-arrow-down" label="下方" labelPosition="bottom" @click="doThisIcon">\n  </vue-text-icon>\n  <vue-text-icon icon-name="vue-icon-arrow-left" label="左侧" labelPosition="left" @click="doThisIcon">\n  </vue-text-icon>\n</div>\n<script>\n  new Vue({\n    data: function() {\n      return {\n      };\n    },\n    methods:{\n      doThisIcon() {\n        this.$notify({message: \'点击了当前图标\'});\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"texticon_sample4",label:"texticonDemo.samples4.label",description:"texticonDemo.samples4.description",template:"",code:'<div style="display:flex;justify-content: space-around;">\n  <vue-text-icon icon-name="vue-icon-arrow-up" label="上方" labelPosition="top" labelPadding="4" @click="doThisIcon">\n  </vue-text-icon>\n  <vue-text-icon icon-name="vue-icon-arrow-right" label="右侧" labelPosition="right" labelPadding="10" @click="doThisIcon">\n  </vue-text-icon>\n  <vue-text-icon icon-name="vue-icon-arrow-down" label="下方" labelPosition="bottom" labelPadding="4" @click="doThisIcon">\n  </vue-text-icon>\n  <vue-text-icon icon-name="vue-icon-arrow-left" label="左侧" labelPosition="left" labelPadding="10"  @click="doThisIcon">\n  </vue-text-icon>\n</div>\n<script>\n  new Vue({\n    data: function() {\n      return {\n      };\n    },\n    methods:{\n      doThisIcon() {\n        this.$notify({message: \'点击了当前图标\'});\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"texticon_attrs",label:"Attributes",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"icon-name",column2:"texticonDemo.attrsInfo.row1column2",column3:"String",column4:"",column5:""},{column1:"icon-color",column2:"texticonDemo.attrsInfo.row2column2",column3:"String",column4:"",column5:""},{column1:"icon-size",column2:"texticonDemo.attrsInfo.row3column2",column3:"Number | String",column4:"",column5:""},{column1:"dot",column2:"texticonDemo.attrsInfo.row4column2",column3:"Boolean",column4:"",column5:"false"},{column1:"badge",column2:"texticonDemo.attrsInfo.row5column2",column3:"Number | String",column4:"",column5:""},{column1:"label",column2:"texticonDemo.attrsInfo.row6column2",column3:"String",column4:"",column5:""},{column1:"label-color",column2:"texticonDemo.attrsInfo.row7column2",column3:"String",column4:"",column5:""},{column1:"label-size",column2:"texticonDemo.attrsInfo.row8column2",column3:"Number | String",column4:"",column5:"true"},{column1:"label-position",column2:"texticonDemo.attrsInfo.row9column2",column3:"String",column4:"",column5:"bottom"},{column1:"label-padding",column2:"texticonDemo.attrsInfo.row10column2",column3:"Number | String",column4:"",column5:"2"}]}}},notshowmeta:!0},{id:"texticon_event",label:"Events",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"click",column2:"texticonDemo.eventInfo.row1column2",column3:""}]}}},notshowmeta:!0}]}},"./demo/MobileDemo/installDemo.js":
/*!****************************************!*\
  !*** ./demo/MobileDemo/installDemo.js ***!
  \****************************************/
/*! no static exports found */function(e,n,t){"use strict";e.exports={path:"/mobile-install",name:"mobileInstall",head:{label:"mobileInstallDemo.label",description:""},samples:[{id:"mobileInstall1",label:"mobileInstallDemo.detail1.label",description:"mobileInstallDemo.detail1.description",template:"",parameter:{},code:'\x3c!-- VIY PC --\x3e\n<link rel="stylesheet" href="https://spring21cn.github.io/vue-component/css/component.min.css">\n<script src="https://spring21cn.github.io/vue-component/js/vue-all.min.js"><\/script>\n<script src="https://spring21cn.github.io/vue-component/js/vue-component-all.min.js"><\/script>\n\n\x3c!-- VIY Mobile Plugin --\x3e\n<link rel="stylesheet" type="text/css" href="./vue-mobile.css">\n<script type="text/javascript" src="./vue-mobile.umd.js"><\/script>'}]}},"./demo/NavMenuDemo.js":
/*!*****************************!*\
  !*** ./demo/NavMenuDemo.js ***!
  \*****************************/
/*! no static exports found */function(e,n,t){"use strict";e.exports={path:"/navMenu",name:"navMenu",head:{label:"navMenuDemo.label",description:"navMenuDemo.description"},samples:[{id:"navMenu1",label:"navMenuDemo.samples1.label",description:"navMenuDemo.samples1.description",template:'<div class="source"><vue-menu theme="dark" :default-active="activeIndex1" mode="horizontal" @select="handleSelect" menu-trigger="click"><vue-menu-item index="1">Processing Center</vue-menu-item><vue-submenu index="2"><template slot="title">Workspace</template><vue-menu-item index="2-1">Item one</vue-menu-item><vue-menu-item index="2-2">Item two</vue-menu-item><vue-menu-item index="2-3">Item three</vue-menu-item></vue-submenu><vue-menu-item index="3">Orders</vue-menu-item></vue-menu><div style="margin:30px"></div><vue-menu :default-active="activeIndex2" mode="horizontal" @select="handleSelect"><vue-menu-item index="1">Processing Center</vue-menu-item><vue-submenu index="2"><template slot="title">Workspace</template><vue-menu-item index="2-1">Item one</vue-menu-item><vue-menu-item index="2-2">Item two</vue-menu-item><vue-menu-item index="2-3">Item three</vue-menu-item></vue-submenu><vue-menu-item index="3">Orders</vue-menu-item></vue-menu></div>',parameter:{data:function(){return{activeIndex1:"1",activeIndex2:"3"}},methods:{handleSelect:function(e,n){this.$notify({title:"Selected Index: "+e}),this.$notify({title:"Selected Path Index: "+n.map(function(e){return e}).join(", ")})}}},code:'<vue-menu theme="dark" :default-active="activeIndex1" mode="horizontal" @select="handleSelect" menu-trigger="click">\n  <vue-menu-item index="1">Processing Center</vue-menu-item>\n  <vue-submenu index="2">\n    <template slot="title">Workspace</template>\n    <vue-menu-item index="2-1">Item one</vue-menu-item>\n    <vue-menu-item index="2-2">Item two</vue-menu-item>\n    <vue-menu-item index="2-3">Item three</vue-menu-item>\n  </vue-submenu>\n  <vue-menu-item index="3">Orders</vue-menu-item>\n</vue-menu>\n<vue-menu :default-active="activeIndex2" mode="horizontal" @select="handleSelect">\n  <vue-menu-item index="1">Processing Center</vue-menu-item>\n  <vue-submenu index="2">\n    <template slot="title">Workspace</template>\n    <vue-menu-item index="2-1">Item one</vue-menu-item>\n    <vue-menu-item index="2-2">Item two</vue-menu-item>\n    <vue-menu-item index="2-3">Item three</vue-menu-item>\n  </vue-submenu>\n  <vue-menu-item index="3">Orders</vue-menu-item>\n</vue-menu>\n\n<script>\n  new Vue({\n    data: function() {\n      return {\n        activeIndex1: "1",\n        activeIndex2: "3"\n      }\n    },\n    methods: {\n      handleSelect: function(index, indexPath) {\n        this.$notify({title: \'Selected Index: \' + index});\n'+"        this.$notify({title: 'Selected Path Index: ' + indexPath.map(function(index) {return index}).join(', ')});\n      }\n    }\n  }).$mount();\n<\/script>"},{id:"navMenu2",label:"navMenuDemo.samples2.label",description:"navMenuDemo.samples2.description",template:'<div class="source"><vue-row class="tac"><vue-col :span="8"><h4>With icons</h4><vue-menu default-active="2" class="vue-menu-vertical-demo" @open="handleOpen" @close="handleClose"><vue-submenu index="1"><template slot="title"><i class="vue-icon-message"></i>Navigator one</template><vue-menu-item-group><template slot="title">Groups one</template><vue-menu-item index="1-1">Item one</vue-menu-item><vue-menu-item index="1-2">Item two</vue-menu-item></vue-menu-item-group><vue-menu-item-group title="Groups2"><vue-menu-item index="1-3">Item three</vue-menu-item></vue-menu-item-group><vue-submenu index="1-4"><template slot="title">Item four</template><vue-menu-item index="1-4-1">Item one</vue-menu-item></vue-submenu></vue-submenu><vue-menu-item index="2"><i class="vue-icon-menu"></i>Navigator two</vue-menu-item><vue-menu-item index="3"><i class="vue-icon-setting"></i>Navigator three</vue-menu-item></vue-menu></vue-col><vue-col :span="8"><h4>Without icons</h4><vue-menu default-active="2" class="vue-menu-vertical-demo" @open="handleOpen" @close="handleClose" theme="dark"><vue-submenu index="1"><template slot="title">Navigator one</template><vue-menu-item-group title="Groups one"><vue-menu-item index="1-1">Item one</vue-menu-item><vue-menu-item index="1-2">Item two</vue-menu-item></vue-menu-item-group><vue-menu-item-group title="Groups2"><vue-menu-item index="1-3">Item three</vue-menu-item></vue-menu-item-group><vue-submenu index="1-4"><template slot="title">Item four</template><vue-menu-item index="1-4-1">Item one</vue-menu-item></vue-submenu></vue-submenu><vue-menu-item index="2">Navigator two</vue-menu-item><vue-menu-item index="3">Navigator three</vue-menu-item></vue-menu></vue-col><vue-col :span="8"><h4>Groups</h4><vue-menu mode="vertical" default-active="1" class="vue-menu-vertical-demo"><vue-menu-item-group title="Groups one"><vue-menu-item index="1"><i class="vue-icon-message"></i>Navigator one</vue-menu-item><vue-menu-item index="2"><i class="vue-icon-message"></i>Navigator two</vue-menu-item></vue-menu-item-group><vue-menu-item-group title="Groups two"><vue-menu-item index="3"><i class="vue-icon-message"></i>Navigator three</vue-menu-item><vue-menu-item index="4"><i class="vue-icon-message"></i>Navigator four</vue-menu-item></vue-menu-item-group></vue-menu></vue-col></vue-row></div>',parameter:{methods:{handleOpen:function(e,n){this.$notify({title:"Opened Index: "+e}),this.$notify({title:"Opened Path Index: "+n.map(function(e){return e}).join(", ")})},handleClose:function(e,n){this.$notify({title:"Closed Index: "+e}),this.$notify({title:"Closed Path Index: "+n.map(function(e){return e}).join(", ")})}}},code:'<vue-row class="tac">\n  <vue-col :span="8">\n    <h4>With icons</h4>\n    <vue-menu default-active="2" class="vue-menu-vertical-demo" @open="handleOpen" @close="handleClose">\n      <vue-submenu index="1">\n        <template slot="title"><i class="vue-icon-message"></i>Navigator one</template>\n        <vue-menu-item-group>\n          <template slot="title">Groups one</template>\n          <vue-menu-item index="1-1">Item one</vue-menu-item>\n          <vue-menu-item index="1-2">Item two</vue-menu-item>\n        </vue-menu-item-group>\n        <vue-menu-item-group title="Groups2">\n          <vue-menu-item index="1-3">Item three</vue-menu-item>\n        </vue-menu-item-group>\n        <vue-submenu index="1-4">\n          <template slot="title">Item four</template>\n          <vue-menu-item index="1-4-1">Item one</vue-menu-item>\n        </vue-submenu>\n      </vue-submenu>\n      <vue-menu-item index="2"><i class="vue-icon-menu"></i>Navigator two</vue-menu-item>\n      <vue-menu-item index="3"><i class="vue-icon-setting"></i>Navigator three</vue-menu-item>\n    </vue-menu>\n  </vue-col>\n  <vue-col :span="8">\n    <h4>Without icons</h4>\n    <vue-menu default-active="2" class="vue-menu-vertical-demo" @open="handleOpen" @close="handleClose" theme="dark">\n      <vue-submenu index="1">\n        <template slot="title">Navigator one</template>\n        <vue-menu-item-group title="Groups one">\n          <vue-menu-item index="1-1">Item one</vue-menu-item>\n          <vue-menu-item index="1-2">Item two</vue-menu-item>\n        </vue-menu-item-group>\n        <vue-menu-item-group title="Groups2">\n          <vue-menu-item index="1-3">Item three</vue-menu-item>\n        </vue-menu-item-group>\n        <vue-submenu index="1-4">\n          <template slot="title">Item four</template>\n          <vue-menu-item index="1-4-1">Item one</vue-menu-item>\n        </vue-submenu>\n      </vue-submenu>\n      <vue-menu-item index="2">Navigator two</vue-menu-item>\n      <vue-menu-item index="3">Navigator three</vue-menu-item>\n    </vue-menu>\n  </vue-col>\n  <vue-col :span="8">\n    <h4>Groups</h4>\n    <vue-menu mode="vertical" default-active="1" class="vue-menu-vertical-demo">\n      <vue-menu-item-group title="Groups one">\n        <vue-menu-item index="1"><i class="vue-icon-message"></i>Navigator one</vue-menu-item>\n        <vue-menu-item index="2"><i class="vue-icon-message"></i>Navigator two</vue-menu-item>\n      </vue-menu-item-group>\n      <vue-menu-item-group title="Groups two">\n        <vue-menu-item index="3"><i class="vue-icon-message"></i>Navigator three</vue-menu-item>\n        <vue-menu-item index="4"><i class="vue-icon-message"></i>Navigator four</vue-menu-item>\n      </vue-menu-item-group>\n    </vue-menu>\n  </vue-col>\n</vue-row>\n\n<script>\n  new Vue({\n    methods: {\n      handleOpen: function(index, indexPath) {\n        this.$notify({title: \'Opened Index: \' + index});\n'+"        this.$notify({title: 'Opened Path Index: ' + indexPath.map(function(index) {return index}).join(', ')});\n      },\n      handleClose: function(index, indexPath) {\n        this.$notify({title: 'Closed Index: ' + index});\n        this.$notify({title: 'Closed Path Index: ' + indexPath.map(function(index) {return index}).join(', ')});\n      }\n    }\n  }).$mount();\n<\/script>"},{id:"navMenu8",label:"navMenuDemo.samples8.label",description:"navMenuDemo.samples8.description",template:'<div class="source"><vue-radio-group v-model="isCollapse" style="margin-bottom: 20px;"><vue-radio-button :label="false">expand</vue-radio-button><vue-radio-button :label="true">collapse</vue-radio-button></vue-radio-group><vue-row>  <vue-col :span="8">    <vue-menu theme="dark" class="vue-menu-vertical-demo" :collapse="isCollapse" >    <vue-submenu index="1">      <template slot="title">        <i class="vue-icon-user"></i>        <span slot="title">Navigator One</span>      </template>      <vue-menu-item-group>        <span slot="title">Group One</span>        <vue-menu-item index="1-1">item one</vue-menu-item>        <vue-menu-item index="1-2">item two</vue-menu-item>      </vue-menu-item-group>      <vue-menu-item-group title="Group Two">        <vue-menu-item index="1-3">item three</vue-menu-item>      </vue-menu-item-group>      <vue-submenu index="1-4">        <span slot="title">item four</span>        <vue-menu-item index="1-4-1">item one</vue-menu-item>        <vue-menu-item index="1-4-2">item two</vue-menu-item>        <vue-menu-item index="1-4-3">item three</vue-menu-item>      </vue-submenu>    </vue-submenu>    <vue-menu-item index="2">      <i class="vue-icon-menu"></i>      <span slot="title">Navigator Two</span>    </vue-menu-item>    <vue-menu-item index="3" disabled>      <i class="vue-icon-document"></i>      <span slot="title">Navigator Three</span>    </vue-menu-item>    <vue-menu-item index="4">      <i class="vue-icon-setting"></i>      <span slot="title">Navigator Four</span>    </vue-menu-item>  </vue-menu>  </vue-col>  <vue-col :span="16"></vue-col></vue-row></div>',parameter:{data:function(){return{isCollapse:!0}},methods:{}},code:'<vue-radio-group v-model="isCollapse" style="margin-bottom: 20px;">\n  <vue-radio-button :label="false">expand</vue-radio-button>\n  <vue-radio-button :label="true">collapse</vue-radio-button>\n</vue-radio-group>\n<vue-row>\n  <vue-col :span="8">\n    <vue-menu theme="dark" class="vue-menu-vertical-demo" :collapse="isCollapse" >\n    <vue-submenu index="1">\n      <template slot="title">\n        <i class="vue-icon-user"></i>\n        <span slot="title">Navigator One</span>\n      </template>\n      <vue-menu-item-group>\n        <span slot="title">Group One</span>\n        <vue-menu-item index="1-1">item one</vue-menu-item>\n        <vue-menu-item index="1-2">item two</vue-menu-item>\n      </vue-menu-item-group>\n      <vue-menu-item-group title="Group Two">\n        <vue-menu-item index="1-3">item three</vue-menu-item>\n      </vue-menu-item-group>\n      <vue-submenu index="1-4">\n        <span slot="title">item four</span>\n        <vue-menu-item index="1-4-1">item one</vue-menu-item>\n        <vue-menu-item index="1-4-2">item two</vue-menu-item>\n        <vue-menu-item index="1-4-3">item three</vue-menu-item>\n      </vue-submenu>\n    </vue-submenu>\n    <vue-menu-item index="2">\n      <i class="vue-icon-menu"></i>\n      <span slot="title">Navigator Two</span>\n    </vue-menu-item>\n    <vue-menu-item index="3" disabled>\n      <i class="vue-icon-document"></i>\n      <span slot="title">Navigator Three</span>\n    </vue-menu-item>\n    <vue-menu-item index="4">\n      <i class="vue-icon-setting"></i>\n      <span slot="title">Navigator Four</span>\n    </vue-menu-item>\n  </vue-menu>\n  </vue-col>\n  <vue-col :span="16"></vue-col>\n</vue-row>\n\n<script>\n  new Vue({\n    data: function() {\n      return {\n        isCollapse: true\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"navMenu3",label:"Menu Attributes",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"mode",column2:"navMenuDemo.samples3.row1column2",column3:"String",column4:"horizontal, vertical",column5:"vertical"},{column1:"theme",column2:"navMenuDemo.samples3.row2column2",column3:"String",column4:"light, dark",column5:"light"},{column1:"default-active",column2:"navMenuDemo.samples3.row3column2",column3:"String",column4:"",column5:""},{column1:"default-openeds",column2:"navMenuDemo.samples3.row4column2",column3:"Array",column4:"",column5:""},{column1:"unique-opened",column2:"navMenuDemo.samples3.row5column2",column3:"Boolean",column4:"",column5:"false"},{column1:"menu-trigger",column2:"navMenuDemo.samples3.row6column2",column3:"String",column4:"hover, click",column5:"hover"},{column1:"router",column2:"navMenuDemo.samples3.row7column2",column3:"Boolean",column4:"",column5:"false"}]}}},notshowmeta:!0},{id:"navMenu4",label:"Menu Events",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"select",column2:"navMenuDemo.samples4.row1column2",column3:"navMenuDemo.samples4.row1column3"},{column1:"open",column2:"navMenuDemo.samples4.row2column2",column3:"navMenuDemo.samples4.row2column3"},{column1:"close",column2:"navMenuDemo.samples4.row3column2",column3:"navMenuDemo.samples4.row3column3"}]}}},notshowmeta:!0},{id:"navMenu5",label:"SubMenu Attributes",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"index",column2:"navMenuDemo.samples5.row1column2",column3:"String",column4:"",column5:""}]}}},notshowmeta:!0},{id:"navMenu6",label:"Menu Item Attributes",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"index",column2:"navMenuDemo.samples6.row1column2",column3:"String",column4:"",column5:""},{column1:"route",column2:"navMenuDemo.samples6.row2column2",column3:"Object",column4:"",column5:""}]}}},notshowmeta:!0},{id:"navMenu7",label:"Menu Group Attributes",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"title",column2:"navMenuDemo.samples7.row1column2",column3:"String",column4:"",column5:""}]}}},notshowmeta:!0}]}},"./demo/NoteDemo.js":
/*!**************************!*\
  !*** ./demo/NoteDemo.js ***!
  \**************************/
/*! no static exports found */function(e,n,t){"use strict";e.exports={path:"/note",name:"note",head:{label:"noteDemo.label",description:"noteDemo.description"},samples:[{id:"note1",label:"noteDemo.samples1.label",description:"noteDemo.samples1.description",template:'<div class="source"><vue-note title="Success Note" type="success">More text description...</vue-note><vue-note title="Info Note">More text description...</vue-note><vue-note title="Warning Note" type="warning">More text description...</vue-note><vue-note title="Error Note" type="error">More text description...</vue-note><vue-note plain title="Success Note" type="success">More text description...</vue-note><vue-note plain title="Info Note">More text description...</vue-note><vue-note plain title="Warning Note" type="warning">More text description...</vue-note><vue-note plain title="Error Note" type="error">More text description...</vue-note></div>',code:'<vue-note title="Success Note" type="success">More text description...</vue-note>\n<vue-note title="Info Note">More text description...</vue-note>\n<vue-note title="Warning Note" type="warning">More text description...</vue-note>\n<vue-note title="Error Note" type="error">More text description...</vue-note>\n<vue-note plain title="Success Note" type="success">More text description...</vue-note>\n<vue-note plain title="Info Note">More text description...</vue-note>\n<vue-note plain title="Warning Note" type="warning">More text description...</vue-note>\n<vue-note plain title="Error Note" type="error">More text description...</vue-note>'},{id:"note2",label:"Attributes",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"title",column2:"noteDemo.samples2.row1column2",column3:"String",column4:"",column5:""},{column1:"type",column2:"noteDemo.samples2.row2column2",column3:"String",column4:"success, warning, info, error",column5:"info"},{column1:"plain",column2:"noteDemo.samples2.row3column2",column3:"Boolean",column4:"",column5:"false"}]}}},notshowmeta:!0}]}},"./demo/NotificationDemo.js":
/*!**********************************!*\
  !*** ./demo/NotificationDemo.js ***!
  \**********************************/
/*! no static exports found */function(e,n,t){"use strict";e.exports={path:"/notification",name:"notification",head:{label:"notificationDemo.label",description:"notificationDemo.description"},samples:[{id:"notification1",label:"notificationDemo.samples1.label",description:"notificationDemo.samples1.description",template:'<div class="source"><vue-row class="margin-bottom20"><vue-button plain @click="open1">Auto off</vue-button><vue-button plain @click="open2">Can not Auto off</vue-button></vue-row><vue-row><vue-button style="width:100px" plain @click="open3">success</vue-button><vue-button style="width:100px" plain @click="open4">warning</vue-button><vue-button style="width:100px" plain @click="open5">info</vue-button><vue-button style="width:100px" plain @click="open6">error</vue-button></vue-row></div>',parameter:{methods:{open1:function(){var e=this.$createElement;this.$notify({title:"Close",message:e("i",{style:"color: teal"},"I can auto off")})},open2:function(){var e=this;e.$notify({title:"Can not close",message:"I Can not Auto off",duration:0,onClose:function(){e.$notify({message:"Closing",position:"center-center",iconClass:"vue-icon-loading",customClass:"notification-demo"})}})},open3:function(){this.$notify({title:"Success",message:"I'm success notify",type:"success"})},open4:function(){this.$notify({title:"Warning",message:"I'm warning notify",type:"warning"})},open5:function(){this.$notify.info({title:"Info",message:"I'm info notify"})},open6:function(){this.$notify.error({title:"Error",message:"I'm error notify"})}}},code:'<vue-button plain @click="open1">Auto off</vue-button>\n<vue-button plain @click="open2">Can not Auto off</vue-button>\n<vue-button style="width:100px" plain @click="open3">success</vue-button>\n<vue-button style="width:100px" plain @click="open4">warning</vue-button>\n<vue-button style="width:100px" plain @click="open5">info</vue-button>\n<vue-button style="width:100px" plain @click="open6">error</vue-button>\n\n<style>\n  .notification-demo {\n    color: #20a0ff;\n    background-color:#f0f0f0;\n  }\n</style>\n\n<script>\n  new Vue({\n    methods: {\n      open1: function () {\n        var createElement = this.$createElement;\n        this.$notify({\n          title: "Close",\n          message: createElement("i", {\n            style: "color: teal"\n          }, "I can auto off")\n        });\n      },\n      open2: function () {\n        var self = this;\n        self.$notify({\n          title: "Can not close",\n          message: "I Can not Auto off",\n          duration: 0,\n          onClose: function () {\n            self.$notify({\n              message: "Closing",\n              position: "center-center",\n              iconClass: "vue-icon-loading",\n              customClass:"notification-demo"\n            });\n          }\n        });\n      },\n      open3: function () {\n        this.$notify({\n          title: "Success",\n          message: "I\'m success notify",\n          type: "success"\n        });\n      },\n      open4: function () {\n        this.$notify({\n          title: "Warning",\n          message: "I\'m warning notify",\n          type: "warning"\n        });\n      },\n      open5: function () {\n        this.$notify.info({\n          title: "Info",\n          message: "I\'m info notify"\n        });\n      },\n      open6: function () {\n        this.$notify.error({\n          title: "Error",\n          message: "I\'m error notify"\n        });\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"notification2",label:"notificationDemo.samples2.label",description:"notificationDemo.samples2.description",template:'<div class="source"><vue-row class="margin-bottom20"><vue-col :span="8"><vue-button style="width:120px" plain @click="open1">top left</vue-button></vue-col><vue-col :span="8"><vue-button style="width:120px" plain @click="open2">top</vue-button></vue-col><vue-col :span="8"><vue-button style="width:120px" plain @click="open3">top right</vue-button></vue-col></vue-row><vue-row class="margin-bottom20"><vue-col :span="8"><vue-button style="width:120px" plain @click="open4">left</vue-button></vue-col><vue-col :span="8"><vue-button style="width:120px" plain @click="open5">center</vue-button></vue-col><vue-col :span="8"><vue-button style="width:120px" plain @click="open6">right</vue-button></vue-col></vue-row><vue-row><vue-col :span="8"><vue-button style="width:120px" plain @click="open7">bottom left</vue-button></vue-col><vue-col :span="8"><vue-button style="width:120px" plain @click="open8">bottom</vue-button></vue-col><vue-col :span="8"><vue-button style="width:120px" plain @click="open9">bottom right</vue-button></vue-col></vue-row></div>',parameter:{methods:{open1:function(){this.$notify.info({message:"I'm on the top left",position:"top-left"})},open2:function(){this.$notify.info({message:"I'm on the top",position:"top-center"})},open3:function(){this.$notify.info({message:"I'm on the top right"})},open4:function(){this.$notify.info({message:"I'm on the left",position:"center-left"})},open5:function(){this.$notify.info({message:"I'm on the center",position:"center-center"})},open6:function(){this.$notify.info({message:"I'm on the right",position:"center-right"})},open7:function(){this.$notify.info({message:"I'm on the bottom left",position:"bottom-left"})},open8:function(){this.$notify.info({message:"I'm on the bottom",position:"bottom-center"})},open9:function(){this.$notify.info({message:"I'm on the bottom right",position:"bottom-right"})}}},code:'<vue-button style="width:120px" plain @click="open1">top left</vue-button>\n<vue-button style="width:120px" plain @click="open2">top</vue-button>\n<vue-button style="width:120px" plain @click="open3">top right</vue-button>\n<vue-button style="width:120px" plain @click="open4">left</vue-button>\n<vue-button style="width:120px" plain @click="open5">center</vue-button>\n<vue-button style="width:120px" plain @click="open6">right</vue-button>\n<vue-button style="width:120px" plain @click="open7">bottom left</vue-button>\n<vue-button style="width:120px" plain @click="open8">bottom</vue-button>\n<vue-button style="width:120px" plain @click="open9">bottom right</vue-button>\n\n<script>\n  new Vue({\n    methods: {\n      open1: function() {\n        this.$notify.info({\n          message: "I\'m on the top left",\n          position: "top-left"\n        });\n      },\n      open2: function() {\n        this.$notify.info({\n          message: "I\'m on the top",\n          position: "top-center"\n        });\n      },\n      open3: function() {\n        this.$notify.info({\n          message: "I\'m on the top right"\n        });\n      },\n      open4: function() {\n        this.$notify.info({\n          message: "I\'m on the left",\n          position: "center-left"\n        });\n      },\n      open5: function() {\n        this.$notify.info({\n          message: "I\'m on the center",\n          position: "center-center"\n        });\n      },\n      open6: function() {\n        this.$notify.info({\n          message: "I\'m on the right",\n          position: "center-right"\n        });\n      },\n      open7: function() {\n        this.$notify.info({\n          message: "I\'m on the bottom left",\n          position: "bottom-left"\n        });\n      },\n      open8: function() {\n        this.$notify.info({\n          message: "I\'m on the bottom",\n          position: "bottom-center"\n        });\n      },\n      open9: function() {\n        this.$notify.info({\n          message: "I\'m on the bottom right",\n          position: "bottom-right"\n        });\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"notification3",label:"Options",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"title",column2:"notificationDemo.samples3.row1column2",column3:"String",column4:"",column5:""},{column1:"message",column2:"notificationDemo.samples3.row2column2",column3:"String / VNode",column4:"",column5:""},{column1:"type",column2:"notificationDemo.samples3.row3column2",column3:"String",column4:"success, info, warning, error",column5:""},{column1:"iconClass",column2:"notificationDemo.samples3.row4column2",column3:"String",column4:"",column5:""},{column1:"customClass",column2:"notificationDemo.samples3.row5column2",column3:"String",column4:"",column5:""},{column1:"duration",column2:"notificationDemo.samples3.row6column2",column3:"Number",column4:"",column5:"3000"},{column1:"showClose",column2:"notificationDemo.samples3.row9column2",column3:"Boolean",column4:"",column5:"false"},{column1:"onClose",column2:"notificationDemo.samples3.row7column2",column3:"Function",column4:"",column5:""},{column1:"position",column2:"notificationDemo.samples3.row8column2",column3:"String",column4:"top-left, top-center, top-right, center-left, center-center, center-right, bottom-left, bottom-center, bottom-right",column5:"top-right"}]}}},notshowmeta:!0}]}},"./demo/PaginationDemo.js":
/*!********************************!*\
  !*** ./demo/PaginationDemo.js ***!
  \********************************/
/*! no static exports found */function(e,n,t){"use strict";e.exports={path:"/pagination",name:"pagination",head:{label:"paginationDemo.label",description:"paginationDemo.description"},samples:[{id:"pagination1",label:"paginationDemo.samples1.label",description:"paginationDemo.samples1.description",template:'<div class="source"><vue-row class="margin-bottom20" type="flex" justify="center"><vue-col :span="6"><span class="demonstration">{{$t(\'paginationDemo.samples1.label1\')}}</span></vue-col><vue-col :span="16"><vue-pagination layout="prev, pager, next" :page-size="10" :total="50"></vue-pagination></vue-col></vue-row><vue-row class="margin-bottom20" type="flex" justify="center"><vue-col :span="6"><span class="demonstration">{{$t(\'paginationDemo.samples1.label2\')}}</span></vue-col><vue-col :span="16"><vue-pagination layout="prev, pager, next" :page-size="1" :total="50"></vue-pagination></vue-col></vue-row><vue-row type="flex" justify="center"><vue-col :span="6"><span class="demonstration">{{$t(\'paginationDemo.samples1.label3\')}}</span></vue-col><vue-col :span="16"><vue-pagination layout="prev, pager, next" :page-size="10" :total="50" small></vue-pagination></vue-col></vue-row></div>',code:'<span class="demonstration">{{$t(\'paginationDemo.samples1.label1\')}}</span>\n<vue-pagination layout="prev, pager, next" :page-size="10" :total="50">\n</vue-pagination>\n<span class="demonstration">{{$t(\'paginationDemo.samples1.label2\')}}</span>\n<vue-pagination layout="prev, pager, next" :page-size="1" :total="50">\n</vue-pagination>\n<span class="demonstration">{{$t(\'paginationDemo.samples1.label3\')}}</span>\n<vue-pagination layout="prev, pager, next" :page-size="10" :total="50" small>\n</vue-pagination>'},{id:"pagination2",label:"paginationDemo.samples2.label",description:"paginationDemo.samples2.description",template:'<div class="source"><vue-row class="margin-bottom20" type="flex" justify="center"><vue-col :span="6"><span class="demonstration">{{$t(\'paginationDemo.samples2.label1\')}}</span></vue-col><vue-col :span="16"><vue-pagination @size-change="handleSizeChange" @current-change="handleCurrentChange" :current-page.sync="currentPage1" :page-size="100" layout="total, prev, pager, next" :total="1000"></vue-pagination></vue-col></vue-row><vue-row class="margin-bottom20" type="flex" justify="center"><vue-col :span="6"><span class="demonstration">{{$t(\'paginationDemo.samples2.label2\')}}</span></vue-col><vue-col :span="16"><vue-pagination @size-change="handleSizeChange" @current-change="handleCurrentChange" :current-page.sync="currentPage2" :page-sizes="[100, 200, 300, 400]" :page-size="100" layout="sizes, prev, pager, next" :total="1000"></vue-pagination></vue-col></vue-row><vue-row class="margin-bottom20" type="flex" justify="center"><vue-col :span="6"><span class="demonstration">{{$t(\'paginationDemo.samples2.label3\')}}</span></vue-col><vue-col :span="16"><vue-pagination @size-change="handleSizeChange" @current-change="handleCurrentChange" :current-page.sync="currentPage3" :page-size="100" layout="prev, pager, next, jumper" :total="1000"></vue-pagination></vue-col></vue-row><vue-row type="flex" justify="center"><vue-col :span="6"><span class="demonstration">{{$t(\'paginationDemo.samples2.label4\')}}</span></vue-col><vue-col :span="16"><vue-pagination @size-change="handleSizeChange" @current-change="handleCurrentChange" :current-page="currentPage4" :page-sizes="[100, 200, 300, 400]" :page-size="100" layout="total, sizes, prev, pager, next, jumper" :total="400"></vue-pagination></vue-col></vue-row></div>',parameter:{data:function(){return{currentPage1:5,currentPage2:5,currentPage3:5,currentPage4:4}},methods:{handleSizeChange:function(e){this.$notify({title:e+"items per page"})},handleCurrentChange:function(e){this.$notify({title:"current page: "+e})}}},code:'<span class="demonstration">{{$t(\'paginationDemo.samples2.label1\')}}</span>\n<vue-pagination @size-change="handleSizeChange" @current-change="handleCurrentChange" :current-page.sync="currentPage1" :page-size="100" layout="total, prev, pager, next" :total="1000">\n</vue-pagination>\n<span class="demonstration">{{$t(\'paginationDemo.samples2.label2\')}}</span>\n<vue-pagination @size-change="handleSizeChange" @current-change="handleCurrentChange" :current-page.sync="currentPage2" :page-sizes="[100, 200, 300, 400]" :page-size="100" layout="sizes, prev, pager, next" :total="1000">\n</vue-pagination>\n<span class="demonstration">{{$t(\'paginationDemo.samples2.label3\')}}</span>\n<vue-pagination @size-change="handleSizeChange" @current-change="handleCurrentChange" :current-page.sync="currentPage3" :page-size="100" layout="prev, pager, next, jumper" :total="1000">\n</vue-pagination>\n<span class="demonstration">{{$t(\'paginationDemo.samples2.label4\')}}</span>\n<vue-pagination @size-change="handleSizeChange" @current-change="handleCurrentChange" :current-page="currentPage4" :page-sizes="[100, 200, 300, 400]" :page-size="100" layout="total, sizes, prev, pager, next, jumper" :total="400">\n</vue-pagination>\n\n<script>\n  new Vue({\n    data: function() {\n      return {\n        currentPage1: 5,\n        currentPage2: 5,\n        currentPage3: 5,\n        currentPage4: 4\n      }\n    },\n    methods: {\n      handleSizeChange: function(val) {\n        this.$notify({title: val + "items per page"});\n        },\n        handleCurrentChange: function(val) {\n        this.$notify({title: "current page: " + val});\n        }\n    }\n  }).$mount();\n<\/script>'},{id:"pagination3",label:"Attributes",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"small",column2:"paginationDemo.samples3.row1column2",column3:"Boolean",column4:"",column5:"false"},{column1:"page-size",column2:"paginationDemo.samples3.row2column2",column3:"Number",column4:"",column5:"10"},{column1:"total",column2:"paginationDemo.samples3.row3column2",column3:"Number",column4:"",column5:""},{column1:"page-count",column2:"paginationDemo.samples3.row4column2",column3:"Number",column4:"",column5:""},{column1:"current-page",column2:"paginationDemo.samples3.row5column2",column3:"Number",column4:"",column5:"1"},{column1:"layout",column2:"paginationDemo.samples3.row6column2",column3:"String",column4:"sizes, prev, pager, next, jumper, ->, total, slot",column5:"prev, pager, next, jumper, ->, total"},{column1:"page-sizes",column2:"paginationDemo.samples3.row7column2",column3:"[Number]",column4:"",column5:"[10, 20, 30, 40, 50, 100]"}]}}},notshowmeta:!0},{id:"pagination4",label:"Events",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"size-change",column2:"paginationDemo.samples4.row1column2",column3:"paginationDemo.samples4.row1column3"},{column1:"current-change",column2:"paginationDemo.samples4.row2column2",column3:"paginationDemo.samples4.row2column3"}]}}},notshowmeta:!0}]}},"./demo/PinDemo.js":
/*!*************************!*\
  !*** ./demo/PinDemo.js ***!
  \*************************/
/*! no static exports found */function(e,n,t){"use strict";e.exports={path:"/pin",name:"pin",head:{label:"pinDemo.label",description:"pinDemo.description"},samples:[{id:"pin1",label:"pinDemo.samples1.label",description:"pinDemo.samples1.description",template:'<div class="source"><vue-pin @change="change"><vue-button type="primary">Fixed at the top</vue-button></vue-pin></div>',parameter:{methods:{change:function(e){this.$notify({title:"Status: "+e})}}},code:'<vue-pin @change="change">\n  <vue-button type="primary">Fixed at the top</vue-button>\n</vue-pin>\n\n<script>\n  new Vue({\n    methods: {\n      change: function(status) {\n        this.$notify({title:"Status: " + status});\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"pin2",label:"pinDemo.samples2.label",description:"pinDemo.samples2.description",template:'<div class="source"><vue-pin :offset-top="200"><vue-button type="primary">Fixed at the top offset 200px</vue-button></vue-pin></div>',code:'<vue-pin :offset-top="50">\n  <vue-button type="primary">Fixed at the top offset 200px</vue-button>\n</vue-pin>'},{id:"pin3",label:"pinDemo.samples3.label",description:"pinDemo.samples3.description",template:'<div class="source"><vue-pin :offset-bottom="20"><vue-button type="primary">Fixed at the bottom offset 20px</vue-button></vue-pin></div>',code:'<vue-pin :offset-bottom="20">\n  <vue-button type="primary">Fixed at the bottom offset 20px</vue-button>\n</vue-pin>'},{id:"pin4",label:"pinDemo.samples4.label",description:"pinDemo.samples4.description",template:'<div class="source"><vue-row type="flex" justify="center"><vue-col :span="6"><vue-pin :offset-bottom="0" fixed><vue-button type="primary">Always fixed at the bottom</vue-button></vue-pin></vue-col></vue-row></div>',code:'<vue-pin :offset-bottom="0" fixed>\n  <vue-button type="primary">Always fixed at the bottom</vue-button>\n</vue-pin>'},{id:"pin5",label:"Attributes",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"offset-top",column2:"pinDemo.samples5.row1column2",column3:"Number",column4:"",column5:"0"},{column1:"offset-bottom",column2:"pinDemo.samples5.row2column2",column3:"Number",column4:"",column5:""},{column1:"fixed",column2:"pinDemo.samples5.row3column2",column3:"Boolean",column4:"",column5:"false"}]}}},notshowmeta:!0},{id:"pin6",label:"Events",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"change",column2:"pinDemo.samples6.row1column2",column3:"pinDemo.samples6.row1column3"}]}}},notshowmeta:!0}]}},"./demo/PopoverDemo.js":
/*!*****************************!*\
  !*** ./demo/PopoverDemo.js ***!
  \*****************************/
/*! no static exports found */function(e,n,t){"use strict";e.exports={path:"/popover",name:"popover",head:{label:"popoverDemo.label",description:"popoverDemo.description"},samples:[{id:"popover1",label:"popoverDemo.samples1.label",description:"popoverDemo.samples1.description",template:'<div class="source"><vue-row><vue-col :span="6"><vue-popover ref="popover1" placement="top-start" title="Title" width="200" trigger="hover" content="This is content。"></vue-popover><vue-popover ref="popover2" placement="bottom" title="Title" trigger="click" content="This is content。"></vue-popover><vue-button v-popover:popover1>hover to activate</vue-button></vue-col><vue-col :span="6"><vue-button v-popover:popover2>click to activate</vue-button></vue-col><vue-col :span="6"><vue-popover placement="right" title="Title" width="200" trigger="focus" content="This is content。"><vue-input slot="reference" placeholder="focus to activate"></vue-input></vue-popover></vue-col></vue-row></div>',code:'<vue-popover ref="popover1" placement="top-start" title="Title" width="200" trigger="hover" content="This is content。"></vue-popover>\n<vue-popover ref="popover2" placement="bottom" title="Title" trigger="click" content="This is content。"></vue-popover>\n<vue-button v-popover:popover1>hover to activate</vue-button>\n<vue-button v-popover:popover2>click to activate</vue-button>\n<vue-popover placement="right" title="Title" width="200" trigger="focus" content="This is content。">\n  <vue-input slot="reference" placeholder="focus to activate"></vue-input>\n</vue-popover>'},{id:"popover2",label:"popoverDemo.samples2.label",description:"popoverDemo.samples2.description",template:'<div class="source"><vue-popover ref="popover" placement="top-start" trigger="click" width="600"><vue-xtable :data="gridData"><vue-xtable-column width="150" field="date" title="date"></vue-xtable-column><vue-xtable-column width="100" field="name" title="name"></vue-xtable-column><vue-xtable-column min-width="300" field="address" title="address"></vue-xtable-column></vue-xtable></vue-popover><vue-button v-popover:popover>Click to activate</vue-button></div>',parameter:{data:function(){return{gridData:[{date:"2016-05-02",name:"Jack",address:"New York City"},{date:"2016-05-04",name:"Jack",address:"New York City"},{date:"2016-05-01",name:"Jack",address:"New York City"},{date:"2016-05-03",name:"Jack",address:"New York City"}]}}},code:'<vue-popover ref="popover" placement="top-start" trigger="click" width="600">\n  <vue-xtable :data="gridData">\n    <vue-xtable-column width="150" field="date" title="date"></vue-xtable-column>\n    <vue-xtable-column width="100" field="name" title="name"></vue-xtable-column>\n    <vue-xtable-column width="350" field="address" title="address"></vue-xtable-column>\n  </vue-xtable>\n</vue-popover>\n<vue-button v-popover:popover>Click to activate</vue-button>\n\n<script>\n  new Vue({\n    data: function() {\n      return {\n        gridData: [{\n          date: "2016-05-02",\n          name: "Jack",\n          address: "New York City"\n        }, {\n          date: "2016-05-04",\n          name: "Jack",\n          address: "New York City"\n        }, {\n          date: "2016-05-01",\n          name: "Jack",\n          address: "New York City"\n        }, {\n          date: "2016-05-03",\n          name: "Jack",\n          address: "New York City"\n        }]\n      };\n    }\n  }).$mount();\n<\/script>'},{id:"popover3",label:"popoverDemo.samples3.label",description:"popoverDemo.samples3.description",template:'<div class="source"><vue-popover ref="popover" placement="top-start" v-model="visible" width="230"><p>Are you sure to delete this?</p><div style="text-align: right; margin: 0"><vue-button size="mini" type="text" @click="cancleHandle">cancel</vue-button><vue-button type="primary" size="mini" @click="confirmHandle">confirm</vue-button></div></vue-popover><vue-button v-popover:popover>Delete</vue-button></div>',parameter:{data:function(){return{visible:!1}},methods:{cancleHandle:function(){this.$notify({title:"Cancel"}),this.visible=!1},confirmHandle:function(){this.$notify({title:"Confirm"}),this.visible=!1}}},code:'<vue-popover ref="popover" placement="top-start" v-model="visible" width="230">\n  <p>Are you sure to delete this?</p>\n  <div style="text-align: right; margin: 0">\n    <vue-button size="mini" type="text" @click="cancleHandle">cancel</vue-button>\n    <vue-button type="primary" size="mini" @click="confirmHandle">confirm</vue-button>\n  </div>\n</vue-popover>\n<vue-button v-popover:popover>Delete</vue-button>\n\n<script>\n  new Vue({\n     data: function() {\n       return {\n         visible: false\n       }\n     },\n     methods: {\n       cancleHandle: function() {\n         this.$notify({\n           title: "Cancel",\n         });\n         this.visible = false;\n       },\n       confirmHandle: function() {\n         this.$notify({\n           title: "Confirm",\n         });\n         this.visible = false;\n       }\n     }\n  }).$mount();\n<\/script>'},{id:"popover4",label:"Attributes",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"trigger",column2:"popoverDemo.samples4.row1column2",column3:"String",column4:"click, focus, hover, manual",column5:"click"},{column1:"title",column2:"popoverDemo.samples4.row2column2",column3:"String",column4:"",column5:""},{column1:"content",column2:"popoverDemo.samples4.row3column2",column3:"String",column4:"",column5:""},{column1:"width",column2:"popoverDemo.samples4.row4column2",column3:"Number",column4:"",column5:""},{column1:"placement",column2:"popoverDemo.samples4.row5column2",column3:"String",column4:"top, top-start, top-end, bottom, bottom-start, bottom-end, left, left-start, left-end, right, right-start, right-end",column5:"bottom"},{column1:"disabled",column2:"popoverDemo.samples4.row6column2",column3:"Boolean",column4:"",column5:"false"},{column1:"value(v-model)",column2:"popoverDemo.samples4.row7column2",column3:"Boolean",column4:"",column5:"false"},{column1:"popper-class",column2:"popoverDemo.samples4.row8column2",column3:"String",column4:"",column5:""},{column1:"visible-arrow",column2:"popoverDemo.samples4.row10column2",column3:"Boolean",column4:"",column5:"true"}]}}},notshowmeta:!0},{id:"popover5",label:"Slots",template:'<slot-table :data="tableData"></slot-table>',parameter:{data:function(){return{tableData:[{column1:"",column2:"popoverDemo.samples5.row1column2"},{column1:"reference",column2:"popoverDemo.samples5.row2column2"}]}}},notshowmeta:!0},{id:"popover6",label:"Events",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"show",column2:"popoverDemo.samples6.row1column2",column3:""},{column1:"hide",column2:"popoverDemo.samples6.row2column2",column3:""}]}}},notshowmeta:!0}]}},"./demo/ProgressDemo.js":
/*!******************************!*\
  !*** ./demo/ProgressDemo.js ***!
  \******************************/
/*! no static exports found */function(e,n,t){"use strict";e.exports={path:"/progress",name:"progress",head:{label:"progressDemo.label",description:"progressDemo.description"},samples:[{id:"progress1",label:"progressDemo.samples1.label",description:"progressDemo.samples1.description",template:'<div class="source"><vue-row class="margin-bottom20"><vue-progress :percentage="0"></vue-progress></vue-row><vue-row class="margin-bottom20"><vue-progress :percentage="50" status="exception"></vue-progress></vue-row><vue-row class="margin-bottom20"><vue-progress :text-inside="true" :stroke-width="18" :percentage="70"></vue-progress></vue-row><vue-row><vue-progress type="circle" :percentage="100" status="success"></vue-progress></vue-row></div>',code:'<vue-progress :percentage="0"></vue-progress>\n<vue-progress :percentage="50" status="exception"></vue-progress>\n<vue-progress :text-inside="true" :stroke-width="18" :percentage="70"></vue-progress>\n<vue-progress type="circle" :percentage="100" status="success"></vue-progress>\n'},{id:"progress2",label:"Attributes",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"percentage",column2:"progressDemo.samples2.row1column2",column3:"Number",column4:"0-100",column5:"0"},{column1:"type",column2:"progressDemo.samples2.row2column2",column3:"String",column4:"line, circle",column5:"line"},{column1:"stroke-width",column2:"progressDemo.samples2.row3column2",column3:"Number",column4:"",column5:"6"},{column1:"text-inside",column2:"progressDemo.samples2.row4column2",column3:"Boolean",column4:"",column5:"false"},{column1:"status",column2:"progressDemo.samples2.row5column2",column3:"String",column4:"success, exception",column5:""},{column1:"width",column2:"progressDemo.samples2.row6column2",column3:"Number",column4:"",column5:"126"},{column1:"show-text",column2:"progressDemo.samples2.row7column2",column3:"Boolean",column4:"",column5:"true"}]}}},notshowmeta:!0}]}},"./demo/RadioDemo.js":
/*!***************************!*\
  !*** ./demo/RadioDemo.js ***!
  \***************************/
/*! no static exports found */function(e,n,t){"use strict";e.exports={path:"/radio",name:"radio",head:{label:"radioDemo.label",description:"radioDemo.description"},samples:[{id:"radio1",label:"radioDemo.samples1.label",description:"radioDemo.samples1.description",template:'<div class="source"><vue-radio class="radio" v-model="radio" label="1">Option 1</vue-radio><vue-radio class="radio" v-model="radio" label="2">Option 2</vue-radio></div>',parameter:{data:function(){return{radio:"1"}}},code:'<vue-radio class="radio" v-model="radio" label="1">Option 1</vue-radio>\n<vue-radio class="radio" v-model="radio" label="2">Option 2</vue-radio>\n\n<script>\n  new Vue({\n    data: function(){\n      return {\n        radio: "1"\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"radio2",label:"radioDemo.samples2.label",description:"radioDemo.samples2.description",template:'<div class="source"><vue-radio disabled v-model="radio" label="Disabled">Disabled</vue-radio><vue-radio disabled v-model="radio" label="Selected and Disabled">Selected and Disabled</vue-radio></div>',parameter:{data:function(){return{radio:"Selected and Disabled"}}},code:'<vue-radio disabled v-model="radio" label="Disabled">Disabled</vue-radio>\n<vue-radio disabled v-model="radio" label="Selected and Disabled">Selected and Disabled</vue-radio>\n\n<script>\n  new Vue({\n    data: function(){\n      return {\n        radio: "Selected and Disabled"\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"radio3",label:"radioDemo.samples3.label",description:"radioDemo.samples3.description",template:'<div class="source"><vue-radio-group v-model="radio"><vue-radio label="3">Option A</vue-radio><vue-radio label="6">Option B</vue-radio><vue-radio label="9">Option C</vue-radio></vue-radio-group></div>',parameter:{data:function(){return{radio:"3"}}},code:'<vue-radio-group v-model="radio">\n  <vue-radio label="3">Option A</vue-radio>\n  <vue-radio label="6">Option B</vue-radio>\n  <vue-radio label="9">Option C</vue-radio>\n</vue-radio-group>\n\n<script>\n  new Vue({\n    data: function(){\n      return {\n        radio: "3"\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"radio4",label:"radioDemo.samples4.label",description:"radioDemo.samples4.description",template:'<div class="source"><vue-radio-group v-model="radio1" size="large" fill="#324057" text-color="#a4aebd"><vue-radio-button label="New York"></vue-radio-button><vue-radio-button label="Washington"></vue-radio-button><vue-radio-button label="Los Angeles"></vue-radio-button><vue-radio-button label="Chicago"></vue-radio-button></vue-radio-group><div style="margin: 15px 0;"></div><vue-radio-group v-model="radio2"><vue-radio-button label="New York"></vue-radio-button><vue-radio-button label="Washington" :disabled="true"></vue-radio-button><vue-radio-button label="Los Angeles"></vue-radio-button><vue-radio-button label="Chicago"></vue-radio-button></vue-radio-group><div style="margin: 15px 0;"></div><vue-radio-group v-model="radio3" :disabled="true"><vue-radio-button label="New York"></vue-radio-button><vue-radio-button label="Washington"></vue-radio-button><vue-radio-button label="Los Angeles"></vue-radio-button><vue-radio-button label="Chicago"></vue-radio-button></vue-radio-group></div>',parameter:{data:function(){return{radio1:"New York",radio2:"New York",radio3:"New York"}}},code:'<vue-radio-group v-model="radio1" size="large" fill="#324057" text-color="#a4aebd">\n  <vue-radio-button label="New York"></vue-radio-button>\n  <vue-radio-button label="Washington"></vue-radio-button>\n  <vue-radio-button label="Los Angeles"></vue-radio-button>\n  <vue-radio-button label="Chicago"></vue-radio-button>\n</vue-radio-group>\n<vue-radio-group v-model="radio2">\n  <vue-radio-button label="New York"></vue-radio-button>\n  <vue-radio-button label="Washington" :disabled="true"></vue-radio-button>\n  <vue-radio-button label="Los Angeles"></vue-radio-button>\n  <vue-radio-button label="Chicago"></vue-radio-button>\n</vue-radio-group>\n<vue-radio-group v-model="radio3" :disabled="true">\n  <vue-radio-button label="New York"></vue-radio-button>\n  <vue-radio-button label="Washington"></vue-radio-button>\n  <vue-radio-button label="Los Angeles"></vue-radio-button>\n  <vue-radio-button label="Chicago"></vue-radio-button>\n</vue-radio-group>\n\n<script>\n  new Vue({\n    data: function(){\n      return {\n        radio1: "New York",\n        radio2: "New York",\n        radio3: "New York",\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"radio5",label:"Radio Attributes",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"label",column2:"radioDemo.samples5.row1column2",column3:"String / Number / Boolean",column4:"",column5:""},{column1:"disabled",column2:"radioDemo.samples5.row2column2",column3:"Boolean",column4:"",column5:"false"},{column1:"name",column2:"radioDemo.samples5.row3column2",column3:"String",column4:"",column5:""}]}}},notshowmeta:!0},{id:"radio6",label:"Radio-group Attributes",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"size",column2:"radioDemo.samples6.row1column2",column3:"String",column4:"large, small, mini",column5:""},{column1:"fill",column2:"radioDemo.samples6.row2column2",column3:"String",column4:"",column5:"#20a0ff"},{column1:"text-color",column2:"radioDemo.samples6.row3column2",column3:"String",column4:"",column5:"#ffffff"}]}}},notshowmeta:!0},{id:"radio7",label:"Radio-group Events",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"change",column2:"radioDemo.samples7.row1column2",column3:"radioDemo.samples7.row1column3"}]}}},notshowmeta:!0},{id:"radio8",label:"Radio-button Attributes",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"label",column2:"radioDemo.samples8.row1column2",column3:"String / Number",column4:"",column5:""},{column1:"disabled",column2:"radioDemo.samples8.row2column2",column3:"Boolean",column4:"",column5:"false"}]}}},notshowmeta:!0}]}},"./demo/RateDemo.js":
/*!**************************!*\
  !*** ./demo/RateDemo.js ***!
  \**************************/
/*! no static exports found */function(e,n,t){"use strict";e.exports={path:"/rate",name:"rate",head:{label:"rateDemo.label",description:"rateDemo.description"},samples:[{id:"rate1",label:"rateDemo.samples1.label",description:"rateDemo.samples1.description",template:'<div class="source"><vue-row class="margin-bottom20" type="flex" justify="center"><vue-col :span="8"><span class="demonstration">Default</span></vue-col><vue-col :span="14"><vue-rate v-model="value1" class="demonstration"></vue-rate></vue-col></vue-row><vue-row type="flex" justify="center"><vue-col :span="8"><span class="demonstration">Color for different levels</span></vue-col><vue-col :span="14"><vue-rate v-model="value2" class="demonstration" :colors="[\'#99A9BF\', \'#F7BA2A\', \'#FF99FF\']"></vue-rate></vue-col></vue-row></div>',parameter:{data:function(){return{value1:0,value2:0}}},code:'<span class="demonstration">Default</span>\n<vue-rate v-model="value1"></vue-rate>\n<span class="demonstration">Color for different levels</span>\n<vue-rate v-model="value2" :colors="[\'#99A9BF\', \'#F7BA2A\', \'#FF99FF\']"></vue-rate>\n\n<script>\n  new Vue({\n    data: function() {\n      return {\n        value1: 0,\n        value2: 0\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"rate2",label:"rateDemo.samples2.label",description:"rateDemo.samples2.description",template:'<div class="source"><vue-rate v-model="value" show-text :texts="texts" :max="4"></vue-rate></div>',parameter:{data:function(){return{value:0,texts:["oops","normal","good","great"]}}},code:'<vue-rate v-model="value" show-text :texts="texts" :max="4"></vue-rate>\n\n<script>\n  new Vue({\n    data: function() {\n      return {\n        value: 0,\n        texts: ["oops", "disappointed", "normal", "good", "great"]\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"rate3",label:"rateDemo.samples3.label",description:"rateDemo.samples3.description",template:"<div class=\"source\"><vue-rate v-model=\"value\" :icon-classes=\"['vue-icon-error', 'vue-icon-warning', 'vue-icon-success']\" void-icon-class=\"vue-icon-information\" :colors=\"['#99A9BF', '#F7BA2A', '#FF9900']\"></vue-rate></div>",parameter:{data:function(){return{value:0}}},code:"<vue-rate v-model=\"value\" :icon-classes=\"['vue-icon-error', 'vue-icon-warning', 'vue-icon-success']\" void-icon-class=\"vue-icon-information\" :colors=\"['#99A9BF', '#F7BA2A', '#FF9900']\"></vue-rate>\n\n<script>\n  new Vue({\n    data: function() {\n      return {\n        value: 0\n      }\n    }\n  }).$mount();\n<\/script>"},{id:"rate4",label:"rateDemo.samples4.label",description:"rateDemo.samples4.description",template:'<div class="source"><vue-rate v-model="value" disabled show-text text-color="#ff9900" text-template="{value} points"></vue-rate></div>',parameter:{data:function(){return{value:2.7}}},code:'<vue-rate v-model="value" disabled show-text text-color="#ff9900" text-template="{value} points"></vue-rate>\n\n<script>\n  new Vue({\n    data: function() {\n      return {\n        value: 2.7\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"rate5",label:"Attributes",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"max",column2:"rateDemo.samples5.row1column2",column3:"Number",column4:"",column5:"5"},{column1:"disabled",column2:"rateDemo.samples5.row2column2",column3:"Boolean",column4:"",column5:"false"},{column1:"allow-half",column2:"rateDemo.samples5.row3column2",column3:"Boolean",column4:"",column5:"false"},{column1:"low-threshold",column2:"rateDemo.samples5.row4column2",column3:"Number",column4:"",column5:"2"},{column1:"high-threshold",column2:"rateDemo.samples5.row5column2",column3:"Number",column4:"",column5:"4"},{column1:"colors",column2:"rateDemo.samples5.row6column2",column3:"Array",column4:"",column5:"['#F7BA2A', '#F7BA2A', '#F7BA2A']"},{column1:"void-color",column2:"rateDemo.samples5.row7column2",column3:"String",column4:"",column5:"#C6D1DE"},{column1:"disabled-void-color",column2:"rateDemo.samples5.row8column2",column3:"String",column4:"",column5:"#EFF2F7"},{column1:"icon-classes",column2:"rateDemo.samples5.row9column2",column3:"Array",column4:"",column5:"['vue-icon-star-on', 'vue-icon-star-on','vue-icon-star-on']"},{column1:"void-icon-class",column2:"rateDemo.samples5.row10column2",column3:"String",column4:"",column5:"vue-icon-star-off"},{column1:"disabled-void-icon-class",column2:"rateDemo.samples5.row11column2",column3:"String",column4:"",column5:"vue-icon-star-on"},{column1:"show-text",column2:"rateDemo.samples5.row12column2",column3:"Boolean",column4:"",column5:"false"},{column1:"text-color",column2:"rateDemo.samples5.row13column2",column3:"String",column4:"",column5:"#1F2D3D"},{column1:"texts",column2:"rateDemo.samples5.row14column2",column3:"Array",column4:"",column5:""},{column1:"text-template",column2:"rateDemo.samples5.row15column2",column3:"String",column4:"",column5:"{value}"}]}}},notshowmeta:!0},{id:"rate6",label:"Events",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"change",column2:"rateDemo.samples6.row1column2",column3:"rateDemo.samples6.row1column3"}]}}},notshowmeta:!0}]}},"./demo/RippleDemo.js":
/*!****************************!*\
  !*** ./demo/RippleDemo.js ***!
  \****************************/
/*! no static exports found */function(e,n,t){"use strict";e.exports={path:"/ripple",name:"ripple",head:{label:"rippleDemo.label",description:"rippleDemo.description"},samples:[{id:"ripple1",label:"rippleDemo.samples1.label",description:"rippleDemo.samples1.description",template:'<div class="source"><vue-alert dark v-ripple title="Clicke Me" type="success" :closable="false"></vue-alert><vue-alert dark v-ripple title="Clicke Me" :closable="false"></vue-alert><vue-alert v-ripple title="Clicke Me" type="warning" :closable="false"></vue-alert><vue-alert v-ripple title="Clicke Me" type="error" :closable="false"></vue-alert></div>',code:'<vue-alert dark v-ripple title="Clicke Me" type="success" :closable="false"></vue-alert>\n<vue-alert dark v-ripple title="Clicke Me" :closable="false"></vue-alert>\n<vue-alert v-ripple title="Clicke Me" type="warning" :closable="false"></vue-alert>\n<vue-alert v-ripple title="Clicke Me" type="error" :closable="false"></vue-alert>'}]}},"./demo/SelectDemo.js":
/*!****************************!*\
  !*** ./demo/SelectDemo.js ***!
  \****************************/
/*! no static exports found */function(e,n,t){"use strict";var l={path:"/select",name:"select",head:{label:"selectDemo.label",description:"selectDemo.description"},samples:[{id:"select1",label:"selectDemo.samples1.label",description:"selectDemo.samples1.description",template:'<div class="source"><vue-select v-model="value"><vue-option v-for="(item, index) in options" :key="index" :label="item.label" :value="item.value"></vue-option></vue-select></div>',parameter:{data:function(){return{options:[{value:"option1",label:"YAMAHA"},{value:"option2",label:"HONDA"},{value:"option3",label:"TOYOTA"}],value:""}}},code:"<vue-select v-model=\"value\">\n  <vue-option v-for=\"(item, index) in options\" :key=\"index\" :label=\"item.label\" :value=\"item.value\">\n  </vue-option>\n</vue-select>\n\n<script>\n  new Vue({\n    data: function(){\n      return {\n        options: [{\n          value: 'option1',\n          label: 'YAMAHA'\n        },{\n          value: 'option2',\n          label: 'HONDA'\n        },{\n          value: 'option3',\n          label: 'TOYOTA'\n        }],\n        value: ''\n      }\n    }\n  }).$mount();\n<\/script>"},{id:"select2",label:"selectDemo.samples2.label",description:"selectDemo.samples2.description",template:'<div class="source"><vue-select v-model="value"><vue-option v-for="(item, index) in options" :key="index" :label="item.label" :value="item.value" :disabled="item.disabled"></vue-option></vue-select></div>',parameter:{data:function(){return{options:[{value:"option1",label:"YAMAHA"},{value:"option2",label:"HONDA",disabled:!0},{value:"option3",label:"TOYOTA"}],value:""}}},code:"<vue-select v-model=\"value\">\n  <vue-option v-for=\"(item, index) in options\" :key=\"index\" :label=\"item.label\" :value=\"item.value\" :disabled=\"item.disabled\">\n  </vue-option>\n</vue-select>\n\n<script>\n  new Vue({\n    data: function(){\n      return {\n        options: [{\n          value: 'option1',\n          label: 'YAMAHA'\n        },{\n          value: 'option2',\n          label: 'HONDA',\n          disabled: true\n        },{\n          value: 'option3',\n          label: 'TOYOTA'\n        }],\n        value: ''\n      }\n    }\n  }).$mount();\n<\/script>"},{id:"select3",label:"selectDemo.samples3.label",description:"selectDemo.samples3.description",template:'<div class="source"><vue-select v-model="value" disabled><vue-option v-for="(item, index) in options" :key="index" :label="item.label" :value="item.value"></vue-option></vue-select></div>',parameter:{data:function(){return{options:[{value:"option1",label:"YAMAHA"},{value:"option2",label:"HONDA"},{value:"option3",label:"TOYOTA"}],value:""}}},code:"<vue-select v-model=\"value\" disabled>\n  <vue-option v-for=\"(item, index) in options\" :key=\"index\" :label=\"item.label\" :value=\"item.value\">\n  </vue-option>\n</vue-select>\n\n<script>\n  new Vue({\n    data: function(){\n      return {\n        options: [{\n          value: 'option1',\n          label: 'YAMAHA'\n        },{\n          value: 'option2',\n          label: 'HONDA'\n        },{\n          value: 'option3',\n          label: 'TOYOTA'\n        }],\n        value: ''\n      }\n    }\n  }).$mount();\n<\/script>"},{id:"select4",label:"selectDemo.samples4.label",description:"selectDemo.samples4.description",template:'<div class="source"><vue-select v-model="value" clearable><vue-option v-for="(item, index) in options" :key="index" :label="item.label" :value="item.value"></vue-option></vue-select></div>',parameter:{data:function(){return{options:[{value:"option1",label:"YAMAHA"},{value:"option2",label:"HONDA"},{value:"option3",label:"TOYOTA"}],value:""}}},code:"<vue-select v-model=\"value\" clearable>\n  <vue-option v-for=\"(item, index) in options\" :key=\"index\" :label=\"item.label\" :value=\"item.value\">\n  </vue-option>\n</vue-select>\n\n<script>\n  new Vue({\n    data: function(){\n      return {\n        options: [{\n          value: 'option1',\n          label: 'YAMAHA'\n        },{\n          value: 'option2',\n          label: 'HONDA'\n        },{\n          value: 'option3',\n          label: 'TOYOTA'\n        }],\n        value: ''\n      }\n    }\n  }).$mount();\n<\/script>"},{id:"select5",label:"selectDemo.samples5.label",description:"selectDemo.samples5.description",template:'<div class="source"><vue-select v-model="value" multiple clearable :auto-height="false"><vue-option v-for="(item, index) in options" :key="index" :label="item.label" :value="item.value"></vue-option></vue-select></div>',parameter:{data:function(){return{options:[{value:"option1",label:"YAMAHA"},{value:"option2",label:"HONDA"},{value:"option3",label:"TOYOTA"}],value:""}}},code:"<vue-select v-model=\"value\" multiple clearable :auto-height=\"false\">\n  <vue-option v-for=\"(item, index) in options\" :key=\"index\" :label=\"item.label\" :value=\"item.value\">\n  </vue-option>\n</vue-select>\n\n<script>\n  new Vue({\n    data: function(){\n      return {\n        options: [{\n          value: 'option1',\n          label: 'YAMAHA'\n        },{\n          value: 'option2',\n          label: 'HONDA'\n        },{\n          value: 'option3',\n          label: 'TOYOTA'\n        }],\n        value: ''\n      }\n    }\n  }).$mount();\n<\/script>"},{id:"select6",label:"selectDemo.samples6.label",description:"selectDemo.samples6.description",template:'<div class="source"><vue-select v-model="value"><vue-option v-for="(item, index) in options" :key="index" :label="item.label" :value="item.value"><span style="float:left">{{item.label}}</span><span style="float:right;color:#8492a6;font-size:13px">{{item.value}}</span></vue-option></vue-select></div>',parameter:{data:function(){return{options:[{value:"option1",label:"YAMAHA"},{value:"option2",label:"HONDA"},{value:"option3",label:"TOYOTA"}],value:""}}},code:"<vue-select v-model=\"value\">\n  <vue-option v-for=\"(item, index) in options\" :key=\"index\" :label=\"item.label\" :value=\"item.value\">\n    <span style=\"float:left\">{{item.label}}</span>\n    <span style=\"float:right;color:#8492a6;font-size:13px\">{{item.value}}</span>\n  </vue-option>\n</vue-select>\n\n<script>\n  new Vue({\n    data: function(){\n      return {\n        options: [{\n          value: 'option1',\n          label: 'YAMAHA'\n        },{\n          value: 'option2',\n          label: 'HONDA'\n        },{\n          value: 'option3',\n          label: 'TOYOTA'\n        }],\n        value: ''\n      }\n    }\n  }).$mount();\n<\/script>"},{id:"select7",label:"selectDemo.samples7.label",description:"selectDemo.samples7.description",template:'<div class="source"><vue-select v-model="value"><vue-option-group v-for="(group, index) in options" :key="index" :label="group.label"><vue-option v-for="(item, index) in group.options" :key="index" :label="item.label" :value="item.value"></vue-option></vue-option-group></vue-select></div>',parameter:{data:function(){return{options:[{label:"Popular cities",options:[{value:"Shanghai",label:"Shanghai"},{value:"Beijing",label:"Beijing"}]},{label:"City name",options:[{value:"New York",label:"New York"},{value:"Chicago",label:"Chicago"},{value:"Los Angeles",label:"Los Angeles"},{value:"Washington",label:"Washington"}]}],value:""}}},code:'<vue-select v-model="value">\n  <vue-option-group v-for="(group, index) in options" :key="index" :label="group.label">\n    <vue-option v-for="(item, index) in group.options" :key="index" :label="item.label" :value="item.value">\n    </vue-option>\n  </vue-option-group>\n</vue-select>\n\n<script>\n  new Vue({\n    data: function(){\n      return {\n        options: [{\n          label: "Popular cities"\n          options: [{\n            value: "Shanghai",\n            label: "Shanghai"\n          },{\n            value: "Beijing",\n            label: "Beijing"\n          }]\n        },{\n          label: "City name"\n          options: [{\n            value: "New York",\n            label: "New York"\n          },{\n            value: "Chicago",\n            label: "Chicago"\n          },{\n            value: "Los Angeles",\n            label: "Los Angeles"\n          },{\n            value: "Washington",\n            label: "Washington"\n          }]\n        }],\n        value: ""\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"select8",label:"selectDemo.samples8.label",description:"selectDemo.samples8.description",template:'<div class="source"><vue-select v-model="value" filterable><vue-option v-for="(item, index) in options" :key="index" :label="item.label" :value="item.value"></vue-option></vue-select></div>',parameter:{data:function(){return{options:[{value:"option1",label:"YAMAHA"},{value:"option2",label:"HONDA"},{value:"option3",label:"TOYOTA"}],value:""}}},code:"<vue-select v-model=\"value\" filterable>\n  <vue-option v-for=\"(item, index) in options\" :key=\"index\" :label=\"item.label\" :value=\"item.value\">\n  </vue-option>\n</vue-select>\n\n<script>\n  new Vue({\n    data: function(){\n      return {\n        options: [{\n          value: 'option1',\n          label: 'YAMAHA'\n        },{\n          value: 'option2',\n          label: 'HONDA'\n        },{\n          value: 'option3',\n          label: 'TOYOTA'\n        }],\n        value: ''\n      }\n    }\n  }).$mount();\n<\/script>"},{id:"select9",label:"selectDemo.samples9.label",description:"selectDemo.samples9.description",template:'<div class="source"><vue-select v-model="value" filterable remote :placeholder="$t(\'selectDemo.samples9.placeholderLabel\')" :remote-method="remoteMethod" :loading="loading"><vue-option v-for="(item, index) in options" :key="index" :label="item.label" :value="item.value"></vue-option></vue-select></div>',parameter:{data:function(){return{list:[{value:"option1",label:"YAMAHA"},{value:"option2",label:"HONDA"},{value:"option3",label:"TOYOTA"}],options:[],loading:!1,value:""}},methods:{remoteMethod:function(e){var n=this;""!==e?(n.loading=!0,setTimeout(function(){n.loading=!1,n.options=n.list.filter(function(n){return n.label.toLowerCase().indexOf(e.toLowerCase())>-1})},300)):n.options=[]}}},code:'<vue-select v-model="value" filterable remote :remote-method="remoteMethod" :loading="loading" :placeholder="$t(\'selectDemo.samples9.placeholderLabel\')">\n  <vue-option v-for="(item, index) in options" :key="index" :label="item.label" :value="item.value">\n  </vue-option>\n</vue-select>\n\n<script>\n  new Vue({\n    data: function(){\n      return {\n        list: [{\n          value: "option1",\n          label: "YAMAHA"\n        },{\n          value: "option2",\n          label: "HONDA"\n        },{\n          label: "option3"\n          value: "TOYOTA",\n        }],\n        options: [],\n        loading: false,\n        value: ""\n      }\n    },\n    methods: {\n      remoteMethod: function(query) {\n        var self = this;\n        if (query !== "") {\n          self.loading = true;\n          setTimeout(function() {\n            self.loading = false;\n            self.options = self.list.filter(function(item) {\n              return item.label.toLowerCase().indexOf(query.toLowerCase()) > -1;\n            });\n          }, 300);\n        } else {\n          self.options = [];\n        }\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"select10",label:"selectDemo.samples10.label",description:"selectDemo.samples10.description",template:'<div class="source"><vue-select v-model="value" filterable allow-create clearable><vue-option v-for="(item, index) in options" :key="index" :label="item.label" :value="item.value"></vue-option></vue-select></div>',parameter:{data:function(){return{options:[{value:"option1",label:"YAMAHA"},{value:"option2",label:"HONDA"},{value:"option3",label:"TOYOTA"}],value:""}}},code:"<vue-select v-model=\"value\" filterable allow-create clearable>\n  <vue-option v-for=\"(item, index) in options\" :key=\"index\" :label=\"item.label\" :value=\"item.value\">\n  </vue-option>\n</vue-select>\n\n<script>\n  new Vue({\n    data: function(){\n      return {\n        options: [{\n          value: 'option1',\n          label: 'YAMAHA'\n        },{\n          value: 'option2',\n          label: 'HONDA'\n        },{\n          value: 'option3',\n          label: 'TOYOTA'\n        }],\n        value: ''\n      }\n    }\n  }).$mount();\n<\/script>"},{id:"select11",label:"Select Attributes",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"multiple",column2:"selectDemo.samples11.row1column2",column3:"Boolean",column4:"",column5:"false"},{column1:"disabled",column2:"selectDemo.samples11.row2column2",column3:"Boolean",column4:"",column5:"false"},{column1:"size",column2:"selectDemo.samples11.row3column2",column3:"String",column4:"large/small/mini",column5:""},{column1:"clearable",column2:"selectDemo.samples11.row4column2",column3:"Boolean",column4:"",column5:"false"},{column1:"multiple-limit",column2:"selectDemo.samples11.row5column2",column3:"Number",column4:"",column5:"0"},{column1:"name",column2:"selectDemo.samples11.row6column2",column3:"String",column4:"",column5:""},{column1:"placeholder",column2:"selectDemo.samples11.row7column2",column3:"String",column4:"",column5:"vue.select.placeholder"},{column1:"filterable",column2:"selectDemo.samples11.row8column2",column3:"Boolean",column4:"",column5:"false"},{column1:"allow-create",column2:"selectDemo.samples11.row9column2",column3:"Boolean",column4:"",column5:"false"},{column1:"filter-method",column2:"selectDemo.samples11.row10column2",column3:"Function",column4:"",column5:""},{column1:"remote",column2:"selectDemo.samples11.row11column2",column3:"Boolean",column4:"",column5:"false"},{column1:"remote-method",column2:"selectDemo.samples11.row12column2",column3:"Function",column4:"",column5:""},{column1:"loading",column2:"selectDemo.samples11.row13column2",column3:"Boolean",column4:"",column5:"false"},{column1:"loading-text",column2:"selectDemo.samples11.row14column2",column3:"String",column4:"",column5:"vue.select.loading"},{column1:"no-match-text",column2:"selectDemo.samples11.row15column2",column3:"String",column4:"",column5:"vue.select.noMatch"},{column1:"no-data-text",column2:"selectDemo.samples11.row16column2",column3:"String",column4:"",column5:"vue.select.noData"},{column1:"popper-class",column2:"selectDemo.samples11.row17column2",column3:"String",column4:"",column5:""},{column1:"default-first-option",column2:"selectDemo.samples11.row18column2",column3:"Boolean",column4:"",column5:"false"},{column1:"autofocus",column2:"inputDemo.samples10.row19column2",column3:"Boolean",column4:"",column5:"false"},{column1:"text-align",column2:"inputDemo.samples10.row22column2",column3:"String",column4:"center, right",column5:""},{column1:"auto-height",column2:"selectDemo.samples11.row19column2",column3:"Boolean",column4:"",column5:"true"}]}}},notshowmeta:!0},{id:"select12",label:"Select Events",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"change",column2:"selectDemo.samples12.row1column2",column3:"selectDemo.samples12.row1column3"},{column1:"visible-change",column2:"selectDemo.samples12.row2column2",column3:"selectDemo.samples12.row2column3"},{column1:"remove-tag",column2:"selectDemo.samples12.row3column2",column3:"selectDemo.samples12.row3column3"}]}}},notshowmeta:!0},{id:"select13",label:"Option Group Attributes",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"label",column2:"selectDemo.samples13.row1column2",column3:"String",column4:"",column5:""},{column1:"disabled",column2:"selectDemo.samples13.row2column2",column3:"Boolean",column4:"",column5:"false"}]}}},notshowmeta:!0},{id:"select14",label:"Option Attributes",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"value",column2:"selectDemo.samples14.row1column2",column3:"String / Number / Object",column4:"",column5:""},{column1:"label",column2:"selectDemo.samples14.row2column2",column3:"String",column4:"",column5:""},{column1:"disabled",column2:"selectDemo.samples14.row3column2",column3:"Boolean",column4:"",column5:"false"}]}}},notshowmeta:!0},{id:"select15",label:"Methods",template:'<method-table :data="tableData"></method-table>',parameter:{data:function(){return{tableData:[{column1:"focus",column2:"inputDemo.samples16.row1column2",column3:""}]}}},notshowmeta:!0}]};e.exports=l},"./demo/SignatureDemo.js":
/*!*******************************!*\
  !*** ./demo/SignatureDemo.js ***!
  \*******************************/
/*! no static exports found */function(e,n,t){"use strict";e.exports={path:"/signature",name:"signature",head:{label:"signatureDemo.label",description:"signatureDemo.description"},samples:[{id:"signature1",label:"signatureDemo.samples1.label",description:"signatureDemo.samples1.description",template:'<div class="source"><vue-signature width="400px" height="250px" :options="{backgroundColor: \'lightgray\'}"></vue-signature></div>',parameter:{data:function(){return{}},methods:{}},code:'<vue-signature width="400px" height="250px" :options="{backgroundColor: \'lightgray\'}">\n</vue-signature>\n\n<script>\n  new Vue({\n    data: function() {\n      return: {\n      }\n    },\n  }).$mount();\n<\/script>'},{id:"signature2",label:"signatureDemo.samples2.label",description:"signatureDemo.samples2.description",template:'<div class="source"><vue-signature ref="saveSign" width="400px" height="250px" :options="{backgroundColor: \'lightgray\'}"></vue-signature><vue-button @click="saveHandle">Save</vue-button><vue-input v-model="result" type="textarea" :rows="2"></vue-input><vue-signature ref="loadSign" width="400px" height="250px" :options="{backgroundColor: \'lightgray\'}"></vue-signature><vue-button @click="loadHandle">Load</vue-button></div>',parameter:{data:function(){return{result:""}},methods:{saveHandle:function(){var e=this.$refs.saveSign.saveSignature();this.result=e.data},loadHandle:function(){this.$refs.loadSign.fromDataURL(this.result)}}},code:'<vue-signature ref="saveSign" width="400px" height="250px" :options="{backgroundColor: \'lightgray\'}">\n</vue-signature>\n<vue-button @click="saveHandle">Save</vue-button>\n<vue-input v-model="result" type="textarea" :rows="2"></vue-input>\n<vue-signature ref="loadSign" width="400px" height="250px" :options="{backgroundColor: \'lightgray\'}">\n</vue-signature>\n<vue-button @click="loadHandle">Load</vue-button>\n\n<script>\n  new Vue({\n    data: function() {\n      return: {\n      }\n    },\n    methods: {\n      saveHandle: function() {\n        var signResult = this.$refs.saveSign.saveSignature();\n        this.result = signResult.data;\n      },\n      loadHandle: function() {\n        this.$refs.loadSign.fromDataURL(this.result);\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"signature3",label:"signatureDemo.samples3.label",description:"signatureDemo.samples3.description",template:'<div class="source"><vue-signature ref="sign" width="400px" height="250px" :options="{backgroundColor: \'lightgray\'}"></vue-signature><vue-button @click="clearHandle">Clear</vue-button></div>',parameter:{methods:{clearHandle:function(){this.$refs.sign.clearSignature(),this.$notify({title:"Success"})}}},code:'<vue-signature ref="sign" width="400px" height="250px" :options="{backgroundColor: \'lightgray\'}">\n</vue-signature>\n<vue-button @click="clearHandle">Clear</vue-button>\n\n<script>\n  new Vue({\n    data: function() {\n      return: {\n      }\n    },\n    methods: {\n      clearHandle: function() {\n        this.$refs.sign.clearSignature();\n        this.$notify({title: \'Success\'});\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"signature4",label:"signatureDemo.samples4.label",description:"signatureDemo.samples4.description",template:'<div class="source"><vue-signature ref="sign" width="400px" height="250px" :options="{backgroundColor: \'lightgray\'}"></vue-signature><vue-button @click="undoHandle">Undo</vue-button></div>',parameter:{methods:{undoHandle:function(){this.$refs.sign.undoSignature(),this.$notify({title:"Success"})}}},code:'<vue-signature ref="sign" width="400px" height="250px" :options="{backgroundColor: \'lightgray\'}">\n</vue-signature>\n<vue-button @click="undoHandle">Undo</vue-button>\n\n<script>\n  new Vue({\n    data: function() {\n      return: {\n      }\n    },\n    methods: {\n      undoHandle: function() {\n        this.$refs.sign.undoSignature();\n        this.$notify({title: \'Success\'});\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"signature5",label:"signatureDemo.samples5.label",description:"signatureDemo.samples5.description",template:'<div class="source"><vue-signature ref="sign" width="400px" height="250px" :options="{backgroundColor: \'lightgray\'}"></vue-signature><vue-button @click="lockHandle">Lock</vue-button><vue-button @click="openHandle">Open</vue-button></div>',parameter:{methods:{lockHandle:function(){this.$refs.sign.lockSignaturePad(),this.$notify({title:"lock"})},openHandle:function(){this.$refs.sign.openSignaturePad(),this.$notify({title:"open"})}}},code:'<vue-signature ref="sign" width="400px" height="250px" :options="{backgroundColor: \'lightgray\'}">\n</vue-signature>\n<vue-button @click="lockHandle">Lock</vue-button>\n<vue-button @click="openHandle">Open</vue-button>\n\n<script>\n  new Vue({\n    data: function() {\n      return: {\n      }\n    },\n    methods: {\n      lockHandle: function() {\n        this.$refs.sign.lockSignaturePad();\n        this.$notify({title: \'lock\'});\n      },\n      openHandle: function() {\n        this.$refs.sign.openSignaturePad();\n        this.$notify({title: \'open\'});\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"signature6",label:"Attributes",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"width",column2:"signatureDemo.samples6.row1column2",column3:"String",column4:"",column5:"100%"},{column1:"height",column2:"signatureDemo.samples6.row2column2",column3:"String",column4:"",column5:"100%"},{column1:"saveType",column2:"signatureDemo.samples6.row3column2",column3:"String",column4:"",column5:"image/png"},{column1:"options",column2:"signatureDemo.samples6.row4column2",column3:"Object",column4:"",column5:"{}"},{column1:"customStyle",column2:"signatureDemo.samples6.row5column2",column3:"Object",column4:"",column5:"{}"}]}}},notshowmeta:!0},{id:"signature7",label:"Methods",template:'<method-table :data="tableData"></method-table>',parameter:{data:function(){return{tableData:[{column1:"saveSignature",column2:"signatureDemo.samples7.row1column2",column3:""},{column1:"undoSignature",column2:"signatureDemo.samples7.row2column2",column3:""},{column1:"clearSignature",column2:"signatureDemo.samples7.row3column2",column3:""},{column1:"lockSignaturePad",column2:"signatureDemo.samples7.row4column2",column3:""},{column1:"openSignaturePad",column2:"signatureDemo.samples7.row5column2",column3:""},{column1:"fromDataURL",column2:"signatureDemo.samples7.row6column2",column3:"base64data"},{column1:"isEmpty",column2:"signatureDemo.samples7.row7column2",column3:""}]}}},notshowmeta:!0}]}},"./demo/SliderDemo.js":
/*!****************************!*\
  !*** ./demo/SliderDemo.js ***!
  \****************************/
/*! no static exports found */function(e,n,t){"use strict";e.exports={path:"/slider",name:"slider",head:{label:"sliderDemo.label",description:"sliderDemo.description"},samples:[{id:"slider1",label:"sliderDemo.samples1.label",description:"sliderDemo.samples1.description",template:'<div class="source"><vue-row class="margin-bottom20" type="flex" justify="center"><vue-col :span="6"><span class="demonstration">Default</span></vue-col><vue-col :span="16"><vue-slider v-model="value1"></vue-slider></vue-col></vue-row><vue-row class="margin-bottom20" type="flex" justify="center"><vue-col :span="6"><span class="demonstration">Customized initial</span></vue-col><vue-col :span="16"><vue-slider v-model="value2"></vue-slider></vue-col></vue-row><vue-row class="margin-bottom20" type="flex" justify="center"><vue-col :span="6"><span class="demonstration">Hide Tooltip</span></vue-col><vue-col :span="16"><vue-slider v-model="value3" :show-tooltip="false"></vue-slider></vue-col></vue-row><vue-row class="margin-bottom20" type="flex" justify="center"><vue-col :span="6"><span class="demonstration">Format Tooltip</span></vue-col><vue-col :span="16"><vue-slider v-model="value4" :format-tooltip="formatTooltip"></vue-slider></vue-col></vue-row><vue-row type="flex" justify="center"><vue-col :span="6"><span class="demonstration">Disabled</span></vue-col><vue-col :span="16"><vue-slider v-model="value5" disabled></vue-slider></vue-col></vue-row></div>',parameter:{data:function(){return{value1:0,value2:50,value3:36,value4:48,value5:42}},methods:{formatTooltip:function(e){return e/100}}},code:'<span class="demonstration">Default</span>\n<vue-slider v-model="value1"></vue-slider>\n<span class="demonstration">Customized initial</span>\n<vue-slider v-model="value2"></vue-slider>\n<span class="demonstration">Hide Tooltip</span>\n<vue-slider v-model="value3" :show-tooltip="false"></vue-slider>\n<span class="demonstration">Format Tooltip</span>\n<vue-slider v-model="value4" :format-tooltip="formatTooltip"></vue-slider>\n<span class="demonstration">Disabled</span>\n<vue-slider v-model="value5" disabled></vue-slider>\n\n<script>\n  new Vue({\n    data: function() {\n      return: {\n        value1: 0,\n        value2: 50,\n        value3: 36,\n        value4: 48,\n        value5: 42\n      }\n    },\n    methods: {\n      formatTooltip: function(val) {\n        return val / 100;\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"slider2",label:"sliderDemo.samples2.label",description:"sliderDemo.samples2.description",template:'<div class="source"><vue-row class="margin-bottom20" type="flex" justify="center"><vue-col :span="8"><span class="demonstration">Breakpoints not displayed</span></vue-col><vue-col :span="14"><vue-slider v-model="value1" :step="10"></vue-slider></vue-col></vue-row><vue-row type="flex" justify="center"><vue-col :span="8"><span class="demonstration">Breakpoints displayed</span></vue-col><vue-col :span="14"><vue-slider v-model="value2" :step="10" show-stops></vue-slider></vue-col></vue-row></div>',parameter:{data:function(){return{value1:0,value2:0}}},code:'<span class="demonstration">Breakpoints not displayed</span>\n<vue-slider v-model="value1" :step="10"></vue-slider>\n<span class="demonstration">Breakpoints displayed</span>\n<vue-slider v-model="value2" :step="10" show-stops></vue-slider>\n\n<script>\n  new Vue({\n    data: function() {\n      return: {\n        value1: 0,\n        value2: 0\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"slider3",label:"sliderDemo.samples3.label",description:"sliderDemo.samples3.description",template:'<div class="source"><vue-slider v-model="value1" range show-stops :max="10"></vue-slider></div>',parameter:{data:function(){return{value1:[2,6]}}},code:'<vue-slider v-model="value1" range show-stops :max="10"></vue-slider>\n\n<script>\n  new Vue({\n    data: function() {\n      return: {\n        value1: [2, 6]\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"slider4",label:"sliderDemo.samples4.label",description:"sliderDemo.samples4.description",template:'<div class="source"><vue-slider v-model="value1" vertical></vue-slider></div>',parameter:{data:function(){return{value1:1}}},code:'<vue-slider v-model="value1" vertical></vue-slider>\n\n<script>\n  new Vue({\n    data: function() {\n      return: {\n        value1: 1\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"slider5",label:"Attributes",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"min",column2:"sliderDemo.samples5.row1column2",column3:"Number",column4:"",column5:"0"},{column1:"max",column2:"sliderDemo.samples5.row2column2",column3:"Number",column4:"",column5:"100"},{column1:"disabled",column2:"sliderDemo.samples5.row3column2",column3:"Boolean",column4:"",column5:"false"},{column1:"step",column2:"sliderDemo.samples5.row4column2",column3:"Number",column4:"",column5:"1"},{column1:"show-stops",column2:"sliderDemo.samples5.row5column2",column3:"Boolean",column4:"",column5:"false"},{column1:"show-tooltip",column2:"sliderDemo.samples5.row6column2",column3:"Boolean",column4:"",column5:"true"},{column1:"format-tooltip",column2:"sliderDemo.samples5.row7column2",column3:"Function(value)",column4:"",column5:""},{column1:"range",column2:"sliderDemo.samples5.row8column2",column3:"Boolean",column4:"",column5:"false"},{column1:"vertical",column2:"sliderDemo.samples5.row9column2",column3:"Boolean",column4:"",column5:"false"},{column1:"height",column2:"sliderDemo.samples5.row10column2",column3:"String",column4:"",column5:""}]}}},notshowmeta:!0},{id:"slider6",label:"Events",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"change",column2:"sliderDemo.samples6.row1column2",column3:"sliderDemo.samples6.row1column3"}]}}},notshowmeta:!0}]}},"./demo/SortableDemo.js":
/*!******************************!*\
  !*** ./demo/SortableDemo.js ***!
  \******************************/
/*! no static exports found */function(e,n,t){"use strict";e.exports={path:"/sortable",name:"sortable",head:{label:"sortableDemo.label",description:"sortableDemo.description"},samples:[{id:"sortable1",label:"sortableDemo.samples1.label",description:"sortableDemo.samples1.description",template:'<div class="source"><vue-row><vue-col :span="8"><vue-sortable element="div" style="border: 1px solid;border-radius: 1px; min-height:180px;" :options="sortOptions" @add="addHandle" @remove="removeHandle" @update="updateHandle" @end="endHandle" @start="startHandle"><vue-note type="error" >list1-test1</vue-note><vue-note type="error" style="margin: 0 0 5px 0;">list1-test2</vue-note></vue-sortable></vue-col><vue-col :span="8"><vue-sortable element="div" style="border: 1px solid;border-radius: 1px; min-height:180px;" :options="sortOptions" @add="addHandle" @remove="removeHandle" @update="updateHandle" @end="endHandle" @start="startHandle"><vue-note style="margin: 0 0 5px 0;">list2-test1</vue-note></vue-sortable></vue-col><vue-col :span="8"><vue-sortable element="div" style="border: 1px solid;border-radius: 1px; min-height:180px;" :options="sortOptions" @add="addHandle" @remove="removeHandle" @update="updateHandle" @end="endHandle" @start="startHandle"></vue-sortable></vue-col></vue-row></div>',parameter:{data:function(){return{sortOptions:{group:"mysortable1",ghostClass:"vue-sortable-ghost",chosenClass:"vue-sortable-chosen",sort:!1}}},methods:{endHandle:function(e){this.$notify({title:"End move item: "+e.item.innerText})},startHandle:function(e){this.$notify({title:"Start move item: "+e.item.innerText})},addHandle:function(e){this.$notify({title:"Add item: "+e.item.innerText})},removeHandle:function(e){this.$notify({title:"Remove item: "+e.item.innerText})},updateHandle:function(e){this.$notify({title:"Update item: "+e.item.innerText})}}},code:'<vue-sortable element="div" :options="sortOptions" @add="addHandle" @remove="removeHandle" @update="updateHandle" @end="endHandle" @start="startHandle" style="border: 1px solid;border-radius: 1px; min-height:180px;">\n  <vue-note type="error">list1-test1</vue-note>\n  <vue-note type="error">list1-test2</vue-note>\n</vue-sortable>\n<vue-sortable element="div" :options="sortOptions" @add="addHandle" @remove="removeHandle" @update="updateHandle" @end="endHandle" @start="startHandle" style="border: 1px solid;border-radius: 1px; min-height:180px;">\n  <vue-note>list2-test1</vue-note>\n</vue-sortable>\n<vue-sortable element="div" :options="sortOptions" @add="addHandle" @remove="removeHandle" @update="updateHandle" @end="endHandle" @start="startHandle" style="border: 1px solid;border-radius: 1px; min-height:180px;">\n</vue-sortable>\n\n<style>\n  .vue-sortable-chosen {\n    color: #fff;\n    background-color: #c00;\n  }\n  .vue-sortable-ghost {\n    opacity: .5;\n    background: #C8EBFB;\n  }\n</style>\n\n<script>\n  new Vue({\n    data: function(){\n      return {\n        sortOptions: {\n          group: \'mysortable1\',\n          sort: false,\n          ghostClass: \'vue-sortable-ghost\',\n          chosenClass: \'vue-sortable-chosen\'\n        }\n      }\n    },\n    methods: {\n      endHandle: function(e) {\n        this.$notify({title: \'End move item: \' + e.item.innerText});;\n      },\n      startHandle: function(e) {\n        this.$notify({title: \'start move item: \' + e.item.innerText});\n      },\n      addHandle: function(e) {\n        this.$notify({title: \'Add item: \' + e.item.innerText});;\n      },\n      removeHandle: function(e) {\n        this.$notify({title: \'Remove item: \' + e.item.innerText});\n      },\n      updateHandle: function(e) {\n        this.$notify({title: \'Update item: \' + e.item.innerText});\n      }\n  }).$mount();\n<\/script>'},{id:"sortable2",label:"sortableDemo.samples2.label",description:"sortableDemo.samples2.description",template:'<div class="source"><vue-row><vue-col :span="8"><vue-sortable id="list1" v-model="list1" style="border: 1px solid;border-radius: 1px; min-height:180px;" :move="moveHandle" :options="sortOptions"><vue-note type="error" v-for="(element, index) in list1" :key="index" >{{element.name}}</vue-note></vue-sortable></vue-col><vue-col :span="8"><vue-sortable id="list2" v-model="list2" style="border: 1px solid;border-radius: 1px; min-height:180px;" :move="moveHandle" :options="sortOptions"><vue-note v-for="(element, index) in list2" :key="index" >{{element.name}}</vue-note></vue-sortable></vue-col><vue-col :span="8"><vue-sortable id="list3" v-model="list3" style="border: 1px solid;border-radius: 1px; min-height:180px;" :move="moveHandle" :options="sortOptions"><vue-note type="success" v-for="(element, index) in list3" :key="index" >{{element.name}}</vue-note></vue-sortable></vue-col></vue-row><vue-row>list1: {{list1}}</vue-row><vue-row>list2: {{list2}}</vue-row><vue-row>list3: {{list3}}</vue-row></div>',parameter:{data:function(){return{sortOptions:{group:"mysortable2",filter:".vue-note__content"},list1:[{id:11,name:"list1-test1"},{id:12,name:"list1-test2"}],list2:[{id:21,name:"list2-test1"}],list3:[]}},methods:{moveHandle:function(e){this.$notify({title:"moving item: "+e.draggedContext.element.name}),this.$notify({title:"move in list: "+e.relatedContext.component.$el.id})}}},code:'<vue-sortable id="list1" v-model="list1" :move="moveHandle" :options="sortOptions" style="border:1px solid;border-radius:1px;min-height:180px;">\n  <vue-note type="error" v-for="(element, index) in list1" :key="index">{{element.name}}</vue-note>\n</vue-sortable>\n<vue-sortable id="list2" v-model="list2" :move="moveHandle" :options="sortOptions" style="border:1px solid;border-radius:1px;min-height:180px;">\n  <vue-note v-for="(element, index) in list2" :key="index">{{element.name}}</vue-note>\n</vue-sortable>\n<vue-sortable id="list3" v-model="list3" :move="moveHandle" :options="sortOptions" style="border:1px solid;border-radius:1px;min-height:180px;">\n  <vue-note type="success" v-for="(element, index) in list3" :key="index">{{element.name}}</vue-note>\n</vue-sortable>\n<vue-row>list1: {{list1}}</vue-row>\n<vue-row>list2: {{list2}}</vue-row>\n<vue-row>list3: {{list3}}</vue-row>\n\n<script>\n  new Vue({\n    data: function(){\n      return {\n        sortOptions: {group: \'mysortable2\'},\n'+"        list1: [{ id: 11, name: 'list1-test1'}, { id: 12, name: 'list1-test2'}]\n        list2: [{ id: 21, name: 'list2-test1'}]\n        list3: []\n      }\n    },\n    methods: {\n      moveHandle: function(e) {\n        this.$notify({title: 'moving item: ' + e.draggedContext.element.name});\n        this.$notify({title: 'move in list: ' + e.relatedContext.component.$el.id});\n      }\n    }\n  }).$mount();\n<\/script>"},{id:"sortable3",label:"sortableDemo.samples3.label",description:"sortableDemo.samples3.description",template:'<div class="source"><vue-row><vue-col :span="8"><vue-sortable id="list1" v-model="list1" style="border: 1px solid;border-radius: 1px; min-height:180px;" :clone="cloneHandle" :options="sortOptions"><vue-note type="error" v-for="(element, index) in list1" :key="index" >{{element.name}}</vue-note></vue-sortable></vue-col><vue-col :span="8"><vue-sortable id="list2" v-model="list2" style="border: 1px solid;border-radius: 1px; min-height:180px;" :clone="cloneObjectHandle" :options="sortOptions"><vue-note v-for="(element, index) in list2" :key="index" >{{element.name}}</vue-note></vue-sortable></vue-col><vue-col :span="8"><vue-sortable id="list3" v-model="list3" style="border: 1px solid;border-radius: 1px; min-height:180px;" :clone="cloneObjectHandle" :options="sortOptions"><vue-note type="success" v-for="(element, index) in list3" :key="index" >{{element.name}}</vue-note></vue-sortable></vue-col></vue-row><vue-row>list1: {{list1}}</vue-row><vue-row>list2: {{list2}}</vue-row><vue-row>list3: {{list3}}</vue-row></div>',parameter:{data:function(){return{sortOptions:{group:{name:"mysortable3",pull:"clone"}},list1:[{id:11,name:"list1-test1"},{id:12,name:"list1-test2"}],list2:[{id:21,name:"list2-test1"}],list3:[]}},methods:{cloneHandle:function(e){return this.$notify({title:"Clone item: "+e.name}),e},cloneObjectHandle:function(e){return this.$notify({title:"Clone new object"}),{}}}},code:'<vue-sortable id="list1" v-model="list1" :clone="cloneHandle" :options="sortOptions" style="border:1px solid;border-radius:1px;min-height:180px;">\n  <vue-note type="error" v-for="(element, index) in list1" :key="index">{{element.name}}</vue-note>\n</vue-sortable>\n<vue-sortable id="list2" v-model="list2" :clone="cloneObjectHandle" :options="sortOptions" style="border:1px solid;border-radius:1px;min-height:180px;">\n  <vue-note v-for="(element, index) in list2" :key="index">{{element.name}}</vue-note>\n</vue-sortable>\n<vue-sortable id="list3" v-model="list3" :clone="cloneObjectHandle" :options="sortOptions" style="border:1px solid;border-radius:1px;min-height:180px;">\n  <vue-note type="success" v-for="(element, index) in list3" :key="index">{{element.name}}</vue-note>\n</vue-sortable>\n<vue-row>list1: {{list1}}</vue-row>\n<vue-row>list2: {{list2}}</vue-row>\n<vue-row>list3: {{list3}}</vue-row>\n\n<script>\n  new Vue({\n    data: function(){\n      return {\n'+"        sortOptions: {group: {name: 'mysortable3', pull: 'clone'}},\n        list1: [{ id: 11, name: 'list1-test1'}, { id: 12, name: 'list1-test2'}]\n        list2: [{ id: 21, name: 'list2-test1'}]\n        list3: []\n      }\n    },\n    methods: {\n      cloneHandle: function(original) {\n        this.$notify({title: 'Clone item: ' + original.name});\n        return original;\n      },\n      cloneObjectHandle: function(original) {\n        this.$notify({title: 'Clone new object'});\n        return {};\n      }\n    }\n  }).$mount();\n<\/script>"},{id:"sortable4",label:"Attributes",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"v-model",column2:"sortableDemo.samples4.row1column2",column3:"Array",column4:"",column5:""},{column1:"element",column2:"sortableDemo.samples4.row2column2",column3:"String",column4:"",column5:"div"},{column1:"clone",column2:"sortableDemo.samples4.row3column2",column3:"Function",column4:"",column5:"function(original) {return original;}"},{column1:"move",column2:"sortableDemo.samples4.row4column2",column3:"Function",column4:"",column5:""},{column1:"options",column2:"sortableDemo.samples4.row5column2",column3:"Object",column4:"",column5:""}]}}},notshowmeta:!0},{id:"sortable5",label:"Options",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"group",column2:"sortableDemo.samples5.row1column2",column3:"String / Object",column4:"",column5:""},{column1:"sort",column2:"sortableDemo.samples5.row2column2",column3:"Boolean",column4:"",column5:"true"},{column1:"delay",column2:"sortableDemo.samples5.row3column2",column3:"Number",column4:"",column5:"0"},{column1:"disabled",column2:"sortableDemo.samples5.row4column2",column3:"Function",column4:"",column5:"false"},{column1:"handle",column2:"sortableDemo.samples5.row5column2",column3:"String",column4:"",column5:"null"},{column1:"filter",column2:"sortableDemo.samples5.row6column2",column3:"String / Function",column4:"",column5:"null"},{column1:"ghostClass",column2:"sortableDemo.samples5.row7column2",column3:"String",column4:"",column5:""},{column1:"chosenClass",column2:"sortableDemo.samples5.row8column2",column3:"String",column4:"",column5:""}]}}},notshowmeta:!0},{id:"sortable6",label:"Group",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"name",column2:"sortableDemo.samples6.row1column2",column3:"String",column4:"",column5:""},{column1:"pull",column2:"sortableDemo.samples6.row2column2",column3:"Boolean / String / Function",column4:"true, false, 'clone', function",column5:"true"},{column1:"put",column2:"sortableDemo.samples6.row3column2",column3:"Boolean / Array / Function",column4:"",column5:"true"}]}}},notshowmeta:!0},{id:"sortable7",label:"Events",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"start",column2:"sortableDemo.samples7.row1column2",column3:"Event Object"},{column1:"add",column2:"sortableDemo.samples7.row2column2",column3:"Event Object"},{column1:"remove",column2:"sortableDemo.samples7.row3column2",column3:"Event Object"},{column1:"update",column2:"sortableDemo.samples7.row4column2",column3:"Event Object"},{column1:"end",column2:"sortableDemo.samples7.row5column2",column3:"Event Object"},{column1:"choose",column2:"sortableDemo.samples7.row6column2",column3:"Event Object"},{column1:"sort",column2:"sortableDemo.samples7.row7column2",column3:"Event Object"},{column1:"filter",column2:"sortableDemo.samples7.row8column2",column3:"Event Object"},{column1:"clone",column2:"sortableDemo.samples7.row9column2",column3:"Event Object"}]}}},notshowmeta:!0}]}},"./demo/StepsDemo.js":
/*!***************************!*\
  !*** ./demo/StepsDemo.js ***!
  \***************************/
/*! no static exports found */function(e,n,t){"use strict";e.exports={path:"/steps",name:"steps",head:{label:"stepsDemo.label",description:"stepsDemo.description"},samples:[{id:"steps1",label:"stepsDemo.samples1.label",description:"stepsDemo.samples1.description",template:'<div class="source"><vue-steps :space="200" :active="active" finish-status="success"><vue-step title="Step 1"></vue-step><vue-step title="Step 2"></vue-step><vue-step title="Step 3"></vue-step></vue-steps><vue-button style="margin-top: 12px;" @click="next">Next</vue-button></div>',parameter:{data:function(){return{active:0}},methods:{next:function(e,n){this.active++>2&&(this.active=0)}}},code:'<vue-steps :space="200" :active="active" finish-status="success">\n  <vue-step title="Step 1"></vue-step>\n  <vue-step title="Step 2"></vue-step>\n  <vue-step title="Step 3"></vue-step>\n</vue-steps>\n<vue-button style="margin-top: 12px;" @click="next">Next</vue-button>\n\n<script>\n  new Vue({\n    data: function() {\n      return {\n        active: 0\n      }\n    },\n    methods: {\n      next: function() {\n        if (this.active++ > 2) this.active = 0;\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"steps2",label:"stepsDemo.samples2.label",description:"stepsDemo.samples2.description",template:'<div class="source"><vue-steps :space="250" :active="1"><vue-step><span slot="title">Step 1</span><span>Some description</span></vue-step><vue-step title="Step 2"><vue-button>Button</vue-button></vue-step><vue-step title="Step 3"><vue-button type="primary" icon="vue-icon-search">Search</vue-button></vue-step></vue-steps></div>',code:'<vue-steps :space="250" :active="1">\n  <vue-step>\n    <span slot="title">Step 1</span>\n    <span>Some description</span>\n  </vue-step>\n  <vue-step title="Step 2">\n    <vue-button>Button</vue-button>\n  </vue-step>\n  <vue-step title="Step 3">\n    <vue-button type="primary" icon="vue-icon-search">Search</vue-button>\n  </vue-step>\n</vue-steps>'},{id:"steps3",label:"stepsDemo.samples3.label",description:"stepsDemo.samples3.description",template:'<div class="source"><vue-steps :space="250" :active="1" ><vue-step title="Step 1" icon="vue-icon-edit"></vue-step><vue-step title="Step 2" icon="vue-icon-upload"></vue-step><vue-step title="Step 3" icon="vue-icon-picture"></vue-step></vue-steps></div>',code:'<vue-steps :space="250" :active="1">\n  <vue-step title="Step 1" icon="vue-icon-edit">\n  </vue-step>\n  <vue-step title="Step 2" icon="vue-icon-upload">\n  </vue-step>\n  <vue-step title="Step 3" icon="vue-icon-picture">\n  </vue-step>\n</vue-steps>'},{id:"steps4",label:"stepsDemo.samples4.label",description:"stepsDemo.samples4.description",template:'<div class="source"><vue-steps :space="100" :active="1" direction="vertical"><vue-step><span slot="title">Step 1</span><span>Some description</span></vue-step><vue-step title="Step 2"><vue-button>Button</vue-button></vue-step><vue-step title="Step 3"><vue-button type="primary" icon="vue-icon-search">Search</vue-button></vue-step></vue-steps></div>',code:'<vue-steps :space="100" :active="1" direction="vertical">\n  <vue-step>\n    <span slot="title">Step 1</span>\n    <span>Some description</span>\n  </vue-step>\n  <vue-step title="Step 2">\n    <vue-button>Button</vue-button>\n  </vue-step>\n  <vue-step title="Step 3">\n    <vue-button type="primary" icon="vue-icon-search">Search</vue-button>\n  </vue-step>\n</vue-steps>'},{id:"steps5",label:"Steps Attributes",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"space",column2:"stepsDemo.samples5.row1column2",column3:"Number / String",column4:"",column5:""},{column1:"direction",column2:"stepsDemo.samples5.row2column2",column3:"String",column4:"vertical, horizontal",column5:"horizontal"},{column1:"active",column2:"stepsDemo.samples5.row3column2",column3:"Number",column4:"",column5:"0"},{column1:"process-status",column2:"stepsDemo.samples5.row4column2",column3:"String",column4:"wait, process, finish, error, success",column5:"process"},{column1:"finish-status",column2:"stepsDemo.samples5.row5column2",column3:"String",column4:"wait, process, finish, error, success",column5:"finish"},{column1:"align-center",column2:"stepsDemo.samples5.row6column2",column3:"Boolean",column4:"",column5:"false"},{column1:"center",column2:"stepsDemo.samples5.row7column2",column3:"Boolean",column4:"",column5:"false"}]}}},notshowmeta:!0},{id:"steps6",label:"Step Attributes",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"title",column2:"stepsDemo.samples6.row1column2",column3:"String",column4:"",column5:""},{column1:"icon",column2:"stepsDemo.samples6.row2column2",column3:"String",column4:"",column5:""},{column1:"status",column2:"stepsDemo.samples6.row3column2",column3:"String",column4:"wait, process, finish, error, success",column5:""}]}}},notshowmeta:!0},{id:"steps7",label:"Slots",template:'<slot-table :data="tableData"></slot-table>',parameter:{data:function(){return{tableData:[{column1:"",column2:"stepsDemo.samples7.row1column2"},{column1:"title",column2:"stepsDemo.samples7.row2column2"}]}}},notshowmeta:!0}]}},"./demo/SwitchDemo.js":
/*!****************************!*\
  !*** ./demo/SwitchDemo.js ***!
  \****************************/
/*! no static exports found */function(e,n,t){"use strict";e.exports={path:"/switch",name:"switch",head:{label:"switchDemo.label",description:"switchDemo.description"},samples:[{id:"switch1",label:"switchDemo.samples1.label",description:"switchDemo.samples1.description",template:'<div class="source"><vue-row><vue-col :span="4"><vue-switch v-model="value1" on-text="Open" off-text="" :width="70" @change="changeHandle"></vue-switch></vue-col><vue-col :span="4"><vue-switch v-model="value2" on-color="#13ce66" off-color="#ff4949"></vue-switch></vue-col></vue-row></div>',parameter:{data:function(){return{value1:!0,value2:!1}},methods:{changeHandle:function(e){this.$notify({title:e.toString()})}}},code:'<vue-switch v-model="value1" on-text="Open" off-text="" :width="70" @change="changeHandle"></vue-switch>\n<vue-switch v-model="value2" on-color="#13ce66" off-color="#ff4949"></vue-switch>\n\n<script>\n  new Vue({\n    data: function() {\n      return {\n        value1: true,\n        value2: false\n      };\n    },\n    methods: {\n      changeHandle: function(val) {\n        this.$notify({title: val.toString()});\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"switch2",label:"switchDemo.samples2.label",description:"switchDemo.samples2.description",template:'<div class="source"><vue-row><vue-col :span="4"><vue-switch v-model="value1" disabled></vue-switch></vue-col><vue-col :span="4"><vue-switch v-model="value2" disabled></vue-switch></vue-col></vue-row></div>',parameter:{data:function(){return{value1:!0,value2:!1}}},code:'<vue-switch v-model="value1" disabled></vue-switch>\n<vue-switch v-model="value2" disabled></vue-switch>\n\n<script>\n  new Vue({\n    data: function(){\n      return {\n        value1: true,\n        value2: false\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"switch3",label:"Attributes",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"disabled",column2:"switchDemo.samples3.row1column2",column3:"Boolean",column4:"",column5:"false"},{column1:"width",column2:"switchDemo.samples3.row2column2",column3:"Number",column4:"",column5:"switchDemo.samples3.row2column5"},{column1:"on-icon-class",column2:"switchDemo.samples3.row3column2",column3:"String",column4:"",column5:""},{column1:"off-icon-class",column2:"switchDemo.samples3.row4column2",column3:"String",column4:"",column5:""},{column1:"on-text",column2:"switchDemo.samples3.row5column2",column3:"String",column4:"",column5:"ON"},{column1:"off-text",column2:"switchDemo.samples3.row6column2",column3:"String",column4:"",column5:"OFF"},{column1:"on-color",column2:"switchDemo.samples3.row7column2",column3:"String",column4:"",column5:"#20A0FF"},{column1:"off-color",column2:"switchDemo.samples3.row8column2",column3:"String",column4:"",column5:"#C0CCDA"},{column1:"name",column2:"switchDemo.samples3.row9column2",column3:"String",column4:"",column5:""}]}}},notshowmeta:!0},{id:"switch4",label:"Events",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"change",column2:"switchDemo.samples4.row1column2",column3:"value after changing"}]}}},notshowmeta:!0}]}},"./demo/SyntaxHighlighter.js":
/*!***********************************!*\
  !*** ./demo/SyntaxHighlighter.js ***!
  \***********************************/
/*! no static exports found */function(e,n,t){var l=t(/*! ./XRegExp */"./demo/XRegExp.js"),o=function(){var e={defaults:{"class-name":"","first-line":1,"pad-line-numbers":!1,highlight:null,title:null,"smart-tabs":!0,"tab-size":4,gutter:!0,toolbar:!0,"quick-code":!1,collapse:!1,"auto-links":!0,light:!1,"html-script":!1},config:{space:"&nbsp;",useScriptTags:!0,bloggerMode:!1,stripBrs:!1,tagName:"pre",strings:{expandSource:"expand source",help:"?",alert:"SyntaxHighlighter\n\n",noBrush:"Can't find brush for: ",brushNotHtmlScript:"Brush wasn't configured for html-script option: ",aboutDialog:"@ABOUT@"}},vars:{discoveredBrushes:null,highlighters:{}},brushes:{},regexLib:{multiLineCComments:/\/\*[\s\S]*?\*\//gm,singleLineCComments:/\/\/.*$/gm,singleLinePerlComments:/#.*$/gm,doubleQuotedString:/"([^\\"\n]|\\.)*"/g,singleQuotedString:/'([^\\'\n]|\\.)*'/g,multiLineDoubleQuotedString:new l('"([^\\\\"]|\\\\.)*"',"gs"),multiLineSingleQuotedString:new l("'([^\\\\']|\\\\.)*'","gs"),xmlComments:/(&lt;|<)!--[\s\S]*?--(&gt;|>)/gm,url:/\w+:\/\/[\w-.\/?%&=:@;]*/g,phpScriptTags:{left:/(&lt;|<)\?=?/g,right:/\?(&gt;|>)/g},aspScriptTags:{left:/(&lt;|<)%=?/g,right:/%(&gt;|>)/g},scriptScriptTags:{left:/(&lt;|<)\s*script.*?(&gt;|>)/gi,right:/(&lt;|<)\/\s*script\s*(&gt;|>)/gi}},toolbar:{getHtml:function(n){var t='<div class="toolbar">',l=e.toolbar.items,o=l.list;function a(n,t){return e.toolbar.getButtonHtml(n,t,e.config.strings[t])}for(var i=0;i<o.length;i++)t+=(l[o[i]].getHtml||a)(n,o[i]);return t+="</div>"},getButtonHtml:function(e,n,t){return'<span><a href="#" class="toolbar_item command_'+n+" "+n+'">'+t+"</a></span>"},handler:function(n){var t=n.target,l=t.className||"";var o=a(u(t,".syntaxhighlighter").id),i=function(e){var n=new RegExp(e+"_(\\w+)").exec(l);return n?n[1]:null}("command");o&&i&&e.toolbar.items[i].execute(o),n.preventDefault()},items:{list:["expandSource","help"],expandSource:{getHtml:function(n){if(1!=n.getParam("collapse"))return"";var t=n.getParam("title");return e.toolbar.getButtonHtml(n,"expandSource",t||e.config.strings.expandSource)},execute:function(e){n(function(e){return document.getElementById(o(e))}(e.id),"collapsed")}},help:{execute:function(n){var t=function(e,n,t,l,o){var a=(screen.width-t)/2,i=(screen.height-l)/2;o=(o+=", left="+a+", top="+i+", width="+t+", height="+l).replace(/^,/,"");var u=window.open(e,n,o);return u.focus(),u}("","_blank",500,250,"scrollbars=0"),l=t.document;l.write(e.config.strings.aboutDialog),l.close(),t.focus()}}}},findElements:function(n,t){var l=t?[t]:function(e){for(var n=[],t=0;t<e.length;t++)n.push(e[t]);return n}(document.getElementsByTagName(e.config.tagName)),o=[];if(e.config.useScriptTags&&(l=l.concat(function(){for(var e=document.getElementsByTagName("script"),n=[],t=0;t<e.length;t++)"syntaxhighlighter"==e[t].type&&n.push(e[t]);return n}())),0===l.length)return o;for(var a=0;a<l.length;a++){var i={target:l[a],params:r(n,b(l[a].className))};null!=i.params.brush&&o.push(i)}return o},highlight:function(n,t){var l=this.findElements(n,t),o=null,a=e.config;if(0!==l.length)for(var i=0;i<l.length;i++){var u,r=(t=l[i]).target,m=t.params,c=m.brush;if(null!=c){if("true"==m["html-script"]||1==e.defaults["html-script"])o=new e.HtmlScript(c),c="htmlscript";else{var d=s(c);if(!d)continue;o=new d}u=r.innerHTML,a.useScriptTags&&(u=g(u)),""!=(r.title||"")&&(m.title=r.title),m.brush=c,o.init(m),t=o.getDiv(u),""!=(r.id||"")&&(t.id=r.id),r.parentNode.replaceChild(t,r)}}},all:function(n){m(window,"load",function(){e.highlight(n)})}};function n(e,n){e.className=e.className.replace(n,"")}function t(e){return e.split("\n")}function o(e){return 0==e.indexOf("highlighter_")?e:"highlighter_"+e}function a(n){return e.vars.highlighters[o(n)]}function i(e,n,t){if(null==e)return null;var l,o,a=1!=t?e.childNodes:[e.parentNode],u={"#":"id",".":"className"}[n.substr(0,1)]||"nodeName";if(l="nodeName"!=u?n.substr(1):n.toUpperCase(),-1!=(e[u]||"").indexOf(l))return e;for(var r=0;a&&r<a.length&&null==o;r++)o=i(a[r],n,t);return o}function u(e,n){return i(e,n,!0)}function r(e,n){var t,l={};for(t in e)l[t]=e[t];for(t in n)l[t]=n[t];return l}function m(e,n,t,l){function o(e){(e=e||window.event).target||(e.target=e.srcElement,e.preventDefault=function(){this.returnValue=!1}),t.call(l||window,e)}e.attachEvent?e.attachEvent("on"+n,o):e.addEventListener(n,o,!1)}function c(n){window.alert(e.config.strings.alert+n)}function s(n,t){var l,o=e.vars.discoveredBrushes;if(null==o){for(var a in o={},e.brushes){var i=e.brushes[a],u=i.aliases;if(null!=u){i.brushName=a.toLowerCase();for(var r=0;r<u.length;r++)o[u[r]]=a}}e.vars.discoveredBrushes=o}return null==(l=e.brushes[o[n]])&&0!=t&&c(e.config.strings.noBrush+n),l}function d(e,n){for(var l=t(e),o=0;o<l.length;o++)l[o]=n(l[o],o);return l.join("\n")}function b(e){for(var n,t={},o=new l("^\\[(?<values>(.*?))\\]$"),a=new l("(?<name>[\\w-]+)\\s*:\\s*(?<value>[\\w-%#]+|\\[.*?\\]|\".*?\"|'.*?')\\s*;?","g");null!=(n=a.exec(e));){var i=n.value.replace(/^['"]|['"]$/g,"");if(null!=i&&o.test(i)){var u=o.exec(i);i=u.values.length>0?u.values.split(/\s*,\s*/):[]}t[n.name]=i}return t}function p(n,t){return null==n||0==n.length||"\n"==n?n:(n=(n=n.replace(/</g,"&lt;")).replace(/ {2,}/g,function(n){for(var t="",l=0;l<n.length-1;l++)t+=e.config.space;return t+" "}),null!=t&&(n=d(n,function(e){if(0==e.length)return"";var n="";return 0==(e=e.replace(/^(&nbsp;| )+/,function(e){return n=e,""})).length?n:n+'<code class="'+t+'">'+e+"</code>"})),n)}function v(e,n){for(var t=e.toString();t.length<n;)t="0"+t;return t}function h(e){return e.replace(/^\s+|\s+$/g,"")}function f(n){for(var l=t(function(n){var t=/<br\s*\/?>|&lt;br\s*\/?&gt;/gi;return 1==e.config.bloggerMode&&(n=n.replace(t,"\n")),1==e.config.stripBrs&&(n=n.replace(t,"")),n}(n)),o=(new Array,/^\s*/),a=1e3,i=0;i<l.length&&a>0;i++){var u=l[i];if(0!=h(u).length){var r=o.exec(u);if(null==r)return n;a=Math.min(r[0].length,a)}}if(a>0)for(i=0;i<l.length;i++)l[i]=l[i].substr(a);return l.join("\n")}function w(e,n){return e.index<n.index?-1:e.index>n.index?1:e.length<n.length?-1:e.length>n.length?1:0}function x(n,t){for(var l=null,o=[],a=t.func?t.func:function(e,n){return e[0]};null!=(l=t.regex.exec(n));){var i=a(l,t);"string"==typeof i&&(i=[new e.Match(i,l.index,t.css)]),o=o.concat(i)}return o}function g(e){var n=h(e),t=!1,l="<![CDATA[".length,o="]]>".length;0==n.indexOf("<![CDATA[")&&(n=n.substring(l),t=!0);var a=n.length;return n.indexOf("]]>")==a-o&&(n=n.substring(0,a-o),t=!0),t?n:e}function D(e){var t=e.target,l=u(t,".syntaxhighlighter"),o=u(t,".container"),r=document.createElement("textarea");if(o&&l&&!i(o,"textarea")){a(l.id),function(e,n){(function(e,n){return-1!=e.className.indexOf(n)})(e,n)||(e.className+=" "+n)}(l,"source");for(var c=o.childNodes,s=[],d=0;d<c.length;d++)s.push(c[d].innerText||c[d].textContent);s=s.join("\r"),r.appendChild(document.createTextNode(s)),o.appendChild(r),r.focus(),r.select(),m(r,"blur",function(e){r.parentNode.removeChild(r),n(l,"source")})}}return e.Match=function(e,n,t){this.value=e,this.index=n,this.length=e.length,this.css=t,this.brushName=null},e.Match.prototype.toString=function(){return this.value},e.HtmlScript=function(n){var t,l=s(n),o=new e.brushes.Xml,a=this,i="getDiv getHtml init".split(" ");if(null!=l){t=new l;for(var u=0;u<i.length;u++)!function(){var e=i[u];a[e]=function(){return o[e].apply(o,arguments)}}();null!=t.htmlScript?o.regexList.push({regex:t.htmlScript.code,func:function(e,n){for(var o,a=e.code,i=[],u=t.regexList,m=e.index+e.left.length,c=t.htmlScript,s=0;s<u.length;s++)r(o=x(a,u[s]),m),i=i.concat(o);null!=c.left&&null!=e.left&&(r(o=x(e.left,c.left),e.index),i=i.concat(o));null!=c.right&&null!=e.right&&(r(o=x(e.right,c.right),e.index+e[0].lastIndexOf(e.right)),i=i.concat(o));for(var d=0;d<i.length;d++)i[d].brushName=l.brushName;return i}}):c(e.config.strings.brushNotHtmlScript+n)}function r(e,n){for(var t=0;t<e.length;t++)e[t].index+=n}},e.Highlighter=function(){},e.Highlighter.prototype={getParam:function(e,n){var t=this.params[e];return function(e){var n={true:!0,false:!1}[e];return null==n?e:n}(null==t?n:t)},create:function(e){return document.createElement(e)},findMatches:function(e,n){var t=[];if(null!=e)for(var l=0;l<e.length;l++)"object"==typeof e[l]&&(t=t.concat(x(n,e[l])));return this.removeNestedMatches(t.sort(w))},removeNestedMatches:function(e){for(var n=0;n<e.length;n++)if(null!==e[n])for(var t=e[n],l=t.index+t.length,o=n+1;o<e.length&&null!==e[n];o++){var a=e[o];if(null!==a){if(a.index>l)break;a.index==t.index&&a.length>t.length?e[n]=null:a.index>=t.index&&a.index<l&&(e[o]=null)}}return e},figureOutLineNumbers:function(e){var n=[],t=parseInt(this.getParam("first-line"));return d(e,function(e,l){n.push(l+t)}),n},isLineHighlighted:function(e){var n=this.getParam("highlight",[]);return"object"!=typeof n&&null==n.push&&(n=[n]),-1!=function(e,n,t){for(var l=t=Math.max(t||0,0);l<e.length;l++)if(e[l]==n)return l;return-1}(n,e.toString())},getLineHtml:function(e,n,t){var l=["line","number"+n,"index"+e,"alt"+(n%2==0?1:2).toString()];return this.isLineHighlighted(n)&&l.push("highlighted"),0==n&&l.push("break"),'<div class="'+l.join(" ")+'">'+t+"</div>"},getLineNumbersHtml:function(n,l){var o="",a=t(n).length,i=parseInt(this.getParam("first-line")),u=this.getParam("pad-line-numbers");1==u?u=(i+a-1).toString().length:1==isNaN(u)&&(u=0);for(var r=0;r<a;r++){var m=l?l[r]:i+r;n=0==m?e.config.space:v(m,u);o+=this.getLineHtml(r,m,n)}return o},getCodeLinesHtml:function(n,l){for(var o=t(n=h(n)),a=(this.getParam("pad-line-numbers"),parseInt(this.getParam("first-line"))),i=(n="",this.getParam("brush")),u=0;u<o.length;u++){var r=o[u],m=/^(&nbsp;|\s)+/.exec(r),c=null,s=l?l[u]:a+u;null!=m&&(c=m[0].toString(),r=r.substr(c.length),c=c.replace(" ",e.config.space)),0==(r=h(r)).length&&(r=e.config.space),n+=this.getLineHtml(u,s,(null!=c?'<code class="'+i+' spaces">'+c+"</code>":"")+r)}return n},getTitleHtml:function(e){return e?"<caption>"+e+"</caption>":""},getMatchesHtml:function(e,n){var t=0,l="",o=this.getParam("brush","");function a(e){var n=e&&e.brushName||o;return n?n+" ":""}for(var i=0;i<n.length;i++){var u,r=n[i];null!==r&&0!==r.length&&(u=a(r),l+=p(e.substr(t,r.index-t),u+"plain")+p(r.value,u+r.css),t=r.index+r.length+(r.offset||0))}return l+=p(e.substr(t),a()+"plain")},getHtml:function(n){var l,a,i,u,r="",m=["syntaxhighlighter"];return 1==this.getParam("light")&&(this.params.toolbar=this.params.gutter=!1),1==this.getParam("collapse")&&m.push("collapsed"),0==(u=this.getParam("gutter"))&&m.push("nogutter"),m.push(this.getParam("class-name")),m.push(this.getParam("brush")),n=function(e){return e.replace(/^[ ]*[\n]+|[\n]*[ ]*$/g,"")}(n).replace(/\r/g," "),l=this.getParam("tab-size"),n=f(n=1==this.getParam("smart-tabs")?function(e,n){t(e);for(var l="",o=0;o<50;o++)l+="\t\t\t\t ";function a(e,n,t){return e.substr(0,n)+l.substr(0,t)+e.substr(n+1,e.length)}return e=d(e,function(e){if(-1==e.indexOf("\t"))return e;for(var t=0;-1!=(t=e.indexOf("\t"));)e=a(e,t,n-t%n);return e})}(n,l):function(e,n){for(var t="",l=0;l<n;l++)t+=" ";return e.replace(/\t/g,t)}(n,l)),u&&(i=this.figureOutLineNumbers(n)),a=this.findMatches(this.regexList,n),r=this.getMatchesHtml(n,a),r=this.getCodeLinesHtml(r,i),this.getParam("auto-links")&&(r=function(n){var t=/(.*)((&gt;|&lt;).*)/;return n.replace(e.regexLib.url,function(e){var n,l="";return(n=t.exec(e))&&(e=n[1],l=n[2]),'<a href="'+e+'">'+e+"</a>"+l})}(r)),"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.match(/MSIE/)&&m.push("ie"),r='<div id="'+o(this.id)+'" class="'+m.join(" ")+'">'+(this.getParam("toolbar")?e.toolbar.getHtml(this):"")+'<table border="0" cellpadding="0" cellspacing="0">'+this.getTitleHtml(this.getParam("title"))+"<tbody><tr>"+(u?'<td class="gutter">'+this.getLineNumbersHtml(n)+"</td>":"")+'<td class="code"><div class="container">'+r+"</div></td></tr></tbody></table></div>"},getDiv:function(n){null===n&&(n=""),this.code=n;var t=this.create("div");return t.innerHTML=this.getHtml(n),this.getParam("toolbar")&&m(i(t,".toolbar"),"click",e.toolbar.handler),this.getParam("quick-code")&&m(i(t,".code"),"dblclick",D),t},init:function(n){this.id=function(e){return(e||"")+Math.round(1e6*Math.random()).toString()}(),function(n){e.vars.highlighters[o(n.id)]=n}(this),this.params=r(e.defaults,n||{}),1==this.getParam("light")&&(this.params.toolbar=this.params.gutter=!1)},getKeywords:function(e){return"\\b(?:"+(e=e.replace(/^\s+|\s+$/g,"").replace(/\s+/g,"|"))+")\\b"},forHtmlScript:function(e){this.htmlScript={left:{regex:e.left,css:"script"},right:{regex:e.right,css:"script"},code:new l("(?<left>"+e.left.source+")(?<code>.*?)(?<right>"+e.right.source+")","sgi")}}},e}();e.exports=o},"./demo/TableDemo.js":
/*!***************************!*\
  !*** ./demo/TableDemo.js ***!
  \***************************/
/*! no static exports found */function(e,n,t){"use strict";var l={path:"/table",name:"table",head:{label:"tableDemo.label",description:"tableDemo.description"},samples:[{id:"table1",label:"tableDemo.samples1.label",description:"tableDemo.samples1.description",template:'<div class="source"><vue-table :data="tableData" border stripe style="width: 100%"><vue-table-column prop="date" label="Date" width="180"></vue-table-column><vue-table-column prop="name" label="Name" width="180"></vue-table-column><vue-table-column prop="address" label="Address"></vue-table-column></vue-table></div>',parameter:{data:function(){return{tableData:[{date:"2017-07-03",name:"Tom",address:"No. 189, Grove St, Los Angeles"},{date:"2018-08-02",name:"Tom",address:"No. 189, Grove St, Los Angeles"},{date:"2019-09-04",name:"Tom",address:"No. 189, Grove St, Los Angeles"},{date:"2020-10-01",name:"Tom",address:"No. 189, Grove St, Los Angeles"}]}}},code:'<vue-table :data="tableData" border stripe style="width: 100%">\n  <vue-table-column prop="date" label="Date" width="180"></vue-table-column>\n  <vue-table-column prop="name" label="Name" width="180"></vue-table-column>\n  <vue-table-column prop="address" label="Address"></vue-table-column>\n</vue-table>\n\n<script>\n  new Vue({\n    data: function() {\n      return {\n        tableData: [{\n          date: "2017-07-03",\n          name: "Tom",\n          address: "No. 189, Grove St, Los Angeles"\n        }, {\n          date: "2018-08-02",\n          name: "Tom",\n          address: "No. 189, Grove St, Los Angeles"\n        }, {\n          date: "2019-09-04",\n          name: "Tom",\n          address: "No. 189, Grove St, Los Angeles"\n        }, {\n          date: "2020-10-01",\n          name: "Tom",\n          address: "No. 189, Grove St, Los Angeles"\n        }]\n      };\n    }\n  }).$mount();\n<\/script>'},{id:"table2",label:"tableDemo.samples2.label",description:"tableDemo.samples2.description",template:'<div class="source"><vue-table :data="tableData" border style="width: 100%"><vue-table-column fixed prop="date" label="Date" width="150"></vue-table-column><vue-table-column prop="name" label="Name" width="100"></vue-table-column><vue-table-column prop="state" label="State" width="150"></vue-table-column><vue-table-column prop="city" label="City" width="150"></vue-table-column><vue-table-column prop="address" label="Address" width="300"></vue-table-column><vue-table-column prop="zip" label="Zip" width="120"></vue-table-column><vue-table-column fixed="right" label="Operations" width="150"><template slot-scope="scope"><vue-button @click="detailHandle" type="text" size="small">Detail</vue-button><vue-button @click="editHandle" type="text" size="small">Edit</vue-button></template></vue-table-column></vue-table></div>',parameter:{data:function(){return{tableData:[{date:"2016-05-03",name:"Tom",state:"California",city:"Los Angeles",address:"No. 189, Grove St, Los Angeles",zip:"CA 90036"},{date:"2016-05-02",name:"Tom",state:"California",city:"Los Angeles",address:"No. 189, Grove St, Los Angeles",zip:"CA 90036"},{date:"2016-05-04",name:"Tom",state:"California",city:"Los Angeles",address:"No. 189, Grove St, Los Angeles",zip:"CA 90036"},{date:"2016-05-01",name:"Tom",state:"California",city:"Los Angeles",address:"No. 189, Grove St, Los Angeles",zip:"CA 90036"}]}},methods:{detailHandle:function(){this.$notify({title:"Detail"})},editHandle:function(){this.$notify({title:"Edit"})}}},code:'<vue-table :data="tableData" border style="width: 100%">\n  <vue-table-column fixed prop="date" label="Date" width="150">\n  </vue-table-column>\n  <vue-table-column prop="name" label="Name" width="100">\n  </vue-table-column>\n  <vue-table-column prop="state" label="State" width="150">\n  </vue-table-column>\n  <vue-table-column prop="city" label="City" width="150">\n  </vue-table-column>\n  <vue-table-column prop="address" label="Address" width="300">\n  </vue-table-column>\n  <vue-table-column prop="zip" label="Zip" width="120">\n  </vue-table-column>\n  <vue-table-column fixed="right" label="Operations" width="150">\n    <template slot-scope="scope">\n      <vue-button @click="detailHandle" type="text" size="small">Detail</vue-button>\n      <vue-button @click="editHandle" type="text" size="small">Edit</vue-button>\n    </template>\n  </vue-table-column>\n</vue-table>\n\n<script>\n  new Vue({\n    data: function() {\n      return {\n        tableData: [{\n          date: "2016-05-03",\n          name: "Tom",\n          state: "California",\n          city: "Los Angeles",\n          address: "No. 189, Grove St, Los Angeles",\n          zip: "CA 90036"\n        }, {\n          date: "2016-05-02",\n          name: "Tom",\n          state: "California",\n          city: "Los Angeles",\n          address: "No. 189, Grove St, Los Angeles",\n          zip: "CA 90036"\n        }, {\n          date: "2016-05-04",\n          name: "Tom",\n          state: "California",\n          city: "Los Angeles",\n          address: "No. 189, Grove St, Los Angeles",\n          zip: "CA 90036"\n        }, {\n          date: "2016-05-01",\n          name: "Tom",\n          state: "California",\n          city: "Los Angeles",\n          address: "No. 189, Grove St, Los Angeles",\n          zip: "CA 90036"\n        }]\n      }\n    },\n    methods: {\n      detailHandle: function() {\n        this.$notify({title: "Detail"});\n      },\n      editHandle: function() {\n        this.$notify({title: "Edit"});\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"table3",label:"tableDemo.samples3.label",description:"tableDemo.samples3.description",template:'<div class="source"><vue-table :data="tableData" border stripe style="width: 100%"><vue-table-column label="Info" prop="id" width="200" label-class-name="table-demo"><template slot-scope="scope" slot="header"><vue-row><vue-col :span="24"><span>Info</span></vue-col></vue-row><vue-divider></vue-divider><vue-row><vue-col :span="12"><span>Info Id</span></vue-col><vue-col :span="12"><span>Info Name</span></vue-col></vue-row></template></vue-table-column><vue-table-column prop="name" width="200" label-colspan></vue-table-column><vue-table-column class-name="table-demo" label-class-name="table-demo"><template slot-scope="scope" slot="header"><vue-row><vue-col :span="12"><span>Shop Id</span></vue-col><vue-col :span="12"><span>Shop Name</span></vue-col></vue-row><vue-divider></vue-divider><vue-row><vue-col :span="24"><span>Shop Address</span></vue-col></vue-row></template><template slot-scope="scope"><vue-row><vue-col :span="12"><span>{{ scope.row.shopId }}</span></vue-col><vue-col :span="12"><span>{{ scope.row.shopName }}</span></vue-col></vue-row><vue-divider></vue-divider><vue-row><vue-col :span="24"><span>{{ scope.row.shopAddr }}</span></vue-col></vue-row></template></vue-table-column></vue-table></div>',parameter:{data:function(){return{tableData:[{id:"12987122",name:"Tom",shopName:"Los Angeles",shopId:"10332",shopAddr:"No. 189, Grove St, Los Angeles"},{id:"12987123",name:"Tom",shopName:"Los Angeles",shopId:"10333",shopAddr:"No. 189, Grove St, Los Angeles"},{id:"12987125",name:"Tom",shopName:"Los Angeles",shopId:"10331",shopAddr:"No. 189, Grove St, Los Angeles"}]}}},code:'<vue-table :data="tableData" border stripe style="width: 100%">\n  <vue-table-column label="Info" prop="id" width="200" label-class-name="table-demo">\n    <template slot-scope="scope" slot="header">\n      <vue-row>\n        <vue-col :span="24">\n          <span>Info</span></vue-col>\n      </vue-row>\n      <vue-divider></vue-divider>\n      <vue-row>\n        <vue-col :span="12">\n          <span>Info Id</span></vue-col>\n        <vue-col :span="12">\n          <span>Info Name</span></vue-col>\n      </vue-row>\n    </template>\n  </vue-table-column>\n  <vue-table-column prop="name" width="200" label-colspan></vue-table-column>\n  <vue-table-column class-name="table-demo" label-class-name="table-demo">\n    <template slot-scope="scope" slot="header">\n      <vue-row>\n        <vue-col :span="12">\n          <span>Shop Id</span></vue-col>\n        <vue-col :span="12">\n          <span>Shop Name</span></vue-col>\n      </vue-row>\n      <vue-divider></vue-divider>\n      <vue-row>\n        <vue-col :span="24">\n          <span>Shop Address</span></vue-col>\n      </vue-row>\n    </template>\n    <template slot-scope="scope">\n      <vue-row>\n        <vue-col :span="12">\n          <span>{{ scope.row.shopId }}</span></vue-col>\n        <vue-col :span="12">\n          <span>{{ scope.row.shopName }}</span></vue-col>\n      </vue-row>\n      <vue-divider></vue-divider>\n      <vue-row>\n        <vue-col :span="24">\n          <span>{{ scope.row.shopAddr }}</span></vue-col>\n      </vue-row>\n    </template>\n  </vue-table-column>\n</vue-table>\n\n<style>\n  .table-demo .cell {\n    padding: 0;\n  }\n  .table-demo .vue-col {\n    padding: 0 18px;\n    height: 30px;\n    line-height: 30px;\n  }\n  .table-demo .vue-col + .vue-col {\n    border-left: 1px solid rgb(223, 230, 236);\n  }\n</style>\n\n<script>\n  new Vue({\n     data: function() {\n      return {\n        tableData: [{\n          id: "12987122",\n          name: "Tom",\n          shopName: "Los Angeles",\n          shopId: "10332",\n          shopAddr: "No. 189, Grove St, Los Angeles"\n        }, {\n          id: "12987123",\n          name: "Tom",\n          shopName: "Los Angeles",\n          shopId: "10333",\n          shopAddr: "No. 189, Grove St, Los Angeles"\n        }, {\n          id: "12987125",\n          name: "Tom",\n          shopName: "Los Angeles",\n          shopId: "10331",\n          shopAddr: "No. 189, Grove St, Los Angeles"\n        }]\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"table4",label:"tableDemo.samples4.label",description:"",template:'<div class="source"><vue-table :data="tableData" border style="width: 100%"><vue-table-column label="Operations" width="160"><template slot-scope="scope"><vue-button @click="editHandle(scope.row)" type="primary" icon="vue-icon-edit"></vue-button><vue-button @click="delHandle(scope.row)" type="primary" icon="vue-icon-delete"></vue-button></template></vue-table-column><vue-table-column prop="city" label="City" width="150"></vue-table-column><vue-table-column prop="name" label="Name" width="120"></vue-table-column><vue-table-column prop="address" label="Address" ></vue-table-column></vue-table><vue-button @click="addHandle" >Add Row</vue-button><vue-dialog  v-model="dialogVisible"><vue-form :model="currentData" label-width="100px" ><vue-form-item label="City" prop="city"><vue-input v-model="currentData.city"></vue-input></vue-form-item><vue-form-item label="Name" prop="name"><vue-input v-model="currentData.name"></vue-input></vue-form-item><vue-form-item label="Address" prop="address"><vue-input v-model="currentData.address"></vue-input></vue-form-item></vue-form><span slot="footer" class="dialog-footer"><vue-button @click="dialogVisible = false">Cancel</vue-button><vue-button type="primary" @click="saveHandle">OK</vue-button></span></vue-dialog></div>',parameter:{data:function(){return{tableData:[{name:"Tom",city:"Los Angeles",address:"No. 189, Grove St, Los Angeles"},{name:"Mac",city:"Los Alamos",address:"No. 199, Grove St, Los Angeles"},{name:"Jesse",city:"Los Angeles",address:"No. 188, Grove St, Los Angeles"}],currentIndex:-1,currentData:{},dialogVisible:!1}},methods:{addHandle:function(){this.currentData={},this.currentIndex=this.tableData.length,this.dialogVisible=!0},editHandle:function(e){this.currentData=VueUtil.merge({},e),this.currentIndex=this.tableData.indexOf(e),this.dialogVisible=!0},delHandle:function(e){var n=this.tableData.indexOf(e);this.tableData.splice(n,1)},saveHandle:function(){Vue.set(this.tableData,this.currentIndex,this.currentData),this.dialogVisible=!1}}},code:'<vue-table :data="tableData" border style="width: 100%">\n  <vue-table-column label="Operations" width="160">\n    <template slot-scope="scope">\n      <vue-button @click="editHandle(scope.row)" type="primary" icon="vue-icon-edit"></vue-button>\n      <vue-button @click="delHandle(scope.row)" type="primary" icon="vue-icon-delete"></vue-button>\n    </template>\n  </vue-table-column>\n  <vue-table-column prop="date" label="Date" width="150">\n  </vue-table-column>\n  <vue-table-column prop="name" label="Name" width="120">\n  </vue-table-column>\n  <vue-table-column prop="address" label="Address" width="300">\n  </vue-table-column>\n</vue-table>\n<vue-button @click="addHandle" >Add Row</vue-button>\n<vue-dialog v-model="dialogVisible">\n  <vue-form :model="currentData" label-width="100px" >\n    <vue-form-item label="City" prop="city">\n      <vue-input v-model="currentData.city"></vue-input>\n    </vue-form-item>\n    <vue-form-item label="Name" prop="name">\n      <vue-input v-model="currentData.name"></vue-input>\n    </vue-form-item>\n    <vue-form-item label="Address" prop="address">\n      <vue-input v-model="currentData.address"></vue-input>\n    </vue-form-item>\n  </vue-form>\n  <span slot="footer" class="dialog-footer">\n    <vue-button @click="dialogVisible = false">Cancel</vue-button>\n    <vue-button type="primary" @click="saveHandle">OK</vue-button>\n  </span>\n</vue-dialog>\n\n<script>\n  new Vue({\n    data: function() {\n      return {\n        tableData: [{\n          name: "Tom",\n          city: "Los Angeles",\n          address: "No. 189, Grove St, Los Angeles",\n        }, {\n          name: "Mac",\n          city: "Los Alamos",\n          address: "No. 199, Grove St, Los Angeles",\n        }, {\n          name: "Jesse",\n          city: "Los Angeles",\n          address: "No. 188, Grove St, Los Angeles",\n        }],\n        currentIndex: -1,\n        currentData: {},\n        dialogVisible: false\n      }\n    },\n    methods: {\n      addHandle: function() {\n        this.currentData = {};\n        this.currentIndex = this.tableData.length;\n        this.dialogVisible = true;\n      },\n      editHandle: function(rowData) {\n        this.currentData = VueUtil.merge({}, rowData);\n        this.currentIndex = this.tableData.indexOf(rowData);\n        this.dialogVisible = true;\n      },\n      delHandle: function(rowData) {\n        var index = this.tableData.indexOf(rowData);\n        this.tableData.splice(index, 1);\n      },\n      saveHandle: function() {\n        Vue.set(this.tableData, this.currentIndex, this.currentData);\n        this.dialogVisible = false;\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"table5",label:"tableDemo.samples5.label",description:"tableDemo.samples5.description",template:'<div class="source"><vue-table  ref="singleTable" :data="tableData" border stripe style="width: 100%" :default-sort = "[{prop: \'column1\', order: \'descending\'}]"><vue-table-column v-for="item in 5" :key="item" :prop="\'column\'+item" :label="\'column\'+item" min-width="150" sortable ></vue-table-column></vue-table><vue-button @click="clearSortsHandel">Clear Sorts</vue-button></div>',parameter:{data:function(){return{tableData:null}},methods:{clearSortsHandel:function(){this.$refs.singleTable.clearSorts()}},mounted:function(){for(var e=[],n=0;n<5;n++){for(var t={},l=1;l<6;l++)t["column"+l]="value-"+l+"-"+(n+1);e[n]=t}this.tableData=e}},code:'<vue-table ref="singleTable" :data="tableData" border stripe style="width: 100%" :default-sort = "[{prop: \'column1\', order: \'descending\'}]">\n  <vue-table-column v-for="item in 5" :key="item" :prop="\'column\'+item" :label="\'column\'+item" min-width="150" sortable >\n  </vue-table-column>\n</vue-table>\n<vue-button @click="clearSortsHandel">Clear Sorts</vue-button>\n\n<script>\n  new Vue({\n    data: function(){\n      return {\n        tableData: null\n      }\n    },\n    method: {\n      clearSortsHandel: function() {\n        this.$refs.singleTable.clearSorts();\n      }\n    },\n    mounted: function() {\n      var tableData = [];\n      for (var i = 0; i < 5; i++) {\n        var DateOption = {};\n        for (var j = 1; j < 6; j++) {\n          DateOption[\'column\'+j] = "value-"+j+"-"+(i+1);\n        }\n        tableData[i] = DateOption;\n      }\n      this.tableData = tableData;\n    }\n  }).$mount();\n<\/script>'},{id:"table6",label:"tableDemo.samples6.label",description:"tableDemo.samples6.description",template:'<div class="source"><vue-table :data="tableData" border stripe style="width: 100%" ref="singleTable"><vue-table-column v-for="item in 3" :key="item" :prop="\'column\'+item" :label="\'column\'+item" min-width="150" ></vue-table-column><vue-table-column prop="column4" label="column4" min-width="150" filterable :filters="[{ text: \'V41\', value: \'value-4-1\' }, { text: \'V43\', value: \'value-4-3\' }]"></vue-table-column><vue-table-column prop="column5" label="column5" min-width="150" filterable></vue-table-column></vue-table><vue-button @click="clearFiltersHandel">Clear Filters</vue-button></div>',parameter:{data:function(){return{tableData:null}},methods:{clearFiltersHandel:function(){this.$refs.singleTable.clearFilters()}},mounted:function(){for(var e=[],n=0;n<5;n++){for(var t={},l=1;l<6;l++)t["column"+l]="value-"+l+"-"+(n+1);e[n]=t}this.tableData=e}},code:'<vue-table ref="singleTable" :data="tableData" border stripe style="width: 100%">\n  <vue-table-column v-for="item in 3" :key="item" :prop="\'column\'+item" :label="\'column\'+item" min-width="150" >\n  </vue-table-column>\n  <vue-table-column filterable :filters="[{ text: \'V41\', value: \'value-4-1\' }, { text: \'V43\', value: \'value-4-3\' }]" prop="column4" label="column4" min-width="150">\n  </vue-table-column>\n  <vue-table-column filterable prop="column5" label="column5" min-width="150">\n  </vue-table-column>\n</vue-table>\n<vue-button @click="clearFiltersHandel">Clear Filters</vue-button></div>\n\n<script>\n  new Vue({\n    data: function(){\n      return {\n        tableData: null\n      }\n    },\n    method: {\n      clearFiltersHandel: function() {\n        this.$refs.singleTable.clearFilters();\n      }\n    },\n    mounted: function() {\n      var tableData = [];\n      for (var i = 0; i < 5; i++) {\n        var DateOption = {};\n        for (var j = 1; j < 6; j++) {\n          DateOption[\'column\'+j] = "value-"+j+"-"+(i+1);\n        }\n        tableData[i] = DateOption;\n      }\n      this.tableData = tableData;\n    }\n  }).$mount();\n<\/script>'},{id:"table7",label:"tableDemo.samples7.label",description:"tableDemo.samples7.description",template:'<div class="source"><vue-table :data="tableData" border stripe style="width: 100%" :row-class-name=\'getRowClass\'><vue-table-column v-for="item in 4" :key="item" :prop="\'column\'+item" :label="\'column\'+item" min-width="150" :class-name=\'getCellClass\'></vue-table-column><vue-table-column prop="column5" label="column5" min-width="150"></vue-table-column></vue-table><br/><vue-table :data="tableData" border stripe style="width: 100%" row-class-name="rowClass1"><vue-table-column v-for="item in 4" :key="item" :prop="\'column\'+item" :label="\'column\'+item" min-width="150" class-name="cellClass" label-class-name="rowClass cellClass1"></vue-table-column><vue-table-column prop="column5" label="column5" min-width="150"></vue-table-column></vue-table></div>',parameter:{data:function(){return{tableData:null}},methods:{getRowClass:function(e,n){return n%2==0?"rowClass1":"rowClass"},getCellClass:function(e,n,t){return e%2==0&&n%2==0?"cellClass1":e%2!=0&&n%2!=0?"cellClass":void 0}},mounted:function(){for(var e=[],n=0;n<5;n++){for(var t={},l=1;l<6;l++)t["column"+l]="value-"+l+"-"+(n+1);e[n]=t}this.tableData=e}},code:'<vue-table :data="tableData" border stripe style="width: 100%" :row-class-name="getRowClass">\n  <vue-table-column v-for="item in 4" :key="item" :prop="\'column\'+item" :label="\'column\'+item" min-width="150" :class-name="getCellClass">\n  </vue-table-column>\n  <vue-table-column prop="column5" label="column5" min-width="150">\n  </vue-table-column>\n</vue-table>\n\n<vue-table :data="tableData" border stripe style="width: 100%" row-class-name="rowClass1">\n  <vue-table-column v-for="item in 4" :key="item" :prop="\'column\'+item" :label="\'column\'+item" min-width="150" class-name="cellClass" label-class-name="rowClass cellClass1">\n  </vue-table-column>\n  <vue-table-column prop="column5" label="column5" min-width="150">\n  </vue-table-column>\n</vue-table>\n\n<style>\n  .rowClass {\n    color: #f00 !important;\n  }\n  .rowClass1 {\n    color: #00f !important;\n  }\n  .cellClass {\n    background-color: #ff0 !important;\n  }\n  .cellClass1 {\n    background-color: #0ff !important;\n  }\n</style>\n\n<script>\n  new Vue({\n    data: function(){\n      return {\n        tableData: null\n      }\n    },\n    methods: {\n      getRowClass: function(rowData, rowIndex) {\n        if (rowIndex%2 === 0) {\n          return "rowClass1"\n        }\n        return "rowClass"\n      },\n      getCellClass: function(rowIndex, cellIndex, rowData) {\n        if (rowIndex%2 === 0 && cellIndex%2 === 0) {\n          return "cellClass1"\n        }\n        if (rowIndex%2 !== 0 && cellIndex%2 !== 0) {\n          return "cellClass"\n        }\n      }\n    },\n    mounted: function() {\n      var tableData = [];\n      for (var i = 0; i < 5; i++) {\n        var DateOption = {};\n        for (var j = 1; j < 6; j++) {\n          DateOption[\'column\'+j] = "value-"+j+"-"+(i+1);\n        }\n        tableData[i] = DateOption;\n      }\n      this.tableData = tableData;\n    }\n  }).$mount();\n<\/script>'},{id:"table8",label:"tableDemo.samples8.label",description:"tableDemo.samples8.description",template:'<div class="source"><vue-table :data="tableData" style="width: 100%" :expand-class-name="getExpandClass"><vue-table-column type="expand"><template slot-scope="scope"><p>State: {{ scope.row.state }}</p><p>City: {{ scope.row.city }}</p><p>Address: {{ scope.row.address }}</p><p>Zip: {{ scope.row.zip }}</p></template></vue-table-column><vue-table-column label="Date" prop="date" header-align="left"></vue-table-column><vue-table-column label="Name" prop="name" header-align="left"></vue-table-column></vue-table></div>',parameter:{data:function(){return{tableData:[{date:"2017-05-03",name:"Tom",state:"California",city:"Los Angeles",address:"No. 189, Grove St, Los Angeles",zip:"CA 90036"},{date:"2017-06-02",name:"Tom",state:"California",city:"Los Angeles",address:"No. 189, Grove St, Los Angeles",zip:"CA 90036"},{date:"2017-07-04",name:"Tom",state:"California",city:"Los Angeles",address:"No. 189, Grove St, Los Angeles",zip:"CA 90036"}]}},methods:{getExpandClass:function(e,n){return n%2==0?"rowClass1":"rowClass"}}},code:'<vue-table :data="tableData" style="width: 100%" :expand-class-name="getExpandClass">\n  <vue-table-column type="expand">\n    <template slot-scope="scope">\n      <p>State: {{ scope.row.state }}</p>\n      <p>City: {{ scope.row.city }}</p>\n      <p>Address: {{ scope.row.address }}</p>\n      <p>Zip: {{ scope.row.zip }}</p>\n    </template>\n  </vue-table-column>\n  <vue-table-column label="Date" prop="date" header-align="left"></vue-table-column>\n  <vue-table-column label="Name" prop="name" header-align="left"></vue-table-column>\n</vue-table>\n\n<style>\n  .rowClass {\n    color: #f00 !important;\n  }\n  .rowClass1 {\n    color: #00f !important;\n  }\n</style>\n\n<script>\n  new Vue({\n    data: function(){\n      return {\n        tableData: [{\n          date: "2017-05-03",\n          name: "Tom",\n          state: "California",\n          city: "Los Angeles",\n          address: "No. 189, Grove St, Los Angeles",\n          zip: "CA 90036",\n        }, {\n          date: "2017-06-02",\n          name: "Tom",\n          state: "California",\n          city: "Los Angeles",\n          address: "No. 189, Grove St, Los Angeles",\n          zip: "CA 90036",\n        }, {\n          date: "2017-07-04",\n          name: "Tom",\n          state: "California",\n          city: "Los Angeles",\n          address: "No. 189, Grove St, Los Angeles",\n          zip: "CA 90036",\n        }]\n      }\n    },\n    methods: {\n      getExpandClass: function(rowData, rowIndex) {\n        if (rowIndex%2 === 0) {\n          return "rowClass1"\n        }\n        return "rowClass"\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"table14",label:"tableDemo.samples14.label",description:"tableDemo.samples14.description",template:'<div class="source"><vue-table :data="tableData" highlight-current-row ref="singleTable" @current-change="handleCurrentChange" style="width: 100%"><vue-table-column type="index" width="50"></vue-table-column><vue-table-column prop="date" label="Date" width="180"></vue-table-column><vue-table-column prop="name" label="Name" width="180"></vue-table-column><vue-table-column prop="address" label="Address"></vue-table-column></vue-table><vue-button-group><vue-button @click="setCurrent(tableData[1])">Select second row</vue-button><vue-button @click="setCurrent(null)">Clear selection</vue-button></vue-button-group></div>',parameter:{data:function(){return{tableData:[{date:"2017-07-03",name:"Tom",address:"No. 189, Grove St, Los Angeles"},{date:"2018-08-02",name:"Tom",address:"No. 189, Grove St, Los Angeles"},{date:"2019-09-04",name:"Tom",address:"No. 189, Grove St, Los Angeles"},{date:"2020-10-01",name:"Tom",address:"No. 189, Grove St, Los Angeles"}]}},methods:{setCurrent:function(e){this.$refs.singleTable.setCurrentRow(e)},handleCurrentChange:function(e,n){this.$notify({title:"Select Data: "+JSON.stringify(e)}),this.$notify({title:"Old select Data: "+JSON.stringify(n)})}}},code:'<vue-table :data="tableData" highlight-current-row ref="singleTable" @current-change="handleCurrentChange" style="width: 100%">\n  <vue-table-column type="index" width="50"></vue-table-column>\n  <vue-table-column prop="date" label="Date" width="180"></vue-table-column>\n  <vue-table-column prop="name" label="Name" width="180"></vue-table-column>\n  <vue-table-column prop="address" label="Address"></vue-table-column>\n</vue-table>\n<vue-button-group>\n  <vue-button @click="setCurrent(tableData[1])">Select second row</vue-button>\n  <vue-button @click="setCurrent(null)">Clear selection</vue-button>\n</vue-button-group>\n\n<script>\n  new Vue({\n    data: function() {\n      return {\n        tableData: [{\n          date: "2017-07-03",\n          name: "Tom",\n          address: "No. 189, Grove St, Los Angeles"\n        }, {\n          date: "2018-08-02",\n          name: "Tom",\n          address: "No. 189, Grove St, Los Angeles"\n        }, {\n          date: "2019-09-04",\n          name: "Tom",\n          address: "No. 189, Grove St, Los Angeles"\n        }, {\n          date: "2020-10-01",\n          name: "Tom",\n          address: "No. 189, Grove St, Los Angeles"\n        }]\n      };\n    },\n    methods: {\n      setCurrent: function(row) {\n        this.$refs.singleTable.setCurrentRow(row);\n      },\n      handleCurrentChange: function(currentRow, oldCurrentRow) {\n        this.$notify({title: \'Select Data: \' + JSON.stringify(currentRow)});\n        this.$notify({title: \'Old select Data: \' + JSON.stringify(oldCurrentRow)});\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"table15",label:"tableDemo.samples15.label",description:"tableDemo.samples15.description",template:'<div class="source"><vue-table :data="tableData" ref="multipleTable" @selection-change="handleSlectionChange" style="width: 100%"><vue-table-column type="selection" width="50" align="center"></vue-table-column><vue-table-column prop="date" label="Date" width="180"></vue-table-column><vue-table-column prop="name" label="Name" width="180"></vue-table-column><vue-table-column prop="address" label="Address"></vue-table-column></vue-table><vue-button-group><vue-button @click="toggleSelection([tableData[1], tableData[2]])">Select second row</vue-button><vue-button @click="toggleSelection()">Clear selection</vue-button></vue-button-group></div>',parameter:{data:function(){return{tableData:[{date:"2017-07-03",name:"Tom",address:"No. 189, Grove St, Los Angeles"},{date:"2018-08-02",name:"Tom",address:"No. 189, Grove St, Los Angeles"},{date:"2019-09-04",name:"Tom",address:"No. 189, Grove St, Los Angeles"},{date:"2020-10-01",name:"Tom",address:"No. 189, Grove St, Los Angeles"}]}},methods:{toggleSelection:function(e){if(e){var n=this;e.forEach(function(e){n.$refs.multipleTable.toggleRowSelection(e)})}else this.$refs.multipleTable.clearSelection()},handleSlectionChange:function(e){this.$notify({title:"Select Data: "+JSON.stringify(e)})}}},code:'<vue-table :data="tableData" ref="singleTable" @selection-change="handleSlectionChange" style="width: 100%">\n  <vue-table-column type="selection" width="50" align="center"></vue-table-column>\n  <vue-table-column prop="date" label="Date" width="180"></vue-table-column>\n  <vue-table-column prop="name" label="Name" width="180"></vue-table-column>\n  <vue-table-column prop="address" label="Address"></vue-table-column>\n</vue-table>\n<vue-button-group>\n  <vue-button @click="toggleSelection([tableData[1], tableData[2]])">Select second row</vue-button>\n  <vue-button @click="toggleSelection()">Clear selection</vue-button>\n</vue-button-group>\n\n<script>\n  new Vue({\n    data: function() {\n      return {\n        tableData: [{\n          date: "2017-07-03",\n          name: "Tom",\n          address: "No. 189, Grove St, Los Angeles"\n        }, {\n          date: "2018-08-02",\n          name: "Tom",\n          address: "No. 189, Grove St, Los Angeles"\n        }, {\n          date: "2019-09-04",\n          name: "Tom",\n          address: "No. 189, Grove St, Los Angeles"\n        }, {\n          date: "2020-10-01",\n          name: "Tom",\n          address: "No. 189, Grove St, Los Angeles"\n        }]\n      };\n    },\n    methods: {\n      toggleSelection: function(rows) {\n        if (rows) {\n          var self = this;\n          rows.forEach(function(row) {\n            self.$refs.multipleTable.toggleRowSelection(row);\n          });\n        } else {\n          this.$refs.multipleTable.clearSelection();\n        }\n      },\n      handleSlectionChange: function(selectionRows) {\n        this.$notify({\n          title: "Select Data: " + JSON.stringify(selectionRows)\n        });\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"table16",label:"tableDemo.samples16.label",description:"tableDemo.samples16.description",template:'<div class="source"><vue-table :data="tableData" border show-footer style="width: 100%"><vue-table-column type="index" align="right"></vue-table-column><vue-table-column prop="cost1" label="Cost 1" min-width="150" align="right" aggregate="max"></vue-table-column><vue-table-column prop="cost2" label="Cost 2" min-width="150" align="right" aggregate="average"></vue-table-column><vue-table-column prop="cost3" label="Cost 3" min-width="150" align="right" aggregate="min"></vue-table-column><vue-table-column prop="cost4" label="Cost 4" min-width="150" align="right" aggregate="count"></vue-table-column></vue-table><br/><vue-table :data="tableData" border show-footer style="width: 100%"><vue-table-column type="index" width="150" align="right" aggregate-label="Sum"></vue-table-column><vue-table-column prop="cost1" label="Cost 1" min-width="150" align="right" aggregate="sum" aggregate-label=""></vue-table-column><vue-table-column prop="cost2" label="Cost 2" min-width="150" align="right" aggregate="sum" aggregate-label=""></vue-table-column><vue-table-column prop="cost3" label="Cost 3" min-width="150" align="right" aggregate="sum" aggregate-label=""></vue-table-column><vue-table-column prop="cost4" label="Cost 4" min-width="150" align="right" aggregate="sum" aggregate-label=""></vue-table-column></vue-table></div>',parameter:{data:function(){return{tableData:[{cost1:"234",cost2:"3.2",cost3:10,cost4:"value-1-1"},{cost1:"165",cost2:"4.43",cost3:12,cost4:"value-1-2"},{cost1:"324",cost2:"1.9",cost3:9,cost4:"value-1-3"},{cost1:"621",cost2:"2.2",cost3:17,cost4:"value-1-4"},{cost1:"539",cost2:"4.1",cost3:15,cost4:"value-1-5"}]}}},code:'<vue-table :data="tableData" border show-footer style="width: 100%">\n  <vue-table-column type="index" align="right"></vue-table-column>\n  <vue-table-column prop="cost1" label="Cost 1" min-width="150" align="right" aggregate="max"></vue-table-column>\n  <vue-table-column prop="cost2" label="Cost 2" min-width="150" align="right" aggregate="average"></vue-table-column>\n  <vue-table-column prop="cost3" label="Cost 3" min-width="150" align="right" aggregate="min"></vue-table-column>\n  <vue-table-column prop="cost4" label="Cost 4" min-width="150" align="right" aggregate="count"></vue-table-column>\n</vue-table>\n\n<vue-table :data="tableData" border show-footer style="width: 100%">\n  <vue-table-column type="index" width="150" align="right" aggregate-label="Sum"></vue-table-column>\n  <vue-table-column prop="cost1" label="Cost 1" min-width="150" align="right" aggregate="sum" aggregate-label=""></vue-table-column>\n  <vue-table-column prop="cost2" label="Cost 2" min-width="150" align="right" aggregate="sum" aggregate-label=""></vue-table-column>\n  <vue-table-column prop="cost3" label="Cost 3" min-width="150" align="right" aggregate="sum" aggregate-label=""></vue-table-column>\n  <vue-table-column prop="cost4" label="Cost 4" min-width="150" align="right" aggregate="sum" aggregate-label=""></vue-table-column>\n</vue-table>\n\n<script>\n  new Vue({\n    data: function() {\n      return {\n        tableData: [{\n          cost1: "234",\n          cost2: "3.2",\n          cost3: 10,\n          cost4: "value-1-1"\n        }, {\n          cost1: "165",\n          cost2: "4.43",\n          cost3: 12,\n          cost4: "value-1-2"\n        }, {\n          cost1: "324",\n          cost2: "1.9",\n          cost3: 9,\n          cost4: "value-1-3"\n        }, {\n          cost1: "621",\n          cost2: "2.2",\n          cost3: 17,\n          cost4: "value-1-4"\n        }, {\n          cost1: "539",\n          cost2: "4.1",\n          cost3: 15,\n          cost4: "value-1-5"\n        }]\n      };\n    }\n  }).$mount();\n<\/script>'},{id:"table17",label:"tableDemo.samples17.label",description:"tableDemo.samples17.description",template:'<div class="source"><vue-table :data="tableData" border stripe style="width: 100%"><vue-table-column v-for="item in 4" :key="item" :prop="\'column\'+item" :label="\'column\'+item" min-width="150" ></vue-table-column><vue-table-column prop="column5" label="column5" min-width="150" :visible="visible"></vue-table-column></vue-table><vue-button @click="showHiddenColumn">Show / Hidden Column5</vue-button></div>',parameter:{data:function(){return{tableData:null,visible:!0}},methods:{showHiddenColumn:function(){this.visible=!this.visible}},mounted:function(){for(var e=[],n=0;n<5;n++){for(var t={},l=1;l<6;l++)t["column"+l]="value-"+l+"-"+(n+1);e[n]=t}this.tableData=e}},code:'<vue-table :data="tableData" border stripe style="width: 100%">\n  <vue-table-column v-for="item in 4" :key="item" :prop="\'column\'+item" :label="\'column\'+item" min-width="150" >\n  </vue-table-column>\n  <vue-table-column prop="column5" label="column5" min-width="150" :visible="visible">\n  </vue-table-column>\n</vue-table>\n<vue-button @click="showHiddenColumn">Show / Hidden Column5</vue-button>\n\n<script>\n  new Vue({\n    data: function() {\n      return {\n        tableData: null,\n        visible: true\n      }\n    },\n    methods: {\n      showHiddenColumn: function() {\n        this.visible = !this.visible\n      }\n    },\n    mounted: function() {\n      var tableData = [];\n      for (var i = 0; i < 5; i++) {\n        var DateOption = {};\n        for (var j = 1; j < 6; j++) {\n          DateOption[\'column\' + j] = "value-" + j + "-" + (i + 1);\n        }\n        tableData[i] = DateOption;\n      }\n      this.tableData = tableData;\n    }\n  }).$mount();\n<\/script>'},{id:"table18",label:"tableDemo.samples18.label",description:"tableDemo.samples18.description",template:'<div class="source"><vue-table :data="tableData" border stripe style="width: 100%" context-menu ref="table"><vue-table-column v-for="item in 5" :key="item" :prop="\'column\'+item" :label="\'column\'+item" min-width="150" ></vue-table-column></vue-table><vue-button @click="contextMenuHandel">Context Menu</vue-button><vue-button @click="getUserSetting">getUserSetting</vue-button><vue-button @click="setUserSetting">setUserSetting</vue-button><vue-input type="textarea" :rows="6" v-model="us"></vue-input></div>',parameter:{data:function(){return{tableData:null,us:""}},methods:{contextMenuHandel:function(){this.$refs.table.toggleContextMenu()},getUserSetting:function(){this.us=JSON.stringify(this.$refs.table.getUserSetting())},setUserSetting:function(){this.$refs.table.setUserSetting(JSON.parse(this.us))}},mounted:function(){for(var e=[],n=0;n<5;n++){for(var t={},l=1;l<6;l++)t["column"+l]="value-"+l+"-"+(n+1);e[n]=t}this.tableData=e}},code:'<vue-table :data="tableData" border stripe style="width: 100%" context-menu ref="table">\n  <vue-table-column v-for="item in 5" :key="item" :prop="\'column\'+item" :label="\'column\'+item" min-width="150" >\n  </vue-table-column>\n</vue-table>\n<vue-button @click="contextMenuHandel">Context Menu</vue-button>\n<vue-button @click="getUserSetting">getUserSetting</vue-button>\n<vue-button @click="setUserSetting">setUserSetting</vue-button>\n<vue-input type="textarea" :rows="6" v-model="us"></vue-input>\n\n<script>\n  new Vue({\n    data: function() {\n      return {\n        tableData: null,\n        us: ""\n      }\n    },\n    methods: {\n      contextMenuHandel: function() {\n        this.$refs.table.toggleContextMenu();\n      }\n      getUserSetting: function() {\n        this.us = JSON.stringify(this.$refs.table.getUserSetting());\n      },\n      setUserSetting: function() {\n        this.$refs.table.setUserSetting(JSON.parse(this.us));\n      }\n    },\n    mounted: function() {\n      var tableData = [];\n      for (var i = 0; i < 5; i++) {\n        var DateOption = {};\n        for (var j = 1; j < 6; j++) {\n          DateOption[\'column\' + j] = "value-" + j + "-" + (i + 1);\n        }\n        tableData[i] = DateOption;\n      }\n      this.tableData = tableData;\n    }\n  }).$mount();\n<\/script>'},{id:"table19",label:"tableDemo.samples19.label",description:"tableDemo.samples19.description",template:'<div class="source"><vue-table :data="tableData" border stripe style="width: 100%" context-menu ref="table" height="300" highlight-current-row lazyload show-footer><vue-table-column v-for="item in 5" :key="item" :prop="\'column\'+item" :label="\'column\'+item" min-width="150" :aggregate="aggregate(item)" align="right"></vue-table-column></vue-table><vue-button @click="getData">Add 100 Rows</vue-button></div>',parameter:{data:function(){return{tableData:[]}},methods:{getData:function(){for(var e=this.tableData,n=100;n--;){for(var t={},l=1;l<=5;l++)t["column"+l]=(100*Math.random()).toFixed(2);e.push(t)}},aggregate:function(e){var n;switch(e){case 1:n="sum";break;case 2:n="average";break;case 3:n="min";break;case 4:n="max";break;case 5:n="count"}return n}},mounted:function(){this.getData()}},code:'<vue-table :data="tableData" height="300" lazyload highlight-current-row show-footer border stripe style="width: 100%" context-menu ref="table">\n  <vue-table-column v-for="item in 5" :key="item" :prop="\'column\'+item" :label="\'column\'+item" min-width="150" :aggregate="aggregate(item)" align="right">\n  </vue-table-column>\n</vue-table>\n<vue-button @click="getData">Add 100 Rows</vue-button>\n\n<script>\n  new Vue({\n    data: function() {\n      return {\n        tableData: []\n      }\n    },\n    methods: {\n      getData: function() {\n        var tableData = this.tableData;\n        var i = 100;\n        while (i--) {\n          var column = {};\n          for (var j = 1; j <= 5; j++) {\n            column["column" + j] = (Math.random()*100).toFixed(2);\n          }\n          tableData.push(column);\n        }\n      },\n      aggregate: function(item) {\n        var result;\n        switch (item) {\n          case 1:\n            result = "sum";\n            break;\n          case 2:\n            result = "average";\n            break;\n          case 3:\n            result = "min";\n            break;\n          case 4:\n            result = "max";\n            break;\n          case 5:\n            result = "count";\n            break;\n        }\n        return result;\n      }\n    },\n    mounted: function() {\n      this.getData();\n    }\n  }).$mount();\n<\/script>'},{id:"table20",label:"tableDemo.samples20.label",description:"tableDemo.samples20.description",template:'<div class="source"><vue-table :highlight-first-after-sort="highlightFirstAfterSort" :highlight-first-after-filter="highlightFirstAfterFilter" highlight-current-row :data="tableData" border stripe style="width: 100%" ref="singleTable"><vue-table-column v-for="item in 3" :key="item" :prop="\'column\'+item" :label="\'column\'+item" min-width="150" sortable></vue-table-column><vue-table-column prop="column4" label="column4" min-width="150" filterable :filters="[{ text: \'V41\', value: \'value-4-1\' }, { text: \'V43\', value: \'value-4-3\' }]"></vue-table-column><vue-table-column prop="column5" label="column5" min-width="150" filterable></vue-table-column></vue-table><vue-checkbox v-model="highlightFirstAfterSort">highlightFirstAfterSort</vue-checkbox><vue-checkbox v-model="highlightFirstAfterFilter">highlightFirstAfterFilter</vue-checkbox></div>',parameter:{data:function(){return{tableData:null,highlightFirstAfterSort:!1,highlightFirstAfterFilter:!1}},methods:{clearFiltersHandel:function(){this.$refs.singleTable.clearFilters()}},mounted:function(){for(var e=[],n=0;n<5;n++){for(var t={},l=1;l<6;l++)t["column"+l]="value-"+l+"-"+(n+1);e[n]=t}this.tableData=e}},code:'<vue-table ref="singleTable" :highlight-first-after-sort="highlightFirstAfterSort" :highlight-first-after-filter="highlightFirstAfterFilter" \n    highlight-current-row :data="tableData" border stripe style="width: 100%">\n  <vue-table-column v-for="item in 3" :key="item" :prop="\'column\'+item" :label="\'column\'+item" min-width="150" sortable>\n  </vue-table-column>\n  <vue-table-column filterable :filters="[{ text: \'V41\', value: \'value-4-1\' }, { text: \'V43\', value: \'value-4-3\' }]" prop="column4" label="column4" min-width="150">\n  </vue-table-column>\n  <vue-table-column filterable prop="column5" label="column5" min-width="150">\n  </vue-table-column>\n</vue-table>\n<vue-checkbox v-model="highlightFirstAfterSort">highlightFirstAfterSort</vue-checkbox>\n<vue-checkbox v-model="highlightFirstAfterFilter">highlightFirstAfterFilter</vue-checkbox>\n\n<script>\n  new Vue({\n    data: function(){\n      return {\n        tableData: null\n        highlightFirstAfterSort: false,\n        highlightFirstAfterFilter: false\n      }\n    },\n    method: {\n      clearFiltersHandel: function() {\n        this.$refs.singleTable.clearFilters();\n      }\n    },\n    mounted: function() {\n      var tableData = [];\n      for (var i = 0; i < 5; i++) {\n        var DateOption = {};\n        for (var j = 1; j < 6; j++) {\n          DateOption[\'column\'+j] = "value-"+j+"-"+(i+1);\n        }\n        tableData[i] = DateOption;\n      }\n      this.tableData = tableData;\n    }\n  }).$mount();\n<\/script>'},{id:"table9",label:"Table Attributes",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"data",column2:"tableDemo.samples9.row1column2",column3:"Array",column4:"",column5:""},{column1:"height",column2:"tableDemo.samples9.row2column2",column3:"Number",column4:"",column5:""},{column1:"lazyload",column2:"tableDemo.samples9.row17column2",column3:"Boolean",column4:"",column5:"false"},{column1:"stripe",column2:"tableDemo.samples9.row3column2",column3:"Boolean",column4:"",column5:"false"},{column1:"border",column2:"tableDemo.samples9.row4column2",column3:"Boolean",column4:"",column5:"false"},{column1:"fit",column2:"tableDemo.samples9.row5column2",column3:"Boolean",column4:"",column5:"true"},{column1:"show-header",column2:"tableDemo.samples9.row6column2",column3:"Boolean",column4:"",column5:"true"},{column1:"highlight-current-row",column2:"tableDemo.samples9.row7column2",column3:"Boolean",column4:"",column5:"false"},{column1:"highlight-hover-row",column2:"tableDemo.samples9.row18column2",column3:"Boolean",column4:"",column5:"true"},{column1:"highlight-first-after-filter",column2:"tableDemo.samples9.row19column2",column3:"Boolean",column4:"",column5:"false"},{column1:"highlight-first-after-sort",column2:"tableDemo.samples9.row20column2",column3:"Boolean",column4:"",column5:"false"},{column1:"row-class-name",column2:"tableDemo.samples9.row8column2",column3:"Function(row, index) / String",column4:"",column5:""},{column1:"empty-text",column2:"tableDemo.samples9.row9column2",column3:"String",column4:"",column5:"vue.table.emptyText"},{column1:"default-expand-all",column2:"tableDemo.samples9.row10column2",column3:"Boolean",column4:"",column5:"false"},{column1:"expand-class-name",column2:"tableDemo.samples9.row11column2",column3:"Function(row, index) / String",column4:"",column5:""},{column1:"default-sort",column2:"tableDemo.samples9.row12column2",column3:"Array",column4:"order: ascending, descending",column5:"tableDemo.samples9.row12column5"},{column1:"tooltip-effect",column2:"tableDemo.samples9.row13column2",column3:"String",column4:"dark, light",column5:"light"},{column1:"show-footer",column2:"tableDemo.samples9.row14column2",column3:"Boolean",column4:"",column5:"false"}]}}},notshowmeta:!0},{id:"table10",label:"Table Events",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"select",column2:"tableDemo.samples10.row1column2",column3:"selection, row"},{column1:"select-all",column2:"tableDemo.samples10.row2column2",column3:"selection"},{column1:"selection-change",column2:"tableDemo.samples10.row3column2",column3:"selection"},{column1:"cell-mouse-enter",column2:"tableDemo.samples10.row4column2",column3:"row, column, cell, event"},{column1:"cell-mouse-leave",column2:"tableDemo.samples10.row5column2",column3:"row, column, cell, event"},{column1:"cell-click",column2:"tableDemo.samples10.row6column2",column3:"row, column, cell, event"},{column1:"cell-dblclick",column2:"tableDemo.samples10.row7column2",column3:"row, column, cell, event"},{column1:"row-click",column2:"tableDemo.samples10.row8column2",column3:"row, event, column"},{column1:"row-contextmenu",column2:"tableDemo.samples10.row9column2",column3:"row, event"},{column1:"row-dblclick",column2:"tableDemo.samples10.row10column2",column3:"row, event"},{column1:"header-click",column2:"tableDemo.samples10.row11column2",column3:"column, event"},{column1:"header-dragend",column2:"tableDemo.samples10.row12column2",column3:"newWidth, oldWidth, column, event"},{column1:"sort-change",column2:"tableDemo.samples10.row13column2",column3:"{column, prop, order}"},{column1:"filter-change",column2:"tableDemo.samples10.row14column2",column3:"filters"},{column1:"current-change",column2:"tableDemo.samples10.row15column2",column3:"currentRow, oldCurrentRow"},{column1:"expand",column2:"tableDemo.samples10.row16column2",column3:"row, expanded"},{column1:"scroll-top",column2:"tableDemo.samples10.row17column2",column3:""},{column1:"scroll-bottom",column2:"tableDemo.samples10.row18column2",column3:""},{column1:"scroll-left",column2:"tableDemo.samples10.row19column2",column3:""},{column1:"scroll-right",column2:"tableDemo.samples10.row20column2",column3:""}]}}},notshowmeta:!0},{id:"table11",label:"Table Methods",template:'<method-table :data="tableData"></method-table>',parameter:{data:function(){return{tableData:[{column1:"getSelection",column2:"tableDemo.samples11.row11column2",column3:"selection"},{column1:"clearSelection",column2:"tableDemo.samples11.row1column2",column3:"selection"},{column1:"toggleRowSelection",column2:"tableDemo.samples11.row2column2",column3:"row, selected"},{column1:"setCurrentRow",column2:"tableDemo.samples11.row3column2",column3:"row"},{column1:"getCurrentRow",column2:"tableDemo.samples11.row8column2",column3:""},{column1:"toggleContextMenu",column2:"tableDemo.samples11.row4column2",column3:""},{column1:"columnFilter",column2:"tableDemo.samples11.row5column2",column3:"column, value"},{column1:"multipleColumnSort",column2:"tableDemo.samples11.row6column2",column3:"columnList"},{column1:"exportCsv",column2:"tableDemo.samples11.row7column2",column3:"tableDemo.samples11.row7column3"},{column1:"clearFilters",column2:"tableDemo.samples11.row9column2",column3:""},{column1:"clearSorts",column2:"tableDemo.samples11.row10column2",column3:""},{column1:"getUserSetting",column2:"tableDemo.samples11.row12column2",column3:""},{column1:"setUserSetting",column2:"tableDemo.samples11.row13column2",column3:""}]}}},notshowmeta:!0},{id:"table12",label:"slot-scope",template:'<slot-table :data="tableData"></slot-table>',parameter:{data:function(){return{tableData:[{column1:"",column2:"tableDemo.samples12.row1column2"},{column1:"header",column2:"tableDemo.samples12.row2column2"}]}}},notshowmeta:!0},{id:"table13",label:"Table Column Attributes",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"type",column2:"tableDemo.samples13.row1column2",column3:"String",column4:"selection, index, expand",column5:""},{column1:"label",column2:"tableDemo.samples13.row3column2",column3:"String",column4:"",column5:""},{column1:"prop",column2:"tableDemo.samples13.row4column2",column3:"String",column4:"",column5:""},{column1:"width",column2:"tableDemo.samples13.row5column2",column3:"String",column4:"",column5:""},{column1:"min-width",column2:"tableDemo.samples13.row6column2",column3:"String",column4:"",column5:""},{column1:"fixed",column2:"tableDemo.samples13.row7column2",column3:"Boolean / String",column4:"true, false, 'left', 'right'",column5:"false"},{column1:"render-header",column2:"tableDemo.samples13.row8column2",column3:"Function(createElement, {column, $index})",column4:"",column5:""},{column1:"sortable",column2:"tableDemo.samples13.row9column2",column3:"Boolean",column4:"",column5:"false"},{column1:"sort-method",column2:"tableDemo.samples13.row10column2",column3:"Function(a, b)",column4:"",column5:""},{column1:"resizable",column2:"tableDemo.samples13.row11column2",column3:"Boolean",column4:"",column5:"true"},{column1:"formatter",column2:"tableDemo.samples13.row12column2",column3:"Function(row, column, cellValue)",column4:"",column5:""},{column1:"show-overflow-tooltip",column2:"tableDemo.samples13.row13column2",column3:"Boolean",column4:"",column5:"false"},{column1:"align",column2:"tableDemo.samples13.row14column2",column3:"String",column4:"left, center, right",column5:"left"},{column1:"header-align",column2:"tableDemo.samples13.row15column2",column3:"String",column4:"left, center, right",column5:"center"},{column1:"class-name",column2:"tableDemo.samples13.row16column2",column3:"String / Function(rowIndex, cellIndex, row)",column4:"",column5:""},{column1:"label-class-name",column2:"tableDemo.samples13.row17column2",column3:"String",column4:"",column5:""},{column1:"selectable",column2:"tableDemo.samples13.row18column2",column3:"Function(row, index)",column4:"",column5:""},{column1:"filterable",column2:"tableDemo.samples13.row19column2",column3:"Boolean",column4:"",column5:"false"},{column1:"filters",column2:"tableDemo.samples13.row20column2",column3:"Array",column4:"",column5:""},{column1:"filter-method",column2:"tableDemo.samples13.row22column2",column3:"Function(value, row)",column4:"",column5:""},{column1:"visible",column2:"tableDemo.samples13.row23column2",column3:"Boolean",column4:"",column5:"true"},{column1:"aggregate",column2:"tableDemo.samples13.row24column2",column3:"String",column4:"sum, count, average, min, max",column5:""},{column1:"aggregate-label",column2:"tableDemo.samples13.row25column2",column3:"String",column4:"",column5:""},{column1:"print-label",column2:"tableDemo.samples13.row26column2",column3:"String",column4:"",column5:""},{column1:"label-colspan",column2:"tableDemo.samples13.row27column2",column3:"Boolean",column4:"",column5:"false"},{column1:"rowspan",column2:"tableDemo.samples13.row28column2",column3:"Boolean",column4:"",column5:"false"}]}}},notshowmeta:!0}]};e.exports=l},"./demo/TabsDemo.js":
/*!**************************!*\
  !*** ./demo/TabsDemo.js ***!
  \**************************/
/*! no static exports found */function(e,n,t){"use strict";e.exports={path:"/tabs",name:"tabs",head:{label:"tabsDemo.label",description:"tabsDemo.description"},samples:[{id:"tabs1",label:"tabsDemo.samples1.label",description:"tabsDemo.samples1.description",template:'<div class="source"><vue-tabs v-model="activeName" @tab-click="handleClick"><vue-tab-pane label="User" name="first">User</vue-tab-pane><vue-tab-pane label="Config" name="second">Config</vue-tab-pane><vue-tab-pane label="Role" name="third">Role</vue-tab-pane><vue-tab-pane label="Task" name="fourth">Task</vue-tab-pane></vue-tabs></div>',parameter:{data:function(){return{activeName:"second"}},methods:{handleClick:function(e,n){this.$notify({title:e.name,message:n.target.innerText})}}},code:'<vue-tabs v-model="activeName" @tab-click="handleClick">\n  <vue-tab-pane label="User" name="first">User</vue-tab-pane>\n  <vue-tab-pane label="Config" name="second">Config</vue-tab-pane>\n  <vue-tab-pane label="Role" name="third">Role</vue-tab-pane>\n  <vue-tab-pane label="Task" name="fourth">Task</vue-tab-pane>\n</vue-tabs>\n\n<script>\n  new Vue({\n    data: function() {\n      return {\n        activeName: "second"\n      }\n    },\n    methods: {\n      handleClick: function(tab, event) {\n        this.$notify({\n          title: tab.name,\n          message: event.target.innerText\n        })\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"tabs2",label:"tabsDemo.samples2.label",description:"tabsDemo.samples2.description",template:'<div class="source"><vue-tabs type="card"><vue-tab-pane label="User">User</vue-tab-pane><vue-tab-pane label="Config">Config</vue-tab-pane><vue-tab-pane label="Role">Role</vue-tab-pane><vue-tab-pane label="Task">Task</vue-tab-pane></vue-tabs></div>',code:'<vue-tabs type="card">\n  <vue-tab-pane label="User">User</vue-tab-pane>\n  <vue-tab-pane label="Config">Config</vue-tab-pane>\n  <vue-tab-pane label="Role">Role</vue-tab-pane>\n  <vue-tab-pane label="Task">Task</vue-tab-pane>\n</vue-tabs>'},{id:"tabs3",label:"tabsDemo.samples3.label",description:"tabsDemo.samples3.description",template:'<div class="source"><vue-tabs type="border-card"><vue-tab-pane label="User">User</vue-tab-pane><vue-tab-pane label="Config">Config</vue-tab-pane><vue-tab-pane label="Role">Role</vue-tab-pane><vue-tab-pane label="Task">Task</vue-tab-pane></vue-tabs></div>',code:'<vue-tabs type="border-card">\n  <vue-tab-pane label="User">User</vue-tab-pane>\n  <vue-tab-pane label="Config">Config</vue-tab-pane>\n  <vue-tab-pane label="Role">Role</vue-tab-pane>\n  <vue-tab-pane label="Task">Task</vue-tab-pane>\n</vue-tabs>'},{id:"tabs4",label:"tabsDemo.samples4.label",description:"tabsDemo.samples4.description",template:'<div class="source"><vue-tabs><vue-tab-pane><span slot="label">User<i style="margin-left:5px;" class="vue-icon-information"></i></span>User</vue-tab-pane><vue-tab-pane label="Config">Config</vue-tab-pane><vue-tab-pane label="Role">Role</vue-tab-pane><vue-tab-pane label="Task">Task</vue-tab-pane></vue-tabs></div>',code:'<vue-tabs>\n  <vue-tab-pane>\n    <span slot="label">\n      User\n      <i style="margin-left:5px;" class="vue-icon-information"></i>\n    </span>\n    User\n  </vue-tab-pane>\n  <vue-tab-pane label="Config">Config</vue-tab-pane>\n  <vue-tab-pane label="Role">Role</vue-tab-pane>\n  <vue-tab-pane label="Task">Task</vue-tab-pane>\n</vue-tabs>'},{id:"tabs5",label:"tabsDemo.samples5.label",template:'<div class="source"><vue-tabs v-model="editableTabsValue" type="card" editable @edit="handleTabsEdit"><vue-tab-pane v-for="(item, index) in editableTabs" :key="item.name" :label="item.title" :name="item.name">{{item.content}}</vue-tab-pane></vue-tabs></div>',parameter:{data:function(){return{editableTabsValue:"2",editableTabs:[{title:"Tab 1",name:"1",content:"Tab 1 content"},{title:"Tab 2",name:"2",content:"Tab 2 content"}],tabIndex:2}},methods:{handleTabsEdit:function(e,n){if("add"===n){var t=++this.tabIndex+"";this.editableTabs.push({title:"Tab "+t,name:t,content:"Tab "+t+" content"}),this.editableTabsValue=t}if("remove"===n){var l=this.editableTabs,o=this.editableTabsValue;o===e&&l.forEach(function(n,t){if(n.name===e){var a=l[t+1]||l[t-1];a&&(o=a.name)}}),this.editableTabsValue=o,this.editableTabs=l.filter(function(n){return n.name!==e})}}}},code:'<vue-tabs v-model="editableTabsValue" type="card" editable @edit="handleTabsEdit">\n  <vue-tab-pane v-for="(item, index) in editableTabs" :key="index" :label="item.title" :name="item.name">\n    {{item.content}}\n  </vue-tab-pane>\n</vue-tabs>\n\n<script>\n  new Vue({\n     data: function() {\n       return {\n         editableTabsValue: "2",\n         editableTabs: [{\n           title: "Tab 1",\n           name: "1",\n           content: "Tab 1 content"\n         }, {\n           title: "Tab 2",\n           name: "2",\n           content: "Tab 2 content"\n         }],\n         tabIndex: 2\n       }\n     },\n     methods: {\n       handleTabsEdit: function(targetName, action) {\n         if (action === "add") {\n           var newTabName = ++this.tabIndex + "";\n           this.editableTabs.push({\n             title: "Tab " + newTabName,\n             name: newTabName,\n             content: "Tab " + newTabName + " content"\n           });\n           this.editableTabsValue = newTabName;\n         }\n         if (action === "remove") {\n           var tabs = this.editableTabs;\n           var activeName = this.editableTabsValue;\n           if (activeName === targetName) {\n             tabs.forEach(function(tab, index) {\n               if (tab.name === targetName) {\n                 var nextTab = tabs[index + 1] || tabs[index - 1];\n                 if (nextTab) {\n                   activeName = nextTab.name;\n                 }\n               }\n             });\n           }\n           this.editableTabsValue = activeName;\n           this.editableTabs = tabs.filter(function(tab) {\n             return tab.name !== targetName\n           });\n         }\n       }\n     }\n  }).$mount();\n<\/script>'},{id:"tabs6",label:"tabsDemo.samples6.label",template:'<div class="source"><div style="margin-bottom: 20px;"><vue-button size="small" @click="addTab(editableTabsValue)">add tab</vue-button></div><vue-tabs v-model="editableTabsValue" type="card" closable @tab-remove="removeTab"><vue-tab-pane v-for="(item, index) in editableTabs" :key="item.name" :label="item.title" :name="item.name">{{item.content}}</vue-tab-pane></vue-tabs></div>',parameter:{data:function(){return{editableTabsValue:"2",editableTabs:[{title:"Tab 1",name:"1",content:"Tab 1 content"},{title:"Tab 2",name:"2",content:"Tab 2 content"}],tabIndex:2}},methods:{addTab:function(){var e=++this.tabIndex+"";this.editableTabs.push({title:"Tab "+e,name:e,content:"Tab "+e+" content"}),this.editableTabsValue=e},removeTab:function(e){var n=this.editableTabs,t=this.editableTabsValue;t===e&&n.forEach(function(l,o){if(l.name===e){var a=n[o+1]||n[o-1];a&&(t=a.name)}}),this.editableTabsValue=t,this.editableTabs=n.filter(function(n){return n.name!==e})}}},code:'<div style="margin-bottom: 20px;">\n  <vue-button size="small" @click="addTab(editableTabsValue)">add tab</vue-button>\n</div>\n<vue-tabs v-model="editableTabsValue" type="card" closable @tab-remove="removeTab">\n  <vue-tab-pane v-for="(item, index) in editableTabs" :key="index" :label="item.title" :name="item.name">\n    {{item.content}}\n  </vue-tab-pane>\n</vue-tabs>\n\n<script>\n  new Vue({\n    data: function() {\n      return {\n        editableTabsValue: "2",\n        editableTabs: [{\n          title: "Tab 1",\n          name: "1",\n          content: "Tab 1 content"\n        }, {\n          title: "Tab 2",\n          name: "2",\n          content: "Tab 2 content"\n        }],\n        tabIndex: 2\n      }\n    },\n    methods: {\n      addTab: function() {\n        var newTabName = ++this.tabIndex + "";\n        this.editableTabs.push({\n          title: "Tab " + newTabName,\n          name: newTabName,\n          content: "Tab " + newTabName + " content"\n        });\n        this.editableTabsValue = newTabName;\n      },\n      removeTab: function(targetName) {\n        var tabs = this.editableTabs;\n        var activeName = this.editableTabsValue;\n        if (activeName === targetName) {\n          tabs.forEach(function(tab, index) {\n            if (tab.name === targetName) {\n              var nextTab = tabs[index + 1] || tabs[index - 1];\n              if (nextTab) {\n                activeName = nextTab.name;\n              }\n            }\n          });\n        }\n        this.editableTabsValue = activeName;\n        this.editableTabs = tabs.filter(function(tab) {\n          return tab.name !== targetName\n        });\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"tabs10",label:"tabsDemo.samples10.label",description:"tabsDemo.samples10.description",template:'<div class="source"><vue-tabs type="border-card" tab-bottom><vue-tab-pane label="User">User</vue-tab-pane><vue-tab-pane label="Config">Config</vue-tab-pane><vue-tab-pane label="Role">Role</vue-tab-pane><vue-tab-pane label="Task">Task</vue-tab-pane></vue-tabs></div>',code:'<vue-tabs type="border-card" tab-bottom>\n  <vue-tab-pane label="User">User</vue-tab-pane>\n  <vue-tab-pane label="Config">Config</vue-tab-pane>\n  <vue-tab-pane label="Role">Role</vue-tab-pane>\n  <vue-tab-pane label="Task">Task</vue-tab-pane>\n</vue-tabs>'},{id:"tabs7",label:"Tabs Attributes",template:'<attr-table class="api" :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"type",column2:"tabsDemo.samples7.row1column2",column3:"String",column4:"card/border-card",column5:""},{column1:"closable",column2:"tabsDemo.samples7.row2column2",column3:"Boolean",column4:"",column5:"false"},{column1:"addable",column2:"tabsDemo.samples7.row3column2",column3:"Boolean",column4:"",column5:"false"},{column1:"editable",column2:"tabsDemo.samples7.row4column2",column3:"Boolean",column4:"",column5:"false"},{column1:"tab-bottom",column2:"tabsDemo.samples7.row6column2",column3:"Boolean",column4:"",column5:"false"},{column1:"value(v-model)",column2:"tabsDemo.samples7.row5column2",column3:"String",column4:"",column5:"tabsDemo.samples7.row5column5"}]}}},notshowmeta:!0},{id:"tabs8",label:"Tabs Events",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"tab-click",column2:"tabsDemo.samples8.row1column2",column3:"tabsDemo.samples8.row1column3"},{column1:"tab-remove",column2:"tabsDemo.samples8.row2column2",column3:"tabsDemo.samples8.row2column3"},{column1:"tab-add",column2:"tabsDemo.samples8.row3column2",column3:""},{column1:"edit",column2:"tabsDemo.samples8.row4column2",column3:"tabsDemo.samples8.row4column3"}]}}},notshowmeta:!0},{id:"tabs9",label:"Tab-pane Attributes",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"label",column2:"tabsDemo.samples9.row1column2",column3:"String",column4:"",column5:""},{column1:"disabled",column2:"tabsDemo.samples9.row2column2",column3:"Boolean",column4:"",column5:"false"},{column1:"name",column2:"tabsDemo.samples9.row3column2",column3:"Boolean",column4:"",column5:""},{column1:"closable",column2:"tabsDemo.samples9.row4column2",column3:"Boolean",column4:"",column5:"false"}]}}},notshowmeta:!0}]}},"./demo/TagDemo.js":
/*!*************************!*\
  !*** ./demo/TagDemo.js ***!
  \*************************/
/*! no static exports found */function(e,n,t){"use strict";e.exports={path:"/tag",name:"tag",head:{label:"tagDemo.label",description:"tagDemo.description"},samples:[{id:"tag1",label:"tagDemo.samples1.label",description:"tagDemo.samples1.description",template:'<div class="source"><vue-tag style="margin-right:10px;" :width="tag.width" v-for="(tag, index) in tags" :key="index" :closable="tag.closable" :type="tag.type" :hit="tag.hit" @close="closeHandle(tag)">{{tag.name}}</vue-tag></div>',parameter:{data:function(){return{tags:[{name:"Tag one",type:"",closable:!1,hit:!1},{name:"Tag two",type:"success",closable:!0,hit:!0},{name:"Tag three",type:"info",closable:!1,hit:!0,width:40},{name:"Tag four",type:"warning",closable:!0,hit:!1,width:40},{name:"Tag five",type:"danger",closable:!0,hit:!1}]}},methods:{closeHandle:function(e){this.tags.splice(this.tags.indexOf(e),1)}}},code:'<vue-tag style="margin-right:10px;" v-for="(tag, index) in tags" :width="tag.width" :closable="tag.closable" :type="tag.type" :hit="tag.hit" @close="closeHandle(tag)" :key="index">\n  {{tag.name}}\n</vue-tag>\n\n<script>\n  new Vue({\n    data: function(){\n      return {\n        tags: [\n          { name: "Tag one", type: "" , closable: false, hit: false},\n          { name: "Tag two", type: "success", closable: true, hit: true },\n          { name: "Tag three", type: "info", closable: false, hit: true, width: 40 },\n          { name: "Tag four", type: "warning", closable: true, hit: false, width: 40 },\n          { name: "Tag five", type: "danger", closable: true, hit: false }\n        ]\n      }\n    },\n    methods: {\n      closeHandle: function(tag) {\n        this.tags.splice(this.tags.indexOf(tag), 1);\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"tag2",label:"tagDemo.samples2.label",template:'<div class="source"><div style="float: left;margin-top: 2px;" :key="index" v-for="(tag,index) in dynamicTags"><vue-tag style="margin-right:10px;" :closable="true" :close-hit="false" @close="handleClose(tag)" hit>{{tag}}</vue-tag></div><vue-input style="margin-top:10px;" v-if="inputVisible" v-model="inputValue" ref="saveTagInput" size="small" @keyup.enter.native="handleInputConfirm" @blur="handleInputConfirm"></vue-input><vue-button v-else size="small" @click="showInput">+ New Tag</vue-button></div>',parameter:{data:function(){return{dynamicTags:["Tag one","Tag two","Tag three"],inputVisible:!1,inputValue:""}},methods:{handleClose:function(e){this.dynamicTags.splice(this.dynamicTags.indexOf(e),1)},showInput:function(){var e=this;e.inputVisible=!0,e.$nextTick(function(){e.$refs.saveTagInput.$refs.input.focus()})},handleInputConfirm:function(){var e=this.inputValue;e&&this.dynamicTags.push(e),this.inputVisible=!1,this.inputValue=""}}},code:'<vue-tag style="margin-right:10px;" :key="index" v-for="(tag,index) in dynamicTags" :closable="true" :close-hit="false" @close="handleClose(tag)" hit>\n  {{tag}}\n</vue-tag>\n<vue-input style="margin-top:10px;" v-if="inputVisible" v-model="inputValue" ref="saveTagInput" @keyup.enter.native="handleInputConfirm" @blur="handleInputConfirm">\n</vue-input>\n<vue-button v-else size="small" @click="showInput">+ New Tag</vue-button>\n\n<script>\n  new Vue({\n    data: function() {\n      return {\n        dynamicTags: ["Tag one", "Tag two", "Tag three"],\n        inputVisible: false,\n        inputValue: ""\n      };\n    },\n    methods: {\n      handleClose: function(tag) {\n        this.dynamicTags.splice(this.dynamicTags.indexOf(tag), 1);\n      },\n      showInput: function() {\n        var self = this;\n        self.inputVisible = true;\n        self.$nextTick(function() {\n          self.$refs.saveTagInput.$refs.input.focus();\n        });\n      },\n      handleInputConfirm: function() {\n        var inputValue = this.inputValue;\n        if (inputValue) {\n          this.dynamicTags.push(inputValue);\n        }\n        this.inputVisible = false;\n        this.inputValue = "";\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"tag3",label:"Attributes",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"type",column2:"tagDemo.samples3.row1column2",column3:"String",column4:"success, info, warning, danger",column5:""},{column1:"closable",column2:"tagDemo.samples3.row2column2",column3:"Boolean",column4:"",column5:"false"},{column1:"hit",column2:"tagDemo.samples3.row4column2",column3:"Boolean",column4:"",column5:"false"},{column1:"width",column2:"tagDemo.samples3.row5column2",column3:"Number",column4:"",column5:""}]}}},notshowmeta:!0},{id:"tag4",label:"Events",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"close",column2:"tagDemo.samples4.row1column2",column3:""}]}}},notshowmeta:!0}]}},"./demo/TimeDemo.js":
/*!**************************!*\
  !*** ./demo/TimeDemo.js ***!
  \**************************/
/*! no static exports found */function(e,n,t){"use strict";var l={path:"/time",name:"time",head:{label:"timeDemo.label",description:"timeDemo.description"},samples:[{id:"time1",label:"timeDemo.samples1.label",description:"timeDemo.samples1.description",template:'<div class="source"><vue-row class="margin-bottom20" type="flex" justify="center"><vue-col :span="6"><span class="demonstration">{{$t(\'timeDemo.samples1.timelabel1\')}}</span></vue-col><vue-col :span="16"><vue-time-select v-model="value1" :picker-options="{ start: \'08:30\', step: \'00:15\', end: \'18:30\'}" :placeholder="$t(\'timeDemo.samples1.timePlaceholder1\')"></vue-time-select></vue-col></vue-row><vue-row type="flex" justify="center"><vue-col :span="6"><span class="demonstration">{{$t(\'timeDemo.samples1.timelabel2\')}}</span></vue-col><vue-col :span="16"><vue-time-picker v-model="value2" :picker-options="{selectableRange: \'18:30:00 - 20:30:00\'}" :placeholder="$t(\'timeDemo.samples1.timePlaceholder2\')"></vue-time-picker></vue-col></vue-row></div>',parameter:{data:function(){return{value1:"",value2:new Date(2e3,10,10,19,40,33)}}},code:'<span class="demonstration">{{$t(\'timeDemo.samples1.timelabel1\')}}</span>\n<vue-time-select v-model="value1" :picker-options="{ start: \'08:30\', step: \'00:15\', end: \'18:30\'}" :placeholder="$t(\'timeDemo.samples1.timePlaceholder1\')"></vue-time-select>\n<span class="demonstration">{{$t(\'timeDemo.samples1.timelabel2\')}}</span>\n<vue-time-picker v-model="value2" :picker-options="{selectableRange: \'18:30:00 - 20:30:00\'}" :placeholder="$t(\'timeDemo.samples1.timePlaceholder2\')"></vue-time-picker>\n\n<script>\n  new Vue({\n    data: function(){\n      return {\n        value1: "",\n        value2: new Date(2000,10,10,19,40,33)\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"time2",label:"timeDemo.samples2.label",description:"timeDemo.samples2.description",template:'<div class="source"><vue-row class="margin-bottom20" type="flex" justify="center"><vue-col :span="6"><span class="demonstration">{{$t(\'timeDemo.samples2.timelabel1\')}}</span></vue-col><vue-col :span="16"><vue-time-select style="width:50%" :placeholder="$t(\'timeDemo.samples2.timePlaceholder1\')" v-model="startTime" :picker-options="{ start: \'08:30\', step: \'00:15\', end: \'18:30\'}"></vue-time-select><vue-time-select style="width:50%" :placeholder="$t(\'timeDemo.samples2.timePlaceholder2\')" v-model="endTime" :picker-options="{start: \'08:30\', step: \'00:15\', end: \'18:30\', minTime: startTime}"></vue-time-select></vue-col></vue-row><vue-row type="flex" justify="center"><vue-col :span="6"><span class="demonstration">{{$t(\'timeDemo.samples2.timelabel2\')}}</span></vue-col><vue-col :span="16"><vue-time-picker is-range v-model="time" :placeholder="$t(\'timeDemo.samples2.timePlaceholder3\')"></vue-time-picker></vue-col></vue-row></div>',parameter:{data:function(){return{startTime:"",endTime:"",time:[new Date,VueUtil.toDate((new Date).getTime()+18e4)]}}},code:'<span class="demonstration">{{$t(\'timeDemo.samples2.timelabel1\')}}</span>\n<vue-time-select style="width:50%" :placeholder="$t(\'timeDemo.samples2.timePlaceholder1\')" v-model="startTime" :picker-options="{ start: \'08:30\', step: \'00:15\', end: \'18:30\'}"></vue-time-select>\n<vue-time-select style="width:50%" :placeholder="$t(\'timeDemo.samples2.timePlaceholder2\')" v-model="endTime" :picker-options="{start: \'08:30\', step: \'00:15\', end: \'18:30\', minTime: startTime}"></vue-time-select>\n<span class="demonstration">{{$t(\'timeDemo.samples2.timelabel2\')}}</span>\n<vue-time-picker is-range v-model="time" :placeholder="$t(\'timeDemo.samples2.timePlaceholder3\')"></vue-time-picker>\n\n<script>\n  new Vue({\n    data: function(){\n      return {\n        startTime: "",\n        endTime: "",\n        time: [new Date, VueUtil.toDate((new Date).getTime() + 3 * 60 * 1000)]\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"time3",label:"Attributes",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"readonly",column2:"timeDemo.samples3.row1column2",column3:"Boolean",column4:"",column5:"true"},{column1:"disabled",column2:"timeDemo.samples3.row2column2",column3:"Boolean",column4:"",column5:"false"},{column1:"editable",column2:"timeDemo.samples3.row21column2",column3:"Boolean",column4:"",column5:"true"},{column1:"clearable",column2:"timeDemo.samples3.row3column2",column3:"Boolean",column4:"",column5:"true"},{column1:"size",column2:"timeDemo.samples3.row4column2",column3:"String",column4:"large, small, mini",column5:""},{column1:"placeholder",column2:"timeDemo.samples3.row5column2",column3:"String",column4:"",column5:""},{column1:"start-placeholder",column2:"timeDemo.samples3.row51column2",column3:"String",column4:"",column5:""},{column1:"end-placeholder",column2:"timeDemo.samples3.row52column2",column3:"String",column4:"",column5:""},{column1:"is-range",column2:"timeDemo.samples3.row53column2",column3:"boolean",column4:"",column5:"false"},{column1:"arrow-control",column2:"timeDemo.samples3.row54column2",column3:"boolean",column4:"",column5:"false"},{column1:"range-separator",column2:"timeDemo.samples3.row55column2",column3:"string",column4:"",column5:"-"},{column1:"value-format",column2:"timeDemo.samples3.row56column2",column3:"string",column4:"",column5:""},{column1:"align",column2:"timeDemo.samples3.row6column2",column3:"String",column4:"left, center, right",column5:"left"},{column1:"popper-class",column2:"timeDemo.samples3.row7column2",column3:"String",column4:"",column5:""},{column1:"picker-options",column2:"timeDemo.samples3.row8column2",column3:"Object",column4:"",column5:"{}"},{column1:"autofocus",column2:"inputDemo.samples10.row19column2",column3:"Boolean",column4:"",column5:"false"},{column1:"show-mobile-ui",column2:"dateDemo.samples8.row1column2",column3:"Boolean",column4:"",column5:"true"},{column1:"value",column2:"dateDemo.samples8.row2column2",column3:"Date | Array",column4:"",column5:""},{column1:"text-align",column2:"dateDemo.samples8.row3column2",column3:"String",column4:"",column5:""},{column1:"text-align-range",column2:"dateDemo.samples8.row3column3",column3:"String",column4:"",column5:"center"},{column1:"min-hour",column2:"timeDemo.samples3.row9column2",column3:"Number | String",column4:"",column5:""},{column1:"max-hour",column2:"timeDemo.samples3.row9column3",column3:"Number | String",column4:"",column5:""},{column1:"min-minute",column2:"timeDemo.samples3.row10column2",column3:"Number | String",column4:"",column5:""},{column1:"max-minute",column2:"timeDemo.samples3.row10column3",column3:"Number | String",column4:"",column5:""},{column1:"min-second",column2:"timeDemo.samples3.row11column2",column3:"Number | String",column4:"",column5:""},{column1:"max-second",column2:"timeDemo.samples3.row11column3",column3:"Number | String",column4:"",column5:""},{column1:"prefix-icon",column2:"dateDemo.samples8.row5column2",column3:"String",column4:"",column5:""},{column1:"clear-icon",column2:"dateDemo.samples8.row5column3",column3:"String",column4:"",column5:"vue-icon-close"},{column1:"title",column2:"dateDemo.samples8.row8column2",column3:"String",column4:"",column5:""},{column1:"start-title",column2:"dateDemo.samples8.row9column2",column3:"String",column4:"",column5:""},{column1:"end-title",column2:"dateDemo.samples8.row9column3",column3:"String",column4:"",column5:""},{column1:"confirm-button-text",column2:"dateDemo.samples8.row10column2",column3:"String",column4:"",column5:""},{column1:"cancel-button-text",column2:"dateDemo.samples8.row10column3",column3:"String",column4:"",column5:""},{column1:"item-height",column2:"dateDemo.samples8.row12column2",column3:"String | Number",column4:"",column5:""},{column1:"visible-item-count",column2:"dateDemo.samples8.row13column2",column3:"Number",column4:"",column5:"5"},{column1:"swipe-duration",column2:"dateDemo.samples8.row14column2",column3:"String | Number",column4:"",column5:"1000"},{column1:"formatter",column2:"dateDemo.samples8.row15column2",column3:"Function",column4:"",column5:""}]}}},notshowmeta:!0},{id:"time4",label:"vue-time-select Picker Options",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"start",column2:"timeDemo.samples4.row1column2",column3:"String",column4:"",column5:"09:00"},{column1:"end",column2:"timeDemo.samples4.row2column2",column3:"String",column4:"",column5:"18:00"},{column1:"step",column2:"timeDemo.samples4.row3column2",column3:"String",column4:"",column5:"00:30"},{column1:"minTime",column2:"timeDemo.samples4.row4column2",column3:"String",column4:"",column5:"00:00"},{column1:"maxTime",column2:"timeDemo.samples4.row5column2",column3:"String",column4:"",column5:""}]}}},notshowmeta:!0},{id:"time5",label:"vue-time-picker Picker Options",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"selectableRange",column2:"timeDemo.samples5.row1column2",column3:"String / Array",column4:"",column5:""},{column1:"format",column2:"timeDemo.samples5.row2column2",column3:"String",column4:"timeDemo.samples5.row2column4",column5:"'HH:mm:ss'"}]}}},notshowmeta:!0},{id:"time6",label:"Events",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"change",column2:"timeDemo.samples6.row1column2",column3:"timeDemo.samples6.row1column3"},{column1:"confirm",column2:"dateDemo.samples8.row16column2",column3:"dateDemo.samples8.row16column3"},{column1:"cancel",column2:"dateDemo.samples8.row17column2",column3:"dateDemo.samples8.row16column3"}]}}},notshowmeta:!0},{id:"time7",label:"Methods",template:'<method-table :data="tableData"></method-table>',parameter:{data:function(){return{tableData:[{column1:"focus",column2:"inputDemo.samples16.row1column2",column3:""}]}}},notshowmeta:!0}]};e.exports=l},"./demo/TooltipDemo.js":
/*!*****************************!*\
  !*** ./demo/TooltipDemo.js ***!
  \*****************************/
/*! no static exports found */function(e,n,t){"use strict";e.exports={path:"/tooltip",name:"tooltip",head:{label:"tooltipDemo.label",description:"tooltipDemo.description"},samples:[{id:"tooltip1",label:"tooltipDemo.samples1.label",description:"tooltipDemo.samples1.description",template:'<div class="source"><div class="box"><div class="top"><vue-tooltip class="item" effect="dark" content="top start prompts message" placement="top-start"><vue-button>Top Start</vue-button></vue-tooltip><vue-tooltip class="item" effect="dark" content="top prompts message" placement="top"><vue-button>Top</vue-button></vue-tooltip><vue-tooltip class="item" effect="dark" content="top end prompts message" placement="top-end"><vue-button>Top End</vue-button></vue-tooltip></div><div class="left"><vue-tooltip class="item" effect="dark" content="left start prompts message" placement="left-start"><vue-button>Left Start</vue-button></vue-tooltip><vue-tooltip class="item" effect="dark" content="left prompts message" placement="left"><vue-button>Left</vue-button></vue-tooltip><vue-tooltip class="item" effect="dark" content="left end prompts message" placement="left-end"><vue-button>Left End</vue-button></vue-tooltip></div><div class="right"><vue-tooltip class="item" effect="dark" content="right start prompts message" placement="right-start"><vue-button>Right Start</vue-button></vue-tooltip><vue-tooltip class="item" effect="dark" content="right prompts message" placement="right"><vue-button>Right</vue-button></vue-tooltip><vue-tooltip class="item" effect="dark" content="right end prompts message" placement="right-end"><vue-button>Right End</vue-button></vue-tooltip></div><div class="bottom"><vue-tooltip class="item" effect="dark" content="bottom start prompts message" placement="bottom-start"><vue-button>Bottom Start</vue-button></vue-tooltip><vue-tooltip class="item" effect="dark" content="bottom prompts message" placement="bottom"><vue-button>Bottom</vue-button></vue-tooltip><vue-tooltip class="item" effect="dark" content="bottom end prompts message" placement="bottom-end"><vue-button>Bottom End</vue-button></vue-tooltip></div></div></div>',code:'<div class="box">\n  <div class="top">\n    <vue-tooltip class="item" effect="dark" content="top start prompts message" placement="top-start">\n      <vue-button>Top Start</vue-button>\n    </vue-tooltip>\n    <vue-tooltip class="item" effect="dark" content="top prompts message" placement="top">\n      <vue-button>Top</vue-button>\n    </vue-tooltip>\n    <vue-tooltip class="item" effect="dark" content="top end prompts message" placement="top-end">\n      <vue-button>Top End</vue-button>\n    </vue-tooltip>\n  </div>\n  <div class="left">\n    <vue-tooltip class="item" effect="dark" content="left start prompts message" placement="left-start">\n      <vue-button>Left Start</vue-button>\n    </vue-tooltip>\n    <vue-tooltip class="item" effect="dark" content="left prompts message" placement="left">\n      <vue-button>Left</vue-button>\n    </vue-tooltip>\n    <vue-tooltip class="item" effect="dark" content="left end prompts message" placement="left-end">\n      <vue-button>Left End</vue-button>\n    </vue-tooltip>\n  </div>\n  <div class="right">\n    <vue-tooltip class="item" effect="dark" content="right start prompts message" placement="right-start">\n      <vue-button>Right Start</vue-button>\n    </vue-tooltip>\n    <vue-tooltip class="item" effect="dark" content="right prompts message" placement="right">\n      <vue-button>Right</vue-button>\n    </vue-tooltip>\n    <vue-tooltip class="item" effect="dark" content="right end prompts message" placement="right-end">\n      <vue-button>Right End</vue-button>\n    </vue-tooltip>\n  </div>\n  <div class="bottom">\n    <vue-tooltip class="item" effect="dark" content="bottom start prompts message" placement="bottom-start">\n      <vue-button>Bottom Start</vue-button>\n    </vue-tooltip>\n    <vue-tooltip class="item" effect="dark" content="bottom prompts message" placement="bottom">\n      <vue-button>Bottom</vue-button>\n    </vue-tooltip>\n    <vue-tooltip class="item" effect="dark" content="bottom end prompts message" placement="bottom-end">\n      <vue-button>Bottom End</vue-button>\n    </vue-tooltip>\n  </div>\n</div>\n\n<style>\n   .box {\n     width: 600px\n   }\n   .top {\n     text-align: center\n   }\n   .left {\n     float: left;\n     width: 120px\n   }\n   .right {\n     float: right;\n     width: 135px\n   }\n   .bottom {\n     clear: both;\n     text-align: center\n   }\n   .left.vue-button,\n   .right.vue-button {\n     height: 45px;\n   }\n   .item {\n     width: 120px;\n     margin: 10px;\n   }\n</style>'},{id:"tooltip2",label:"tooltipDemo.samples2.label",description:"tooltipDemo.samples2.description",template:'<div class="source"><vue-tooltip content="Top center" placement="top"><vue-button>Dark</vue-button></vue-tooltip><vue-tooltip content="Bottom center" placement="bottom" effect="light"><vue-button>Light</vue-button></vue-tooltip></div>',code:'<vue-tooltip content="Top center" placement="top">\n  <vue-button>Dark</vue-button>\n</vue-tooltip>\n<vue-tooltip content="Bottom center" placement="bottom" effect="light">\n  <vue-button>Light</vue-button>\n</vue-tooltip>'},{id:"tooltip3",label:"tooltipDemo.samples3.label",description:"tooltipDemo.samples3.description",template:'<div class="source"><vue-tooltip placement="top"><div slot="content">multiple lines<br/>second line</div><vue-button>Top center</vue-button></vue-tooltip></div>',code:'<vue-tooltip placement="top">\n  <div slot="content">multiple lines<br/>second line</div>\n  <vue-button>Top center</vue-button>\n</vue-tooltip>'},{id:"tooltip4",label:"tooltipDemo.samples4.label",description:"tooltipDemo.samples4.description",template:'<div class="source"><vue-tooltip :disabled="disabled" content="click to close tooltip" placement="top"><vue-button @click="disabled = !disabled">click to {{disabled ? "active" : "close"}} tooltip</vue-button></vue-tooltip></div>',parameter:{data:function(){return{disabled:!1}}},code:'<vue-tooltip :disabled="disabled" content="click to close tooltip" placement="top">\n  <vue-button @click="disabled = !disabled">click to {{disabled ? "active" : "close"}} tooltip</vue-button>\n</vue-tooltip>\n\n<script>\n  new Vue({\n     data: function() {\n       return {\n         disabled: false\n       }\n     }\n  }).$mount();\n<\/script>'},{id:"popover5",label:"Attributes",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"effect",column2:"tooltipDemo.samples5.row1column2",column3:"String",column4:"dark, light",column5:"dark"},{column1:"enterable",column2:"tooltipDemo.samples5.row2column2",column3:"Boolean",column4:"",column5:"false"},{column1:"content",column2:"tooltipDemo.samples5.row3column2",column3:"String",column4:"",column5:""},{column1:"placement",column2:"tooltipDemo.samples5.row4column2",column3:"String",column4:"top, top-start, top-end, bottom, bottom-start, bottom-end, left, left-start, left-end, right, right-start, right-end",column5:"bottom"},{column1:"disabled",column2:"tooltipDemo.samples5.row5column2",column3:"Boolean",column4:"",column5:"false"},{column1:"value(v-model)",column2:"tooltipDemo.samples5.row6column2",column3:"Boolean",column4:"",column5:"false"},{column1:"popper-class",column2:"tooltipDemo.samples5.row7column2",column3:"String",column4:"",column5:""},{column1:"visible-arrow",column2:"tooltipDemo.samples5.row9column2",column3:"Boolean",column4:"",column5:"true"}]}}},notshowmeta:!0}]}},"./demo/TreeDemo.js":
/*!**************************!*\
  !*** ./demo/TreeDemo.js ***!
  \**************************/
/*! no static exports found */function(e,n,t){"use strict";var l={path:"/tree",name:"tree",head:{label:"treeDemo.label",description:"treeDemo.description"},samples:[{id:"tree1",label:"treeDemo.samples1.label",description:"treeDemo.samples1.description",template:'<div class="source"><vue-tree :data="data" :props="defaultProps" @node-click="handleNodeClick"></vue-tree></div>',parameter:{data:function(){return{data:[{label:"Level one 1",children:[{label:"Level two 1-1",children:[{label:"Level three 1-1-1"}]}]},{label:"Level one 2",children:[{label:"Level two 2-1",children:[{label:"Level three 2-1-1"}]},{label:"Level two 2-2",children:[{label:"Level three 2-2-1"}]}]},{label:"Level one 3",children:[{label:"Level two 3-1",children:[{label:"Level three 3-1-1"}]},{label:"Level two 3-2",children:[{label:"Level three 3-2-1"}]}]}],defaultProps:{children:"children",label:"label"}}},methods:{handleNodeClick:function(e){this.$notify({title:e.label})}}},code:'<vue-tree :data="data" :props="defaultProps" @node-click="handleNodeClick"></vue-tree>\n\n<script>\n  new Vue({\n    data: function() {\n      return {\n        data: [{\n          label: "Level one 1",\n          children: [{\n            label: "Level two 1-1",\n            children: [{\n              label: "Level three 1-1-1"\n            }]\n          }]\n        }, {\n          label: "Level one 2",\n          children: [{\n            label: "Level two 2-1",\n            children: [{\n              label: "Level three 2-1-1"\n            }]\n          }, {\n            label: "Level two 2-2",\n            children: [{\n              label: "Level three 2-2-1"\n            }]\n          }]\n        }, {\n          label: "Level one 3",\n          children: [{\n            label: "Level two 3-1",\n            children: [{\n              label: "Level three 3-1-1"\n            }]\n          }, {\n            label: "Level two 3-2",\n            children: [{\n              label: "Level three 3-2-1"\n            }]\n          }]\n        }],\n        defaultProps: {\n          children: "children",\n          label: "label"\n        }\n      }\n    },\n    methods: {\n      handleNodeClick: function(data) {\n        this.$notify({title: data.label});\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"tree2",label:"treeDemo.samples2.label",description:"treeDemo.samples2.description",template:'<div class="source"><vue-tree :props="props" :load="loadNode" lazy show-checkbox @check-change="handleCheckChange"></vue-tree></div>',parameter:{data:function(){return{props:{label:"name",children:"zones"},count:1}},methods:{handleCheckChange:function(e,n,t){this.$notify({title:e.name+", "+n+", "+t})},loadNode:function(e,n){var t,l=this;return 0===e.level?n([{name:"region1"},{name:"region2"}]):e.level>3?n([]):(t="region1"===e.data.name||"region2"!==e.data.name&&Math.random()>.5,void setTimeout(function(){var e;e=t?[{name:"zone"+l.count++},{name:"zone"+l.count++}]:[],n(e)},500))}}},code:'<vue-tree :props="props" :load="loadNode" lazy show-checkbox @check-change="handleCheckChange"></vue-tree>\n\n<script>\n  new Vue({\n    data: function() {\n      return {\n        props: {\n          label: "name",\n          children: "zones"\n        },\n        count: 1\n      };\n    },\n    methods: {\n      handleCheckChange: function(data, checked, indeterminate) {\n        this.$notify({title: data.name + ", " + checked + ", " + indeterminate});\n      },\n      loadNode: function(node, resolve) {\n        var self = this;\n        if (node.level === 0) {\n          return resolve([{\n            name: "region1"\n          }, {\n            name: "region2"\n          }]);\n        }\n        if (node.level > 3)\n          return resolve([]);\n        var hasChild;\n        if (node.data.name === "region1") {\n          hasChild = true;\n        } else if (node.data.name === "region2") {\n          hasChild = false;\n        } else {\n          hasChild = Math.random() > 0.5;\n        }\n        setTimeout(function() {\n          var data;\n          if (hasChild) {\n            data = [{\n              name: "zone" + self.count++\n            }, {\n              name: "zone" + self.count++\n            }];\n          } else {\n            data = [];\n          }\n          resolve(data);\n        }, 500);\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"tree3",label:"treeDemo.samples3.label",description:"treeDemo.samples3.description",template:'<div class="source"><vue-tree :data="data" show-checkbox node-key="id" :default-expanded-keys="[2, 3]" :default-checked-keys="[5]" :props="defaultProps"></vue-tree></div>',parameter:{data:function(){return{data:[{id:1,label:"Level one 1",children:[{id:4,label:"Level two 1-1",children:[{id:9,label:"Level three 1-1-1"},{id:10,label:"Level three 1-1-2"}]}]},{id:2,label:"Level one 2",children:[{id:5,label:"Level two 2-1"},{id:6,label:"Level two 2-2"}]},{id:3,label:"Level one 3",children:[{id:7,label:"Level two 3-1"},{id:8,label:"Level two 3-2"}]}],defaultProps:{children:"children",label:"label"}}}},code:'<vue-tree :data="data" show-checkbox node-key="id" :default-expanded-keys="[2, 3]" :default-checked-keys="[5]" :props="defaultProps"></vue-tree>\n\n<script>\n  new Vue({\n    data: function() {\n      return {\n        data: [{\n          id: 1,\n          label: "Level one 1",\n          children: [{\n            id: 4,\n            label: "Level two 1-1",\n            children: [{\n              id: 9,\n              label: "Level three 1-1-1"\n            }, {\n              id: 10,\n              label: "Level three 1-1-2"\n            }]\n          }]\n        }, {\n          id: 2,\n          label: "Level one 2",\n          children: [{\n            id: 5,\n            label: "Level two 2-1"\n          }, {\n            id: 6,\n            label: "Level two 2-2"\n          }]\n        }, {\n          id: 3,\n          label: "Level one 3",\n          children: [{\n            id: 7,\n            label: "Level two 3-1"\n          }, {\n            id: 8,\n            label: "Level two 3-2"\n          }]\n        }],\n        defaultProps: {\n          children: "children",\n          label: "label"\n        }\n      };\n    }\n  }).$mount();\n<\/script>'},{id:"tree4",label:"treeDemo.samples4.label",description:"treeDemo.samples4.description",template:'<div class="source"><vue-tree :data="data" show-checkbox node-key="id" :default-expanded-keys="[2, 3]" :default-checked-keys="[5]" :props="defaultProps"></vue-tree></div>',parameter:{data:function(){return{data:[{id:1,label:"Level one 1",children:[{id:4,label:"Level two 1-1",children:[{id:9,label:"Level three 1-1-1"},{id:10,label:"Level three 1-1-2",disabled:!0}]}]},{id:2,label:"Level one 2",children:[{id:5,label:"Level two 2-1",disabled:!0},{id:6,label:"Level two 2-2"}]},{id:3,label:"Level one 3",children:[{id:7,label:"Level two 3-1",disabled:!0},{id:8,label:"Level two 3-2"}]}],defaultProps:{children:"children",label:"label",disabled:"disabled"}}}},code:'<vue-tree :data="data" show-checkbox node-key="id" :default-expanded-keys="[2, 3]" :default-checked-keys="[5]" :props="defaultProps"></vue-tree>\n\n<script>\n  new Vue({\n    data: function() {\n      return {\n        data: [{\n          id: 1,\n          label: "Level one 1",\n          children: [{\n            id: 4,\n            label: "Level two 1-1",\n            children: [{\n              id: 9,\n              label: "Level three 1-1-1"\n            }, {\n              id: 10,\n              label: "Level three 1-1-2",\n              disabled: true\n            }]\n          }]\n        }, {\n          id: 2,\n          label: "Level one 2",\n          children: [{\n            id: 5,\n            label: "Level two 2-1",\n            disabled: true\n          }, {\n            id: 6,\n            label: "Level two 2-2"\n          }]\n        }, {\n          id: 3,\n          label: "Level one 3",\n          children: [{\n            id: 7,\n            label: "Level two 3-1",\n            disabled: true\n          }, {\n            id: 8,\n            label: "Level two 3-2"\n          }]\n        }],\n        defaultProps: {\n          children: "children",\n          label: "label",\n          disabled: "disabled"\n        }\n      };\n    }\n  }).$mount();\n<\/script>'},{id:"tree5",label:"treeDemo.samples5.label",description:"treeDemo.samples5.description",template:'<div class="source"><vue-tree :data="data" show-checkbox default-expand-all node-key="id" ref="tree" :props="defaultProps" :expand-on-click-node="false"></vue-tree><vue-button-group><vue-button @click="getCheckedNodes">get by node</vue-button><vue-button @click="getCheckedKeys">get by key</vue-button><vue-button @click="setCheckedNodes">set by node</vue-button><vue-button @click="setCheckedKeys">set by key</vue-button><vue-button @click="resetChecked">reset</vue-button></vue-button-group></div>',parameter:{methods:{getCheckedNodes:function(){this.$notify({title:this.$refs.tree.getCheckedNodes().map(function(e){return e.label}).join(", ")})},getCheckedKeys:function(){this.$notify({title:this.$refs.tree.getCheckedKeys().toString()})},setCheckedNodes:function(){this.$refs.tree.setCheckedNodes([{id:5,label:"Level two 2-1"},{id:9,label:"Level three 1-1-1"}])},setCheckedKeys:function(){this.$refs.tree.setCheckedKeys([3])},resetChecked:function(){this.$refs.tree.setCheckedKeys([])}},data:function(){return{data:[{id:1,label:"Level one 1",children:[{id:4,label:"Level two 1-1",children:[{id:9,label:"Level three 1-1-1"},{id:10,label:"Level three 1-1-2"}]}]},{id:2,label:"Level one 2",children:[{id:5,label:"Level two 2-1"},{id:6,label:"Level two 2-2"}]},{id:3,label:"Level one 3",children:[{id:7,label:"Level two 3-1"},{id:8,label:"Level two 3-2"}]}],defaultProps:{children:"children",label:"label"}}}},code:'<vue-tree :data="data" show-checkbox default-expand-all node-key="id" ref="tree" :props="defaultProps" :expand-on-click-node="false"></vue-tree>\n<vue-button-group>\n  <vue-button @click="getCheckedNodes">get by node</vue-button>\n  <vue-button @click="getCheckedKeys">get by key</vue-button>\n  <vue-button @click="setCheckedNodes">set by node</vue-button>\n  <vue-button @click="setCheckedKeys">set by key</vue-button>\n  <vue-button @click="resetChecked">reset</vue-button>\n</vue-button-group>\n\n<script>\n  new Vue({\n    methods: {\n      getCheckedNodes: function() {\n        this.$notify({title: this.$refs.tree.getCheckedNodes().map(function(checkedNode){return checkedNode.label}).join(", ")});\n      },\n      getCheckedKeys: function() {\n        this.$notify({title: this.$refs.tree.getCheckedKeys().toString()});\n      },\n      setCheckedNodes: function() {\n        this.$refs.tree.setCheckedNodes([{\n          id: 5,\n          label: "Level two 2-1"\n        }, {\n          id: 9,\n          label: "Level three 1-1-1"\n        }]);\n      },\n      setCheckedKeys: function() {\n        this.$refs.tree.setCheckedKeys([3]);\n      },\n      resetChecked: function() {\n        this.$refs.tree.setCheckedKeys([]);\n      }\n    },\n    data: function() {\n      return {\n        data: [{\n          id: 1,\n          label: "Level one 1",\n          children: [{\n            id: 4,\n            label: "Level two 1-1",\n            children: [{\n              id: 9,\n              label: "Level three 1-1-1"\n            }, {\n              id: 10,\n              label: "Level three 1-1-2"\n            }]\n          }]\n        }, {\n          id: 2,\n          label: "Level one 2",\n          children: [{\n            id: 5,\n            label: "Level two 2-1"\n          }, {\n            id: 6,\n            label: "Level two 2-2"\n          }]\n        }, {\n          id: 3,\n          label: "Level one 3",\n          children: [{\n            id: 7,\n            label: "Level two 3-1"\n          }, {\n            id: 8,\n            label: "Level two 3-2"\n          }]\n        }],\n        defaultProps: {\n          children: "children",\n          label: "label"\n        }\n      };\n    }\n  }).$mount();\n<\/script>'},{id:"tree13",label:"treeDemo.samples13.label",description:"treeDemo.samples13.description",template:'<div class="source"><vue-tree :data="data" default-expand-all node-key="id" ref="tree" highlight-current :props="defaultProps" :expand-on-click-node="false"></vue-tree><vue-button-group><vue-button @click="getCurrentNode">get by node</vue-button><vue-button @click="getCurrentKey">get by key</vue-button><vue-button @click="setCurrentNode">set by node</vue-button><vue-button @click="setCurrentKey">set by key</vue-button><vue-button @click="resetCurrent">reset</vue-button></vue-button-group></div>',parameter:{methods:{getCurrentNode:function(){var e=this.$refs.tree.getCurrentNode();e&&this.$notify({title:e.label})},getCurrentKey:function(){var e=this.$refs.tree.getCurrentKey();e&&this.$notify({title:e.toString()})},setCurrentNode:function(){this.$refs.tree.setCurrentNode({id:5,label:"Level two 2-1"})},setCurrentKey:function(){this.$refs.tree.setCurrentKey(9)},resetCurrent:function(){this.$refs.tree.setCurrentNode(null)}},data:function(){return{data:[{id:1,label:"Level one 1",children:[{id:4,label:"Level two 1-1",children:[{id:9,label:"Level three 1-1-1"},{id:10,label:"Level three 1-1-2"}]}]},{id:2,label:"Level one 2",children:[{id:5,label:"Level two 2-1"},{id:6,label:"Level two 2-2"}]},{id:3,label:"Level one 3",children:[{id:7,label:"Level two 3-1"},{id:8,label:"Level two 3-2"}]}],defaultProps:{children:"children",label:"label"}}}},code:'<vue-tree :data="data" default-expand-all node-key="id" ref="tree" highlight-current :props="defaultProps" :expand-on-click-node="false"></vue-tree>\n<vue-button-group>\n  <vue-button @click="getCurrentNode">get by node</vue-button>\n  <vue-button @click="getCurrentKey">get by key</vue-button>\n  <vue-button @click="setCurrentNode">set by node</vue-button>\n  <vue-button @click="setCurrentKey">set by key</vue-button>\n  <vue-button @click="resetCurrent">reset</vue-button>\n</vue-button-group>\n\n<script>\n  new Vue({\n    methods: {\n      getCurrentNode: function() {\n        var currentNode = this.$refs.tree.getCurrentNode();\n        if (currentNode) {\n          this.$notify({title: currentNode.label});\n        }\n      },\n      getCurrentKey: function() {\n        var currentKey = this.$refs.tree.getCurrentKey();\n        if (currentKey) {\n          this.$notify({title: currentKey.toString()});\n        }\n      },\n      setCurrentNode: function() {\n        this.$refs.tree.setCurrentNode({\n          id: 5,\n          label: "Level two 2-1"\n        });\n      },\n      setCurrentKey: function() {\n        this.$refs.tree.setCurrentKey(9);\n      },\n      resetCurrent: function() {\n        this.$refs.tree.setCurrentKey(null);\n      }\n    },\n    data: function() {\n      return {\n        data: [{\n          id: 1,\n          label: "Level one 1",\n          children: [{\n            id: 4,\n            label: "Level two 1-1",\n            children: [{\n              id: 9,\n              label: "Level three 1-1-1"\n            }, {\n              id: 10,\n              label: "Level three 1-1-2"\n            }]\n          }]\n        }, {\n          id: 2,\n          label: "Level one 2",\n          children: [{\n            id: 5,\n            label: "Level two 2-1"\n          }, {\n            id: 6,\n            label: "Level two 2-2"\n          }]\n        }, {\n          id: 3,\n          label: "Level one 3",\n          children: [{\n            id: 7,\n            label: "Level two 3-1"\n          }, {\n            id: 8,\n            label: "Level two 3-2"\n          }]\n        }],\n        defaultProps: {\n          children: "children",\n          label: "label"\n        }\n      };\n    }\n  }).$mount();\n<\/script>'},{id:"tree6",label:"treeDemo.samples6.label",description:"treeDemo.samples6.description",template:'<div class="source"><vue-tree :data="data" :props="defaultProps" show-checkbox node-key="id" default-expand-all :expand-on-click-node="false" :render-content="renderContent"></vue-tree></div>',parameter:{data:function(){return{data:[{id:1,label:"Level one 1",children:[{id:4,label:"Level two 1-1",children:[{id:9,label:"Level three 1-1-1"},{id:10,label:"Level three 1-1-2"}]}]},{id:2,label:"Level one 2",children:[{id:5,label:"Level two 2-1"},{id:6,label:"Level two 2-2"}]},{id:3,label:"Level one 3",children:[{id:7,label:"Level two 3-1"},{id:8,label:"Level two 3-2"}]}],id:11,defaultProps:{children:"children",label:"label"}}},methods:{append:function(e,n){e.append({id:this.id++,label:"Level Test",children:[]},n)},remove:function(e,n){e.remove(n)},renderContent:function(e,n){var t=this,l=n.node,o=n.data,a=n.store;return e("span",{style:"white-space: normal"},[e("span",null,[e("span",null,[l.label])]),e("span",{style:"float: right; margin-right: 20px"},[e("vue-button",{attrs:{size:"mini"},on:{click:function(){return t.append(a,o)}}},["Append"]),e("vue-button",{attrs:{size:"mini"},on:{click:function(){return t.remove(a,o)}}},["Delete"])])])}}},code:'<vue-tree :data="data" :props="defaultProps" show-checkbox node-key="id" default-expand-all :expand-on-click-node="false" :render-content="renderContent"></vue-tree>\n\n<script>\n  new Vue({\n    data: function() {\n      return {\n        data: [{\n          id: 1,\n          label: "Level one 1",\n          children: [{\n            id: 4,\n            label: "Level two 1-1",\n            children: [{\n              id: 9,\n              label: "Level three 1-1-1"\n            }, {\n              id: 10,\n              label: "Level three 1-1-2"\n            }]\n          }]\n        }, {\n          id: 2,\n          label: "Level one 2",\n          children: [{\n            id: 5,\n            label: "Level two 2-1"\n          }, {\n            id: 6,\n            label: "Level two 2-2"\n          }]\n        }, {\n          id: 3,\n          label: "Level one 3",\n          children: [{\n            id: 7,\n            label: "Level two 3-1"\n          }, {\n            id: 8,\n            label: "Level two 3-2"\n          }]\n        }],\n        id: 11,\n        defaultProps: {\n          children: "children",\n          label: "label"\n        }\n      }\n    },\n    methods: {\n      append: function(store, data) {\n        var self = this;\n        store.append({\n          id: self.id++,\n          label: "Level Test",\n          children: []\n        }, data);\n      },\n      remove: function(store, data) {\n        store.remove(data);\n      },\n      renderContent: function(createElement, nodeObj) {\n        var self = this;\n        var node = nodeObj.node;\n        var data = nodeObj.data;\n        var store = nodeObj.store;\n        return createElement("span", {\n          style: "white-space: normal"\n        }, [createElement("span", null, [createElement("span", null, [node.label])]), createElement("span", {\n          style: "float: right; margin-right: 20px"\n        }, [createElement("vue-button", {\n          attrs: {\n            size: "mini"\n          },\n          on: {\n            click: function() {\n              return self.append(store, data)\n            }\n          }\n        }, ["Append"]), createElement("vue-button", {\n          attrs: {\n            size: "mini"\n          },\n          on: {\n            click: function() {\n              return self.remove(store, data)\n            }\n          }\n        }, ["Delete"])])])\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"tree7",label:"treeDemo.samples7.label",description:"treeDemo.samples7.description",template:'<div class="source"><vue-input placeholder="Filter keyword" v-model="filterText"></vue-input><vue-tree :data="data" :props="defaultProps" default-expand-all :filter-node-method="filterNode" ref="tree"></vue-tree></div>',parameter:{watch:{filterText:function(e){this.$refs.tree.filter(e)}},methods:{filterNode:function(e,n){return!e||-1!==n.label.indexOf(e)}},data:function(){return{filterText:"",data:[{id:1,label:"Level one 1",children:[{id:4,label:"Level two 1-1",children:[{id:9,label:"Level three 1-1-1"},{id:10,label:"Level three 1-1-2"}]}]},{id:2,label:"Level one 2",children:[{id:5,label:"Level two 2-1"},{id:6,label:"Level two 2-2"}]},{id:3,label:"Level one 3",children:[{id:7,label:"Level two 3-1"},{id:8,label:"Level two 3-2"}]}],defaultProps:{children:"children",label:"label"}}}},code:'<vue-input placeholder="Filter keyword" v-model="filterText"></vue-input>\n<vue-tree :data="data" :props="defaultProps" default-expand-all :filter-node-method="filterNode" ref="tree"></vue-tree>\n\n<script>\n  new Vue({\n    watch: {\n      filterText: function(val) {\n        this.$refs.tree.filter(val);\n      }\n    },\n    methods: {\n      filterNode: function(value, data) {\n        if (!value)\n          return true;\n        return data.label.indexOf(value) !== -1;\n      }\n    },\n    data: function() {\n      return {\n        filterText: "",\n        data: [{\n          id: 1,\n          label: "Level one 1",\n          children: [{\n            id: 4,\n            label: "Level two 1-1",\n            children: [{\n              id: 9,\n              label: "Level three 1-1-1"\n            }, {\n              id: 10,\n              label: "Level three 1-1-2"\n            }]\n          }]\n        }, {\n          id: 2,\n          label: "Level one 2",\n          children: [{\n            id: 5,\n            label: "Level two 2-1"\n          }, {\n            id: 6,\n            label: "Level two 2-2"\n          }]\n        }, {\n          id: 3,\n          label: "Level one 3",\n          children: [{\n            id: 7,\n            label: "Level two 3-1"\n          }, {\n            id: 8,\n            label: "Level two 3-2"\n          }]\n        }],\n        defaultProps: {\n          children: "children",\n          label: "label"\n        }\n      };\n    }\n  }).$mount();\n<\/script>'},{id:"tree8",label:"treeDemo.samples8.label",description:"treeDemo.samples8.description",template:'<div class="source"><vue-tree :data="data" :props="defaultProps" accordion @node-click="handleNodeClick"></vue-tree></div>',parameter:{data:function(){return{data:[{label:"Level one 1",children:[{label:"Level two 1-1",children:[{label:"Level three 1-1-1"}]}]},{label:"Level one 2",children:[{label:"Level two 2-1",children:[{label:"Level three 2-1-1"}]},{label:"Level two 2-2",children:[{label:"Level three 2-2-1"}]}]},{label:"Level one 3",children:[{label:"Level two 3-1",children:[{label:"Level three 3-1-1"}]},{label:"Level two 3-2",children:[{label:"Level three 3-2-1"}]}]}],defaultProps:{children:"children",label:"label"}}},methods:{handleNodeClick:function(e){this.$notify({title:e.label})}}},code:'<vue-tree :data="data" :props="defaultProps" accordion @node-click="handleNodeClick"></vue-tree>\n\n<script>\n  new Vue({\n    data: function() {\n      return {\n        data: [{\n          label: "Level one 1",\n          children: [{\n            label: "Level two 1-1",\n            children: [{\n              label: "Level three 1-1-1"\n            }]\n          }]\n        }, {\n          label: "Level one 2",\n          children: [{\n            label: "Level two 2-1",\n            children: [{\n              label: "Level three 2-1-1"\n            }]\n          }, {\n            label: "Level two 2-2",\n            children: [{\n              label: "Level three 2-2-1"\n            }]\n          }]\n        }, {\n          label: "Level one 3",\n          children: [{\n            label: "Level two 3-1",\n            children: [{\n              label: "Level three 3-1-1"\n            }]\n          }, {\n            label: "Level two 3-2",\n            children: [{\n              label: "Level three 3-2-1"\n            }]\n          }]\n        }],\n        defaultProps: {\n          children: "children",\n          label: "label"\n        }\n      };\n    },\n    methods: {\n      handleNodeClick: function(data) {\n        this.$notify({title: data.label});\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"tree9",label:"Attributes",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"data",column2:"treeDemo.samples9.row1column2",column3:"Array",column4:"",column5:""},{column1:"node-key",column2:"treeDemo.samples9.row2column2",column3:"String",column4:"",column5:""},{column1:"lazy",column2:"treeDemo.samples9.row3column2",column3:"Boolean",column4:"",column5:"false"},{column1:"load",column2:"treeDemo.samples9.row4column2",column3:"Function(node, resolve)",column4:"",column5:""},{column1:"render-content",column2:"treeDemo.samples9.row5column2",column3:"Function(createElement, nodeObj)",column4:"",column5:""},{column1:"highlight-current",column2:"treeDemo.samples9.row6column2",column3:"Boolean",column4:"",column5:"false"},{column1:"current-node-key",column2:"treeDemo.samples9.row7column2",column3:"String / Number",column4:"",column5:""},{column1:"default-expand-all",column2:"treeDemo.samples9.row8column2",column3:"Boolean",column4:"",column5:"false"},{column1:"expand-on-click-node",column2:"treeDemo.samples9.row9column2",column3:"Boolean",column4:"",column5:"true"},{column1:"auto-expand-parent",column2:"treeDemo.samples9.row10column2",column3:"Boolean",column4:"",column5:"true"},{column1:"default-expanded-keys",column2:"treeDemo.samples9.row11column2",column3:"Array",column4:"",column5:""},{column1:"show-checkbox",column2:"treeDemo.samples9.row12column2",column3:"Boolean",column4:"",column5:"false"},{column1:"check-strictly",column2:"treeDemo.samples9.row13column2",column3:"Boolean",column4:"",column5:"false"},{column1:"default-checked-keys",column2:"treeDemo.samples9.row14column2",column3:"Array",column4:"",column5:""},{column1:"filter-node-method",column2:"treeDemo.samples9.row15column2",column3:"Function(value, data, node)",column4:"",column5:""},{column1:"accordion",column2:"treeDemo.samples9.row16column2",column3:"Boolean",column4:"",column5:"false"},{column1:"indent",column2:"treeDemo.samples9.row17column2",column3:"Number",column4:"",column5:"16"},{column1:"props",column2:"treeDemo.samples9.row18column2",column3:"Object",column4:"",column5:""}]}}},notshowmeta:!0},{id:"tree10",label:"props",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"label",column2:"treeDemo.samples10.row1column2",column3:"String / Function(data, node)",column4:"",column5:""},{column1:"children",column2:"treeDemo.samples10.row2column2",column3:"String / Function(data, node)",column4:"",column5:""},{column1:"disabled",column2:"treeDemo.samples10.row3column2",column3:"Boolean / Function(data, node)",column4:"",column5:""}]}}},notshowmeta:!0},{id:"tree11",label:"Methods",template:'<method-table :data="tableData"></method-table>',parameter:{data:function(){return{tableData:[{column1:"filter",column2:"treeDemo.samples11.row1column2",column3:"treeDemo.samples11.row1column3"},{column1:"getCheckedNodes",column2:"treeDemo.samples11.row2column2",column3:"treeDemo.samples11.row2column3"},{column1:"setCheckedNodes",column2:"treeDemo.samples11.row3column2",column3:"treeDemo.samples11.row3column3"},{column1:"getCheckedKeys",column2:"treeDemo.samples11.row4column2",column3:"treeDemo.samples11.row4column3"},{column1:"setCheckedKeys",column2:"treeDemo.samples11.row5column2",column3:"treeDemo.samples11.row5column3"},{column1:"setChecked",column2:"treeDemo.samples11.row6column2",column3:"treeDemo.samples11.row6column3"},{column1:"getCurrentNode",column2:"treeDemo.samples11.row7column2",column3:""},{column1:"getCurrentKey",column2:"treeDemo.samples11.row8column2",column3:""},{column1:"setCurrentNode",column2:"treeDemo.samples11.row9column2",column3:"(node)"},{column1:"setCurrentKey",column2:"treeDemo.samples11.row10column2",column3:"(key)"}]}}},notshowmeta:!0},{id:"tree12",label:"Events",template:'<event-table :data="tableData"></event-table>',parameter:{data:function(){return{tableData:[{column1:"node-click",column2:"treeDemo.samples12.row1column2",column3:"treeDemo.samples12.row1column3"},{column1:"check-change",column2:"treeDemo.samples12.row2column2",column3:"treeDemo.samples12.row2column3"},{column1:"current-change",column2:"treeDemo.samples12.row3column2",column3:"treeDemo.samples12.row3column3"},{column1:"node-expand",column2:"treeDemo.samples12.row4column2",column3:"treeDemo.samples12.row4column3"},{column1:"node-collapse",column2:"treeDemo.samples12.row5column2",column3:"treeDemo.samples12.row5column3"}]}}},notshowmeta:!0}]};e.exports=l},"./demo/UploadDemo.js":
/*!****************************!*\
  !*** ./demo/UploadDemo.js ***!
  \****************************/
/*! no static exports found */function(e,n,t){"use strict";e.exports={path:"/upload",name:"upload",head:{label:"uploadDemo.label",description:"uploadDemo.description"},samples:[{id:"upload1",label:"uploadDemo.samples1.label",description:"uploadDemo.samples1.description",template:'<div class="source"><vue-upload :on-preview="handlePreview" :on-remove="handleRemove" :before-upload="beforeAvatarUpload"><vue-button size="small" type="primary">Click to upload</vue-button><div slot="tip" class="vue-upload__tip">Text files with a size less than than 2MB</div></vue-upload></div>',parameter:{methods:{handleRemove:function(e,n){this.$notify({title:"Removed File: "+e.name}),this.$notify({title:"File List: "+n.map(function(e){return e.name}).join(", ")})},handlePreview:function(e){this.$notify({title:"Select File: "+e.name})},beforeAvatarUpload:function(e){var n="text/plain"===e.type,t=e.size/1024/1024<2;return n||this.$notify.error({message:"Must be a text file"}),t||this.$notify.error({message:"File with a size less than 2MB"}),n&&t}}},code:'<vue-upload :on-preview="handlePreview" :on-remove="handleRemove" :before-upload="beforeAvatarUpload">\n  <vue-button size="small" type="primary">Click to upload</vue-button>\n  <div slot="tip" class="vue-upload__tip">Text files with a size less than than 2MB</div>\n</vue-upload>\n\n<script>\n  new Vue({\n    methods: {\n      handleRemove: function(file, fileList) {\n        this.$notify({title: \'Removed File: \' + file.name});\n'+"        this.$notify({title: 'File List: ' + fileList.map(function(file){return file.name}).join(', ')});\n      },\n      handlePreview: function(file) {\n        this.$notify({title: 'Select File: ' + file.name});\n      },\n      beforeAvatarUpload: function(file, fileList) {\n        var isTXT = file.type === \"text/plain\";\n        var isLt2M = file.size / 1024 / 1024 < 2;\n        if (!isTXT) {\n          this.$notify.error('Must be a text file');\n        }\n        if (!isLt2M) {\n          this.$notify.error('File with a size less than 2MB');\n        }\n        return isTXT && isLt2M;\n      }\n    }\n  }).$mount();\n<\/script>"},{id:"upload2",label:"uploadDemo.samples2.label",description:"uploadDemo.samples2.description",template:'<div class="source"><vue-upload list-type="picture-card" :on-preview="handlePictureCardPreview" :before-upload="beforeAvatarUpload"><i class="vue-icon-plus"></i></vue-upload><vue-dialog v-model="dialogVisible" show-close><img width="100%" :src="dialogImageUrl"></vue-dialog></div>',parameter:{data:function(){return{dialogImageUrl:"",dialogVisible:!1}},methods:{handlePictureCardPreview:function(e){this.dialogImageUrl=e.url,this.dialogVisible=!0},beforeAvatarUpload:function(e){var n="image/jpeg"===e.type;return n||this.$notify.error({message:"Must be a JPG file!"}),n}}},code:'<vue-upload list-type="picture-card" :on-preview="handlePictureCardPreview" :before-upload="beforeAvatarUpload">\n  <i class="vue-icon-plus"></i>\n</vue-upload>\n<vue-dialog v-model="dialogVisible" show-close>\n  <img width="100%" :src="dialogImageUrl">\n</vue-dialog>\n\n<script>\n  new Vue({\n    data: function() {\n      return: {\n        dialogImageUrl: "",\n        dialogVisible: false\n      }\n    },\n    methods: {\n      handlePictureCardPreview: function(file) {\n        this.dialogImageUrl = file.url;\n        this.dialogVisible = true;\n      },\n      beforeAvatarUpload: function(file, fileList) {\n        var isJPG = file.type === "image/jpeg";\n        if (!isJPG) {\n          this.$notify.error({message: \'Must be a JPG file!\'});\n        }\n        return isJPG;\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"upload3",label:"uploadDemo.samples3.label",description:"uploadDemo.samples3.description",template:'<div class="source"><vue-upload list-type="picture" :on-preview="handlePreview" :on-remove="handleRemove" :before-upload="beforeAvatarUpload"><vue-button size="small" type="primary">Click to upload</vue-button><div slot="tip" class="vue-upload__tip">JPG files with a size less than than 2MB</div></vue-upload></div>',parameter:{methods:{handleRemove:function(e,n){this.$notify({title:"Removed File: "+e.name}),this.$notify({title:"File List: "+n.map(function(e){return e.name}).join(", ")})},handlePreview:function(e){this.$notify({title:"Select File: "+e.name})},beforeAvatarUpload:function(e){var n="image/jpeg"===e.type,t=e.size/1024/1024<2;return n||this.$notify.error({message:"Must be a JPG file!"}),t||this.$notify.error({message:"File with a size less than 2MB"}),n&&t}}},code:'<vue-upload list-type="picture-card" :on-preview="handlePreview" :on-remove="handleRemove" :before-upload="beforeAvatarUpload">\n  <vue-button size="small" type="primary">Click to upload</vue-button>\n  <div slot="tip" class="vue-upload__tip">JPG files with a size less than than 2MB</div>\n</vue-upload>\n\n<script>\n  new Vue({\n    methods: {\n      handleRemove: function(file, fileList) {\n        this.$notify({title: \'Removed File: \' + file.name});\n'+"        this.$notify({title: 'File List: ' + fileList.map(function(file){return file.name}).join(', ')});\n      },\n      handlePreview: function(file) {\n        this.$notify({title: 'Select File: ' + file.name});\n      },\n      beforeAvatarUpload: function(file, fileList) {\n        var isJPG = file.type === \"image/jpeg\";\n        var isLt2M = file.size / 1024 / 1024 < 2;\n        if (!isJPG) {\n          this.$notify.error('Must be a JPG file');\n        }\n        if (!isLt2M) {\n          this.$notify.error('File with a size less than 2MB');\n        }\n        return isJPG && isLt2M;\n      }\n    }\n  }).$mount();\n<\/script>"},{id:"upload4",label:"uploadDemo.samples4.label",description:"uploadDemo.samples4.description",template:'<div class="source"><vue-upload :on-change="handleChange" :file-list="fileList"><vue-button size="small" type="primary">Click to upload</vue-button></vue-upload></div>',parameter:{data:function(){return{fileList:[]}},methods:{handleChange:function(e,n){this.fileList=n.slice(-1),this.$notify({title:"File List: "+n.map(function(e){return e.name}).join(", ")})}}},code:'<vue-upload :on-change="handleChange" :file-list="fileList">\n  <vue-button size="small" type="primary">Click to upload</vue-button>\n</vue-upload>\n\n<script>\n  new Vue({\n    data: function() {\n      return {\n        fileList: []\n      }\n    },\n    methods: {\n      handleChange: function(file, fileList) {\n        this.fileList = fileList.slice(-1);\n'+"        this.$notify({title: 'File List: ' + fileList.map(function(file){return file.name}).join(', ')});\n      }\n    }\n  }).$mount();\n<\/script>"},{id:"upload5",label:"uploadDemo.samples5.label",description:"uploadDemo.samples5.description",template:'<div class="source"><vue-upload drag multiple><i class="vue-icon-upload"></i><div class="vue-upload__text">Drop file here or <em>click to upload</em></div></vue-upload></div>',code:'<vue-upload drag multiple>\n  <i class="vue-icon-upload"></i>\n  <div class="vue-upload__text">Drop file here or <em>click to upload</em></div>\n</vue-upload>'},{id:"upload6",label:"uploadDemo.samples6.label",template:'<div class="source"><vue-upload ref="upload" :auto-upload="false"><vue-button slot="trigger" size="small" type="primary">select file</vue-button><vue-button style="margin-left: 10px;" size="small" type="success" @click="submitUpload">upload to server</vue-button></vue-upload></div>',parameter:{methods:{submitUpload:function(){this.$refs.upload.submit()}}},code:'<vue-upload ref="upload" :auto-upload="false">\n  <vue-button slot="trigger" size="small" type="primary">select file</vue-button>\n  <vue-button style="margin-left: 10px;" size="small" type="success" @click="submitUpload">upload to server</vue-button>\n</vue-upload>\n\n<script>\n  new Vue({\n    methods: {\n      submitUpload: function() {\n        this.$refs.upload.submit();\n      }\n    }\n  }).$mount();\n<\/script>'},{id:"upload7",label:"Attributes",template:'<attr-table :data="tableData"></attr-table>',parameter:{data:function(){return{tableData:[{column1:"action",column2:"uploadDemo.samples7.row1column2",column3:"String",column4:"",column5:"window.location.href"},{column1:"headers",column2:"uploadDemo.samples7.row2column2",column3:"Object",column4:"",column5:""},{column1:"multiple",column2:"uploadDemo.samples7.row3column2",column3:"Boolean",column4:"",column5:""},{column1:"max",column2:"uploadDemo.samples7.row22column2",column3:"Boolean",column4:"",column5:""},{column1:"data",column2:"uploadDemo.samples7.row4column2",column3:"Object",column4:"",column5:""},{column1:"name",column2:"uploadDemo.samples7.row5column2",column3:"String",column4:"",column5:"file"},{column1:"with-credentials",column2:"uploadDemo.samples7.row6column2",column3:"Boolean",column4:"",column5:"false"},{column1:"show-file-list",column2:"uploadDemo.samples7.row7column2",column3:"Boolean",column4:"",column5:"true"},{column1:"drag",column2:"uploadDemo.samples7.row8column2",column3:"Boolean",column4:"",column5:"false"},{column1:"accept",column2:"uploadDemo.samples7.row9column2",column3:"String",column4:"",column5:""},{column1:"on-preview",column2:"uploadDemo.samples7.row10column2",column3:"Function(file)",column4:"",column5:""},{column1:"on-remove",column2:"uploadDemo.samples7.row11column2",column3:"Function(file, fileList)",column4:"",column5:""},{column1:"on-success",column2:"uploadDemo.samples7.row12column2",column3:"Function(response, file)",column4:"",column5:""},{column1:"on-error",column2:"uploadDemo.samples7.row13column2",column3:"Function(response, file)",column4:"",column5:""},{column1:"on-progress",column2:"uploadDemo.samples7.row14column2",column3:"Function(response, file)",column4:"",column5:""},{column1:"on-change",column2:"uploadDemo.samples7.row15column2",column3:"Function(file, fileList)",column4:"",column5:""},{column1:"before-upload",column2:"uploadDemo.samples7.row16column2",column3:"Function(file)",column4:"",column5:""},{column1:"list-type",column2:"uploadDemo.samples7.row17column2",column3:"String",column4:"text, picture, picture-card",column5:"text"},{column1:"auto-upload",column2:"uploadDemo.samples7.row18column2",column3:"Boolean",column4:"",column5:"true"},{column1:"file-list",column2:"uploadDemo.samples7.row19column2",column3:"Array",column4:"",column5:""},{column1:"http-request",column2:"uploadDemo.samples7.row20column2",column3:"Function",column4:"",column5:""},{column1:"disabled",column2:"uploadDemo.samples7.row21column2",column3:"Boolean",column4:"",column5:"false"}]}}},notshowmeta:!0},{id:"upload8",label:"Methods",template:'<method-table :data="tableData"></method-table>',parameter:{data:function(){return{tableData:[{column1:"clearFiles",column2:"uploadDemo.samples8.row1column2",column3:""}]}}},notshowmeta:!0}]}},"./demo/XRegExp.js":
/*!*************************!*\
  !*** ./demo/XRegExp.js ***!
  \*************************/
/*! no static exports found */function(e,n,t){"use strict";var l=function(e,n){var t,o,i,r,c,s=[],d=l.OUTSIDE_CLASS,b=0;if(l.isRegExp(e)){if(void 0!==n)throw TypeError("can't supply flags when constructing one RegExp from another");return v(e)}if(u)throw Error("can't call the XRegExp constructor within token definition functions");for(n=n||"",t={hasNamedCapture:!1,captureNames:[],hasFlag:function(e){return n.indexOf(e)>-1},setFlag:function(e){n+=e}};b<e.length;)(o=f(e,b,d,t))?(s.push(o.output),b+=o.match[0].length||1):(i=m.exec.call(p[d],e.slice(b)))?(s.push(i[0]),b+=i[0].length):("["===(r=e.charAt(b))?d=l.INSIDE_CLASS:"]"===r&&(d=l.OUTSIDE_CLASS),s.push(r),b++);return(c=RegExp(s.join(""),m.replace.call(n,a,"")))._xregexp={source:e,captureNames:t.hasNamedCapture?t.captureNames:null},c};l.INSIDE_CLASS=1,l.OUTSIDE_CLASS=2;var o=/\$(?:(\d\d?|[$&`'])|{([$\w]+)})/g,a=/[^gimy]+|([\s\S])(?=[\s\S]*\1)/g,i=/^(?:[?*+]|{\d+(?:,\d*)?})\??/,u=!1,r=[],m={exec:RegExp.prototype.exec,test:RegExp.prototype.test,match:String.prototype.match,replace:String.prototype.replace,split:String.prototype.split},c=void 0===m.exec.call(/()??/,"")[1],s=function(){var e=/^/g;return m.test.call(e,""),!e.lastIndex}(),d=function(){var e=/x/g;return m.replace.call("x",e,""),!e.lastIndex}(),b=void 0!==RegExp.prototype.sticky,p={};function v(e,n){if(!l.isRegExp(e))throw TypeError("type RegExp expected");var t=e._xregexp;return e=l(e.source,h(e)+(n||"")),t&&(e._xregexp={source:t.source,captureNames:t.captureNames?t.captureNames.slice(0):null}),e}function h(e){return(e.global?"g":"")+(e.ignoreCase?"i":"")+(e.multiline?"m":"")+(e.extended?"x":"")+(e.sticky?"y":"")}function f(e,n,t,l){var o,a,i,m=r.length;u=!0;try{for(;m--;)if(t&(i=r[m]).scope&&(!i.trigger||i.trigger.call(l))&&(i.pattern.lastIndex=n,(a=i.pattern.exec(e))&&a.index===n)){o={output:i.handler.call(l,a,t),match:a};break}}catch(e){throw e}finally{u=!1}return o}function w(e,n,t){if(Array.prototype.indexOf)return e.indexOf(n,t);for(var l=t||0;l<e.length;l++)if(e[l]===n)return l;return-1}p[l.INSIDE_CLASS]=/^(?:\\(?:[0-3][0-7]{0,2}|[4-7][0-7]?|x[\dA-Fa-f]{2}|u[\dA-Fa-f]{4}|c[A-Za-z]|[\s\S]))/,p[l.OUTSIDE_CLASS]=/^(?:\\(?:0(?:[0-3][0-7]{0,2}|[4-7][0-7]?)?|[1-9]\d*|x[\dA-Fa-f]{2}|u[\dA-Fa-f]{4}|c[A-Za-z]|[\s\S])|\(\?[:=!]|[?*+]\?|{\d+(?:,\d*)?}\??)/,l.addToken=function(e,n,t,o){r.push({pattern:v(e,"g"+(b?"y":"")),handler:n,scope:t||l.OUTSIDE_CLASS,trigger:o||null})},l.cache=function(e,n){var t=e+"/"+(n||"");return l.cache[t]||(l.cache[t]=l(e,n))},l.copyAsGlobal=function(e){return v(e,"g")},l.escape=function(e){return e.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$&")},l.execAt=function(e,n,t,l){(n=v(n,"g"+(l&&b?"y":""))).lastIndex=t=t||0;var o=n.exec(e);return l?o&&o.index===t?o:null:o},l.freezeTokens=function(){l.addToken=function(){throw Error("can't run addToken after freezeTokens")}},l.isRegExp=function(e){return"[object RegExp]"===Object.prototype.toString.call(e)},l.iterate=function(e,n,t,l){for(var o,a=v(n,"g"),i=-1;o=a.exec(e);)t.call(l,o,++i,e,a),a.lastIndex===o.index&&a.lastIndex++;n.global&&(n.lastIndex=0)},l.matchChain=function(e,n){return function e(t,o){var a,i=n[o].regex?n[o]:{regex:n[o]},u=v(i.regex,"g"),r=[];for(a=0;a<t.length;a++)l.iterate(t[a],u,function(e){r.push(i.backref?e[i.backref]||"":e[0])});return o!==n.length-1&&r.length?e(r,o+1):r}([e],0)},RegExp.prototype.apply=function(e,n){return this.exec(n[0])},RegExp.prototype.call=function(e,n){return this.exec(n)},RegExp.prototype.exec=function(e){var n,t,l=m.exec.apply(this,arguments);if(l){if(!c&&l.length>1&&w(l,"")>-1&&(t=RegExp(this.source,m.replace.call(h(this),"g","")),m.replace.call(e.slice(l.index),t,function(){for(var e=1;e<arguments.length-2;e++)void 0===arguments[e]&&(l[e]=void 0)})),this._xregexp&&this._xregexp.captureNames)for(var o=1;o<l.length;o++)(n=this._xregexp.captureNames[o-1])&&(l[n]=l[o]);!s&&this.global&&!l[0].length&&this.lastIndex>l.index&&this.lastIndex--}return l},s||(RegExp.prototype.test=function(e){var n=m.exec.call(this,e);return n&&this.global&&!n[0].length&&this.lastIndex>n.index&&this.lastIndex--,!!n}),String.prototype.match=function(e){if(l.isRegExp(e)||(e=RegExp(e)),e.global){var n=m.match.apply(this,arguments);return e.lastIndex=0,n}return e.exec(this)},String.prototype.replace=function(e,n){var t,a,i,u=l.isRegExp(e);return u&&"string"==typeof n.valueOf()&&-1===n.indexOf("${")&&d?m.replace.apply(this,arguments):(u?e._xregexp&&(t=e._xregexp.captureNames):e+="","function"==typeof n?a=m.replace.call(this,e,function(){if(t){arguments[0]=new String(arguments[0]);for(var l=0;l<t.length;l++)t[l]&&(arguments[0][t[l]]=arguments[l+1])}return u&&e.global&&(e.lastIndex=arguments[arguments.length-2]+arguments[0].length),n.apply(null,arguments)}):(i=this+"",a=m.replace.call(i,e,function(){var e=arguments;return m.replace.call(n,o,function(n,l,o){if(!l){var a=+o;return a<=e.length-3?e[a]:(a=t?w(t,o):-1)>-1?e[a+1]:n}switch(l){case"$":return"$";case"&":return e[0];case"`":return e[e.length-1].slice(0,e[e.length-2]);case"'":return e[e.length-1].slice(e[e.length-2]+e[0].length);default:var i="";if(!(l=+l))return n;for(;l>e.length-3;)i=String.prototype.slice.call(l,-1)+i,l=Math.floor(l/10);return(l?e[l]||"":"$")+i}})})),u&&e.global&&(e.lastIndex=0),a)},String.prototype.split=function(e,n){if(!l.isRegExp(e))return m.split.apply(this,arguments);var t,o,a=this+"",i=[],u=0;if(void 0===n||+n<0)n=1/0;else if(!(n=Math.floor(+n)))return[];for(e=l.copyAsGlobal(e);(t=e.exec(a))&&!(e.lastIndex>u&&(i.push(a.slice(u,t.index)),t.length>1&&t.index<a.length&&Array.prototype.push.apply(i,t.slice(1)),o=t[0].length,u=e.lastIndex,i.length>=n));)e.lastIndex===t.index&&e.lastIndex++;return u===a.length?m.test.call(e,"")&&!o||i.push(""):i.push(a.slice(u)),i.length>n?i.slice(0,n):i},l.addToken(/\(\?#[^)]*\)/,function(e){return m.test.call(i,e.input.slice(e.index+e[0].length))?"":"(?:)"}),l.addToken(/\((?!\?)/,function(){return this.captureNames.push(null),"("}),l.addToken(/\(\?<([$\w]+)>/,function(e){return this.captureNames.push(e[1]),this.hasNamedCapture=!0,"("}),l.addToken(/\\k<([\w$]+)>/,function(e){var n=w(this.captureNames,e[1]);return n>-1?"\\"+(n+1)+(isNaN(e.input.charAt(e.index+e[0].length))?"":"(?:)"):e[0]}),l.addToken(/\[\^?]/,function(e){return"[]"===e[0]?"\\b\\B":"[\\s\\S]"}),l.addToken(/^\(\?([imsx]+)\)/,function(e){return this.setFlag(e[1]),""}),l.addToken(/(?:\s+|#.*)+/,function(e){return m.test.call(i,e.input.slice(e.index+e[0].length))?"":"(?:)"},l.OUTSIDE_CLASS,function(){return this.hasFlag("x")}),l.addToken(/\./,function(){return"[\\s\\S]"},l.OUTSIDE_CLASS,function(){return this.hasFlag("s")}),e.exports=l},"./demo/XtableDemo sync recursive \\.vue$":
/*!*************************************!*\
  !*** ./demo/XtableDemo sync \.vue$ ***!
  \*************************************/
/*! no static exports found */function(e,n,t){var l={"./advanced/Custom.vue":"./demo/XtableDemo/advanced/Custom.vue","./advanced/CustomStorage.vue":"./demo/XtableDemo/advanced/CustomStorage.vue","./advanced/CustomlWidthStorage.vue":"./demo/XtableDemo/advanced/CustomlWidthStorage.vue","./advanced/Dynamic.vue":"./demo/XtableDemo/advanced/Dynamic.vue","./advanced/Event.vue":"./demo/XtableDemo/advanced/Event.vue","./advanced/Expand.vue":"./demo/XtableDemo/advanced/Expand.vue","./advanced/Export.vue":"./demo/XtableDemo/advanced/Export.vue","./advanced/FixedType.vue":"./demo/XtableDemo/advanced/FixedType.vue","./advanced/Footer.vue":"./demo/XtableDemo/advanced/Footer.vue","./advanced/FooterSpan.vue":"./demo/XtableDemo/advanced/FooterSpan.vue","./advanced/Highlight.vue":"./demo/XtableDemo/advanced/Highlight.vue","./advanced/Import.vue":"./demo/XtableDemo/advanced/Import.vue","./advanced/ManualFilter.vue":"./demo/XtableDemo/advanced/ManualFilter.vue","./advanced/Menu.vue":"./demo/XtableDemo/advanced/Menu.vue","./advanced/MenuPrivilege.vue":"./demo/XtableDemo/advanced/MenuPrivilege.vue","./advanced/Page.vue":"./demo/XtableDemo/advanced/Page.vue","./advanced/Print.vue":"./demo/XtableDemo/advanced/Print.vue","./advanced/Search.vue":"./demo/XtableDemo/advanced/Search.vue","./advanced/Span.vue":"./demo/XtableDemo/advanced/Span.vue","./advanced/SpanRow.vue":"./demo/XtableDemo/advanced/SpanRow.vue","./advanced/Template.vue":"./demo/XtableDemo/advanced/Template.vue","./advanced/Toolbar.vue":"./demo/XtableDemo/advanced/Toolbar.vue","./base/AutoHeight.vue":"./demo/XtableDemo/base/AutoHeight.vue","./base/Basic.vue":"./demo/XtableDemo/base/Basic.vue","./base/Border.vue":"./demo/XtableDemo/base/Border.vue","./base/Current.vue":"./demo/XtableDemo/base/Current.vue","./base/DynamicStyle.vue":"./demo/XtableDemo/base/DynamicStyle.vue","./base/Empty.vue":"./demo/XtableDemo/base/Empty.vue","./base/Filter.vue":"./demo/XtableDemo/base/Filter.vue","./base/Fixed.vue":"./demo/XtableDemo/base/Fixed.vue","./base/FixedFull.vue":"./demo/XtableDemo/base/FixedFull.vue","./base/Format.vue":"./demo/XtableDemo/base/Format.vue","./base/Group.vue":"./demo/XtableDemo/base/Group.vue","./base/Header.vue":"./demo/XtableDemo/base/Header.vue","./base/HeaderHighlight.vue":"./demo/XtableDemo/base/HeaderHighlight.vue","./base/Height.vue":"./demo/XtableDemo/base/Height.vue","./base/Index.vue":"./demo/XtableDemo/base/Index.vue","./base/Loading.vue":"./demo/XtableDemo/base/Loading.vue","./base/MaxHeight.vue":"./demo/XtableDemo/base/MaxHeight.vue","./base/Overflow.vue":"./demo/XtableDemo/base/Overflow.vue","./base/Radio.vue":"./demo/XtableDemo/base/Radio.vue","./base/Resizable.vue":"./demo/XtableDemo/base/Resizable.vue","./base/Selection.vue":"./demo/XtableDemo/base/Selection.vue","./base/Size.vue":"./demo/XtableDemo/base/Size.vue","./base/Sort.vue":"./demo/XtableDemo/base/Sort.vue","./base/Stripe.vue":"./demo/XtableDemo/base/Stripe.vue","./base/Style.vue":"./demo/XtableDemo/base/Style.vue","./edit/AutoClear.vue":"./demo/XtableDemo/edit/AutoClear.vue","./edit/CascadingSelect.vue":"./demo/XtableDemo/edit/CascadingSelect.vue","./edit/CellDisable.vue":"./demo/XtableDemo/edit/CellDisable.vue","./edit/CellValid.vue":"./demo/XtableDemo/edit/CellValid.vue","./edit/Click.vue":"./demo/XtableDemo/edit/Click.vue","./edit/DBLClick.vue":"./demo/XtableDemo/edit/DBLClick.vue","./edit/Events.vue":"./demo/XtableDemo/edit/Events.vue","./edit/Expand.vue":"./demo/XtableDemo/edit/Expand.vue","./edit/Footer.vue":"./demo/XtableDemo/edit/Footer.vue","./edit/FooterImmediately.vue":"./demo/XtableDemo/edit/FooterImmediately.vue","./edit/Insert.vue":"./demo/XtableDemo/edit/Insert.vue","./edit/Keyboard.vue":"./demo/XtableDemo/edit/Keyboard.vue","./edit/Manual.vue":"./demo/XtableDemo/edit/Manual.vue","./edit/Menu.vue":"./demo/XtableDemo/edit/Menu.vue","./edit/Remove.vue":"./demo/XtableDemo/edit/Remove.vue","./edit/Revert.vue":"./demo/XtableDemo/edit/Revert.vue","./edit/RowDisable.vue":"./demo/XtableDemo/edit/RowDisable.vue","./edit/RowValid.vue":"./demo/XtableDemo/edit/RowValid.vue","./edit/Select.vue":"./demo/XtableDemo/edit/Select.vue","./edit/Span.vue":"./demo/XtableDemo/edit/Span.vue","./edit/Status.vue":"./demo/XtableDemo/edit/Status.vue","./edit/Template.vue":"./demo/XtableDemo/edit/Template.vue","./edit/UniqueSelect.vue":"./demo/XtableDemo/edit/UniqueSelect.vue","./grid/Basic.vue":"./demo/XtableDemo/grid/Basic.vue","./grid/CustomToolbar.vue":"./demo/XtableDemo/grid/CustomToolbar.vue","./grid/Dynamic.vue":"./demo/XtableDemo/grid/Dynamic.vue","./grid/Edit.vue":"./demo/XtableDemo/grid/Edit.vue","./grid/Footer.vue":"./demo/XtableDemo/grid/Footer.vue","./grid/FullEdit.vue":"./demo/XtableDemo/grid/FullEdit.vue","./grid/FullQuery.vue":"./demo/XtableDemo/grid/FullQuery.vue","./grid/Group.vue":"./demo/XtableDemo/grid/Group.vue","./grid/Menu.vue":"./demo/XtableDemo/grid/Menu.vue","./grid/Page.vue":"./demo/XtableDemo/grid/Page.vue","./grid/PageProxy.vue":"./demo/XtableDemo/grid/PageProxy.vue","./grid/Proxy.vue":"./demo/XtableDemo/grid/Proxy.vue","./grid/Reverse.vue":"./demo/XtableDemo/grid/Reverse.vue","./grid/Template.vue":"./demo/XtableDemo/grid/Template.vue","./grid/Toolbar.vue":"./demo/XtableDemo/grid/Toolbar.vue","./grid/Tree.vue":"./demo/XtableDemo/grid/Tree.vue","./grid/TreeEdit.vue":"./demo/XtableDemo/grid/TreeEdit.vue","./scroll/CellValid.vue":"./demo/XtableDemo/scroll/CellValid.vue","./scroll/Edit.vue":"./demo/XtableDemo/scroll/Edit.vue","./scroll/FullPartialLoad.vue":"./demo/XtableDemo/scroll/FullPartialLoad.vue","./scroll/Highlight.vue":"./demo/XtableDemo/scroll/Highlight.vue","./scroll/Keyboard.vue":"./demo/XtableDemo/scroll/Keyboard.vue","./scroll/PartialLoad.vue":"./demo/XtableDemo/scroll/PartialLoad.vue","./scroll/RowValid.vue":"./demo/XtableDemo/scroll/RowValid.vue","./scroll/Scroll.vue":"./demo/XtableDemo/scroll/Scroll.vue","./scroll/ScrollCols.vue":"./demo/XtableDemo/scroll/ScrollCols.vue","./scroll/ScrollFullCols.vue":"./demo/XtableDemo/scroll/ScrollFullCols.vue","./scroll/ScrollFullRows.vue":"./demo/XtableDemo/scroll/ScrollFullRows.vue","./scroll/ScrollRows.vue":"./demo/XtableDemo/scroll/ScrollRows.vue","./scroll/Template.vue":"./demo/XtableDemo/scroll/Template.vue","./scroll/Tree.vue":"./demo/XtableDemo/scroll/Tree.vue","./tree/Basic.vue":"./demo/XtableDemo/tree/Basic.vue","./tree/CellValid.vue":"./demo/XtableDemo/tree/CellValid.vue","./tree/Edit.vue":"./demo/XtableDemo/tree/Edit.vue","./tree/Expand.vue":"./demo/XtableDemo/tree/Expand.vue","./tree/Fixed.vue":"./demo/XtableDemo/tree/Fixed.vue","./tree/FullEdit.vue":"./demo/XtableDemo/tree/FullEdit.vue","./tree/GroupBy.vue":"./demo/XtableDemo/tree/GroupBy.vue","./tree/Highlight.vue":"./demo/XtableDemo/tree/Highlight.vue","./tree/Insert.vue":"./demo/XtableDemo/tree/Insert.vue","./tree/Menu.vue":"./demo/XtableDemo/tree/Menu.vue","./tree/Radio.vue":"./demo/XtableDemo/tree/Radio.vue","./tree/RowValid.vue":"./demo/XtableDemo/tree/RowValid.vue","./tree/Selection.vue":"./demo/XtableDemo/tree/Selection.vue","./tree/Template.vue":"./demo/XtableDemo/tree/Template.vue","./tree/Toolbar.vue":"./demo/XtableDemo/tree/Toolbar.vue"};function o(e){var n=a(e);return t(n)}function a(e){var n=l[e];if(!(n+1)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n}o.keys=function(){return Object.keys(l)},o.resolve=a,e.exports=o,o.id="./demo/XtableDemo sync recursive \\.vue$"},"./demo/XtableDemo/advanced/Custom.vue":
/*!*********************************************!*\
  !*** ./demo/XtableDemo/advanced/Custom.vue ***!
  \*********************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/advanced/Custom",name:"XtableDemo.advanced.Custom",head:{label:"XtableDemo.advanced.Custom.label",description:"XtableDemo.advanced.Custom.description"},samples:[{id:"XtableDemo.advanced.Custom.sample1",label:"XtableDemo.advanced.Custom.sample1.label",description:"XtableDemo.advanced.Custom.sample1.description",code:'<div class="table-oper">\n  <span class="menu-btn">\n    <i class="icon-menu"></i>\n    <div class="menu-wrapper">\n      <template v-for="(column,index) in customColumns1">\n        <vue-checkbox\n          v-if="column.property"\n          class="checkbox-item"\n          v-model="column.visible"\n          :key="index"\n          @change="$refs.xTable1.refreshColumn()">{{ column.title }}</vue-checkbox>\n      </template>\n    </div>\n  </span>\n</div>\n\n<vue-xtable\n  ref="xTable1"\n  border\n  height="200"\n  :data="tableData"\n  :customs.sync="customColumns1">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n  <vue-xtable-column field="role" title="Role"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      loading: false,\n      tableData: [],\n      // 如果为空则默认全部显示，也可以指定默认的隐藏列\n      customColumns1: [\n        {\n          field: \'age\',\n          visible: false\n        }\n      ],\n    }\n  },\n  created () {\n    this.loading = true\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 20)\n    setTimeout(() => {\n      this.loading = false\n    }, 300)\n  },\n\n})\n<\/script>\n\n<style>\n.table-oper {\n  height: 20px;\n  width: 100%;\n}\n\n.menu-btn {\n  position: relative;\n  width: 20px;\n  height: 20px;\n  float: right;\n}\n.menu-btn:hover .menu-wrapper {\n  display: block;\n}\n\n.menu-wrapper {\n  display: none;\n  position: absolute;\n  width: 80px;\n  top: 16px;\n  right: 0;\n  z-index: 9;\n  background-color: #fff;\n  font-size: 14px;\n  padding: 4px 10px;\n  user-select: none;\n  border: 1px solid #e8eaec;\n}\n.menu-wrapper .checkbox-item {\n  display: block;\n  margin: 4px 0;\n}\n\n.icon-menu {\n  width: 16px;\n  height: 0px;\n  display: inline-block;\n  margin-bottom: 16px;\n  box-shadow: 0 6px 0 2px #606266, 0 0 0 2px #606266, 0 12px 0 2px #606266;\n}\n</style>',template:'<div class="source">    <div class="table-oper">\n      <span class="menu-btn">\n        <i class="icon-menu"></i>\n        <div class="menu-wrapper">\n          <template v-for="(column,index) in customColumns1">\n            <vue-checkbox\n              v-if="column.property"\n              class="checkbox-item"\n              v-model="column.visible"\n              :key="index"\n              @change="$refs.xTable1.refreshColumn()">{{ column.title }}</vue-checkbox>\n          </template>\n        </div>\n      </span>\n    </div>\n\n    <vue-xtable\n      ref="xTable1"\n      border\n      height="200"\n      :data="tableData"\n      :customs.sync="customColumns1">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n      <vue-xtable-column field="role" title="Role"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{loading:!1,tableData:[],customColumns1:[{field:"age",visible:!1}]}},created:function(){var e=this;this.loading=!0,this.tableData=window.MOCK_DATA_LIST.slice(0,20),setTimeout(function(){e.loading=!1},300)}}},{id:"XtableDemo.advanced.Custom.sample2",label:"XtableDemo.advanced.Custom.sample2.label",description:"XtableDemo.advanced.Custom.sample2.description",code:'<div class="table-oper">\n  <span class="menu-btn">\n    <i class="icon-menu"></i>\n    <div class="menu-wrapper">\n      <template v-for="(column,index) in customColumns2">\n        <vue-checkbox\n          v-if="column.property"\n          class="checkbox-item"\n          v-model="column.visible"\n          :key="index"\n          @change="$refs.xTable2.refreshColumn()">{{ column.title }}</vue-checkbox>\n      </template>\n    </div>\n  </span>\n</div>\n\n<vue-xtable\n  ref="xTable2"\n  border\n  height="200"\n  :loading="loading"\n  :data="tableData"\n  :customs.sync="customColumns2">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n  <vue-xtable-column field="role" title="Role"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      loading: false,\n      tableData: [],\n      customColumns2: [],\n    }\n  },\n  created () {\n    this.loading = true\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 20)\n    setTimeout(() => {\n      this.loading = false\n      if (this.$refs.xTable2) {\n        this.$refs.xTable2.reloadCustoms([\n          {\n            field: \'name\',\n            visible: false\n          }\n        ])\n      }\n    }, 300)\n  },\n\n})\n<\/script>\n\n<style>\n.table-oper {\n  height: 20px;\n  width: 100%;\n}\n\n.menu-btn {\n  position: relative;\n  width: 20px;\n  height: 20px;\n  float: right;\n}\n.menu-btn:hover .menu-wrapper {\n  display: block;\n}\n\n.menu-wrapper {\n  display: none;\n  position: absolute;\n  width: 80px;\n  top: 16px;\n  right: 0;\n  z-index: 9;\n  background-color: #fff;\n  font-size: 14px;\n  padding: 4px 10px;\n  user-select: none;\n  border: 1px solid #e8eaec;\n}\n.menu-wrapper .checkbox-item {\n  display: block;\n  margin: 4px 0;\n}\n\n.icon-menu {\n  width: 16px;\n  height: 0px;\n  display: inline-block;\n  margin-bottom: 16px;\n  box-shadow: 0 6px 0 2px #606266, 0 0 0 2px #606266, 0 12px 0 2px #606266;\n}\n</style>',template:'<div class="source">    <div class="table-oper">\n      <span class="menu-btn">\n        <i class="icon-menu"></i>\n        <div class="menu-wrapper">\n          <template v-for="(column,index) in customColumns2">\n            <vue-checkbox\n              v-if="column.property"\n              class="checkbox-item"\n              v-model="column.visible"\n              :key="index"\n              @change="$refs.xTable2.refreshColumn()">{{ column.title }}</vue-checkbox>\n          </template>\n        </div>\n      </span>\n    </div>\n\n    <vue-xtable\n      ref="xTable2"\n      border\n      height="200"\n      :loading="loading"\n      :data="tableData"\n      :customs.sync="customColumns2">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n      <vue-xtable-column field="role" title="Role"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{loading:!1,tableData:[],customColumns2:[]}},created:function(){var e=this;this.loading=!0,this.tableData=window.MOCK_DATA_LIST.slice(0,20),setTimeout(function(){e.loading=!1,e.$refs.xTable2&&e.$refs.xTable2.reloadCustoms([{field:"name",visible:!1}])},300)}}},{id:"XtableDemo.advanced.Custom.sample3",label:"XtableDemo.advanced.Custom.sample3.label",description:"XtableDemo.advanced.Custom.sample3.description",code:'<template v-for="(column,index) in customColumns3">\n  <vue-checkbox\n    v-if="column.property"\n    class="checkbox-item"\n    v-model="column.visible"\n    :key="index">{{ column.title }}</vue-checkbox>\n</template>\n\n<vue-toolbar :data="tableData" setting>\n  <template v-slot:buttons>\n    <vue-button @click="$refs.xTable3.refreshColumn()">刷新</vue-button>\n  </template>\n</vue-toolbar>\n\n<vue-xtable\n  ref="xTable3"\n  border\n  height="300"\n  :data="tableData"\n  :customs.sync="customColumns3">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n  <vue-xtable-column field="role" title="Role"></vue-xtable-column>\n  <vue-xtable-column title="基本信息">\n    <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n    <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n    <vue-xtable-column title="其他信息">\n      <vue-xtable-column field="rate" title="Rate"></vue-xtable-column>\n      <vue-xtable-column field="flag" title="Flag"></vue-xtable-column>\n    </vue-xtable-column>\n  </vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      loading: false,\n      tableData: [],\n      customColumns3: [\n        {\n          field: \'name\',\n          visible: false\n        },\n        {\n          field: \'sex\',\n          visible: false\n        }\n      ],\n    }\n  },\n  created () {\n    this.loading = true\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 20)\n    setTimeout(() => {\n      this.loading = false\n    }, 300)\n  },\n\n})\n<\/script>\n\n<style>\n.table-oper {\n  height: 20px;\n  width: 100%;\n}\n\n.menu-btn {\n  position: relative;\n  width: 20px;\n  height: 20px;\n  float: right;\n}\n.menu-btn:hover .menu-wrapper {\n  display: block;\n}\n\n.menu-wrapper {\n  display: none;\n  position: absolute;\n  width: 80px;\n  top: 16px;\n  right: 0;\n  z-index: 9;\n  background-color: #fff;\n  font-size: 14px;\n  padding: 4px 10px;\n  user-select: none;\n  border: 1px solid #e8eaec;\n}\n.menu-wrapper .checkbox-item {\n  display: block;\n  margin: 4px 0;\n}\n\n.icon-menu {\n  width: 16px;\n  height: 0px;\n  display: inline-block;\n  margin-bottom: 16px;\n  box-shadow: 0 6px 0 2px #606266, 0 0 0 2px #606266, 0 12px 0 2px #606266;\n}\n</style>',template:'<div class="source">    <template v-for="(column,index) in customColumns3">\n      <vue-checkbox\n        v-if="column.property"\n        class="checkbox-item"\n        v-model="column.visible"\n        :key="index">{{ column.title }}</vue-checkbox>\n    </template>\n\n    <vue-toolbar :data="tableData" setting>\n      <template v-slot:buttons>\n        <vue-button @click="$refs.xTable3.refreshColumn()">刷新</vue-button>\n      </template>\n    </vue-toolbar>\n\n    <vue-xtable\n      ref="xTable3"\n      border\n      height="300"\n      :data="tableData"\n      :customs.sync="customColumns3">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n      <vue-xtable-column field="role" title="Role"></vue-xtable-column>\n      <vue-xtable-column title="基本信息">\n        <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n        <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n        <vue-xtable-column title="其他信息">\n          <vue-xtable-column field="rate" title="Rate"></vue-xtable-column>\n          <vue-xtable-column field="flag" title="Flag"></vue-xtable-column>\n        </vue-xtable-column>\n      </vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{loading:!1,tableData:[],customColumns3:[{field:"name",visible:!1},{field:"sex",visible:!1}]}},created:function(){var e=this;this.loading=!0,this.tableData=window.MOCK_DATA_LIST.slice(0,20),setTimeout(function(){e.loading=!1},300)}}}],styles:".table-oper {\n  height: 20px;\n  width: 100%;\n}\n\n.menu-btn {\n  position: relative;\n  width: 20px;\n  height: 20px;\n  float: right;\n}\n.menu-btn:hover .menu-wrapper {\n  display: block;\n}\n\n.menu-wrapper {\n  display: none;\n  position: absolute;\n  width: 80px;\n  top: 16px;\n  right: 0;\n  z-index: 9;\n  background-color: #fff;\n  font-size: 14px;\n  padding: 4px 10px;\n  user-select: none;\n  border: 1px solid #e8eaec;\n}\n.menu-wrapper .checkbox-item {\n  display: block;\n  margin: 4px 0;\n}\n\n.icon-menu {\n  width: 16px;\n  height: 0px;\n  display: inline-block;\n  margin-bottom: 16px;\n  box-shadow: 0 6px 0 2px #606266, 0 0 0 2px #606266, 0 12px 0 2px #606266;\n}"}},"./demo/XtableDemo/advanced/CustomStorage.vue":
/*!****************************************************!*\
  !*** ./demo/XtableDemo/advanced/CustomStorage.vue ***!
  \****************************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/advanced/CustomStorage",name:"XtableDemo.advanced.CustomStorage",head:{label:"XtableDemo.advanced.CustomStorage.label",description:"XtableDemo.advanced.CustomStorage.description"},samples:[{id:"XtableDemo.advanced.CustomStorage.sample1",label:"XtableDemo.advanced.CustomStorage.sample1.label",description:"XtableDemo.advanced.CustomStorage.sample1.description",code:'<vue-toolbar id="toolbar_demo3" :setting="{storage: true}">\n  <template v-slot:buttons>\n    <vue-button>按钮1</vue-button>\n    <vue-button>按钮2</vue-button>\n  </template>\n</vue-toolbar>\n\n<vue-xtable\n  border\n  height="400"\n  :data="tableData">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n  <vue-xtable-column field="role" title="Role"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 20)\n    this.tableData = list\n  },\n\n})\n<\/script>',template:'<div class="source">    <vue-toolbar id="toolbar_demo3" :setting="{storage: true}">\n      <template v-slot:buttons>\n        <vue-button>按钮1</vue-button>\n        <vue-button>按钮2</vue-button>\n      </template>\n    </vue-toolbar>\n\n    <vue-xtable\n      border\n      height="400"\n      :data="tableData">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n      <vue-xtable-column field="role" title="Role"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){var e=window.MOCK_DATA_LIST.slice(0,20);this.tableData=e}}}],styles:""}},"./demo/XtableDemo/advanced/CustomlWidthStorage.vue":
/*!**********************************************************!*\
  !*** ./demo/XtableDemo/advanced/CustomlWidthStorage.vue ***!
  \**********************************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/advanced/CustomlWidthStorage",name:"XtableDemo.advanced.CustomlWidthStorage",head:{label:"XtableDemo.advanced.CustomlWidthStorage.label",description:"XtableDemo.advanced.CustomlWidthStorage.description"},samples:[{id:"XtableDemo.advanced.CustomlWidthStorage.sample1",label:"XtableDemo.advanced.CustomlWidthStorage.sample1.label",description:"XtableDemo.advanced.CustomlWidthStorage.sample1.description",code:'<vue-toolbar id="toolbar_demo5" :resizable="{storage: true}" :setting="{storage: true, checkMethod: checkColumnMethod}">\n  <template v-slot:buttons>\n    <vue-button>按钮1</vue-button>\n    <vue-button>按钮2</vue-button>\n  </template>\n</vue-toolbar>\n\n<vue-xtable\n  border\n  resizable\n  height="400"\n  :data="tableData">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n  <vue-xtable-column field="role" title="Role"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 20)\n    this.tableData = list\n  },\n\n  methods: {\n    checkColumnMethod ({ column }) {\n      if (column.property === \'role\') {\n        return false\n      }\n      return true\n    }\n  }\n})\n<\/script>',template:'<div class="source">    <vue-toolbar id="toolbar_demo5" :resizable="{storage: true}" :setting="{storage: true, checkMethod: checkColumnMethod}">\n      <template v-slot:buttons>\n        <vue-button>按钮1</vue-button>\n        <vue-button>按钮2</vue-button>\n      </template>\n    </vue-toolbar>\n\n    <vue-xtable\n      border\n      resizable\n      height="400"\n      :data="tableData">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n      <vue-xtable-column field="role" title="Role"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){var e=window.MOCK_DATA_LIST.slice(0,20);this.tableData=e},methods:{checkColumnMethod:function(e){return"role"!==e.column.property}}}}],styles:""}},"./demo/XtableDemo/advanced/Dynamic.vue":
/*!**********************************************!*\
  !*** ./demo/XtableDemo/advanced/Dynamic.vue ***!
  \**********************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/advanced/Dynamic",name:"XtableDemo.advanced.Dynamic",head:{label:"XtableDemo.advanced.Dynamic.label",description:"XtableDemo.advanced.Dynamic.description"},samples:[{id:"XtableDemo.advanced.Dynamic.sample1",label:"XtableDemo.advanced.Dynamic.sample1.label",description:"XtableDemo.advanced.Dynamic.sample1.description",code:"<vue-toolbar>\n  <template v-slot:buttons>\n    <vue-button @click=\"addColumn()\">最后增加一列</vue-button>\n    <vue-button @click=\"removeColumn()\">删除最后一列</vue-button>\n    <vue-button @click=\"updateFilter(4)\">修改第五列筛选条件</vue-button>\n    <vue-button @click=\"toggleFixedColumn(0, 'left')\">切换第一列固定</vue-button>\n    <vue-button @click=\"toggleFixedColumn(1, 'left')\">切换第二列固定</vue-button>\n    <vue-button @click=\"updateWidthColumn(2, 500)\">修改第三列宽度</vue-button>\n    <vue-button @click=\"updateWidthColumn(3, 500)\">修改第四列宽度</vue-button>\n  </template>\n</vue-toolbar>\n\n<vue-xtable\n  border\n  highlight-hover-row\n  highlight-current-row\n  ref=\"xTable\"\n  height=\"300\"\n  :data=\"tableData\">\n  <vue-xtable-column v-for=\"(config, index) in tableColumn\" :key=\"index\" v-bind=\"config\"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n      tableColumn: [\n        { type: 'index', width: 60, fixed: null },\n        { type: 'checkbox', width: 50, fixed: null },\n        { field: 'name', title: 'Name', width: 200 },\n        { field: 'nickname', title: 'Nickname', width: 300 },\n        { field: 'sex', title: 'Sex', width: 200, filters: [{ value: '1', label: '男' }] },\n        { field: 'role', title: 'Role', width: 200 },\n        { field: 'address', title: 'Address', width: 300, showOverflow: true }\n      ],\n\n    }\n  },\n\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\n  },\n  methods: {\n    addColumn () {\n      const uniqueId = VueUtil.uniqueId()\n      this.tableColumn.push({\n        field: `new_${uniqueId}`,\n        title: `新列_${uniqueId}`,\n        minWidth: 100\n      })\n    },\n    removeColumn () {\n      this.tableColumn.pop()\n    },\n    updateFilter (index) {\n      let xTable = this.$refs.xTable\n      xTable.filter(this.tableColumn[index].field, options => {\n        // 修改筛选列表，可以通过 checked 属性设置默认勾选\n        return [\n          { value: '1', label: '男' },\n          { value: '0', label: '女', checked: true }\n        ]\n      }).then(() => {\n        // 修改条件之后，需要手动调用 updateData 处理表格数据\n        xTable.updateData()\n      })\n    },\n    toggleFixedColumn (index, value) {\n      const xTable = this.$refs.xTable\n      this.tableColumn[index].fixed = this.tableColumn[index].fixed ? null : value\n      // 更改了列属性，需要手动刷新列\n      this.$nextTick(() => {\n        xTable.refreshColumn()\n          // 由于固定列的动态切换是无状态的，所以需要手动刷新滚动位置\n          .then(() => xTable.refreshScroll())\n      })\n    },\n    updateWidthColumn (index, value) {\n      this.tableColumn[index].width = value\n      // 更改了列属性，需要手动刷新列\n      this.$nextTick(() => {\n        this.$refs.xTable.refreshColumn()\n      })\n    }\n  }\n})\n<\/script>",template:'<div class="source">    <vue-toolbar>\n      <template v-slot:buttons>\n        <vue-button @click="addColumn()">最后增加一列</vue-button>\n        <vue-button @click="removeColumn()">删除最后一列</vue-button>\n        <vue-button @click="updateFilter(4)">修改第五列筛选条件</vue-button>\n        <vue-button @click="toggleFixedColumn(0, \'left\')">切换第一列固定</vue-button>\n        <vue-button @click="toggleFixedColumn(1, \'left\')">切换第二列固定</vue-button>\n        <vue-button @click="updateWidthColumn(2, 500)">修改第三列宽度</vue-button>\n        <vue-button @click="updateWidthColumn(3, 500)">修改第四列宽度</vue-button>\n      </template>\n    </vue-toolbar>\n\n    <vue-xtable\n      border\n      highlight-hover-row\n      highlight-current-row\n      ref="xTable"\n      height="300"\n      :data="tableData">\n      <vue-xtable-column v-for="(config, index) in tableColumn" :key="index" v-bind="config"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[],tableColumn:[{type:"index",width:60,fixed:null},{type:"checkbox",width:50,fixed:null},{field:"name",title:"Name",width:200},{field:"nickname",title:"Nickname",width:300},{field:"sex",title:"Sex",width:200,filters:[{value:"1",label:"男"}]},{field:"role",title:"Role",width:200},{field:"address",title:"Address",width:300,showOverflow:!0}]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,6)},methods:{addColumn:function(){var e=VueUtil.uniqueId();this.tableColumn.push({field:"new_".concat(e),title:"新列_".concat(e),minWidth:100})},removeColumn:function(){this.tableColumn.pop()},updateFilter:function(e){var n=this.$refs.xTable;n.filter(this.tableColumn[e].field,function(e){return[{value:"1",label:"男"},{value:"0",label:"女",checked:!0}]}).then(function(){n.updateData()})},toggleFixedColumn:function(e,n){var t=this.$refs.xTable;this.tableColumn[e].fixed=this.tableColumn[e].fixed?null:n,this.$nextTick(function(){t.refreshColumn().then(function(){return t.refreshScroll()})})},updateWidthColumn:function(e,n){var t=this;this.tableColumn[e].width=n,this.$nextTick(function(){t.$refs.xTable.refreshColumn()})}}}}],styles:""}},"./demo/XtableDemo/advanced/Event.vue":
/*!********************************************!*\
  !*** ./demo/XtableDemo/advanced/Event.vue ***!
  \********************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/advanced/Event",name:"XtableDemo.advanced.Event",head:{label:"XtableDemo.advanced.Event.label",description:"XtableDemo.advanced.Event.description"},samples:[{id:"XtableDemo.advanced.Event.sample1",label:"XtableDemo.advanced.Event.sample1.label",description:"XtableDemo.advanced.Event.sample1.description",code:'<vue-xtable\n  border\n  height="500"\n  highlight-hover-row\n  show-overflow\n  resizable\n  :data="tableData"\n  @header-cell-click="headerCellClickEvent"\n  @header-cell-dblclick="headerCellDBLClickEvent"\n  @cell-click="cellClickEvent"\n  @cell-dblclick="cellDBLClickEvent"\n  @cell-mouseenter="cellMouseenterEvent"\n  @cell-mouseleave="cellMouseleaveEvent"\n  @body-scroll="bodyScrollEvent">\n  <vue-xtable-column type="index" title="序号" width="60" fixed="left"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" width="300"></vue-xtable-column>\n  <vue-xtable-column field="role" title="Role" width="300"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex" width="300"></vue-xtable-column>\n  <vue-xtable-column field="date" title="Date" width="300"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" fixed="right" width="300"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 20)\n    this.tableData = list\n  },\n  methods: {\n    headerCellClickEvent ({ row, rowIndex, column, columnIndex }, event) {\n      console.log(`表头单元格点击${column.title}`)\n    },\n    headerCellDBLClickEvent ({ row, rowIndex, column, columnIndex }, event) {\n      console.log(`表头单元格双击${column.title}`)\n    },\n    cellClickEvent ({ row, rowIndex, column, columnIndex }, event) {\n      console.log(`单元格点击${column.title}`)\n    },\n    cellDBLClickEvent ({ row, rowIndex, column, columnIndex }, event) {\n      console.log(`单元格双击${column.title}`)\n    },\n    cellMouseenterEvent ({ row, rowIndex, column, columnIndex }, event) {\n      console.log(`鼠标进入单元格${column.title}`)\n    },\n    cellMouseleaveEvent ({ row, rowIndex, column, columnIndex }, event) {\n      console.log(`鼠标离开单元格${column.title}`)\n    },\n    bodyScrollEvent ({ scrollTop, scrollLeft }, event) {\n      console.log(`滚动事件scrollTop=${scrollTop} scrollLeft=${scrollLeft}`)\n    }\n  }\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      border\n      height="500"\n      highlight-hover-row\n      show-overflow\n      resizable\n      :data="tableData"\n      @header-cell-click="headerCellClickEvent"\n      @header-cell-dblclick="headerCellDBLClickEvent"\n      @cell-click="cellClickEvent"\n      @cell-dblclick="cellDBLClickEvent"\n      @cell-mouseenter="cellMouseenterEvent"\n      @cell-mouseleave="cellMouseleaveEvent"\n      @body-scroll="bodyScrollEvent">\n      <vue-xtable-column type="index" title="序号" width="60" fixed="left"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" width="300"></vue-xtable-column>\n      <vue-xtable-column field="role" title="Role" width="300"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex" width="300"></vue-xtable-column>\n      <vue-xtable-column field="date" title="Date" width="300"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" fixed="right" width="300"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){var e=window.MOCK_DATA_LIST.slice(0,20);this.tableData=e},methods:{headerCellClickEvent:function(e,n){e.row,e.rowIndex;var t=e.column;e.columnIndex;console.log("表头单元格点击".concat(t.title))},headerCellDBLClickEvent:function(e,n){e.row,e.rowIndex;var t=e.column;e.columnIndex;console.log("表头单元格双击".concat(t.title))},cellClickEvent:function(e,n){e.row,e.rowIndex;var t=e.column;e.columnIndex;console.log("单元格点击".concat(t.title))},cellDBLClickEvent:function(e,n){e.row,e.rowIndex;var t=e.column;e.columnIndex;console.log("单元格双击".concat(t.title))},cellMouseenterEvent:function(e,n){e.row,e.rowIndex;var t=e.column;e.columnIndex;console.log("鼠标进入单元格".concat(t.title))},cellMouseleaveEvent:function(e,n){e.row,e.rowIndex;var t=e.column;e.columnIndex;console.log("鼠标离开单元格".concat(t.title))},bodyScrollEvent:function(e,n){var t=e.scrollTop,l=e.scrollLeft;console.log("滚动事件scrollTop=".concat(t," scrollLeft=").concat(l))}}}}],styles:""}},"./demo/XtableDemo/advanced/Expand.vue":
/*!*********************************************!*\
  !*** ./demo/XtableDemo/advanced/Expand.vue ***!
  \*********************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/advanced/Expand",name:"XtableDemo.advanced.Expand",head:{label:"XtableDemo.advanced.Expand.label",description:"XtableDemo.advanced.Expand.description"},samples:[{id:"XtableDemo.advanced.Expand.sample1",label:"XtableDemo.advanced.Expand.sample1.label",description:"XtableDemo.advanced.Expand.sample1.description",code:'<vue-toolbar>\n  <template v-slot:buttons>\n    <vue-button @click="$refs.xTable.toggleRowExpansion(tableData[1])">切换第二行展开</vue-button>\n    <vue-button @click="$refs.xTable.setRowExpansion([tableData[2], tableData[3]], true)">设置第三、四行展开</vue-button>\n    <vue-button @click="$refs.xTable.setAllRowExpansion(true)">设置所有行展开</vue-button>\n    <vue-button @click="$refs.xTable.clearRowExpand()">关闭所有行展开</vue-button>\n  </template>\n</vue-toolbar>\n\n<vue-xtable\n  ref="xTable"\n  border\n  :data="tableData"\n  @toggle-expand-change="toggleExpandChangeEvent">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column type="expand" width="60">\n    <template v-slot="scope">\n      <template v-if="scope.rowIndex === 1">\n        <vue-xtable\n          border\n          :data="tableData">\n          <vue-xtable-column field="role" title="Role"></vue-xtable-column>\n          <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n        </vue-xtable>\n      </template>\n      <template v-else>\n        <ul>\n          <li>\n            <span>ID：</span>\n            <span>{{ scope.row.id }}</span>\n          </li>\n          <li>\n            <span>Name：</span>\n            <span>{{ scope.row.name }}</span>\n          </li>\n          <li>\n            <span>UpdateTime：</span>\n            <span>{{ scope.row.updateTime }}</span>\n          </li>\n          <li>\n            <span>CreateTime：</span>\n            <span>{{ scope.row.createTime }}</span>\n          </li>\n        </ul>\n      </template>\n    </template>\n  </vue-xtable-column>\n  <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 3)\n  },\n\n  methods: {\n    toggleExpandChangeEvent ({ row }) {\n      console.log(\'行展开、收起事件\')\n    }\n  }\n})\n<\/script>',template:'<div class="source">    <vue-toolbar>\n      <template v-slot:buttons>\n        <vue-button @click="$refs.xTable.toggleRowExpansion(tableData[1])">切换第二行展开</vue-button>\n        <vue-button @click="$refs.xTable.setRowExpansion([tableData[2], tableData[3]], true)">设置第三、四行展开</vue-button>\n        <vue-button @click="$refs.xTable.setAllRowExpansion(true)">设置所有行展开</vue-button>\n        <vue-button @click="$refs.xTable.clearRowExpand()">关闭所有行展开</vue-button>\n      </template>\n    </vue-toolbar>\n\n    <vue-xtable\n      ref="xTable"\n      border\n      :data="tableData"\n      @toggle-expand-change="toggleExpandChangeEvent">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column type="expand" width="60">\n        <template v-slot="scope">\n          <template v-if="scope.rowIndex === 1">\n            <vue-xtable\n              border\n              :data="tableData">\n              <vue-xtable-column field="role" title="Role"></vue-xtable-column>\n              <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n            </vue-xtable>\n          </template>\n          <template v-else>\n            <ul>\n              <li>\n                <span>ID：</span>\n                <span>{{ scope.row.id }}</span>\n              </li>\n              <li>\n                <span>Name：</span>\n                <span>{{ scope.row.name }}</span>\n              </li>\n              <li>\n                <span>UpdateTime：</span>\n                <span>{{ scope.row.updateTime }}</span>\n              </li>\n              <li>\n                <span>CreateTime：</span>\n                <span>{{ scope.row.createTime }}</span>\n              </li>\n            </ul>\n          </template>\n        </template>\n      </vue-xtable-column>\n      <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,3)},methods:{toggleExpandChangeEvent:function(e){e.row;console.log("行展开、收起事件")}}}},{id:"XtableDemo.advanced.Expand.sample2",label:"XtableDemo.advanced.Expand.sample2.label",description:"XtableDemo.advanced.Expand.sample2.description",code:'<vue-xtable\n  border\n  row-id="id"\n  :expand-config="{expandRowKeys: [\'1\']}"\n  :data="tableData">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column type="expand" width="60">\n    <template v-slot="scope">\n      <template v-if="scope.rowIndex === 1">\n        <vue-xtable\n          border\n          :data="tableData">\n          <vue-xtable-column field="role" title="Role"></vue-xtable-column>\n          <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n        </vue-xtable>\n      </template>\n      <template v-else>\n        <ul>\n          <li>\n            <span>ID：</span>\n            <span>{{ scope.row.id }}</span>\n          </li>\n          <li>\n            <span>Name：</span>\n            <span>{{ scope.row.name }}</span>\n          </li>\n          <li>\n            <span>UpdateTime：</span>\n            <span>{{ scope.row.updateTime }}</span>\n          </li>\n          <li>\n            <span>CreateTime：</span>\n            <span>{{ scope.row.createTime }}</span>\n          </li>\n        </ul>\n      </template>\n    </template>\n  </vue-xtable-column>\n  <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 3)\n  },\n\n  methods: {\n    toggleExpandChangeEvent ({ row }) {\n      console.log(\'行展开、收起事件\')\n    }\n  }\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      border\n      row-id="id"\n      :expand-config="{expandRowKeys: [\'1\']}"\n      :data="tableData">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column type="expand" width="60">\n        <template v-slot="scope">\n          <template v-if="scope.rowIndex === 1">\n            <vue-xtable\n              border\n              :data="tableData">\n              <vue-xtable-column field="role" title="Role"></vue-xtable-column>\n              <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n            </vue-xtable>\n          </template>\n          <template v-else>\n            <ul>\n              <li>\n                <span>ID：</span>\n                <span>{{ scope.row.id }}</span>\n              </li>\n              <li>\n                <span>Name：</span>\n                <span>{{ scope.row.name }}</span>\n              </li>\n              <li>\n                <span>UpdateTime：</span>\n                <span>{{ scope.row.updateTime }}</span>\n              </li>\n              <li>\n                <span>CreateTime：</span>\n                <span>{{ scope.row.createTime }}</span>\n              </li>\n            </ul>\n          </template>\n        </template>\n      </vue-xtable-column>\n      <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,3)},methods:{toggleExpandChangeEvent:function(e){e.row;console.log("行展开、收起事件")}}}},{id:"XtableDemo.advanced.Expand.sample3",label:"XtableDemo.advanced.Expand.sample3.label",description:"XtableDemo.advanced.Expand.sample3.description",code:'<vue-xtable\n  border\n  :data="tableData"\n  :expand-config="{expandAll: true}">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column type="expand" width="60">\n    <template v-slot="scope">\n      <ul>\n        <li>\n          <span>ID：</span>\n          <span>{{ scope.row.id }}</span>\n        </li>\n        <li>\n          <span>Name：</span>\n          <span>{{ scope.row.name }}</span>\n        </li>\n        <li>\n          <span>UpdateTime：</span>\n          <span>{{ scope.row.updateTime }}</span>\n        </li>\n        <li>\n          <span>CreateTime：</span>\n          <span>{{ scope.row.createTime }}</span>\n        </li>\n      </ul>\n    </template>\n  </vue-xtable-column>\n  <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 3)\n  },\n\n  methods: {\n    toggleExpandChangeEvent ({ row }) {\n      console.log(\'行展开、收起事件\')\n    }\n  }\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      border\n      :data="tableData"\n      :expand-config="{expandAll: true}">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column type="expand" width="60">\n        <template v-slot="scope">\n          <ul>\n            <li>\n              <span>ID：</span>\n              <span>{{ scope.row.id }}</span>\n            </li>\n            <li>\n              <span>Name：</span>\n              <span>{{ scope.row.name }}</span>\n            </li>\n            <li>\n              <span>UpdateTime：</span>\n              <span>{{ scope.row.updateTime }}</span>\n            </li>\n            <li>\n              <span>CreateTime：</span>\n              <span>{{ scope.row.createTime }}</span>\n            </li>\n          </ul>\n        </template>\n      </vue-xtable-column>\n      <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,3)},methods:{toggleExpandChangeEvent:function(e){e.row;console.log("行展开、收起事件")}}}}],styles:""}},"./demo/XtableDemo/advanced/Export.vue":
/*!*********************************************!*\
  !*** ./demo/XtableDemo/advanced/Export.vue ***!
  \*********************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/advanced/Export",name:"XtableDemo.advanced.Export",head:{label:"XtableDemo.advanced.Export.label",description:"XtableDemo.advanced.Export.description"},samples:[{id:"XtableDemo.advanced.Export.sample1",label:"XtableDemo.advanced.Export.sample1.label",description:"XtableDemo.advanced.Export.sample1.description",code:'<vue-toolbar>\n  <template v-slot:buttons>\n    <vue-button @click="exportDataEvent">默认导出</vue-button>\n    <vue-button @click="exportSelectEvent">导出选中</vue-button>\n  </template>\n</vue-toolbar>\n\n<vue-xtable\n  ref="xTable1"\n  highlight-hover-row\n  height="300"\n  :data="tableData">\n  <vue-xtable-column type="checkbox" width="60"></vue-xtable-column>\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age" sortable></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\n  },\n\n  methods: {\n    exportDataEvent () {\n      this.$refs.xTable1.exportData({ type: \'csv\' })\n    },\n    exportSelectEvent () {\n      this.$refs.xTable1.exportData({\n        data: this.$refs.xTable1.getSelectRecords()\n      })\n    },\n  }\n})\n<\/script>',template:'<div class="source">    <vue-toolbar>\n      <template v-slot:buttons>\n        <vue-button @click="exportDataEvent">默认导出</vue-button>\n        <vue-button @click="exportSelectEvent">导出选中</vue-button>\n      </template>\n    </vue-toolbar>\n\n    <vue-xtable\n      ref="xTable1"\n      highlight-hover-row\n      height="300"\n      :data="tableData">\n      <vue-xtable-column type="checkbox" width="60"></vue-xtable-column>\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age" sortable></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,50)},methods:{exportDataEvent:function(){this.$refs.xTable1.exportData({type:"csv"})},exportSelectEvent:function(){this.$refs.xTable1.exportData({data:this.$refs.xTable1.getSelectRecords()})}}}},{id:"XtableDemo.advanced.Export.sample2",label:"XtableDemo.advanced.Export.sample2.label",description:"XtableDemo.advanced.Export.sample2.description",code:'<vue-toolbar>\n  <template v-slot:buttons>\n    <vue-button @click="exportDataEvent2">导出指定列 [name,sex]</vue-button>\n  </template>\n</vue-toolbar>\n\n<vue-xtable\n  ref="xTable2"\n  highlight-hover-row\n  height="300"\n  :data="tableData">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age" sortable></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\n  },\n\n  methods: {\n    exportDataEvent2 () {\n      this.$refs.xTable2.exportData({\n        type: \'csv\',\n        columnFilterMethod: column => VueUtil.includes([\'name\', \'sex\'], column.property)\n      })\n    },\n  }\n})\n<\/script>',template:'<div class="source">    <vue-toolbar>\n      <template v-slot:buttons>\n        <vue-button @click="exportDataEvent2">导出指定列 [name,sex]</vue-button>\n      </template>\n    </vue-toolbar>\n\n    <vue-xtable\n      ref="xTable2"\n      highlight-hover-row\n      height="300"\n      :data="tableData">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age" sortable></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,50)},methods:{exportDataEvent2:function(){this.$refs.xTable2.exportData({type:"csv",columnFilterMethod:function(e){return VueUtil.includes(["name","sex"],e.property)}})}}}},{id:"XtableDemo.advanced.Export.sample3",label:"XtableDemo.advanced.Export.sample3.label",description:"XtableDemo.advanced.Export.sample3.description",code:'<vue-toolbar>\n  <template v-slot:buttons>\n    <vue-button @click="exportDataEvent3">导出指定第10-20行</vue-button>\n  </template>\n</vue-toolbar>\n\n<vue-xtable\n  ref="xTable3"\n  highlight-hover-row\n  height="300"\n  :data="tableData">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age" sortable></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\n  },\n\n  methods: {\n    exportDataEvent3 () {\n      this.$refs.xTable3.exportData({\n        type: \'csv\',\n        dataFilterMethod: (row, rowIndex) => rowIndex >= 9 && rowIndex < 20\n      })\n    },\n  }\n})\n<\/script>',template:'<div class="source">    <vue-toolbar>\n      <template v-slot:buttons>\n        <vue-button @click="exportDataEvent3">导出指定第10-20行</vue-button>\n      </template>\n    </vue-toolbar>\n\n    <vue-xtable\n      ref="xTable3"\n      highlight-hover-row\n      height="300"\n      :data="tableData">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age" sortable></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,50)},methods:{exportDataEvent3:function(){this.$refs.xTable3.exportData({type:"csv",dataFilterMethod:function(e,n){return n>=9&&n<20}})}}}},{id:"XtableDemo.advanced.Export.sample4",label:"XtableDemo.advanced.Export.sample4.label",description:"XtableDemo.advanced.Export.sample4.description",code:'<vue-toolbar>\n  <template v-slot:buttons>\n    <vue-button @click="exportDataEvent4">完整配置</vue-button>\n  </template>\n</vue-toolbar>\n\n<vue-xtable\n  ref="xTable4"\n  highlight-hover-row\n  height="300"\n  :data="tableData">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age" sortable></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\n  },\n\n  methods: {\n    exportDataEvent4 () {\n      this.$refs.xTable4.exportData({\n        filename: \'自定义文件名\',\n        type: \'csv\',\n    \n        original: true,\n        isHeader: false,\n        data: this.tableData.map(row => {\n          row.date = VueUtil.formatDate(row.date, \'yyyy-MM-dd\')\n          return row\n        })\n      })\n    }\n  }\n})\n<\/script>',template:'<div class="source">    <vue-toolbar>\n      <template v-slot:buttons>\n        <vue-button @click="exportDataEvent4">完整配置</vue-button>\n      </template>\n    </vue-toolbar>\n\n    <vue-xtable\n      ref="xTable4"\n      highlight-hover-row\n      height="300"\n      :data="tableData">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age" sortable></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,50)},methods:{exportDataEvent4:function(){this.$refs.xTable4.exportData({filename:"自定义文件名",type:"csv",original:!0,isHeader:!1,data:this.tableData.map(function(e){return e.date=VueUtil.formatDate(e.date,"yyyy-MM-dd"),e})})}}}}],styles:""}},"./demo/XtableDemo/advanced/FixedType.vue":
/*!************************************************!*\
  !*** ./demo/XtableDemo/advanced/FixedType.vue ***!
  \************************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/advanced/FixedType",name:"XtableDemo.advanced.FixedType",head:{label:"XtableDemo.advanced.FixedType.label",description:"XtableDemo.advanced.FixedType.description"},samples:[{id:"XtableDemo.advanced.FixedType.sample1",label:"XtableDemo.advanced.FixedType.sample1.label",description:"XtableDemo.advanced.FixedType.sample1.description",code:'<vue-toolbar>\n  <template v-slot:buttons>\n    <vue-button @click="clearDataEvent">清空数据</vue-button>\n    <vue-button @click="exportDataEvent">导出数据</vue-button>\n    <vue-button @click="importDataEvent">导入数据</vue-button>\n  </template>\n</vue-toolbar>\n\n<vue-xtable\n  border\n  highlight-hover-row\n  ref="xTable"\n  height="400"\n  :data="tableData">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age" sortable></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 10)\n  },\n\n  methods: {\n    clearDataEvent () {\n      this.tableData = []\n    },\n    exportDataEvent () {\n      this.$refs.xTable.openExport({ types: [\'csv\'] })\n    },\n    importDataEvent () {\n      this.$refs.xTable.importData({ types: [\'csv\'] })\n    }\n  }\n})\n<\/script>',template:'<div class="source">    <vue-toolbar>\n      <template v-slot:buttons>\n        <vue-button @click="clearDataEvent">清空数据</vue-button>\n        <vue-button @click="exportDataEvent">导出数据</vue-button>\n        <vue-button @click="importDataEvent">导入数据</vue-button>\n      </template>\n    </vue-toolbar>\n\n    <vue-xtable\n      border\n      highlight-hover-row\n      ref="xTable"\n      height="400"\n      :data="tableData">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age" sortable></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,10)},methods:{clearDataEvent:function(){this.tableData=[]},exportDataEvent:function(){this.$refs.xTable.openExport({types:["csv"]})},importDataEvent:function(){this.$refs.xTable.importData({types:["csv"]})}}}}],styles:""}},"./demo/XtableDemo/advanced/Footer.vue":
/*!*********************************************!*\
  !*** ./demo/XtableDemo/advanced/Footer.vue ***!
  \*********************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/advanced/Footer",name:"XtableDemo.advanced.Footer",head:{label:"XtableDemo.advanced.Footer.label",description:"XtableDemo.advanced.Footer.description"},samples:[{id:"XtableDemo.advanced.Footer.sample1",label:"XtableDemo.advanced.Footer.sample1.label",description:"XtableDemo.advanced.Footer.sample1.description",code:'<vue-xtable\n  class="mytable-footer"\n  border\n  highlight-hover-row\n  show-footer\n  height="400"\n  :footer-method="footerMethod"\n  :data="tableData">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" sortable></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n  <vue-xtable-column field="rate" title="Rate"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 50)\n    this.tableData = list\n  },\n\n  methods: {\n    footerMethod ({ columns, data }) {\n      const footerData = [\n        columns.map((column, columnIndex) => {\n          if (columnIndex === 0) {\n            return \'平均\'\n          }\n          if (VueUtil.includes([\'age\', \'rate\'], column.property)) {\n            return VueUtil.mean(data.map( data => data[column.property]))\n          }\n          return null\n        }),\n        columns.map((column, columnIndex) => {\n          if (columnIndex === 0) {\n            return \'和值\'\n          }\n          if (VueUtil.includes([\'age\', \'rate\'], column.property)) {\n            return VueUtil.sum(data.map( data => data[column.property]))\n          }\n          return null\n        })\n      ]\n      return footerData\n    }\n  }\n})\n<\/script>\n\n<style>\n.mytable-footer .vue-xtable-footer--column.col-blue {\n  background-color: #2db7f5;\n  color: #fff;\n}\n.mytable-footer .vue-xtable-footer--column.col-red {\n  background-color: red;\n  color: #fff;\n}\n</style>',template:'<div class="source">    <vue-xtable\n      class="mytable-footer"\n      border\n      highlight-hover-row\n      show-footer\n      height="400"\n      :footer-method="footerMethod"\n      :data="tableData">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" sortable></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n      <vue-xtable-column field="rate" title="Rate"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){var e=window.MOCK_DATA_LIST.slice(0,50);this.tableData=e},methods:{footerMethod:function(e){var n=e.columns,t=e.data;return[n.map(function(e,n){return 0===n?"平均":VueUtil.includes(["age","rate"],e.property)?VueUtil.mean(t.map(function(n){return n[e.property]})):null}),n.map(function(e,n){return 0===n?"和值":VueUtil.includes(["age","rate"],e.property)?VueUtil.sum(t.map(function(n){return n[e.property]})):null})]}}}},{id:"XtableDemo.advanced.Footer.sample2",label:"XtableDemo.advanced.Footer.sample2.label",description:"XtableDemo.advanced.Footer.sample2.description",code:'<vue-xtable\n  class="mytable-footer"\n  border\n  show-footer\n  height="400"\n  :footer-method="footerMethod"\n  :footer-cell-class-name="footerCellClassName"\n  :data="tableData">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" sortable></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n  <vue-xtable-column field="rate" title="Rate"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 50)\n    this.tableData = list\n  },\n\n  methods: {\n    footerCellClassName ({ $rowIndex, column, columnIndex }) {\n      if (columnIndex === 0) {\n        if ($rowIndex === 0) {\n          return \'col-blue\'\n        } else {\n          return \'col-red\'\n        }\n      }\n    },\n    footerMethod ({ columns, data }) {\n      const footerData = [\n        columns.map((column, columnIndex) => {\n          if (columnIndex === 0) {\n            return \'平均\'\n          }\n          if (VueUtil.includes([\'age\', \'rate\'], column.property)) {\n            return VueUtil.mean(data.map( data => data[column.property]))\n          }\n          return null\n        }),\n        columns.map((column, columnIndex) => {\n          if (columnIndex === 0) {\n            return \'和值\'\n          }\n          if (VueUtil.includes([\'age\', \'rate\'], column.property)) {\n            return VueUtil.sum(data.map( data => data[column.property]))\n          }\n          return null\n        })\n      ]\n      return footerData\n    }\n  }\n})\n<\/script>\n\n<style>\n.mytable-footer .vue-xtable-footer--column.col-blue {\n  background-color: #2db7f5;\n  color: #fff;\n}\n.mytable-footer .vue-xtable-footer--column.col-red {\n  background-color: red;\n  color: #fff;\n}\n</style>',template:'<div class="source">    <vue-xtable\n      class="mytable-footer"\n      border\n      show-footer\n      height="400"\n      :footer-method="footerMethod"\n      :footer-cell-class-name="footerCellClassName"\n      :data="tableData">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" sortable></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n      <vue-xtable-column field="rate" title="Rate"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){var e=window.MOCK_DATA_LIST.slice(0,50);this.tableData=e},methods:{footerCellClassName:function(e){var n=e.$rowIndex;e.column;if(0===e.columnIndex)return 0===n?"col-blue":"col-red"},footerMethod:function(e){var n=e.columns,t=e.data;return[n.map(function(e,n){return 0===n?"平均":VueUtil.includes(["age","rate"],e.property)?VueUtil.mean(t.map(function(n){return n[e.property]})):null}),n.map(function(e,n){return 0===n?"和值":VueUtil.includes(["age","rate"],e.property)?VueUtil.sum(t.map(function(n){return n[e.property]})):null})]}}}},{id:"XtableDemo.advanced.Footer.sample3",label:"XtableDemo.advanced.Footer.sample3.label",description:"XtableDemo.advanced.Footer.sample3.description",code:'<vue-xtable\n  class="mytable-footer"\n  border\n  show-footer\n  height="400"\n  show-overflow\n  :footer-method="footerMethod"\n  :footer-cell-class-name="footerCellClassName"\n  :data="tableData">\n  <vue-xtable-column type="index" width="60" fixed="left"></vue-xtable-column>\n  <vue-xtable-column title="基本信息">\n    <vue-xtable-column field="name" title="Name" min-width="600" sortable></vue-xtable-column>\n    <vue-xtable-column field="age" title="Age" min-width="600"></vue-xtable-column>\n  </vue-xtable-column>\n  <vue-xtable-column field="date" title="Date" min-width="600"></vue-xtable-column>\n  <vue-xtable-column field="rate" title="Rate" width="200" fixed="right"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 50)\n    this.tableData = list\n  },\n\n  methods: {\n    footerCellClassName ({ $rowIndex, column, columnIndex }) {\n      if (columnIndex === 0) {\n        if ($rowIndex === 0) {\n          return \'col-blue\'\n        } else {\n          return \'col-red\'\n        }\n      }\n    },\n    footerMethod ({ columns, data }) {\n      const footerData = [\n        columns.map((column, columnIndex) => {\n          if (columnIndex === 0) {\n            return \'平均\'\n          }\n          if (VueUtil.includes([\'age\', \'rate\'], column.property)) {\n            return VueUtil.mean(data.map( data => data[column.property]))\n          }\n          return null\n        }),\n        columns.map((column, columnIndex) => {\n          if (columnIndex === 0) {\n            return \'和值\'\n          }\n          if (VueUtil.includes([\'age\', \'rate\'], column.property)) {\n            return VueUtil.sum(data.map( data => data[column.property]))\n          }\n          return null\n        })\n      ]\n      return footerData\n    }\n  }\n})\n<\/script>\n\n<style>\n.mytable-footer .vue-xtable-footer--column.col-blue {\n  background-color: #2db7f5;\n  color: #fff;\n}\n.mytable-footer .vue-xtable-footer--column.col-red {\n  background-color: red;\n  color: #fff;\n}\n</style>',template:'<div class="source">    <vue-xtable\n      class="mytable-footer"\n      border\n      show-footer\n      height="400"\n      show-overflow\n      :footer-method="footerMethod"\n      :footer-cell-class-name="footerCellClassName"\n      :data="tableData">\n      <vue-xtable-column type="index" width="60" fixed="left"></vue-xtable-column>\n      <vue-xtable-column title="基本信息">\n        <vue-xtable-column field="name" title="Name" min-width="600" sortable></vue-xtable-column>\n        <vue-xtable-column field="age" title="Age" min-width="600"></vue-xtable-column>\n      </vue-xtable-column>\n      <vue-xtable-column field="date" title="Date" min-width="600"></vue-xtable-column>\n      <vue-xtable-column field="rate" title="Rate" width="200" fixed="right"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){var e=window.MOCK_DATA_LIST.slice(0,50);this.tableData=e},methods:{footerCellClassName:function(e){var n=e.$rowIndex;e.column;if(0===e.columnIndex)return 0===n?"col-blue":"col-red"},footerMethod:function(e){var n=e.columns,t=e.data;return[n.map(function(e,n){return 0===n?"平均":VueUtil.includes(["age","rate"],e.property)?VueUtil.mean(t.map(function(n){return n[e.property]})):null}),n.map(function(e,n){return 0===n?"和值":VueUtil.includes(["age","rate"],e.property)?VueUtil.sum(t.map(function(n){return n[e.property]})):null})]}}}}],styles:".mytable-footer .vue-xtable-footer--column.col-blue {\n  background-color: #2db7f5;\n  color: #fff;\n}\n.mytable-footer .vue-xtable-footer--column.col-red {\n  background-color: red;\n  color: #fff;\n}"}},"./demo/XtableDemo/advanced/FooterSpan.vue":
/*!*************************************************!*\
  !*** ./demo/XtableDemo/advanced/FooterSpan.vue ***!
  \*************************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/advanced/FooterSpan",name:"XtableDemo.advanced.FooterSpan",head:{label:"XtableDemo.advanced.FooterSpan.label",description:"XtableDemo.advanced.FooterSpan.description"},samples:[{id:"XtableDemo.advanced.FooterSpan.sample1",label:"XtableDemo.advanced.FooterSpan.sample1.label",description:"XtableDemo.advanced.FooterSpan.sample1.description",code:'<vue-xtable\n  border\n  show-footer\n  height="400"\n  :span-method="colspanMethod"\n  :footer-span-method="footerColspanMethod"\n  :footer-method="footerMethod"\n  :data="tableData">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" sortable></vue-xtable-column>\n  <vue-xtable-column field="role" title="Role" sortable></vue-xtable-column>\n  <vue-xtable-column field="rate" title="Rate" footer-align="center"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age" footer-align="center"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 20)\n    this.tableData = list\n  },\n\n  methods: {\n    footerMethod ({ columns, data }) {\n      const footerData = [\n        columns.map((column, columnIndex) => {\n          if (columnIndex === 0) {\n            return \'平均\'\n          }\n          // 合并为一列显示\n          if (VueUtil.includes([\'age\', \'rate\'], column.property)) {\n            return VueUtil.mean(data.map( data => data.age))\n          }\n          if (VueUtil.includes([\'content\'], column.property)) {\n            return \'合并为一行显示\'\n          }\n          return null\n        }),\n        columns.map((column, columnIndex) => {\n          if (columnIndex === 0) {\n            return \'和值\'\n          }\n          // 合并为一列显示\n          if (VueUtil.includes([\'age\', \'rate\'], column.property)) {\n            return VueUtil.sum(data.map( data => data.age))\n          }\n          if (VueUtil.includes([\'content\'], column.property)) {\n            return \'合并为一行显示\'\n          }\n          return null\n        })\n      ]\n      return footerData\n    },\n    colspanMethod ({ row, rowIndex, column, columnIndex, data }) {\n      if (rowIndex % 2 === 0) {\n        if (columnIndex === 2) {\n          return {\n            rowspan: 1,\n            colspan: 2\n          }\n        } else if (columnIndex === 3) {\n          return {\n            rowspan: 0,\n            colspan: 0\n          }\n        }\n      }\n    },\n    footerColspanMethod ({ column, columnIndex, data }) {\n      if (columnIndex === 3) {\n        return {\n          rowspan: 1,\n          colspan: 2\n        }\n      } else if (columnIndex === 4) {\n        return {\n          rowspan: 0,\n          colspan: 0\n        }\n      }\n    },\n  }\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      border\n      show-footer\n      height="400"\n      :span-method="colspanMethod"\n      :footer-span-method="footerColspanMethod"\n      :footer-method="footerMethod"\n      :data="tableData">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" sortable></vue-xtable-column>\n      <vue-xtable-column field="role" title="Role" sortable></vue-xtable-column>\n      <vue-xtable-column field="rate" title="Rate" footer-align="center"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age" footer-align="center"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){var e=window.MOCK_DATA_LIST.slice(0,20);this.tableData=e},methods:{footerMethod:function(e){var n=e.columns,t=e.data;return[n.map(function(e,n){return 0===n?"平均":VueUtil.includes(["age","rate"],e.property)?VueUtil.mean(t.map(function(e){return e.age})):VueUtil.includes(["content"],e.property)?"合并为一行显示":null}),n.map(function(e,n){return 0===n?"和值":VueUtil.includes(["age","rate"],e.property)?VueUtil.sum(t.map(function(e){return e.age})):VueUtil.includes(["content"],e.property)?"合并为一行显示":null})]},colspanMethod:function(e){e.row;var n=e.rowIndex,t=(e.column,e.columnIndex);e.data;if(n%2==0){if(2===t)return{rowspan:1,colspan:2};if(3===t)return{rowspan:0,colspan:0}}},footerColspanMethod:function(e){e.column;var n=e.columnIndex;e.data;return 3===n?{rowspan:1,colspan:2}:4===n?{rowspan:0,colspan:0}:void 0}}}},{id:"XtableDemo.advanced.FooterSpan.sample2",label:"XtableDemo.advanced.FooterSpan.sample2.label",description:"XtableDemo.advanced.FooterSpan.sample2.description",code:"<vue-xtable\n  border\n  show-footer\n  height=\"400\"\n  :span-method=\"rowspanMethod\"\n  :footer-span-method=\"footerRowspanMethod\"\n  :footer-method=\"footerMethod\"\n  :data=\"tableData\">\n  <vue-xtable-column type=\"index\" width=\"60\"></vue-xtable-column>\n  <vue-xtable-column field=\"key\" title=\"Key\"></vue-xtable-column>\n  <vue-xtable-column field=\"content\" title=\"Translate\"></vue-xtable-column>\n  <vue-xtable-column field=\"language\" title=\"Language\" :filters=\"[{label: '中文', value: 'zh_CN'}, {label: 'English', value: 'en_US'}]\"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 20)\n    this.tableData = list\n  },\n\n  methods: {\n    footerMethod ({ columns, data }) {\n      const footerData = [\n        columns.map((column, columnIndex) => {\n          if (columnIndex === 0) {\n            return '平均'\n          }\n          // 合并为一列显示\n          if (VueUtil.includes(['age', 'rate'], column.property)) {\n            return VueUtil.mean(data.map( data => data.age))\n          }\n          if (VueUtil.includes(['content'], column.property)) {\n            return '合并为一行显示'\n          }\n          return null\n        }),\n        columns.map((column, columnIndex) => {\n          if (columnIndex === 0) {\n            return '和值'\n          }\n          // 合并为一列显示\n          if (VueUtil.includes(['age', 'rate'], column.property)) {\n            return VueUtil.sum(data.map( data => data.age))\n          }\n          if (VueUtil.includes(['content'], column.property)) {\n            return '合并为一行显示'\n          }\n          return null\n        })\n      ]\n      return footerData\n    },\n    // 通用行合并函数（将相同多列数据合并为一行）\n    rowspanMethod ({ row, $rowIndex, column, data }) {\n      let fields = ['key']\n      let cellValue = row[column.property]\n      if (cellValue && VueUtil.includes(fields, column.property)) {\n        let prevRow = data[$rowIndex - 1]\n        let nextRow = data[$rowIndex + 1]\n        if (prevRow && prevRow[column.property] === cellValue) {\n          return { rowspan: 0, colspan: 0 }\n        } else {\n          let countRowspan = 1\n          while (nextRow && nextRow[column.property] === cellValue) {\n            nextRow = data[++countRowspan + $rowIndex]\n          }\n          if (countRowspan > 1) {\n            return { rowspan: countRowspan, colspan: 1 }\n          }\n        }\n      }\n    },\n    footerRowspanMethod ({ $rowIndex, column, columnIndex, data }) {\n      if ($rowIndex === 0) {\n        if (columnIndex === 2) {\n          return { rowspan: 2, colspan: 1 }\n        }\n      } else if ($rowIndex === 1) {\n        if (columnIndex === 2) {\n          return { rowspan: 0, colspan: 0 }\n        }\n      }\n    }\n  }\n})\n<\/script>",template:'<div class="source">    <vue-xtable\n      border\n      show-footer\n      height="400"\n      :span-method="rowspanMethod"\n      :footer-span-method="footerRowspanMethod"\n      :footer-method="footerMethod"\n      :data="tableData">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="key" title="Key"></vue-xtable-column>\n      <vue-xtable-column field="content" title="Translate"></vue-xtable-column>\n      <vue-xtable-column field="language" title="Language" :filters="[{label: \'中文\', value: \'zh_CN\'}, {label: \'English\', value: \'en_US\'}]"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){var e=window.MOCK_DATA_LIST.slice(0,20);this.tableData=e},methods:{footerMethod:function(e){var n=e.columns,t=e.data;return[n.map(function(e,n){return 0===n?"平均":VueUtil.includes(["age","rate"],e.property)?VueUtil.mean(t.map(function(e){return e.age})):VueUtil.includes(["content"],e.property)?"合并为一行显示":null}),n.map(function(e,n){return 0===n?"和值":VueUtil.includes(["age","rate"],e.property)?VueUtil.sum(t.map(function(e){return e.age})):VueUtil.includes(["content"],e.property)?"合并为一行显示":null})]},rowspanMethod:function(e){var n=e.row,t=e.$rowIndex,l=e.column,o=e.data,a=n[l.property];if(a&&VueUtil.includes(["key"],l.property)){var i=o[t-1],u=o[t+1];if(i&&i[l.property]===a)return{rowspan:0,colspan:0};for(var r=1;u&&u[l.property]===a;)u=o[++r+t];if(r>1)return{rowspan:r,colspan:1}}},footerRowspanMethod:function(e){var n=e.$rowIndex,t=(e.column,e.columnIndex);e.data;if(0===n){if(2===t)return{rowspan:2,colspan:1}}else if(1===n&&2===t)return{rowspan:0,colspan:0}}}}}],styles:""}},"./demo/XtableDemo/advanced/Highlight.vue":
/*!************************************************!*\
  !*** ./demo/XtableDemo/advanced/Highlight.vue ***!
  \************************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/advanced/Highlight",name:"XtableDemo.advanced.Highlight",head:{label:"XtableDemo.advanced.Highlight.label",description:"XtableDemo.advanced.Highlight.description"},samples:[{id:"XtableDemo.advanced.Highlight.sample1",label:"XtableDemo.advanced.Highlight.sample1.label",description:"XtableDemo.advanced.Highlight.sample1.description",code:'<vue-xtable\n  border\n  resizable\n  highlight-current-row\n  height="500"\n  :data="tableData"\n  :keyboard-config="{isArrow: true}">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\n  },\n\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      border\n      resizable\n      highlight-current-row\n      height="500"\n      :data="tableData"\n      :keyboard-config="{isArrow: true}">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,50)}}}],styles:""}},"./demo/XtableDemo/advanced/Import.vue":
/*!*********************************************!*\
  !*** ./demo/XtableDemo/advanced/Import.vue ***!
  \*********************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/advanced/Import",name:"XtableDemo.advanced.Import",head:{label:"XtableDemo.advanced.Import.label",description:"XtableDemo.advanced.Import.description"},samples:[{id:"XtableDemo.advanced.Import.sample1",label:"XtableDemo.advanced.Import.sample1.label",description:"XtableDemo.advanced.Import.sample1.description",code:'<vue-toolbar>\n  <template v-slot:buttons>\n    <vue-button @click="clearDataEvent">清空数据</vue-button>\n    <vue-button @click="exportDataEvent">导出数据</vue-button>\n    <vue-button @click="importDataEvent">导入数据</vue-button>\n  </template>\n</vue-toolbar>\n\n<vue-xtable\n  ref="xTable"\n  highlight-hover-row\n  height="400"\n  :data="tableData">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age" sortable></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 10)\n  },\n\n  methods: {\n    clearDataEvent () {\n      this.tableData = []\n    },\n    exportDataEvent () {\n      this.$refs.xTable.openExport()\n    },\n    importDataEvent () {\n      this.$refs.xTable.importData()\n    }\n  }\n})\n<\/script>',template:'<div class="source">    <vue-toolbar>\n      <template v-slot:buttons>\n        <vue-button @click="clearDataEvent">清空数据</vue-button>\n        <vue-button @click="exportDataEvent">导出数据</vue-button>\n        <vue-button @click="importDataEvent">导入数据</vue-button>\n      </template>\n    </vue-toolbar>\n\n    <vue-xtable\n      ref="xTable"\n      highlight-hover-row\n      height="400"\n      :data="tableData">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age" sortable></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,10)},methods:{clearDataEvent:function(){this.tableData=[]},exportDataEvent:function(){this.$refs.xTable.openExport()},importDataEvent:function(){this.$refs.xTable.importData()}}}}],styles:""}},"./demo/XtableDemo/advanced/ManualFilter.vue":
/*!***************************************************!*\
  !*** ./demo/XtableDemo/advanced/ManualFilter.vue ***!
  \***************************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/advanced/ManualFilter",name:"XtableDemo.advanced.ManualFilter",head:{label:"XtableDemo.advanced.ManualFilter.label",description:"XtableDemo.advanced.ManualFilter.description"},samples:[{id:"XtableDemo.advanced.ManualFilter.sample1",label:"XtableDemo.advanced.ManualFilter.sample1.label",description:"XtableDemo.advanced.ManualFilter.sample1.description",code:'<vue-toolbar>\n  <template v-slot:buttons>\n    <vue-button @click="filterNameEvent">筛选 Name</vue-button>\n    <vue-button @click="filterAgeEvent">筛选 Age</vue-button>\n    <vue-button @click="updateNameFilterEvent">更改 Name 的筛选条件</vue-button>\n    <vue-button @click="$refs.xTable.clearFilter(\'age\')">清除 Age 的筛选条件</vue-button>\n    <vue-button @click="$refs.xTable.clearFilter()">清除所有的筛选条件</vue-button>\n  </template>\n</vue-toolbar>\n\n<vue-xtable\n  border\n  highlight-hover-row\n  ref="xTable"\n  height="400"\n  :loading="loading"\n  :data="tableData">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" sortable :filters="nameFilterList" :filter-method="filterNameMethod"></vue-xtable-column>\n  <vue-xtable-column field="role" title="Role" sortable :filters="[{ data: \'\' }]" :filter-method="filterRoleMethod">\n    <template v-slot:filter="scope">\n      <select class="my-select" v-model="option.data" v-for="(option, index) in scope.column.filters" :key="index" @change="scope.context.changeOption($event, !!option.data, option)">\n        <option v-for="(label, cIndex) in roleList" :key="cIndex" :value="label">{{ label }}</option>\n      </select>\n    </template>\n  </vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex" sortable :filter-multiple="false" :filters="[{label: \'Man\', value: \'1\'}, {label: \'Woman\', value: \'0\'}]"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age" :filters="[{ data: \'\' }]" :filter-method="filterAgeMethod">\n    <template v-slot:filter="scope">\n      <template v-for="(option, index) in scope.column.filters">\n        <input class="my-input" type="type" :key="index" v-model="option.data" @input="scope.context.changeOption($event, !!option.data, option)" @keyup.enter="scope.context.confirmFilter()" placeholder="按回车确认筛选">\n      </template>\n    </template>\n  </vue-xtable-column>\n  <vue-xtable-column field="time" title="Time" sortable></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      loading: false,\n      tableData: [],\n      roleList: [\'\', \'前端\', \'后端\', \'设计师\'],\n      nameFilterList: [\n        { label: \'id大于10\', value: 10 },\n        { label: \'id大于40\', value: 40 }\n      ],\n\n    }\n  },\n  created () {\n    this.findList()\n  },\n\n  methods: {\n    findList () {\n      this.loading = true\n      return new Promise(resolve => {\n        setTimeout(() => {\n          this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\n          this.loading = false\n          resolve()\n        }, 300)\n      })\n    },\n    filterNameMethod ({ value, row, column }) {\n      return row.id >= value\n    },\n    filterRoleMethod ({ option, row }) {\n      return row.role === option.data\n    },\n    filterAgeMethod ({ option, row }) {\n      return row.age === Number(option.data)\n    },\n    updateNameFilterEvent () {\n      let xTable = this.$refs.xTable\n      xTable.filter(\'name\', options => {\n        // 修改筛选列表\n        return [\n          {\n            label: \'id大于10\',\n            value: 10\n          },\n          {\n            label: \'id大于20\',\n            value: 20\n          },\n          {\n            label: \'id大于30\',\n            value: 30,\n            checked: true // 设置为选中状态\n          },\n          {\n            label: \'id大于40\',\n            value: 40\n          }\n        ]\n      }).then(() => {\n        // 修改条件之后，需要手动调用 updateData 处理表格数据\n        xTable.updateData()\n      })\n    },\n    filterNameEvent () {\n      let xTable = this.$refs.xTable\n      xTable.filter(\'name\')\n        .then(options => {\n          // 处理条件并设置选中的选项\n          if (options.length) {\n            let option = options[1]\n            option.checked = true\n          }\n        })\n        .then(() => {\n          // 修改条件之后，需要手动调用 updateData 处理表格数据\n          xTable.updateData()\n        })\n    },\n    filterAgeEvent () {\n      let xTable = this.$refs.xTable\n      xTable.filter(\'age\')\n        .then(options => {\n          // 处理条件并设置选中的选项\n          if (options.length) {\n            let option = options[0]\n            option.data = \'26\'\n            option.checked = true\n          }\n        })\n        .then(() => {\n          // 修改条件之后，需要手动调用 updateData 处理表格数据\n          xTable.updateData()\n        })\n    }\n  }\n})\n<\/script>\n\n<style>\n.my-select {\n  width: 100px;\n  height: 32px;\n}\n.my-input {\n  width: 140px;\n  height: 32px;\n}\n</style>',template:'<div class="source">    <vue-toolbar>\n      <template v-slot:buttons>\n        <vue-button @click="filterNameEvent">筛选 Name</vue-button>\n        <vue-button @click="filterAgeEvent">筛选 Age</vue-button>\n        <vue-button @click="updateNameFilterEvent">更改 Name 的筛选条件</vue-button>\n        <vue-button @click="$refs.xTable.clearFilter(\'age\')">清除 Age 的筛选条件</vue-button>\n        <vue-button @click="$refs.xTable.clearFilter()">清除所有的筛选条件</vue-button>\n      </template>\n    </vue-toolbar>\n\n    <vue-xtable\n      border\n      highlight-hover-row\n      ref="xTable"\n      height="400"\n      :loading="loading"\n      :data="tableData">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" sortable :filters="nameFilterList" :filter-method="filterNameMethod"></vue-xtable-column>\n      <vue-xtable-column field="role" title="Role" sortable :filters="[{ data: \'\' }]" :filter-method="filterRoleMethod">\n        <template v-slot:filter="scope">\n          <select class="my-select" v-model="option.data" v-for="(option, index) in scope.column.filters" :key="index" @change="scope.context.changeOption($event, !!option.data, option)">\n            <option v-for="(label, cIndex) in roleList" :key="cIndex" :value="label">{{ label }}</option>\n          </select>\n        </template>\n      </vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex" sortable :filter-multiple="false" :filters="[{label: \'Man\', value: \'1\'}, {label: \'Woman\', value: \'0\'}]"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age" :filters="[{ data: \'\' }]" :filter-method="filterAgeMethod">\n        <template v-slot:filter="scope">\n          <template v-for="(option, index) in scope.column.filters">\n            <input class="my-input" type="type" :key="index" v-model="option.data" @input="scope.context.changeOption($event, !!option.data, option)" @keyup.enter="scope.context.confirmFilter()" placeholder="按回车确认筛选">\n          </template>\n        </template>\n      </vue-xtable-column>\n      <vue-xtable-column field="time" title="Time" sortable></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{loading:!1,tableData:[],roleList:["","前端","后端","设计师"],nameFilterList:[{label:"id大于10",value:10},{label:"id大于40",value:40}]}},created:function(){this.findList()},methods:{findList:function(){var e=this;return this.loading=!0,new Promise(function(n){setTimeout(function(){e.tableData=window.MOCK_DATA_LIST.slice(0,50),e.loading=!1,n()},300)})},filterNameMethod:function(e){var n=e.value,t=e.row;e.column;return t.id>=n},filterRoleMethod:function(e){var n=e.option;return e.row.role===n.data},filterAgeMethod:function(e){var n=e.option;return e.row.age===Number(n.data)},updateNameFilterEvent:function(){var e=this.$refs.xTable;e.filter("name",function(e){return[{label:"id大于10",value:10},{label:"id大于20",value:20},{label:"id大于30",value:30,checked:!0},{label:"id大于40",value:40}]}).then(function(){e.updateData()})},filterNameEvent:function(){var e=this.$refs.xTable;e.filter("name").then(function(e){e.length&&(e[1].checked=!0)}).then(function(){e.updateData()})},filterAgeEvent:function(){var e=this.$refs.xTable;e.filter("age").then(function(e){if(e.length){var n=e[0];n.data="26",n.checked=!0}}).then(function(){e.updateData()})}}}}],styles:".my-select {\n  width: 100px;\n  height: 32px;\n}\n.my-input {\n  width: 140px;\n  height: 32px;\n}"}},"./demo/XtableDemo/advanced/Menu.vue":
/*!*******************************************!*\
  !*** ./demo/XtableDemo/advanced/Menu.vue ***!
  \*******************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/advanced/Menu",name:"XtableDemo.advanced.Menu",head:{label:"XtableDemo.advanced.Menu.label",description:"XtableDemo.advanced.Menu.description"},samples:[{id:"XtableDemo.advanced.Menu.sample1",label:"XtableDemo.advanced.Menu.sample1.label",description:"XtableDemo.advanced.Menu.sample1.description",code:"<vue-xtable\n  border\n  show-footer\n  highlight-current-row\n  highlight-current-column\n  ref=\"xTable\"\n  :footer-method=\"footerMethod\"\n  :data=\"tableData\"\n  :context-menu=\"{header: {options: headerMenus}, body: {options: bodyMenus}, footer: {options: footerMenus}}\"\n  @header-cell-context-menu=\"headerCellContextMenuEvent\"\n  @cell-context-menu=\"cellContextMenuEvent\"\n  @context-menu-click=\"contextMenuClickEvent\">\n  <vue-xtable-column type=\"index\" width=\"60\"></vue-xtable-column>\n  <vue-xtable-column field=\"name\" title=\"Name\" sortable></vue-xtable-column>\n  <vue-xtable-column field=\"sex\" title=\"Sex\"></vue-xtable-column>\n  <vue-xtable-column field=\"age\" title=\"Age\"></vue-xtable-column>\n  <vue-xtable-column field=\"time\" title=\"Time\"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n      headerMenus: [\n        [\n          {\n            code: 'exportAll',\n            name: '导出所有.csv'\n          }\n        ]\n      ],\n      bodyMenus: [\n        [\n          {\n            code: 'copy',\n            name: '复制',\n            prefixIcon: 'fa fa-copy'\n          }\n        ],\n        [\n          {\n            code: 'remove',\n            name: '删除'\n          },\n          {\n            code: 'filter',\n            name: '过滤',\n            children: [\n              {\n                code: 'clearFilter',\n                name: '清除筛选'\n              },\n              {\n                code: 'filterSelect',\n                name: '按所选单元格的值筛选'\n              }\n            ]\n          },\n          {\n            code: 'sort',\n            name: '排序',\n            children: [\n              {\n                code: 'clearSort',\n                name: '清除排序'\n              },\n              {\n                code: 'sortAsc',\n                name: '升序'\n              },\n              {\n                code: 'sortDesc',\n                name: '倒序'\n              }\n            ]\n          },\n          {\n            code: 'print',\n            name: '打印',\n            disabled: true\n          }\n        ]\n      ],\n      footerMenus: [\n        [\n          {\n            code: 'clearAll',\n            name: '清空数据'\n          }\n        ]\n      ],\n\n    }\n  },\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 6)\n    this.tableData = list\n  },\n\n  methods: {\n    headerCellContextMenuEvent ({ column }) {\n      this.$refs.xTable.setCurrentColumn(column)\n    },\n    cellContextMenuEvent ({ row }) {\n      this.$refs.xTable.setCurrentRow(row)\n    },\n    contextMenuClickEvent ({ menu, row, column }) {\n      switch (menu.code) {\n        case 'copy':\n          // 示例\n          if (row && column) {\n            if (VueUtil.clipboard.copy(row[column.property])) {\n              this.$notify.success({ message:'已复制到剪贴板！'});;\n            }\n          }\n          break\n        default:\n          this.$notify({message: `点击了 ${menu.name} 选项`})\n      }\n    },\n    footerMethod ({ columns, data }) {\n      return [\n        columns.map((column, columnIndex) => {\n          if (columnIndex === 0) {\n            return '平均'\n          }\n          if (VueUtil.includes(['age', 'rate'], column.property)) {\n            return VueUtil.mean(data.map(data => data[column.property]))\n          }\n          return null\n        })\n      ]\n    }\n  }\n})\n<\/script>",template:'<div class="source">    <vue-xtable\n      border\n      show-footer\n      highlight-current-row\n      highlight-current-column\n      ref="xTable"\n      :footer-method="footerMethod"\n      :data="tableData"\n      :context-menu="{header: {options: headerMenus}, body: {options: bodyMenus}, footer: {options: footerMenus}}"\n      @header-cell-context-menu="headerCellContextMenuEvent"\n      @cell-context-menu="cellContextMenuEvent"\n      @context-menu-click="contextMenuClickEvent">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" sortable></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n      <vue-xtable-column field="time" title="Time"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[],headerMenus:[[{code:"exportAll",name:"导出所有.csv"}]],bodyMenus:[[{code:"copy",name:"复制",prefixIcon:"fa fa-copy"}],[{code:"remove",name:"删除"},{code:"filter",name:"过滤",children:[{code:"clearFilter",name:"清除筛选"},{code:"filterSelect",name:"按所选单元格的值筛选"}]},{code:"sort",name:"排序",children:[{code:"clearSort",name:"清除排序"},{code:"sortAsc",name:"升序"},{code:"sortDesc",name:"倒序"}]},{code:"print",name:"打印",disabled:!0}]],footerMenus:[[{code:"clearAll",name:"清空数据"}]]}},created:function(){var e=window.MOCK_DATA_LIST.slice(0,6);this.tableData=e},methods:{headerCellContextMenuEvent:function(e){var n=e.column;this.$refs.xTable.setCurrentColumn(n)},cellContextMenuEvent:function(e){var n=e.row;this.$refs.xTable.setCurrentRow(n)},contextMenuClickEvent:function(e){var n=e.menu,t=e.row,l=e.column;switch(n.code){case"copy":t&&l&&VueUtil.clipboard.copy(t[l.property])&&this.$notify.success({message:"已复制到剪贴板！"});break;default:this.$notify({message:"点击了 ".concat(n.name," 选项")})}},footerMethod:function(e){var n=e.columns,t=e.data;return[n.map(function(e,n){return 0===n?"平均":VueUtil.includes(["age","rate"],e.property)?VueUtil.mean(t.map(function(n){return n[e.property]})):null})]}}}}],styles:""}},"./demo/XtableDemo/advanced/MenuPrivilege.vue":
/*!****************************************************!*\
  !*** ./demo/XtableDemo/advanced/MenuPrivilege.vue ***!
  \****************************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/advanced/MenuPrivilege",name:"XtableDemo.advanced.MenuPrivilege",head:{label:"XtableDemo.advanced.MenuPrivilege.label",description:"XtableDemo.advanced.MenuPrivilege.description"},samples:[{id:"XtableDemo.advanced.MenuPrivilege.sample1",label:"XtableDemo.advanced.MenuPrivilege.sample1.label",description:"XtableDemo.advanced.MenuPrivilege.sample1.description",code:"<vue-xtable\n  border\n  show-footer\n  highlight-current-row\n  highlight-current-column\n  ref=\"xTable\"\n  :footer-method=\"footerMethod\"\n  :data=\"tableData\"\n  :context-menu=\"{header: {options: headerMenus}, body: {options: bodyMenus}, footer: {options: footerMenus}, visibleMethod: visibleMethod}\"\n  @header-cell-context-menu=\"headerCellContextMenuEvent\"\n  @cell-context-menu=\"cellContextMenuEvent\"\n  @context-menu-click=\"contextMenuClickEvent\">\n  <vue-xtable-column type=\"index\" width=\"60\"></vue-xtable-column>\n  <vue-xtable-column field=\"name\" title=\"Name\" sortable></vue-xtable-column>\n  <vue-xtable-column field=\"sex\" title=\"Sex\"></vue-xtable-column>\n  <vue-xtable-column field=\"age\" title=\"Age\"></vue-xtable-column>\n  <vue-xtable-column field=\"time\" title=\"Time\"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n      headerMenus: [\n        [\n          {\n            code: 'exportAll',\n            name: '导出所有.csv',\n            visible: true,\n            disabled: false\n          }\n        ]\n      ],\n      bodyMenus: [\n        [\n          {\n            code: 'copy',\n            name: '复制',\n            prefixIcon: 'fa fa-copy',\n            visible: true,\n            disabled: false\n          },\n          {\n            code: 'clear',\n            name: '清除内容',\n            prefixIcon: 'fa fa-copy',\n            visible: true,\n            disabled: false\n          }\n        ],\n        [\n          {\n            code: 'remove',\n            name: '删除',\n            visible: true,\n            disabled: false\n          },\n          {\n            code: 'filter',\n            name: '过滤',\n            visible: true,\n            disabled: false,\n            children: [\n              {\n                code: 'clearFilter',\n                name: '清除筛选',\n                visible: true,\n                disabled: false\n              },\n              {\n                code: 'filterSelect',\n                name: '按所选单元格的值筛选',\n                visible: true,\n                disabled: false\n              }\n            ]\n          },\n          {\n            code: 'sort',\n            name: '排序',\n            visible: true,\n            disabled: false,\n            children: [\n              {\n                code: 'clearSort',\n                name: '清除排序',\n                visible: true,\n                disabled: false\n              },\n              {\n                code: 'sortAsc',\n                name: '升序',\n                visible: true,\n                disabled: false\n              },\n              {\n                code: 'sortDesc',\n                name: '倒序',\n                visible: true,\n                disabled: false\n              }\n            ]\n          },\n          {\n            code: 'print',\n            name: '打印',\n            disabled: true\n          }\n        ]\n      ],\n      footerMenus: [\n        [\n          {\n            code: 'clearAll',\n            name: '清空数据',\n            visible: true,\n            disabled: false\n          }\n        ]\n      ],\n\n    }\n  },\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 6)\n    this.tableData = list\n  },\n\n  methods: {\n    headerCellContextMenuEvent ({ column }) {\n      this.$refs.xTable.setCurrentColumn(column)\n    },\n    cellContextMenuEvent ({ row }) {\n      this.$refs.xTable.setCurrentRow(row)\n    },\n    visibleMethod ({ type, options, column }) {\n      // 示例：只有 name 列允许操作，清除按钮只能在 age 才显示\n      // 显示之前处理按钮的操作权限\n      let isDisabled = !column || column.property !== 'name'\n      let isVisible = column && column.property === 'age'\n      options.forEach(list => {\n        list.forEach(item => {\n          if (VueUtil.includes(['copy', 'remove'], item.code)) {\n            item.disabled = isDisabled\n          }\n          if (VueUtil.includes(['clear', 'filter'], item.code)) {\n            item.visible = isVisible\n          }\n        })\n      })\n      return true\n    },\n    contextMenuClickEvent ({ menu, row, column }) {\n      switch (menu.code) {\n        case 'copy':\n          // 示例\n          if (row && column) {\n            if (VueUtil.clipboard.copy(row[column.property])) {\n              this.$notify.success({ message:'已复制到剪贴板！'});\n            }\n          }\n          break\n        default:\n          this.$notify({message: `点击了 ${menu.name} 选项`})\n      }\n    },\n    footerMethod ({ columns, data }) {\n      return [\n        columns.map((column, columnIndex) => {\n          if (columnIndex === 0) {\n            return '平均'\n          }\n          if (VueUtil.includes(['age', 'rate'], column.property)) {\n            return VueUtil.mean(data.map(data => data[column.property]))\n          }\n          return null\n        })\n      ]\n    }\n  }\n})\n<\/script>",template:'<div class="source">    <vue-xtable\n      border\n      show-footer\n      highlight-current-row\n      highlight-current-column\n      ref="xTable"\n      :footer-method="footerMethod"\n      :data="tableData"\n      :context-menu="{header: {options: headerMenus}, body: {options: bodyMenus}, footer: {options: footerMenus}, visibleMethod: visibleMethod}"\n      @header-cell-context-menu="headerCellContextMenuEvent"\n      @cell-context-menu="cellContextMenuEvent"\n      @context-menu-click="contextMenuClickEvent">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" sortable></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n      <vue-xtable-column field="time" title="Time"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[],headerMenus:[[{code:"exportAll",name:"导出所有.csv",visible:!0,disabled:!1}]],bodyMenus:[[{code:"copy",name:"复制",prefixIcon:"fa fa-copy",visible:!0,disabled:!1},{code:"clear",name:"清除内容",prefixIcon:"fa fa-copy",visible:!0,disabled:!1}],[{code:"remove",name:"删除",visible:!0,disabled:!1},{code:"filter",name:"过滤",visible:!0,disabled:!1,children:[{code:"clearFilter",name:"清除筛选",visible:!0,disabled:!1},{code:"filterSelect",name:"按所选单元格的值筛选",visible:!0,disabled:!1}]},{code:"sort",name:"排序",visible:!0,disabled:!1,children:[{code:"clearSort",name:"清除排序",visible:!0,disabled:!1},{code:"sortAsc",name:"升序",visible:!0,disabled:!1},{code:"sortDesc",name:"倒序",visible:!0,disabled:!1}]},{code:"print",name:"打印",disabled:!0}]],footerMenus:[[{code:"clearAll",name:"清空数据",visible:!0,disabled:!1}]]}},created:function(){var e=window.MOCK_DATA_LIST.slice(0,6);this.tableData=e},methods:{headerCellContextMenuEvent:function(e){var n=e.column;this.$refs.xTable.setCurrentColumn(n)},cellContextMenuEvent:function(e){var n=e.row;this.$refs.xTable.setCurrentRow(n)},visibleMethod:function(e){e.type;var n=e.options,t=e.column,l=!t||"name"!==t.property,o=t&&"age"===t.property;return n.forEach(function(e){e.forEach(function(e){VueUtil.includes(["copy","remove"],e.code)&&(e.disabled=l),VueUtil.includes(["clear","filter"],e.code)&&(e.visible=o)})}),!0},contextMenuClickEvent:function(e){var n=e.menu,t=e.row,l=e.column;switch(n.code){case"copy":t&&l&&VueUtil.clipboard.copy(t[l.property])&&this.$notify.success({message:"已复制到剪贴板！"});break;default:this.$notify({message:"点击了 ".concat(n.name," 选项")})}},footerMethod:function(e){var n=e.columns,t=e.data;return[n.map(function(e,n){return 0===n?"平均":VueUtil.includes(["age","rate"],e.property)?VueUtil.mean(t.map(function(n){return n[e.property]})):null})]}}}}],styles:""}},"./demo/XtableDemo/advanced/Page.vue":
/*!*******************************************!*\
  !*** ./demo/XtableDemo/advanced/Page.vue ***!
  \*******************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/advanced/Page",name:"XtableDemo.advanced.Page",head:{label:"XtableDemo.advanced.Page.label",description:"XtableDemo.advanced.Page.description"},samples:[{id:"XtableDemo.advanced.Page.sample1",label:"XtableDemo.advanced.Page.sample1.label",description:"XtableDemo.advanced.Page.sample1.description",code:'<vue-xtable\n  border\n  show-overflow\n  height="200"\n  row-id="id"\n  :loading="loading"\n  :data="tableData">\n  <vue-xtable-column type="checkbox" width="60"></vue-xtable-column>\n  <vue-xtable-column type="index" title="序号" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" sortable></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n  <vue-xtable-column field="rate" title="Rate"></vue-xtable-column>\n</vue-xtable>\n\n<vue-xtable-pager\n  border\n  :loading="loading"\n  :current-page="tablePage.currentPage"\n  :page-size="tablePage.pageSize"\n  :total="tablePage.totalResult"\n  :layouts="[\'PrevPage\', \'JumpNumber\', \'NextPage\', \'FullJump\', \'Sizes\', \'Total\']"\n  @page-change="handlePageChange">\n</vue-xtable-pager>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      loading: false,\n      tableData: [],\n      tablePage: {\n        currentPage: 1,\n        pageSize: 10,\n        totalResult: 0\n      },\n\n    }\n  },\n  created () {\n    this.findList()\n  },\n\n  methods: {\n    findList () {\n      this.loading = true\n      Vue.http.get(`/api/user/page/list/${this.tablePage.pageSize}/${this.tablePage.currentPage}`, this.formData).then(response => {\n        let { page, result } = response.data\n        this.tableData = result\n        this.tablePage.totalResult = page.totalResult\n        this.loading = false\n      }).catch(e => {\n        this.loading = false\n      })\n    },\n    handlePageChange ({ currentPage, pageSize }) {\n      this.tablePage.currentPage = currentPage\n      this.tablePage.pageSize = pageSize\n      this.findList()\n    }\n  }\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      border\n      show-overflow\n      height="200"\n      row-id="id"\n      :loading="loading"\n      :data="tableData">\n      <vue-xtable-column type="checkbox" width="60"></vue-xtable-column>\n      <vue-xtable-column type="index" title="序号" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" sortable></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n      <vue-xtable-column field="rate" title="Rate"></vue-xtable-column>\n    </vue-xtable>\n\n    <vue-xtable-pager\n      border\n      :loading="loading"\n      :current-page="tablePage.currentPage"\n      :page-size="tablePage.pageSize"\n      :total="tablePage.totalResult"\n      :layouts="[\'PrevPage\', \'JumpNumber\', \'NextPage\', \'FullJump\', \'Sizes\', \'Total\']"\n      @page-change="handlePageChange">\n    </vue-xtable-pager></div>',parameter:{data:function(){return{loading:!1,tableData:[],tablePage:{currentPage:1,pageSize:10,totalResult:0}}},created:function(){this.findList()},methods:{findList:function(){var e=this;this.loading=!0,Vue.http.get("/api/user/page/list/".concat(this.tablePage.pageSize,"/").concat(this.tablePage.currentPage),this.formData).then(function(n){var t=n.data,l=t.page,o=t.result;e.tableData=o,e.tablePage.totalResult=l.totalResult,e.loading=!1}).catch(function(n){e.loading=!1})},handlePageChange:function(e){var n=e.currentPage,t=e.pageSize;this.tablePage.currentPage=n,this.tablePage.pageSize=t,this.findList()}}}},{id:"XtableDemo.advanced.Page.sample2",label:"XtableDemo.advanced.Page.sample2.label",description:"XtableDemo.advanced.Page.sample2.description",code:'<vue-xtable\n  border\n  show-overflow\n  height="200"\n  row-id="id"\n  :loading="loading"\n  :data="tableData">\n  <vue-xtable-column type="checkbox" width="60"></vue-xtable-column>\n  <vue-xtable-column type="index" title="序号" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" sortable></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n  <vue-xtable-column field="rate" title="Rate"></vue-xtable-column>\n</vue-xtable>\n\n<vue-xtable-pager\n  background\n  :loading="loading"\n  :current-page="tablePage.currentPage"\n  :page-size="tablePage.pageSize"\n  :total="tablePage.totalResult"\n  :layouts="[\'PrevPage\', \'JumpNumber\', \'NextPage\', \'FullJump\', \'Sizes\', \'Total\']"\n  @page-change="handlePageChange">\n</vue-xtable-pager>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      loading: false,\n      tableData: [],\n      tablePage: {\n        currentPage: 1,\n        pageSize: 10,\n        totalResult: 0\n      },\n\n    }\n  },\n  created () {\n    this.findList()\n  },\n\n  methods: {\n    findList () {\n      this.loading = true\n      Vue.http.get(`/api/user/page/list/${this.tablePage.pageSize}/${this.tablePage.currentPage}`, this.formData).then(response => {\n        let { page, result } = response.data\n        this.tableData = result\n        this.tablePage.totalResult = page.totalResult\n        this.loading = false\n      }).catch(e => {\n        this.loading = false\n      })\n    },\n    handlePageChange ({ currentPage, pageSize }) {\n      this.tablePage.currentPage = currentPage\n      this.tablePage.pageSize = pageSize\n      this.findList()\n    }\n  }\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      border\n      show-overflow\n      height="200"\n      row-id="id"\n      :loading="loading"\n      :data="tableData">\n      <vue-xtable-column type="checkbox" width="60"></vue-xtable-column>\n      <vue-xtable-column type="index" title="序号" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" sortable></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n      <vue-xtable-column field="rate" title="Rate"></vue-xtable-column>\n    </vue-xtable>\n\n    <vue-xtable-pager\n      background\n      :loading="loading"\n      :current-page="tablePage.currentPage"\n      :page-size="tablePage.pageSize"\n      :total="tablePage.totalResult"\n      :layouts="[\'PrevPage\', \'JumpNumber\', \'NextPage\', \'FullJump\', \'Sizes\', \'Total\']"\n      @page-change="handlePageChange">\n    </vue-xtable-pager></div>',parameter:{data:function(){return{loading:!1,tableData:[],tablePage:{currentPage:1,pageSize:10,totalResult:0}}},created:function(){this.findList()},methods:{findList:function(){var e=this;this.loading=!0,Vue.http.get("/api/user/page/list/".concat(this.tablePage.pageSize,"/").concat(this.tablePage.currentPage),this.formData).then(function(n){var t=n.data,l=t.page,o=t.result;e.tableData=o,e.tablePage.totalResult=l.totalResult,e.loading=!1}).catch(function(n){e.loading=!1})},handlePageChange:function(e){var n=e.currentPage,t=e.pageSize;this.tablePage.currentPage=n,this.tablePage.pageSize=t,this.findList()}}}},{id:"XtableDemo.advanced.Page.sample3",label:"XtableDemo.advanced.Page.sample3.label",description:"XtableDemo.advanced.Page.sample3.description",code:'<vue-xtable\n  border\n  show-overflow\n  height="200"\n  row-id="id"\n  :loading="loading"\n  :start-index="(tablePage.currentPage - 1) * tablePage.pageSize"\n  :checkbox-config="{reserve: true}"\n  :data="tableData">\n  <vue-xtable-column type="checkbox" width="60"></vue-xtable-column>\n  <vue-xtable-column type="index" title="序号" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" sortable></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n  <vue-xtable-column field="rate" title="Rate"></vue-xtable-column>\n</vue-xtable>\n\n<vue-xtable-pager\n  perfect\n  :loading="loading"\n  :current-page="tablePage.currentPage"\n  :page-size="tablePage.pageSize"\n  :total="tablePage.totalResult"\n  :layouts="[\'PrevPage\', \'JumpNumber\', \'NextPage\', \'FullJump\', \'Sizes\', \'Total\']"\n  @page-change="handlePageChange">\n</vue-xtable-pager>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      loading: false,\n      tableData: [],\n      tablePage: {\n        currentPage: 1,\n        pageSize: 10,\n        totalResult: 0\n      },\n\n    }\n  },\n  created () {\n    this.findList()\n  },\n\n  methods: {\n    findList () {\n      this.loading = true\n      Vue.http.get(`/api/user/page/list/${this.tablePage.pageSize}/${this.tablePage.currentPage}`, this.formData).then(response => {\n        let { page, result } = response.data\n        this.tableData = result\n        this.tablePage.totalResult = page.totalResult\n        this.loading = false\n      }).catch(e => {\n        this.loading = false\n      })\n    },\n    handlePageChange ({ currentPage, pageSize }) {\n      this.tablePage.currentPage = currentPage\n      this.tablePage.pageSize = pageSize\n      this.findList()\n    }\n  }\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      border\n      show-overflow\n      height="200"\n      row-id="id"\n      :loading="loading"\n      :start-index="(tablePage.currentPage - 1) * tablePage.pageSize"\n      :checkbox-config="{reserve: true}"\n      :data="tableData">\n      <vue-xtable-column type="checkbox" width="60"></vue-xtable-column>\n      <vue-xtable-column type="index" title="序号" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" sortable></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n      <vue-xtable-column field="rate" title="Rate"></vue-xtable-column>\n    </vue-xtable>\n\n    <vue-xtable-pager\n      perfect\n      :loading="loading"\n      :current-page="tablePage.currentPage"\n      :page-size="tablePage.pageSize"\n      :total="tablePage.totalResult"\n      :layouts="[\'PrevPage\', \'JumpNumber\', \'NextPage\', \'FullJump\', \'Sizes\', \'Total\']"\n      @page-change="handlePageChange">\n    </vue-xtable-pager></div>',parameter:{data:function(){return{loading:!1,tableData:[],tablePage:{currentPage:1,pageSize:10,totalResult:0}}},created:function(){this.findList()},methods:{findList:function(){var e=this;this.loading=!0,Vue.http.get("/api/user/page/list/".concat(this.tablePage.pageSize,"/").concat(this.tablePage.currentPage),this.formData).then(function(n){var t=n.data,l=t.page,o=t.result;e.tableData=o,e.tablePage.totalResult=l.totalResult,e.loading=!1}).catch(function(n){e.loading=!1})},handlePageChange:function(e){var n=e.currentPage,t=e.pageSize;this.tablePage.currentPage=n,this.tablePage.pageSize=t,this.findList()}}}}],styles:""}},"./demo/XtableDemo/advanced/Print.vue":
/*!********************************************!*\
  !*** ./demo/XtableDemo/advanced/Print.vue ***!
  \********************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/advanced/Print",name:"XtableDemo.advanced.Print",head:{label:"XtableDemo.advanced.Print.label",description:"XtableDemo.advanced.Print.description"},samples:[{id:"XtableDemo.advanced.Print.sample1",label:"XtableDemo.advanced.Print.sample1.label",description:"XtableDemo.advanced.Print.sample1.description",code:'<vue-toolbar>\n  <template v-slot:buttons>\n    <vue-button @click="printEvent">打印</vue-button>\n    <vue-button @click="printSelectEvent">打印选中</vue-button>\n    <vue-button @click="exportDataEvent">导出与打印</vue-button>\n  </template>\n</vue-toolbar>\n\n<vue-xtable\n  border\n  ref="xTable"\n  height="500"\n  :data="tableData">\n  <vue-xtable-column type="checkbox" width="60"></vue-xtable-column>\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n  <vue-xtable-column field="role" title="Role"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n  <vue-xtable-column field="date12" title="Date"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      frameUrl: \'\',\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 20)\n  },\n\n  methods: {\n    printEvent () {\n      this.$refs.xTable.print()\n    },\n    printSelectEvent () {\n      this.$refs.xTable.print({\n        data: this.$refs.xTable.getSelectRecords()\n      })\n    },\n    exportDataEvent () {\n      this.$refs.xTable.openExport()\n    }\n  }\n})\n<\/script>',template:'<div class="source">    <vue-toolbar>\n      <template v-slot:buttons>\n        <vue-button @click="printEvent">打印</vue-button>\n        <vue-button @click="printSelectEvent">打印选中</vue-button>\n        <vue-button @click="exportDataEvent">导出与打印</vue-button>\n      </template>\n    </vue-toolbar>\n\n    <vue-xtable\n      border\n      ref="xTable"\n      height="500"\n      :data="tableData">\n      <vue-xtable-column type="checkbox" width="60"></vue-xtable-column>\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n      <vue-xtable-column field="role" title="Role"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n      <vue-xtable-column field="date12" title="Date"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{frameUrl:"",tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,20)},methods:{printEvent:function(){this.$refs.xTable.print()},printSelectEvent:function(){this.$refs.xTable.print({data:this.$refs.xTable.getSelectRecords()})},exportDataEvent:function(){this.$refs.xTable.openExport()}}}}],styles:""}},"./demo/XtableDemo/advanced/Search.vue":
/*!*********************************************!*\
  !*** ./demo/XtableDemo/advanced/Search.vue ***!
  \*********************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/advanced/Search",name:"XtableDemo.advanced.Search",head:{label:"XtableDemo.advanced.Search.label",description:"XtableDemo.advanced.Search.description"},samples:[{id:"XtableDemo.advanced.Search.sample1",label:"XtableDemo.advanced.Search.sample1.label",description:"XtableDemo.advanced.Search.sample1.description",code:'<vue-toolbar>\n  <template v-slot:buttons>\n    <vue-input v-model="filterName1" type="search" placeholder="试试全表搜索"></vue-input>\n  </template>\n</vue-toolbar>\n\n<vue-xtable\n  border\n  height="300"\n  :data="list1">\n  <vue-xtable-column type="index" width="80"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name">\n    <template v-slot="scope">\n      <span v-html="scope.row.name"></span>\n    </template>\n  </vue-xtable-column>\n  <vue-xtable-column field="role" title="Role">\n    <template v-slot="scope">\n      <span v-html="scope.row.role"></span>\n    </template>\n  </vue-xtable-column>\n  <vue-xtable-column field="age" title="Age">\n    <template v-slot="scope">\n      <span v-html="scope.row.age"></span>\n    </template>\n  </vue-xtable-column>\n  <vue-xtable-column field="address" title="Address">\n    <template v-slot="scope">\n      <span v-html="scope.row.address"></span>\n    </template>\n  </vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      filterName1: \'\',\n      tableData1: [],\n    }\n  },\n  computed: {\n    list1 () {\n      let filterName = VueUtil.toString(this.filterName1).trim().toLowerCase()\n      if (filterName) {\n        let filterRE = new RegExp(filterName, \'gi\')\n        let searchProps = [\'name\', \'role\', \'age\', \'address\']\n        let rest = this.tableData1.filter(item => searchProps.some(key => VueUtil.toString(item[key]).toLowerCase().indexOf(filterName) > -1))\n        return rest.map(row => {\n          let item = Object.assign({}, row)\n          searchProps.forEach(key => {\n            item[key] = VueUtil.toString(item[key]).replace(filterRE, match => `<span class="keyword-lighten">${match}</span>`)\n          })\n          return item\n        })\n      }\n      return this.tableData1\n    },\n  },\n  created () {\n    this.tableData1 = window.MOCK_DATA_LIST.slice(0, 50)\n  },\n\n})\n<\/script>',template:'<div class="source">    <vue-toolbar>\n      <template v-slot:buttons>\n        <vue-input v-model="filterName1" type="search" placeholder="试试全表搜索"></vue-input>\n      </template>\n    </vue-toolbar>\n\n    <vue-xtable\n      border\n      height="300"\n      :data="list1">\n      <vue-xtable-column type="index" width="80"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name">\n        <template v-slot="scope">\n          <span v-html="scope.row.name"></span>\n        </template>\n      </vue-xtable-column>\n      <vue-xtable-column field="role" title="Role">\n        <template v-slot="scope">\n          <span v-html="scope.row.role"></span>\n        </template>\n      </vue-xtable-column>\n      <vue-xtable-column field="age" title="Age">\n        <template v-slot="scope">\n          <span v-html="scope.row.age"></span>\n        </template>\n      </vue-xtable-column>\n      <vue-xtable-column field="address" title="Address">\n        <template v-slot="scope">\n          <span v-html="scope.row.address"></span>\n        </template>\n      </vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{filterName1:"",tableData1:[]}},computed:{list1:function(){var e=VueUtil.toString(this.filterName1).trim().toLowerCase();if(e){var n=new RegExp(e,"gi"),t=["name","role","age","address"];return this.tableData1.filter(function(n){return t.some(function(t){return VueUtil.toString(n[t]).toLowerCase().indexOf(e)>-1})}).map(function(e){var l=Object.assign({},e);return t.forEach(function(e){l[e]=VueUtil.toString(l[e]).replace(n,function(e){return'<span class="keyword-lighten">'.concat(e,"</span>")})}),l})}return this.tableData1}},created:function(){this.tableData1=window.MOCK_DATA_LIST.slice(0,50)}}},{id:"XtableDemo.advanced.Search.sample2",label:"XtableDemo.advanced.Search.sample2.label",description:"XtableDemo.advanced.Search.sample2.description",code:'<vue-toolbar>\n  <template v-slot:buttons>\n    <vue-input v-model="filterName2" type="search" placeholder="试试全表搜索"></vue-input>\n  </template>\n</vue-toolbar>\n\n<vue-xtable\n  :data="list2"\n  :tree-config="{children: \'children\', expandAll: !!filterName2}">\n  <vue-xtable-column type="index" width="160" title="序号" tree-node></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name">\n    <template v-slot="scope">\n      <span v-html="scope.row.name"></span>\n    </template>\n  </vue-xtable-column>\n  <vue-xtable-column field="size" title="Size">\n    <template v-slot="scope">\n      <span v-html="scope.row.size"></span>\n    </template>\n  </vue-xtable-column>\n  <vue-xtable-column field="type" title="Type">\n    <template v-slot="scope">\n      <span v-html="scope.row.type"></span>\n    </template>\n  </vue-xtable-column>\n  <vue-xtable-column field="date" title="Date">\n    <template v-slot="scope">\n      <span v-html="scope.row.date"></span>\n    </template>\n  </vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      filterName2: \'\',\n      tableData2: [],\n    }\n  },\n  computed: {\n    list2 () {\n      let filterName = VueUtil.toString(this.filterName2).trim().toLowerCase()\n      if (filterName) {\n        let filterRE = new RegExp(filterName, \'gi\')\n        let options = { children: \'children\' }\n        let searchProps = [\'name\', \'size\', \'type\', \'date\']\n        let rest = VueUtil.searchTree(this.tableData2, item => searchProps.some(key => VueUtil.toString(item[key]).toLowerCase().indexOf(filterName) > -1), options)\n        VueUtil.eachTree(rest, item => {\n          searchProps.forEach(key => {\n            item[key] = VueUtil.toString(item[key]).replace(filterRE, match => `<span class="keyword-lighten">${match}</span>`)\n          })\n        }, options)\n        return rest\n      }\n      return this.tableData2\n    }\n  },\n  created () {\n    this.tableData2 = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\n  },\n\n})\n<\/script>',template:'<div class="source">    <vue-toolbar>\n      <template v-slot:buttons>\n        <vue-input v-model="filterName2" type="search" placeholder="试试全表搜索"></vue-input>\n      </template>\n    </vue-toolbar>\n\n    <vue-xtable\n      :data="list2"\n      :tree-config="{children: \'children\', expandAll: !!filterName2}">\n      <vue-xtable-column type="index" width="160" title="序号" tree-node></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name">\n        <template v-slot="scope">\n          <span v-html="scope.row.name"></span>\n        </template>\n      </vue-xtable-column>\n      <vue-xtable-column field="size" title="Size">\n        <template v-slot="scope">\n          <span v-html="scope.row.size"></span>\n        </template>\n      </vue-xtable-column>\n      <vue-xtable-column field="type" title="Type">\n        <template v-slot="scope">\n          <span v-html="scope.row.type"></span>\n        </template>\n      </vue-xtable-column>\n      <vue-xtable-column field="date" title="Date">\n        <template v-slot="scope">\n          <span v-html="scope.row.date"></span>\n        </template>\n      </vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{filterName2:"",tableData2:[]}},computed:{list2:function(){var e=VueUtil.toString(this.filterName2).trim().toLowerCase();if(e){var n=new RegExp(e,"gi"),t={children:"children"},l=["name","size","type","date"],o=VueUtil.searchTree(this.tableData2,function(n){return l.some(function(t){return VueUtil.toString(n[t]).toLowerCase().indexOf(e)>-1})},t);return VueUtil.eachTree(o,function(e){l.forEach(function(t){e[t]=VueUtil.toString(e[t]).replace(n,function(e){return'<span class="keyword-lighten">'.concat(e,"</span>")})})},t),o}return this.tableData2}},created:function(){this.tableData2=VueUtil.clone(window.MOCK_TREE_DATA_LIST,!0)}}}],styles:""}},"./demo/XtableDemo/advanced/Span.vue":
/*!*******************************************!*\
  !*** ./demo/XtableDemo/advanced/Span.vue ***!
  \*******************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/advanced/Span",name:"XtableDemo.advanced.Span",head:{label:"XtableDemo.advanced.Span.label",description:"XtableDemo.advanced.Span.description"},samples:[{id:"XtableDemo.advanced.Span.sample1",label:"XtableDemo.advanced.Span.sample1.label",description:"XtableDemo.advanced.Span.sample1.description",code:'<vue-xtable\n  border\n  height="400"\n  :span-method="colspanMethod"\n  :data="tableData">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" sortable></vue-xtable-column>\n  <vue-xtable-column field="role" title="Role" sortable></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 20)\n    this.tableData = list\n  },\n\n  methods: {\n    colspanMethod ({ row, rowIndex, column, columnIndex, data }) {\n      if (rowIndex % 2 === 0) {\n        if (columnIndex === 2) {\n          return {\n            rowspan: 1,\n            colspan: 2\n          }\n        } else if (columnIndex === 3) {\n          return {\n            rowspan: 0,\n            colspan: 0\n          }\n        }\n      }\n    },\n  }\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      border\n      height="400"\n      :span-method="colspanMethod"\n      :data="tableData">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" sortable></vue-xtable-column>\n      <vue-xtable-column field="role" title="Role" sortable></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){var e=window.MOCK_DATA_LIST.slice(0,20);this.tableData=e},methods:{colspanMethod:function(e){e.row;var n=e.rowIndex,t=(e.column,e.columnIndex);e.data;if(n%2==0){if(2===t)return{rowspan:1,colspan:2};if(3===t)return{rowspan:0,colspan:0}}}}}},{id:"XtableDemo.advanced.Span.sample2",label:"XtableDemo.advanced.Span.sample2.label",description:"XtableDemo.advanced.Span.sample2.description",code:'<vue-xtable\n  border\n  height="400"\n  :span-method="rowspanMethod"\n  :data="tableData">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="key" title="Key"></vue-xtable-column>\n  <vue-xtable-column field="content" title="Translate"></vue-xtable-column>\n  <vue-xtable-column field="language" title="Language" :filters="[{label: \'中文\', value: \'zh_CN\'}, {label: \'English\', value: \'en_US\'}]"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 20)\n    this.tableData = list\n  },\n\n  methods: {\n    // 通用行合并函数（将相同多列数据合并为一行）\n    rowspanMethod ({ row, $rowIndex, column, data }) {\n      let fields = [\'key\']\n      let cellValue = row[column.property]\n      if (cellValue && VueUtil.includes(fields, property)) {\n        let prevRow = data[$rowIndex - 1]\n        let nextRow = data[$rowIndex + 1]\n        if (prevRow && prevRow[column.property] === cellValue) {\n          return { rowspan: 0, colspan: 0 }\n        } else {\n          let countRowspan = 1\n          while (nextRow && nextRow[column.property] === cellValue) {\n            nextRow = data[++countRowspan + $rowIndex]\n          }\n          if (countRowspan > 1) {\n            return { rowspan: countRowspan, colspan: 1 }\n          }\n        }\n      }\n    }\n  }\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      border\n      height="400"\n      :span-method="rowspanMethod"\n      :data="tableData">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="key" title="Key"></vue-xtable-column>\n      <vue-xtable-column field="content" title="Translate"></vue-xtable-column>\n      <vue-xtable-column field="language" title="Language" :filters="[{label: \'中文\', value: \'zh_CN\'}, {label: \'English\', value: \'en_US\'}]"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){var e=window.MOCK_DATA_LIST.slice(0,20);this.tableData=e},methods:{rowspanMethod:function(e){var n=e.row,t=e.$rowIndex,l=e.column,o=e.data,a=n[l.property];if(a&&VueUtil.includes(["key"],property)){var i=o[t-1],u=o[t+1];if(i&&i[l.property]===a)return{rowspan:0,colspan:0};for(var r=1;u&&u[l.property]===a;)u=o[++r+t];if(r>1)return{rowspan:r,colspan:1}}}}}}],styles:""}},"./demo/XtableDemo/advanced/SpanRow.vue":
/*!**********************************************!*\
  !*** ./demo/XtableDemo/advanced/SpanRow.vue ***!
  \**********************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/advanced/SpanRow",name:"XtableDemo.advanced.SpanRow",head:{label:"XtableDemo.advanced.SpanRow.label",description:"XtableDemo.advanced.SpanRow.description"},samples:[{id:"XtableDemo.advanced.SpanRow.sample1",label:"XtableDemo.advanced.SpanRow.sample1.label",description:"XtableDemo.advanced.SpanRow.sample1.description",code:"<vue-xtable\n  border\n  height=\"600\"\n  :span-method=\"rowspanMethod\"\n  :data=\"tableData\">\n  <vue-xtable-column field=\"name_1\" title=\"功能模块\"></vue-xtable-column>\n  <vue-xtable-column field=\"name_2\" title=\"详细功能\"></vue-xtable-column>\n  <vue-xtable-column field=\"name_3\" title=\"权限类型\">\n    <template v-slot=\"scope\">\n      <vue-checkbox v-model=\"scope.row.check_3\" @change=\"check3ChangeEvent(row)\">{{ scope.row.name_3 }}</vue-checkbox>\n    </template>\n  </vue-xtable-column>\n  <vue-xtable-column field=\"name_4\" title=\"权限列表\">\n    <template v-slot=\"scope\">\n      <vue-checkbox v-model=\"scope.row.check_4\" @change=\"check4ChangeEvent(row)\">{{ scope.row.name_4 }}</vue-checkbox>\n    </template>\n  </vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      treeData: [\n        {\n          id: '10000',\n          name: '账号管理',\n          children: [\n            {\n              id: '11000',\n              name: '用户管理',\n              children: [\n                {\n                  id: '11100',\n                  name: '查看',\n                  children: [\n                    {\n                      id: '11110',\n                      name: '用户列表'\n                    }\n                  ]\n                },\n                {\n                  id: '11200',\n                  name: '编辑',\n                  children: [\n                    {\n                      id: '11210',\n                      name: '用户列表'\n                    },\n                    {\n                      id: '11220',\n                      name: '新增用户'\n                    }\n                  ]\n                },\n                {\n                  id: '11300',\n                  name: '操作',\n                  children: [\n                    {\n                      id: '11310',\n                      name: '新增'\n                    },\n                    {\n                      id: '11320',\n                      name: '删除'\n                    },\n                    {\n                      id: '11330',\n                      name: '修改'\n                    }\n                  ]\n                }\n              ]\n            },\n            {\n              id: '12000',\n              name: '角色管理',\n              children: [\n                {\n                  id: '12100',\n                  name: '查看',\n                  children: [\n                    {\n                      id: '12110',\n                      name: '角色列表'\n                    }\n                  ]\n                },\n                {\n                  id: '12200',\n                  name: '编辑',\n                  children: [\n                    {\n                      id: '122100',\n                      name: '角色列表'\n                    },\n                    {\n                      id: '12220',\n                      name: '新增角色'\n                    }\n                  ]\n                },\n                {\n                  id: '12300',\n                  name: '操作',\n                  children: [\n                    {\n                      id: '12310',\n                      name: '新增'\n                    },\n                    {\n                      id: '12320',\n                      name: '删除'\n                    },\n                    {\n                      id: '12330',\n                      name: '修改'\n                    }\n                  ]\n                }\n              ]\n            }\n          ]\n        },\n        {\n          id: '20000',\n          name: '个人中心',\n          children: [\n            {\n              id: '21000',\n              name: '个性化设置',\n              children: [\n                {\n                  id: '21100',\n                  name: '查看',\n                  children: [\n                    {\n                      id: '21110',\n                      name: '信息列表'\n                    }\n                  ]\n                },\n                {\n                  id: '21200',\n                  name: '操作',\n                  children: [\n                    {\n                      id: '21210',\n                      name: '重置信息'\n                    }\n                  ]\n                }\n              ]\n            },\n            {\n              id: '22000',\n              name: '账户管理',\n              children: [\n                {\n                  id: '22100',\n                  name: '查看',\n                  children: [\n                    {\n                      id: '22110',\n                      name: '账户余额'\n                    },\n                    {\n                      id: '22120',\n                      name: '帐变记录'\n                    }\n                  ]\n                }\n              ]\n            }\n          ]\n        }\n      ],\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.toColTreeData()\n  },\n\n  methods: {\n    check3ChangeEvent (row) {\n      let checked = row.check_3\n      let levelList = this.tableData.filter(item => item.id_3 === row.id_3)\n      levelList.forEach(item => {\n        item.check_4 = checked\n      })\n    },\n    check4ChangeEvent (row) {\n      let levelList = this.tableData.filter(item => item.id_3 === row.id_3)\n      let checked = levelList.every(item => item.check_4)\n      levelList.forEach(item => {\n        item.check_3 = checked\n      })\n    },\n    // 转换横向树结构\n    toColTreeData () {\n      let options = { children: 'children' }\n      let list = []\n      let keyMap = {}\n      VueUtil.eachTree(this.treeData, (item, index, result, paths, parent) => {\n        keyMap[item.id] = item\n        item.keys = parent ? parent.keys.concat([item.id]) : [item.id]\n        if (!item.children || !item.children.length) {\n          let row = { }\n          item.keys.forEach((key, index) => {\n            let level = index + 1\n            let obj = keyMap[key]\n            row[`check_${level}`] = false\n            row[`id_${level}`] = obj.id\n            row[`name_${level}`] = obj.name\n          })\n          list.push(row)\n        }\n      }, options)\n      this.keyMap = keyMap\n      this.tableData = list\n    },\n    // 通用行合并函数（将相同多列数据合并为一行）\n    rowspanMethod ({ row, $rowIndex, column, data }) {\n      let fields = ['name_1', 'name_2', 'name_3']\n      let cellValue = row[column.property]\n      if (cellValue && VueUtil.includes(fields, column.property)) {\n        let prevRow = data[$rowIndex - 1]\n        let nextRow = data[$rowIndex + 1]\n        if (prevRow && prevRow[column.property] === cellValue) {\n          return { rowspan: 0, colspan: 0 }\n        } else {\n          let countRowspan = 1\n          while (nextRow && nextRow[column.property] === cellValue) {\n            nextRow = data[++countRowspan + $rowIndex]\n          }\n          if (countRowspan > 1) {\n            return { rowspan: countRowspan, colspan: 1 }\n          }\n        }\n      }\n    }\n  }\n})\n<\/script>",template:'<div class="source">    <vue-xtable\n      border\n      height="600"\n      :span-method="rowspanMethod"\n      :data="tableData">\n      <vue-xtable-column field="name_1" title="功能模块"></vue-xtable-column>\n      <vue-xtable-column field="name_2" title="详细功能"></vue-xtable-column>\n      <vue-xtable-column field="name_3" title="权限类型">\n        <template v-slot="scope">\n          <vue-checkbox v-model="scope.row.check_3" @change="check3ChangeEvent(row)">{{ scope.row.name_3 }}</vue-checkbox>\n        </template>\n      </vue-xtable-column>\n      <vue-xtable-column field="name_4" title="权限列表">\n        <template v-slot="scope">\n          <vue-checkbox v-model="scope.row.check_4" @change="check4ChangeEvent(row)">{{ scope.row.name_4 }}</vue-checkbox>\n        </template>\n      </vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{treeData:[{id:"10000",name:"账号管理",children:[{id:"11000",name:"用户管理",children:[{id:"11100",name:"查看",children:[{id:"11110",name:"用户列表"}]},{id:"11200",name:"编辑",children:[{id:"11210",name:"用户列表"},{id:"11220",name:"新增用户"}]},{id:"11300",name:"操作",children:[{id:"11310",name:"新增"},{id:"11320",name:"删除"},{id:"11330",name:"修改"}]}]},{id:"12000",name:"角色管理",children:[{id:"12100",name:"查看",children:[{id:"12110",name:"角色列表"}]},{id:"12200",name:"编辑",children:[{id:"122100",name:"角色列表"},{id:"12220",name:"新增角色"}]},{id:"12300",name:"操作",children:[{id:"12310",name:"新增"},{id:"12320",name:"删除"},{id:"12330",name:"修改"}]}]}]},{id:"20000",name:"个人中心",children:[{id:"21000",name:"个性化设置",children:[{id:"21100",name:"查看",children:[{id:"21110",name:"信息列表"}]},{id:"21200",name:"操作",children:[{id:"21210",name:"重置信息"}]}]},{id:"22000",name:"账户管理",children:[{id:"22100",name:"查看",children:[{id:"22110",name:"账户余额"},{id:"22120",name:"帐变记录"}]}]}]}],tableData:[]}},created:function(){this.toColTreeData()},methods:{check3ChangeEvent:function(e){var n=e.check_3;this.tableData.filter(function(n){return n.id_3===e.id_3}).forEach(function(e){e.check_4=n})},check4ChangeEvent:function(e){var n=this.tableData.filter(function(n){return n.id_3===e.id_3}),t=n.every(function(e){return e.check_4});n.forEach(function(e){e.check_3=t})},toColTreeData:function(){var e=[],n={};VueUtil.eachTree(this.treeData,function(t,l,o,a,i){if(n[t.id]=t,t.keys=i?i.keys.concat([t.id]):[t.id],!t.children||!t.children.length){var u={};t.keys.forEach(function(e,t){var l=t+1,o=n[e];u["check_".concat(l)]=!1,u["id_".concat(l)]=o.id,u["name_".concat(l)]=o.name}),e.push(u)}},{children:"children"}),this.keyMap=n,this.tableData=e},rowspanMethod:function(e){var n=e.row,t=e.$rowIndex,l=e.column,o=e.data,a=n[l.property];if(a&&VueUtil.includes(["name_1","name_2","name_3"],l.property)){var i=o[t-1],u=o[t+1];if(i&&i[l.property]===a)return{rowspan:0,colspan:0};for(var r=1;u&&u[l.property]===a;)u=o[++r+t];if(r>1)return{rowspan:r,colspan:1}}}}}}],styles:""}},"./demo/XtableDemo/advanced/Template.vue":
/*!***********************************************!*\
  !*** ./demo/XtableDemo/advanced/Template.vue ***!
  \***********************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/advanced/Template",name:"XtableDemo.advanced.Template",head:{label:"XtableDemo.advanced.Template.label",description:"XtableDemo.advanced.Template.description"},samples:[{id:"XtableDemo.advanced.Template.sample1",label:"XtableDemo.advanced.Template.sample1.label",description:"XtableDemo.advanced.Template.sample1.description",code:'<vue-toolbar>\n  <template v-slot:buttons>\n    <vue-button>{{ $t(\'插入行\') }}</vue-button>\n    <vue-button>\n      <template>下拉按钮</template>\n      <template v-slot:dropdowns>\n        <vue-button>删除</vue-button>\n        <vue-button>保存</vue-button>\n      </template>\n    </vue-button>\n  </template>\n</vue-toolbar>\n\n<vue-xtable\n  border\n  resizable\n  :data="tableData">\n  <vue-xtable-column type="index" width="100" show-overflow>\n    <template v-slot="scope">\n      <vue-button @click="showDetailEvent(scope.row)">弹框{{ scope.seq }}</vue-button>\n    </template>\n  </vue-xtable-column>\n  <vue-xtable-column field="name" title="姓名" sortable>\n    <template v-slot="scope">\n      <a href="/" target="_black">我是超链接：{{ scope.row.name }}</a>\n    </template>\n  </vue-xtable-column>\n  <vue-xtable-column field="sex" title="性别" :filters="[{data: \'\'}]" :filter-method="filterSexMethod">\n    <template v-slot:header="scope">\n      <vue-xtable-tooltip v-model="showSexTip" content="这样玩也行？">\n        <span style="color: red;" @click="showSexTip = !showSexTip">这样玩也行</span>\n      </vue-xtable-tooltip>\n    </template>\n    <template v-slot:filter="scope">\n      <template v-for="(option, index) in scope.column.filters">\n        <input type="type" v-model="option.data" :key="index" @input="changeFilterEvent($event, option, scope.context)">\n      </template>\n    </template>\n    <template v-slot="scope">\n      <span>{{ scope.row.sex }} </span>\n      <vue-button type="text">编辑</vue-button>\n      <vue-button type="text">删除</vue-button>\n    </template>\n  </vue-xtable-column>\n  <vue-xtable-column field="time" title="Time">\n    <template>\n      <vue-input placeholder="这样也行" size="mini"></vue-input>\n    </template>\n    <template v-slot="scope">\n      <span>{{ formatDate(scope.row.time) }}</span>\n    </template>\n  </vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" show-overflow>\n    <template v-slot="scope">\n      <select v-if="scope.rowIndex === 1">\n        <option value="1">还可以这样</option>\n      </select>\n      <a href="/">{{ scope.row.name }}</a>\n    </template>\n  </vue-xtable-column>\n  <vue-xtable-column field="html1" title="Html片段" width="160" show-overflow>\n    <template v-slot="scope">\n      <span v-html="scope.row.html1"></span>\n    </template>\n  </vue-xtable-column>\n  <vue-xtable-column field="img1" title="图片路径" width="120">\n    <template v-slot="scope">\n      <img v-if="scope.row.img1" :src="scope.row.img1" style="width: 100px;">\n      <span v-else>无</span>\n    </template>\n  </vue-xtable-column>\n</vue-xtable>\n\n<vue-dialog v-model="showDetails" title="查看详情" width="800" height="400" resize>\n  <template>{{ selectRow ? selectRow.text : \'\' }}</template>\n</vue-dialog>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      showSexTip: false,\n      showDetails: false,\n      selectRow: null,\n      tableData: [],\n\n    }\n  },\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 6)\n    this.tableData = list\n  },\n\n  methods: {\n    formatDate (value) {\n      return VueUtil.formatDate(value, \'yyyy-MM-dd HH:mm:ss.S\')\n    },\n    filterSexMethod ({ option, row }) {\n      return row.sex === option.data\n    },\n    changeFilterEvent (evnt, option, context) {\n      context.changeMultipleOption(evnt, !!option.data, option)\n    },\n    showDetailEvent (row) {\n      this.selectRow = row\n      this.showDetails = true\n    }\n  }\n})\n<\/script>',template:'<div class="source">    <vue-toolbar>\n      <template v-slot:buttons>\n        <vue-button>{{ $t(\'插入行\') }}</vue-button>\n        <vue-button>\n          <template>下拉按钮</template>\n          <template v-slot:dropdowns>\n            <vue-button>删除</vue-button>\n            <vue-button>保存</vue-button>\n          </template>\n        </vue-button>\n      </template>\n    </vue-toolbar>\n\n    <vue-xtable\n      border\n      resizable\n      :data="tableData">\n      <vue-xtable-column type="index" width="100" show-overflow>\n        <template v-slot="scope">\n          <vue-button @click="showDetailEvent(scope.row)">弹框{{ scope.seq }}</vue-button>\n        </template>\n      </vue-xtable-column>\n      <vue-xtable-column field="name" title="姓名" sortable>\n        <template v-slot="scope">\n          <a href="/" target="_black">我是超链接：{{ scope.row.name }}</a>\n        </template>\n      </vue-xtable-column>\n      <vue-xtable-column field="sex" title="性别" :filters="[{data: \'\'}]" :filter-method="filterSexMethod">\n        <template v-slot:header="scope">\n          <vue-xtable-tooltip v-model="showSexTip" content="这样玩也行？">\n            <span style="color: red;" @click="showSexTip = !showSexTip">这样玩也行</span>\n          </vue-xtable-tooltip>\n        </template>\n        <template v-slot:filter="scope">\n          <template v-for="(option, index) in scope.column.filters">\n            <input type="type" v-model="option.data" :key="index" @input="changeFilterEvent($event, option, scope.context)">\n          </template>\n        </template>\n        <template v-slot="scope">\n          <span>{{ scope.row.sex }} </span>\n          <vue-button type="text">编辑</vue-button>\n          <vue-button type="text">删除</vue-button>\n        </template>\n      </vue-xtable-column>\n      <vue-xtable-column field="time" title="Time">\n        <template>\n          <vue-input placeholder="这样也行" size="mini"></vue-input>\n        </template>\n        <template v-slot="scope">\n          <span>{{ formatDate(scope.row.time) }}</span>\n        </template>\n      </vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" show-overflow>\n        <template v-slot="scope">\n          <select v-if="scope.rowIndex === 1">\n            <option value="1">还可以这样</option>\n          </select>\n          <a href="/">{{ scope.row.name }}</a>\n        </template>\n      </vue-xtable-column>\n      <vue-xtable-column field="html1" title="Html片段" width="160" show-overflow>\n        <template v-slot="scope">\n          <span v-html="scope.row.html1"></span>\n        </template>\n      </vue-xtable-column>\n      <vue-xtable-column field="img1" title="图片路径" width="120">\n        <template v-slot="scope">\n          <img v-if="scope.row.img1" :src="scope.row.img1" style="width: 100px;">\n          <span v-else>无</span>\n        </template>\n      </vue-xtable-column>\n    </vue-xtable>\n\n    <vue-dialog v-model="showDetails" title="查看详情" width="800" height="400" resize>\n      <template>{{ selectRow ? selectRow.text : \'\' }}</template>\n    </vue-dialog></div>',parameter:{data:function(){return{showSexTip:!1,showDetails:!1,selectRow:null,tableData:[]}},created:function(){var e=window.MOCK_DATA_LIST.slice(0,6);this.tableData=e},methods:{formatDate:function(e){return VueUtil.formatDate(e,"yyyy-MM-dd HH:mm:ss.S")},filterSexMethod:function(e){var n=e.option;return e.row.sex===n.data},changeFilterEvent:function(e,n,t){t.changeMultipleOption(e,!!n.data,n)},showDetailEvent:function(e){this.selectRow=e,this.showDetails=!0}}}}],styles:""}},"./demo/XtableDemo/advanced/Toolbar.vue":
/*!**********************************************!*\
  !*** ./demo/XtableDemo/advanced/Toolbar.vue ***!
  \**********************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/advanced/Toolbar",name:"XtableDemo.advanced.Toolbar",head:{label:"XtableDemo.advanced.Toolbar.label",description:"XtableDemo.advanced.Toolbar.description"},samples:[{id:"XtableDemo.advanced.Toolbar.sample1",label:"XtableDemo.advanced.Toolbar.sample1.label",description:"XtableDemo.advanced.Toolbar.sample1.description",code:'<vue-toolbar\n  setting\n  export\n  :buttons="toolbarButtons"\n  :refresh="{query: findList}"></vue-toolbar>\n\n<vue-xtable\n  border\n  height="400"\n  :loading="loading"\n  :data="tableData">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="姓名"></vue-xtable-column>\n  <vue-xtable-column field="role" title="Role"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="性别"></vue-xtable-column>\n  <vue-xtable-column field="age" title="年龄"></vue-xtable-column>\n  <vue-xtable-column field="rate" title="Rate"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      loading: false,\n      tableData: [],\n      toolbarButtons: [\n        {\n          code: \'btn1\',\n          name: \'插入行\'\n        },\n        {\n          name: \'下拉按钮\',\n          dropdowns: [\n            {\n              name: \'按钮111\',\n              code: \'btn2\'\n            },\n            {\n              name: \'按钮222\',\n              code: \'btn3\'\n            }\n          ]\n        }\n      ],\n\n    }\n  },\n  created () {\n    this.findList()\n  },\n\n  methods: {\n    findList () {\n      this.loading = true\n      return new Promise(resolve => {\n        setTimeout(() => {\n          this.tableData = window.MOCK_DATA_LIST.slice(0, 20)\n          this.loading = false\n          resolve()\n        }, 300)\n      })\n    }\n  }\n})\n<\/script>',template:'<div class="source">    <vue-toolbar\n      setting\n      export\n      :buttons="toolbarButtons"\n      :refresh="{query: findList}"></vue-toolbar>\n\n    <vue-xtable\n      border\n      height="400"\n      :loading="loading"\n      :data="tableData">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="姓名"></vue-xtable-column>\n      <vue-xtable-column field="role" title="Role"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="性别"></vue-xtable-column>\n      <vue-xtable-column field="age" title="年龄"></vue-xtable-column>\n      <vue-xtable-column field="rate" title="Rate"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{loading:!1,tableData:[],toolbarButtons:[{code:"btn1",name:"插入行"},{name:"下拉按钮",dropdowns:[{name:"按钮111",code:"btn2"},{name:"按钮222",code:"btn3"}]}]}},created:function(){this.findList()},methods:{findList:function(){var e=this;return this.loading=!0,new Promise(function(n){setTimeout(function(){e.tableData=window.MOCK_DATA_LIST.slice(0,20),e.loading=!1,n()},300)})}}}}],styles:""}},"./demo/XtableDemo/base/AutoHeight.vue":
/*!*********************************************!*\
  !*** ./demo/XtableDemo/base/AutoHeight.vue ***!
  \*********************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/base/AutoHeight",name:"XtableDemo.base.AutoHeight",head:{label:"XtableDemo.base.AutoHeight.label",description:"XtableDemo.base.AutoHeight.description"},samples:[{id:"XtableDemo.base.AutoHeight.sample1",label:"XtableDemo.base.AutoHeight.sample1.label",description:"XtableDemo.base.AutoHeight.sample1.description",code:'<div style="height: 600px">\n  <vue-xtable\n    border\n    height="auto"\n    :data="tableData">\n    <vue-xtable-column type="index" width="60"></vue-xtable-column>\n    <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n    <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n    <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n    <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n  </vue-xtable>\n</div>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 20)\n  },\n\n})\n<\/script>',template:'<div class="source">    <div style="height: 600px">\n      <vue-xtable\n        border\n        height="auto"\n        :data="tableData">\n        <vue-xtable-column type="index" width="60"></vue-xtable-column>\n        <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n        <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n        <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n        <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n      </vue-xtable>\n    </div></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,20)}}},{id:"XtableDemo.base.AutoHeight.sample2",label:"XtableDemo.base.AutoHeight.sample2.label",description:"XtableDemo.base.AutoHeight.sample2.description",code:'<div style="height: 600px">\n  <vue-xtable\n    border\n    height="40%"\n    :data="tableData">\n    <vue-xtable-column type="index" width="60"></vue-xtable-column>\n    <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n    <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n    <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n    <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n  </vue-xtable>\n  <vue-xtable\n    border\n    height="60%"\n    :data="tableData">\n    <vue-xtable-column type="index" width="60"></vue-xtable-column>\n    <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n    <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n    <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n    <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n  </vue-xtable>\n</div>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 20)\n  },\n\n})\n<\/script>',template:'<div class="source">    <div style="height: 600px">\n      <vue-xtable\n        border\n        height="40%"\n        :data="tableData">\n        <vue-xtable-column type="index" width="60"></vue-xtable-column>\n        <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n        <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n        <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n        <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n      </vue-xtable>\n      <vue-xtable\n        border\n        height="60%"\n        :data="tableData">\n        <vue-xtable-column type="index" width="60"></vue-xtable-column>\n        <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n        <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n        <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n        <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n      </vue-xtable>\n    </div></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,20)}}}],styles:""}},"./demo/XtableDemo/base/Basic.vue":
/*!****************************************!*\
  !*** ./demo/XtableDemo/base/Basic.vue ***!
  \****************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/base/Basic",name:"XtableDemo.base.Basic",head:{label:"XtableDemo.base.Basic.label",description:"XtableDemo.base.Basic.description"},samples:[{id:"XtableDemo.base.Basic.sample1",label:"XtableDemo.base.Basic.sample1.label",description:"XtableDemo.base.Basic.sample1.description",code:'<vue-xtable\n  :data="tableData">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="姓名"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="性别"></vue-xtable-column>\n  <vue-xtable-column field="age" title="年龄"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n    }\n  },\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 6)\n    this.tableData = list\n  },\n\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      :data="tableData">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="姓名"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="性别"></vue-xtable-column>\n      <vue-xtable-column field="age" title="年龄"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){var e=window.MOCK_DATA_LIST.slice(0,6);this.tableData=e}}},{id:"XtableDemo.base.Basic.sample2",label:"XtableDemo.base.Basic.sample2.label",description:"XtableDemo.base.Basic.sample2.description",code:'<vue-xtable\n  highlight-hover-row\n  :data="tableData">\n  <vue-xtable-column type="index" title="序号" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n    }\n  },\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 6)\n    this.tableData = list\n  },\n\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      highlight-hover-row\n      :data="tableData">\n      <vue-xtable-column type="index" title="序号" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){var e=window.MOCK_DATA_LIST.slice(0,6);this.tableData=e}}}],styles:""}},"./demo/XtableDemo/base/Border.vue":
/*!*****************************************!*\
  !*** ./demo/XtableDemo/base/Border.vue ***!
  \*****************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/base/Border",name:"XtableDemo.base.Border",head:{label:"XtableDemo.base.Border.label",description:"XtableDemo.base.Border.description"},samples:[{id:"XtableDemo.base.Border.sample1",label:"XtableDemo.base.Border.sample1.label",description:"XtableDemo.base.Border.sample1.description",code:'<vue-xtable\n  border\n  :data="tableData">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\n  },\n\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      border\n      :data="tableData">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,6)}}}],styles:""}},"./demo/XtableDemo/base/Current.vue":
/*!******************************************!*\
  !*** ./demo/XtableDemo/base/Current.vue ***!
  \******************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/base/Current",name:"XtableDemo.base.Current",head:{label:"XtableDemo.base.Current.label",description:"XtableDemo.base.Current.description"},samples:[{id:"XtableDemo.base.Current.sample1",label:"XtableDemo.base.Current.sample1.label",description:"XtableDemo.base.Current.sample1.description",code:'<vue-toolbar>\n  <template v-slot:buttons>\n    <vue-button @click="$refs.xTable.setCurrentRow(tableData[1])">设置第二行选中</vue-button>\n    <vue-button @click="$refs.xTable.clearCurrentRow()">取消选中</vue-button>\n    <vue-button @click="getCurrentEvent">获取高亮行</vue-button>\n  </template>\n</vue-toolbar>\n\n<vue-xtable\n  border\n  highlight-hover-row\n  highlight-current-row\n  ref="xTable"\n  height="300"\n  :data="tableData"\n  @current-change="currentChangeEvent">\n  <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 6)\n    this.tableData = list\n  },\n  methods: {\n    currentChangeEvent ({ row }) {\n      console.log(\'行选中事件\')\n    },\n    getCurrentEvent () {\n      this.$alert({ message: JSON.stringify(this.$refs.xTable.getCurrentRow()) })\n    }\n  }\n})\n<\/script>',template:'<div class="source">    <vue-toolbar>\n      <template v-slot:buttons>\n        <vue-button @click="$refs.xTable.setCurrentRow(tableData[1])">设置第二行选中</vue-button>\n        <vue-button @click="$refs.xTable.clearCurrentRow()">取消选中</vue-button>\n        <vue-button @click="getCurrentEvent">获取高亮行</vue-button>\n      </template>\n    </vue-toolbar>\n\n    <vue-xtable\n      border\n      highlight-hover-row\n      highlight-current-row\n      ref="xTable"\n      height="300"\n      :data="tableData"\n      @current-change="currentChangeEvent">\n      <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){var e=window.MOCK_DATA_LIST.slice(0,6);this.tableData=e},methods:{currentChangeEvent:function(e){e.row;console.log("行选中事件")},getCurrentEvent:function(){this.$alert({message:JSON.stringify(this.$refs.xTable.getCurrentRow())})}}}}],styles:""}},"./demo/XtableDemo/base/DynamicStyle.vue":
/*!***********************************************!*\
  !*** ./demo/XtableDemo/base/DynamicStyle.vue ***!
  \***********************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/base/DynamicStyle",name:"XtableDemo.base.DynamicStyle",head:{label:"XtableDemo.base.DynamicStyle.label",description:"XtableDemo.base.DynamicStyle.description"},samples:[{id:"XtableDemo.base.DynamicStyle.sample1",label:"XtableDemo.base.DynamicStyle.sample1.label",description:"XtableDemo.base.DynamicStyle.sample1.description",code:'<vue-xtable\n  border\n  :header-cell-style="headerCellStyle"\n  :row-style="rowStyle"\n  :cell-style="cellStyle"\n  :data="tableData">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\n  },\n\n  methods: {\n    headerCellStyle ({ column, columnIndex }) {\n      if (column.property === \'name\') {\n        return {\n          backgroundColor: \'#f60\',\n          color: \'#ffffff\'\n        }\n      }\n    },\n    rowStyle ({ row, rowIndex }) {\n      if (VueUtil.includes([2, 3, 5], rowIndex)) {\n        return {\n          backgroundColor: \'red\',\n          color: \'#ffffff\'\n        }\n      }\n    },\n    cellStyle ({ row, rowIndex, column, columnIndex }) {\n      if (column.property === \'sex\') {\n        if (row.sex >= \'1\') {\n          return {\n            backgroundColor: \'#187\'\n          }\n        } else if (row.age === 26) {\n          return {\n            backgroundColor: \'#2db7f5\'\n          }\n        }\n      }\n    }\n  }\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      border\n      :header-cell-style="headerCellStyle"\n      :row-style="rowStyle"\n      :cell-style="cellStyle"\n      :data="tableData">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,6)},methods:{headerCellStyle:function(e){var n=e.column;e.columnIndex;if("name"===n.property)return{backgroundColor:"#f60",color:"#ffffff"}},rowStyle:function(e){e.row;var n=e.rowIndex;if(VueUtil.includes([2,3,5],n))return{backgroundColor:"red",color:"#ffffff"}},cellStyle:function(e){var n=e.row,t=(e.rowIndex,e.column);e.columnIndex;if("sex"===t.property){if(n.sex>="1")return{backgroundColor:"#187"};if(26===n.age)return{backgroundColor:"#2db7f5"}}}}}}],styles:""}},"./demo/XtableDemo/base/Empty.vue":
/*!****************************************!*\
  !*** ./demo/XtableDemo/base/Empty.vue ***!
  \****************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/base/Empty",name:"XtableDemo.base.Empty",head:{label:"XtableDemo.base.Empty.label",description:"XtableDemo.base.Empty.description"},samples:[{id:"XtableDemo.base.Empty.sample1",label:"XtableDemo.base.Empty.sample1.label",description:"XtableDemo.base.Empty.sample1.description",code:'<vue-xtable\n  :data="tableData">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      loading: false,\n      tableData: [],\n    }\n  },\n  created () {\n    setTimeout(() => {\n      this.tableData = []\n    }, 2000)\n  },\n\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      :data="tableData">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{loading:!1,tableData:[]}},created:function(){var e=this;setTimeout(function(){e.tableData=[]},2e3)}}},{id:"XtableDemo.base.Empty.sample2",label:"XtableDemo.base.Empty.sample2.label",description:"XtableDemo.base.Empty.sample2.description",code:'<vue-xtable\n  border\n  :data="tableData">\n  <vue-xtable-column type="index" width="100"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" width="300"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex" width="300"></vue-xtable-column>\n  <vue-xtable-column field="date" title="Date" width="300"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age" width="300"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" width="300" show-overflow></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      loading: false,\n      tableData: [],\n    }\n  },\n  created () {\n    setTimeout(() => {\n      this.tableData = []\n    }, 2000)\n  },\n\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      border\n      :data="tableData">\n      <vue-xtable-column type="index" width="100"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" width="300"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex" width="300"></vue-xtable-column>\n      <vue-xtable-column field="date" title="Date" width="300"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age" width="300"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" width="300" show-overflow></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{loading:!1,tableData:[]}},created:function(){var e=this;setTimeout(function(){e.tableData=[]},2e3)}}},{id:"XtableDemo.base.Empty.sample3",label:"XtableDemo.base.Empty.sample3.label",description:"XtableDemo.base.Empty.sample3.description",code:'<vue-xtable\n  border\n  height="300"\n  :loading="loading"\n  :data="tableData">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n  <template v-slot:empty>\n    <span style="color: red;">没有更多数据了！</span>\n  </template>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      loading: false,\n      tableData: [],\n    }\n  },\n  created () {\n    this.loading = true\n    setTimeout(() => {\n      this.loading = false\n      this.tableData = []\n    }, 3000)\n  },\n\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      border\n      height="300"\n      :loading="loading"\n      :data="tableData">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n      <template v-slot:empty>\n        <span style="color: red;">没有更多数据了！</span>\n      </template>\n    </vue-xtable></div>',parameter:{data:function(){return{loading:!1,tableData:[]}},created:function(){var e=this;this.loading=!0,setTimeout(function(){e.loading=!1,e.tableData=[]},3e3)}}}],styles:""}},"./demo/XtableDemo/base/Filter.vue":
/*!*****************************************!*\
  !*** ./demo/XtableDemo/base/Filter.vue ***!
  \*****************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/base/Filter",name:"XtableDemo.base.Filter",head:{label:"XtableDemo.base.Filter.label",description:"XtableDemo.base.Filter.description"},samples:[{id:"XtableDemo.base.Filter.sample1",label:"XtableDemo.base.Filter.sample1.label",description:"XtableDemo.base.Filter.sample1.description",code:'<vue-xtable\n  border\n  highlight-hover-row\n  height="400"\n  :data="tableData">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" sortable :filters="[{label: \'id大于10\', value: 10}, {label: \'id大于40\', value: 40}]" :filter-method="filterNameMethod"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex" sortable :filters="[{label: \'Man\', value: \'1\'}, {label: \'Woman\', value: \'0\'}]"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age" :filters="[{ data: \'\' }]" :filter-method="filterAgeMethod">\n    <template v-slot:filter="scope">\n      <input type="type" v-for="(option, index) in scope.column.filters" :key="index" v-model="option.data" @input="scope.context.changeOption($event, !!option.data, option)">\n    </template>\n  </vue-xtable-column>\n  <vue-xtable-column field="time" title="Time" sortable></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\n  },\n\n  methods: {\n    filterNameMethod ({ value, row, column }) {\n      return row.id >= value\n    },\n    filterAgeMethod ({ option, row }) {\n      return row.age === Number(option.data)\n    }\n  }\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      border\n      highlight-hover-row\n      height="400"\n      :data="tableData">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" sortable :filters="[{label: \'id大于10\', value: 10}, {label: \'id大于40\', value: 40}]" :filter-method="filterNameMethod"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex" sortable :filters="[{label: \'Man\', value: \'1\'}, {label: \'Woman\', value: \'0\'}]"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age" :filters="[{ data: \'\' }]" :filter-method="filterAgeMethod">\n        <template v-slot:filter="scope">\n          <input type="type" v-for="(option, index) in scope.column.filters" :key="index" v-model="option.data" @input="scope.context.changeOption($event, !!option.data, option)">\n        </template>\n      </vue-xtable-column>\n      <vue-xtable-column field="time" title="Time" sortable></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,50)},methods:{filterNameMethod:function(e){var n=e.value,t=e.row;e.column;return t.id>=n},filterAgeMethod:function(e){var n=e.option;return e.row.age===Number(n.data)}}}},{id:"XtableDemo.base.Filter.sample2",label:"XtableDemo.base.Filter.sample2.label",description:"XtableDemo.base.Filter.sample2.description",code:'<vue-xtable\n  border\n  highlight-hover-row\n  height="400"\n  :data="tableData">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" sortable :filters="[{label: \'id大于10\', value: 10}, {label: \'id大于40\', value: 40, checked: true}]" :filter-method="filterNameMethod"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex" sortable :filters="[{label: \'Man\', value: \'1\'}, {label: \'Woman\', value: \'0\'}]"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age" :filters="[{ data: \'30\', checked: true }]" :filter-method="filterAgeMethod">\n    <template v-slot:filter="scope">\n      <input type="type" v-for="(option, index) in scope.column.filters" :key="index" v-model="option.data" @input="scope.context.changeOption($event, !!option.data, option)">\n    </template>\n  </vue-xtable-column>\n  <vue-xtable-column field="time" title="Time" sortable></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\n  },\n\n  methods: {\n    filterNameMethod ({ value, row, column }) {\n      return row.id >= value\n    },\n    filterAgeMethod ({ option, row }) {\n      return row.age === Number(option.data)\n    }\n  }\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      border\n      highlight-hover-row\n      height="400"\n      :data="tableData">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" sortable :filters="[{label: \'id大于10\', value: 10}, {label: \'id大于40\', value: 40, checked: true}]" :filter-method="filterNameMethod"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex" sortable :filters="[{label: \'Man\', value: \'1\'}, {label: \'Woman\', value: \'0\'}]"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age" :filters="[{ data: \'30\', checked: true }]" :filter-method="filterAgeMethod">\n        <template v-slot:filter="scope">\n          <input type="type" v-for="(option, index) in scope.column.filters" :key="index" v-model="option.data" @input="scope.context.changeOption($event, !!option.data, option)">\n        </template>\n      </vue-xtable-column>\n      <vue-xtable-column field="time" title="Time" sortable></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,50)},methods:{filterNameMethod:function(e){var n=e.value,t=e.row;e.column;return t.id>=n},filterAgeMethod:function(e){var n=e.option;return e.row.age===Number(n.data)}}}}],styles:""}},"./demo/XtableDemo/base/Fixed.vue":
/*!****************************************!*\
  !*** ./demo/XtableDemo/base/Fixed.vue ***!
  \****************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/base/Fixed",name:"XtableDemo.base.Fixed",head:{label:"XtableDemo.base.Fixed.label",description:"XtableDemo.base.Fixed.description"},samples:[{id:"XtableDemo.base.Fixed.sample1",label:"XtableDemo.base.Fixed.sample1.label",description:"XtableDemo.base.Fixed.sample1.description",code:'<vue-xtable\n  border\n  show-overflow\n  :data="tableData">\n  <vue-xtable-column type="index" width="60" fixed="left"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" width="300"></vue-xtable-column>\n  <vue-xtable-column field="role" title="Role" width="300"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex" width="300"></vue-xtable-column>\n  <vue-xtable-column field="date" title="Date" width="300"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" fixed="right" width="300"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 4)\n  },\n\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      border\n      show-overflow\n      :data="tableData">\n      <vue-xtable-column type="index" width="60" fixed="left"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" width="300"></vue-xtable-column>\n      <vue-xtable-column field="role" title="Role" width="300"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex" width="300"></vue-xtable-column>\n      <vue-xtable-column field="date" title="Date" width="300"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" fixed="right" width="300"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,4)}}},{id:"XtableDemo.base.Fixed.sample2",label:"XtableDemo.base.Fixed.sample2.label",description:"XtableDemo.base.Fixed.sample2.description",code:'<vue-xtable\n  border\n  show-overflow\n  :data="tableData">\n  <vue-xtable-column type="index" width="60" fixed="left"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n  <vue-xtable-column field="role" title="Role"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" fixed="right" width="300"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 4)\n  },\n\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      border\n      show-overflow\n      :data="tableData">\n      <vue-xtable-column type="index" width="60" fixed="left"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n      <vue-xtable-column field="role" title="Role"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" fixed="right" width="300"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,4)}}}],styles:""}},"./demo/XtableDemo/base/FixedFull.vue":
/*!********************************************!*\
  !*** ./demo/XtableDemo/base/FixedFull.vue ***!
  \********************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/base/FixedFull",name:"XtableDemo.base.FixedFull",head:{label:"XtableDemo.base.FixedFull.label",description:"XtableDemo.base.FixedFull.description"},samples:[{id:"XtableDemo.base.FixedFull.sample1",label:"XtableDemo.base.FixedFull.sample1.label",description:"XtableDemo.base.FixedFull.sample1.description",code:'<vue-xtable\n  border\n  resizable\n  height="300"\n  highlight-hover-row\n  :data="tableData">\n  <vue-xtable-column type="index" width="60" fixed="left"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" width="300"></vue-xtable-column>\n  <vue-xtable-column field="role" title="Role" width="300"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex" width="300"></vue-xtable-column>\n  <vue-xtable-column field="date" title="Date" width="300"></vue-xtable-column>\n  <vue-xtable-column title="操作" fixed="right" width="200">\n    <template>\n      <vue-button type="text">按钮1</vue-button>\n      <vue-button type="text">按钮2</vue-button>\n    </template>\n  </vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      visible: true,\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\n  },\n\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      border\n      resizable\n      height="300"\n      highlight-hover-row\n      :data="tableData">\n      <vue-xtable-column type="index" width="60" fixed="left"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" width="300"></vue-xtable-column>\n      <vue-xtable-column field="role" title="Role" width="300"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex" width="300"></vue-xtable-column>\n      <vue-xtable-column field="date" title="Date" width="300"></vue-xtable-column>\n      <vue-xtable-column title="操作" fixed="right" width="200">\n        <template>\n          <vue-button type="text">按钮1</vue-button>\n          <vue-button type="text">按钮2</vue-button>\n        </template>\n      </vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{visible:!0,tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,50)}}},{id:"XtableDemo.base.FixedFull.sample2",label:"XtableDemo.base.FixedFull.sample2.label",description:"XtableDemo.base.FixedFull.sample2.description",code:'<vue-xtable\n  border\n  height="300"\n  highlight-hover-row\n  show-overflow\n  v-if="visible"\n  :data="tableData">\n  <vue-xtable-column type="index" width="60" fixed="left"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" width="300"></vue-xtable-column>\n  <vue-xtable-column field="role" title="Role" width="300"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex" width="300"></vue-xtable-column>\n  <vue-xtable-column field="date" title="Date" width="300"></vue-xtable-column>\n  <vue-xtable-column title="操作" fixed="right" width="200">\n    <template>\n      <vue-button type="primary">按钮1</vue-button>\n      <vue-button>按钮2</vue-button>\n    </template>\n  </vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      visible: true,\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\n  },\n\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      border\n      height="300"\n      highlight-hover-row\n      show-overflow\n      v-if="visible"\n      :data="tableData">\n      <vue-xtable-column type="index" width="60" fixed="left"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" width="300"></vue-xtable-column>\n      <vue-xtable-column field="role" title="Role" width="300"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex" width="300"></vue-xtable-column>\n      <vue-xtable-column field="date" title="Date" width="300"></vue-xtable-column>\n      <vue-xtable-column title="操作" fixed="right" width="200">\n        <template>\n          <vue-button type="primary">按钮1</vue-button>\n          <vue-button>按钮2</vue-button>\n        </template>\n      </vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{visible:!0,tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,50)}}}],styles:""}},"./demo/XtableDemo/base/Format.vue":
/*!*****************************************!*\
  !*** ./demo/XtableDemo/base/Format.vue ***!
  \*****************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/base/Format",name:"XtableDemo.base.Format",head:{label:"XtableDemo.base.Format.label",description:"XtableDemo.base.Format.description"},samples:[{id:"XtableDemo.base.Format.sample1",label:"XtableDemo.base.Format.sample1.label",description:"XtableDemo.base.Format.sample1.description",code:'<vue-xtable\n  border\n  :data="tableData">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" sortable></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex" :formatter="formatterSex"></vue-xtable-column>\n  <vue-xtable-column field="time" title="Time" :formatter="formatTime"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n      sexList: [\n        {\n          label: \'女\',\n          value: \'0\'\n        },\n        {\n          label: \'男\',\n          value: \'1\'\n        }\n      ],\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\n  },\n  methods: {\n    formatterSex ({ cellValue }) {\n      let item = VueUtil.find(this.sexList, item => item.value === cellValue)\n      return item ? item.label : \'\'\n    },\n    formatTime ({ cellValue, row, column }) {\n      return VueUtil.formatDate(cellValue, \'yyyy-MM-dd HH:ss:mm\')\n    }\n  }\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      border\n      :data="tableData">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" sortable></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex" :formatter="formatterSex"></vue-xtable-column>\n      <vue-xtable-column field="time" title="Time" :formatter="formatTime"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[],sexList:[{label:"女",value:"0"},{label:"男",value:"1"}]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,6)},methods:{formatterSex:function(e){var n=e.cellValue,t=VueUtil.find(this.sexList,function(e){return e.value===n});return t?t.label:""},formatTime:function(e){var n=e.cellValue;e.row,e.column;return VueUtil.formatDate(n,"yyyy-MM-dd HH:ss:mm")}}}},{id:"XtableDemo.base.Format.sample2",label:"XtableDemo.base.Format.sample2.label",description:"XtableDemo.base.Format.sample2.description",code:'<vue-xtable\n  border\n  :data="tableData">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="date" title="转日期" formatter="formatDate"></vue-xtable-column>\n  <vue-xtable-column field="time" title="转日期格式" :formatter="[\'formatDate\', \'yyyy-MM-dd\']"></vue-xtable-column>\n  <vue-xtable-column field="num" title="转整数" formatter="toInteger"></vue-xtable-column>\n  <vue-xtable-column field="num" title="截取三位小数" :formatter="[\'formatNumber\', 3]"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="格式化性别" :formatter="[\'formatSelect\', sexList]"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n      sexList: [\n        {\n          label: \'女\',\n          value: \'0\'\n        },\n        {\n          label: \'男\',\n          value: \'1\'\n        }\n      ],\n    }\n  },\n  created () {\n    VueUtil.formatSelect = function formatSelect (cellValue, list) {\n      let item = VueUtil.find(list, item => item.value === cellValue)\n      return item ? item.label : \'\'\n    }\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\n  },\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      border\n      :data="tableData">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="date" title="转日期" formatter="formatDate"></vue-xtable-column>\n      <vue-xtable-column field="time" title="转日期格式" :formatter="[\'formatDate\', \'yyyy-MM-dd\']"></vue-xtable-column>\n      <vue-xtable-column field="num" title="转整数" formatter="toInteger"></vue-xtable-column>\n      <vue-xtable-column field="num" title="截取三位小数" :formatter="[\'formatNumber\', 3]"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="格式化性别" :formatter="[\'formatSelect\', sexList]"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[],sexList:[{label:"女",value:"0"},{label:"男",value:"1"}]}},created:function(){VueUtil.formatSelect=function(e,n){var t=VueUtil.find(n,function(n){return n.value===e});return t?t.label:""},this.tableData=window.MOCK_DATA_LIST.slice(0,6)}}}],styles:""}},"./demo/XtableDemo/base/Group.vue":
/*!****************************************!*\
  !*** ./demo/XtableDemo/base/Group.vue ***!
  \****************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/base/Group",name:"XtableDemo.base.Group",head:{label:"XtableDemo.base.Group.label",description:"XtableDemo.base.Group.description"},samples:[{id:"XtableDemo.base.Group.sample1",label:"XtableDemo.base.Group.sample1.label",description:"XtableDemo.base.Group.sample1.description",code:'<vue-xtable\n  border\n  height="400"\n  :data="tableData">\n  <vue-xtable-column title="基本信息">\n    <vue-xtable-column type="index" width="60"></vue-xtable-column>\n    <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n  </vue-xtable-column>\n  <vue-xtable-column title="更多信息">\n    <vue-xtable-column field="role" title="Role"></vue-xtable-column>\n    <vue-xtable-column title="详细信息">\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n    </vue-xtable-column>\n  </vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\n  },\n\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      border\n      height="400"\n      :data="tableData">\n      <vue-xtable-column title="基本信息">\n        <vue-xtable-column type="index" width="60"></vue-xtable-column>\n        <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n      </vue-xtable-column>\n      <vue-xtable-column title="更多信息">\n        <vue-xtable-column field="role" title="Role"></vue-xtable-column>\n        <vue-xtable-column title="详细信息">\n          <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n          <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n        </vue-xtable-column>\n      </vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,50)}}},{id:"XtableDemo.base.Group.sample2",label:"XtableDemo.base.Group.sample2.label",description:"XtableDemo.base.Group.sample2.description",code:'<vue-xtable\n  border\n  height="400"\n  :data="tableData">\n  <vue-xtable-column title="基本信息">\n    <vue-xtable-column type="index" width="60" fixed="left"></vue-xtable-column>\n    <vue-xtable-column field="name" title="Name" fixed="left" width="100"></vue-xtable-column>\n  </vue-xtable-column>\n  <vue-xtable-column title="更多信息">\n    <vue-xtable-column field="role" title="Role" width="300"></vue-xtable-column>\n    <vue-xtable-column field="sex" title="Sex" width="300"></vue-xtable-column>\n    <vue-xtable-column title="详细信息">\n      <vue-xtable-column field="sex" title="Sex" width="300"></vue-xtable-column>\n      <vue-xtable-column field="date" title="Date" width="300"></vue-xtable-column>\n    </vue-xtable-column>\n  </vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" width="300" fixed="right" show-overflow></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\n  },\n\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      border\n      height="400"\n      :data="tableData">\n      <vue-xtable-column title="基本信息">\n        <vue-xtable-column type="index" width="60" fixed="left"></vue-xtable-column>\n        <vue-xtable-column field="name" title="Name" fixed="left" width="100"></vue-xtable-column>\n      </vue-xtable-column>\n      <vue-xtable-column title="更多信息">\n        <vue-xtable-column field="role" title="Role" width="300"></vue-xtable-column>\n        <vue-xtable-column field="sex" title="Sex" width="300"></vue-xtable-column>\n        <vue-xtable-column title="详细信息">\n          <vue-xtable-column field="sex" title="Sex" width="300"></vue-xtable-column>\n          <vue-xtable-column field="date" title="Date" width="300"></vue-xtable-column>\n        </vue-xtable-column>\n      </vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" width="300" fixed="right" show-overflow></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,50)}}}],styles:""}},"./demo/XtableDemo/base/Header.vue":
/*!*****************************************!*\
  !*** ./demo/XtableDemo/base/Header.vue ***!
  \*****************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/base/Header",name:"XtableDemo.base.Header",head:{label:"XtableDemo.base.Header.label",description:"XtableDemo.base.Header.description"},samples:[{id:"XtableDemo.base.Header.sample1",label:"XtableDemo.base.Header.sample1.label",description:"XtableDemo.base.Header.sample1.description",code:'<vue-xtable\n  :show-header="false"\n  :data="tableData">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\n  },\n\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      :show-header="false"\n      :data="tableData">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,6)}}},{id:"XtableDemo.base.Header.sample2",label:"XtableDemo.base.Header.sample2.label",description:"XtableDemo.base.Header.sample2.description",code:'<vue-xtable\n  height="400"\n  :show-header="false"\n  :data="tableData2">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData2 = window.MOCK_DATA_LIST.slice(0, 50)\n  },\n\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      height="400"\n      :show-header="false"\n      :data="tableData2">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData2=window.MOCK_DATA_LIST.slice(0,50)}}}],styles:""}},"./demo/XtableDemo/base/HeaderHighlight.vue":
/*!**************************************************!*\
  !*** ./demo/XtableDemo/base/HeaderHighlight.vue ***!
  \**************************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/base/HeaderHighlight",name:"XtableDemo.base.HeaderHighlight",head:{label:"XtableDemo.base.HeaderHighlight.label",description:"XtableDemo.base.HeaderHighlight.description"},samples:[{id:"XtableDemo.base.HeaderHighlight.sample1",label:"XtableDemo.base.HeaderHighlight.sample1.label",description:"XtableDemo.base.HeaderHighlight.sample1.description",code:'<vue-xtable\n  border\n  highlight-hover-column\n  highlight-current-column\n  :data="tableData">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 5)\n  },\n\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      border\n      highlight-hover-column\n      highlight-current-column\n      :data="tableData">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,5)}}},{id:"XtableDemo.base.HeaderHighlight.sample2",label:"XtableDemo.base.HeaderHighlight.sample2.label",description:"XtableDemo.base.HeaderHighlight.sample2.description",code:'<vue-xtable\n  border\n  highlight-hover-row\n  highlight-current-row\n  highlight-hover-column\n  highlight-current-column\n  :data="tableData">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 5)\n  },\n\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      border\n      highlight-hover-row\n      highlight-current-row\n      highlight-hover-column\n      highlight-current-column\n      :data="tableData">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,5)}}}],styles:""}},"./demo/XtableDemo/base/Height.vue":
/*!*****************************************!*\
  !*** ./demo/XtableDemo/base/Height.vue ***!
  \*****************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/base/Height",name:"XtableDemo.base.Height",head:{label:"XtableDemo.base.Height.label",description:"XtableDemo.base.Height.description"},samples:[{id:"XtableDemo.base.Height.sample1",label:"XtableDemo.base.Height.sample1.label",description:"XtableDemo.base.Height.sample1.description",code:'<vue-xtable\n  border\n  height="400"\n  :data="tableData">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\n  },\n\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      border\n      height="400"\n      :data="tableData">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,50)}}}],styles:""}},"./demo/XtableDemo/base/Index.vue":
/*!****************************************!*\
  !*** ./demo/XtableDemo/base/Index.vue ***!
  \****************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/base/Index",name:"XtableDemo.base.Index",head:{label:"XtableDemo.base.Index.label",description:"XtableDemo.base.Index.description"},samples:[{id:"XtableDemo.base.Index.sample1",label:"XtableDemo.base.Index.sample1.label",description:"XtableDemo.base.Index.sample1.description",code:'<vue-xtable\n  border\n  height="300"\n  :data="tableData">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" sortable></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\n  },\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      border\n      height="300"\n      :data="tableData">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" sortable></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,50)}}},{id:"XtableDemo.base.Index.sample2",label:"XtableDemo.base.Index.sample2.label",description:"XtableDemo.base.Index.sample2.description",code:'<vue-xtable\n  border\n  highlight-hover-row\n  height="300"\n  :start-index="100"\n  :data="tableData">\n  <vue-xtable-column type="index" title="序号" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" sortable></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\n  },\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      border\n      highlight-hover-row\n      height="300"\n      :start-index="100"\n      :data="tableData">\n      <vue-xtable-column type="index" title="序号" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" sortable></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,50)}}},{id:"XtableDemo.base.Index.sample3",label:"XtableDemo.base.Index.sample3.label",description:"XtableDemo.base.Index.sample3.description",code:'<vue-xtable\n  border\n  highlight-hover-row\n  height="300"\n  :data="tableData">\n  <vue-xtable-column type="index" title="序号" width="60" :index-method="indexMethod"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" sortable></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\n  },\n  methods: {\n    indexMethod ({ rowIndex }) {\n      return rowIndex * 2\n    }\n  }\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      border\n      highlight-hover-row\n      height="300"\n      :data="tableData">\n      <vue-xtable-column type="index" title="序号" width="60" :index-method="indexMethod"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" sortable></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,50)},methods:{indexMethod:function(e){return 2*e.rowIndex}}}}],styles:""}},"./demo/XtableDemo/base/Loading.vue":
/*!******************************************!*\
  !*** ./demo/XtableDemo/base/Loading.vue ***!
  \******************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/base/Loading",name:"XtableDemo.base.Loading",head:{label:"XtableDemo.base.Loading.label",description:"XtableDemo.base.Loading.description"},samples:[{id:"XtableDemo.base.Loading.sample1",label:"XtableDemo.base.Loading.sample1.label",description:"XtableDemo.base.Loading.sample1.description",code:'<vue-xtable\n  border\n  highlight-hover-row\n  height="300"\n  :data="tableData">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" sortable></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.loading = true\n    setTimeout(() => {\n      this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\n      this.loading = false\n    }, 3000)\n  },\n\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      border\n      highlight-hover-row\n      height="300"\n      :data="tableData">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" sortable></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){var e=this;this.loading=!0,setTimeout(function(){e.tableData=window.MOCK_DATA_LIST.slice(0,50),e.loading=!1},3e3)}}},{id:"XtableDemo.base.Loading.sample2",label:"XtableDemo.base.Loading.sample2.label",description:"XtableDemo.base.Loading.sample2.description",code:'<vue-xtable\n  border\n  highlight-hover-row\n  height="300"\n  :loading="loading"\n  :data="tableData">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" sortable></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.loading = true\n    setTimeout(() => {\n      this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\n      this.loading = false\n    }, 3000)\n  },\n\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      border\n      highlight-hover-row\n      height="300"\n      :loading="loading"\n      :data="tableData">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" sortable></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){var e=this;this.loading=!0,setTimeout(function(){e.tableData=window.MOCK_DATA_LIST.slice(0,50),e.loading=!1},3e3)}}}],styles:""}},"./demo/XtableDemo/base/MaxHeight.vue":
/*!********************************************!*\
  !*** ./demo/XtableDemo/base/MaxHeight.vue ***!
  \********************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/base/MaxHeight",name:"XtableDemo.base.MaxHeight",head:{label:"XtableDemo.base.MaxHeight.label",description:"XtableDemo.base.MaxHeight.description"},samples:[{id:"XtableDemo.base.MaxHeight.sample1",label:"XtableDemo.base.MaxHeight.sample1.label",description:"XtableDemo.base.MaxHeight.sample1.description",code:'<vue-xtable\n  border\n  highlight-hover-row\n  max-height="200"\n  :data="tableData">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" sortable></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex" align="center"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\n  },\n\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      border\n      highlight-hover-row\n      max-height="200"\n      :data="tableData">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" sortable></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex" align="center"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,50)}}},{id:"XtableDemo.base.MaxHeight.sample2",label:"XtableDemo.base.MaxHeight.sample2.label",description:"XtableDemo.base.MaxHeight.sample2.description",code:'<vue-xtable\n  border\n  highlight-hover-row\n  max-height="200"\n  :data="tableData2">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" sortable></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData2: [],\n\n    }\n  },\n  created () {\n    this.tableData2 = window.MOCK_DATA_LIST.slice(0, 2)\n  },\n\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      border\n      highlight-hover-row\n      max-height="200"\n      :data="tableData2">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" sortable></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData2:[]}},created:function(){this.tableData2=window.MOCK_DATA_LIST.slice(0,2)}}},{id:"XtableDemo.base.MaxHeight.sample3",label:"XtableDemo.base.MaxHeight.sample3.label",description:"XtableDemo.base.MaxHeight.sample3.description",code:'<div style="height: 500px;">\n  <vue-xtable\n    border\n    highlight-hover-row\n    max-height="100%"\n    :data="tableData">\n    <vue-xtable-column type="index" width="60"></vue-xtable-column>\n    <vue-xtable-column field="name" title="Name" sortable></vue-xtable-column>\n    <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n    <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n    <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n  </vue-xtable>\n</div>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\n  },\n\n})\n<\/script>',template:'<div class="source">    <div style="height: 500px;">\n      <vue-xtable\n        border\n        highlight-hover-row\n        max-height="100%"\n        :data="tableData">\n        <vue-xtable-column type="index" width="60"></vue-xtable-column>\n        <vue-xtable-column field="name" title="Name" sortable></vue-xtable-column>\n        <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n        <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n        <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n      </vue-xtable>\n    </div></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,50)}}}],styles:""}},"./demo/XtableDemo/base/Overflow.vue":
/*!*******************************************!*\
  !*** ./demo/XtableDemo/base/Overflow.vue ***!
  \*******************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/base/Overflow",name:"XtableDemo.base.Overflow",head:{label:"XtableDemo.base.Overflow.label",description:"XtableDemo.base.Overflow.description"},samples:[{id:"XtableDemo.base.Overflow.sample1",label:"XtableDemo.base.Overflow.sample1.label",description:"XtableDemo.base.Overflow.sample1.description",code:'<vue-xtable\n  highlight-hover-row\n  :data="tableData">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="address" title="超过隐藏时显示为省略号————————————" show-header-overflow show-overflow></vue-xtable-column>\n  <vue-xtable-column field="date" title="内容超过隐藏时显示为省略号并用原生 title 显示" show-overflow="title">\n    <template>\n      <span>111111111111 111111111111111111 22222222222222222222222222222222222</span>\n    </template>\n  </vue-xtable-column>\n  <vue-xtable-column field="age" title="表头超过隐藏时显示为省略号并用原生 title 显示" show-header-overflow="title">\n    <template v-slot:header>\n      <span>33333333333333333333333333 5555555555555555555555555555555555555555555555</span>\n    </template>\n  </vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 6)\n    this.tableData = list\n  },\n\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      highlight-hover-row\n      :data="tableData">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="address" title="超过隐藏时显示为省略号————————————" show-header-overflow show-overflow></vue-xtable-column>\n      <vue-xtable-column field="date" title="内容超过隐藏时显示为省略号并用原生 title 显示" show-overflow="title">\n        <template>\n          <span>111111111111 111111111111111111 22222222222222222222222222222222222</span>\n        </template>\n      </vue-xtable-column>\n      <vue-xtable-column field="age" title="表头超过隐藏时显示为省略号并用原生 title 显示" show-header-overflow="title">\n        <template v-slot:header>\n          <span>33333333333333333333333333 5555555555555555555555555555555555555555555555</span>\n        </template>\n      </vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){var e=window.MOCK_DATA_LIST.slice(0,6);this.tableData=e}}},{id:"XtableDemo.base.Overflow.sample2",label:"XtableDemo.base.Overflow.sample2.label",description:"XtableDemo.base.Overflow.sample2.description",code:'<vue-xtable\n  highlight-hover-row\n  :data="tableData"\n  :tooltip-config="{theme: \'light\'}">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="address" title="超过隐藏时显示为省略号————————————" show-header-overflow show-overflow></vue-xtable-column>\n  <vue-xtable-column field="date" title="内容超过隐藏时显示为省略号并用原生 title 显示" show-overflow="title">\n    <template>\n      <span>111111111111 111111111111111111 22222222222222222222222222222222222</span>\n    </template>\n  </vue-xtable-column>\n  <vue-xtable-column field="age" title="表头超过隐藏时显示为省略号并用原生 title 显示" show-header-overflow="title">\n    <template v-slot:header>\n      <span>33333333333333333333333333 5555555555555555555555555555555555555555555555</span>\n    </template>\n  </vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 6)\n    this.tableData = list\n  },\n\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      highlight-hover-row\n      :data="tableData"\n      :tooltip-config="{theme: \'light\'}">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="address" title="超过隐藏时显示为省略号————————————" show-header-overflow show-overflow></vue-xtable-column>\n      <vue-xtable-column field="date" title="内容超过隐藏时显示为省略号并用原生 title 显示" show-overflow="title">\n        <template>\n          <span>111111111111 111111111111111111 22222222222222222222222222222222222</span>\n        </template>\n      </vue-xtable-column>\n      <vue-xtable-column field="age" title="表头超过隐藏时显示为省略号并用原生 title 显示" show-header-overflow="title">\n        <template v-slot:header>\n          <span>33333333333333333333333333 5555555555555555555555555555555555555555555555</span>\n        </template>\n      </vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){var e=window.MOCK_DATA_LIST.slice(0,6);this.tableData=e}}}],styles:""}},"./demo/XtableDemo/base/Radio.vue":
/*!****************************************!*\
  !*** ./demo/XtableDemo/base/Radio.vue ***!
  \****************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/base/Radio",name:"XtableDemo.base.Radio",head:{label:"XtableDemo.base.Radio.label",description:"XtableDemo.base.Radio.description"},samples:[{id:"XtableDemo.base.Radio.sample1",label:"XtableDemo.base.Radio.sample1.label",description:"XtableDemo.base.Radio.sample1.description",code:'<vue-toolbar>\n  <template v-slot:buttons>\n    <vue-button @click="$refs.xTable1.setRadioRow(tableData[1])">设置第二行选中</vue-button>\n    <vue-button @click="clearRadioRowEevnt">取消选中</vue-button>\n    <vue-button @click="getRadioEvent1">获取选中</vue-button>\n  </template>\n</vue-toolbar>\n\n<vue-xtable\n  border\n  ref="xTable1"\n  class="radio-table"\n  height="300"\n  :data="tableData"\n  :row-class-name="rowClassName"\n  @cell-click="cellClickEvent"\n  @radio-change="radioChangeEvent">\n  <vue-xtable-column type="radio" width="60">\n    <template v-slot:header>\n      <vue-button type="text" @click="clearRadioRowEevnt" :disabled="!selectRow">取消</vue-button>\n    </template>\n  </vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n      selectRow: null,\n\n    }\n  },\n\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 6)\n    this.tableData = list\n  },\n  methods: {\n    cellClickEvent () {\n      console.log(\'单元格点击事件\')\n    },\n    radioChangeEvent ({ row }) {\n      this.selectRow = row\n      console.log(\'单选事件\')\n    },\n    clearRadioRowEevnt () {\n      this.selectRow = null\n      this.$refs.xTable1.clearRadioRow()\n    },\n    rowClassName ({ row }) {\n      return {\n        \'row-checked\': this.selectRow === row\n      }\n    },\n    getRadioEvent1 () {\n      this.$alert({ message: JSON.stringify(this.$refs.xTable1.getRadioRow()) })\n    }\n  }\n})\n<\/script>\n\n<style>\n.radio-table.vue-xtable .vxe-body--row.row-checked {\n  background-color: #fbf8ec;\n}\n</style>',template:'<div class="source">    <vue-toolbar>\n      <template v-slot:buttons>\n        <vue-button @click="$refs.xTable1.setRadioRow(tableData[1])">设置第二行选中</vue-button>\n        <vue-button @click="clearRadioRowEevnt">取消选中</vue-button>\n        <vue-button @click="getRadioEvent1">获取选中</vue-button>\n      </template>\n    </vue-toolbar>\n\n    <vue-xtable\n      border\n      ref="xTable1"\n      class="radio-table"\n      height="300"\n      :data="tableData"\n      :row-class-name="rowClassName"\n      @cell-click="cellClickEvent"\n      @radio-change="radioChangeEvent">\n      <vue-xtable-column type="radio" width="60">\n        <template v-slot:header>\n          <vue-button type="text" @click="clearRadioRowEevnt" :disabled="!selectRow">取消</vue-button>\n        </template>\n      </vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[],selectRow:null}},created:function(){var e=window.MOCK_DATA_LIST.slice(0,6);this.tableData=e},methods:{cellClickEvent:function(){console.log("单元格点击事件")},radioChangeEvent:function(e){var n=e.row;this.selectRow=n,console.log("单选事件")},clearRadioRowEevnt:function(){this.selectRow=null,this.$refs.xTable1.clearRadioRow()},rowClassName:function(e){var n=e.row;return{"row-checked":this.selectRow===n}},getRadioEvent1:function(){this.$alert({message:JSON.stringify(this.$refs.xTable1.getRadioRow())})}}}},{id:"XtableDemo.base.Radio.sample2",label:"XtableDemo.base.Radio.sample2.label",description:"XtableDemo.base.Radio.sample2.description",code:'<vue-toolbar>\n  <template v-slot:buttons>\n    <vue-button @click="$refs.xTable2.setRadioRow(tableData[0], true)">设置第一行选中</vue-button>\n    <vue-button @click="$refs.xTable2.clearRadioRow()">清除所有行选中</vue-button>\n  </template>\n</vue-toolbar>\n\n<vue-xtable\n  border\n  ref="xTable2"\n  height="300"\n  :radio-config="{labelField: \'name\', checkMethod}"\n  :data="tableData">\n  <vue-xtable-column type="radio" title="请选择" width="100"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n      selectRow: null,\n\n    }\n  },\n\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 6)\n    this.tableData = list\n  },\n  methods: {\n    checkMethod ({ row }) {\n      return row.age > 26\n    },\n  }\n})\n<\/script>\n\n<style>\n.radio-table.vue-xtable .vxe-body--row.row-checked {\n  background-color: #fbf8ec;\n}\n</style>',template:'<div class="source">    <vue-toolbar>\n      <template v-slot:buttons>\n        <vue-button @click="$refs.xTable2.setRadioRow(tableData[0], true)">设置第一行选中</vue-button>\n        <vue-button @click="$refs.xTable2.clearRadioRow()">清除所有行选中</vue-button>\n      </template>\n    </vue-toolbar>\n\n    <vue-xtable\n      border\n      ref="xTable2"\n      height="300"\n      :radio-config="{labelField: \'name\', checkMethod}"\n      :data="tableData">\n      <vue-xtable-column type="radio" title="请选择" width="100"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[],selectRow:null}},created:function(){var e=window.MOCK_DATA_LIST.slice(0,6);this.tableData=e},methods:{checkMethod:function(e){return e.row.age>26}}}},{id:"XtableDemo.base.Radio.sample3",label:"XtableDemo.base.Radio.sample3.label",description:"XtableDemo.base.Radio.sample3.description",code:'<vue-xtable\n  border\n  height="300"\n  row-id="id"\n  :data="tableData"\n  :radio-config="{checkRowKey: \'2\'}">\n  <vue-xtable-column type="radio" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n      selectRow: null,\n\n    }\n  },\n\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 6)\n    this.tableData = list\n  },\n  methods: {\n  }\n})\n<\/script>\n\n<style>\n.radio-table.vue-xtable .vxe-body--row.row-checked {\n  background-color: #fbf8ec;\n}\n</style>',template:'<div class="source">    <vue-xtable\n      border\n      height="300"\n      row-id="id"\n      :data="tableData"\n      :radio-config="{checkRowKey: \'2\'}">\n      <vue-xtable-column type="radio" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[],selectRow:null}},created:function(){var e=window.MOCK_DATA_LIST.slice(0,6);this.tableData=e},methods:{}}},{id:"XtableDemo.base.Radio.sample4",label:"XtableDemo.base.Radio.sample4.label",description:"XtableDemo.base.Radio.sample4.description",code:'<vue-xtable\n  border\n  highlight-current-row\n  height="300"\n  :data="tableData"\n  @current-change="currentChangeEvent">\n  <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n      selectRow: null,\n\n    }\n  },\n\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 6)\n    this.tableData = list\n  },\n  methods: {\n    currentChangeEvent ({ row }) {\n      console.log(\'行选中事件\')\n    },\n  }\n})\n<\/script>\n\n<style>\n.radio-table.vue-xtable .vxe-body--row.row-checked {\n  background-color: #fbf8ec;\n}\n</style>',template:'<div class="source">    <vue-xtable\n      border\n      highlight-current-row\n      height="300"\n      :data="tableData"\n      @current-change="currentChangeEvent">\n      <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[],selectRow:null}},created:function(){var e=window.MOCK_DATA_LIST.slice(0,6);this.tableData=e},methods:{currentChangeEvent:function(e){e.row;console.log("行选中事件")}}}},{id:"XtableDemo.base.Radio.sample5",label:"XtableDemo.base.Radio.sample5.label",description:"XtableDemo.base.Radio.sample5.description",code:'<vue-xtable\n  border\n  highlight-current-row\n  height="300"\n  :radio-config="{labelField: \'name\'}"\n  :data="tableData">\n  <vue-xtable-column type="radio" title="还可以这样" width="120"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n      selectRow: null,\n\n    }\n  },\n\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 6)\n    this.tableData = list\n  },\n  methods: {\n  }\n})\n<\/script>\n\n<style>\n.radio-table.vue-xtable .vxe-body--row.row-checked {\n  background-color: #fbf8ec;\n}\n</style>',template:'<div class="source">    <vue-xtable\n      border\n      highlight-current-row\n      height="300"\n      :radio-config="{labelField: \'name\'}"\n      :data="tableData">\n      <vue-xtable-column type="radio" title="还可以这样" width="120"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[],selectRow:null}},created:function(){var e=window.MOCK_DATA_LIST.slice(0,6);this.tableData=e},methods:{}}},{id:"XtableDemo.base.Radio.sample6",label:"XtableDemo.base.Radio.sample6.label",description:"XtableDemo.base.Radio.sample6.description",code:'<vue-xtable\n  border\n  highlight-hover-row\n  highlight-current-row\n  height="300"\n  :radio-config="{labelField: \'name\', trigger: \'row\'}"\n  :data="tableData">\n  <vue-xtable-column type="radio" title="还可以这样" width="120"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n      selectRow: null,\n\n    }\n  },\n\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 6)\n    this.tableData = list\n  },\n  methods: {\n  }\n})\n<\/script>\n\n<style>\n.radio-table.vue-xtable .vxe-body--row.row-checked {\n  background-color: #fbf8ec;\n}\n</style>',template:'<div class="source">    <vue-xtable\n      border\n      highlight-hover-row\n      highlight-current-row\n      height="300"\n      :radio-config="{labelField: \'name\', trigger: \'row\'}"\n      :data="tableData">\n      <vue-xtable-column type="radio" title="还可以这样" width="120"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[],selectRow:null}},created:function(){var e=window.MOCK_DATA_LIST.slice(0,6);this.tableData=e},methods:{}}}],styles:".radio-table.vue-xtable .vxe-body--row.row-checked {\n  background-color: #fbf8ec;\n}"}},"./demo/XtableDemo/base/Resizable.vue":
/*!********************************************!*\
  !*** ./demo/XtableDemo/base/Resizable.vue ***!
  \********************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/base/Resizable",name:"XtableDemo.base.Resizable",head:{label:"XtableDemo.base.Resizable.label",description:"XtableDemo.base.Resizable.description"},samples:[{id:"XtableDemo.base.Resizable.sample1",label:"XtableDemo.base.Resizable.sample1.label",description:"XtableDemo.base.Resizable.sample1.description",code:'<vue-xtable\n  resizable\n  :data="tableData">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n  <vue-xtable-column field="time" title="Time"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 3)\n  },\n\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      resizable\n      :data="tableData">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n      <vue-xtable-column field="time" title="Time"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,3)}}},{id:"XtableDemo.base.Resizable.sample2",label:"XtableDemo.base.Resizable.sample2.label",description:"XtableDemo.base.Resizable.sample2.description",code:'<vue-xtable\n  border\n  resizable\n  highlight-hover-row\n  :data="tableData">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" width="300"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex" width="300"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age" width="300"></vue-xtable-column>\n  <vue-xtable-column field="time" title="Time" width="300"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" width="300" show-overflow></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 3)\n  },\n\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      border\n      resizable\n      highlight-hover-row\n      :data="tableData">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" width="300"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex" width="300"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age" width="300"></vue-xtable-column>\n      <vue-xtable-column field="time" title="Time" width="300"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" width="300" show-overflow></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,3)}}},{id:"XtableDemo.base.Resizable.sample3",label:"XtableDemo.base.Resizable.sample3.label",description:"XtableDemo.base.Resizable.sample3.description",code:'<vue-xtable\n  border\n  resizable\n  :data="tableData">\n  <vue-xtable-column type="index" width="60" fixed="left"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" width="100" fixed="left"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex" width="100" fixed="left"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age" width="100" fixed="left"></vue-xtable-column>\n  <vue-xtable-column field="atrr1" title="atrr1" width="200"></vue-xtable-column>\n  <vue-xtable-column field="atrr2" title="atrr2" width="200"></vue-xtable-column>\n  <vue-xtable-column field="atrr3" title="atrr3" width="200"></vue-xtable-column>\n  <vue-xtable-column field="atrr4" title="atrr4" width="200"></vue-xtable-column>\n  <vue-xtable-column field="time" title="Time" width="200"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" width="200" show-overflow></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 3)\n  },\n\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      border\n      resizable\n      :data="tableData">\n      <vue-xtable-column type="index" width="60" fixed="left"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" width="100" fixed="left"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex" width="100" fixed="left"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age" width="100" fixed="left"></vue-xtable-column>\n      <vue-xtable-column field="atrr1" title="atrr1" width="200"></vue-xtable-column>\n      <vue-xtable-column field="atrr2" title="atrr2" width="200"></vue-xtable-column>\n      <vue-xtable-column field="atrr3" title="atrr3" width="200"></vue-xtable-column>\n      <vue-xtable-column field="atrr4" title="atrr4" width="200"></vue-xtable-column>\n      <vue-xtable-column field="time" title="Time" width="200"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" width="200" show-overflow></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,3)}}},{id:"XtableDemo.base.Resizable.sample4",label:"XtableDemo.base.Resizable.sample4.label",description:"XtableDemo.base.Resizable.sample4.description",code:'<vue-xtable\n  border\n  resizable\n  :data="tableData">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" width="200"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex" width="200"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age" width="200"></vue-xtable-column>\n  <vue-xtable-column field="atrr1" title="atrr1" width="200"></vue-xtable-column>\n  <vue-xtable-column field="atrr2" title="atrr2" width="200"></vue-xtable-column>\n  <vue-xtable-column field="atrr3" title="atrr3" width="200"></vue-xtable-column>\n  <vue-xtable-column field="atrr4" title="atrr4" width="200"></vue-xtable-column>\n  <vue-xtable-column field="role" title="Role" width="100" fixed="right"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" width="100" fixed="right"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex" width="100" fixed="right"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 3)\n  },\n\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      border\n      resizable\n      :data="tableData">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" width="200"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex" width="200"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age" width="200"></vue-xtable-column>\n      <vue-xtable-column field="atrr1" title="atrr1" width="200"></vue-xtable-column>\n      <vue-xtable-column field="atrr2" title="atrr2" width="200"></vue-xtable-column>\n      <vue-xtable-column field="atrr3" title="atrr3" width="200"></vue-xtable-column>\n      <vue-xtable-column field="atrr4" title="atrr4" width="200"></vue-xtable-column>\n      <vue-xtable-column field="role" title="Role" width="100" fixed="right"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" width="100" fixed="right"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex" width="100" fixed="right"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,3)}}},{id:"XtableDemo.base.Resizable.sample5",label:"XtableDemo.base.Resizable.sample5.label",description:"XtableDemo.base.Resizable.sample5.description",code:'<vue-xtable\n  border\n  resizable\n  show-overflow\n  :data="tableData">\n  <vue-xtable-column type="index" width="60" fixed="left"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" width="100" fixed="left"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex" width="100" fixed="left"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age" width="100" fixed="left"></vue-xtable-column>\n  <vue-xtable-column field="atrr1" title="atrr1" width="200"></vue-xtable-column>\n  <vue-xtable-column field="atrr2" title="atrr2 其他2" width="200"></vue-xtable-column>\n  <vue-xtable-column field="atrr3" title="atrr3" width="200"></vue-xtable-column>\n  <vue-xtable-column field="atrr4" title="atrr4 其他4" width="200"></vue-xtable-column>\n  <vue-xtable-column field="date" title="Date" width="100" fixed="right"></vue-xtable-column>\n  <vue-xtable-column field="time" title="Time" width="100" fixed="right"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" width="100" fixed="right"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 3)\n  },\n\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      border\n      resizable\n      show-overflow\n      :data="tableData">\n      <vue-xtable-column type="index" width="60" fixed="left"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" width="100" fixed="left"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex" width="100" fixed="left"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age" width="100" fixed="left"></vue-xtable-column>\n      <vue-xtable-column field="atrr1" title="atrr1" width="200"></vue-xtable-column>\n      <vue-xtable-column field="atrr2" title="atrr2 其他2" width="200"></vue-xtable-column>\n      <vue-xtable-column field="atrr3" title="atrr3" width="200"></vue-xtable-column>\n      <vue-xtable-column field="atrr4" title="atrr4 其他4" width="200"></vue-xtable-column>\n      <vue-xtable-column field="date" title="Date" width="100" fixed="right"></vue-xtable-column>\n      <vue-xtable-column field="time" title="Time" width="100" fixed="right"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" width="100" fixed="right"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,3)}}},{id:"XtableDemo.base.Resizable.sample6",label:"XtableDemo.base.Resizable.sample6.label",description:"XtableDemo.base.Resizable.sample6.description",code:'<vue-xtable\n  border\n  resizable\n  :data="tableData">\n  <vue-xtable-column title="基本信息">\n    <vue-xtable-column type="index" width="60"></vue-xtable-column>\n    <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n  </vue-xtable-column>\n  <vue-xtable-column title="更多信息">\n    <vue-xtable-column field="role" title="Role"></vue-xtable-column>\n    <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n    <vue-xtable-column title="详细信息">\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="date" title="Date" width="140" show-overflow></vue-xtable-column>\n    </vue-xtable-column>\n  </vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" width="200" show-overflow></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 3)\n  },\n\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      border\n      resizable\n      :data="tableData">\n      <vue-xtable-column title="基本信息">\n        <vue-xtable-column type="index" width="60"></vue-xtable-column>\n        <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n      </vue-xtable-column>\n      <vue-xtable-column title="更多信息">\n        <vue-xtable-column field="role" title="Role"></vue-xtable-column>\n        <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n        <vue-xtable-column title="详细信息">\n          <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n          <vue-xtable-column field="date" title="Date" width="140" show-overflow></vue-xtable-column>\n        </vue-xtable-column>\n      </vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" width="200" show-overflow></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,3)}}},{id:"XtableDemo.base.Resizable.sample7",label:"XtableDemo.base.Resizable.sample7.label",description:"XtableDemo.base.Resizable.sample7.description",code:'<vue-xtable\n  border\n  resizable\n  :data="tableData">\n  <vue-xtable-column title="基本信息">\n    <vue-xtable-column type="index" width="60" fixed="left"></vue-xtable-column>\n    <vue-xtable-column field="name" title="Name" fixed="left" width="100"></vue-xtable-column>\n  </vue-xtable-column>\n  <vue-xtable-column title="更多信息">\n    <vue-xtable-column field="role" title="Role" width="300"></vue-xtable-column>\n    <vue-xtable-column field="sex" title="Sex" width="300"></vue-xtable-column>\n    <vue-xtable-column title="详细信息">\n      <vue-xtable-column field="sex" title="Sex" width="300"></vue-xtable-column>\n      <vue-xtable-column field="date" title="Date" width="300"></vue-xtable-column>\n    </vue-xtable-column>\n  </vue-xtable-column>\n  <vue-xtable-column title="其他信息">\n    <vue-xtable-column field="age" title="Age" width="100" fixed="right" show-overflow></vue-xtable-column>\n    <vue-xtable-column field="address" title="Address" width="100" fixed="right" show-overflow></vue-xtable-column>\n  </vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 3)\n  },\n\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      border\n      resizable\n      :data="tableData">\n      <vue-xtable-column title="基本信息">\n        <vue-xtable-column type="index" width="60" fixed="left"></vue-xtable-column>\n        <vue-xtable-column field="name" title="Name" fixed="left" width="100"></vue-xtable-column>\n      </vue-xtable-column>\n      <vue-xtable-column title="更多信息">\n        <vue-xtable-column field="role" title="Role" width="300"></vue-xtable-column>\n        <vue-xtable-column field="sex" title="Sex" width="300"></vue-xtable-column>\n        <vue-xtable-column title="详细信息">\n          <vue-xtable-column field="sex" title="Sex" width="300"></vue-xtable-column>\n          <vue-xtable-column field="date" title="Date" width="300"></vue-xtable-column>\n        </vue-xtable-column>\n      </vue-xtable-column>\n      <vue-xtable-column title="其他信息">\n        <vue-xtable-column field="age" title="Age" width="100" fixed="right" show-overflow></vue-xtable-column>\n        <vue-xtable-column field="address" title="Address" width="100" fixed="right" show-overflow></vue-xtable-column>\n      </vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,3)}}}],styles:""}},"./demo/XtableDemo/base/Selection.vue":
/*!********************************************!*\
  !*** ./demo/XtableDemo/base/Selection.vue ***!
  \********************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/base/Selection",name:"XtableDemo.base.Selection",head:{label:"XtableDemo.base.Selection.label",description:"XtableDemo.base.Selection.description"},samples:[{id:"XtableDemo.base.Selection.sample1",label:"XtableDemo.base.Selection.sample1.label",description:"XtableDemo.base.Selection.sample1.description",code:'<vue-toolbar>\n  <template v-slot:buttons>\n    <vue-button @click="$refs.xTable1.toggleRowSelection(tableData[1])">切换第二行选中</vue-button>\n    <vue-button @click="$refs.xTable1.setSelection([tableData[2], tableData[3]], true)">设置第三、四行选中</vue-button>\n    <vue-button @click="$refs.xTable1.setAllSelection(true)">设置所有行选中</vue-button>\n    <vue-button @click="$refs.xTable1.clearSelection()">清除所有行选中</vue-button>\n    <vue-button @click="getSelectEvent1">获取选中</vue-button>\n  </template>\n</vue-toolbar>\n\n<vue-xtable\n  border\n  ref="xTable1"\n  :data="tableData"\n  @cell-click="cellClickEvent"\n  @select-all="selectAllEvent"\n  @select-change="selectChangeEvent">\n  <vue-xtable-column type="checkbox" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 5)\n  },\n\n  methods: {\n    cellClickEvent () {\n      console.log(\'单元格点击事件\')\n    },\n    selectAllEvent ({ checked }) {\n      console.log(checked ? \'所有勾选事件\' : \'所有取消事件\')\n    },\n    selectChangeEvent ({ checked, row }) {\n      console.log(checked ? \'勾选事件\' : \'取消事件\')\n    },\n    getSelectEvent1 () {\n      let selectRecords = this.$refs.xTable1.getSelectRecords()\n      this.$alert({ message: selectRecords.length })\n    }\n  }\n})\n<\/script>\n\n<style>\n.checkbox-table.vue-xtable .vxe-body--row.row-checked {\n  background-color: #fbf8ec;\n}\n</style>',template:'<div class="source">    <vue-toolbar>\n      <template v-slot:buttons>\n        <vue-button @click="$refs.xTable1.toggleRowSelection(tableData[1])">切换第二行选中</vue-button>\n        <vue-button @click="$refs.xTable1.setSelection([tableData[2], tableData[3]], true)">设置第三、四行选中</vue-button>\n        <vue-button @click="$refs.xTable1.setAllSelection(true)">设置所有行选中</vue-button>\n        <vue-button @click="$refs.xTable1.clearSelection()">清除所有行选中</vue-button>\n        <vue-button @click="getSelectEvent1">获取选中</vue-button>\n      </template>\n    </vue-toolbar>\n\n    <vue-xtable\n      border\n      ref="xTable1"\n      :data="tableData"\n      @cell-click="cellClickEvent"\n      @select-all="selectAllEvent"\n      @select-change="selectChangeEvent">\n      <vue-xtable-column type="checkbox" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,5)},methods:{cellClickEvent:function(){console.log("单元格点击事件")},selectAllEvent:function(e){var n=e.checked;console.log(n?"所有勾选事件":"所有取消事件")},selectChangeEvent:function(e){var n=e.checked;e.row;console.log(n?"勾选事件":"取消事件")},getSelectEvent1:function(){var e=this.$refs.xTable1.getSelectRecords();this.$alert({message:e.length})}}}},{id:"XtableDemo.base.Selection.sample2",label:"XtableDemo.base.Selection.sample2.label",description:"XtableDemo.base.Selection.sample2.description",code:'<vue-toolbar>\n  <template v-slot:buttons>\n    <vue-button @click="$refs.xTable2.toggleRowSelection(tableData[1])">切换第二行选中</vue-button>\n    <vue-button @click="$refs.xTable2.setSelection([tableData[2], tableData[3]], true)">设置第三、四行选中</vue-button>\n    <vue-button @click="$refs.xTable2.setAllSelection(true)">设置所有行选中</vue-button>\n    <vue-button @click="$refs.xTable2.clearSelection()">清除所有行选中</vue-button>\n  </template>\n</vue-toolbar>\n\n<vue-xtable\n  border\n  ref="xTable2"\n  :data="tableData"\n  :checkbox-config="{labelField: \'name\', checkMethod}">\n  <vue-xtable-column type="checkbox" title="All"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 5)\n  },\n\n  methods: {\n    checkMethod ({ row }) {\n      return row.age > 26\n    },\n  }\n})\n<\/script>\n\n<style>\n.checkbox-table.vue-xtable .vxe-body--row.row-checked {\n  background-color: #fbf8ec;\n}\n</style>',template:'<div class="source">    <vue-toolbar>\n      <template v-slot:buttons>\n        <vue-button @click="$refs.xTable2.toggleRowSelection(tableData[1])">切换第二行选中</vue-button>\n        <vue-button @click="$refs.xTable2.setSelection([tableData[2], tableData[3]], true)">设置第三、四行选中</vue-button>\n        <vue-button @click="$refs.xTable2.setAllSelection(true)">设置所有行选中</vue-button>\n        <vue-button @click="$refs.xTable2.clearSelection()">清除所有行选中</vue-button>\n      </template>\n    </vue-toolbar>\n\n    <vue-xtable\n      border\n      ref="xTable2"\n      :data="tableData"\n      :checkbox-config="{labelField: \'name\', checkMethod}">\n      <vue-xtable-column type="checkbox" title="All"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,5)},methods:{checkMethod:function(e){return e.row.age>26}}}},{id:"XtableDemo.base.Selection.sample3",label:"XtableDemo.base.Selection.sample3.label",description:"XtableDemo.base.Selection.sample3.description",code:'<vue-toolbar>\n  <template v-slot:buttons>\n    <vue-button @click="$refs.xTable3.toggleRowSelection(tableData[1])">切换第二行选中</vue-button>\n    <vue-button @click="$refs.xTable3.setSelection([tableData[2], tableData[3]], true)">设置第三、四行选中</vue-button>\n    <vue-button @click="$refs.xTable3.setAllSelection(true)">设置所有行选中</vue-button>\n    <vue-button @click="$refs.xTable3.clearSelection()">清除所有行选中</vue-button>\n  </template>\n</vue-toolbar>\n\n<vue-xtable\n  border\n  highlight-hover-row\n  class="checkbox-table"\n  ref="xTable3"\n  :row-class-name="rowClassName"\n  :data="tableData"\n  :checkbox-config="{checkField: \'checked\', trigger: \'row\'}">\n  <vue-xtable-column type="checkbox" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 5)\n  },\n\n  methods: {\n    rowClassName ({ row }) {\n      return {\n        \'row-checked\': row.checked\n      }\n    },\n  }\n})\n<\/script>\n\n<style>\n.checkbox-table.vue-xtable .vxe-body--row.row-checked {\n  background-color: #fbf8ec;\n}\n</style>',template:'<div class="source">    <vue-toolbar>\n      <template v-slot:buttons>\n        <vue-button @click="$refs.xTable3.toggleRowSelection(tableData[1])">切换第二行选中</vue-button>\n        <vue-button @click="$refs.xTable3.setSelection([tableData[2], tableData[3]], true)">设置第三、四行选中</vue-button>\n        <vue-button @click="$refs.xTable3.setAllSelection(true)">设置所有行选中</vue-button>\n        <vue-button @click="$refs.xTable3.clearSelection()">清除所有行选中</vue-button>\n      </template>\n    </vue-toolbar>\n\n    <vue-xtable\n      border\n      highlight-hover-row\n      class="checkbox-table"\n      ref="xTable3"\n      :row-class-name="rowClassName"\n      :data="tableData"\n      :checkbox-config="{checkField: \'checked\', trigger: \'row\'}">\n      <vue-xtable-column type="checkbox" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,5)},methods:{rowClassName:function(e){return{"row-checked":e.row.checked}}}}},{id:"XtableDemo.base.Selection.sample4",label:"XtableDemo.base.Selection.sample4.label",description:"XtableDemo.base.Selection.sample4.description",code:'<vue-xtable\n  border\n  highlight-hover-row\n  row-id="id"\n  :data="tableData"\n  :checkbox-config="{checkRowKeys: [\'2\', \'3\']}"\n  :radio-config="{labelField: \'name\'}">\n  <vue-xtable-column type="checkbox" width="60"></vue-xtable-column>\n  <vue-xtable-column type="radio" width="300" title="Name"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 5)\n  },\n\n  methods: {\n  }\n})\n<\/script>\n\n<style>\n.checkbox-table.vue-xtable .vxe-body--row.row-checked {\n  background-color: #fbf8ec;\n}\n</style>',template:'<div class="source">    <vue-xtable\n      border\n      highlight-hover-row\n      row-id="id"\n      :data="tableData"\n      :checkbox-config="{checkRowKeys: [\'2\', \'3\']}"\n      :radio-config="{labelField: \'name\'}">\n      <vue-xtable-column type="checkbox" width="60"></vue-xtable-column>\n      <vue-xtable-column type="radio" width="300" title="Name"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,5)},methods:{}}},{id:"XtableDemo.base.Selection.sample5",label:"XtableDemo.base.Selection.sample5.label",description:"XtableDemo.base.Selection.sample5.description",code:'<vue-toolbar>\n  <template v-slot:buttons>\n    <vue-button @click="$refs.xTable5.setSelection(tableData, true)">设置所有行选中</vue-button>\n    <vue-button @click="$refs.xTable5.clearSelection()">清除所有行选中</vue-button>\n  </template>\n</vue-toolbar>\n\n<vue-xtable\n  border\n  highlight-hover-row\n  ref="xTable5"\n  :data="tableData"\n  :checkbox-config="{checkStrictly: true}">\n  <vue-xtable-column type="checkbox" width="60" tree-node></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 5)\n  },\n\n  methods: {\n  }\n})\n<\/script>\n\n<style>\n.checkbox-table.vue-xtable .vxe-body--row.row-checked {\n  background-color: #fbf8ec;\n}\n</style>',template:'<div class="source">    <vue-toolbar>\n      <template v-slot:buttons>\n        <vue-button @click="$refs.xTable5.setSelection(tableData, true)">设置所有行选中</vue-button>\n        <vue-button @click="$refs.xTable5.clearSelection()">清除所有行选中</vue-button>\n      </template>\n    </vue-toolbar>\n\n    <vue-xtable\n      border\n      highlight-hover-row\n      ref="xTable5"\n      :data="tableData"\n      :checkbox-config="{checkStrictly: true}">\n      <vue-xtable-column type="checkbox" width="60" tree-node></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,5)},methods:{}}},{id:"XtableDemo.base.Selection.sample6",label:"XtableDemo.base.Selection.sample6.label",description:"XtableDemo.base.Selection.sample6.description",code:'<vue-xtable\n  border\n  highlight-hover-row\n  :data="tableData"\n  :radio-config="{labelField: \'name\'}">\n  <vue-xtable-column type="checkbox" width="60"></vue-xtable-column>\n  <vue-xtable-column type="radio" width="300" title="Name"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 5)\n  },\n\n  methods: {\n  }\n})\n<\/script>\n\n<style>\n.checkbox-table.vue-xtable .vxe-body--row.row-checked {\n  background-color: #fbf8ec;\n}\n</style>',template:'<div class="source">    <vue-xtable\n      border\n      highlight-hover-row\n      :data="tableData"\n      :radio-config="{labelField: \'name\'}">\n      <vue-xtable-column type="checkbox" width="60"></vue-xtable-column>\n      <vue-xtable-column type="radio" width="300" title="Name"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,5)},methods:{}}},{id:"XtableDemo.base.Selection.sample7",label:"XtableDemo.base.Selection.sample7.label",description:"XtableDemo.base.Selection.sample7.description",code:'<vue-xtable\n  border\n  resizable\n  highlight-hover-row\n  highlight-current-row\n  :data="tableData"\n  :radio-config="{labelField: \'role\'}"\n  :checkbox-config="{labelField: \'name\'}">\n  <vue-xtable-column type="checkbox" title="Name"></vue-xtable-column>\n  <vue-xtable-column type="radio" title="Role"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 5)\n  },\n\n  methods: {\n  }\n})\n<\/script>\n\n<style>\n.checkbox-table.vue-xtable .vxe-body--row.row-checked {\n  background-color: #fbf8ec;\n}\n</style>',template:'<div class="source">    <vue-xtable\n      border\n      resizable\n      highlight-hover-row\n      highlight-current-row\n      :data="tableData"\n      :radio-config="{labelField: \'role\'}"\n      :checkbox-config="{labelField: \'name\'}">\n      <vue-xtable-column type="checkbox" title="Name"></vue-xtable-column>\n      <vue-xtable-column type="radio" title="Role"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,5)},methods:{}}}],styles:".checkbox-table.vue-xtable .vxe-body--row.row-checked {\n  background-color: #fbf8ec;\n}"}},"./demo/XtableDemo/base/Size.vue":
/*!***************************************!*\
  !*** ./demo/XtableDemo/base/Size.vue ***!
  \***************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/base/Size",name:"XtableDemo.base.Size",head:{label:"XtableDemo.base.Size.label",description:"XtableDemo.base.Size.description"},samples:[{id:"XtableDemo.base.Size.sample1",label:"XtableDemo.base.Size.sample1.label",description:"XtableDemo.base.Size.sample1.description",code:'<vue-xtable\n  :data="tableData">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column type="radio" width="60"></vue-xtable-column>\n  <vue-xtable-column type="checkbox" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 4)\n  },\n\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      :data="tableData">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column type="radio" width="60"></vue-xtable-column>\n      <vue-xtable-column type="checkbox" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,4)}}},{id:"XtableDemo.base.Size.sample2",label:"XtableDemo.base.Size.sample2.label",description:"XtableDemo.base.Size.sample2.description",code:'<vue-xtable\n  size="medium"\n  :data="tableData">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column type="radio" width="60"></vue-xtable-column>\n  <vue-xtable-column type="checkbox" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 4)\n  },\n\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      size="medium"\n      :data="tableData">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column type="radio" width="60"></vue-xtable-column>\n      <vue-xtable-column type="checkbox" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,4)}}},{id:"XtableDemo.base.Size.sample3",label:"XtableDemo.base.Size.sample3.label",description:"XtableDemo.base.Size.sample3.description",code:'<vue-xtable\n  size="small"\n  :data="tableData">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column type="radio" width="60"></vue-xtable-column>\n  <vue-xtable-column type="checkbox" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 4)\n  },\n\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      size="small"\n      :data="tableData">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column type="radio" width="60"></vue-xtable-column>\n      <vue-xtable-column type="checkbox" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,4)}}},{id:"XtableDemo.base.Size.sample4",label:"XtableDemo.base.Size.sample4.label",description:"XtableDemo.base.Size.sample4.description",code:'<vue-xtable\n  size="mini"\n  :data="tableData">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column type="radio" width="60"></vue-xtable-column>\n  <vue-xtable-column type="checkbox" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 4)\n  },\n\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      size="mini"\n      :data="tableData">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column type="radio" width="60"></vue-xtable-column>\n      <vue-xtable-column type="checkbox" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,4)}}}],styles:""}},"./demo/XtableDemo/base/Sort.vue":
/*!***************************************!*\
  !*** ./demo/XtableDemo/base/Sort.vue ***!
  \***************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/base/Sort",name:"XtableDemo.base.Sort",head:{label:"XtableDemo.base.Sort.label",description:"XtableDemo.base.Sort.description"},samples:[{id:"XtableDemo.base.Sort.sample1",label:"XtableDemo.base.Sort.sample1.label",description:"XtableDemo.base.Sort.sample1.description",code:'<vue-xtable\n  border\n  highlight-hover-row\n  height="300"\n  :data="tableData">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" sortable></vue-xtable-column>\n  <vue-xtable-column field="nickname" title="Nickname" sortable></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n  <vue-xtable-column field="time" title="Time" sortable></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\n  },\n\n  methods: {\n  }\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      border\n      highlight-hover-row\n      height="300"\n      :data="tableData">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" sortable></vue-xtable-column>\n      <vue-xtable-column field="nickname" title="Nickname" sortable></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n      <vue-xtable-column field="time" title="Time" sortable></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,50)},methods:{}}},{id:"XtableDemo.base.Sort.sample2",label:"XtableDemo.base.Sort.sample2.label",description:"XtableDemo.base.Sort.sample2.description",code:'<vue-xtable\n  border\n  highlight-hover-row\n  height="300"\n  :data="tableData">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" sortable></vue-xtable-column>\n  <vue-xtable-column field="nickname" title="Nickname" sortable></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n  <vue-xtable-column field="time" title="Time" sortable :sort-by="[\'time\', \'name\']"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\n  },\n\n  methods: {\n  }\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      border\n      highlight-hover-row\n      height="300"\n      :data="tableData">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" sortable></vue-xtable-column>\n      <vue-xtable-column field="nickname" title="Nickname" sortable></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n      <vue-xtable-column field="time" title="Time" sortable :sort-by="[\'time\', \'name\']"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,50)},methods:{}}},{id:"XtableDemo.base.Sort.sample3",label:"XtableDemo.base.Sort.sample3.label",description:"XtableDemo.base.Sort.sample3.description",code:'<vue-xtable\n  border\n  highlight-hover-row\n  height="300"\n  :data="tableData"\n  @sort-change="sortChangeEvent">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" sortable :sort-method="sortNameMethod"></vue-xtable-column>\n  <vue-xtable-column field="nickname" title="Nickname" sortable></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n  <vue-xtable-column field="time" title="Time"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\n  },\n\n  methods: {\n    sortNameMethod (a, b) {\n      // 例如：名称不区分大小写的排序\n      var v1 = (a.name || \'\').toLowerCase()\n      var v2 = (b.name || \'\').toLowerCase()\n      return v1 < v2 ? -1 : v1 > v2 ? 1 : 0\n    },\n    sortChangeEvent ({ column, property, order }) {\n      console.info(property, order)\n    }\n  }\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      border\n      highlight-hover-row\n      height="300"\n      :data="tableData"\n      @sort-change="sortChangeEvent">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" sortable :sort-method="sortNameMethod"></vue-xtable-column>\n      <vue-xtable-column field="nickname" title="Nickname" sortable></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n      <vue-xtable-column field="time" title="Time"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,50)},methods:{sortNameMethod:function(e,n){var t=(e.name||"").toLowerCase(),l=(n.name||"").toLowerCase();return t<l?-1:t>l?1:0},sortChangeEvent:function(e){e.column;var n=e.property,t=e.order;console.info(n,t)}}}},{id:"XtableDemo.base.Sort.sample4",label:"XtableDemo.base.Sort.sample4.label",description:"XtableDemo.base.Sort.sample4.description",code:'<vue-xtable\n  border\n  highlight-hover-row\n  highlight-hover-column\n  ref="xTable"\n  height="300"\n  :data="tableData"\n  :sort-config="{trigger: \'cell\'}"\n  @sort-change="sortChangeEvent">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n  <vue-xtable-column field="nickname" title="Nickname" sortable></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex" sortable></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age" sortable></vue-xtable-column>\n  <vue-xtable-column field="time" title="Time" sortable></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\n  },\n\n  methods: {\n    sortChangeEvent ({ column, property, order }) {\n      console.info(property, order)\n    }\n  }\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      border\n      highlight-hover-row\n      highlight-hover-column\n      ref="xTable"\n      height="300"\n      :data="tableData"\n      :sort-config="{trigger: \'cell\'}"\n      @sort-change="sortChangeEvent">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n      <vue-xtable-column field="nickname" title="Nickname" sortable></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex" sortable></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age" sortable></vue-xtable-column>\n      <vue-xtable-column field="time" title="Time" sortable></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,50)},methods:{sortChangeEvent:function(e){e.column;var n=e.property,t=e.order;console.info(n,t)}}}}],styles:""}},"./demo/XtableDemo/base/Stripe.vue":
/*!*****************************************!*\
  !*** ./demo/XtableDemo/base/Stripe.vue ***!
  \*****************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/base/Stripe",name:"XtableDemo.base.Stripe",head:{label:"XtableDemo.base.Stripe.label",description:"XtableDemo.base.Stripe.description"},samples:[{id:"XtableDemo.base.Stripe.sample1",label:"XtableDemo.base.Stripe.sample1.label",description:"XtableDemo.base.Stripe.sample1.description",code:'<vue-xtable\n  stripe\n  :data="tableData">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\n  },\n\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      stripe\n      :data="tableData">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,6)}}},{id:"XtableDemo.base.Stripe.sample2",label:"XtableDemo.base.Stripe.sample2.label",description:"XtableDemo.base.Stripe.sample2.description",code:'<vue-xtable\n  stripe\n  highlight-current-row\n  highlight-hover-row\n  :data="tableData">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\n  },\n\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      stripe\n      highlight-current-row\n      highlight-hover-row\n      :data="tableData">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,6)}}}],styles:""}},"./demo/XtableDemo/base/Style.vue":
/*!****************************************!*\
  !*** ./demo/XtableDemo/base/Style.vue ***!
  \****************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/base/Style",name:"XtableDemo.base.Style",head:{label:"XtableDemo.base.Style.label",description:"XtableDemo.base.Style.description"},samples:[{id:"XtableDemo.base.Style.sample1",label:"XtableDemo.base.Style.sample1.label",description:"XtableDemo.base.Style.sample1.description",code:'<vue-xtable\n  border\n  class="mytable-style"\n  :header-cell-class-name="headerCellClassName"\n  :row-class-name="rowClassName"\n  :cell-class-name="cellClassName"\n  :data="tableData">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\n  },\n\n  methods: {\n    headerCellClassName ({ column, columnIndex }) {\n      if (column.property === \'name\') {\n        return \'col-blue\'\n      }\n    },\n    rowClassName ({ row, rowIndex }) {\n      if (VueUtil.includes([2, 3, 5], rowIndex)) {\n        return \'row-green\'\n      }\n    },\n    cellClassName ({ row, rowIndex, column, columnIndex }) {\n      if (column.property === \'sex\') {\n        if (row.sex >= \'1\') {\n          return \'col-red\'\n        } else if (row.age === 26) {\n          return \'col-orange\'\n        }\n      }\n    },\n  }\n})\n<\/script>\n\n<style>\n.mytable-style.vue-xtable-table .vue-xtable-body--row.row-green {\n  background-color: #187;\n  color: #fff;\n}\n.mytable-style.vue-xtable-table .vue-xtable-header--column.col-blue {\n  background-color: #2db7f5;\n  color: #fff;\n}\n.mytable-style.vue-xtable-table .vue-xtable-body--column.col-red {\n  background-color: red;\n  color: #fff;\n}\n.mytable-style.vue-xtable-table .vue-xtable-body--column.col-orange {\n  background-color: #f60;\n  color: #fff;\n}\n</style>',template:'<div class="source">    <vue-xtable\n      border\n      class="mytable-style"\n      :header-cell-class-name="headerCellClassName"\n      :row-class-name="rowClassName"\n      :cell-class-name="cellClassName"\n      :data="tableData">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,6)},methods:{headerCellClassName:function(e){var n=e.column;e.columnIndex;if("name"===n.property)return"col-blue"},rowClassName:function(e){e.row;var n=e.rowIndex;if(VueUtil.includes([2,3,5],n))return"row-green"},cellClassName:function(e){var n=e.row,t=(e.rowIndex,e.column);e.columnIndex;if("sex"===t.property){if(n.sex>="1")return"col-red";if(26===n.age)return"col-orange"}}}}},{id:"XtableDemo.base.Style.sample2",label:"XtableDemo.base.Style.sample2.label",description:"XtableDemo.base.Style.sample2.description",code:'<vue-xtable\n  border\n  class="mytable-style"\n  :cell-class-name="cellClassName2"\n  :data="tableData"\n  @cell-click="cellClickEvent2">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n      selectRow: null,\n      selectColumn: null,\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\n  },\n\n  methods: {\n    cellClassName2 ({ row, column }) {\n      if (row === this.selectRow & column === this.selectColumn) {\n        return \'col-orange\'\n      }\n    },\n    cellClickEvent2 ({ row, column }) {\n      this.selectRow = row\n      this.selectColumn = column\n    }\n  }\n})\n<\/script>\n\n<style>\n.mytable-style.vue-xtable-table .vue-xtable-body--row.row-green {\n  background-color: #187;\n  color: #fff;\n}\n.mytable-style.vue-xtable-table .vue-xtable-header--column.col-blue {\n  background-color: #2db7f5;\n  color: #fff;\n}\n.mytable-style.vue-xtable-table .vue-xtable-body--column.col-red {\n  background-color: red;\n  color: #fff;\n}\n.mytable-style.vue-xtable-table .vue-xtable-body--column.col-orange {\n  background-color: #f60;\n  color: #fff;\n}\n</style>',template:'<div class="source">    <vue-xtable\n      border\n      class="mytable-style"\n      :cell-class-name="cellClassName2"\n      :data="tableData"\n      @cell-click="cellClickEvent2">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[],selectRow:null,selectColumn:null}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,6)},methods:{cellClassName2:function(e){var n=e.row,t=e.column;if(n===this.selectRow&t===this.selectColumn)return"col-orange"},cellClickEvent2:function(e){var n=e.row,t=e.column;this.selectRow=n,this.selectColumn=t}}}}],styles:".mytable-style.vue-xtable-table .vue-xtable-body--row.row-green {\n  background-color: #187;\n  color: #fff;\n}\n.mytable-style.vue-xtable-table .vue-xtable-header--column.col-blue {\n  background-color: #2db7f5;\n  color: #fff;\n}\n.mytable-style.vue-xtable-table .vue-xtable-body--column.col-red {\n  background-color: red;\n  color: #fff;\n}\n.mytable-style.vue-xtable-table .vue-xtable-body--column.col-orange {\n  background-color: #f60;\n  color: #fff;\n}"}},"./demo/XtableDemo/edit/AutoClear.vue":
/*!********************************************!*\
  !*** ./demo/XtableDemo/edit/AutoClear.vue ***!
  \********************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/edit/AutoClear",name:"XtableDemo.edit.AutoClear",head:{label:"XtableDemo.edit.AutoClear.label",description:"XtableDemo.edit.AutoClear.description"},samples:[{id:"XtableDemo.edit.AutoClear.sample1",label:"XtableDemo.edit.AutoClear.sample1.label",description:"XtableDemo.edit.AutoClear.sample1.description",code:'<vue-xtable\n  ref="xTable"\n  border\n  show-overflow\n  :data="tableData"\n  :edit-config="{ trigger: \'manual\', mode: \'row\', autoClear: false}">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="date" title="Date" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column title="操作">\n    <template v-slot="scope">\n      <template v-if="$refs.xTable.isActiveByRow(scope.row)">\n        <vue-button @click="saveRowEvent(scope.row)">保存</vue-button>\n        <vue-button @click="cancelRowEvent(scope.row)">取消</vue-button>\n      </template>\n      <template v-else>\n        <vue-button @click="editRowEvent(scope.row)">编辑</vue-button>\n      </template>\n    </template>\n  </vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\n  },\n\n  methods: {\n    editRowEvent (row) {\n      this.$refs.xTable.setActiveRow(row)\n    },\n    saveRowEvent (row) {\n      this.$refs.xTable.clearActived().then(() => {\n        this.$alert({ message: \'success\' })\n      })\n    },\n    cancelRowEvent (row) {\n      let xTable = this.$refs.xTable\n      xTable.clearActived()\n        .then(() => xTable.revertData(row))\n    }\n  }\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      ref="xTable"\n      border\n      show-overflow\n      :data="tableData"\n      :edit-config="{ trigger: \'manual\', mode: \'row\', autoClear: false}">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="date" title="Date" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column title="操作">\n        <template v-slot="scope">\n          <template v-if="$refs.xTable.isActiveByRow(scope.row)">\n            <vue-button @click="saveRowEvent(scope.row)">保存</vue-button>\n            <vue-button @click="cancelRowEvent(scope.row)">取消</vue-button>\n          </template>\n          <template v-else>\n            <vue-button @click="editRowEvent(scope.row)">编辑</vue-button>\n          </template>\n        </template>\n      </vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,6)},methods:{editRowEvent:function(e){this.$refs.xTable.setActiveRow(e)},saveRowEvent:function(e){var n=this;this.$refs.xTable.clearActived().then(function(){n.$alert({message:"success"})})},cancelRowEvent:function(e){var n=this.$refs.xTable;n.clearActived().then(function(){return n.revertData(e)})}}}}],styles:""}},"./demo/XtableDemo/edit/CascadingSelect.vue":
/*!**************************************************!*\
  !*** ./demo/XtableDemo/edit/CascadingSelect.vue ***!
  \**************************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/edit/CascadingSelect",name:"XtableDemo.edit.CascadingSelect",head:{label:"XtableDemo.edit.CascadingSelect.label",description:"XtableDemo.edit.CascadingSelect.description"},samples:[{id:"XtableDemo.edit.CascadingSelect.sample1",label:"XtableDemo.edit.CascadingSelect.sample1.label",description:"XtableDemo.edit.CascadingSelect.sample1.description",code:'<vue-toolbar>\n  <template v-slot:buttons>\n    <vue-button @click="insertEvent()">新增</vue-button>\n  </template>\n</vue-toolbar>\n\n<vue-xtable\n  border\n  resizable\n  ref="xTable"\n  max-height="400"\n  :data="tableData"\n  :edit-config="{trigger: \'click\', mode: \'row\'}"\n  @edit-actived="editActivedEvent">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="attr3" title="Project type" :edit-render="{name: \'select\', options: ptypeList, events: {change: ptypeChangeEvent}}"></vue-xtable-column>\n  <vue-xtable-column field="attr4" title="Project name" :formatter="formatPanmeLabel" :edit-render="{}">\n    <template v-slot:edit="scope">\n      <select class="vxe-default-select" v-model="scope.row.attr4">\n        <option v-for="item in pnameList" :key="item.value" :value="item.value">{{ item.label }}</option>\n      </select>\n    </template>\n  </vue-xtable-column>\n  <vue-xtable-column field="date12" title="Date" :edit-render="{name: \'input\', attrs: {type: \'date\'}}"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n      ptypeList: [\n        {\n          label: \'\',\n          value: \'\'\n        },\n        {\n          label: \'项目1\',\n          value: \'1\'\n        },\n        {\n          label: \'项目2\',\n          value: \'2\'\n        },\n        {\n          label: \'项目3\',\n          value: \'3\'\n        }\n      ],\n      pnameList: [],\n      cachePnameList: [],\n\n    }\n  },\n  created () {\n    this.$nextTick(() => {\n      this.tableData = window.MOCK_DATA_LIST.slice(0, 4)\n    })\n  },\n\n  methods: {\n    insertEvent () {\n      let record = {\n\n      }\n      this.$refs.xTable.insert(record)\n    },\n    // 格式化显示名称\n    formatPanmeLabel ({ cellValue, row }) {\n      let ptype = row.attr3\n      let ptypeItem = VueUtil.find(this.cachePnameList, item => item.ptype === ptype)\n      if (ptypeItem && ptypeItem.pnameList) {\n        let pnameItem = VueUtil.find(ptypeItem.pnameList, item => item.value === cellValue)\n        if (pnameItem) {\n          return pnameItem.label\n        }\n      }\n      return \'\'\n    },\n    // 更新级联选项列表\n    updatePnameList (row) {\n      let ptype = row.attr3\n      let pnameList = [\n        {\n          label: \'\',\n          value: \'\'\n        }\n      ]\n      if (ptype) {\n        let item = VueUtil.find(this.cachePnameList, item => item.ptype === ptype)\n        if (item) {\n          pnameList = item.pnameList\n        } else {\n          // 模拟后台数据\n          Array.from(new Array(Math.floor(Math.random()*(8-3+1)+3))).forEach((item, index) => {\n            pnameList.push({\n              label: `${ptype}-名称${index}`,\n              value: `${ptype}_${index}`\n            })\n          })\n          this.cachePnameList.push({ ptype, pnameList })\n        }\n      }\n      this.pnameList = pnameList\n    },\n    ptypeChangeEvent ({ row }, evnt) {\n      // 使用内置 select 需要手动更新，使用第三方组件如果是 v-model 就不需要手动赋值\n      row.attr3 = evnt.target.value\n      // 类型切换时更新级联的下拉数据\n      row.attr4 = \'\'\n      this.updatePnameList(row)\n    },\n    editActivedEvent ({ row }) {\n      this.updatePnameList(row)\n    }\n  }\n})\n<\/script>',template:'<div class="source">    <vue-toolbar>\n      <template v-slot:buttons>\n        <vue-button @click="insertEvent()">新增</vue-button>\n      </template>\n    </vue-toolbar>\n\n    <vue-xtable\n      border\n      resizable\n      ref="xTable"\n      max-height="400"\n      :data="tableData"\n      :edit-config="{trigger: \'click\', mode: \'row\'}"\n      @edit-actived="editActivedEvent">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="attr3" title="Project type" :edit-render="{name: \'select\', options: ptypeList, events: {change: ptypeChangeEvent}}"></vue-xtable-column>\n      <vue-xtable-column field="attr4" title="Project name" :formatter="formatPanmeLabel" :edit-render="{}">\n        <template v-slot:edit="scope">\n          <select class="vxe-default-select" v-model="scope.row.attr4">\n            <option v-for="item in pnameList" :key="item.value" :value="item.value">{{ item.label }}</option>\n          </select>\n        </template>\n      </vue-xtable-column>\n      <vue-xtable-column field="date12" title="Date" :edit-render="{name: \'input\', attrs: {type: \'date\'}}"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[],ptypeList:[{label:"",value:""},{label:"项目1",value:"1"},{label:"项目2",value:"2"},{label:"项目3",value:"3"}],pnameList:[],cachePnameList:[]}},created:function(){var e=this;this.$nextTick(function(){e.tableData=window.MOCK_DATA_LIST.slice(0,4)})},methods:{insertEvent:function(){this.$refs.xTable.insert({})},formatPanmeLabel:function(e){var n=e.cellValue,t=e.row.attr3,l=VueUtil.find(this.cachePnameList,function(e){return e.ptype===t});if(l&&l.pnameList){var o=VueUtil.find(l.pnameList,function(e){return e.value===n});if(o)return o.label}return""},updatePnameList:function(e){var n=e.attr3,t=[{label:"",value:""}];if(n){var l=VueUtil.find(this.cachePnameList,function(e){return e.ptype===n});l?t=l.pnameList:(Array.from(new Array(Math.floor(6*Math.random()+3))).forEach(function(e,l){t.push({label:"".concat(n,"-名称").concat(l),value:"".concat(n,"_").concat(l)})}),this.cachePnameList.push({ptype:n,pnameList:t}))}this.pnameList=t},ptypeChangeEvent:function(e,n){var t=e.row;t.attr3=n.target.value,t.attr4="",this.updatePnameList(t)},editActivedEvent:function(e){var n=e.row;this.updatePnameList(n)}}}}],styles:""}},"./demo/XtableDemo/edit/CellDisable.vue":
/*!**********************************************!*\
  !*** ./demo/XtableDemo/edit/CellDisable.vue ***!
  \**********************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/edit/CellDisable",name:"XtableDemo.edit.CellDisable",head:{label:"XtableDemo.edit.CellDisable.label",description:"XtableDemo.edit.CellDisable.description"},samples:[{id:"XtableDemo.edit.CellDisable.sample1",label:"XtableDemo.edit.CellDisable.sample1.label",description:"XtableDemo.edit.CellDisable.sample1.description",code:'<vue-xtable\n  border\n  show-overflow\n  :data="tableData"\n  :edit-config="{trigger: \'click\', mode: \'cell\', activeMethod: activeCellMethod}"\n  @edit-disabled="editDisabledEvent">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="date12" title="Date" :edit-render="{name: \'input\'}"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\n  },\n\n  methods: {\n    activeCellMethod ({ column, columnIndex }) {\n      return columnIndex !== 1\n    },\n    editDisabledEvent ({ row, column }) {\n      this.$alert({ message: \'禁止编辑\' })\n    }\n  }\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      border\n      show-overflow\n      :data="tableData"\n      :edit-config="{trigger: \'click\', mode: \'cell\', activeMethod: activeCellMethod}"\n      @edit-disabled="editDisabledEvent">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="date12" title="Date" :edit-render="{name: \'input\'}"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,6)},methods:{activeCellMethod:function(e){e.column;return 1!==e.columnIndex},editDisabledEvent:function(e){e.row,e.column;this.$alert({message:"禁止编辑"})}}}},{id:"XtableDemo.edit.CellDisable.sample2",label:"XtableDemo.edit.CellDisable.sample2.label",description:"XtableDemo.edit.CellDisable.sample2.description",code:'<vue-xtable\n  border\n  show-overflow\n  :data="tableData"\n  :edit-config="{trigger: \'click\', mode: \'cell\', activeMethod: activeRowMethod}"\n  @edit-disabled="editDisabledEvent">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="date12" title="Date" :edit-render="{name: \'input\'}"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\n  },\n\n  methods: {\n    activeRowMethod ({ row, rowIndex }) {\n      return rowIndex !== 1\n    },\n    editDisabledEvent ({ row, column }) {\n      this.$alert({ message: \'禁止编辑\' })\n    }\n  }\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      border\n      show-overflow\n      :data="tableData"\n      :edit-config="{trigger: \'click\', mode: \'cell\', activeMethod: activeRowMethod}"\n      @edit-disabled="editDisabledEvent">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="date12" title="Date" :edit-render="{name: \'input\'}"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,6)},methods:{activeRowMethod:function(e){e.row;return 1!==e.rowIndex},editDisabledEvent:function(e){e.row,e.column;this.$alert({message:"禁止编辑"})}}}}],styles:""}},"./demo/XtableDemo/edit/CellValid.vue":
/*!********************************************!*\
  !*** ./demo/XtableDemo/edit/CellValid.vue ***!
  \********************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/edit/CellValid",name:"XtableDemo.edit.CellValid",head:{label:"XtableDemo.edit.CellValid.label",description:"XtableDemo.edit.CellValid.description"},samples:[{id:"XtableDemo.edit.CellValid.sample1",label:"XtableDemo.edit.CellValid.sample1.label",description:"XtableDemo.edit.CellValid.sample1.description",code:'<vue-toolbar>\n  <template v-slot:buttons>\n    <vue-button @click="insertEvent">新增</vue-button>\n    <vue-button @click="$refs.xTable.removeSelecteds()">删除选中</vue-button>\n    <vue-button @click="validEvent">校验</vue-button>\n    <vue-button @click="fullValidEvent">完整校验</vue-button>\n    <vue-button @click="selectValidEvent">选中校验</vue-button>\n    <vue-button @click="getSelectEvent">获取选中</vue-button>\n    <vue-button @click="getInsertEvent">获取新增</vue-button>\n    <vue-button @click="getRemoveEvent">获取删除</vue-button>\n    <vue-button @click="getUpdateEvent">获取修改</vue-button>\n  </template>\n</vue-toolbar>\n\n<vue-xtable\n  border\n  show-overflow\n  height="500"\n  ref="xTable"\n  :data="tableData"\n  :edit-rules="validRules"\n  :edit-config="{trigger: \'click\', mode: \'cell\', showStatus: true}">\n  <vue-xtable-column type="checkbox" width="60"></vue-xtable-column>\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="date" title="Date" :edit-render="{name: \'input\'}"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n      validRules: {\n        name: [\n          { required: true, message: \'名称必须填写\' },\n          { min: 3, max: 50, message: \'名称长度在 3 到 50 个字符\' }\n        ],\n        sex: [\n          { required: true, message: \'性别必须填写\' }\n        ]\n      },\n\n    }\n  },\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 6)\n    this.tableData = list\n  },\n\n  methods: {\n    validEvent () {\n      this.$refs.xTable.validate(valid => {\n        if (valid) {\n          this.$notify.success({ message:\'校验成功！\'});\n        } else {\n          this.$notify.error({ message:\'校验不通过！\'});\n        }\n      })\n    },\n    fullValidEvent () {\n      this.$refs.xTable.fullValidate((valid, errMap) => {\n        if (valid) {\n          this.$notify.success({ message:\'校验成功！\'});\n        } else {\n          let msgList = []\n          Object.values(errMap).forEach(errList => {\n            errList.forEach(params => {\n              let { rowIndex, column, rules } = params\n              rules.forEach(rule => {\n                msgList.push(`第 ${rowIndex} 行 ${column.title} 校验错误：${rule.message}`)\n              })\n            })\n          })\n\n          var h = this.$createElement;\n          this.$alert({\n            type: "error",\n            message: h(\'div\',[msgList.map(function (msg) {\n              return h("div", [msg]);\n            })])\n          });\n        }\n      })\n    },\n    selectValidEvent () {\n      let selectRecords = this.$refs.xTable.getSelectRecords()\n      if (selectRecords.length > 0) {\n        this.$refs.xTable.validate(selectRecords, valid => {\n          if (valid) {\n            this.$notify.success({ message:\'校验成功！\'});\n          } else {\n            this.$notify.error({ message:\'校验不通过！\'});\n          }\n        })\n      } else {\n        this.$notify.warning({ message:\'未选中数据！\'});\n      }\n    },\n    insertEvent () {\n      this.$refs.xTable.insert().then(({ row }) => {\n        // 插入一条数据并触发校验\n        this.$refs.xTable.validate(row, valid => {\n          if (valid) {\n\n          }\n        })\n      })\n    },\n    getSelectEvent () {\n      let selectRecords = this.$refs.xTable.getSelectRecords()\n      this.$alert({ message: selectRecords.length })\n    },\n    getInsertEvent () {\n      let insertRecords = this.$refs.xTable.getInsertRecords()\n      this.$alert({ message: insertRecords.length })\n    },\n    getRemoveEvent () {\n      let removeRecords = this.$refs.xTable.getRemoveRecords()\n      this.$alert({ message: removeRecords.length })\n    },\n    getUpdateEvent () {\n      let updateRecords = this.$refs.xTable.getUpdateRecords()\n      this.$alert({ message: updateRecords.length })\n    }\n  }\n})\n<\/script>',template:'<div class="source">    <vue-toolbar>\n      <template v-slot:buttons>\n        <vue-button @click="insertEvent">新增</vue-button>\n        <vue-button @click="$refs.xTable.removeSelecteds()">删除选中</vue-button>\n        <vue-button @click="validEvent">校验</vue-button>\n        <vue-button @click="fullValidEvent">完整校验</vue-button>\n        <vue-button @click="selectValidEvent">选中校验</vue-button>\n        <vue-button @click="getSelectEvent">获取选中</vue-button>\n        <vue-button @click="getInsertEvent">获取新增</vue-button>\n        <vue-button @click="getRemoveEvent">获取删除</vue-button>\n        <vue-button @click="getUpdateEvent">获取修改</vue-button>\n      </template>\n    </vue-toolbar>\n\n    <vue-xtable\n      border\n      show-overflow\n      height="500"\n      ref="xTable"\n      :data="tableData"\n      :edit-rules="validRules"\n      :edit-config="{trigger: \'click\', mode: \'cell\', showStatus: true}">\n      <vue-xtable-column type="checkbox" width="60"></vue-xtable-column>\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="date" title="Date" :edit-render="{name: \'input\'}"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[],validRules:{name:[{required:!0,message:"名称必须填写"},{min:3,max:50,message:"名称长度在 3 到 50 个字符"}],sex:[{required:!0,message:"性别必须填写"}]}}},created:function(){var e=window.MOCK_DATA_LIST.slice(0,6);this.tableData=e},methods:{validEvent:function(){var e=this;this.$refs.xTable.validate(function(n){n?e.$notify.success({message:"校验成功！"}):e.$notify.error({message:"校验不通过！"})})},fullValidEvent:function(){var e=this;this.$refs.xTable.fullValidate(function(n,t){if(n)e.$notify.success({message:"校验成功！"});else{var l=[];Object.values(t).forEach(function(e){e.forEach(function(e){var n=e.rowIndex,t=e.column;e.rules.forEach(function(e){l.push("第 ".concat(n," 行 ").concat(t.title," 校验错误：").concat(e.message))})})});var o=e.$createElement;e.$alert({type:"error",message:o("div",[l.map(function(e){return o("div",[e])})])})}})},selectValidEvent:function(){var e=this,n=this.$refs.xTable.getSelectRecords();n.length>0?this.$refs.xTable.validate(n,function(n){n?e.$notify.success({message:"校验成功！"}):e.$notify.error({message:"校验不通过！"})}):this.$notify.warning({message:"未选中数据！"})},insertEvent:function(){var e=this;this.$refs.xTable.insert().then(function(n){var t=n.row;e.$refs.xTable.validate(t,function(e){})})},getSelectEvent:function(){var e=this.$refs.xTable.getSelectRecords();this.$alert({message:e.length})},getInsertEvent:function(){var e=this.$refs.xTable.getInsertRecords();this.$alert({message:e.length})},getRemoveEvent:function(){var e=this.$refs.xTable.getRemoveRecords();this.$alert({message:e.length})},getUpdateEvent:function(){var e=this.$refs.xTable.getUpdateRecords();this.$alert({message:e.length})}}}}],styles:""}},"./demo/XtableDemo/edit/Click.vue":
/*!****************************************!*\
  !*** ./demo/XtableDemo/edit/Click.vue ***!
  \****************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/edit/Click",name:"XtableDemo.edit.Click",head:{label:"XtableDemo.edit.Click.label",description:"XtableDemo.edit.Click.description"},samples:[{id:"XtableDemo.edit.Click.sample1",label:"XtableDemo.edit.Click.sample1.label",description:"XtableDemo.edit.Click.sample1.description",code:'<vue-xtable\n  border\n  resizable\n  :data="tableData"\n  :edit-config="{trigger: \'click\', mode: \'cell\'}"\n  @edit-actived="editActivedEvent"\n  @edit-closed="editClosedEvent">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="role" title="Role" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex" :edit-render="{name: \'select\', options: sexList}"></vue-xtable-column>\n  <vue-xtable-column field="num6" title="Number" :edit-render="{name: \'input\', attrs: {type: \'number\'}}"></vue-xtable-column>\n  <vue-xtable-column field="date12" title="Date" :edit-render="{name: \'input\', attrs: {type: \'date\'}}"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n      sexList: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\n    this.findSexList()\n  },\n\n  methods: {\n    findSexList () {\n      return Vue.http.get(\'/api/conf/sex/list\').then(data => {\n        this.sexList = data.data\n      })\n    },\n    editActivedEvent ({ row, column }, event) {\n      console.log(`打开 ${column.title} 列编辑`)\n    },\n    editClosedEvent ({ row, column }, event) {\n      console.log(`关闭 ${column.title} 列编辑`)\n    }\n  }\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      border\n      resizable\n      :data="tableData"\n      :edit-config="{trigger: \'click\', mode: \'cell\'}"\n      @edit-actived="editActivedEvent"\n      @edit-closed="editClosedEvent">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="role" title="Role" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex" :edit-render="{name: \'select\', options: sexList}"></vue-xtable-column>\n      <vue-xtable-column field="num6" title="Number" :edit-render="{name: \'input\', attrs: {type: \'number\'}}"></vue-xtable-column>\n      <vue-xtable-column field="date12" title="Date" :edit-render="{name: \'input\', attrs: {type: \'date\'}}"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[],sexList:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,6),this.findSexList()},methods:{findSexList:function(){var e=this;return Vue.http.get("/api/conf/sex/list").then(function(n){e.sexList=n.data})},editActivedEvent:function(e,n){e.row;var t=e.column;console.log("打开 ".concat(t.title," 列编辑"))},editClosedEvent:function(e,n){e.row;var t=e.column;console.log("关闭 ".concat(t.title," 列编辑"))}}}},{id:"XtableDemo.edit.Click.sample2",label:"XtableDemo.edit.Click.sample2.label",description:"XtableDemo.edit.Click.sample2.description",code:'<vue-xtable\n  border\n  resizable\n  show-overflow\n  :data="tableData"\n  :edit-config="{trigger: \'click\', mode: \'row\'}">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="role" title="Role" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="sex2" title="Sex" :edit-render="{name: \'select\', options: sexList, optionProps: {value: \'value\', label: \'spell\'}}"></vue-xtable-column>\n  <vue-xtable-column field="num6" title="Number" :edit-render="{name: \'input\', attrs: {type: \'number\'}}"></vue-xtable-column>\n  <vue-xtable-column field="date13" title="Date" :edit-render="{name: \'input\', attrs: {type: \'date\'}}"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" :edit-render="{name: \'input\'}"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n      sexList: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\n    this.findSexList()\n  },\n\n  methods: {\n    findSexList () {\n      return Vue.http.get(\'/api/conf/sex/list\').then(data => {\n        this.sexList = data.data\n      })\n    },\n  }\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      border\n      resizable\n      show-overflow\n      :data="tableData"\n      :edit-config="{trigger: \'click\', mode: \'row\'}">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="role" title="Role" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="sex2" title="Sex" :edit-render="{name: \'select\', options: sexList, optionProps: {value: \'value\', label: \'spell\'}}"></vue-xtable-column>\n      <vue-xtable-column field="num6" title="Number" :edit-render="{name: \'input\', attrs: {type: \'number\'}}"></vue-xtable-column>\n      <vue-xtable-column field="date13" title="Date" :edit-render="{name: \'input\', attrs: {type: \'date\'}}"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" :edit-render="{name: \'input\'}"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[],sexList:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,6),this.findSexList()},methods:{findSexList:function(){var e=this;return Vue.http.get("/api/conf/sex/list").then(function(n){e.sexList=n.data})}}}}],styles:""}},"./demo/XtableDemo/edit/DBLClick.vue":
/*!*******************************************!*\
  !*** ./demo/XtableDemo/edit/DBLClick.vue ***!
  \*******************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/edit/DBLClick",name:"XtableDemo.edit.DBLClick",head:{label:"XtableDemo.edit.DBLClick.label",description:"XtableDemo.edit.DBLClick.description"},samples:[{id:"XtableDemo.edit.DBLClick.sample1",label:"XtableDemo.edit.DBLClick.sample1.label",description:"XtableDemo.edit.DBLClick.sample1.description",code:'<vue-xtable\n  border\n  resizable\n  :data="tableData"\n  :edit-config="{trigger: \'dblclick\', mode: \'cell\'}"\n  @edit-actived="editActivedEvent"\n  @edit-closed="editClosedEvent">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="role" title="Role" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex" :edit-render="{name: \'select\', options: sexList}"></vue-xtable-column>\n  <vue-xtable-column field="num6" title="Number" :edit-render="{name: \'input\', attrs: {type: \'number\'}}"></vue-xtable-column>\n  <vue-xtable-column field="date12" title="Date" :edit-render="{name: \'input\', attrs: {type: \'date\'}}"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n      sexList: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\n    this.findSexList()\n  },\n\n  methods: {\n    findSexList () {\n      return Vue.http.get(\'/api/conf/sex/list\').then(data => {\n        this.sexList = data.data\n      })\n    },\n    editActivedEvent ({ row, column }, event) {\n      console.log(`打开 ${column.title} 列编辑`)\n    },\n    editClosedEvent ({ row, column }, event) {\n      console.log(`关闭 ${column.title} 列编辑`)\n    }\n  }\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      border\n      resizable\n      :data="tableData"\n      :edit-config="{trigger: \'dblclick\', mode: \'cell\'}"\n      @edit-actived="editActivedEvent"\n      @edit-closed="editClosedEvent">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="role" title="Role" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex" :edit-render="{name: \'select\', options: sexList}"></vue-xtable-column>\n      <vue-xtable-column field="num6" title="Number" :edit-render="{name: \'input\', attrs: {type: \'number\'}}"></vue-xtable-column>\n      <vue-xtable-column field="date12" title="Date" :edit-render="{name: \'input\', attrs: {type: \'date\'}}"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[],sexList:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,6),this.findSexList()},methods:{findSexList:function(){var e=this;return Vue.http.get("/api/conf/sex/list").then(function(n){e.sexList=n.data})},editActivedEvent:function(e,n){e.row;var t=e.column;console.log("打开 ".concat(t.title," 列编辑"))},editClosedEvent:function(e,n){e.row;var t=e.column;console.log("关闭 ".concat(t.title," 列编辑"))}}}},{id:"XtableDemo.edit.DBLClick.sample2",label:"XtableDemo.edit.DBLClick.sample2.label",description:"XtableDemo.edit.DBLClick.sample2.description",code:'<vue-xtable\n  border\n  resizable\n  show-overflow\n  :data="tableData"\n  :edit-config="{trigger: \'dblclick\', mode: \'row\'}">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="role" title="Role" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="sex4" title="Sex" :edit-render="{name: \'select\', options: sexList, optionProps: {value: \'value2\', label: \'spell\'}}"></vue-xtable-column>\n  <vue-xtable-column field="num6" title="Number" :edit-render="{name: \'input\', attrs: {type: \'number\'}}"></vue-xtable-column>\n  <vue-xtable-column field="date13" title="Date" :edit-render="{name: \'input\', attrs: {type: \'date\'}}"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" :edit-render="{name: \'input\'}"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n      sexList: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\n    this.findSexList()\n  },\n\n  methods: {\n    findSexList () {\n      return Vue.http.get(\'/api/conf/sex/list\').then(data => {\n        this.sexList = data.data\n      })\n    },\n  }\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      border\n      resizable\n      show-overflow\n      :data="tableData"\n      :edit-config="{trigger: \'dblclick\', mode: \'row\'}">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="role" title="Role" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="sex4" title="Sex" :edit-render="{name: \'select\', options: sexList, optionProps: {value: \'value2\', label: \'spell\'}}"></vue-xtable-column>\n      <vue-xtable-column field="num6" title="Number" :edit-render="{name: \'input\', attrs: {type: \'number\'}}"></vue-xtable-column>\n      <vue-xtable-column field="date13" title="Date" :edit-render="{name: \'input\', attrs: {type: \'date\'}}"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" :edit-render="{name: \'input\'}"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[],sexList:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,6),this.findSexList()},methods:{findSexList:function(){var e=this;return Vue.http.get("/api/conf/sex/list").then(function(n){e.sexList=n.data})}}}}],styles:""}},"./demo/XtableDemo/edit/Events.vue":
/*!*****************************************!*\
  !*** ./demo/XtableDemo/edit/Events.vue ***!
  \*****************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/edit/Events",name:"XtableDemo.edit.Events",head:{label:"XtableDemo.edit.Events.label",description:"XtableDemo.edit.Events.description"},samples:[{id:"XtableDemo.edit.Events.sample1",label:"XtableDemo.edit.Events.sample1.label",description:"XtableDemo.edit.Events.sample1.description",code:'<vue-xtable\n  border\n  resizable\n  :data="tableData"\n  :edit-config="{trigger: \'click\', mode: \'cell\'}">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" :edit-render="{name: \'input\', events: {keydown: keydownEvent}}"></vue-xtable-column>\n  <vue-xtable-column\n    field="role"\n    title="Role"\n    :filters="[{ data: \'\' }]"\n    :filter-render="{name: \'input\', attrs: {placeholder: \'按回车确认筛选\'}, events: {keyup: enterFilterEvent}}"\n    :edit-render="{name: \'input\', events: {focus: focusEvent}}"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex" :edit-render="{name: \'select\', options: sexList, events: {change: changeEvent}}"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n      sexList: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\n    this.findSexList()\n  },\n\n  methods: {\n    findSexList () {\n      return Vue.http.get(\'/api/conf/sex/list\').then(data => {\n        this.sexList = data.data\n      })\n    },\n    enterFilterEvent ({ context, column }, event) {\n      if (event.keyCode === 13) {\n        context.confirmFilter()\n      }\n    },\n    keydownEvent ({ column }, event) {\n      console.log(`${column.title} 触发 keydown 事件`)\n    },\n    focusEvent ({ column }, event) {\n      console.log(`${column.title} 触发 focus 事件`)\n    },\n    changeEvent ({ column }, event) {\n      console.log(`${column.title} 触发 change 事件`)\n    }\n  }\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      border\n      resizable\n      :data="tableData"\n      :edit-config="{trigger: \'click\', mode: \'cell\'}">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" :edit-render="{name: \'input\', events: {keydown: keydownEvent}}"></vue-xtable-column>\n      <vue-xtable-column\n        field="role"\n        title="Role"\n        :filters="[{ data: \'\' }]"\n        :filter-render="{name: \'input\', attrs: {placeholder: \'按回车确认筛选\'}, events: {keyup: enterFilterEvent}}"\n        :edit-render="{name: \'input\', events: {focus: focusEvent}}"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex" :edit-render="{name: \'select\', options: sexList, events: {change: changeEvent}}"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[],sexList:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,6),this.findSexList()},methods:{findSexList:function(){var e=this;return Vue.http.get("/api/conf/sex/list").then(function(n){e.sexList=n.data})},enterFilterEvent:function(e,n){var t=e.context;e.column;13===n.keyCode&&t.confirmFilter()},keydownEvent:function(e,n){var t=e.column;console.log("".concat(t.title," 触发 keydown 事件"))},focusEvent:function(e,n){var t=e.column;console.log("".concat(t.title," 触发 focus 事件"))},changeEvent:function(e,n){var t=e.column;console.log("".concat(t.title," 触发 change 事件"))}}}}],styles:""}},"./demo/XtableDemo/edit/Expand.vue":
/*!*****************************************!*\
  !*** ./demo/XtableDemo/edit/Expand.vue ***!
  \*****************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/edit/Expand",name:"XtableDemo.edit.Expand",head:{label:"XtableDemo.edit.Expand.label",description:"XtableDemo.edit.Expand.description"},samples:[{id:"XtableDemo.edit.Expand.sample1",label:"XtableDemo.edit.Expand.sample1.label",description:"XtableDemo.edit.Expand.sample1.description",code:'<vue-xtable\n  border\n  resizable\n  :data="tableData"\n  :edit-config="{trigger: \'click\', mode: \'cell\'}">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column type="expand" width="60">\n    <template v-slot="scope">\n      <ul class="expand-form">\n        <li>\n          <span class="title">Name：</span>\n          <span class="content">\n            <vue-input v-model="scope.row.name"></vue-input>\n          </span>\n        </li>\n        <li>\n          <span class="title">Sex：</span>\n          <span class="content">\n            <vue-input v-model="scope.row.sex"></vue-input>\n          </span>\n        </li>\n        <li>\n          <span class="title">Age：</span>\n          <span class="content">\n            <vue-input v-model="scope.row.age"></vue-input>\n          </span>\n        </li>\n      </ul>\n    </template>\n  </vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="date" title="Date" :edit-render="{name: \'input\'}"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\n  },\n\n})\n<\/script>\n\n<style>\n.expand-form li {\n  margin: 5px 0;\n}\n.expand-form li .title,\n.expand-form li .content {\n  display: inline-block;\n}\n.expand-form li .title {\n  width: 100px;\n}\n.expand-form li .content {\n  width: 200px;\n}\n</style>',template:'<div class="source">    <vue-xtable\n      border\n      resizable\n      :data="tableData"\n      :edit-config="{trigger: \'click\', mode: \'cell\'}">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column type="expand" width="60">\n        <template v-slot="scope">\n          <ul class="expand-form">\n            <li>\n              <span class="title">Name：</span>\n              <span class="content">\n                <vue-input v-model="scope.row.name"></vue-input>\n              </span>\n            </li>\n            <li>\n              <span class="title">Sex：</span>\n              <span class="content">\n                <vue-input v-model="scope.row.sex"></vue-input>\n              </span>\n            </li>\n            <li>\n              <span class="title">Age：</span>\n              <span class="content">\n                <vue-input v-model="scope.row.age"></vue-input>\n              </span>\n            </li>\n          </ul>\n        </template>\n      </vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="date" title="Date" :edit-render="{name: \'input\'}"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,6)}}}],styles:".expand-form li {\n  margin: 5px 0;\n}\n.expand-form li .title,\n.expand-form li .content {\n  display: inline-block;\n}\n.expand-form li .title {\n  width: 100px;\n}\n.expand-form li .content {\n  width: 200px;\n}"}},"./demo/XtableDemo/edit/Footer.vue":
/*!*****************************************!*\
  !*** ./demo/XtableDemo/edit/Footer.vue ***!
  \*****************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/edit/Footer",name:"XtableDemo.edit.Footer",head:{label:"XtableDemo.edit.Footer.label",description:"XtableDemo.edit.Footer.description"},samples:[{id:"XtableDemo.edit.Footer.sample1",label:"XtableDemo.edit.Footer.sample1.label",description:"XtableDemo.edit.Footer.sample1.description",code:'<vue-toolbar export>\n  <template v-slot:buttons>\n    <vue-button @click="insertEvent">新增</vue-button>\n    <vue-button @click="getInsertEvent">获取新增</vue-button>\n  </template>\n</vue-toolbar>\n\n<vue-xtable\n  border\n  show-footer\n  show-overflow\n  highlight-hover-row\n  ref="xTable"\n  height="400"\n  class="editable-footer"\n  :footer-method="footerMethod"\n  :footer-cell-class-name="footerCellClassName"\n  :data="tableData"\n  :edit-config="{trigger: \'click\', mode: \'row\'}">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="date" title="Date" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" :edit-render="{name: \'input\'}"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 20)\n    this.tableData = list\n  },\n\n  methods: {\n    footerCellClassName ({ $rowIndex, column, columnIndex }) {\n      if (columnIndex === 0) {\n        if ($rowIndex === 0) {\n          return \'col-blue\'\n        } else {\n          return \'col-red\'\n        }\n      }\n    },\n    footerMethod ({ columns, data }) {\n      return [\n        columns.map((column, columnIndex) => {\n          if (columnIndex === 0) {\n            return \'平均\'\n          }\n          if (VueUtil.includes([\'age\'], column.property)) {\n            return VueUtil.mean(data.map(data => data[column.property]))\n          }\n          return null\n        }),\n        columns.map((column, columnIndex) => {\n          if (columnIndex === 0) {\n            return \'和值\'\n          }\n          if (VueUtil.includes([\'age\'], column.property)) {\n            return VueUtil.sum(data.map( data => data[column.property]))\n          }\n          return null\n        })\n      ]\n    },\n    insertEvent () {\n      let record = {\n        name: \'New name\'\n      }\n      this.$refs.xTable.insert(record).then(({ row }) => this.$refs.xTable.setActiveCell(row, \'age\'))\n    },\n    getInsertEvent () {\n      let insertRecords = this.$refs.xTable.getInsertRecords()\n      this.$alert({ message: insertRecords.length })\n    }\n  }\n})\n<\/script>\n\n<style>\n.editable-footer .vxe-footer--column.col-blue {\n  background-color: #2db7f5;\n  color: #fff;\n}\n.editable-footer .vxe-footer--column.col-red {\n  background-color: red;\n  color: #fff;\n}\n</style>',template:'<div class="source">    <vue-toolbar export>\n      <template v-slot:buttons>\n        <vue-button @click="insertEvent">新增</vue-button>\n        <vue-button @click="getInsertEvent">获取新增</vue-button>\n      </template>\n    </vue-toolbar>\n\n    <vue-xtable\n      border\n      show-footer\n      show-overflow\n      highlight-hover-row\n      ref="xTable"\n      height="400"\n      class="editable-footer"\n      :footer-method="footerMethod"\n      :footer-cell-class-name="footerCellClassName"\n      :data="tableData"\n      :edit-config="{trigger: \'click\', mode: \'row\'}">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="date" title="Date" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" :edit-render="{name: \'input\'}"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){var e=window.MOCK_DATA_LIST.slice(0,20);this.tableData=e},methods:{footerCellClassName:function(e){var n=e.$rowIndex;e.column;if(0===e.columnIndex)return 0===n?"col-blue":"col-red"},footerMethod:function(e){var n=e.columns,t=e.data;return[n.map(function(e,n){return 0===n?"平均":VueUtil.includes(["age"],e.property)?VueUtil.mean(t.map(function(n){return n[e.property]})):null}),n.map(function(e,n){return 0===n?"和值":VueUtil.includes(["age"],e.property)?VueUtil.sum(t.map(function(n){return n[e.property]})):null})]},insertEvent:function(){var e=this;this.$refs.xTable.insert({name:"New name"}).then(function(n){var t=n.row;return e.$refs.xTable.setActiveCell(t,"age")})},getInsertEvent:function(){var e=this.$refs.xTable.getInsertRecords();this.$alert({message:e.length})}}}}],styles:".editable-footer .vxe-footer--column.col-blue {\n  background-color: #2db7f5;\n  color: #fff;\n}\n.editable-footer .vxe-footer--column.col-red {\n  background-color: red;\n  color: #fff;\n}"}},"./demo/XtableDemo/edit/FooterImmediately.vue":
/*!****************************************************!*\
  !*** ./demo/XtableDemo/edit/FooterImmediately.vue ***!
  \****************************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/edit/FooterImmediately",name:"XtableDemo.edit.FooterImmediately",head:{label:"XtableDemo.edit.FooterImmediately.label",description:"XtableDemo.edit.FooterImmediately.description"},samples:[{id:"XtableDemo.edit.FooterImmediately.sample1",label:"XtableDemo.edit.FooterImmediately.sample1.label",description:"XtableDemo.edit.FooterImmediately.sample1.description",code:'<vue-toolbar>\n  <template v-slot:buttons>\n    <vue-button @click="insertEvent">新增</vue-button>\n    <vue-button @click="getInsertEvent">获取新增</vue-button>\n  </template>\n</vue-toolbar>\n\n<vue-xtable\n  border\n  show-footer\n  show-overflow\n  highlight-hover-row\n  ref="xTable"\n  height="400"\n  class="editable-footer"\n  :footer-method="footerMethod"\n  :footer-cell-class-name="footerCellClassName"\n  :data="tableData"\n  :edit-config="{trigger: \'click\', mode: \'row\'}">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="age1" title="Age" :edit-render="{name: \'input\', immediate: true, events: {input: updateFooterEvent}}"></vue-xtable-column>\n  <vue-xtable-column field="num6" title="Num" :edit-render="{name: \'input\', immediate: true, events: {input: updateFooterEvent}}"></vue-xtable-column>\n  <vue-xtable-column field="rate1" title="Rate" :edit-render="{name: \'input\', immediate: true, events: {input: updateFooterEvent}}"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 20)\n    this.tableData = list\n  },\n\n  methods: {\n    footerCellClassName ({ $rowIndex, column, columnIndex }) {\n      if (columnIndex === 0) {\n        if ($rowIndex === 0) {\n          return \'col-blue\'\n        } else {\n          return \'col-red\'\n        }\n      }\n    },\n    // 在值发生改变时更新表尾合计\n    updateFooterEvent (params) {\n      let xTable = this.$refs.xTable\n      xTable.updateFooter()\n    },\n    footerMethod ({ columns, data }) {\n      return [\n        columns.map((column, columnIndex) => {\n          if (columnIndex === 0) {\n            return \'平均\'\n          }\n          if (VueUtil.includes([\'age1\', \'rate1\', \'num6\'], column.property)) {\n            debugger\n            return VueUtil.mean(data.map(data => VueUtil.parseInt(data[column.property] || 0)))\n          }\n          return null\n        }),\n        columns.map((column, columnIndex) => {\n          if (columnIndex === 0) {\n            return \'和值\'\n          }\n          if (VueUtil.includes([\'rate1\', \'num6\'], column.property)) {\n            return VueUtil.sum(data.map( data => VueUtil.parseInt(data[column.property] || 0)))\n          }\n          return null\n        })\n      ]\n    },\n    insertEvent () {\n      let record = {\n        name: \'New name\'\n      }\n      this.$refs.xTable.insert(record)\n        .then(({ row }) => this.$refs.xTable.setActiveCell(row, \'age\'))\n    },\n    getInsertEvent () {\n      let insertRecords = this.$refs.xTable.getInsertRecords()\n      this.$alert({ message: insertRecords.length })\n    }\n  }\n})\n<\/script>\n\n<style>\n.editable-footer .vxe-footer--column.col-blue {\n  background-color: #2db7f5;\n  color: #fff;\n}\n.editable-footer .vxe-footer--column.col-red {\n  background-color: red;\n  color: #fff;\n}\n</style>',template:'<div class="source">    <vue-toolbar>\n      <template v-slot:buttons>\n        <vue-button @click="insertEvent">新增</vue-button>\n        <vue-button @click="getInsertEvent">获取新增</vue-button>\n      </template>\n    </vue-toolbar>\n\n    <vue-xtable\n      border\n      show-footer\n      show-overflow\n      highlight-hover-row\n      ref="xTable"\n      height="400"\n      class="editable-footer"\n      :footer-method="footerMethod"\n      :footer-cell-class-name="footerCellClassName"\n      :data="tableData"\n      :edit-config="{trigger: \'click\', mode: \'row\'}">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="age1" title="Age" :edit-render="{name: \'input\', immediate: true, events: {input: updateFooterEvent}}"></vue-xtable-column>\n      <vue-xtable-column field="num6" title="Num" :edit-render="{name: \'input\', immediate: true, events: {input: updateFooterEvent}}"></vue-xtable-column>\n      <vue-xtable-column field="rate1" title="Rate" :edit-render="{name: \'input\', immediate: true, events: {input: updateFooterEvent}}"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){var e=window.MOCK_DATA_LIST.slice(0,20);this.tableData=e},methods:{footerCellClassName:function(e){var n=e.$rowIndex;e.column;if(0===e.columnIndex)return 0===n?"col-blue":"col-red"},updateFooterEvent:function(e){this.$refs.xTable.updateFooter()},footerMethod:function(e){var n=e.columns,t=e.data;return[n.map(function(e,n){return 0===n?"平均":VueUtil.includes(["age1","rate1","num6"],e.property)?VueUtil.mean(t.map(function(n){return VueUtil.parseInt(n[e.property]||0)})):null}),n.map(function(e,n){return 0===n?"和值":VueUtil.includes(["rate1","num6"],e.property)?VueUtil.sum(t.map(function(n){return VueUtil.parseInt(n[e.property]||0)})):null})]},insertEvent:function(){var e=this;this.$refs.xTable.insert({name:"New name"}).then(function(n){var t=n.row;return e.$refs.xTable.setActiveCell(t,"age")})},getInsertEvent:function(){var e=this.$refs.xTable.getInsertRecords();this.$alert({message:e.length})}}}}],styles:".editable-footer .vxe-footer--column.col-blue {\n  background-color: #2db7f5;\n  color: #fff;\n}\n.editable-footer .vxe-footer--column.col-red {\n  background-color: red;\n  color: #fff;\n}"}},"./demo/XtableDemo/edit/Insert.vue":
/*!*****************************************!*\
  !*** ./demo/XtableDemo/edit/Insert.vue ***!
  \*****************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/edit/Insert",name:"XtableDemo.edit.Insert",head:{label:"XtableDemo.edit.Insert.label",description:"XtableDemo.edit.Insert.description"},samples:[{id:"XtableDemo.edit.Insert.sample1",label:"XtableDemo.edit.Insert.sample1.label",description:"XtableDemo.edit.Insert.sample1.description",code:'<vue-toolbar>\n  <template v-slot:buttons>\n    <vue-button @click="insertEvent()">在第1行插入</vue-button>\n    <vue-button @click="insertEvent(tableData[2])">在第3行插入并激活 Sex 单元格</vue-button>\n    <vue-button @click="insertEvent(-1)">在最后行插入</vue-button>\n    <vue-button @click="getInsertEvent">获取新增</vue-button>\n  </template>\n</vue-toolbar>\n\n<vue-xtable\n  border\n  show-overflow\n  ref="xTable"\n  max-height="400"\n  :data="tableData"\n  :edit-config="{trigger: \'click\', mode: \'cell\'}">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" sortable :edit-render="{name: \'input\', defaultValue: \'默认的名字\'}"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex" :edit-render="{name: \'select\', options: sexList}"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age" sortable :edit-render="{name: \'input\', defaultValue: 18}"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n      sexList: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 4)\n    this.findSexList()\n  },\n\n  methods: {\n    findSexList () {\n      return Vue.http.get(\'/api/conf/sex/list\').then(data => {\n        this.sexList = data.data\n      })\n    },\n    insertEvent (row) {\n      let record = {\n        sex: \'1\'\n      }\n      this.$refs.xTable.insertAt(record, row)\n        .then(({ row }) => this.$refs.xTable.setActiveCell(row, \'sex\'))\n    },\n    getInsertEvent () {\n      let insertRecords = this.$refs.xTable.getInsertRecords()\n      this.$alert({ message: insertRecords.length })\n    }\n  }\n})\n<\/script>',template:'<div class="source">    <vue-toolbar>\n      <template v-slot:buttons>\n        <vue-button @click="insertEvent()">在第1行插入</vue-button>\n        <vue-button @click="insertEvent(tableData[2])">在第3行插入并激活 Sex 单元格</vue-button>\n        <vue-button @click="insertEvent(-1)">在最后行插入</vue-button>\n        <vue-button @click="getInsertEvent">获取新增</vue-button>\n      </template>\n    </vue-toolbar>\n\n    <vue-xtable\n      border\n      show-overflow\n      ref="xTable"\n      max-height="400"\n      :data="tableData"\n      :edit-config="{trigger: \'click\', mode: \'cell\'}">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" sortable :edit-render="{name: \'input\', defaultValue: \'默认的名字\'}"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex" :edit-render="{name: \'select\', options: sexList}"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age" sortable :edit-render="{name: \'input\', defaultValue: 18}"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[],sexList:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,4),this.findSexList()},methods:{findSexList:function(){var e=this;return Vue.http.get("/api/conf/sex/list").then(function(n){e.sexList=n.data})},insertEvent:function(e){var n=this;this.$refs.xTable.insertAt({sex:"1"},e).then(function(e){var t=e.row;return n.$refs.xTable.setActiveCell(t,"sex")})},getInsertEvent:function(){var e=this.$refs.xTable.getInsertRecords();this.$alert({message:e.length})}}}}],styles:""}},"./demo/XtableDemo/edit/Keyboard.vue":
/*!*******************************************!*\
  !*** ./demo/XtableDemo/edit/Keyboard.vue ***!
  \*******************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/edit/Keyboard",name:"XtableDemo.edit.Keyboard",head:{label:"XtableDemo.edit.Keyboard.label",description:"XtableDemo.edit.Keyboard.description"},samples:[{id:"XtableDemo.edit.Keyboard.sample1",label:"XtableDemo.edit.Keyboard.sample1.label",description:"XtableDemo.edit.Keyboard.sample1.description",code:'<vue-xtable\n  border\n  show-overflow\n  height="500"\n  :data="tableData"\n  :mouse-config="{selected: true}"\n  :keyboard-config="{isArrow: true, isDel: true, isTab: true, isEdit: true}"\n  :edit-config="{trigger: \'dblclick\', mode: \'cell\'}">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column type="checkbox" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="date" title="Date"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" :edit-render="{name: \'input\'}"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 50)\n    this.tableData = list\n  },\n\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      border\n      show-overflow\n      height="500"\n      :data="tableData"\n      :mouse-config="{selected: true}"\n      :keyboard-config="{isArrow: true, isDel: true, isTab: true, isEdit: true}"\n      :edit-config="{trigger: \'dblclick\', mode: \'cell\'}">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column type="checkbox" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="date" title="Date"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" :edit-render="{name: \'input\'}"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){var e=window.MOCK_DATA_LIST.slice(0,50);this.tableData=e}}}],styles:""}},"./demo/XtableDemo/edit/Manual.vue":
/*!*****************************************!*\
  !*** ./demo/XtableDemo/edit/Manual.vue ***!
  \*****************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/edit/Manual",name:"XtableDemo.edit.Manual",head:{label:"XtableDemo.edit.Manual.label",description:"XtableDemo.edit.Manual.description"},samples:[{id:"XtableDemo.edit.Manual.sample1",label:"XtableDemo.edit.Manual.sample1.label",description:"XtableDemo.edit.Manual.sample1.description",code:'<vue-xtable\n  ref="xTable"\n  border\n  resizable\n  show-overflow\n  :data="tableData"\n  :edit-config="{trigger: \'manual\', mode: \'row\'}">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="role" title="Role" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex" :edit-render="{name: \'select\', options: sexList}"></vue-xtable-column>\n  <vue-xtable-column field="num6" title="Number" :edit-render="{name: \'input\', attrs: {type: \'number\'}}"></vue-xtable-column>\n  <vue-xtable-column field="date12" title="Date" :edit-render="{name: \'input\', attrs: {type: \'date\'}}"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column title="操作">\n    <template v-slot="scope">\n      <template v-if="$refs.xTable.isActiveByRow(scope.row)">\n        <vue-button @click="saveRowEvent(scope.row)">保存</vue-button>\n        <vue-button @click="cancelRowEvent(scope.row)">取消</vue-button>\n      </template>\n      <template v-else>\n        <vue-button @click="editRowEvent(scope.row)">编辑</vue-button>\n      </template>\n    </template>\n  </vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n      sexList: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\n    this.findSexList()\n  },\n\n  methods: {\n    findSexList () {\n      return Vue.http.get(\'/api/conf/sex/list\').then(data => {\n        this.sexList = data.data;\n      })\n    },\n    editRowEvent (row) {\n      this.$refs.xTable.setActiveRow(row)\n    },\n    saveRowEvent (row) {\n      this.$refs.xTable.clearActived().then(() => {\n        this.$alert({ message: \'success\' })\n      })\n    },\n    cancelRowEvent (row) {\n      this.$refs.xTable.clearActived()\n    }\n  }\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      ref="xTable"\n      border\n      resizable\n      show-overflow\n      :data="tableData"\n      :edit-config="{trigger: \'manual\', mode: \'row\'}">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="role" title="Role" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex" :edit-render="{name: \'select\', options: sexList}"></vue-xtable-column>\n      <vue-xtable-column field="num6" title="Number" :edit-render="{name: \'input\', attrs: {type: \'number\'}}"></vue-xtable-column>\n      <vue-xtable-column field="date12" title="Date" :edit-render="{name: \'input\', attrs: {type: \'date\'}}"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column title="操作">\n        <template v-slot="scope">\n          <template v-if="$refs.xTable.isActiveByRow(scope.row)">\n            <vue-button @click="saveRowEvent(scope.row)">保存</vue-button>\n            <vue-button @click="cancelRowEvent(scope.row)">取消</vue-button>\n          </template>\n          <template v-else>\n            <vue-button @click="editRowEvent(scope.row)">编辑</vue-button>\n          </template>\n        </template>\n      </vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[],sexList:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,6),this.findSexList()},methods:{findSexList:function(){var e=this;return Vue.http.get("/api/conf/sex/list").then(function(n){e.sexList=n.data})},editRowEvent:function(e){this.$refs.xTable.setActiveRow(e)},saveRowEvent:function(e){var n=this;this.$refs.xTable.clearActived().then(function(){n.$alert({message:"success"})})},cancelRowEvent:function(e){this.$refs.xTable.clearActived()}}}}],styles:""}},"./demo/XtableDemo/edit/Menu.vue":
/*!***************************************!*\
  !*** ./demo/XtableDemo/edit/Menu.vue ***!
  \***************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/edit/Menu",name:"XtableDemo.edit.Menu",head:{label:"XtableDemo.edit.Menu.label",description:"XtableDemo.edit.Menu.description"},samples:[{id:"XtableDemo.edit.Menu.sample1",label:"XtableDemo.edit.Menu.sample1.label",description:"XtableDemo.edit.Menu.sample1.description",code:"<vue-toolbar>\n  <template v-slot:buttons>\n    <vue-button @click=\"getInsertEvent\">获取新增</vue-button>\n    <vue-button @click=\"getRemoveEvent\">获取删除</vue-button>\n    <vue-button @click=\"getUpdateEvent\">获取修改</vue-button>\n  </template>\n</vue-toolbar>\n\n<vue-xtable\n  border\n  resizable\n  show-overflow\n  ref=\"xTable\"\n  height=\"400\"\n  :loading=\"loading\"\n  :data=\"tableData\"\n  :context-menu=\"{header: {options: headerMenus}, body: {options: bodyMenus}, visibleMethod:visibleMethod}\"\n  :edit-config=\"{trigger: 'click', mode: 'row', showStatus: true}\"\n  @context-menu-click=\"contextMenuClickEvent\">\n  <vue-xtable-column type=\"index\" width=\"60\"></vue-xtable-column>\n  <vue-xtable-column field=\"name\" title=\"Name\" :edit-render=\"{name: 'input'}\"></vue-xtable-column>\n  <vue-xtable-column field=\"sex\" title=\"Sex\" :edit-render=\"{name: 'input'}\"></vue-xtable-column>\n  <vue-xtable-column field=\"age\" title=\"Age\" :edit-render=\"{name: 'input'}\"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      loading: false,\n      tableData: [],\n      headerMenus: [\n        [\n          {\n            code: 'hideColumn',\n            name: '隐藏列',\n            disabled: false\n          },\n          {\n            code: 'showAllColumn',\n            name: '取消所有隐藏列',\n            disabled: false\n          }\n        ]\n      ],\n      bodyMenus: [\n        [\n          {\n            code: 'copy',\n            name: '复制',\n            prefixIcon: 'fa fa-copy',\n            disabled: false\n          },\n          {\n            code: 'reload',\n            name: '刷新',\n            disabled: false\n          },\n          {\n            code: 'insertAt',\n            name: '插入',\n            disabled: false\n          },\n          {\n            code: 'remove',\n            name: '删除',\n            disabled: false\n          },\n          {\n            code: 'save',\n            name: '保存',\n            prefixIcon: 'fa fa-save',\n            disabled: false\n          }\n        ]\n      ],\n\n    }\n  },\n  created () {\n    this.findList()\n  },\n\n  methods: {\n    findList () {\n      this.loading = true\n      this.tableData = []\n      setTimeout(() => {\n        this.tableData = window.MOCK_DATA_LIST.slice(0, 5)\n        this.loading = false\n      }, 500)\n    },\n    insertEvent (row, column) {\n      let xTable = this.$refs.xTable\n      xTable.insertAt(null, row || -1)\n        .then(({ row }) => xTable.setActiveCell(row, column ? column.property : 'name'))\n    },\n    visibleMethod ({ options, column }) {\n      let isDisabled = !column\n      options.forEach(list => {\n        list.forEach(item => {\n          item.disabled = isDisabled\n        })\n      })\n      return true\n    },\n    contextMenuClickEvent ({ menu, row, column }) {\n      let xTable = this.$refs.xTable\n      switch (menu.code) {\n        case 'hideColumn':\n          xTable.hideColumn(column)\n          break\n        case 'showAllColumn':\n          xTable.resetCustoms()\n          break\n        case 'copy':\n          if (VueUtil.clipboard.copy(row[column.property])) {\n            this.$notify.success({ message:'已复制到剪贴板！'});\n          }\n          break\n        case 'reload':\n          this.findList()\n          break\n        case 'insertAt':\n          this.insertEvent(row, column)\n          break\n        case 'remove':\n          xTable.remove(row)\n          break\n        case 'save':\n          this.$notify.success({ message:'保存成功'});\n          this.findList()\n          break\n      }\n    },\n    getInsertEvent () {\n      let insertRecords = this.$refs.xTable.getInsertRecords()\n      this.$alert({ message: insertRecords.length })\n    },\n    getRemoveEvent () {\n      let removeRecords = this.$refs.xTable.getRemoveRecords()\n      this.$alert({ message: removeRecords.length })\n    },\n    getUpdateEvent () {\n      let updateRecords = this.$refs.xTable.getUpdateRecords()\n      this.$alert({ message: updateRecords.length })\n    }\n  }\n})\n<\/script>",template:'<div class="source">    <vue-toolbar>\n      <template v-slot:buttons>\n        <vue-button @click="getInsertEvent">获取新增</vue-button>\n        <vue-button @click="getRemoveEvent">获取删除</vue-button>\n        <vue-button @click="getUpdateEvent">获取修改</vue-button>\n      </template>\n    </vue-toolbar>\n\n    <vue-xtable\n      border\n      resizable\n      show-overflow\n      ref="xTable"\n      height="400"\n      :loading="loading"\n      :data="tableData"\n      :context-menu="{header: {options: headerMenus}, body: {options: bodyMenus}, visibleMethod:visibleMethod}"\n      :edit-config="{trigger: \'click\', mode: \'row\', showStatus: true}"\n      @context-menu-click="contextMenuClickEvent">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age" :edit-render="{name: \'input\'}"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{loading:!1,tableData:[],headerMenus:[[{code:"hideColumn",name:"隐藏列",disabled:!1},{code:"showAllColumn",name:"取消所有隐藏列",disabled:!1}]],bodyMenus:[[{code:"copy",name:"复制",prefixIcon:"fa fa-copy",disabled:!1},{code:"reload",name:"刷新",disabled:!1},{code:"insertAt",name:"插入",disabled:!1},{code:"remove",name:"删除",disabled:!1},{code:"save",name:"保存",prefixIcon:"fa fa-save",disabled:!1}]]}},created:function(){this.findList()},methods:{findList:function(){var e=this;this.loading=!0,this.tableData=[],setTimeout(function(){e.tableData=window.MOCK_DATA_LIST.slice(0,5),e.loading=!1},500)},insertEvent:function(e,n){var t=this.$refs.xTable;t.insertAt(null,e||-1).then(function(e){var l=e.row;return t.setActiveCell(l,n?n.property:"name")})},visibleMethod:function(e){var n=e.options,t=!e.column;return n.forEach(function(e){e.forEach(function(e){e.disabled=t})}),!0},contextMenuClickEvent:function(e){var n=e.menu,t=e.row,l=e.column,o=this.$refs.xTable;switch(n.code){case"hideColumn":o.hideColumn(l);break;case"showAllColumn":o.resetCustoms();break;case"copy":VueUtil.clipboard.copy(t[l.property])&&this.$notify.success({message:"已复制到剪贴板！"});break;case"reload":this.findList();break;case"insertAt":this.insertEvent(t,l);break;case"remove":o.remove(t);break;case"save":this.$notify.success({message:"保存成功"}),this.findList()}},getInsertEvent:function(){var e=this.$refs.xTable.getInsertRecords();this.$alert({message:e.length})},getRemoveEvent:function(){var e=this.$refs.xTable.getRemoveRecords();this.$alert({message:e.length})},getUpdateEvent:function(){var e=this.$refs.xTable.getUpdateRecords();this.$alert({message:e.length})}}}}],styles:""}},"./demo/XtableDemo/edit/Remove.vue":
/*!*****************************************!*\
  !*** ./demo/XtableDemo/edit/Remove.vue ***!
  \*****************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/edit/Remove",name:"XtableDemo.edit.Remove",head:{label:"XtableDemo.edit.Remove.label",description:"XtableDemo.edit.Remove.description"},samples:[{id:"XtableDemo.edit.Remove.sample1",label:"XtableDemo.edit.Remove.sample1.label",description:"XtableDemo.edit.Remove.sample1.description",code:'<vue-toolbar>\n  <template v-slot:buttons>\n    <vue-button @click="insertEvent()">在第1行插入</vue-button>\n    <vue-button @click="$refs.xTable.remove(tableData[1])">删除第2行</vue-button>\n    <vue-button @click="$refs.xTable.removeSelecteds()">删除选中</vue-button>\n    <vue-button @click="getRemoveEvent">获取删除</vue-button>\n    <vue-button @click="getSelectionEvent">获取选中</vue-button>\n  </template>\n</vue-toolbar>\n\n<vue-xtable\n  ref="xTable"\n  border\n  show-overflow\n  :data="tableData"\n  :edit-config="{trigger: \'click\', mode: \'cell\'}">\n  <vue-xtable-column type="checkbox" width="60"></vue-xtable-column>\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age" :edit-render="{name: \'input\'}"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 6)\n    this.tableData = list\n  },\n\n  methods: {\n    insertEvent (row) {\n      let record = {\n        sex: \'1\'\n      }\n      this.$refs.xTable.insertAt(record, row)\n        .then(({ row }) => this.$refs.xTable.setActiveCell(row, \'sex\'))\n    },\n    getRemoveEvent () {\n      let removeRecords = this.$refs.xTable.getRemoveRecords()\n      this.$alert({ message: removeRecords.length })\n    },\n    getSelectionEvent () {\n      let removeRecords = this.$refs.xTable.getSelectRecords()\n      this.$alert({ message: removeRecords.length })\n    }\n  }\n})\n<\/script>',template:'<div class="source">    <vue-toolbar>\n      <template v-slot:buttons>\n        <vue-button @click="insertEvent()">在第1行插入</vue-button>\n        <vue-button @click="$refs.xTable.remove(tableData[1])">删除第2行</vue-button>\n        <vue-button @click="$refs.xTable.removeSelecteds()">删除选中</vue-button>\n        <vue-button @click="getRemoveEvent">获取删除</vue-button>\n        <vue-button @click="getSelectionEvent">获取选中</vue-button>\n      </template>\n    </vue-toolbar>\n\n    <vue-xtable\n      ref="xTable"\n      border\n      show-overflow\n      :data="tableData"\n      :edit-config="{trigger: \'click\', mode: \'cell\'}">\n      <vue-xtable-column type="checkbox" width="60"></vue-xtable-column>\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age" :edit-render="{name: \'input\'}"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){var e=window.MOCK_DATA_LIST.slice(0,6);this.tableData=e},methods:{insertEvent:function(e){var n=this;this.$refs.xTable.insertAt({sex:"1"},e).then(function(e){var t=e.row;return n.$refs.xTable.setActiveCell(t,"sex")})},getRemoveEvent:function(){var e=this.$refs.xTable.getRemoveRecords();this.$alert({message:e.length})},getSelectionEvent:function(){var e=this.$refs.xTable.getSelectRecords();this.$alert({message:e.length})}}}}],styles:""}},"./demo/XtableDemo/edit/Revert.vue":
/*!*****************************************!*\
  !*** ./demo/XtableDemo/edit/Revert.vue ***!
  \*****************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/edit/Revert",name:"XtableDemo.edit.Revert",head:{label:"XtableDemo.edit.Revert.label",description:"XtableDemo.edit.Revert.description"},samples:[{id:"XtableDemo.edit.Revert.sample1",label:"XtableDemo.edit.Revert.sample1.label",description:"XtableDemo.edit.Revert.sample1.description",code:'<vue-toolbar>\n  <template v-slot:buttons>\n    <vue-button @click="$refs.xTable.revertData()">还原全部</vue-button>\n    <vue-button @click="$refs.xTable.removeSelecteds()">删除选中</vue-button>\n  </template>\n</vue-toolbar>\n\n<vue-xtable\n  ref="xTable"\n  border\n  show-overflow\n  :data="tableData"\n  :edit-config="{trigger: \'click\', mode: \'cell\', showStatus: true}">\n  <vue-xtable-column type="checkbox" width="60"></vue-xtable-column>\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column title="操作">\n    <template v-slot="scope">\n      <vue-button @click="$refs.xTable.revertData(scope.row)">还原</vue-button>\n    </template>\n  </vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 6)\n    this.tableData = list\n  },\n\n})\n<\/script>',template:'<div class="source">    <vue-toolbar>\n      <template v-slot:buttons>\n        <vue-button @click="$refs.xTable.revertData()">还原全部</vue-button>\n        <vue-button @click="$refs.xTable.removeSelecteds()">删除选中</vue-button>\n      </template>\n    </vue-toolbar>\n\n    <vue-xtable\n      ref="xTable"\n      border\n      show-overflow\n      :data="tableData"\n      :edit-config="{trigger: \'click\', mode: \'cell\', showStatus: true}">\n      <vue-xtable-column type="checkbox" width="60"></vue-xtable-column>\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column title="操作">\n        <template v-slot="scope">\n          <vue-button @click="$refs.xTable.revertData(scope.row)">还原</vue-button>\n        </template>\n      </vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){var e=window.MOCK_DATA_LIST.slice(0,6);this.tableData=e}}}],styles:""}},"./demo/XtableDemo/edit/RowDisable.vue":
/*!*********************************************!*\
  !*** ./demo/XtableDemo/edit/RowDisable.vue ***!
  \*********************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/edit/RowDisable",name:"XtableDemo.edit.RowDisable",head:{label:"XtableDemo.edit.RowDisable.label",description:"XtableDemo.edit.RowDisable.description"},samples:[{id:"XtableDemo.edit.RowDisable.sample1",label:"XtableDemo.edit.RowDisable.sample1.label",description:"XtableDemo.edit.RowDisable.sample1.description",code:'<vue-xtable\n  border\n  show-overflow\n  height="400"\n  :data="tableData"\n  :edit-config="{trigger: \'click\', mode: \'row\', activeMethod: activeRowMethod}"\n  @edit-disabled="editDisabledEvent">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="date12" title="Date" :edit-render="{name: \'input\'}"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 20)\n  },\n\n  methods: {\n    activeRowMethod ({ row, rowIndex }) {\n      return rowIndex !== 1\n    },\n    editDisabledEvent ({ row, column }) {\n      this.$alert({ message: \'禁止编辑\' })\n    },\n  }\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      border\n      show-overflow\n      height="400"\n      :data="tableData"\n      :edit-config="{trigger: \'click\', mode: \'row\', activeMethod: activeRowMethod}"\n      @edit-disabled="editDisabledEvent">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="date12" title="Date" :edit-render="{name: \'input\'}"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,20)},methods:{activeRowMethod:function(e){e.row;return 1!==e.rowIndex},editDisabledEvent:function(e){e.row,e.column;this.$alert({message:"禁止编辑"})}}}},{id:"XtableDemo.edit.RowDisable.sample2",label:"XtableDemo.edit.RowDisable.sample2.label",description:"XtableDemo.edit.RowDisable.sample2.description",code:'<vue-xtable\n  border\n  show-overflow\n  height="400"\n  :data="tableData"\n  :edit-config="{trigger: \'click\', mode: \'row\'}"\n  @edit-actived="editActivedEvent">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" :edit-render="{name: \'input\', attrs: {disabled: isNameDisabled}}"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age" :edit-render="{name: \'input\', attrs: {disabled: isAgeDisabled}}"></vue-xtable-column>\n  <vue-xtable-column field="date12" title="Date" :edit-render="{name: \'input\'}"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      isNameDisabled: false,\n      isAgeDisabled: false,\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 20)\n  },\n\n  methods: {\n    editActivedEvent ({ row, rowIndex }) {\n      // name 为 \'x\' 开头的列禁止编辑\n      this.isNameDisabled = (row.name || \'\').indexOf(\'a\') === 0\n      // age 小于 27 的列禁止编辑\n      this.isAgeDisabled = row.age < 27\n    }\n  }\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      border\n      show-overflow\n      height="400"\n      :data="tableData"\n      :edit-config="{trigger: \'click\', mode: \'row\'}"\n      @edit-actived="editActivedEvent">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" :edit-render="{name: \'input\', attrs: {disabled: isNameDisabled}}"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age" :edit-render="{name: \'input\', attrs: {disabled: isAgeDisabled}}"></vue-xtable-column>\n      <vue-xtable-column field="date12" title="Date" :edit-render="{name: \'input\'}"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{isNameDisabled:!1,isAgeDisabled:!1,tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,20)},methods:{editActivedEvent:function(e){var n=e.row;e.rowIndex;this.isNameDisabled=0===(n.name||"").indexOf("a"),this.isAgeDisabled=n.age<27}}}}],styles:""}},"./demo/XtableDemo/edit/RowValid.vue":
/*!*******************************************!*\
  !*** ./demo/XtableDemo/edit/RowValid.vue ***!
  \*******************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/edit/RowValid",name:"XtableDemo.edit.RowValid",head:{label:"XtableDemo.edit.RowValid.label",description:"XtableDemo.edit.RowValid.description"},samples:[{id:"XtableDemo.edit.RowValid.sample1",label:"XtableDemo.edit.RowValid.sample1.label",description:"XtableDemo.edit.RowValid.sample1.description",code:'<vue-toolbar>\n  <template v-slot:buttons>\n    <vue-button @click="insertEvent">新增</vue-button>\n    <vue-button @click="$refs.xTable.removeSelecteds()">删除选中</vue-button>\n    <vue-button @click="validEvent">校验</vue-button>\n    <vue-button @click="fullValidEvent">完整校验</vue-button>\n    <vue-button @click="selectValidEvent">选中校验</vue-button>\n    <vue-button @click="getSelectEvent">获取选中</vue-button>\n    <vue-button @click="getInsertEvent">获取新增</vue-button>\n    <vue-button @click="getRemoveEvent">获取删除</vue-button>\n    <vue-button @click="getUpdateEvent">获取修改</vue-button>\n  </template>\n</vue-toolbar>\n\n<vue-xtable\n  ref="xTable"\n  border\n  show-overflow\n  :data="tableData"\n  :edit-rules="validRules"\n  :edit-config="{trigger: \'click\', mode: \'row\', showStatus: true}">\n  <vue-xtable-column type="checkbox" width="60"></vue-xtable-column>\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="date" title="Date" :edit-render="{name: \'input\'}"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n      validRules: {\n        name: [\n          { required: true, message: \'名称必须填写\' },\n          { min: 3, max: 50, message: \'名称长度在 3 到 50 个字符\' }\n        ],\n        sex: [\n          { required: true, message: \'性别必须填写\' }\n        ]\n      },\n\n    }\n  },\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 6)\n    this.tableData = list\n  },\n\n  methods: {\n    validEvent () {\n      this.$refs.xTable.validate(valid => {\n        if (valid) {\n          this.$notify.success({ message:\'校验成功！\'});\n        } else {\n          this.$notify.error({ message:\'校验不通过！\'});\n        }\n      })\n    },\n    fullValidEvent () {\n      this.$refs.xTable.fullValidate((valid, errMap) => {\n        if (valid) {\n          this.$notify.success({ message:\'校验成功！\'});\n        } else {\n          let msgList = []\n          Object.values(errMap).forEach(errList => {\n            errList.forEach(params => {\n              let { rowIndex, column, rules } = params\n              rules.forEach(rule => {\n                msgList.push(`第 ${rowIndex} 行 ${column.title} 校验错误：${rule.message}`)\n              })\n            })\n          })\n\n          var h = this.$createElement;\n          this.$alert({\n            type: "error",\n            message: h(\'div\',[msgList.map(function (msg) {\n              return h("div", [msg]);\n            })])\n          });\n        }\n      })\n    },\n    selectValidEvent () {\n      let selectRecords = this.$refs.xTable.getSelectRecords()\n      if (selectRecords.length > 0) {\n        this.$refs.xTable.validate(selectRecords, valid => {\n          if (valid) {\n            this.$notify.success({ message:\'校验成功！\'});\n          } else {\n            this.$notify.error({ message:\'校验不通过！\'});\n          }\n        })\n      } else {\n        this.$notify.warning({ message:\'未选中数据！\'});\n      }\n    },\n    insertEvent () {\n      this.$refs.xTable.insert().then(({ row }) => {\n        // 插入一条数据并触发校验\n        this.$refs.xTable.validate(row, valid => {\n          if (valid) {\n\n          }\n        })\n      })\n    },\n    getSelectEvent () {\n      let selectRecords = this.$refs.xTable.getSelectRecords()\n      this.$alert({ message: selectRecords.length })\n    },\n    getInsertEvent () {\n      let insertRecords = this.$refs.xTable.getInsertRecords()\n      this.$alert({ message: insertRecords.length })\n    },\n    getRemoveEvent () {\n      let removeRecords = this.$refs.xTable.getRemoveRecords()\n      this.$alert({ message: removeRecords.length })\n    },\n    getUpdateEvent () {\n      let updateRecords = this.$refs.xTable.getUpdateRecords()\n      this.$alert({ message: updateRecords.length })\n    }\n  }\n})\n<\/script>',template:'<div class="source">    <vue-toolbar>\n      <template v-slot:buttons>\n        <vue-button @click="insertEvent">新增</vue-button>\n        <vue-button @click="$refs.xTable.removeSelecteds()">删除选中</vue-button>\n        <vue-button @click="validEvent">校验</vue-button>\n        <vue-button @click="fullValidEvent">完整校验</vue-button>\n        <vue-button @click="selectValidEvent">选中校验</vue-button>\n        <vue-button @click="getSelectEvent">获取选中</vue-button>\n        <vue-button @click="getInsertEvent">获取新增</vue-button>\n        <vue-button @click="getRemoveEvent">获取删除</vue-button>\n        <vue-button @click="getUpdateEvent">获取修改</vue-button>\n      </template>\n    </vue-toolbar>\n\n    <vue-xtable\n      ref="xTable"\n      border\n      show-overflow\n      :data="tableData"\n      :edit-rules="validRules"\n      :edit-config="{trigger: \'click\', mode: \'row\', showStatus: true}">\n      <vue-xtable-column type="checkbox" width="60"></vue-xtable-column>\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="date" title="Date" :edit-render="{name: \'input\'}"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[],validRules:{name:[{required:!0,message:"名称必须填写"},{min:3,max:50,message:"名称长度在 3 到 50 个字符"}],sex:[{required:!0,message:"性别必须填写"}]}}},created:function(){var e=window.MOCK_DATA_LIST.slice(0,6);this.tableData=e},methods:{validEvent:function(){var e=this;this.$refs.xTable.validate(function(n){n?e.$notify.success({message:"校验成功！"}):e.$notify.error({message:"校验不通过！"})})},fullValidEvent:function(){var e=this;this.$refs.xTable.fullValidate(function(n,t){if(n)e.$notify.success({message:"校验成功！"});else{var l=[];Object.values(t).forEach(function(e){e.forEach(function(e){var n=e.rowIndex,t=e.column;e.rules.forEach(function(e){l.push("第 ".concat(n," 行 ").concat(t.title," 校验错误：").concat(e.message))})})});var o=e.$createElement;e.$alert({type:"error",message:o("div",[l.map(function(e){return o("div",[e])})])})}})},selectValidEvent:function(){var e=this,n=this.$refs.xTable.getSelectRecords();n.length>0?this.$refs.xTable.validate(n,function(n){n?e.$notify.success({message:"校验成功！"}):e.$notify.error({message:"校验不通过！"})}):this.$notify.warning({message:"未选中数据！"})},insertEvent:function(){var e=this;this.$refs.xTable.insert().then(function(n){var t=n.row;e.$refs.xTable.validate(t,function(e){})})},getSelectEvent:function(){var e=this.$refs.xTable.getSelectRecords();this.$alert({message:e.length})},getInsertEvent:function(){var e=this.$refs.xTable.getInsertRecords();this.$alert({message:e.length})},getRemoveEvent:function(){var e=this.$refs.xTable.getRemoveRecords();this.$alert({message:e.length})},getUpdateEvent:function(){var e=this.$refs.xTable.getUpdateRecords();this.$alert({message:e.length})}}}}],styles:""}},"./demo/XtableDemo/edit/Select.vue":
/*!*****************************************!*\
  !*** ./demo/XtableDemo/edit/Select.vue ***!
  \*****************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/edit/Select",name:"XtableDemo.edit.Select",head:{label:"XtableDemo.edit.Select.label",description:"XtableDemo.edit.Select.description"},samples:[{id:"XtableDemo.edit.Select.sample1",label:"XtableDemo.edit.Select.sample1.label",description:"XtableDemo.edit.Select.sample1.description",code:"<vue-xtable\n  border\n  resizable\n  show-overflow\n  :data=\"tableData\"\n  :edit-config=\"{trigger: 'click', mode: 'cell'}\">\n  <vue-xtable-column type=\"index\" width=\"60\"></vue-xtable-column>\n  <vue-xtable-column field=\"name\" title=\"Name\" :edit-render=\"{name: 'input', autoselect: true}\"></vue-xtable-column>\n  <vue-xtable-column field=\"sex5\" title=\"Sex\" :edit-render=\"{name: 'select', optionGroups: sexGriupList}\"></vue-xtable-column>\n  <vue-xtable-column field=\"date13\" title=\"Date\" :edit-render=\"{name: 'input', attrs: {type: 'date'}, autoselect: true}\"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n      sexGriupList: [\n        {\n          label: '第一分组',\n          options: [\n            {\n              value: '1',\n              label: '男'\n            }\n          ]\n        },\n        {\n          label: '第二分组',\n          options: [\n            {\n              value: '0',\n              label: '女'\n            }\n          ]\n        },\n        {\n          label: '其他',\n          options: [\n            {\n              value: '',\n              label: '无'\n            }\n          ]\n        }\n      ],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\n  },\n\n})\n<\/script>",template:'<div class="source">    <vue-xtable\n      border\n      resizable\n      show-overflow\n      :data="tableData"\n      :edit-config="{trigger: \'click\', mode: \'cell\'}">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" :edit-render="{name: \'input\', autoselect: true}"></vue-xtable-column>\n      <vue-xtable-column field="sex5" title="Sex" :edit-render="{name: \'select\', optionGroups: sexGriupList}"></vue-xtable-column>\n      <vue-xtable-column field="date13" title="Date" :edit-render="{name: \'input\', attrs: {type: \'date\'}, autoselect: true}"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[],sexGriupList:[{label:"第一分组",options:[{value:"1",label:"男"}]},{label:"第二分组",options:[{value:"0",label:"女"}]},{label:"其他",options:[{value:"",label:"无"}]}]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,6)}}}],styles:""}},"./demo/XtableDemo/edit/Span.vue":
/*!***************************************!*\
  !*** ./demo/XtableDemo/edit/Span.vue ***!
  \***************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/edit/Span",name:"XtableDemo.edit.Span",head:{label:"XtableDemo.edit.Span.label",description:"XtableDemo.edit.Span.description"},samples:[{id:"XtableDemo.edit.Span.sample1",label:"XtableDemo.edit.Span.sample1.label",description:"XtableDemo.edit.Span.sample1.description",code:"<vue-toolbar>\n  <template v-slot:buttons>\n    <vue-button @click=\"insertEvent\">新增</vue-button>\n    <vue-button @click=\"$refs.xTable.removeSelecteds()\">删除选中</vue-button>\n  </template>\n</vue-toolbar>\n\n<vue-xtable\n  border\n  ref=\"xTable\"\n  height=\"500\"\n  :loading=\"loading\"\n  :span-method=\"rowspanMethod\"\n  :data=\"tableData\"\n  :edit-rules=\"validRules\"\n  :mouse-config=\"{selected: true}\"\n  :keyboard-config=\"{isArrow: true, isDel: true, isTab: true, isEdit: true}\"\n  :edit-config=\"{trigger: 'click', mode: 'cell'}\">\n  <vue-xtable-column type=\"checkbox\" width=\"60\"></vue-xtable-column>\n  <vue-xtable-column field=\"key\" title=\"Key\" :edit-render=\"{name: 'input', props: {placeholder: '请输入键值'}}\"></vue-xtable-column>\n  <vue-xtable-column field=\"name\" title=\"Translate\" :edit-render=\"{name: 'input', props: {placeholder: '请输入翻译的内容'}}\"></vue-xtable-column>\n  <vue-xtable-column field=\"language\" title=\"Language\" :edit-render=\"{name: 'select', options: optionList}\"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      loading: false,\n      tableData: [],\n      optionList: [\n        { label: '--请选择--', value: null },\n        { label: '中文', value: 'zh_CN' },\n        { label: 'English', value: 'en_US' },\n        { label: 'Español', value: 'es' },\n        { label: 'Français', value: 'fr_FR' }\n      ],\n      validRules: {\n        key: [\n          { required: true, message: '键值必须填写' }\n        ],\n        name: [\n          { required: true, message: '翻译内容必须填写' }\n        ],\n        language: [\n          { required: true, message: '语言类型必须填写' }\n        ]\n      },\n\n    }\n  },\n  created () {\n    this.findList()\n  },\n\n  methods: {\n    findList () {\n      this.loading = true\n      Vue.http.get('/api/i18n/list', { sort: 'key', order: 'asc' }).then(data => {\n        this.tableData = data.data\n        this.loading = false\n      })\n    },\n    insertEvent () {\n      let record = {}\n      this.$refs.xTable.insert(record)\n        .then(({ row }) => this.$refs.xTable.setActiveCell(row, 'key'))\n    },\n    // 通用行合并函数（将相同多列数据合并为一行）\n    rowspanMethod ({ row, $rowIndex, column, data }) {\n      let fields = ['key']\n      let cellValue = row[column.property]\n      if (cellValue && VueUtil.includes(fields, column.property)) {\n        let prevRow = data[$rowIndex - 1]\n        let nextRow = data[$rowIndex + 1]\n        if (prevRow && prevRow[column.property] === cellValue) {\n          return { rowspan: 0, colspan: 0 }\n        } else {\n          let countRowspan = 1\n          while (nextRow && nextRow[column.property] === cellValue) {\n            nextRow = data[++countRowspan + $rowIndex]\n          }\n          if (countRowspan > 1) {\n            return { rowspan: countRowspan, colspan: 1 }\n          }\n        }\n      }\n    }\n  }\n})\n<\/script>",template:'<div class="source">    <vue-toolbar>\n      <template v-slot:buttons>\n        <vue-button @click="insertEvent">新增</vue-button>\n        <vue-button @click="$refs.xTable.removeSelecteds()">删除选中</vue-button>\n      </template>\n    </vue-toolbar>\n\n    <vue-xtable\n      border\n      ref="xTable"\n      height="500"\n      :loading="loading"\n      :span-method="rowspanMethod"\n      :data="tableData"\n      :edit-rules="validRules"\n      :mouse-config="{selected: true}"\n      :keyboard-config="{isArrow: true, isDel: true, isTab: true, isEdit: true}"\n      :edit-config="{trigger: \'click\', mode: \'cell\'}">\n      <vue-xtable-column type="checkbox" width="60"></vue-xtable-column>\n      <vue-xtable-column field="key" title="Key" :edit-render="{name: \'input\', props: {placeholder: \'请输入键值\'}}"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Translate" :edit-render="{name: \'input\', props: {placeholder: \'请输入翻译的内容\'}}"></vue-xtable-column>\n      <vue-xtable-column field="language" title="Language" :edit-render="{name: \'select\', options: optionList}"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{loading:!1,tableData:[],optionList:[{label:"--请选择--",value:null},{label:"中文",value:"zh_CN"},{label:"English",value:"en_US"},{label:"Español",value:"es"},{label:"Français",value:"fr_FR"}],validRules:{key:[{required:!0,message:"键值必须填写"}],name:[{required:!0,message:"翻译内容必须填写"}],language:[{required:!0,message:"语言类型必须填写"}]}}},created:function(){this.findList()},methods:{findList:function(){var e=this;this.loading=!0,Vue.http.get("/api/i18n/list",{sort:"key",order:"asc"}).then(function(n){e.tableData=n.data,e.loading=!1})},insertEvent:function(){var e=this;this.$refs.xTable.insert({}).then(function(n){var t=n.row;return e.$refs.xTable.setActiveCell(t,"key")})},rowspanMethod:function(e){var n=e.row,t=e.$rowIndex,l=e.column,o=e.data,a=n[l.property];if(a&&VueUtil.includes(["key"],l.property)){var i=o[t-1],u=o[t+1];if(i&&i[l.property]===a)return{rowspan:0,colspan:0};for(var r=1;u&&u[l.property]===a;)u=o[++r+t];if(r>1)return{rowspan:r,colspan:1}}}}}}],styles:""}},"./demo/XtableDemo/edit/Status.vue":
/*!*****************************************!*\
  !*** ./demo/XtableDemo/edit/Status.vue ***!
  \*****************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/edit/Status",name:"XtableDemo.edit.Status",head:{label:"XtableDemo.edit.Status.label",description:"XtableDemo.edit.Status.description"},samples:[{id:"XtableDemo.edit.Status.sample1",label:"XtableDemo.edit.Status.sample1.label",description:"XtableDemo.edit.Status.sample1.description",code:'<vue-toolbar>\n  <template v-slot:buttons>\n    <vue-button @click="insertEvent">新增</vue-button>\n    <vue-button @click="$refs.xTable.removeSelecteds()">删除选中</vue-button>\n    <vue-button @click="getInsertEvent">获取新增</vue-button>\n    <vue-button @click="getRemoveEvent">获取删除</vue-button>\n    <vue-button @click="getUpdateEvent">获取修改</vue-button>\n  </template>\n</vue-toolbar>\n\n<vue-xtable\n  border\n  show-overflow\n  ref="xTable"\n  :data="tableData"\n  :edit-config="{trigger: \'click\', mode: \'cell\', showStatus: true}">\n  <vue-xtable-column type="checkbox" width="60"></vue-xtable-column>\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="date3" title="Date" formatter="formatDate"></vue-xtable-column>\n  <vue-xtable-column title="操作" width="200">\n    <template v-slot="scope">\n      <template v-if="!scope.row.date3">\n        <vue-button @click="saveEvent2(scope.row)" :loading="scope.row.loading">更新并替换新数据</vue-button>\n      </template>\n      <template v-else-if="scope.rowIndex % 2 === 0">\n        <vue-button @click="saveEvent(scope.row)" :loading="scope.row.loading">更新行数据</vue-button>\n      </template>\n      <template v-else>\n        <vue-button type="primary" @click="saveEvent(scope.row, \'name\')" :loading="scope.row.loading">更新 Name 列</vue-button>\n      </template>\n    </template>\n  </vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\n  },\n\n  methods: {\n    insertEvent () {\n      this.$refs.xTable.insert()\n        .then(({ row }) => this.$refs.xTable.setActiveCell(row, \'name\'))\n    },\n    saveEvent (row, field) {\n      let xTable = this.$refs.xTable\n      if (xTable.isUpdateByRow(row)) {\n        row.loading = true\n        this.submitSave(row).then(data => {\n          // 局部保存，并将行数据恢复到初始状态（如果 record 为空则不改动行数据，只恢复状态）\n          xTable.reloadRow(row, null, field)\n          this.$notify.success({ message:\'保存成功！\'});\n          row.loading = false\n        })\n      } else {\n        this.$notify.info({ message:\'数据未改动！\'});\n      }\n    },\n    saveEvent2 (row, field) {\n      let xTable = this.$refs.xTable\n      if (xTable.isUpdateByRow(row)) {\n        row.loading = true\n        this.submitSave(row).then(data => {\n          // 局部保存，并更新本地数据\n          xTable.reloadRow(row, data, field)\n          this.$notify.success({ message:\'保存成功！\'});\n          row.loading = false\n        })\n      } else {\n        this.$notify.info({ message:\'数据未改动！\'});\n      }\n    },\n    submitSave (row) {\n      return new Promise(resolve => {\n        let rest = {\n          date3: VueUtil.formatDate(new Date())\n        }\n        if (row.name) {\n          rest.name = row.name\n        }\n        if (row.sex) {\n          rest.sex = row.sex\n        }\n        setTimeout(() => resolve(rest), 500)\n      })\n    },\n    getInsertEvent () {\n      let insertRecords = this.$refs.xTable.getInsertRecords()\n      this.$alert({ message: insertRecords.length })\n    },\n    getRemoveEvent () {\n      let removeRecords = this.$refs.xTable.getRemoveRecords()\n      this.$alert({ message: removeRecords.length })\n    },\n    getUpdateEvent () {\n      let updateRecords = this.$refs.xTable.getUpdateRecords()\n      this.$alert({ message: updateRecords.length })\n    }\n  }\n})\n<\/script>',template:'<div class="source">    <vue-toolbar>\n      <template v-slot:buttons>\n        <vue-button @click="insertEvent">新增</vue-button>\n        <vue-button @click="$refs.xTable.removeSelecteds()">删除选中</vue-button>\n        <vue-button @click="getInsertEvent">获取新增</vue-button>\n        <vue-button @click="getRemoveEvent">获取删除</vue-button>\n        <vue-button @click="getUpdateEvent">获取修改</vue-button>\n      </template>\n    </vue-toolbar>\n\n    <vue-xtable\n      border\n      show-overflow\n      ref="xTable"\n      :data="tableData"\n      :edit-config="{trigger: \'click\', mode: \'cell\', showStatus: true}">\n      <vue-xtable-column type="checkbox" width="60"></vue-xtable-column>\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="date3" title="Date" formatter="formatDate"></vue-xtable-column>\n      <vue-xtable-column title="操作" width="200">\n        <template v-slot="scope">\n          <template v-if="!scope.row.date3">\n            <vue-button @click="saveEvent2(scope.row)" :loading="scope.row.loading">更新并替换新数据</vue-button>\n          </template>\n          <template v-else-if="scope.rowIndex % 2 === 0">\n            <vue-button @click="saveEvent(scope.row)" :loading="scope.row.loading">更新行数据</vue-button>\n          </template>\n          <template v-else>\n            <vue-button type="primary" @click="saveEvent(scope.row, \'name\')" :loading="scope.row.loading">更新 Name 列</vue-button>\n          </template>\n        </template>\n      </vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,6)},methods:{insertEvent:function(){var e=this;this.$refs.xTable.insert().then(function(n){var t=n.row;return e.$refs.xTable.setActiveCell(t,"name")})},saveEvent:function(e,n){var t=this,l=this.$refs.xTable;l.isUpdateByRow(e)?(e.loading=!0,this.submitSave(e).then(function(o){l.reloadRow(e,null,n),t.$notify.success({message:"保存成功！"}),e.loading=!1})):this.$notify.info({message:"数据未改动！"})},saveEvent2:function(e,n){var t=this,l=this.$refs.xTable;l.isUpdateByRow(e)?(e.loading=!0,this.submitSave(e).then(function(o){l.reloadRow(e,o,n),t.$notify.success({message:"保存成功！"}),e.loading=!1})):this.$notify.info({message:"数据未改动！"})},submitSave:function(e){return new Promise(function(n){var t={date3:VueUtil.formatDate(new Date)};e.name&&(t.name=e.name),e.sex&&(t.sex=e.sex),setTimeout(function(){return n(t)},500)})},getInsertEvent:function(){var e=this.$refs.xTable.getInsertRecords();this.$alert({message:e.length})},getRemoveEvent:function(){var e=this.$refs.xTable.getRemoveRecords();this.$alert({message:e.length})},getUpdateEvent:function(){var e=this.$refs.xTable.getUpdateRecords();this.$alert({message:e.length})}}}}],styles:""}},"./demo/XtableDemo/edit/Template.vue":
/*!*******************************************!*\
  !*** ./demo/XtableDemo/edit/Template.vue ***!
  \*******************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/edit/Template",name:"XtableDemo.edit.Template",head:{label:"XtableDemo.edit.Template.label",description:"XtableDemo.edit.Template.description"},samples:[{id:"XtableDemo.edit.Template.sample1",label:"XtableDemo.edit.Template.sample1.label",description:"XtableDemo.edit.Template.sample1.description",code:'<vue-xtable\n  border\n  show-overflow\n  :data="tableData"\n  :edit-config="{trigger: \'click\', mode: \'cell\'}">\n  <vue-xtable-column type="index" width="60"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" :edit-render="{name: \'input\'}">\n    <template v-slot:edit="scope">\n      <input type="text" v-model="scope.row.name" class="custom-input">\n    </template>\n  </vue-xtable-column>\n  <vue-xtable-column field="age" title="Age" :edit-render="{autofocus: \'.custom-input\'}">\n    <template v-slot:edit="scope">\n      <input type="number" v-model="scope.row.age" class="custom-input">\n    </template>\n  </vue-xtable-column>\n  <vue-xtable-column field="date3" title="Date" :edit-render="{name: \'input\'}">\n    <template v-slot:edit="scope">\n      <input type="date" v-model="scope.row.date3" class="custom-input">\n    </template>\n    <template v-slot="scope">选中日期：{{ scope.row.date3 }}</template>\n  </vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 6)\n    this.tableData = list\n  },\n\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      border\n      show-overflow\n      :data="tableData"\n      :edit-config="{trigger: \'click\', mode: \'cell\'}">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" :edit-render="{name: \'input\'}">\n        <template v-slot:edit="scope">\n          <input type="text" v-model="scope.row.name" class="custom-input">\n        </template>\n      </vue-xtable-column>\n      <vue-xtable-column field="age" title="Age" :edit-render="{autofocus: \'.custom-input\'}">\n        <template v-slot:edit="scope">\n          <input type="number" v-model="scope.row.age" class="custom-input">\n        </template>\n      </vue-xtable-column>\n      <vue-xtable-column field="date3" title="Date" :edit-render="{name: \'input\'}">\n        <template v-slot:edit="scope">\n          <input type="date" v-model="scope.row.date3" class="custom-input">\n        </template>\n        <template v-slot="scope">选中日期：{{ scope.row.date3 }}</template>\n      </vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){var e=window.MOCK_DATA_LIST.slice(0,6);this.tableData=e}}}],styles:""}},"./demo/XtableDemo/edit/UniqueSelect.vue":
/*!***********************************************!*\
  !*** ./demo/XtableDemo/edit/UniqueSelect.vue ***!
  \***********************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/edit/UniqueSelect",name:"XtableDemo.edit.UniqueSelect",head:{label:"XtableDemo.edit.UniqueSelect.label",description:"XtableDemo.edit.UniqueSelect.description"},samples:[{id:"XtableDemo.edit.UniqueSelect.sample1",label:"XtableDemo.edit.UniqueSelect.sample1.label",description:"XtableDemo.edit.UniqueSelect.sample1.description",code:"<vue-toolbar>\n  <template v-slot:buttons>\n    <vue-button @click=\"insertEvent()\">新增</vue-button>\n  </template>\n</vue-toolbar>\n\n<vue-xtable\n  border\n  resizable\n  ref=\"xTable\"\n  max-height=\"400\"\n  :data=\"tableData\"\n  :edit-config=\"{trigger: 'click', mode: 'row'}\"\n  @edit-actived=\"editActivedEvent\">\n  <vue-xtable-column type=\"index\" width=\"60\"></vue-xtable-column>\n  <vue-xtable-column field=\"name\" title=\"Name\" :edit-render=\"{name: 'input'}\"></vue-xtable-column>\n  <vue-xtable-column field=\"role1\" title=\"Role\" :edit-render=\"{name: 'select', options: roleList, events: {change: roleChangeEvent}}\"></vue-xtable-column>\n  <vue-xtable-column field=\"date12\" title=\"Date\" :edit-render=\"{name: 'input', attrs: {type: 'date'}}\"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n      roleList: [\n        {\n          label: '',\n          value: '',\n          disabled: false\n        },\n        {\n          label: '前端',\n          value: '1',\n          disabled: false\n        },\n        {\n          label: '后端',\n          value: '2',\n          disabled: false\n        },\n        {\n          label: '项目经理',\n          value: '3',\n          disabled: false\n        },\n        {\n          label: '设计师',\n          value: '4',\n          disabled: false\n        },\n        {\n          label: '运维',\n          value: '5',\n          disabled: false\n        }\n      ],\n\n    }\n  },\n  created () {\n    this.$nextTick(() => {\n      this.tableData = window.MOCK_DATA_LIST.slice(0, 2)\n      this.updateRoleList()\n    })\n  },\n\n  methods: {\n    insertEvent () {\n      let record = {\n\n      }\n      this.$refs.xTable.insert(record)\n    },\n    updateRoleList () {\n      // 获取表格中的全量数据\n      let { fullData } = this.$refs.xTable.getTableData()\n      this.roleList.forEach(item => {\n        if (item.value) {\n          // 如果当前选项已经被选过，则禁用\n          item.disabled = fullData.some(row => row.role1 === item.value)\n        }\n      })\n    },\n    roleChangeEvent ({ row }, evnt) {\n      // 使用内置 select 需要手动更新，使用第三方组件如果是 v-model 就不需要手动赋值\n      row.role1 = evnt.target.value\n      this.updateRoleList()\n    },\n    editActivedEvent ({ row }) {\n      // 激活编辑时检查剩余选项是否可选择\n      this.updateRoleList()\n    }\n  }\n})\n<\/script>",template:'<div class="source">    <vue-toolbar>\n      <template v-slot:buttons>\n        <vue-button @click="insertEvent()">新增</vue-button>\n      </template>\n    </vue-toolbar>\n\n    <vue-xtable\n      border\n      resizable\n      ref="xTable"\n      max-height="400"\n      :data="tableData"\n      :edit-config="{trigger: \'click\', mode: \'row\'}"\n      @edit-actived="editActivedEvent">\n      <vue-xtable-column type="index" width="60"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="role1" title="Role" :edit-render="{name: \'select\', options: roleList, events: {change: roleChangeEvent}}"></vue-xtable-column>\n      <vue-xtable-column field="date12" title="Date" :edit-render="{name: \'input\', attrs: {type: \'date\'}}"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[],roleList:[{label:"",value:"",disabled:!1},{label:"前端",value:"1",disabled:!1},{label:"后端",value:"2",disabled:!1},{label:"项目经理",value:"3",disabled:!1},{label:"设计师",value:"4",disabled:!1},{label:"运维",value:"5",disabled:!1}]}},created:function(){var e=this;this.$nextTick(function(){e.tableData=window.MOCK_DATA_LIST.slice(0,2),e.updateRoleList()})},methods:{insertEvent:function(){this.$refs.xTable.insert({})},updateRoleList:function(){var e=this.$refs.xTable.getTableData().fullData;this.roleList.forEach(function(n){n.value&&(n.disabled=e.some(function(e){return e.role1===n.value}))})},roleChangeEvent:function(e,n){e.row.role1=n.target.value,this.updateRoleList()},editActivedEvent:function(e){e.row;this.updateRoleList()}}}}],styles:""}},"./demo/XtableDemo/grid/Basic.vue":
/*!****************************************!*\
  !*** ./demo/XtableDemo/grid/Basic.vue ***!
  \****************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/grid/Basic",name:"XtableDemo.grid.Basic",head:{label:"XtableDemo.grid.Basic.label",description:"XtableDemo.grid.Basic.description"},samples:[{id:"XtableDemo.grid.Basic.sample1",label:"XtableDemo.grid.Basic.sample1.label",description:"XtableDemo.grid.Basic.sample1.description",code:"<vue-xgrid\nborder\nresizable\nheight=\"300\"\n:columns=\"tableColumn\"\n:data=\"tableData\"></vue-xgrid>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableColumn: [\n        { type: 'index', width: 50 },\n        { field: 'name', title: '姓名' },\n        { field: 'sex', title: '性别', showHeaderOverflow: true },\n        { field: 'address', title: 'Address', showOverflow: true }\n      ],\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\n  },\n\n})\n<\/script>",template:'<div class="source">    <vue-xgrid\n      border\n      resizable\n      height="300"\n      :columns="tableColumn"\n      :data="tableData"></vue-xgrid></div>',parameter:{data:function(){return{tableColumn:[{type:"index",width:50},{field:"name",title:"姓名"},{field:"sex",title:"性别",showHeaderOverflow:!0},{field:"address",title:"Address",showOverflow:!0}],tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,50)}}}],styles:""}},"./demo/XtableDemo/grid/CustomToolbar.vue":
/*!************************************************!*\
  !*** ./demo/XtableDemo/grid/CustomToolbar.vue ***!
  \************************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/grid/CustomToolbar",name:"XtableDemo.grid.CustomToolbar",head:{label:"XtableDemo.grid.CustomToolbar.label",description:"XtableDemo.grid.CustomToolbar.description"},samples:[{id:"XtableDemo.grid.CustomToolbar.sample1",label:"XtableDemo.grid.CustomToolbar.sample1.label",description:"XtableDemo.grid.CustomToolbar.sample1.description",code:"<vue-xgrid\n  border\n  resizable\n  ref=\"xGrid\"\n  height=\"530\"\n  :pager-config=\"tablePage\"\n  :proxy-config=\"tableProxy\"\n  :columns=\"tableColumn\"\n  :toolbar=\"toolbar\"\n  :edit-config=\"{trigger: 'click', mode: 'row', showStatus: true}\">\n  <template v-slot:buttons>\n    <input type=\"text\"/>\n    <button>搜索</button>\n    <vue-button @click=\"$refs.xGrid.commitProxy('reload')\">刷新</vue-button>\n    <vue-button @click=\"$refs.xGrid.commitProxy('insert_actived')\">新增</vue-button>\n    <vue-button @click=\"$refs.xGrid.commitProxy('mark_cancel')\">标记/取消</vue-button>\n    <vue-button @click=\"$refs.xGrid.commitProxy('save')\">保存</vue-button>\n    <vue-button @click=\"$refs.xGrid.exportData()\">导出.csv</vue-button>\n  </template>\n</vue-xgrid>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tablePage: {\n        pageSize: 15\n      },\n      tableProxy: {\n        props: {\n          result: 'data.result',\n          total: 'data.page.total'\n        },\n        ajax: {\n          // page 对象： { pageSize, currentPage }\n          query: ({ page }) => Vue.http.get(`/api/user/page/list/${page.pageSize}/${page.currentPage}`),\n          // body 对象： { removeRecords }\n          delete: ({ body }) => Vue.http.post('/api/user/save', body),\n          // body 对象： { insertRecords, updateRecords, removeRecords, pendingRecords }\n          save: ({ body }) => Vue.http.post('/api/user/save', body)\n        }\n      },\n      toolbar: {\n        id: 'toolbar_demo_2',\n        refresh: true,\n        setting: {\n          storage: true\n        }\n      },\n      tableColumn: [\n        { type: 'checkbox', width: 50 },\n        { type: 'index', width: 60 },\n        { field: 'name', title: 'Name', editRender: { name: 'input' } },\n        { field: 'nickname', title: 'Nickname', editRender: { name: 'input' } },\n        { field: 'role', title: 'Role', editRender: { name: 'input' } },\n        { field: 'describe', title: 'Describe', showOverflow: true, editRender: { name: 'input' } }\n      ],\n\n    }\n  },\n\n})\n<\/script>",template:'<div class="source">    <vue-xgrid\n      border\n      resizable\n      ref="xGrid"\n      height="530"\n      :pager-config="tablePage"\n      :proxy-config="tableProxy"\n      :columns="tableColumn"\n      :toolbar="toolbar"\n      :edit-config="{trigger: \'click\', mode: \'row\', showStatus: true}">\n      <template v-slot:buttons>\n        <input type="text"/>\n        <button>搜索</button>\n        <vue-button @click="$refs.xGrid.commitProxy(\'reload\')">刷新</vue-button>\n        <vue-button @click="$refs.xGrid.commitProxy(\'insert_actived\')">新增</vue-button>\n        <vue-button @click="$refs.xGrid.commitProxy(\'mark_cancel\')">标记/取消</vue-button>\n        <vue-button @click="$refs.xGrid.commitProxy(\'save\')">保存</vue-button>\n        <vue-button @click="$refs.xGrid.exportData()">导出.csv</vue-button>\n      </template>\n    </vue-xgrid></div>',parameter:{data:function(){return{tablePage:{pageSize:15},tableProxy:{props:{result:"data.result",total:"data.page.total"},ajax:{query:function(e){var n=e.page;return Vue.http.get("/api/user/page/list/".concat(n.pageSize,"/").concat(n.currentPage))},delete:function(e){var n=e.body;return Vue.http.post("/api/user/save",n)},save:function(e){var n=e.body;return Vue.http.post("/api/user/save",n)}}},toolbar:{id:"toolbar_demo_2",refresh:!0,setting:{storage:!0}},tableColumn:[{type:"checkbox",width:50},{type:"index",width:60},{field:"name",title:"Name",editRender:{name:"input"}},{field:"nickname",title:"Nickname",editRender:{name:"input"}},{field:"role",title:"Role",editRender:{name:"input"}},{field:"describe",title:"Describe",showOverflow:!0,editRender:{name:"input"}}]}}}}],styles:""}},"./demo/XtableDemo/grid/Dynamic.vue":
/*!******************************************!*\
  !*** ./demo/XtableDemo/grid/Dynamic.vue ***!
  \******************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/grid/Dynamic",name:"XtableDemo.grid.Dynamic",head:{label:"XtableDemo.grid.Dynamic.label",description:"XtableDemo.grid.Dynamic.description"},samples:[{id:"XtableDemo.grid.Dynamic.sample1",label:"XtableDemo.grid.Dynamic.sample1.label",description:"XtableDemo.grid.Dynamic.sample1.description",code:"<vue-xgrid\nborder\nresizable\nshow-overflow\nheight=\"306\"\n:pager-config=\"tablePage\"\n:proxy-config=\"tableProxy\"\n:columns=\"tableColumn\"\n:toolbar=\"tableToolbar\"\n:edit-config=\"{trigger: 'click', mode: 'row', showStatus: true}\"></vue-xgrid>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tablePage: {\n        pageSize: 5,\n        pageSizes: [5, 10, 15, 20, 50]\n      },\n      tableProxy: {\n        props: {\n          result: 'data.result',\n          total: 'data.page.total'\n        },\n        ajax: {\n          query: ({ page }) => Vue.http.get(`/api/column/page/list/${page.pageSize}/${page.currentPage}`, { sort: 'seq', order: 'asc' }),\n          delete: ({ body }) => Vue.http.post('/api/column/save', body),\n          save: ({ body }) => Vue.http.post('/api/column/save', body)\n        }\n      },\n      tableToolbar: {\n        buttons: [\n          { code: 'reload', name: '刷新' },\n          { code: 'insert_actived', name: '新增' },\n          { code: 'mark_cancel', name: '标记/取消' },\n          { code: 'save', name: '保存' },\n          { code: 'export', name: '导出.csv' }\n        ],\n        refresh: true,\n        setting: true\n      },\n      tableColumn: [\n        { type: 'checkbox', width: 50 },\n        { field: 'seq', title: '排序', width: 80, editRender: { name: 'input' } },\n        { field: 'key', title: '列键值', width: 100, editRender: { name: 'input' } },\n        { field: 'name', title: '列名称', width: 100, editRender: { name: 'input' } },\n        { field: 'type', title: '列类型', width: 100, editRender: { name: 'input' } },\n        { field: 'width', title: '列宽度', width: 100, editRender: { name: 'input' } },\n        { field: 'link', title: '是否链接', width: 150, editRender: { name: 'input' } },\n        { field: 'isEdit', title: '是否编辑', width: 100, editRender: { name: 'input' } },\n        { field: 'required', title: '是否必填', width: 140, editRender: { name: 'input' } },\n        { field: 'validator', title: '校验规则', width: 140, editRender: { name: 'input' } },\n        { field: 'validMsg', title: '校验提示消息', width: 150, editRender: { name: 'input' } },\n        { field: 'describe', title: '描述', width: 200, showOverflow: true, editRender: { name: 'input' } },\n        { field: 'createTime', title: '创建时间', width: 100, showOverflow: true, formatter: this.formatterDate, editRender: { name: 'input' } },\n        { field: 'updateTime', title: '更新时间', width: 200, showOverflow: true, formatter: this.formatterDate, editRender: { name: 'input' } }\n      ],\n\n    }\n  },\n  methods: {\n    formatterDate ({ cellValue }) {\n      return VueUtil.formatDate(cellValue, 'yyyy-MM-dd HH:mm:ss')\n    },\n  }\n})\n<\/script>",template:'<div class="source">    <vue-xgrid\n      border\n      resizable\n      show-overflow\n      height="306"\n      :pager-config="tablePage"\n      :proxy-config="tableProxy"\n      :columns="tableColumn"\n      :toolbar="tableToolbar"\n      :edit-config="{trigger: \'click\', mode: \'row\', showStatus: true}"></vue-xgrid></div>',parameter:{data:function(){return{tablePage:{pageSize:5,pageSizes:[5,10,15,20,50]},tableProxy:{props:{result:"data.result",total:"data.page.total"},ajax:{query:function(e){var n=e.page;return Vue.http.get("/api/column/page/list/".concat(n.pageSize,"/").concat(n.currentPage),{sort:"seq",order:"asc"})},delete:function(e){var n=e.body;return Vue.http.post("/api/column/save",n)},save:function(e){var n=e.body;return Vue.http.post("/api/column/save",n)}}},tableToolbar:{buttons:[{code:"reload",name:"刷新"},{code:"insert_actived",name:"新增"},{code:"mark_cancel",name:"标记/取消"},{code:"save",name:"保存"},{code:"export",name:"导出.csv"}],refresh:!0,setting:!0},tableColumn:[{type:"checkbox",width:50},{field:"seq",title:"排序",width:80,editRender:{name:"input"}},{field:"key",title:"列键值",width:100,editRender:{name:"input"}},{field:"name",title:"列名称",width:100,editRender:{name:"input"}},{field:"type",title:"列类型",width:100,editRender:{name:"input"}},{field:"width",title:"列宽度",width:100,editRender:{name:"input"}},{field:"link",title:"是否链接",width:150,editRender:{name:"input"}},{field:"isEdit",title:"是否编辑",width:100,editRender:{name:"input"}},{field:"required",title:"是否必填",width:140,editRender:{name:"input"}},{field:"validator",title:"校验规则",width:140,editRender:{name:"input"}},{field:"validMsg",title:"校验提示消息",width:150,editRender:{name:"input"}},{field:"describe",title:"描述",width:200,showOverflow:!0,editRender:{name:"input"}},{field:"createTime",title:"创建时间",width:100,showOverflow:!0,formatter:this.formatterDate,editRender:{name:"input"}},{field:"updateTime",title:"更新时间",width:200,showOverflow:!0,formatter:this.formatterDate,editRender:{name:"input"}}]}},methods:{formatterDate:function(e){var n=e.cellValue;return VueUtil.formatDate(n,"yyyy-MM-dd HH:mm:ss")}}}},{id:"XtableDemo.grid.Dynamic.sample2",label:"XtableDemo.grid.Dynamic.sample2.label",description:"XtableDemo.grid.Dynamic.sample2.description",code:"<vue-xgrid\nborder\nshow-overflow\nheight=\"290\"\n:loading=\"loading2\"\n:pager-config=\"tablePage2\"\n:proxy-config=\"tableProxy2\"\n:columns=\"tableColumn2\"\n:toolbar=\"tableToolbar2\"\n:edit-rules=\"validRules2\"\n:edit-config=\"{trigger: 'click', mode: 'row', showStatus: true}\"\n@toolbar-button-click=\"toolbarButtonClickEvent\"></vue-xgrid>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      loading2: false,\n      tablePage2: {\n        pageSize: 10\n      },\n      tableProxy2: {\n        props: {\n          result: 'data.result',\n          total: 'data.page.total'\n        },\n        ajax: {\n          query: ({ page }) => Vue.http.get(`/api/user/page/list/${page.pageSize}/${page.currentPage}`),\n          delete: ({ body }) => Vue.http.post('/api/user/save', body),\n          save: ({ body }) => Vue.http.post('/api/user/save', body)\n        }\n      },\n      tableToolbar2: {\n        buttons: [\n          { code: 'reloadColumn', name: '刷新列配置' },\n          { code: 'reload', name: '刷新数据' },\n          { code: 'insert_actived', name: '新增' },\n          { code: 'mark_cancel', name: '标记/取消' },\n          { code: 'save', name: '保存' },\n          { code: 'export', name: '导出.csv' }\n        ],\n        refresh: true,\n        setting: true\n      },\n      validRules2: null,\n      tableColumn2: [],\n\n    }\n  },\n  created () {\n    this.findColumn()\n  },\n  methods: {\n    findColumn () {\n      this.loading2 = true\n      Vue.http.get('/api/column/list', { sort: 'seq', order: 'asc' }).then(data => {\n        let validRules = {}\n        this.tableColumn2 = data.body.map(item => {\n          let config = {\n            title: item.name,\n            width: item.width\n          }\n          if (item.type) {\n            Object.assign(config, {\n              type: item.type\n            })\n          } else {\n            Object.assign(config, {\n              slots: {\n                default: ({ row, column }) => {\n                  // 渲染链接\n                  if (item.link) {\n                    return [\n                      <a class=\"link\" href={ item.link }>{ row[column.property] }</a>\n                    ]\n                  }\n                  // 渲染文本\n                  return [\n                    <span>{ row[column.property] }</span>\n                  ]\n                }\n              }\n            })\n            // 动态生成校验\n            if (item.required) {\n              validRules[item.key] = [\n                { required: true, message: `请填写${item.name}` }\n              ]\n            }\n            if (item.validator) {\n              if (validRules[item.key]) {\n                validRules[item.key].push({ pattern: new RegExp(item.validator), message: item.validMsg || `${item.name}校验不通过，请重新填写` })\n              } else {\n                validRules[item.key] = [\n                  { pattern: new RegExp(item.validator), message: item.validMsg || `${item.name}校验不通过，请重新填写` }\n                ]\n              }\n            }\n            if (item.key) {\n              config.field = item.key\n            }\n            if (item.isEdit) {\n              config.editRender = { name: 'input' }\n            }\n          }\n          return config\n        })\n        this.validRules2 = validRules\n        this.loading2 = false\n      })\n    },\n    toolbarButtonClickEvent ({ code }, event) {\n      switch (code) {\n        case 'reloadColumn':\n          this.findColumn()\n          break\n      }\n    }\n  }\n})\n<\/script>",template:'<div class="source">    <vue-xgrid\n      border\n      show-overflow\n      height="290"\n      :loading="loading2"\n      :pager-config="tablePage2"\n      :proxy-config="tableProxy2"\n      :columns="tableColumn2"\n      :toolbar="tableToolbar2"\n      :edit-rules="validRules2"\n      :edit-config="{trigger: \'click\', mode: \'row\', showStatus: true}"\n      @toolbar-button-click="toolbarButtonClickEvent"></vue-xgrid></div>',parameter:{data:function(){return{loading2:!1,tablePage2:{pageSize:10},tableProxy2:{props:{result:"data.result",total:"data.page.total"},ajax:{query:function(e){var n=e.page;return Vue.http.get("/api/user/page/list/".concat(n.pageSize,"/").concat(n.currentPage))},delete:function(e){var n=e.body;return Vue.http.post("/api/user/save",n)},save:function(e){var n=e.body;return Vue.http.post("/api/user/save",n)}}},tableToolbar2:{buttons:[{code:"reloadColumn",name:"刷新列配置"},{code:"reload",name:"刷新数据"},{code:"insert_actived",name:"新增"},{code:"mark_cancel",name:"标记/取消"},{code:"save",name:"保存"},{code:"export",name:"导出.csv"}],refresh:!0,setting:!0},validRules2:null,tableColumn2:[]}},created:function(){this.findColumn()},methods:{findColumn:function(){var e=this,n=this.$createElement;this.loading2=!0,Vue.http.get("/api/column/list",{sort:"seq",order:"asc"}).then(function(t){var l={};e.tableColumn2=t.body.map(function(e){var t={title:e.name,width:e.width};return e.type?Object.assign(t,{type:e.type}):(Object.assign(t,{slots:{default:function(t){var l=t.row,o=t.column;return e.link?[n("a",{class:"link",attrs:{href:e.link}},[l[o.property]])]:[n("span",[l[o.property]])]}}}),e.required&&(l[e.key]=[{required:!0,message:"请填写".concat(e.name)}]),e.validator&&(l[e.key]?l[e.key].push({pattern:new RegExp(e.validator),message:e.validMsg||"".concat(e.name,"校验不通过，请重新填写")}):l[e.key]=[{pattern:new RegExp(e.validator),message:e.validMsg||"".concat(e.name,"校验不通过，请重新填写")}]),e.key&&(t.field=e.key),e.isEdit&&(t.editRender={name:"input"})),t}),e.validRules2=l,e.loading2=!1})},toolbarButtonClickEvent:function(e,n){switch(e.code){case"reloadColumn":this.findColumn()}}}}}],styles:""}},"./demo/XtableDemo/grid/Edit.vue":
/*!***************************************!*\
  !*** ./demo/XtableDemo/grid/Edit.vue ***!
  \***************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/grid/Edit",name:"XtableDemo.grid.Edit",head:{label:"XtableDemo.grid.Edit.label",description:"XtableDemo.grid.Edit.description"},samples:[{id:"XtableDemo.grid.Edit.sample1",label:"XtableDemo.grid.Edit.sample1.label",description:"XtableDemo.grid.Edit.sample1.description",code:'<vue-xgrid\nborder\nresizable\nref="xGrid"\nheight="530"\n:loading="loading"\n:pager-config="tablePage"\n:columns="tableColumn"\n:data="tableData"\n:edit-config="{trigger: \'click\', mode: \'row\', showStatus: true}"\n@page-change="handlePageChange"></vue-xgrid>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      loading: false,\n      tablePage: {\n        total: 0,\n        currentPage: 1,\n        pageSize: 10,\n        pageSizes: [10, 20, 50, 100, 200, 500]\n      },\n      tableColumn: [\n        { type: \'index\', width: 60 },\n        { type: \'checkbox\', width: 50 },\n        { field: \'name\', title: \'Name\', editRender: { name: \'input\' } },\n        { field: \'nickname\', title: \'Nickname\', editRender: { name: \'input\' } },\n        { field: \'sex\', title: \'Sex\', editRender: { name: \'select\', options: [] } },\n        { field: \'role\', title: \'Role\', editRender: { name: \'input\' } },\n        { field: \'describe\', title: \'Describe\', showOverflow: true, editRender: { name: \'input\' } }\n      ],\n      tableData: [],\n\n    }\n  },\n  created () {\n\n  },\n  mounted () {\n    this.findList()\n    this.findSexList()\n\n  },\n  methods: {\n    findList () {\n      this.loading = true\n      Vue.http.get(`/api/user/page/list/${this.tablePage.pageSize}/${this.tablePage.currentPage}`).then(response => {\n        let { page, result } = response.data;\n        this.tableData = result\n        this.tablePage.total = page.total\n        this.loading = false\n      }).catch(e => {\n        this.loading = false\n      })\n    },\n    findSexList () {\n      // return Vue.http.get(\'/api/conf/sex/list\').then(response => {\n        // 异步更新下拉选项\n        this.$nextTick(() => {\n          let column = this.$refs.xGrid.getColumnByField(\'sex\')\n          column.editRender.options = [{"label":"","spell":"","value":"","value2":null,"val":""},{"label":"男","spell":"nan","value":"1","value2":1,"val":"x"},{"label":"女","spell":"nv","value":"0","value2":0,"val":"o"}]\n        })\n      // })\n    },\n    searchEvent () {\n      this.tablePage.currentPage = 1\n      this.findList()\n    },\n    handlePageChange ({ currentPage, pageSize }) {\n      this.tablePage.currentPage = currentPage\n      this.tablePage.pageSize = pageSize\n      this.findList()\n    }\n  }\n})\n<\/script>',template:'<div class="source">    <vue-xgrid\n      border\n      resizable\n      ref="xGrid"\n      height="530"\n      :loading="loading"\n      :pager-config="tablePage"\n      :columns="tableColumn"\n      :data="tableData"\n      :edit-config="{trigger: \'click\', mode: \'row\', showStatus: true}"\n      @page-change="handlePageChange"></vue-xgrid></div>',parameter:{data:function(){return{loading:!1,tablePage:{total:0,currentPage:1,pageSize:10,pageSizes:[10,20,50,100,200,500]},tableColumn:[{type:"index",width:60},{type:"checkbox",width:50},{field:"name",title:"Name",editRender:{name:"input"}},{field:"nickname",title:"Nickname",editRender:{name:"input"}},{field:"sex",title:"Sex",editRender:{name:"select",options:[]}},{field:"role",title:"Role",editRender:{name:"input"}},{field:"describe",title:"Describe",showOverflow:!0,editRender:{name:"input"}}],tableData:[]}},created:function(){},mounted:function(){this.findList(),this.findSexList()},methods:{findList:function(){var e=this;this.loading=!0,Vue.http.get("/api/user/page/list/".concat(this.tablePage.pageSize,"/").concat(this.tablePage.currentPage)).then(function(n){var t=n.data,l=t.page,o=t.result;e.tableData=o,e.tablePage.total=l.total,e.loading=!1}).catch(function(n){e.loading=!1})},findSexList:function(){var e=this;this.$nextTick(function(){e.$refs.xGrid.getColumnByField("sex").editRender.options=[{label:"",spell:"",value:"",value2:null,val:""},{label:"男",spell:"nan",value:"1",value2:1,val:"x"},{label:"女",spell:"nv",value:"0",value2:0,val:"o"}]})},searchEvent:function(){this.tablePage.currentPage=1,this.findList()},handlePageChange:function(e){var n=e.currentPage,t=e.pageSize;this.tablePage.currentPage=n,this.tablePage.pageSize=t,this.findList()}}}}],styles:""}},"./demo/XtableDemo/grid/Footer.vue":
/*!*****************************************!*\
  !*** ./demo/XtableDemo/grid/Footer.vue ***!
  \*****************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/grid/Footer",name:"XtableDemo.grid.Footer",head:{label:"XtableDemo.grid.Footer.label",description:"XtableDemo.grid.Footer.description"},samples:[{id:"XtableDemo.grid.Footer.sample1",label:"XtableDemo.grid.Footer.sample1.label",description:"XtableDemo.grid.Footer.sample1.description",code:"<vue-xgrid\nborder\nstripe\nresizable\nshow-footer\nheight=\"500\"\n:footer-method=\"footerMethod\"\n:columns=\"tableColumn\"\n:data=\"tableData\"></vue-xgrid>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableColumn: [\n        { type: 'index', width: 50 },\n        { field: 'name', title: '姓名' },\n        { field: 'sex', title: '性别' },\n        { field: 'age', title: 'Age' },\n        { field: 'rate', title: 'Rate' },\n        { field: 'address', title: 'Address', showOverflow: true }\n      ],\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\n  },\n\n  methods: {\n    footerMethod ({ columns, data }) {\n      return [\n        columns.map((column, columnIndex) => {\n          if (columnIndex === 0) {\n            return '和值'\n          }\n          if (VueUtil.includes(['age', 'rate'], column.property)) {\n            return VueUtil.sum(data.map( data => data[column.property]))\n          }\n          return null\n        }),\n        columns.map((column, columnIndex) => {\n          if (columnIndex === 0) {\n            return '平均'\n          }\n          if (VueUtil.includes(['age', 'rate'], column.property)) {\n            return VueUtil.mean(data.map( data => data[column.property]))\n          }\n          return null\n        })\n      ]\n    }\n  }\n})\n<\/script>",template:'<div class="source">    <vue-xgrid\n      border\n      stripe\n      resizable\n      show-footer\n      height="500"\n      :footer-method="footerMethod"\n      :columns="tableColumn"\n      :data="tableData"></vue-xgrid></div>',parameter:{data:function(){return{tableColumn:[{type:"index",width:50},{field:"name",title:"姓名"},{field:"sex",title:"性别"},{field:"age",title:"Age"},{field:"rate",title:"Rate"},{field:"address",title:"Address",showOverflow:!0}],tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,50)},methods:{footerMethod:function(e){var n=e.columns,t=e.data;return[n.map(function(e,n){return 0===n?"和值":VueUtil.includes(["age","rate"],e.property)?VueUtil.sum(t.map(function(n){return n[e.property]})):null}),n.map(function(e,n){return 0===n?"平均":VueUtil.includes(["age","rate"],e.property)?VueUtil.mean(t.map(function(n){return n[e.property]})):null})]}}}}],styles:""}},"./demo/XtableDemo/grid/FullEdit.vue":
/*!*******************************************!*\
  !*** ./demo/XtableDemo/grid/FullEdit.vue ***!
  \*******************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/grid/FullEdit",name:"XtableDemo.grid.FullEdit",head:{label:"XtableDemo.grid.FullEdit.label",description:"XtableDemo.grid.FullEdit.description"},samples:[{id:"XtableDemo.grid.FullEdit.sample1",label:"XtableDemo.grid.FullEdit.sample1.label",description:"XtableDemo.grid.FullEdit.sample1.description",code:"<vue-xgrid\n  border\n  resizable\n  highlight-hover-row\n  remote-filter\n  ref=\"xGrid\"\n  height=\"530\"\n  row-id=\"id\"\n  :pager-config=\"{pageSize: 15}\"\n  :toolbar=\"tableToolbar\"\n  :proxy-config=\"tableProxy\"\n  :columns=\"tableColumn\"\n  :checkbox-config=\"{reserve: true}\"\n  :edit-rules=\"validRules\"\n  :edit-config=\"{trigger: 'click', mode: 'row', showStatus: true}\">\n</vue-xgrid>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      validRules: {\n        name: [\n          { required: true, message: '名称必须填写' },\n          { min: 3, max: 50, message: '名称长度在 3 到 50 个字符' }\n        ],\n        role: [\n          { required: true, message: '角色必须填写' }\n        ]\n      },\n      tableProxy: {\n        index: true, // 启用动态序号代理\n        sort: true, // 启用排序代理\n        filter: true, // 启用筛选代理\n        props: {\n          result: 'data.result',\n          total: 'data.page.total'\n        },\n        ajax: {\n          // 任何支持 Promise API 的库都可以对接（fetch、jquery、axios、xe-ajax）\n          query: ({ page, sort, filters }) => {\n            // 处理排序条件\n            let formData = {\n              sort: sort.property,\n              order: sort.order\n            }\n            // 处理筛选条件\n            filters.forEach(({ column, property, values }) => {\n              formData[property] = values.join(',')\n            })\n            return Vue.http.get(`/api/user/page/list/${page.pageSize}/${page.currentPage}`, formData)\n          },\n          delete: ({ body }) => Vue.http.post('/api/user/save', body),\n          save: ({ body }) => Vue.http.post('/api/user/save', body)\n        }\n      },\n      tableToolbar: {\n        id: 'full_edit_1',\n        buttons: [\n          { code: 'reload', name: '刷新', disabled: false },\n          { code: 'insert_actived', name: '新增', disabled: false },\n          {\n            code: 'mark_cancel',\n            name: '标记',\n            disabled: false,\n            dropdowns: [\n              { code: 'delete_selection', name: '删除选中', disabled: false },\n              { code: 'remove_selection', name: '移除数据', disabled: false }\n            ]\n          },\n          { code: 'save', name: '保存', disabled: false },\n          {\n            name: '更多操作',\n            disabled: false,\n            dropdowns: [\n              { code: 'reset_custom', name: '重置个性化信息', disabled: false }\n            ]\n          },\n          {\n            name: '导入/导出1',\n            dropdowns: [\n              { code: 'import', name: '直接导入', disabled: false },\n              { code: 'export', name: '直接导出 CSV', params: { type: 'csv' }, disabled: false },\n              { code: 'export', name: '直接导出 XML', params: { type: 'xml' }, disabled: false },\n              { code: 'export', name: '直接导出 HTML', params: { type: 'html' }, disabled: false },\n              { code: 'export', name: '直接导出 TXT', params: { type: 'txt' }, disabled: false }\n            ]\n          },\n          {\n            name: '导入/导出2',\n            dropdowns: [\n              { code: 'open_import', name: '高级导入', disabled: false },\n              { code: 'open_export', name: '高级导出', disabled: false }\n            ]\n          },\n        ],\n        refresh: true,\n        import: true,\n        export: true,\n        resizable: {\n          storage: true\n        },\n        setting: {\n          storage: true,\n          checkMethod: this.checkColumnMethod\n        }\n      },\n      tableColumn: [\n        { type: 'checkbox', width: 50 },\n        { type: 'index', title: '序号', width: 80 },\n        { field: 'name', title: 'Name', remoteSort: true, editRender: { name: 'input' } },\n        { field: 'nickname', title: 'Nickname', editRender: { name: 'input' } },\n        { field: 'sex', title: 'Sex', editRender: { name: 'select', options: [] } },\n        {\n          field: 'role',\n          title: 'Role',\n          remoteSort: true,\n          width: 200,\n          filters: [\n            { label: '前端', value: '前端' },\n            { label: '后端', value: '后端' },\n            { label: '测试', value: '测试' }\n          ],\n          filterMultiple: false,\n          editRender: { name: 'input' }\n        },\n        { field: 'describe', title: 'Describe', showOverflow: true, editRender: { name: 'input' } }\n      ],\n\n    }\n  },\n  created () {\n    this.findSexList()\n  },\n\n  methods: {\n    findSexList () {\n      return Vue.http.get('/api/conf/sex/list').then(data => {\n        // 异步更新下拉选项\n        let column = this.$refs.xGrid.getColumnByField('sex')\n        column.editRender.options = data.data\n      })\n    },\n    checkColumnMethod ({ column }) {\n      if (VueUtil.includes(['nickname', 'role'], column.property)) {\n        return false\n      }\n      return true\n    }\n  }\n})\n<\/script>",template:'<div class="source">    <vue-xgrid\n      border\n      resizable\n      highlight-hover-row\n      remote-filter\n      ref="xGrid"\n      height="530"\n      row-id="id"\n      :pager-config="{pageSize: 15}"\n      :toolbar="tableToolbar"\n      :proxy-config="tableProxy"\n      :columns="tableColumn"\n      :checkbox-config="{reserve: true}"\n      :edit-rules="validRules"\n      :edit-config="{trigger: \'click\', mode: \'row\', showStatus: true}">\n    </vue-xgrid></div>',parameter:{data:function(){return{validRules:{name:[{required:!0,message:"名称必须填写"},{min:3,max:50,message:"名称长度在 3 到 50 个字符"}],role:[{required:!0,message:"角色必须填写"}]},tableProxy:{index:!0,sort:!0,filter:!0,props:{result:"data.result",total:"data.page.total"},ajax:{query:function(e){var n=e.page,t=e.sort,l=e.filters,o={sort:t.property,order:t.order};return l.forEach(function(e){e.column;var n=e.property,t=e.values;o[n]=t.join(",")}),Vue.http.get("/api/user/page/list/".concat(n.pageSize,"/").concat(n.currentPage),o)},delete:function(e){var n=e.body;return Vue.http.post("/api/user/save",n)},save:function(e){var n=e.body;return Vue.http.post("/api/user/save",n)}}},tableToolbar:{id:"full_edit_1",buttons:[{code:"reload",name:"刷新",disabled:!1},{code:"insert_actived",name:"新增",disabled:!1},{code:"mark_cancel",name:"标记",disabled:!1,dropdowns:[{code:"delete_selection",name:"删除选中",disabled:!1},{code:"remove_selection",name:"移除数据",disabled:!1}]},{code:"save",name:"保存",disabled:!1},{name:"更多操作",disabled:!1,dropdowns:[{code:"reset_custom",name:"重置个性化信息",disabled:!1}]},{name:"导入/导出1",dropdowns:[{code:"import",name:"直接导入",disabled:!1},{code:"export",name:"直接导出 CSV",params:{type:"csv"},disabled:!1},{code:"export",name:"直接导出 XML",params:{type:"xml"},disabled:!1},{code:"export",name:"直接导出 HTML",params:{type:"html"},disabled:!1},{code:"export",name:"直接导出 TXT",params:{type:"txt"},disabled:!1}]},{name:"导入/导出2",dropdowns:[{code:"open_import",name:"高级导入",disabled:!1},{code:"open_export",name:"高级导出",disabled:!1}]}],refresh:!0,import:!0,export:!0,resizable:{storage:!0},setting:{storage:!0,checkMethod:this.checkColumnMethod}},tableColumn:[{type:"checkbox",width:50},{type:"index",title:"序号",width:80},{field:"name",title:"Name",remoteSort:!0,editRender:{name:"input"}},{field:"nickname",title:"Nickname",editRender:{name:"input"}},{field:"sex",title:"Sex",editRender:{name:"select",options:[]}},{field:"role",title:"Role",remoteSort:!0,width:200,filters:[{label:"前端",value:"前端"},{label:"后端",value:"后端"},{label:"测试",value:"测试"}],filterMultiple:!1,editRender:{name:"input"}},{field:"describe",title:"Describe",showOverflow:!0,editRender:{name:"input"}}]}},created:function(){this.findSexList()},methods:{findSexList:function(){var e=this;return Vue.http.get("/api/conf/sex/list").then(function(n){e.$refs.xGrid.getColumnByField("sex").editRender.options=n.data})},checkColumnMethod:function(e){var n=e.column;return!VueUtil.includes(["nickname","role"],n.property)}}}}],styles:""}},"./demo/XtableDemo/grid/FullQuery.vue":
/*!********************************************!*\
  !*** ./demo/XtableDemo/grid/FullQuery.vue ***!
  \********************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/grid/FullQuery",name:"XtableDemo.grid.FullQuery",head:{label:"XtableDemo.grid.FullQuery.label",description:"XtableDemo.grid.FullQuery.description"},samples:[{id:"XtableDemo.grid.FullQuery.sample1",label:"XtableDemo.grid.FullQuery.sample1.label",description:"XtableDemo.grid.FullQuery.sample1.description",code:"<vue-xgrid\nref=\"xGrid\"\nborder\nresizable\nremote-filter\nheight=\"548\"\nrow-id=\"id\"\n:pager-config=\"{pageSize: 15}\"\n:columns=\"tableColumn\"\n:proxy-config=\"tableProxy\"\n:checkbox-config=\"{reserve: true}\"\n@select-change=\"selectChangeEvent\"></vue-xgrid>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableProxy: {\n        index: true, // 启用动态序号代理\n        sort: true, // 启用排序代理\n        filter: true, // 启用筛选代理\n        props: {\n          result: 'data.result',\n          total: 'data.page.total'\n        },\n        ajax: {\n          query: ({ page, sort, filters }) => {\n            // 处理排序条件\n            let formData = {\n              sort: sort.field,\n              order: sort.order\n            }\n            // 处理筛选条件\n            filters.forEach(({ column, field, values }) => {\n              formData[field] = values.join(',')\n            })\n            return Vue.http.get(`/api/user/page/list/${page.pageSize}/${page.currentPage}`, formData)\n          }\n        }\n      },\n      tableColumn: [\n        { type: 'checkbox', width: 50, fixed: 'left' },\n        { type: 'index', width: 60, fixed: 'left' },\n        { field: 'id', title: 'ID', width: 100, remoteSort: true },\n        { field: 'name', title: 'Name', width: 300, remoteSort: true },\n        { field: 'nickname', title: 'Nickname', remoteSort: true, width: 300 },\n        { field: 'age', title: 'Age', remoteSort: true, width: 100 },\n        {\n          field: 'role',\n          title: 'Role',\n          remoteSort: true,\n          width: 200,\n          filters: [\n            { label: '前端', value: '前端' },\n            { label: '后端', value: '后端' },\n            { label: '测试', value: '测试' }\n          ],\n          filterMultiple: false\n        },\n        { field: 'describe', title: 'Describe', width: 300, showOverflow: true }\n      ],\n\n    }\n  },\n  methods: {\n    selectChangeEvent ({ checked, row, reserves }) {\n      console.log(checked ? '勾选事件' : '取消事件')\n      console.log('其他分页勾选数据', reserves)\n    },\n  }\n})\n<\/script>",template:'<div class="source">    <vue-xgrid\n      ref="xGrid"\n      border\n      resizable\n      remote-filter\n      height="548"\n      row-id="id"\n      :pager-config="{pageSize: 15}"\n      :columns="tableColumn"\n      :proxy-config="tableProxy"\n      :checkbox-config="{reserve: true}"\n      @select-change="selectChangeEvent"></vue-xgrid></div>',parameter:{data:function(){return{tableProxy:{index:!0,sort:!0,filter:!0,props:{result:"data.result",total:"data.page.total"},ajax:{query:function(e){var n=e.page,t=e.sort,l=e.filters,o={sort:t.field,order:t.order};return l.forEach(function(e){e.column;var n=e.field,t=e.values;o[n]=t.join(",")}),Vue.http.get("/api/user/page/list/".concat(n.pageSize,"/").concat(n.currentPage),o)}}},tableColumn:[{type:"checkbox",width:50,fixed:"left"},{type:"index",width:60,fixed:"left"},{field:"id",title:"ID",width:100,remoteSort:!0},{field:"name",title:"Name",width:300,remoteSort:!0},{field:"nickname",title:"Nickname",remoteSort:!0,width:300},{field:"age",title:"Age",remoteSort:!0,width:100},{field:"role",title:"Role",remoteSort:!0,width:200,filters:[{label:"前端",value:"前端"},{label:"后端",value:"后端"},{label:"测试",value:"测试"}],filterMultiple:!1},{field:"describe",title:"Describe",width:300,showOverflow:!0}]}},methods:{selectChangeEvent:function(e){var n=e.checked,t=(e.row,e.reserves);console.log(n?"勾选事件":"取消事件"),console.log("其他分页勾选数据",t)}}}}],styles:""}},"./demo/XtableDemo/grid/Group.vue":
/*!****************************************!*\
  !*** ./demo/XtableDemo/grid/Group.vue ***!
  \****************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/grid/Group",name:"XtableDemo.grid.Group",head:{label:"XtableDemo.grid.Group.label",description:"XtableDemo.grid.Group.description"},samples:[{id:"XtableDemo.grid.Group.sample1",label:"XtableDemo.grid.Group.sample1.label",description:"XtableDemo.grid.Group.sample1.description",code:"<vue-xgrid\nborder\nstripe\nresizable\nheight=\"500\"\n:columns=\"tableColumn\"\n:data=\"tableData\"></vue-xgrid>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableColumn: [\n        { type: 'index', width: 50 },\n        {\n          title: '基本信息',\n          children: [\n            { field: 'name', title: 'Name' },\n            {\n              title: '其他信息',\n              children: [\n                { field: 'rate', title: 'Rate' },\n                { field: 'age', title: 'Age' }\n              ]\n            },\n            { field: 'sex', title: 'Sex' }\n          ]\n        },\n        { field: 'address', title: 'Address', showOverflow: true }\n      ],\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 50)\n  },\n\n})\n<\/script>",template:'<div class="source">    <vue-xgrid\n      border\n      stripe\n      resizable\n      height="500"\n      :columns="tableColumn"\n      :data="tableData"></vue-xgrid></div>',parameter:{data:function(){return{tableColumn:[{type:"index",width:50},{title:"基本信息",children:[{field:"name",title:"Name"},{title:"其他信息",children:[{field:"rate",title:"Rate"},{field:"age",title:"Age"}]},{field:"sex",title:"Sex"}]},{field:"address",title:"Address",showOverflow:!0}],tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,50)}}}],styles:""}},"./demo/XtableDemo/grid/Menu.vue":
/*!***************************************!*\
  !*** ./demo/XtableDemo/grid/Menu.vue ***!
  \***************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/grid/Menu",name:"XtableDemo.grid.Menu",head:{label:"XtableDemo.grid.Menu.label",description:"XtableDemo.grid.Menu.description"},samples:[{id:"XtableDemo.grid.Menu.sample1",label:"XtableDemo.grid.Menu.sample1.label",description:"XtableDemo.grid.Menu.sample1.description",code:"<vue-xgrid\nborder\nresizable\nshow-footer\nhighlight-current-row\nref=\"xGrid\"\n:footer-method=\"footerMethod\"\n:columns=\"tableColumn\"\n:data=\"tableData\"\n:context-menu=\"{header: {options: headerMenus}, body: {options: bodyMenus}, footer: {options: footerMenus}, visibleMethod:visibleMethod}\"\n@cell-context-menu=\"cellContextMenuEvent\"\n@context-menu-click=\"contextMenuClickEvent\"></vue-xgrid>\n\n<script>\n// import VueUtil.clipboard from 'xe-clipboard'\n\nnew Vue({\n  data () {\n    return {\n      tableColumn: [\n        { type: 'index', width: 50 },\n        { field: 'name', title: '姓名' },\n        { field: 'age', title: '年龄' },\n        { field: 'address', title: 'Address', showOverflow: true }\n      ],\n      headerMenus: [\n        [\n          {\n            code: 'exportAll',\n            name: '导出所有.csv',\n            visible: true,\n            disabled: false\n          }\n        ]\n      ],\n      bodyMenus: [\n        [\n          {\n            code: 'copy',\n            name: '复制内容',\n            visible: true,\n            disabled: false,\n            prefixIcon: 'fa fa-copy'\n          },\n          {\n            code: 'clear',\n            name: '清除内容',\n            visible: true,\n            disabled: false\n          },\n          {\n            code: 'reload',\n            name: '刷新表格',\n            visible: true,\n            disabled: false\n          },\n          {\n            code: 'myExport',\n            name: '导出.csv',\n            visible: true,\n            disabled: false,\n            prefixIcon: 'fa fa-download'\n          }\n        ]\n      ],\n      footerMenus: [\n        [\n          {\n            code: 'exportAll',\n            name: '导出所有.csv',\n            visible: true,\n            disabled: false\n          }\n        ]\n      ],\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 4)\n  },\n\n  methods: {\n    visibleMethod ({ type, options, column }) {\n      // 示例：只有 name 列允许操作，清除按钮只能在 age 才显示\n      // 显示之前处理按钮的操作权限\n      let isDisabled = !column || column.property !== 'name'\n      let isVisible = column && column.property === 'age'\n      options.forEach(list => {\n        list.forEach(item => {\n          if (VueUtil.includes(['copy'], item.code)) {\n            item.disabled = isDisabled\n          }\n          if (VueUtil.includes(['clear'], item.code)) {\n            item.visible = isVisible\n          }\n        })\n      })\n      return true\n    },\n    cellContextMenuEvent ({ row }) {\n      this.$refs.xGrid.setCurrentRow(row)\n    },\n    contextMenuClickEvent ({ menu, row, column }) {\n      let xGrid = this.$refs.xGrid\n      switch (menu.code) {\n        case 'copy':\n          if (row && column) {\n            if (VueUtil.clipboard.copy(row[column.property])) {\n              this.$notify.success({ message:'已复制到剪贴板！'});\n            }\n          }\n          break\n        case 'clear':\n          xGrid.clearData(row, column.property)\n          break\n        case 'myExport':\n          xGrid.exportData()\n          break\n      }\n    },\n    footerMethod ({ columns, data }) {\n      return [\n        columns.map((column, columnIndex) => {\n          if (columnIndex === 0) {\n            return '和值'\n          }\n          if (VueUtil.includes(['age'], column.property)) {\n            return VueUtil.sum(data.map( data => data[column.property]))\n          }\n          return null\n        })\n      ]\n    }\n  }\n})\n<\/script>",template:'<div class="source">    <vue-xgrid\n      border\n      resizable\n      show-footer\n      highlight-current-row\n      ref="xGrid"\n      :footer-method="footerMethod"\n      :columns="tableColumn"\n      :data="tableData"\n      :context-menu="{header: {options: headerMenus}, body: {options: bodyMenus}, footer: {options: footerMenus}, visibleMethod:visibleMethod}"\n      @cell-context-menu="cellContextMenuEvent"\n      @context-menu-click="contextMenuClickEvent"></vue-xgrid></div>',parameter:{data:function(){return{tableColumn:[{type:"index",width:50},{field:"name",title:"姓名"},{field:"age",title:"年龄"},{field:"address",title:"Address",showOverflow:!0}],headerMenus:[[{code:"exportAll",name:"导出所有.csv",visible:!0,disabled:!1}]],bodyMenus:[[{code:"copy",name:"复制内容",visible:!0,disabled:!1,prefixIcon:"fa fa-copy"},{code:"clear",name:"清除内容",visible:!0,disabled:!1},{code:"reload",name:"刷新表格",visible:!0,disabled:!1},{code:"myExport",name:"导出.csv",visible:!0,disabled:!1,prefixIcon:"fa fa-download"}]],footerMenus:[[{code:"exportAll",name:"导出所有.csv",visible:!0,disabled:!1}]],tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,4)},methods:{visibleMethod:function(e){e.type;var n=e.options,t=e.column,l=!t||"name"!==t.property,o=t&&"age"===t.property;return n.forEach(function(e){e.forEach(function(e){VueUtil.includes(["copy"],e.code)&&(e.disabled=l),VueUtil.includes(["clear"],e.code)&&(e.visible=o)})}),!0},cellContextMenuEvent:function(e){var n=e.row;this.$refs.xGrid.setCurrentRow(n)},contextMenuClickEvent:function(e){var n=e.menu,t=e.row,l=e.column,o=this.$refs.xGrid;switch(n.code){case"copy":t&&l&&VueUtil.clipboard.copy(t[l.property])&&this.$notify.success({message:"已复制到剪贴板！"});break;case"clear":o.clearData(t,l.property);break;case"myExport":o.exportData()}},footerMethod:function(e){var n=e.columns,t=e.data;return[n.map(function(e,n){return 0===n?"和值":VueUtil.includes(["age"],e.property)?VueUtil.sum(t.map(function(n){return n[e.property]})):null})]}}}}],styles:""}},"./demo/XtableDemo/grid/Page.vue":
/*!***************************************!*\
  !*** ./demo/XtableDemo/grid/Page.vue ***!
  \***************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/grid/Page",name:"XtableDemo.grid.Page",head:{label:"XtableDemo.grid.Page.label",description:"XtableDemo.grid.Page.description"},samples:[{id:"XtableDemo.grid.Page.sample1",label:"XtableDemo.grid.Page.sample1.label",description:"XtableDemo.grid.Page.sample1.description",code:"<vue-xgrid\nborder\nresizable\nheight=\"530\"\n:loading=\"loading\"\n:start-index=\"(tablePage.currentPage - 1) * tablePage.pageSize\"\n:pager-config=\"tablePage\"\n:columns=\"tableColumn\"\n:data=\"tableData\"\n@page-change=\"handlePageChange\"></vue-xgrid>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      loading: false,\n      tablePage: {\n        total: 0,\n        currentPage: 1,\n        pageSize: 10,\n        pageSizes: [10, 20, 50, 100, 200, 500]\n      },\n      tableColumn: [\n        { type: 'index', width: 60 },\n        { type: 'checkbox', width: 50 },\n        { field: 'name', title: 'Name' },\n        { field: 'nickname', title: 'Nickname' },\n        { field: 'role', title: 'Role' },\n        { field: 'describe', title: 'Describe', showOverflow: true }\n      ],\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.findList()\n  },\n\n  methods: {\n    findList () {\n      // 模拟后台接口\n      this.loading = true\n      Vue.http.get(`/api/user/page/list/${this.tablePage.pageSize}/${this.tablePage.currentPage}`).then(response => {\n        let { page, result } = response.data\n        this.tableData = result\n        this.tablePage.total = page.total\n        this.loading = false\n      }).catch(e => {\n        this.loading = false\n      })\n    },\n    searchEvent () {\n      this.tablePage.currentPage = 1\n      this.findList()\n    },\n    handlePageChange ({ currentPage, pageSize }) {\n      this.tablePage.currentPage = currentPage\n      this.tablePage.pageSize = pageSize\n      this.findList()\n    }\n  }\n})\n<\/script>",template:'<div class="source">    <vue-xgrid\n      border\n      resizable\n      height="530"\n      :loading="loading"\n      :start-index="(tablePage.currentPage - 1) * tablePage.pageSize"\n      :pager-config="tablePage"\n      :columns="tableColumn"\n      :data="tableData"\n      @page-change="handlePageChange"></vue-xgrid></div>',parameter:{data:function(){return{loading:!1,tablePage:{total:0,currentPage:1,pageSize:10,pageSizes:[10,20,50,100,200,500]},tableColumn:[{type:"index",width:60},{type:"checkbox",width:50},{field:"name",title:"Name"},{field:"nickname",title:"Nickname"},{field:"role",title:"Role"},{field:"describe",title:"Describe",showOverflow:!0}],tableData:[]}},created:function(){this.findList()},methods:{findList:function(){var e=this;this.loading=!0,Vue.http.get("/api/user/page/list/".concat(this.tablePage.pageSize,"/").concat(this.tablePage.currentPage)).then(function(n){var t=n.data,l=t.page,o=t.result;e.tableData=o,e.tablePage.total=l.total,e.loading=!1}).catch(function(n){e.loading=!1})},searchEvent:function(){this.tablePage.currentPage=1,this.findList()},handlePageChange:function(e){var n=e.currentPage,t=e.pageSize;this.tablePage.currentPage=n,this.tablePage.pageSize=t,this.findList()}}}}],styles:""}},"./demo/XtableDemo/grid/PageProxy.vue":
/*!********************************************!*\
  !*** ./demo/XtableDemo/grid/PageProxy.vue ***!
  \********************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/grid/PageProxy",name:"XtableDemo.grid.PageProxy",head:{label:"XtableDemo.grid.PageProxy.label",description:"XtableDemo.grid.PageProxy.description"},samples:[{id:"XtableDemo.grid.PageProxy.sample1",label:"XtableDemo.grid.PageProxy.sample1.label",description:"XtableDemo.grid.PageProxy.sample1.description",code:"<vue-xgrid\nborder\nresizable\nheight=\"530\"\nrow-id=\"id\"\n:pager-config=\"{pageSize: 10}\"\n:proxy-config=\"tableProxy\"\n:checkbox-config=\"{reserve: true}\"\n:columns=\"tableColumn\"></vue-xgrid>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableProxy: {\n        index: true, // 启用动态序号代理（分页之后索引自动计算为当前页的起始序号）\n        props: {\n          result: 'data.result',\n          total: 'data.page.total'\n        },\n        ajax: {\n          // 任何支持 Promise API 的库都可以对接（fetch、jquery、axios、xe-ajax）\n          query: ({ page }) => Vue.http.get(`/api/user/page/list/${page.pageSize}/${page.currentPage}`)\n        }\n      },\n      tableColumn: [\n        { type: 'checkbox', width: 50 },\n        { type: 'index', width: 60 },\n        { field: 'name', title: 'Name' },\n        { field: 'nickname', title: 'Nickname' },\n        { field: 'role', title: 'Role' },\n        { field: 'describe', title: 'Describe', showOverflow: true }\n      ],\n\n    }\n  },\n\n})\n<\/script>",template:'<div class="source">    <vue-xgrid\n      border\n      resizable\n      height="530"\n      row-id="id"\n      :pager-config="{pageSize: 10}"\n      :proxy-config="tableProxy"\n      :checkbox-config="{reserve: true}"\n      :columns="tableColumn"></vue-xgrid></div>',parameter:{data:function(){return{tableProxy:{index:!0,props:{result:"data.result",total:"data.page.total"},ajax:{query:function(e){var n=e.page;return Vue.http.get("/api/user/page/list/".concat(n.pageSize,"/").concat(n.currentPage))}}},tableColumn:[{type:"checkbox",width:50},{type:"index",width:60},{field:"name",title:"Name"},{field:"nickname",title:"Nickname"},{field:"role",title:"Role"},{field:"describe",title:"Describe",showOverflow:!0}]}}}}],styles:""}},"./demo/XtableDemo/grid/Proxy.vue":
/*!****************************************!*\
  !*** ./demo/XtableDemo/grid/Proxy.vue ***!
  \****************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/grid/Proxy",name:"XtableDemo.grid.Proxy",head:{label:"XtableDemo.grid.Proxy.label",description:"XtableDemo.grid.Proxy.description"},samples:[{id:"XtableDemo.grid.Proxy.sample1",label:"XtableDemo.grid.Proxy.sample1.label",description:"XtableDemo.grid.Proxy.sample1.description",code:"<vue-xgrid\nborder\nresizable\nheight=\"530\"\n:proxy-config=\"tableProxy\"\n:columns=\"tableColumn\"></vue-xgrid>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableProxy: {\n        ajax: {\n          query: () => Vue.http.get('/api/user/list')\n        },\n        props: {\n          list: 'data'\n        }\n      },\n      tableColumn: [\n        { type: 'checkbox', width: 50 },\n        { type: 'index', width: 60 },\n        { field: 'name', title: 'Name' },\n        { field: 'nickname', title: 'Nickname' },\n        { field: 'role', title: 'Role' },\n        { field: 'describe', title: 'Describe', showOverflow: true }\n      ],\n\n    }\n  },\n\n})\n<\/script>",template:'<div class="source">    <vue-xgrid\n      border\n      resizable\n      height="530"\n      :proxy-config="tableProxy"\n      :columns="tableColumn"></vue-xgrid></div>',parameter:{data:function(){return{tableProxy:{ajax:{query:function(){return Vue.http.get("/api/user/list")}},props:{list:"data"}},tableColumn:[{type:"checkbox",width:50},{type:"index",width:60},{field:"name",title:"Name"},{field:"nickname",title:"Nickname"},{field:"role",title:"Role"},{field:"describe",title:"Describe",showOverflow:!0}]}}}}],styles:""}},"./demo/XtableDemo/grid/Reverse.vue":
/*!******************************************!*\
  !*** ./demo/XtableDemo/grid/Reverse.vue ***!
  \******************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/grid/Reverse",name:"XtableDemo.grid.Reverse",head:{label:"XtableDemo.grid.Reverse.label",description:"XtableDemo.grid.Reverse.description"},samples:[{id:"XtableDemo.grid.Reverse.sample1",label:"XtableDemo.grid.Reverse.sample1.label",description:"XtableDemo.grid.Reverse.sample1.description",code:"<vue-xgrid\nborder\nclass=\"reverse-table\"\n:show-header=\"false\"\n:columns=\"tableColumn\"\n:data=\"tableData\"></vue-xgrid>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableColumn: [\n        { field: 'name', title: 'Name' },\n        { field: 'role', title: 'Role' },\n        { field: 'sex', title: 'Sex' },\n        { field: 'age', title: 'Age' },\n        { field: 'date3', title: 'Date' }\n      ],\n      tableData: [],\n      \n\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 6)\n    this.reverseTable()\n  },\n\n  methods: {\n    // 反转函数\n    reverseTable () {\n      let tableData = this.tableData\n      this.tableData = this.tableColumn.map(column => {\n        let item = { 0: column.title }\n        tableData.forEach((row, rowIndex) => {\n          item[rowIndex + 1] = row[column.field]\n        })\n        return item\n      })\n      this.tableColumn = [{\n        field: '0',\n        fixed: 'left',\n        width: 80\n      }].concat(tableData.map((item, index) => {\n        return {\n          field: `${index + 1}`,\n          minWidth: 120\n        }\n      }))\n    },\n  }\n})\n<\/script>\n\n<style>\n.reverse-table .vue-xtable-body--row .vue-xtable-body--column:first-child {\n  background-color: #f8f8f9;\n}\n</style>",template:'<div class="source">    <vue-xgrid\n      border\n      class="reverse-table"\n      :show-header="false"\n      :columns="tableColumn"\n      :data="tableData"></vue-xgrid></div>',parameter:{data:function(){return{tableColumn:[{field:"name",title:"Name"},{field:"role",title:"Role"},{field:"sex",title:"Sex"},{field:"age",title:"Age"},{field:"date3",title:"Date"}],tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,6),this.reverseTable()},methods:{reverseTable:function(){var e=this.tableData;this.tableData=this.tableColumn.map(function(n){var t={0:n.title};return e.forEach(function(e,l){t[l+1]=e[n.field]}),t}),this.tableColumn=[{field:"0",fixed:"left",width:80}].concat(e.map(function(e,n){return{field:"".concat(n+1),minWidth:120}}))}}}},{id:"XtableDemo.grid.Reverse.sample2",label:"XtableDemo.grid.Reverse.sample2.label",description:"XtableDemo.grid.Reverse.sample2.description",code:"<vue-xgrid\nborder\nshow-overflow\nclass=\"reverse-table\"\nheight=\"400\"\n:show-header=\"false\"\n:columns=\"tableColumn2\"\n:data=\"tableData2\"></vue-xgrid>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableColumn2: [\n        { field: 'name', title: 'Name' },\n        { field: 'role', title: 'Role' },\n        { field: 'sex', title: 'Sex' },\n        { field: 'age', title: 'Age' },\n        { field: 'date2', title: 'Datetime' },\n        { field: 'rate', title: 'Rate' },\n        { field: 'address2', title: 'Address' },\n        { field: 'date3', title: 'Date' },\n        { field: 'updateTime', title: 'UpdateTime' },\n        { field: 'createTime', title: 'CreateTime' }\n      ],\n      tableData2: [],\n      \n\n    }\n  },\n  created () {\n    this.tableData2 = window.MOCK_DATA_LIST.slice(0, 200)\n    this.reverseTable2()\n  },\n\n  methods: {\n    // 反转函数\n    reverseTable2 () {\n      let tableData = this.tableData2\n      this.tableData2 = this.tableColumn2.map(column => {\n        let item = { 0: column.title }\n        tableData.forEach((row, rowIndex) => {\n          item[rowIndex + 1] = row[column.field]\n        })\n        return item\n      })\n      this.tableColumn2 = [{\n        field: '0',\n        fixed: 'left',\n        width: 80\n      }].concat(tableData.map((item, index) => {\n        return {\n          field: `${index + 1}`,\n          minWidth: 120\n        }\n      }))\n    }\n  }\n})\n<\/script>\n\n<style>\n.reverse-table .vue-xtable-body--row .vue-xtable-body--column:first-child {\n  background-color: #f8f8f9;\n}\n</style>",template:'<div class="source">    <vue-xgrid\n      border\n      show-overflow\n      class="reverse-table"\n      height="400"\n      :show-header="false"\n      :columns="tableColumn2"\n      :data="tableData2"></vue-xgrid></div>',parameter:{data:function(){return{tableColumn2:[{field:"name",title:"Name"},{field:"role",title:"Role"},{field:"sex",title:"Sex"},{field:"age",title:"Age"},{field:"date2",title:"Datetime"},{field:"rate",title:"Rate"},{field:"address2",title:"Address"},{field:"date3",title:"Date"},{field:"updateTime",title:"UpdateTime"},{field:"createTime",title:"CreateTime"}],tableData2:[]}},created:function(){this.tableData2=window.MOCK_DATA_LIST.slice(0,200),this.reverseTable2()},methods:{reverseTable2:function(){var e=this.tableData2;this.tableData2=this.tableColumn2.map(function(n){var t={0:n.title};return e.forEach(function(e,l){t[l+1]=e[n.field]}),t}),this.tableColumn2=[{field:"0",fixed:"left",width:80}].concat(e.map(function(e,n){return{field:"".concat(n+1),minWidth:120}}))}}}}],styles:".reverse-table .vue-xtable-body--row .vue-xtable-body--column:first-child {\n  background-color: #f8f8f9;\n}"}},"./demo/XtableDemo/grid/Template.vue":
/*!*******************************************!*\
  !*** ./demo/XtableDemo/grid/Template.vue ***!
  \*******************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/grid/Template",name:"XtableDemo.grid.Template",head:{label:"XtableDemo.grid.Template.label",description:"XtableDemo.grid.Template.description"},samples:[{id:"XtableDemo.grid.Template.sample1",label:"XtableDemo.grid.Template.sample1.label",description:"XtableDemo.grid.Template.sample1.description",code:"<vue-xgrid\n  border\n  resizable\n  height=\"400\"\n  :toolbar=\"tableToolbar\"\n  :columns=\"tableColumn\"\n  :data=\"tableData\"\n  :edit-config=\"{trigger: 'click', mode: 'cell'}\">\n</vue-xgrid>\n\n<vue-dialog v-model=\"showDetails\" title=\"查看详情\" show-close>\n  <template>\n    <div v-if=\"selectRow\" v-html=\"selectRow.html3\"></div>\n  </template>\n</vue-dialog>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      showDetails: false,\n      selectRow: null,\n      tableData: [],\n      tableColumn: [\n        { type: 'index', width: 50 },\n        {\n          field: 'name',\n          title: 'Name',\n          slots: {\n            default: ({ row, column }) => {\n              return [\n                <span style=\"color: red;\">{ row.name }</span>,\n                <button onClick={ () => this.showDetailEvent(row, column) }>弹框</button>\n              ]\n            }\n          }\n        },\n        {\n          field: 'sex',\n          title: 'Sex',\n          showHeaderOverflow: true,\n          filters: [{ data: '' }],\n          filterMethod: this.filterSexMethod,\n          editRender: { type: 'default' },\n          slots: {\n            default: ({ row, column }) => {\n              return [\n                <a class=\"link\" href=\"/\">我是超链接：{ row.sex }</a>\n              ]\n            },\n            header: ({ column }) => {\n              return [\n                <span>\n                  <i>@</i>\n                  <span style=\"color: red;\" onClick={ this.headerClickEvent }>{ column.title }</span>\n                </span>\n              ]\n            },\n            filter: ({ column, context }) => {\n              return column.filters.map(option => {\n                return <input type=\"type\" value={ option.data } onInput={ evnt => this.changeFilterEvent(evnt, option, context) }/>\n              })\n            },\n            edit: ({ row }) => {\n              return [\n                <input type=\"text\" value={ row.sex } onInput={ evnt => { row.sex = evnt.target.value } }/>\n              ]\n            }\n          }\n        },\n        {\n          field: 'address',\n          title: 'Address',\n          showOverflow: true,\n          slots: {\n            default: ({ row }, h) => {\n              return [\n                h('span', {\n                  style: {\n                    color: 'blue'\n                  },\n                  on: {\n                    click: () => this.addressClickEvent(row)\n                  }\n                }, row.address)\n              ]\n            }\n          }\n        },\n        {\n          field: 'html1',\n          title: 'Html片段',\n          showOverflow: true,\n          slots: {\n            default: ({ row }, h) => {\n              return [\n                <span domPropsInnerHTML={ row.html1 }></span>\n              ]\n            }\n          }\n        },\n        {\n          field: 'img1',\n          title: '图片路径',\n          slots: {\n            default: ({ row }, h) => {\n              return [\n                row.img1 ? <img src={ row.img1 } style=\"width: 100px;\"/> : <span>无</span>\n              ]\n            }\n          }\n        }\n      ],\n      tableToolbar: {\n        setting: true,\n        slots: {\n          buttons: () => {\n            return [\n              <vue-checkbox>Option</vue-checkbox>,\n              <vue-button>按钮1</vue-button>,\n              <vue-button>按钮2</vue-button>\n            ]\n          }\n        }\n      },\n    }\n  },\n  created () {\n    let list = window.MOCK_DATA_LIST.slice(0, 100)\n    this.tableData = list\n  },\n  mounted () {\n    Array.from(this.$el.querySelectorAll('pre code')).forEach((block) => {\n      hljs.highlightBlock(block)\n    })\n  },\n  methods: {\n    showDetailEvent (row) {\n      this.selectRow = row\n      this.showDetails = true\n    },\n    headerClickEvent (evnt) {\n      this.$alert({message: '头部点击事件'})\n    },\n    addressClickEvent (row) {\n      this.$alert({message: `address点击事件：${row.row}`})\n    },\n    filterSexMethod ({ option, row }) {\n      return row.sex === option.data\n    },\n    changeFilterEvent (evnt, option, context) {\n      option.data = evnt.target.value\n      context.changeMultipleOption(evnt, !!option.data, option)\n    }\n  }\n})\n<\/script>",template:'<div class="source">    <vue-xgrid\n      border\n      resizable\n      height="400"\n      :toolbar="tableToolbar"\n      :columns="tableColumn"\n      :data="tableData"\n      :edit-config="{trigger: \'click\', mode: \'cell\'}">\n    </vue-xgrid>\n\n    <vue-dialog v-model="showDetails" title="查看详情" show-close>\n      <template>\n        <div v-if="selectRow" v-html="selectRow.html3"></div>\n      </template>\n    </vue-dialog></div>',parameter:{data:function(){var e=this,n=this.$createElement;return{showDetails:!1,selectRow:null,tableData:[],tableColumn:[{type:"index",width:50},{field:"name",title:"Name",slots:{default:function(t){var l=t.row,o=t.column;return[n("span",{style:"color: red;"},[l.name]),n("button",{on:{click:function(){return e.showDetailEvent(l,o)}}},["弹框"])]}}},{field:"sex",title:"Sex",showHeaderOverflow:!0,filters:[{data:""}],filterMethod:this.filterSexMethod,editRender:{type:"default"},slots:{default:function(e){var t=e.row;e.column;return[n("a",{class:"link",attrs:{href:"/"}},["我是超链接：",t.sex])]},header:function(t){var l=t.column;return[n("span",[n("i",["@"]),n("span",{style:"color: red;",on:{click:e.headerClickEvent}},[l.title])])]},filter:function(t){var l=t.column,o=t.context;return l.filters.map(function(t){return n("input",{attrs:{type:"type"},domProps:{value:t.data},on:{input:function(n){return e.changeFilterEvent(n,t,o)}}})})},edit:function(e){var t=e.row;return[n("input",{attrs:{type:"text"},domProps:{value:t.sex},on:{input:function(e){t.sex=e.target.value}}})]}}},{field:"address",title:"Address",showOverflow:!0,slots:{default:function(n,t){var l=n.row;return[t("span",{style:{color:"blue"},on:{click:function(){return e.addressClickEvent(l)}}},l.address)]}}},{field:"html1",title:"Html片段",showOverflow:!0,slots:{default:function(e,n){return[n("span",{domProps:{innerHTML:e.row.html1}})]}}},{field:"img1",title:"图片路径",slots:{default:function(e,n){var t=e.row;return[t.img1?n("img",{attrs:{src:t.img1},style:"width: 100px;"}):n("span",["无"])]}}}],tableToolbar:{setting:!0,slots:{buttons:function(){return[n("vue-checkbox",["Option"]),n("vue-button",["按钮1"]),n("vue-button",["按钮2"])]}}}}},created:function(){var e=window.MOCK_DATA_LIST.slice(0,100);this.tableData=e},mounted:function(){Array.from(this.$el.querySelectorAll("pre code")).forEach(function(e){hljs.highlightBlock(e)})},methods:{showDetailEvent:function(e){this.selectRow=e,this.showDetails=!0},headerClickEvent:function(e){this.$alert({message:"头部点击事件"})},addressClickEvent:function(e){this.$alert({message:"address点击事件：".concat(e.row)})},filterSexMethod:function(e){var n=e.option;return e.row.sex===n.data},changeFilterEvent:function(e,n,t){n.data=e.target.value,t.changeMultipleOption(e,!!n.data,n)}}}}],styles:""}},"./demo/XtableDemo/grid/Toolbar.vue":
/*!******************************************!*\
  !*** ./demo/XtableDemo/grid/Toolbar.vue ***!
  \******************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/grid/Toolbar",name:"XtableDemo.grid.Toolbar",head:{label:"XtableDemo.grid.Toolbar.label",description:"XtableDemo.grid.Toolbar.description"},samples:[{id:"XtableDemo.grid.Toolbar.sample1",label:"XtableDemo.grid.Toolbar.sample1.label",description:"XtableDemo.grid.Toolbar.sample1.description",code:"<vue-xgrid\nborder\nresizable\nheight=\"530\"\n:pager-config=\"tablePage\"\n:proxy-config=\"tableProxy\"\n:columns=\"tableColumn\"\n:toolbar=\"tableToolbar\"\n:edit-config=\"{trigger: 'click', mode: 'row', showStatus: true}\"\n@toolbar-button-click=\"toolbarButtonClickEvent\"></vue-xgrid>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tablePage: {\n        pageSize: 15\n      },\n      tableProxy: {\n        props: {\n          result: 'data.result',\n          total: 'data.page.total'\n        },\n        ajax: {\n          // page 对象： { pageSize, currentPage }\n          query: ({ page }) => Vue.http.get(`/api/user/page/list/${page.pageSize}/${page.currentPage}`),\n          // body 对象： { removeRecords }\n          delete: ({ body }) => Vue.http.post('/api/user/save', body),\n          // body 对象： { insertRecords, updateRecords, removeRecords, pendingRecords }\n          save: ({ body }) => Vue.http.post('/api/user/save', body)\n        }\n      },\n      tableToolbar: {\n        id: 'toolbar_demo_1',\n        buttons: [\n          { code: 'insert_actived', name: '新增' },\n          {\n            code: 'mark_cancel',\n            name: '标记',\n            dropdowns: [\n              { code: 'delete_selection', name: '删除选中' },\n              { code: 'remove_selection', name: '移除数据' }\n            ]\n          },\n          { code: 'save', name: '保存' },\n          {\n            name: '数据导出',\n            dropdowns: [\n              { code: 'open_import', name: '高级导入' },\n              { code: 'open_export', name: '高级导出' }\n            ]\n          },\n          { code: 'exportData111', name: '自定义按钮' }\n        ],\n        export: true,\n        refresh: true,\n        resizable: {\n          storage: true\n        },\n        setting: {\n          storage: true\n        }\n      },\n      tableColumn: [\n        { type: 'checkbox', width: 50 },\n        { type: 'index', width: 60 },\n        { field: 'name', title: 'Name', editRender: { name: 'input' } },\n        { field: 'nickname', title: 'Nickname', editRender: { name: 'input' } },\n        { field: 'role', title: 'Role', editRender: { name: 'input' } },\n        { field: 'describe', title: 'Describe', showOverflow: true, editRender: { name: 'input' } }\n      ],\n\n    }\n  },\n\n  methods: {\n    toolbarButtonClickEvent ({ code }, event) {\n      switch (code) {\n        case 'myBtn':\n          this.$alert({ message: code })\n          break\n      }\n    }\n  }\n})\n<\/script>",template:'<div class="source">    <vue-xgrid\n      border\n      resizable\n      height="530"\n      :pager-config="tablePage"\n      :proxy-config="tableProxy"\n      :columns="tableColumn"\n      :toolbar="tableToolbar"\n      :edit-config="{trigger: \'click\', mode: \'row\', showStatus: true}"\n      @toolbar-button-click="toolbarButtonClickEvent"></vue-xgrid></div>',parameter:{data:function(){return{tablePage:{pageSize:15},tableProxy:{props:{result:"data.result",total:"data.page.total"},ajax:{query:function(e){var n=e.page;return Vue.http.get("/api/user/page/list/".concat(n.pageSize,"/").concat(n.currentPage))},delete:function(e){var n=e.body;return Vue.http.post("/api/user/save",n)},save:function(e){var n=e.body;return Vue.http.post("/api/user/save",n)}}},tableToolbar:{id:"toolbar_demo_1",buttons:[{code:"insert_actived",name:"新增"},{code:"mark_cancel",name:"标记",dropdowns:[{code:"delete_selection",name:"删除选中"},{code:"remove_selection",name:"移除数据"}]},{code:"save",name:"保存"},{name:"数据导出",dropdowns:[{code:"open_import",name:"高级导入"},{code:"open_export",name:"高级导出"}]},{code:"exportData111",name:"自定义按钮"}],export:!0,refresh:!0,resizable:{storage:!0},setting:{storage:!0}},tableColumn:[{type:"checkbox",width:50},{type:"index",width:60},{field:"name",title:"Name",editRender:{name:"input"}},{field:"nickname",title:"Nickname",editRender:{name:"input"}},{field:"role",title:"Role",editRender:{name:"input"}},{field:"describe",title:"Describe",showOverflow:!0,editRender:{name:"input"}}]}},methods:{toolbarButtonClickEvent:function(e,n){var t=e.code;switch(t){case"myBtn":this.$alert({message:t})}}}}}],styles:""}},"./demo/XtableDemo/grid/Tree.vue":
/*!***************************************!*\
  !*** ./demo/XtableDemo/grid/Tree.vue ***!
  \***************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/grid/Tree",name:"XtableDemo.grid.Tree",head:{label:"XtableDemo.grid.Tree.label",description:"XtableDemo.grid.Tree.description"},samples:[{id:"XtableDemo.grid.Tree.sample1",label:"XtableDemo.grid.Tree.sample1.label",description:"XtableDemo.grid.Tree.sample1.description",code:"<vue-xgrid\nborder\nresizable\n:proxy-config=\"tableProxy\"\n:columns=\"tableColumn\"\n:tree-config=\"{children: 'children'}\"></vue-xgrid>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableProxy: {\n        ajax: {\n          // 处理树结构转换\n          query: () => Vue.http.get('/api/file/list').then(data => VueUtil.toArrayTree(data.body, { key: 'id', parentKey: 'parentId', children: 'children' }))\n        }\n      },\n      tableColumn: [\n        { field: 'id', title: 'ID', width: 120, treeNode: true },\n        { field: 'name', title: '名称' },\n        { field: 'size', title: '大小' },\n        { field: 'createTime', title: '创建时间', formatter: this.formatterDate },\n        { field: 'updateTime', title: '修改时间', formatter: this.formatterDate }\n      ],\n\n    }\n  },\n\n  methods: {\n    formatterDate ({ cellValue }) {\n      return VueUtil.formatDate(cellValue, 'yyyy-MM-dd HH:mm:ss')\n    }\n  }\n})\n<\/script>",template:'<div class="source">    <vue-xgrid\n      border\n      resizable\n      :proxy-config="tableProxy"\n      :columns="tableColumn"\n      :tree-config="{children: \'children\'}"></vue-xgrid></div>',parameter:{data:function(){return{tableProxy:{ajax:{query:function(){return Vue.http.get("/api/file/list").then(function(e){return VueUtil.toArrayTree(e.body,{key:"id",parentKey:"parentId",children:"children"})})}}},tableColumn:[{field:"id",title:"ID",width:120,treeNode:!0},{field:"name",title:"名称"},{field:"size",title:"大小"},{field:"createTime",title:"创建时间",formatter:this.formatterDate},{field:"updateTime",title:"修改时间",formatter:this.formatterDate}]}},methods:{formatterDate:function(e){var n=e.cellValue;return VueUtil.formatDate(n,"yyyy-MM-dd HH:mm:ss")}}}}],styles:""}},"./demo/XtableDemo/grid/TreeEdit.vue":
/*!*******************************************!*\
  !*** ./demo/XtableDemo/grid/TreeEdit.vue ***!
  \*******************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/grid/TreeEdit",name:"XtableDemo.grid.TreeEdit",head:{label:"XtableDemo.grid.TreeEdit.label",description:"XtableDemo.grid.TreeEdit.description"},samples:[{id:"XtableDemo.grid.TreeEdit.sample1",label:"XtableDemo.grid.TreeEdit.sample1.label",description:"XtableDemo.grid.TreeEdit.sample1.description",code:"<vue-xgrid\nresizable\nhighlight-hover-row\n:proxy-config=\"tableProxy\"\n:columns=\"tableColumn\"\n:toolbar=\"tableToolbar\"\n:checkbox-config=\"{labelField: 'id'}\"\n:tree-config=\"{children: 'children'}\"\n:edit-config=\"{trigger: 'click', mode: 'row', showStatus: true}\"></vue-xgrid>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableProxy: {\n        ajax: {\n          // 处理树结构转换\n          query: () => Vue.http.get('/api/file/list').then(data => VueUtil.toArrayTree(data.body, { key: 'id', parentKey: 'parentId', children: 'children' })),\n          save: ({ body }) => Vue.http.post('/api/file/save', body)\n        }\n      },\n      tableToolbar: {\n        id: 'treeEdit_demo1',\n        buttons: [\n          { code: 'reload', name: '刷新', disabled: false },\n          { code: 'mark_cancel', name: '标记/取消', disabled: false },\n          { code: 'save', name: '保存', disabled: false },\n          { code: 'export', name: '导出.csv', disabled: false },\n          { code: 'other0', name: '禁用的按钮1', disabled: true },\n          {\n            name: '禁用下拉按钮',\n            disabled: false,\n            dropdowns: [\n              {\n                code: 'other1',\n                name: '下拉的按钮1',\n                disabled: false\n              },\n              {\n                code: 'other2',\n                name: '下拉的按钮2',\n                disabled: true\n              },\n              {\n                code: 'other3',\n                name: '下拉的按钮3',\n                disabled: false\n              }\n            ]\n          }\n        ],\n        refresh: true,\n        resizable: {\n          storage: true\n        },\n        setting: {\n          storage: true\n        }\n      },\n      tableColumn: [\n        { type: 'checkbox', title: '全选', width: 180, treeNode: true },\n        { field: 'name', title: '名称', editRender: { name: 'input' } },\n        { field: 'size', title: '大小', editRender: { name: 'input' } },\n        { field: 'createTime', title: '创建时间', formatter: this.formatterDate },\n        { field: 'updateTime', title: '更新时间', formatter: this.formatterDate }\n      ],\n\n    }\n  },\n\n  methods: {\n    formatterDate ({ cellValue }) {\n      return VueUtil.formatDate(cellValue, 'yyyy-MM-dd HH:mm:ss')\n    }\n  }\n})\n<\/script>",template:'<div class="source">    <vue-xgrid\n      resizable\n      highlight-hover-row\n      :proxy-config="tableProxy"\n      :columns="tableColumn"\n      :toolbar="tableToolbar"\n      :checkbox-config="{labelField: \'id\'}"\n      :tree-config="{children: \'children\'}"\n      :edit-config="{trigger: \'click\', mode: \'row\', showStatus: true}"></vue-xgrid></div>',parameter:{data:function(){return{tableProxy:{ajax:{query:function(){return Vue.http.get("/api/file/list").then(function(e){return VueUtil.toArrayTree(e.body,{key:"id",parentKey:"parentId",children:"children"})})},save:function(e){var n=e.body;return Vue.http.post("/api/file/save",n)}}},tableToolbar:{id:"treeEdit_demo1",buttons:[{code:"reload",name:"刷新",disabled:!1},{code:"mark_cancel",name:"标记/取消",disabled:!1},{code:"save",name:"保存",disabled:!1},{code:"export",name:"导出.csv",disabled:!1},{code:"other0",name:"禁用的按钮1",disabled:!0},{name:"禁用下拉按钮",disabled:!1,dropdowns:[{code:"other1",name:"下拉的按钮1",disabled:!1},{code:"other2",name:"下拉的按钮2",disabled:!0},{code:"other3",name:"下拉的按钮3",disabled:!1}]}],refresh:!0,resizable:{storage:!0},setting:{storage:!0}},tableColumn:[{type:"checkbox",title:"全选",width:180,treeNode:!0},{field:"name",title:"名称",editRender:{name:"input"}},{field:"size",title:"大小",editRender:{name:"input"}},{field:"createTime",title:"创建时间",formatter:this.formatterDate},{field:"updateTime",title:"更新时间",formatter:this.formatterDate}]}},methods:{formatterDate:function(e){var n=e.cellValue;return VueUtil.formatDate(n,"yyyy-MM-dd HH:mm:ss")}}}}],styles:""}},"./demo/XtableDemo/index.js":
/*!**********************************!*\
  !*** ./demo/XtableDemo/index.js ***!
  \**********************************/
/*! no static exports found */function(e,n,t){"use strict";t(/*! ./mock-data */"./demo/XtableDemo/mock-data.js");var l=t("./demo/XtableDemo sync recursive \\.vue$");var o={},a="";l.keys().forEach(function(e){var n=l(e).default,t=n.name.split(".")[1];o[t]||(o[t]={head:{label:"XtableDemo."+t+".label"},children:[]}),o[t].children.push(n),n.styles.trim()&&(a+=n.styles)}),function(e){var n=document.getElementsByTagName("head")[0],t=document.createElement("style");t.setAttribute("type","text/css"),t.styleSheet?t.styleSheet.cssText=e:t.appendChild(document.createTextNode(e)),n.appendChild(t)}(a);var i={base:["Basic","Size","Overflow","Stripe","Border","Style","Index","DynamicStyle","Header","Resizable","MaxHeight","AutoHeight","Height","Fixed","FixedFull","Group","HeaderHighlight","Current","Radio","Selection","Sort","Filter","Empty","Loading","Format"],advanced:["Event","Template","Dynamic","ManualFilter","Span","SpanRow","Footer","FooterSpan","Import","Export","Print","FixedType","Menu","MenuPrivilege","Expand","Toolbar","Custom","CustomStorage","CustomlWidthStorage","Search","Page","Highlight"],tree:["Basic","Radio","Selection","Fixed","Expand","CellValid","Edit","Toolbar","Insert","Menu","Highlight","Lazy","RowValid","ForceCellValid","ForceRowValid","FullEdit","GroupBy","Keyboard","Span","Template"],edit:["Manual","Click","DBLClick","Select","AutoClear","Insert","Remove","Revert","Status","CellDisable","RowDisable","CellValid","RowValid","ForceCellValid","ForceRowValid","Keyboard","Footer","FooterImmediately","Expand","Menu","Span","UniqueSelect","CascadingSelect","Events","Template","Full"],grid:["Basic","Group","Reverse","Template","Footer","Page","Proxy","PageProxy","Edit","Toolbar","CustomToolbar","Dynamic","Menu","Tree","TreeEdit","FullQuery","FullEdit","Span"],scroll:["Scroll","Highlight","Keyboard","Edit","CellValid","RowValid","PartialLoad","FullPartialLoad","Template","ForceCellValid","ForceRowValid","ScrollRows","ScrollCols","ScrollFullRows","ScrollFullCols","Tree"]};VueUtil.keys(o).forEach(function(e){var n=i[e];o[e].children.sort(function(e,t){if(!n)return 0;var l=VueUtil.last(e.name.split(".")),o=VueUtil.last(t.name.split("."));return(n.indexOf(l)>=0?n.indexOf(l):999)-(n.indexOf(o)>=0?n.indexOf(o):999)})});var u={head:{label:"XtableDemo.label"},children:[o.base,o.advanced,o.grid,o.tree,o.scroll,o.edit]};e.exports=u},"./demo/XtableDemo/mock-data.js":
/*!**************************************!*\
  !*** ./demo/XtableDemo/mock-data.js ***!
  \**************************************/
/*! no static exports found */function(e,n){function t(e){var n,t,l;for(l=e.length-1;l>0;l--)n=Math.floor(Math.random()*(l+1)),t=e[l],e[l]=e[n],e[n]=t;return e}String.prototype.repeat||(String.prototype.repeat=function(e){"use strict";if(null==this)throw new TypeError("can't convert "+this+" to object");var n=""+this;if((e=+e)!=e&&(e=0),e<0)throw new RangeError("repeat count must be non-negative");if(e==1/0)throw new RangeError("repeat count must be less than infinity");if(e=Math.floor(e),0==n.length||0==e)return"";if(n.length*e>=1<<28)throw new RangeError("repeat count must not overflow maximum string size");var t=n.length*e;for(e=Math.floor(Math.log(e)/Math.log(2));e;)n+=n,e--;return n+=n.substring(0,t-n.length)});var l=window.MOCK_COLUMN_LIST=[],o=window.MOCK_DATA_LIST=[],a=Date.now(),i=0,u=1e5,r=t(["a","T","b","v","G","k","r","H","x","z","c","d","e","p","U","f","s","N"]),m=t(["徐","李","雷","赵","马","孙","钱","蒋","老","蔡","吕","项","徐","杨","胡","杜","嬴","叼"]);!function e(){for(var n=VueUtil.isIE?500:2e3,t=0;t<n;t++){if(a+=72e5,i++,l.length<1e4){var c={field:i%2==0?"age":i%3==0?"rate":"name",title:"cloumn_"+i,width:i%6==0?340:t%4==0?260:t%3==0?120:160,resizable:!0};0===i&&(c.width=100),1===i?(c.type="checkbox",c.title="多选"):2===i&&(c.type="index",c.title="序号"),i<4?(c.fixed="left",c.sortable=!0):5===i&&(c.filters=[{label:"id < 100",value:100},{label:"id < 2000",value:2e3}],c.filterMethod=function(e){var n=e.value,t=e.row;return e.column,t.id<n}),l.push(c)}var s=new Date(a);o.push({id:i,name:r[i%10]+r[i%5]+i,nickname:m[i%10]+m[i%5]+i,role:t%2==0?"前端":"后端",role1:1===t?"1":"",key:"home.label.key"+Math.max(0,t%2==0?t-1:t),language:t%2==0?"zh_CN":"en_US",content:t%2==0?"内容"+t:"Content"+t,checked:!1,flag:t%2==0,date:s,date1:s,date2:"09:00:00",date3:t%3==0?VueUtil.formatDate(a,"yyyy-MM-dd"):"",date4:s,date5:"09:00",date6:null,date11:[],date12:t%3==0?VueUtil.formatDate(a-666,"yyyy-MM-dd"):"",date13:t%4==0?VueUtil.formatDate(a-9999,"yyyy-MM-dd"):"",num:(.234*t).toFixed(0),num1:(.185*t).toFixed(0),num2:(.567*t).toFixed(1),num3:(.789*t).toFixed(1),num4:(.348*t).toFixed(2),num5:(.967*t).toFixed(2),num6:"".concat((.234*t).toFixed(0)),color:t%4==0?"rgba(255, 0, 0, 0.8)":t%3==0?"rgba(0, 255, 0, 0.8)":null,slider:t%5==0?40:t%4==0?20:t%3==0?60:0,list:[],time:a+36e4,sex:t%3?"0":"1",sex1:t%3?["0"]:t%4?["0","1"]:t%5?[]:["1"],sex2:t%4?"0":"1",sex3:t%3?0:1,sex4:t%4?0:1,sex5:t%5?"0":"1",age:t%6==0?18:t%4==0?26:t%3==0?28:30,age1:"".concat(t%6==0?18:t%4==0?26:t%3==0?28:30),region:t%4==0?[19,199,1773]:t%3==0?[9,73,719]:[1,1,5],rate:t%4==0?2:t%3==0?3:0,rate1:"".concat(t%4==0?2:t%3==0?3:0),address:"地址 地址地址 地址地址 址地址 址地址  址地址 址地址址地址址地址 地址".concat(t),address2:"地址 地址地址 地址".concat(t),img:"https://spring21cn.github.io/vue-component/resources/images/logo/test.png",img1:t%4==0?"https://spring21cn.github.io/vue-component/resources/images/logo/test.png":"",html1:t%3==0?'<span style="color:red;">我是一段Html代码</span><br><span style="color:blue;">我是一段Html代码'+t+'</span><br><span style="color:green;">绿色！</span>':"",html2:t%3==0?'<span style="color:red;">我是一段Html代码</span><span style="color:blue;">我是一段Html代码'+t+'</span><span style="color:green;">绿色！</span>':"",html3:t+' -> <span style="color:red;">我是一段Html代码</span><span style="color:blue;">我是一段Html代码'+t+'</span><span style="color:green;">绿色！</span><br><span style="color:green;">绿色！</span><br><span style="color:green;">我是一段Html代码,我是一段Html代码，我是一段Html代码，绿色！</span><br><span style="color:red;">我是一段Html代码,我是一段Html代码，我是一段Html代码</span><br><span style="color:red;">我是一段Html代码,我是一段Html代码，我是一段Html代码</span><br><span style="color:green;">我是一段Html代码,我是一段Html代码，我是一段Html代码</span>',text:t+" -> "+m.concat(r).join("").repeat(t%6==0?12:t%4==16?18:t%3==0?22:26),updateTime:a,createTime:a,attr1:"",attr2:[],attr3:t%2?"1":"",attr4:"",attr5:0,loading:!1,info:{name2:"name2_"+i,more:{sex2:t%3?"0":"1",age2:t%2==0?26:30}}})}i<u&&setTimeout(e,200)}(),window.MOCK_TREE_DATA_LIST=[{id:"10000",name:"文件夹 10000",size:"53k",type:"",date:"2019-05-16",children:[{id:"11000",name:"文件 11000",size:"11k",type:"js",date:"2019-05-16"},{id:"12000",name:"文件夹 12000",size:"22k",type:"",date:"2019-05-16",children:[{id:"12100",name:"文件夹 12100",size:"60k",type:"",date:"2019-05-16",children:[{id:"12110",name:"文件 12110",size:"100k",type:"html",date:"2019-05-16"}]},{id:"122000",name:"文件 122000",size:"80k",type:"avi",date:"2019-05-16"}]}]},{id:"20000",name:"文件 20000",size:"66k",type:"png",date:"2019-05-16"},{id:"30000",name:"文件夹 30000",size:"3k",type:"",date:"2019-05-16",children:[{id:"31000",name:"文件夹 31000",size:"9k",type:"",date:"2019-05-16",children:[{id:"31100",name:"文件 31100",size:"mp3",type:"js",date:"2019-05-16"},{id:"31200",name:"文件 31200",size:"224k",type:"java",date:"2019-05-16"}]},{id:"32000",name:"文件夹 32000",size:"33k",type:"",date:"2019-05-16",children:[{id:"32100",name:"文件 32100",size:"35k",type:"mp4",date:"2019-05-16"}]}]}]},"./demo/XtableDemo/scroll/CellValid.vue":
/*!**********************************************!*\
  !*** ./demo/XtableDemo/scroll/CellValid.vue ***!
  \**********************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/scroll/CellValid",name:"XtableDemo.scroll.CellValid",head:{label:"XtableDemo.scroll.CellValid.label",description:"XtableDemo.scroll.CellValid.description"},samples:[{id:"XtableDemo.scroll.CellValid.sample1",label:"XtableDemo.scroll.CellValid.sample1.label",description:"XtableDemo.scroll.CellValid.sample1.description",code:'<vue-toolbar :refresh="{query: findList}">\n  <template v-slot:buttons>\n    <vue-dropdown>\n      <vue-button>校验操作<i class="vue-icon-arrow-down vue-icon--right"></i></vue-button>\n      <vue-dropdown-menu slot="dropdown">\n        <vue-dropdown-item @click.native="validEvent">基本校验</vue-dropdown-item>\n        <vue-dropdown-item @click.native="fullValidEvent">完整校验</vue-dropdown-item>\n        <vue-dropdown-item @click.native="selectValidEvent">选中校验</vue-dropdown-item>\n      </vue-dropdown-menu>\n    </vue-dropdown>\n  </template>\n</vue-toolbar>\n\n<vue-xtable\n  border\n  resizable\n  show-overflow\n  ref="xTable"\n  height="300"\n  :loading="loading"\n  :edit-rules="validRules"\n  :edit-config="{trigger: \'click\', mode: \'cell\', showStatus: true}"\n  :checkbox-config="{checkField: \'checked\'}">\n  <vue-xtable-column type="checkbox" width="60"></vue-xtable-column>\n  <vue-xtable-column type="index" width="100"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" sortable width="200" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age" width="200" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex" width="200" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="rate" title="Rate" width="200"></vue-xtable-column>\n  <vue-xtable-column field="region" title="Region" width="200"></vue-xtable-column>\n  <vue-xtable-column field="time" title="Time" width="200"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" width="300" show-overflow></vue-xtable-column>\n  <vue-xtable-column field="updateTime" title="UpdateTime" width="200"></vue-xtable-column>\n  <vue-xtable-column field="createTime" title="CreateTime" width="200"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      loading: false,\n      validRules: {\n        name: [\n          { required: true, message: \'名称必须填写\' },\n          { min: 3, max: 50, message: \'名称长度在 3 到 50 个字符\' }\n        ],\n        sex: [\n          { required: true, message: \'性别必须填写\' }\n        ]\n      },\n\n    }\n  },\n  created () {\n    this.findList()\n  },\n\n  methods: {\n    findList () {\n      this.loading = true\n      return new Promise(resolve => {\n        setTimeout(() => {\n          let tableData = window.MOCK_DATA_LIST.slice(0, 1000)\n          // 阻断 vue 对大数组的双向绑定，避免 vue 绑定大数据造成短暂的卡顿\n          if (this.$refs.xTable) {\n            this.$refs.xTable.loadData(tableData)\n          }\n          resolve()\n          this.loading = false\n        }, 300)\n      })\n    },\n    validEvent () {\n      this.$refs.xTable.validate(valid => {\n        if (valid) {\n          this.$notify.success({ message:\'校验成功！\'});\n        } else {\n          this.$notify.error({ message:\'校验不通过！\'});\n        }\n      })\n    },\n    fullValidEvent () {\n      this.$refs.xTable.fullValidate((valid, errMap) => {\n        if (valid) {\n          this.$notify.success({ message:\'校验成功！\'});\n        } else {\n          let msgList = []\n          Object.values(errMap).forEach(errList => {\n            errList.forEach(params => {\n              let { rowIndex, column, rules } = params\n              rules.forEach(rule => {\n                msgList.push(`第 ${rowIndex} 行 ${column.title} 校验错误：${rule.message}`)\n              })\n            })\n          })\n          var h = this.$createElement;\n          this.$alert({\n            type: "error",\n            message: h(\'div\',[msgList.map(function (msg) {\n              return h("div", [msg]);\n            })])\n          });\n        }\n      })\n    },\n    selectValidEvent () {\n      let selectRecords = this.$refs.xTable.getSelectRecords()\n      if (selectRecords.length > 0) {\n        this.$refs.xTable.validate(selectRecords, valid => {\n          if (valid) {\n            this.$notify.success({ message:\'校验成功！\'});\n          } else {\n            this.$notify.error({ message:\'校验不通过！\'});\n          }\n        })\n      } else {\n        this.$notify.warning({ message:\'未选中数据！\'});\n      }\n    },\n  }\n})\n<\/script>',template:'<div class="source">    <vue-toolbar :refresh="{query: findList}">\n      <template v-slot:buttons>\n        <vue-dropdown>\n          <vue-button>校验操作<i class="vue-icon-arrow-down vue-icon--right"></i></vue-button>\n          <vue-dropdown-menu slot="dropdown">\n            <vue-dropdown-item @click.native="validEvent">基本校验</vue-dropdown-item>\n            <vue-dropdown-item @click.native="fullValidEvent">完整校验</vue-dropdown-item>\n            <vue-dropdown-item @click.native="selectValidEvent">选中校验</vue-dropdown-item>\n          </vue-dropdown-menu>\n        </vue-dropdown>\n      </template>\n    </vue-toolbar>\n\n    <vue-xtable\n      border\n      resizable\n      show-overflow\n      ref="xTable"\n      height="300"\n      :loading="loading"\n      :edit-rules="validRules"\n      :edit-config="{trigger: \'click\', mode: \'cell\', showStatus: true}"\n      :checkbox-config="{checkField: \'checked\'}">\n      <vue-xtable-column type="checkbox" width="60"></vue-xtable-column>\n      <vue-xtable-column type="index" width="100"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" sortable width="200" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age" width="200" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex" width="200" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="rate" title="Rate" width="200"></vue-xtable-column>\n      <vue-xtable-column field="region" title="Region" width="200"></vue-xtable-column>\n      <vue-xtable-column field="time" title="Time" width="200"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" width="300" show-overflow></vue-xtable-column>\n      <vue-xtable-column field="updateTime" title="UpdateTime" width="200"></vue-xtable-column>\n      <vue-xtable-column field="createTime" title="CreateTime" width="200"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{loading:!1,validRules:{name:[{required:!0,message:"名称必须填写"},{min:3,max:50,message:"名称长度在 3 到 50 个字符"}],sex:[{required:!0,message:"性别必须填写"}]}}},created:function(){this.findList()},methods:{findList:function(){var e=this;return this.loading=!0,new Promise(function(n){setTimeout(function(){var t=window.MOCK_DATA_LIST.slice(0,1e3);e.$refs.xTable&&e.$refs.xTable.loadData(t),n(),e.loading=!1},300)})},validEvent:function(){var e=this;this.$refs.xTable.validate(function(n){n?e.$notify.success({message:"校验成功！"}):e.$notify.error({message:"校验不通过！"})})},fullValidEvent:function(){var e=this;this.$refs.xTable.fullValidate(function(n,t){if(n)e.$notify.success({message:"校验成功！"});else{var l=[];Object.values(t).forEach(function(e){e.forEach(function(e){var n=e.rowIndex,t=e.column;e.rules.forEach(function(e){l.push("第 ".concat(n," 行 ").concat(t.title," 校验错误：").concat(e.message))})})});var o=e.$createElement;e.$alert({type:"error",message:o("div",[l.map(function(e){return o("div",[e])})])})}})},selectValidEvent:function(){var e=this,n=this.$refs.xTable.getSelectRecords();n.length>0?this.$refs.xTable.validate(n,function(n){n?e.$notify.success({message:"校验成功！"}):e.$notify.error({message:"校验不通过！"})}):this.$notify.warning({message:"未选中数据！"})}}}}],styles:""}},"./demo/XtableDemo/scroll/Edit.vue":
/*!*****************************************!*\
  !*** ./demo/XtableDemo/scroll/Edit.vue ***!
  \*****************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/scroll/Edit",name:"XtableDemo.scroll.Edit",head:{label:"XtableDemo.scroll.Edit.label",description:"XtableDemo.scroll.Edit.description"},samples:[{id:"XtableDemo.scroll.Edit.sample1",label:"XtableDemo.scroll.Edit.sample1.label",description:"XtableDemo.scroll.Edit.sample1.description",code:'<vue-toolbar export :refresh="{query: findList}">\n  <template v-slot:buttons>\n    <vue-dropdown  @command="handleCommand1">\n      <vue-button>新增操作<i class="vue-icon-arrow-down vue-icon--right"></i></vue-button>\n      <vue-dropdown-menu slot="dropdown">\n        <vue-dropdown-item command="insertFirst" @click="insertEvent(null)">从第一行插入</vue-dropdown-item>\n        <vue-dropdown-item command="insertLast" @click="insertEvent(-1)">从最后插入</vue-dropdown-item>\n        <vue-dropdown-item command="insertAt100" @click="insertEvent($refs.xTable.getData(100))">插入到 100 行</vue-dropdown-item>\n      </vue-dropdown-menu>\n    </vue-dropdown>\n\n    <vue-dropdown  @command="handleCommand2">\n      <vue-button>删除操作<i class="vue-icon-arrow-down vue-icon--right"></i></vue-button>\n      <vue-dropdown-menu slot="dropdown">\n        <vue-dropdown-item command="removeSelecteds">删除选中</vue-dropdown-item>\n        <vue-dropdown-item command="removeFirst">删除第一行</vue-dropdown-item>\n        <vue-dropdown-item command="removeLast">删除最后一行</vue-dropdown-item>\n        <vue-dropdown-item command="removeAt100">删除第 100 行</vue-dropdown-item>\n      </vue-dropdown-menu>\n    </vue-dropdown>\n    <vue-button @click="getInsertEvent">获取新增</vue-button>\n    <vue-button @click="getRemoveEvent">获取删除</vue-button>\n    <vue-button @click="getUpdateEvent">获取修改</vue-button>\n  </template>\n</vue-toolbar>\n\n<vue-xtable\n  border\n  resizable\n  show-overflow\n  ref="xTable"\n  height="300"\n  :loading="loading"\n  :edit-config="{trigger: \'click\', mode: \'row\', showStatus: true}"\n  :checkbox-config="{checkField: \'checked\'}">\n  <vue-xtable-column type="checkbox" width="60"></vue-xtable-column>\n  <vue-xtable-column type="index" width="100"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" sortable width="200" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age" width="200" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex" width="200" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="rate" title="Rate" width="200"></vue-xtable-column>\n  <vue-xtable-column field="region" title="Region" width="200"></vue-xtable-column>\n  <vue-xtable-column field="time" title="Time" width="200"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" width="300" show-overflow></vue-xtable-column>\n  <vue-xtable-column field="updateTime" title="UpdateTime" width="200"></vue-xtable-column>\n  <vue-xtable-column field="createTime" title="CreateTime" width="200"></vue-xtable-column>\n  <vue-xtable-column field="attr1" title="Attr1" width="200"></vue-xtable-column>\n  <vue-xtable-column field="attr2" title="Attr2" width="200"></vue-xtable-column>\n  <vue-xtable-column field="attr3" title="Attr3" width="200"></vue-xtable-column>\n  <vue-xtable-column field="attr4" title="Attr4" width="200"></vue-xtable-column>\n  <vue-xtable-column field="attr5" title="Attr5" width="200"></vue-xtable-column>\n  <vue-xtable-column field="attr6" title="Attr6" width="200"></vue-xtable-column>\n  <vue-xtable-column field="attr7" title="Attr7" width="200"></vue-xtable-column>\n  <vue-xtable-column field="attr8" title="Attr8" width="200"></vue-xtable-column>\n  <vue-xtable-column field="attr9" title="Attr9" width="200"></vue-xtable-column>\n  <vue-xtable-column field="createTime" title="CreateTime" width="200"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      loading: false,\n\n    }\n  },\n  created () {\n    this.findList()\n  },\n\n  methods: {\n    findList () {\n      this.loading = true\n      return new Promise(resolve => {\n        setTimeout(() => {\n          let tableData = window.MOCK_DATA_LIST.slice(0, 2000)\n          // 阻断 vue 对大数组的双向绑定，避免 vue 绑定大数据造成短暂的卡顿\n          if (this.$refs.xTable) {\n            this.$refs.xTable.loadData(tableData)\n          }\n          resolve()\n          this.loading = false\n        }, 300)\n      })\n    },\n    insertEvent (row) {\n      let xTable = this.$refs.xTable\n      let record = {}\n      xTable.insertAt(record, row).then(({ row }) => {\n        xTable.setActiveRow(row)\n      })\n    },\n    getInsertEvent () {\n      let insertRecords = this.$refs.xTable.getInsertRecords()\n      this.$alert({ message: insertRecords.length })\n    },\n    getRemoveEvent () {\n      let removeRecords = this.$refs.xTable.getRemoveRecords()\n      this.$alert({ message: removeRecords.length })\n    },\n    getUpdateEvent () {\n      let updateRecords = this.$refs.xTable.getUpdateRecords()\n      this.$alert({ message: updateRecords.length })\n    },\n    handleCommand1 (command) {\n      switch (command) {\n        case \'insertFirst\':\n          this.insertEvent(null);\n          break;\n        case \'insertLast\':\n          this.insertEvent(-1);\n          break;\n        case \'insertAt100\':\n          this.insertEvent(this.$refs.xTable.getData(100));\n          break;\n      }\n    },\n    handleCommand2 (command) {\n      switch (command) {\n        case \'removeSelecteds\':\n          this.$refs.xTable.removeSelecteds();\n          break;\n        case \'removeFirst\':\n          this.$refs.xTable.remove(this.$refs.xTable.getData(0));\n          break;\n        case \'removeLast\':\n          this.$refs.xTable.remove(this.$refs.xTable.getData(this.$refs.xTable.getData().length - 1));\n          break;\n        case \'removeAt100\':\n          this.$refs.xTable.remove(this.$refs.xTable.getData(100));\n          break;\n      }\n    },\n\n  }\n})\n<\/script>',template:'<div class="source">    <vue-toolbar export :refresh="{query: findList}">\n      <template v-slot:buttons>\n        <vue-dropdown  @command="handleCommand1">\n          <vue-button>新增操作<i class="vue-icon-arrow-down vue-icon--right"></i></vue-button>\n          <vue-dropdown-menu slot="dropdown">\n            <vue-dropdown-item command="insertFirst" @click="insertEvent(null)">从第一行插入</vue-dropdown-item>\n            <vue-dropdown-item command="insertLast" @click="insertEvent(-1)">从最后插入</vue-dropdown-item>\n            <vue-dropdown-item command="insertAt100" @click="insertEvent($refs.xTable.getData(100))">插入到 100 行</vue-dropdown-item>\n          </vue-dropdown-menu>\n        </vue-dropdown>\n\n        <vue-dropdown  @command="handleCommand2">\n          <vue-button>删除操作<i class="vue-icon-arrow-down vue-icon--right"></i></vue-button>\n          <vue-dropdown-menu slot="dropdown">\n            <vue-dropdown-item command="removeSelecteds">删除选中</vue-dropdown-item>\n            <vue-dropdown-item command="removeFirst">删除第一行</vue-dropdown-item>\n            <vue-dropdown-item command="removeLast">删除最后一行</vue-dropdown-item>\n            <vue-dropdown-item command="removeAt100">删除第 100 行</vue-dropdown-item>\n          </vue-dropdown-menu>\n        </vue-dropdown>\n        <vue-button @click="getInsertEvent">获取新增</vue-button>\n        <vue-button @click="getRemoveEvent">获取删除</vue-button>\n        <vue-button @click="getUpdateEvent">获取修改</vue-button>\n      </template>\n    </vue-toolbar>\n\n    <vue-xtable\n      border\n      resizable\n      show-overflow\n      ref="xTable"\n      height="300"\n      :loading="loading"\n      :edit-config="{trigger: \'click\', mode: \'row\', showStatus: true}"\n      :checkbox-config="{checkField: \'checked\'}">\n      <vue-xtable-column type="checkbox" width="60"></vue-xtable-column>\n      <vue-xtable-column type="index" width="100"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" sortable width="200" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age" width="200" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex" width="200" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="rate" title="Rate" width="200"></vue-xtable-column>\n      <vue-xtable-column field="region" title="Region" width="200"></vue-xtable-column>\n      <vue-xtable-column field="time" title="Time" width="200"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" width="300" show-overflow></vue-xtable-column>\n      <vue-xtable-column field="updateTime" title="UpdateTime" width="200"></vue-xtable-column>\n      <vue-xtable-column field="createTime" title="CreateTime" width="200"></vue-xtable-column>\n      <vue-xtable-column field="attr1" title="Attr1" width="200"></vue-xtable-column>\n      <vue-xtable-column field="attr2" title="Attr2" width="200"></vue-xtable-column>\n      <vue-xtable-column field="attr3" title="Attr3" width="200"></vue-xtable-column>\n      <vue-xtable-column field="attr4" title="Attr4" width="200"></vue-xtable-column>\n      <vue-xtable-column field="attr5" title="Attr5" width="200"></vue-xtable-column>\n      <vue-xtable-column field="attr6" title="Attr6" width="200"></vue-xtable-column>\n      <vue-xtable-column field="attr7" title="Attr7" width="200"></vue-xtable-column>\n      <vue-xtable-column field="attr8" title="Attr8" width="200"></vue-xtable-column>\n      <vue-xtable-column field="attr9" title="Attr9" width="200"></vue-xtable-column>\n      <vue-xtable-column field="createTime" title="CreateTime" width="200"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{loading:!1}},created:function(){this.findList()},methods:{findList:function(){var e=this;return this.loading=!0,new Promise(function(n){setTimeout(function(){var t=window.MOCK_DATA_LIST.slice(0,2e3);e.$refs.xTable&&e.$refs.xTable.loadData(t),n(),e.loading=!1},300)})},insertEvent:function(e){var n=this.$refs.xTable;n.insertAt({},e).then(function(e){var t=e.row;n.setActiveRow(t)})},getInsertEvent:function(){var e=this.$refs.xTable.getInsertRecords();this.$alert({message:e.length})},getRemoveEvent:function(){var e=this.$refs.xTable.getRemoveRecords();this.$alert({message:e.length})},getUpdateEvent:function(){var e=this.$refs.xTable.getUpdateRecords();this.$alert({message:e.length})},handleCommand1:function(e){switch(e){case"insertFirst":this.insertEvent(null);break;case"insertLast":this.insertEvent(-1);break;case"insertAt100":this.insertEvent(this.$refs.xTable.getData(100))}},handleCommand2:function(e){switch(e){case"removeSelecteds":this.$refs.xTable.removeSelecteds();break;case"removeFirst":this.$refs.xTable.remove(this.$refs.xTable.getData(0));break;case"removeLast":this.$refs.xTable.remove(this.$refs.xTable.getData(this.$refs.xTable.getData().length-1));break;case"removeAt100":this.$refs.xTable.remove(this.$refs.xTable.getData(100))}}}}}],styles:""}},"./demo/XtableDemo/scroll/FullPartialLoad.vue":
/*!****************************************************!*\
  !*** ./demo/XtableDemo/scroll/FullPartialLoad.vue ***!
  \****************************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/scroll/FullPartialLoad",name:"XtableDemo.scroll.FullPartialLoad",head:{label:"XtableDemo.scroll.FullPartialLoad.label",description:"XtableDemo.scroll.FullPartialLoad.description"},samples:[{id:"XtableDemo.scroll.FullPartialLoad.sample1",label:"XtableDemo.scroll.FullPartialLoad.sample1.label",description:"XtableDemo.scroll.FullPartialLoad.sample1.description",code:'<vue-toolbar :loading="loading">\n  <template v-slot:buttons>\n    <vue-button @click="loadList(20)">+20条</vue-button>\n    <vue-button @click="loadList(50)">+50条</vue-button>\n    <vue-button @click="loadList(100)">+100条</vue-button>\n    <vue-button @click="loadList(200)">+200条</vue-button>\n    <vue-button @click="loadList(300)">+300条</vue-button>\n    <vue-button @click="loadColumns(10)">+10列</vue-button>\n    <vue-button @click="loadColumns(30)">+30列</vue-button>\n    <vue-button @click="loadColumns(50)">+50列</vue-button>\n    <vue-button @click="$refs.xGrid.scrollTo(1000, 2000)">x=1000,y=2000</vue-button>\n    <vue-button @click="$refs.xGrid.scrollTo(2000, 6000)">x=2000,y=6000</vue-button>\n    <vue-button @click="$refs.xGrid.clearScroll()">清除滚动状态</vue-button>\n  </template>\n</vue-toolbar>\n\n<vue-xgrid\n  border\n  show-overflow\n  show-header-overflow\n  ref="xGrid"\n  height="500"\n  row-id="id"\n  :checkbox-config="{checkField: \'checked\', labelField: \'id\'}"\n  :loading="loading">\n</vue-xgrid>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      loading: false,\n      colIndex: 0,\n      rowIndex: 1,\n\n    }\n  },\n  created () {\n    // 动态定义，阻断 vue 对大数据双向绑定，提升加载速度\n    this.allData = []\n    this.allColumn = []\n    this.init()\n  },\n\n  methods: {\n    init () {\n      this.loading = true\n      Promise.all([\n        this.findColumnList(200).then(data => {\n          this.allColumn = this.allData.concat(data)\n          this.$refs.xGrid.loadColumn(this.allColumn)\n        }),\n        this.findDataList(600).then(data => {\n          this.allData = this.allData.concat(data)\n          this.$refs.xGrid.loadData(this.allData)\n        })\n      ]).then(() => {\n        this.loading = false\n      })\n    },\n    loadColumns (size) {\n      this.loading = true\n      this.findColumnList(size).then(data => {\n        this.allColumn = this.allColumn.concat(data)// 局部追加并保存全量数据\n        this.$refs.xGrid.loadColumn(this.allColumn)\n        this.loading = false\n      })\n    },\n    loadList (size) {\n      this.loading = true\n      this.findDataList(size).then(data => {\n        this.allData = this.allData.concat(data)// 局部追加并保存全量数据\n        this.$refs.xGrid.loadData(this.allData)\n        this.loading = false\n      })\n    },\n    findColumnList (size) {\n      return new Promise(resolve => {\n        setTimeout(() => {\n          var columns = []\n          for (var index = 0; index < size; index++) {\n            let key = this.colIndex++\n            let config = {\n              field: key ? `col_${key}` : \'id\',\n              title: key ? `标题_${key}` : \'ID\',\n              width: 140\n            }\n            if (!key) {\n              config.type = \'checkbox\'\n            }\n            if (key < 2) {\n              config.fixed = \'left\'\n            }\n            columns.push(config)\n          }\n          resolve(columns)\n        }, 250)\n      })\n    },\n    findDataList (size) {\n      return new Promise(resolve => {\n        setTimeout(() => {\n          var list = []\n          for (var index = 0; index < size; index++) {\n            let key = this.rowIndex++\n            let item = { id: key, checked: false }\n            // 由于生成数据比较耗时，所以固定生成1000字段\n\n            for (let cIndex = 0; cIndex < 1000; cIndex++) {\n              item[`col_${cIndex}`] = `内容_${cIndex}_${index}`\n            }\n            list.push(item)\n          }\n          resolve(list)\n        }, 250)\n      })\n    }\n  }\n})\n<\/script>',template:'<div class="source">    <vue-toolbar :loading="loading">\n      <template v-slot:buttons>\n        <vue-button @click="loadList(20)">+20条</vue-button>\n        <vue-button @click="loadList(50)">+50条</vue-button>\n        <vue-button @click="loadList(100)">+100条</vue-button>\n        <vue-button @click="loadList(200)">+200条</vue-button>\n        <vue-button @click="loadList(300)">+300条</vue-button>\n        <vue-button @click="loadColumns(10)">+10列</vue-button>\n        <vue-button @click="loadColumns(30)">+30列</vue-button>\n        <vue-button @click="loadColumns(50)">+50列</vue-button>\n        <vue-button @click="$refs.xGrid.scrollTo(1000, 2000)">x=1000,y=2000</vue-button>\n        <vue-button @click="$refs.xGrid.scrollTo(2000, 6000)">x=2000,y=6000</vue-button>\n        <vue-button @click="$refs.xGrid.clearScroll()">清除滚动状态</vue-button>\n      </template>\n    </vue-toolbar>\n\n    <vue-xgrid\n      border\n      show-overflow\n      show-header-overflow\n      ref="xGrid"\n      height="500"\n      row-id="id"\n      :checkbox-config="{checkField: \'checked\', labelField: \'id\'}"\n      :loading="loading">\n    </vue-xgrid></div>',parameter:{data:function(){return{loading:!1,colIndex:0,rowIndex:1}},created:function(){this.allData=[],this.allColumn=[],this.init()},methods:{init:function(){var e=this;this.loading=!0,Promise.all([this.findColumnList(200).then(function(n){e.allColumn=e.allData.concat(n),e.$refs.xGrid.loadColumn(e.allColumn)}),this.findDataList(600).then(function(n){e.allData=e.allData.concat(n),e.$refs.xGrid.loadData(e.allData)})]).then(function(){e.loading=!1})},loadColumns:function(e){var n=this;this.loading=!0,this.findColumnList(e).then(function(e){n.allColumn=n.allColumn.concat(e),n.$refs.xGrid.loadColumn(n.allColumn),n.loading=!1})},loadList:function(e){var n=this;this.loading=!0,this.findDataList(e).then(function(e){n.allData=n.allData.concat(e),n.$refs.xGrid.loadData(n.allData),n.loading=!1})},findColumnList:function(e){var n=this;return new Promise(function(t){setTimeout(function(){for(var l=[],o=0;o<e;o++){var a=n.colIndex++,i={field:a?"col_".concat(a):"id",title:a?"标题_".concat(a):"ID",width:140};a||(i.type="checkbox"),a<2&&(i.fixed="left"),l.push(i)}t(l)},250)})},findDataList:function(e){var n=this;return new Promise(function(t){setTimeout(function(){for(var l=[],o=0;o<e;o++){for(var a={id:n.rowIndex++,checked:!1},i=0;i<1e3;i++)a["col_".concat(i)]="内容_".concat(i,"_").concat(o);l.push(a)}t(l)},250)})}}}}],styles:""}},"./demo/XtableDemo/scroll/Highlight.vue":
/*!**********************************************!*\
  !*** ./demo/XtableDemo/scroll/Highlight.vue ***!
  \**********************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/scroll/Highlight",name:"XtableDemo.scroll.Highlight",head:{label:"XtableDemo.scroll.Highlight.label",description:"XtableDemo.scroll.Highlight.description"},samples:[{id:"XtableDemo.scroll.Highlight.sample1",label:"XtableDemo.scroll.Highlight.sample1.label",description:"XtableDemo.scroll.Highlight.sample1.description",code:'<vue-xtable\n  border\n  resizable\n  show-overflow\n  highlight-current-row\n  ref="xTable"\n  height="300"\n  :loading="loading"\n  :keyboard-config="{isArrow: true}">\n  <vue-xtable-column type="index" width="100"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" sortable width="200"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age" width="200"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex" width="200"></vue-xtable-column>\n  <vue-xtable-column field="rate" title="Rate" width="200"></vue-xtable-column>\n  <vue-xtable-column field="region" title="Region" width="200"></vue-xtable-column>\n  <vue-xtable-column field="time" title="Time" width="200"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" width="300" show-overflow></vue-xtable-column>\n  <vue-xtable-column field="updateTime" title="UpdateTime" width="200"></vue-xtable-column>\n  <vue-xtable-column field="createTime" title="CreateTime" width="200"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      loading: false,\n\n    }\n  },\n  created () {\n    this.loading = true\n    setTimeout(() => {\n      let tableData = window.MOCK_DATA_LIST.slice(0, 2000)\n      // 阻断 vue 对大数组的双向绑定，大数据性能翻倍提升\n      if (this.$refs.xTable) {\n        this.$refs.xTable.loadData(tableData)\n      }\n      this.loading = false\n    }, 300)\n  },\n\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      border\n      resizable\n      show-overflow\n      highlight-current-row\n      ref="xTable"\n      height="300"\n      :loading="loading"\n      :keyboard-config="{isArrow: true}">\n      <vue-xtable-column type="index" width="100"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" sortable width="200"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age" width="200"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex" width="200"></vue-xtable-column>\n      <vue-xtable-column field="rate" title="Rate" width="200"></vue-xtable-column>\n      <vue-xtable-column field="region" title="Region" width="200"></vue-xtable-column>\n      <vue-xtable-column field="time" title="Time" width="200"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" width="300" show-overflow></vue-xtable-column>\n      <vue-xtable-column field="updateTime" title="UpdateTime" width="200"></vue-xtable-column>\n      <vue-xtable-column field="createTime" title="CreateTime" width="200"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{loading:!1}},created:function(){var e=this;this.loading=!0,setTimeout(function(){var n=window.MOCK_DATA_LIST.slice(0,2e3);e.$refs.xTable&&e.$refs.xTable.loadData(n),e.loading=!1},300)}}}],styles:""}},"./demo/XtableDemo/scroll/Keyboard.vue":
/*!*********************************************!*\
  !*** ./demo/XtableDemo/scroll/Keyboard.vue ***!
  \*********************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/scroll/Keyboard",name:"XtableDemo.scroll.Keyboard",head:{label:"XtableDemo.scroll.Keyboard.label",description:"XtableDemo.scroll.Keyboard.description"},samples:[{id:"XtableDemo.scroll.Keyboard.sample1",label:"XtableDemo.scroll.Keyboard.sample1.label",description:"XtableDemo.scroll.Keyboard.sample1.description",code:'<vue-toolbar :refresh="{query: findList}">\n  <template v-slot:buttons>\n    <vue-button>\n      <template>新增操作</template>\n      <template v-slot:dropdowns>\n        <vue-button @click="insertEvent(null)">从第一行插入</vue-button>\n        <vue-button @click="insertEvent(-1)">从最后插入</vue-button>\n        <vue-button @click="insertEvent($refs.xTable.getData(100))">插入到 100 行</vue-button>\n        <vue-button @click="insertEvent($refs.xTable.getData(2000))">插入到 2000 行</vue-button>\n      </template>\n    </vue-button>\n    <vue-button>\n      <template>删除操作</template>\n      <template v-slot:dropdowns>\n        <vue-button @click="$refs.xTable.removeSelecteds()">删除选中</vue-button>\n        <vue-button @click="$refs.xTable.remove($refs.xTable.getData(0))">删除第一行</vue-button>\n        <vue-button @click="$refs.xTable.remove($refs.xTable.getData($refs.xTable.getData().length - 1))">删除最后一行</vue-button>\n        <vue-button @click="$refs.xTable.remove($refs.xTable.getData(100))">删除第 100 行</vue-button>\n      </template>\n    </vue-button>\n    <vue-button>\n      <template>校验操作</template>\n      <template v-slot:dropdowns>\n        <vue-button @click="validEvent">基本校验</vue-button>\n        <vue-button @click="fullValidEvent">完整校验</vue-button>\n        <vue-button @click="selectValidEvent">选中校验</vue-button>\n      </template>\n    </vue-button>\n    <vue-button @click="getInsertEvent">获取新增</vue-button>\n    <vue-button @click="getRemoveEvent">获取删除</vue-button>\n    <vue-button @click="getUpdateEvent">获取修改</vue-button>\n    <vue-button>\n      <template>滚动操作</template>\n      <template v-slot:dropdowns>\n        <vue-button @click="$refs.xTable.scrollToRow($refs.xTable.getData(10))">滚动到第 10 行</vue-button>\n        <vue-button @click="$refs.xTable.scrollToRow($refs.xTable.getData(4000))">滚动第 4000 行</vue-button>\n        <vue-button @click="$refs.xTable.scrollToColumn($refs.xTable.getColumns(1))">滚动第 1 列</vue-button>\n        <vue-button @click="$refs.xTable.scrollToColumn($refs.xTable.getColumns(10))">滚动第 10 列</vue-button>\n      </template>\n    </vue-button>\n  </template>\n</vue-toolbar>\n\n<vue-xtable\n  border\n  resizable\n  show-overflow\n  ref="xTable"\n  height="300"\n  :loading="loading"\n  :edit-rules="validRules"\n  :mouse-config="{selected: true}"\n  :edit-config="{trigger: \'dblclick\', mode: \'cell\', showStatus: true}"\n  :keyboard-config="{isArrow: true, isDel: true, isTab: true, isEdit: true}"\n  :checkbox-config="{checkField: \'checked\'}">\n  <vue-xtable-column type="checkbox" width="60"></vue-xtable-column>\n  <vue-xtable-column type="index" width="100"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" sortable width="200" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age" width="200" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex" width="200" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="rate" title="Rate" width="200"></vue-xtable-column>\n  <vue-xtable-column field="region" title="Region" width="200"></vue-xtable-column>\n  <vue-xtable-column field="time" title="Time" width="200"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" width="300" show-overflow></vue-xtable-column>\n  <vue-xtable-column field="updateTime" title="UpdateTime" width="200"></vue-xtable-column>\n  <vue-xtable-column field="createTime" title="CreateTime" width="200"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      loading: false,\n      validRules: {\n        name: [\n          { required: true, message: \'名称必须填写\' },\n          { min: 3, max: 50, message: \'名称长度在 3 到 50 个字符\' }\n        ],\n        sex: [\n          { required: true, message: \'性别必须填写\' }\n        ]\n      },\n\n    }\n  },\n  created () {\n    this.findList()\n  },\n\n  methods: {\n    findList () {\n      this.loading = true\n      return new Promise(resolve => {\n        setTimeout(() => {\n          let tableData = window.MOCK_DATA_LIST.slice(0, 2000)\n          // 阻断 vue 对大数组的双向绑定，避免 vue 绑定大数据造成短暂的卡顿\n          if (this.$refs.xTable) {\n            this.$refs.xTable.loadData(tableData)\n          }\n          resolve()\n          this.loading = false\n        }, 300)\n      })\n    },\n    validEvent () {\n      this.$refs.xTable.validate(valid => {\n        if (valid) {\n          this.$notify.success({ message:\'校验成功！\'});\n        } else {\n          this.$notify.error({ message:\'校验不通过！\'});\n        }\n      })\n    },\n    fullValidEvent () {\n      this.$refs.xTable.fullValidate((valid, errMap) => {\n        if (valid) {\n          this.$notify.success({ message:\'校验成功！\'});\n        } else {\n          let msgList = []\n          Object.values(errMap).forEach(errList => {\n            errList.forEach(params => {\n              let { rowIndex, column, rules } = params\n              rules.forEach(rule => {\n                msgList.push(`第 ${rowIndex} 行 ${column.title} 校验错误：${rule.message}`)\n              })\n            })\n          })\n\n          var h = this.$createElement;\n          this.$alert({\n            type: "error",\n            message: h(\'div\',[msgList.map(function (msg) {\n              return h("div", [msg]);\n            })])\n          });\n        }\n      })\n    },\n    selectValidEvent () {\n      let selectRecords = this.$refs.xTable.getSelectRecords()\n      if (selectRecords.length > 0) {\n        this.$refs.xTable.validate(selectRecords, valid => {\n          if (valid) {\n            this.$notify.success({ message:\'校验成功！\'});\n          } else {\n            this.$notify.error({ message:\'校验不通过！\'});\n          }\n        })\n      } else {\n        this.$notify.warning({ message:\'未选中数据！\'});\n      }\n    },\n    insertEvent (row) {\n      let xTable = this.$refs.xTable\n      let record = {}\n      xTable.insertAt(record, row).then(({ row }) => {\n        xTable.setActiveRow(row)\n      })\n    },\n    getInsertEvent () {\n      let insertRecords = this.$refs.xTable.getInsertRecords()\n      this.$alert({ message: insertRecords.length })\n    },\n    getRemoveEvent () {\n      let removeRecords = this.$refs.xTable.getRemoveRecords()\n      this.$alert({ message: removeRecords.length })\n    },\n    getUpdateEvent () {\n      let updateRecords = this.$refs.xTable.getUpdateRecords()\n      this.$alert({ message: updateRecords.length })\n    }\n  }\n})\n<\/script>',template:'<div class="source">    <vue-toolbar :refresh="{query: findList}">\n      <template v-slot:buttons>\n        <vue-button>\n          <template>新增操作</template>\n          <template v-slot:dropdowns>\n            <vue-button @click="insertEvent(null)">从第一行插入</vue-button>\n            <vue-button @click="insertEvent(-1)">从最后插入</vue-button>\n            <vue-button @click="insertEvent($refs.xTable.getData(100))">插入到 100 行</vue-button>\n            <vue-button @click="insertEvent($refs.xTable.getData(2000))">插入到 2000 行</vue-button>\n          </template>\n        </vue-button>\n        <vue-button>\n          <template>删除操作</template>\n          <template v-slot:dropdowns>\n            <vue-button @click="$refs.xTable.removeSelecteds()">删除选中</vue-button>\n            <vue-button @click="$refs.xTable.remove($refs.xTable.getData(0))">删除第一行</vue-button>\n            <vue-button @click="$refs.xTable.remove($refs.xTable.getData($refs.xTable.getData().length - 1))">删除最后一行</vue-button>\n            <vue-button @click="$refs.xTable.remove($refs.xTable.getData(100))">删除第 100 行</vue-button>\n          </template>\n        </vue-button>\n        <vue-button>\n          <template>校验操作</template>\n          <template v-slot:dropdowns>\n            <vue-button @click="validEvent">基本校验</vue-button>\n            <vue-button @click="fullValidEvent">完整校验</vue-button>\n            <vue-button @click="selectValidEvent">选中校验</vue-button>\n          </template>\n        </vue-button>\n        <vue-button @click="getInsertEvent">获取新增</vue-button>\n        <vue-button @click="getRemoveEvent">获取删除</vue-button>\n        <vue-button @click="getUpdateEvent">获取修改</vue-button>\n        <vue-button>\n          <template>滚动操作</template>\n          <template v-slot:dropdowns>\n            <vue-button @click="$refs.xTable.scrollToRow($refs.xTable.getData(10))">滚动到第 10 行</vue-button>\n            <vue-button @click="$refs.xTable.scrollToRow($refs.xTable.getData(4000))">滚动第 4000 行</vue-button>\n            <vue-button @click="$refs.xTable.scrollToColumn($refs.xTable.getColumns(1))">滚动第 1 列</vue-button>\n            <vue-button @click="$refs.xTable.scrollToColumn($refs.xTable.getColumns(10))">滚动第 10 列</vue-button>\n          </template>\n        </vue-button>\n      </template>\n    </vue-toolbar>\n\n    <vue-xtable\n      border\n      resizable\n      show-overflow\n      ref="xTable"\n      height="300"\n      :loading="loading"\n      :edit-rules="validRules"\n      :mouse-config="{selected: true}"\n      :edit-config="{trigger: \'dblclick\', mode: \'cell\', showStatus: true}"\n      :keyboard-config="{isArrow: true, isDel: true, isTab: true, isEdit: true}"\n      :checkbox-config="{checkField: \'checked\'}">\n      <vue-xtable-column type="checkbox" width="60"></vue-xtable-column>\n      <vue-xtable-column type="index" width="100"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" sortable width="200" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age" width="200" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex" width="200" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="rate" title="Rate" width="200"></vue-xtable-column>\n      <vue-xtable-column field="region" title="Region" width="200"></vue-xtable-column>\n      <vue-xtable-column field="time" title="Time" width="200"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" width="300" show-overflow></vue-xtable-column>\n      <vue-xtable-column field="updateTime" title="UpdateTime" width="200"></vue-xtable-column>\n      <vue-xtable-column field="createTime" title="CreateTime" width="200"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{loading:!1,validRules:{name:[{required:!0,message:"名称必须填写"},{min:3,max:50,message:"名称长度在 3 到 50 个字符"}],sex:[{required:!0,message:"性别必须填写"}]}}},created:function(){this.findList()},methods:{findList:function(){var e=this;return this.loading=!0,new Promise(function(n){setTimeout(function(){var t=window.MOCK_DATA_LIST.slice(0,2e3);e.$refs.xTable&&e.$refs.xTable.loadData(t),n(),e.loading=!1},300)})},validEvent:function(){var e=this;this.$refs.xTable.validate(function(n){n?e.$notify.success({message:"校验成功！"}):e.$notify.error({message:"校验不通过！"})})},fullValidEvent:function(){var e=this;this.$refs.xTable.fullValidate(function(n,t){if(n)e.$notify.success({message:"校验成功！"});else{var l=[];Object.values(t).forEach(function(e){e.forEach(function(e){var n=e.rowIndex,t=e.column;e.rules.forEach(function(e){l.push("第 ".concat(n," 行 ").concat(t.title," 校验错误：").concat(e.message))})})});var o=e.$createElement;e.$alert({type:"error",message:o("div",[l.map(function(e){return o("div",[e])})])})}})},selectValidEvent:function(){var e=this,n=this.$refs.xTable.getSelectRecords();n.length>0?this.$refs.xTable.validate(n,function(n){n?e.$notify.success({message:"校验成功！"}):e.$notify.error({message:"校验不通过！"})}):this.$notify.warning({message:"未选中数据！"})},insertEvent:function(e){var n=this.$refs.xTable;n.insertAt({},e).then(function(e){var t=e.row;n.setActiveRow(t)})},getInsertEvent:function(){var e=this.$refs.xTable.getInsertRecords();this.$alert({message:e.length})},getRemoveEvent:function(){var e=this.$refs.xTable.getRemoveRecords();this.$alert({message:e.length})},getUpdateEvent:function(){var e=this.$refs.xTable.getUpdateRecords();this.$alert({message:e.length})}}}}],styles:""}},"./demo/XtableDemo/scroll/PartialLoad.vue":
/*!************************************************!*\
  !*** ./demo/XtableDemo/scroll/PartialLoad.vue ***!
  \************************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/scroll/PartialLoad",name:"XtableDemo.scroll.PartialLoad",head:{label:"XtableDemo.scroll.PartialLoad.label",description:"XtableDemo.scroll.PartialLoad.description"},samples:[{id:"XtableDemo.scroll.PartialLoad.sample1",label:"XtableDemo.scroll.PartialLoad.sample1.label",description:"XtableDemo.scroll.PartialLoad.sample1.description",code:'<vue-toolbar :loading="loading">\n  <template v-slot:buttons>\n    <vue-button @click="loadList(20)">+20条</vue-button>\n    <vue-button @click="loadList(100)">+100条</vue-button>\n    <vue-button @click="loadList(500)">+500条</vue-button>\n    <vue-button @click="loadList(1000)">+1000条</vue-button>\n    <vue-button @click="loadList(2000)">+2000条</vue-button>\n    <vue-button @click="$refs.xTable.scrollTo(null, 4000)">y=4000</vue-button>\n    <vue-button @click="$refs.xTable.clearScroll()">清除滚动状态</vue-button>\n  </template>\n</vue-toolbar>\n\n<vue-xtable\n  ref="xTable"\n  border\n  resizable\n  show-overflow\n  height="500"\n  row-id="id"\n  :loading="loading">\n  <vue-xtable-column type="index" width="100"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" sortable></vue-xtable-column>\n  <vue-xtable-column field="role" title="Role"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n  <vue-xtable-column field="date" title="Date"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      loading: false,\n\n    }\n  },\n  created () {\n    // 动态定义，阻断 vue 对大数据双向绑定，提升加载速度\n    this.allData = []\n    this.loadList(600)\n  },\n\n  methods: {\n    loadList (size) {\n      this.loading = true\n      this.findList(size).then(data => {\n        this.allData = this.allData.concat(data)// 局部追加并保存所有数据\n        this.$refs.xTable.loadData(this.allData)\n        this.loading = false\n      })\n    },\n    findList (size) {\n      return new Promise(resolve => {\n        setTimeout(() => {\n          var list = []\n          for (var index = 0; index < size; index++) {\n            list.push({\n              id: VueUtil.uniqueId(),\n              name: \'test\' + index,\n              role: \'developer\',\n              age: 10,\n              date: \'2019-05-01\',\n              address: \'address abc\' + index\n            })\n          }\n          resolve(list)\n        }, 250)\n      })\n    }\n  }\n})\n<\/script>',template:'<div class="source">    <vue-toolbar :loading="loading">\n      <template v-slot:buttons>\n        <vue-button @click="loadList(20)">+20条</vue-button>\n        <vue-button @click="loadList(100)">+100条</vue-button>\n        <vue-button @click="loadList(500)">+500条</vue-button>\n        <vue-button @click="loadList(1000)">+1000条</vue-button>\n        <vue-button @click="loadList(2000)">+2000条</vue-button>\n        <vue-button @click="$refs.xTable.scrollTo(null, 4000)">y=4000</vue-button>\n        <vue-button @click="$refs.xTable.clearScroll()">清除滚动状态</vue-button>\n      </template>\n    </vue-toolbar>\n\n    <vue-xtable\n      ref="xTable"\n      border\n      resizable\n      show-overflow\n      height="500"\n      row-id="id"\n      :loading="loading">\n      <vue-xtable-column type="index" width="100"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" sortable></vue-xtable-column>\n      <vue-xtable-column field="role" title="Role"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n      <vue-xtable-column field="date" title="Date"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{loading:!1}},created:function(){this.allData=[],this.loadList(600)},methods:{loadList:function(e){var n=this;this.loading=!0,this.findList(e).then(function(e){n.allData=n.allData.concat(e),n.$refs.xTable.loadData(n.allData),n.loading=!1})},findList:function(e){return new Promise(function(n){setTimeout(function(){for(var t=[],l=0;l<e;l++)t.push({id:VueUtil.uniqueId(),name:"test"+l,role:"developer",age:10,date:"2019-05-01",address:"address abc"+l});n(t)},250)})}}}}],styles:""}},"./demo/XtableDemo/scroll/RowValid.vue":
/*!*********************************************!*\
  !*** ./demo/XtableDemo/scroll/RowValid.vue ***!
  \*********************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/scroll/RowValid",name:"XtableDemo.scroll.RowValid",head:{label:"XtableDemo.scroll.RowValid.label",description:"XtableDemo.scroll.RowValid.description"},samples:[{id:"XtableDemo.scroll.RowValid.sample1",label:"XtableDemo.scroll.RowValid.sample1.label",description:"XtableDemo.scroll.RowValid.sample1.description",code:'<vue-toolbar :refresh="{query: findList}">\n  <template v-slot:buttons>\n    <vue-dropdown>\n      <vue-button>校验操作<i class="vue-icon-arrow-down vue-icon--right"></i></vue-button>\n      <vue-dropdown-menu slot="dropdown">\n        <vue-dropdown-item @click.native="validEvent">基本校验</vue-dropdown-item>\n        <vue-dropdown-item @click.native="fullValidEvent">完整校验</vue-dropdown-item>\n        <vue-dropdown-item @click.native="selectValidEvent">选中校验</vue-dropdown-item>\n      </vue-dropdown-menu>\n    </vue-dropdown>\n  </template>\n</vue-toolbar>\n\n<vue-xtable\n  border\n  resizable\n  show-overflow\n  ref="xTable"\n  height="300"\n  :loading="loading"\n  :edit-rules="validRules"\n  :edit-config="{trigger: \'click\', mode: \'row\', showStatus: true}"\n  :checkbox-config="{checkField: \'checked\'}">\n  <vue-xtable-column type="checkbox" width="60"></vue-xtable-column>\n  <vue-xtable-column type="index" width="100"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" sortable width="200" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age" width="200" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex" width="200" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="rate" title="Rate" width="200"></vue-xtable-column>\n  <vue-xtable-column field="region" title="Region" width="200"></vue-xtable-column>\n  <vue-xtable-column field="time" title="Time" width="200"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" width="300" show-overflow></vue-xtable-column>\n  <vue-xtable-column field="updateTime" title="UpdateTime" width="200"></vue-xtable-column>\n  <vue-xtable-column field="createTime" title="CreateTime" width="200"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      loading: false,\n      validRules: {\n        name: [\n          { required: true, message: \'名称必须填写\' },\n          { min: 3, max: 50, message: \'名称长度在 3 到 50 个字符\' }\n        ],\n        sex: [\n          { required: true, message: \'性别必须填写\' }\n        ]\n      },\n\n    }\n  },\n  created () {\n    this.findList()\n  },\n\n  methods: {\n    findList () {\n      this.loading = true\n      return new Promise(resolve => {\n        setTimeout(() => {\n          let tableData = window.MOCK_DATA_LIST.slice(0, 1000)\n          // 阻断 vue 对大数组的双向绑定，避免 vue 绑定大数据造成短暂的卡顿\n          if (this.$refs.xTable) {\n            this.$refs.xTable.loadData(tableData)\n          }\n          resolve()\n          this.loading = false\n        }, 300)\n      })\n    },\n    validEvent () {\n      this.$refs.xTable.validate(valid => {\n        if (valid) {\n          this.$notify.success({ message:\'校验成功！\'});\n        } else {\n          this.$notify.error({ message:\'校验不通过！\'});\n        }\n      })\n    },\n    fullValidEvent () {\n      this.$refs.xTable.fullValidate((valid, errMap) => {\n        if (valid) {\n          this.$notify.success({ message:\'校验成功！\'});\n        } else {\n          let msgList = []\n          Object.values(errMap).forEach(errList => {\n            errList.forEach(params => {\n              let { rowIndex, column, rules } = params\n              rules.forEach(rule => {\n                msgList.push(`第 ${rowIndex} 行 ${column.title} 校验错误：${rule.message}`)\n              })\n            })\n          })\n          var h = this.$createElement;\n          this.$alert({\n            type: "error",\n            message: h(\'div\',[msgList.map(function (msg) {\n              return h("div", [msg]);\n            })])\n          });\n        }\n      })\n    },\n    selectValidEvent () {\n      let selectRecords = this.$refs.xTable.getSelectRecords()\n      if (selectRecords.length > 0) {\n        this.$refs.xTable.validate(selectRecords, valid => {\n          if (valid) {\n            this.$notify.success({ message:\'校验成功！\'});\n          } else {\n            this.$notify.error({ message:\'校验不通过！\'});\n          }\n        })\n      } else {\n        this.$notify.warning({ message:\'未选中数据！\'});\n      }\n    },\n    insertEvent (row) {\n      let xTable = this.$refs.xTable\n      let record = {}\n      xTable.insertAt(record, row).then(({ row }) => {\n        xTable.setActiveRow(row)\n      })\n    },\n    getInsertEvent () {\n      let insertRecords = this.$refs.xTable.getInsertRecords()\n      this.$alert({ message: insertRecords.length })\n    },\n    getRemoveEvent () {\n      let removeRecords = this.$refs.xTable.getRemoveRecords()\n      this.$alert({ message: removeRecords.length })\n    },\n    getUpdateEvent () {\n      let updateRecords = this.$refs.xTable.getUpdateRecords()\n      this.$alert({ message: updateRecords.length })\n    }\n  }\n})\n<\/script>',template:'<div class="source">    <vue-toolbar :refresh="{query: findList}">\n      <template v-slot:buttons>\n        <vue-dropdown>\n          <vue-button>校验操作<i class="vue-icon-arrow-down vue-icon--right"></i></vue-button>\n          <vue-dropdown-menu slot="dropdown">\n            <vue-dropdown-item @click.native="validEvent">基本校验</vue-dropdown-item>\n            <vue-dropdown-item @click.native="fullValidEvent">完整校验</vue-dropdown-item>\n            <vue-dropdown-item @click.native="selectValidEvent">选中校验</vue-dropdown-item>\n          </vue-dropdown-menu>\n        </vue-dropdown>\n      </template>\n    </vue-toolbar>\n\n    <vue-xtable\n      border\n      resizable\n      show-overflow\n      ref="xTable"\n      height="300"\n      :loading="loading"\n      :edit-rules="validRules"\n      :edit-config="{trigger: \'click\', mode: \'row\', showStatus: true}"\n      :checkbox-config="{checkField: \'checked\'}">\n      <vue-xtable-column type="checkbox" width="60"></vue-xtable-column>\n      <vue-xtable-column type="index" width="100"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" sortable width="200" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age" width="200" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex" width="200" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="rate" title="Rate" width="200"></vue-xtable-column>\n      <vue-xtable-column field="region" title="Region" width="200"></vue-xtable-column>\n      <vue-xtable-column field="time" title="Time" width="200"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" width="300" show-overflow></vue-xtable-column>\n      <vue-xtable-column field="updateTime" title="UpdateTime" width="200"></vue-xtable-column>\n      <vue-xtable-column field="createTime" title="CreateTime" width="200"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{loading:!1,validRules:{name:[{required:!0,message:"名称必须填写"},{min:3,max:50,message:"名称长度在 3 到 50 个字符"}],sex:[{required:!0,message:"性别必须填写"}]}}},created:function(){this.findList()},methods:{findList:function(){var e=this;return this.loading=!0,new Promise(function(n){setTimeout(function(){var t=window.MOCK_DATA_LIST.slice(0,1e3);e.$refs.xTable&&e.$refs.xTable.loadData(t),n(),e.loading=!1},300)})},validEvent:function(){var e=this;this.$refs.xTable.validate(function(n){n?e.$notify.success({message:"校验成功！"}):e.$notify.error({message:"校验不通过！"})})},fullValidEvent:function(){var e=this;this.$refs.xTable.fullValidate(function(n,t){if(n)e.$notify.success({message:"校验成功！"});else{var l=[];Object.values(t).forEach(function(e){e.forEach(function(e){var n=e.rowIndex,t=e.column;e.rules.forEach(function(e){l.push("第 ".concat(n," 行 ").concat(t.title," 校验错误：").concat(e.message))})})});var o=e.$createElement;e.$alert({type:"error",message:o("div",[l.map(function(e){return o("div",[e])})])})}})},selectValidEvent:function(){var e=this,n=this.$refs.xTable.getSelectRecords();n.length>0?this.$refs.xTable.validate(n,function(n){n?e.$notify.success({message:"校验成功！"}):e.$notify.error({message:"校验不通过！"})}):this.$notify.warning({message:"未选中数据！"})},insertEvent:function(e){var n=this.$refs.xTable;n.insertAt({},e).then(function(e){var t=e.row;n.setActiveRow(t)})},getInsertEvent:function(){var e=this.$refs.xTable.getInsertRecords();this.$alert({message:e.length})},getRemoveEvent:function(){var e=this.$refs.xTable.getRemoveRecords();this.$alert({message:e.length})},getUpdateEvent:function(){var e=this.$refs.xTable.getUpdateRecords();this.$alert({message:e.length})}}}}],styles:""}},"./demo/XtableDemo/scroll/Scroll.vue":
/*!*******************************************!*\
  !*** ./demo/XtableDemo/scroll/Scroll.vue ***!
  \*******************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/scroll/Scroll",name:"XtableDemo.scroll.Scroll",head:{label:"XtableDemo.scroll.Scroll.label",description:"XtableDemo.scroll.Scroll.description"},samples:[{id:"XtableDemo.scroll.Scroll.sample1",label:"XtableDemo.scroll.Scroll.sample1.label",description:"XtableDemo.scroll.Scroll.sample1.description",code:'<vue-xtable\n  border\n  show-overflow\n  highlight-hover-row\n  height="300"\n  :data="tableData">\n  <vue-xtable-column type="index" width="100"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" sortable></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n    }\n  },\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 600)\n  },\n\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      border\n      show-overflow\n      highlight-hover-row\n      height="300"\n      :data="tableData">\n      <vue-xtable-column type="index" width="100"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" sortable></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=window.MOCK_DATA_LIST.slice(0,600)}}},{id:"XtableDemo.scroll.Scroll.sample2",label:"XtableDemo.scroll.Scroll.sample2.label",description:"XtableDemo.scroll.Scroll.sample2.description",code:'<vue-xtable\n  border\n  show-overflow\n  ref="xTable"\n  height="300"\n  :optimization="{scrollX: {gt: 40}, scrollY: {gt: 200}}">\n  <vue-xtable-column type="index" width="100"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" sortable></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  created () {\n    this.tableData = window.MOCK_DATA_LIST.slice(0, 600)\n    this.$nextTick(() => {\n      this.$refs.xTable.reloadData(window.MOCK_DATA_LIST.slice(0, 1000))\n    })\n  },\n\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      border\n      show-overflow\n      ref="xTable"\n      height="300"\n      :optimization="{scrollX: {gt: 40}, scrollY: {gt: 200}}">\n      <vue-xtable-column type="index" width="100"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" sortable></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" show-overflow></vue-xtable-column>\n    </vue-xtable></div>',parameter:{created:function(){var e=this;this.tableData=window.MOCK_DATA_LIST.slice(0,600),this.$nextTick(function(){e.$refs.xTable.reloadData(window.MOCK_DATA_LIST.slice(0,1e3))})}}}],styles:""}},"./demo/XtableDemo/scroll/ScrollCols.vue":
/*!***********************************************!*\
  !*** ./demo/XtableDemo/scroll/ScrollCols.vue ***!
  \***********************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/scroll/ScrollCols",name:"XtableDemo.scroll.ScrollCols",head:{label:"XtableDemo.scroll.ScrollCols.label",description:"XtableDemo.scroll.ScrollCols.description"},samples:[{id:"XtableDemo.scroll.ScrollCols.sample1",label:"XtableDemo.scroll.ScrollCols.sample1.label",description:"XtableDemo.scroll.ScrollCols.sample1.description",code:'<vue-xgrid\n  border\n  show-overflow\n  show-header-overflow\n  ref="xGrid"\n  height="300"\n  :loading="loading"\n  :toolbar="tableToolbar"\n  :checkbox-config="{checkField: \'checked\', labelField: \'nickname\'}">\n  <template v-slot:buttons>\n    <vue-button @click="loadColumnAndData(10000, 10000)">加载1w列1w条</vue-button>\n  </template>\n</vue-xgrid>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      loading: false,\n      tableToolbar: {},\n    }\n  },\n  created () {\n    this.loadColumnAndData(200, 600)\n  },\n\n  methods: {\n    loadColumnAndData (colSize, rowSize) {\n      this.loading = true\n      Promise.all([\n        this.loadColumn(colSize),\n        this.loadList(rowSize)\n      ]).then(() => {\n        this.loading = false\n      })\n    },\n    loadColumn (size) {\n      return new Promise(resolve => {\n        setTimeout(() => {\n          // 使用函数式加载，阻断 vue 对大数组的双向绑定，大数据性能翻倍提升\n          let tableColumn = window.MOCK_COLUMN_LIST.slice(0, size)\n          console.log(this.$refs)\n          this.$refs.xGrid.loadColumn(tableColumn).then(() => {\n            resolve()\n          })\n        }, 300)\n      })\n    },\n    loadList (size) {\n      return new Promise(resolve => {\n        setTimeout(() => {\n          // 使用函数式加载，阻断 vue 对大数组的双向绑定，大数据性能翻倍提升\n          let tableData = window.MOCK_DATA_LIST.slice(0, size)\n          this.$refs.xGrid.reloadData(tableData).then(() => {\n            resolve()\n          })\n        }, 300)\n      })\n    }\n  }\n})\n<\/script>',template:'<div class="source">    <vue-xgrid\n      border\n      show-overflow\n      show-header-overflow\n      ref="xGrid"\n      height="300"\n      :loading="loading"\n      :toolbar="tableToolbar"\n      :checkbox-config="{checkField: \'checked\', labelField: \'nickname\'}">\n      <template v-slot:buttons>\n        <vue-button @click="loadColumnAndData(10000, 10000)">加载1w列1w条</vue-button>\n      </template>\n    </vue-xgrid></div>',parameter:{data:function(){return{loading:!1,tableToolbar:{}}},created:function(){this.loadColumnAndData(200,600)},methods:{loadColumnAndData:function(e,n){var t=this;this.loading=!0,Promise.all([this.loadColumn(e),this.loadList(n)]).then(function(){t.loading=!1})},loadColumn:function(e){var n=this;return new Promise(function(t){setTimeout(function(){var l=window.MOCK_COLUMN_LIST.slice(0,e);console.log(n.$refs),n.$refs.xGrid.loadColumn(l).then(function(){t()})},300)})},loadList:function(e){var n=this;return new Promise(function(t){setTimeout(function(){var l=window.MOCK_DATA_LIST.slice(0,e);n.$refs.xGrid.reloadData(l).then(function(){t()})},300)})}}}}],styles:""}},"./demo/XtableDemo/scroll/ScrollFullCols.vue":
/*!***************************************************!*\
  !*** ./demo/XtableDemo/scroll/ScrollFullCols.vue ***!
  \***************************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/scroll/ScrollFullCols",name:"XtableDemo.scroll.ScrollFullCols",head:{label:"XtableDemo.scroll.ScrollFullCols.label",description:"XtableDemo.scroll.ScrollFullCols.description"},samples:[{id:"XtableDemo.scroll.ScrollFullCols.sample1",label:"XtableDemo.scroll.ScrollFullCols.sample1.label",description:"XtableDemo.scroll.ScrollFullCols.sample1.description",code:'<vue-xgrid\n  border\n  show-overflow\n  show-header-overflow\n  highlight-hover-row\n  highlight-current-row\n  ref="xGrid"\n  height="600"\n  :loading="loading"\n  :toolbar="tableToolbar"\n  :checkbox-config="{checkField: \'checked\', labelField: \'nickname\'}">\n  <template v-slot:buttons>\n    <vue-button @click="loadColumnAndData(10000, 100000)">加载1w列10w条</vue-button>\n    <vue-button @click="$refs.xGrid.toggleRowSelection($refs.xGrid.getData(1))">切换第二行选中</vue-button>\n    <vue-button @click="$refs.xGrid.setSelection([$refs.xGrid.getData(2), $refs.xGrid.getData(3)], true)">设置第三、四行选中</vue-button>\n    <vue-button @click="$refs.xGrid.setAllSelection(true)">设置所有行选中</vue-button>\n    <vue-button @click="$refs.xGrid.clearSelection()">清除所有行选中</vue-button>\n    <vue-button @click="getSelectEvent">获取选中</vue-button>\n  </template>\n</vue-xgrid>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      loading: false,\n      tableToolbar: {},\n\n    }\n  },\n  created () {\n    this.loadColumnAndData(200, 600)\n  },\n\n  methods: {\n    loadColumnAndData (colSize, rowSize) {\n      this.loading = true\n      Promise.all([\n        this.loadColumn(colSize),\n        this.loadList(rowSize)\n      ]).then(() => {\n        this.loading = false\n      })\n    },\n    loadColumn (size) {\n      return new Promise(resolve => {\n        setTimeout(() => {\n          // 使用函数式加载，阻断 vue 对大数组的双向绑定，大数据性能翻倍提升\n          let tableColumn = window.MOCK_COLUMN_LIST.slice(0, size)\n          this.$refs.xGrid.loadColumn(tableColumn).then(() => {\n            resolve()\n          })\n        }, 300)\n      })\n    },\n    loadList (size) {\n      return new Promise(resolve => {\n        setTimeout(() => {\n          // 使用函数式加载，阻断 vue 对大数组的双向绑定，大数据性能翻倍提升\n          let tableData = window.MOCK_DATA_LIST.slice(0, size)\n          this.$refs.xGrid.reloadData(tableData).then(() => {\n            resolve()\n          })\n        }, 300)\n      })\n    },\n    getSelectEvent () {\n      let selectRecords = this.$refs.xGrid.getSelectRecords()\n      this.$alert({ message: selectRecords.length })\n    }\n  }\n})\n<\/script>',template:'<div class="source">    <vue-xgrid\n      border\n      show-overflow\n      show-header-overflow\n      highlight-hover-row\n      highlight-current-row\n      ref="xGrid"\n      height="600"\n      :loading="loading"\n      :toolbar="tableToolbar"\n      :checkbox-config="{checkField: \'checked\', labelField: \'nickname\'}">\n      <template v-slot:buttons>\n        <vue-button @click="loadColumnAndData(10000, 100000)">加载1w列10w条</vue-button>\n        <vue-button @click="$refs.xGrid.toggleRowSelection($refs.xGrid.getData(1))">切换第二行选中</vue-button>\n        <vue-button @click="$refs.xGrid.setSelection([$refs.xGrid.getData(2), $refs.xGrid.getData(3)], true)">设置第三、四行选中</vue-button>\n        <vue-button @click="$refs.xGrid.setAllSelection(true)">设置所有行选中</vue-button>\n        <vue-button @click="$refs.xGrid.clearSelection()">清除所有行选中</vue-button>\n        <vue-button @click="getSelectEvent">获取选中</vue-button>\n      </template>\n    </vue-xgrid></div>',parameter:{data:function(){return{loading:!1,tableToolbar:{}}},created:function(){this.loadColumnAndData(200,600)},methods:{loadColumnAndData:function(e,n){var t=this;this.loading=!0,Promise.all([this.loadColumn(e),this.loadList(n)]).then(function(){t.loading=!1})},loadColumn:function(e){var n=this;return new Promise(function(t){setTimeout(function(){var l=window.MOCK_COLUMN_LIST.slice(0,e);n.$refs.xGrid.loadColumn(l).then(function(){t()})},300)})},loadList:function(e){var n=this;return new Promise(function(t){setTimeout(function(){var l=window.MOCK_DATA_LIST.slice(0,e);n.$refs.xGrid.reloadData(l).then(function(){t()})},300)})},getSelectEvent:function(){var e=this.$refs.xGrid.getSelectRecords();this.$alert({message:e.length})}}}}],styles:""}},"./demo/XtableDemo/scroll/ScrollFullRows.vue":
/*!***************************************************!*\
  !*** ./demo/XtableDemo/scroll/ScrollFullRows.vue ***!
  \***************************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/scroll/ScrollFullRows",name:"XtableDemo.scroll.ScrollFullRows",head:{label:"XtableDemo.scroll.ScrollFullRows.label",description:"XtableDemo.scroll.ScrollFullRows.description"},samples:[{id:"XtableDemo.scroll.ScrollFullRows.sample1",label:"XtableDemo.scroll.ScrollFullRows.sample1.label",description:"XtableDemo.scroll.ScrollFullRows.sample1.description",code:'<div>\n    <vue-button @click="loadList(100000)">加载10w条</vue-button>\n    <vue-button @click="$refs.xTable.toggleRowSelection($refs.xTable.getData(1))">切换第二行选中</vue-button>\n    <vue-button @click="$refs.xTable.setSelection([$refs.xTable.getData(2), $refs.xTable.getData(3)], true)">设置第三、四行选中</vue-button>\n    <vue-button @click="$refs.xTable.setAllSelection(true)">设置所有行选中</vue-button>\n    <vue-button @click="$refs.xTable.clearSelection()">清除所有行选中</vue-button>\n    <vue-button @click="getSelectEvent">获取选中</vue-button>\n</div>\n\n<vue-xtable\n  ref="xTable"\n  border\n  resizable\n  show-overflow\n  show-header-overflow\n  highlight-hover-row\n  highlight-current-row\n  height="600"\n  :loading="loading"\n  :checkbox-config="{checkField: \'checked\'}">\n  <vue-xtable-column type="checkbox" width="60" fixed="left"></vue-xtable-column>\n  <vue-xtable-column type="index" width="100" fixed="left"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" sortable width="200"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex" width="200"></vue-xtable-column>\n  <vue-xtable-column field="rate" title="Rate" width="200"></vue-xtable-column>\n  <vue-xtable-column field="region" title="Region" width="200"></vue-xtable-column>\n  <vue-xtable-column field="time" title="Time" width="200"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" width="300"></vue-xtable-column>\n  <vue-xtable-column field="updateTime" title="UpdateTime" width="200"></vue-xtable-column>\n  <vue-xtable-column field="createTime" title="CreateTime" width="200"></vue-xtable-column>\n  <vue-xtable-column field="attr1" title="Attr1" width="200"></vue-xtable-column>\n  <vue-xtable-column field="attr2" title="Attr2" width="200"></vue-xtable-column>\n  <vue-xtable-column field="attr3" title="Attr3" width="200"></vue-xtable-column>\n  <vue-xtable-column field="attr4" title="Attr4" width="200"></vue-xtable-column>\n  <vue-xtable-column field="attr5" title="Attr5" width="200"></vue-xtable-column>\n  <vue-xtable-column field="attr6" title="Attr6" width="200"></vue-xtable-column>\n  <vue-xtable-column field="attr7" title="Attr7" width="200"></vue-xtable-column>\n  <vue-xtable-column field="attr8" title="Attr8" width="200"></vue-xtable-column>\n  <vue-xtable-column field="attr9" title="Attr9" width="200"></vue-xtable-column>\n  <vue-xtable-column field="createTime" title="CreateTime" width="200"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age" width="200" fixed="right"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      loading: false,\n\n    }\n  },\n  created () {\n    this.loadList(600)\n  },\n\n  methods: {\n    loadList (size) {\n      this.loading = true\n      setTimeout(() => {\n        let xTable = this.$refs.xTable\n        if (xTable) {\n          // 使用函数式加载，阻断 vue 对大数组的双向绑定，大数据性能翻倍提升\n          xTable.reloadData(window.MOCK_DATA_LIST.slice(0, size)).then(() => {\n            this.loading = false\n          })\n        } else {\n          this.loading = false\n        }\n      }, 300)\n    },\n    getSelectEvent () {\n      let selectRecords = this.$refs.xTable.getSelectRecords()\n      this.$alert({ message: selectRecords.length })\n    }\n  }\n})\n<\/script>',template:'<div class="source">    <div>\n        <vue-button @click="loadList(100000)">加载10w条</vue-button>\n        <vue-button @click="$refs.xTable.toggleRowSelection($refs.xTable.getData(1))">切换第二行选中</vue-button>\n        <vue-button @click="$refs.xTable.setSelection([$refs.xTable.getData(2), $refs.xTable.getData(3)], true)">设置第三、四行选中</vue-button>\n        <vue-button @click="$refs.xTable.setAllSelection(true)">设置所有行选中</vue-button>\n        <vue-button @click="$refs.xTable.clearSelection()">清除所有行选中</vue-button>\n        <vue-button @click="getSelectEvent">获取选中</vue-button>\n    </div>\n\n    <vue-xtable\n      ref="xTable"\n      border\n      resizable\n      show-overflow\n      show-header-overflow\n      highlight-hover-row\n      highlight-current-row\n      height="600"\n      :loading="loading"\n      :checkbox-config="{checkField: \'checked\'}">\n      <vue-xtable-column type="checkbox" width="60" fixed="left"></vue-xtable-column>\n      <vue-xtable-column type="index" width="100" fixed="left"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" sortable width="200"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex" width="200"></vue-xtable-column>\n      <vue-xtable-column field="rate" title="Rate" width="200"></vue-xtable-column>\n      <vue-xtable-column field="region" title="Region" width="200"></vue-xtable-column>\n      <vue-xtable-column field="time" title="Time" width="200"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" width="300"></vue-xtable-column>\n      <vue-xtable-column field="updateTime" title="UpdateTime" width="200"></vue-xtable-column>\n      <vue-xtable-column field="createTime" title="CreateTime" width="200"></vue-xtable-column>\n      <vue-xtable-column field="attr1" title="Attr1" width="200"></vue-xtable-column>\n      <vue-xtable-column field="attr2" title="Attr2" width="200"></vue-xtable-column>\n      <vue-xtable-column field="attr3" title="Attr3" width="200"></vue-xtable-column>\n      <vue-xtable-column field="attr4" title="Attr4" width="200"></vue-xtable-column>\n      <vue-xtable-column field="attr5" title="Attr5" width="200"></vue-xtable-column>\n      <vue-xtable-column field="attr6" title="Attr6" width="200"></vue-xtable-column>\n      <vue-xtable-column field="attr7" title="Attr7" width="200"></vue-xtable-column>\n      <vue-xtable-column field="attr8" title="Attr8" width="200"></vue-xtable-column>\n      <vue-xtable-column field="attr9" title="Attr9" width="200"></vue-xtable-column>\n      <vue-xtable-column field="createTime" title="CreateTime" width="200"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age" width="200" fixed="right"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{loading:!1}},created:function(){this.loadList(600)},methods:{loadList:function(e){var n=this;this.loading=!0,setTimeout(function(){var t=n.$refs.xTable;t?t.reloadData(window.MOCK_DATA_LIST.slice(0,e)).then(function(){n.loading=!1}):n.loading=!1},300)},getSelectEvent:function(){var e=this.$refs.xTable.getSelectRecords();this.$alert({message:e.length})}}}}],styles:""}},"./demo/XtableDemo/scroll/ScrollRows.vue":
/*!***********************************************!*\
  !*** ./demo/XtableDemo/scroll/ScrollRows.vue ***!
  \***********************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/scroll/ScrollRows",name:"XtableDemo.scroll.ScrollRows",head:{label:"XtableDemo.scroll.ScrollRows.label",description:"XtableDemo.scroll.ScrollRows.description"},samples:[{id:"XtableDemo.scroll.ScrollRows.sample1",label:"XtableDemo.scroll.ScrollRows.sample1.label",description:"XtableDemo.scroll.ScrollRows.sample1.description",code:'<div>\n    <vue-button @click="loadList(10000)">加载1w条</vue-button>\n</div>\n\n<vue-xtable\n  ref="xTable"\n  border\n  resizable\n  show-overflow\n  height="300"\n  :loading="loading">\n  <vue-xtable-column type="index" width="100"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" sortable width="200"></vue-xtable-column>\n  <vue-xtable-column field="age" title="Age" width="200"></vue-xtable-column>\n  <vue-xtable-column field="sex" title="Sex" width="200"></vue-xtable-column>\n  <vue-xtable-column field="rate" title="Rate" width="200"></vue-xtable-column>\n  <vue-xtable-column field="region" title="Region" width="200"></vue-xtable-column>\n  <vue-xtable-column field="time" title="Time" width="200"></vue-xtable-column>\n  <vue-xtable-column field="address" title="Address" width="300" show-overflow></vue-xtable-column>\n  <vue-xtable-column field="updateTime" title="UpdateTime" width="200"></vue-xtable-column>\n  <vue-xtable-column field="createTime" title="CreateTime" width="200"></vue-xtable-column>\n  <vue-xtable-column field="attr1" title="Attr1" width="200"></vue-xtable-column>\n  <vue-xtable-column field="attr2" title="Attr2" width="200"></vue-xtable-column>\n  <vue-xtable-column field="attr3" title="Attr3" width="200"></vue-xtable-column>\n  <vue-xtable-column field="attr4" title="Attr4" width="200"></vue-xtable-column>\n  <vue-xtable-column field="attr5" title="Attr5" width="200"></vue-xtable-column>\n  <vue-xtable-column field="attr6" title="Attr6" width="200"></vue-xtable-column>\n  <vue-xtable-column field="attr7" title="Attr7" width="200"></vue-xtable-column>\n  <vue-xtable-column field="attr8" title="Attr8" width="200"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" width="200"></vue-xtable-column>\n  <vue-xtable-column field="attr9" title="Attr9" width="200"></vue-xtable-column>\n  <vue-xtable-column field="createTime" title="CreateTime" width="200"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      loading: false,\n\n    }\n  },\n  created () {\n    this.loadList(600)\n  },\n\n  methods: {\n    loadList (size) {\n      this.loading = true\n      setTimeout(() => {\n        let xTable = this.$refs.xTable\n        if (xTable) {\n          // 使用函数式加载，阻断 vue 对大数组的双向绑定，大数据性能翻倍提升\n          xTable.reloadData(window.MOCK_DATA_LIST.slice(0, size)).then(() => {\n            this.loading = false\n          })\n        } else {\n          this.loading = false\n        }\n      }, 300)\n    }\n  }\n})\n<\/script>',template:'<div class="source">    <div>\n        <vue-button @click="loadList(10000)">加载1w条</vue-button>\n    </div>\n\n    <vue-xtable\n      ref="xTable"\n      border\n      resizable\n      show-overflow\n      height="300"\n      :loading="loading">\n      <vue-xtable-column type="index" width="100"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" sortable width="200"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age" width="200"></vue-xtable-column>\n      <vue-xtable-column field="sex" title="Sex" width="200"></vue-xtable-column>\n      <vue-xtable-column field="rate" title="Rate" width="200"></vue-xtable-column>\n      <vue-xtable-column field="region" title="Region" width="200"></vue-xtable-column>\n      <vue-xtable-column field="time" title="Time" width="200"></vue-xtable-column>\n      <vue-xtable-column field="address" title="Address" width="300" show-overflow></vue-xtable-column>\n      <vue-xtable-column field="updateTime" title="UpdateTime" width="200"></vue-xtable-column>\n      <vue-xtable-column field="createTime" title="CreateTime" width="200"></vue-xtable-column>\n      <vue-xtable-column field="attr1" title="Attr1" width="200"></vue-xtable-column>\n      <vue-xtable-column field="attr2" title="Attr2" width="200"></vue-xtable-column>\n      <vue-xtable-column field="attr3" title="Attr3" width="200"></vue-xtable-column>\n      <vue-xtable-column field="attr4" title="Attr4" width="200"></vue-xtable-column>\n      <vue-xtable-column field="attr5" title="Attr5" width="200"></vue-xtable-column>\n      <vue-xtable-column field="attr6" title="Attr6" width="200"></vue-xtable-column>\n      <vue-xtable-column field="attr7" title="Attr7" width="200"></vue-xtable-column>\n      <vue-xtable-column field="attr8" title="Attr8" width="200"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" width="200"></vue-xtable-column>\n      <vue-xtable-column field="attr9" title="Attr9" width="200"></vue-xtable-column>\n      <vue-xtable-column field="createTime" title="CreateTime" width="200"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{loading:!1}},created:function(){this.loadList(600)},methods:{loadList:function(e){var n=this;this.loading=!0,setTimeout(function(){var t=n.$refs.xTable;t?t.reloadData(window.MOCK_DATA_LIST.slice(0,e)).then(function(){n.loading=!1}):n.loading=!1},300)}}}}],styles:""}},"./demo/XtableDemo/scroll/Template.vue":
/*!*********************************************!*\
  !*** ./demo/XtableDemo/scroll/Template.vue ***!
  \*********************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/scroll/Template",name:"XtableDemo.scroll.Template",head:{label:"XtableDemo.scroll.Template.label",description:"XtableDemo.scroll.Template.description"},samples:[{id:"XtableDemo.scroll.Template.sample1",label:"XtableDemo.scroll.Template.sample1.label",description:"XtableDemo.scroll.Template.sample1.description",code:'<vue-xgrid\n  border\n  resizable\n  show-overflow\n  ref="xGrid"\n  height="400"\n  :loading="loading"\n  :toolbar="tableToolbar"\n  :columns="tableColumn"\n  :edit-config="{trigger: \'click\', mode: \'cell\'}">\n</vue-xgrid>\n\n<vue-dialog v-model="showDetails" title="查看详情" width="800" height="400" resize>\n  <template>\n    <div v-if="selectRow" v-html="selectRow.html3"></div>\n  </template>\n</vue-dialog>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      loading: false,\n      showDetails: false,\n      selectRow: null,\n      tableColumn: [\n        { type: \'index\', width: 50 },\n        {\n          field: \'name\',\n          title: \'Name\',\n          slots: {\n            default: ({ row, column }) => {\n              return [\n                <span style="color: red;">{ row.name }</span>,\n                <button onClick={ () => this.showDetailEvent(row, column) }>弹框</button>\n              ]\n            }\n          }\n        },\n        {\n          field: \'sex\',\n          title: \'Sex\',\n          showHeaderOverflow: true,\n          filters: [{ data: \'\' }],\n          filterMethod: this.filterSexMethod,\n          editRender: { type: \'default\' },\n          slots: {\n            default: ({ row, column }) => {\n              return [\n                <a class="link" href="/">我是超链接：{ row.sex }</a>\n              ]\n            },\n            header: ({ column }) => {\n              return [\n                <span>\n                  <i>@</i>\n                  <span style="color: red;" onClick={ this.headerClickEvent }>{ column.title }</span>\n                </span>\n              ]\n            },\n            filter: ({ column, context }) => {\n              return column.filters.map(option => {\n                return <input type="type" value={ option.data } onInput={ evnt => this.changeFilterEvent(evnt, option, context) }/>\n              })\n            },\n            edit: ({ row }) => {\n              return [\n                <input type="text" value={ row.sex } onInput={ evnt => { row.sex = evnt.target.value } }/>\n              ]\n            }\n          }\n        },\n        {\n          field: \'address\',\n          title: \'Address\',\n          slots: {\n            default: ({ row }, h) => {\n              return [\n                h(\'span\', {\n                  style: {\n                    color: \'blue\'\n                  },\n                  on: {\n                    click: () => this.addressClickEvent(row)\n                  }\n                }, row.address)\n              ]\n            }\n          }\n        },\n        {\n          field: \'html2\',\n          title: \'Html片段\',\n          slots: {\n            default: ({ row }, h) => {\n              return [\n                <span domPropsInnerHTML={ row.html2 }></span>\n              ]\n            }\n          }\n        },\n        {\n          field: \'img1\',\n          title: \'图片路径\',\n          slots: {\n            default: ({ row }, h) => {\n              return [\n                row.img1 ? <img src={ row.img1 } style="height: 40px;"/> : <span>无</span>\n              ]\n            }\n          }\n        }\n      ],\n      tableToolbar: {\n        setting: true,\n        slots: {\n          buttons: () => {\n            return [\n              <button>按钮</button>,\n              <input type="text"/>,\n              <vue-button>按钮1</vue-button>,\n              <vue-button>按钮2</vue-button>\n            ]\n          }\n        }\n      },\n\n    }\n  },\n  created () {\n    this.loading = true\n    setTimeout(() => {\n      let tableData = window.MOCK_DATA_LIST.slice(0, 1000)\n      // 使用函数式加载，阻断 vue 对大数组的双向绑定，大数据性能翻倍提升\n      if (this.$refs.xGrid) {\n        this.$refs.xGrid.loadData(tableData)\n      }\n      this.loading = false\n    }, 500)\n  },\n\n  methods: {\n    showDetailEvent (row) {\n      this.selectRow = row\n      this.showDetails = true\n    },\n    headerClickEvent (evnt) {\n      this.$alert({ message: \'头部点击事件\' })\n    },\n    addressClickEvent (row) {\n      this.$alert({ message: `address点击事件：${row.row}` })\n    },\n    filterSexMethod ({ option, row }) {\n      return row.sex === option.data\n    },\n    changeFilterEvent (evnt, option, context) {\n      option.data = evnt.target.value\n      context.changeMultipleOption(evnt, !!option.data, option)\n    }\n  }\n})\n<\/script>',template:'<div class="source">    <vue-xgrid\n      border\n      resizable\n      show-overflow\n      ref="xGrid"\n      height="400"\n      :loading="loading"\n      :toolbar="tableToolbar"\n      :columns="tableColumn"\n      :edit-config="{trigger: \'click\', mode: \'cell\'}">\n    </vue-xgrid>\n\n    <vue-dialog v-model="showDetails" title="查看详情" width="800" height="400" resize>\n      <template>\n        <div v-if="selectRow" v-html="selectRow.html3"></div>\n      </template>\n    </vue-dialog></div>',parameter:{data:function(){var e=this,n=this.$createElement;return{loading:!1,showDetails:!1,selectRow:null,tableColumn:[{type:"index",width:50},{field:"name",title:"Name",slots:{default:function(t){var l=t.row,o=t.column;return[n("span",{style:"color: red;"},[l.name]),n("button",{on:{click:function(){return e.showDetailEvent(l,o)}}},["弹框"])]}}},{field:"sex",title:"Sex",showHeaderOverflow:!0,filters:[{data:""}],filterMethod:this.filterSexMethod,editRender:{type:"default"},slots:{default:function(e){var t=e.row;e.column;return[n("a",{class:"link",attrs:{href:"/"}},["我是超链接：",t.sex])]},header:function(t){var l=t.column;return[n("span",[n("i",["@"]),n("span",{style:"color: red;",on:{click:e.headerClickEvent}},[l.title])])]},filter:function(t){var l=t.column,o=t.context;return l.filters.map(function(t){return n("input",{attrs:{type:"type"},domProps:{value:t.data},on:{input:function(n){return e.changeFilterEvent(n,t,o)}}})})},edit:function(e){var t=e.row;return[n("input",{attrs:{type:"text"},domProps:{value:t.sex},on:{input:function(e){t.sex=e.target.value}}})]}}},{field:"address",title:"Address",slots:{default:function(n,t){var l=n.row;return[t("span",{style:{color:"blue"},on:{click:function(){return e.addressClickEvent(l)}}},l.address)]}}},{field:"html2",title:"Html片段",slots:{default:function(e,n){return[n("span",{domProps:{innerHTML:e.row.html2}})]}}},{field:"img1",title:"图片路径",slots:{default:function(e,n){var t=e.row;return[t.img1?n("img",{attrs:{src:t.img1},style:"height: 40px;"}):n("span",["无"])]}}}],tableToolbar:{setting:!0,slots:{buttons:function(){return[n("button",["按钮"]),n("input",{attrs:{type:"text"}}),n("vue-button",["按钮1"]),n("vue-button",["按钮2"])]}}}}},created:function(){var e=this;this.loading=!0,setTimeout(function(){var n=window.MOCK_DATA_LIST.slice(0,1e3);e.$refs.xGrid&&e.$refs.xGrid.loadData(n),e.loading=!1},500)},methods:{showDetailEvent:function(e){this.selectRow=e,this.showDetails=!0},headerClickEvent:function(e){this.$alert({message:"头部点击事件"})},addressClickEvent:function(e){this.$alert({message:"address点击事件：".concat(e.row)})},filterSexMethod:function(e){var n=e.option;return e.row.sex===n.data},changeFilterEvent:function(e,n,t){n.data=e.target.value,t.changeMultipleOption(e,!!n.data,n)}}}}],styles:""}},"./demo/XtableDemo/scroll/Tree.vue":
/*!*****************************************!*\
  !*** ./demo/XtableDemo/scroll/Tree.vue ***!
  \*****************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/scroll/Tree",name:"XtableDemo.scroll.Tree",head:{label:"XtableDemo.scroll.Tree.label",description:"XtableDemo.scroll.Tree.description"},samples:[{id:"XtableDemo.scroll.Tree.sample1",label:"XtableDemo.scroll.Tree.sample1.label",description:"XtableDemo.scroll.Tree.sample1.description",code:'<vue-toolbar>\n  <template v-slot:buttons>\n    <vue-button @click="setAllTreeExpansion(true)">展开所有</vue-button>\n    <vue-button @click="setAllTreeExpansion(false)">收起所有</vue-button>\n  </template>\n</vue-toolbar>\n\n<vue-xtable\n  ref="xTable"\n  resizable\n  show-overflow\n  height="500"\n  row-id="id"\n  :loading="loading">\n  <vue-xtable-column type="index" width="100"></vue-xtable-column>\n  <vue-xtable-column field="name" title="省市区">\n    <template v-slot="scope">\n      <span :class="[\'level-\' + scope.row.level]" :style="{paddingLeft: scope.row.level * treeIndent + \'px\'}">\n        <i\n          class="virtual-tree-icon"\n          :class="[\'vue-icon-arrow-\' + (scope.row.expand ? \'down\' : \'right\') , {visible: scope.row.children && scope.row.children.length}]"\n          @click="toggleTreeExpansion(scope.row)"></i>\n        <span>{{ scope.row.name }}</span>\n      </span>\n    </template>\n  </vue-xtable-column>\n  <vue-xtable-column field="id" title="邮政编码"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      loading: false,\n      treeConfig: {\n        children: \'children\'\n      },\n      treeIndent: 16,\n\n    }\n  },\n  created () {\n    this.findCityAll()\n  },\n\n  methods: {\n    findCityAll () {\n      this.loading = true\n      Vue.http.get(\'/api/conf/city/all\').then(data => {\n        const list = this.toVirtualTree(data.data)\n        this.$refs.xTable.reloadData(list)\n        this.loading = false\n      })\n    },\n    setAllTreeExpansion (expand) {\n      let list = this.virtualAllExpand(expand)\n      this.$refs.xTable.reloadData(list)\n    },\n    toggleTreeExpansion (row) {\n      let list = this.virtualExpand(row, !row.expand)\n      this.$refs.xTable.loadData(list)\n    },\n    // 通用虚拟树方法-定义树属性\n    toVirtualTree (treeData) {\n      VueUtil.eachTree(treeData, (item, index, obj, paths, parent, nodes) => {\n        item.expand = false\n        item.level = nodes.length - 1\n      })\n      this.treeData = treeData.slice(0)\n      this.tableData = treeData.slice(0)\n      return treeData\n    },\n    // 通用虚拟树方法-展开/收起树节点\n    virtualExpand (row, expand) {\n      if (row.expand !== expand) {\n        let children = row.children\n        if (children && children.length) {\n          let tableData = this.tableData\n          if (row.expand) {\n            // 展开节点\n            let childList = []\n            VueUtil.eachTree(children, item => {\n              childList.push(item)\n            }, this.treeConfig)\n            tableData = tableData.filter(item => childList.indexOf(item) === -1)\n          } else {\n            // 收起节点\n            let expandList = []\n            let rowIndex = tableData.indexOf(row)\n            if (rowIndex === -1) {\n              throw new Error(\'错误的操作！\')\n            }\n            VueUtil.eachTree(children, (item, index, obj, paths, parent, nodes) => {\n              if (!parent || parent.expand) {\n                expandList.push(item)\n              }\n            }, this.treeConfig)\n            tableData.splice.apply(tableData, [rowIndex + 1, 0].concat(expandList))\n          }\n          row.expand = !row.expand\n          this.tableData = tableData\n        }\n      }\n      return this.tableData\n    },\n    // 通用虚拟树方法-展开/收起所有树节点\n    virtualAllExpand (expand) {\n      VueUtil.eachTree(this.treeData, row => {\n        this.virtualExpand(row, expand)\n      }, this.treeConfig)\n      return this.tableData\n    }\n  }\n})\n<\/script>\n\n<style>\n.virtual-tree-icon {\n  visibility: hidden;\n  cursor: pointer;\n  margin-right: 4px;\n}\n.virtual-tree-icon.visible {\n  visibility: visible;\n}\n</style>',template:'<div class="source">    <vue-toolbar>\n      <template v-slot:buttons>\n        <vue-button @click="setAllTreeExpansion(true)">展开所有</vue-button>\n        <vue-button @click="setAllTreeExpansion(false)">收起所有</vue-button>\n      </template>\n    </vue-toolbar>\n\n    <vue-xtable\n      ref="xTable"\n      resizable\n      show-overflow\n      height="500"\n      row-id="id"\n      :loading="loading">\n      <vue-xtable-column type="index" width="100"></vue-xtable-column>\n      <vue-xtable-column field="name" title="省市区">\n        <template v-slot="scope">\n          <span :class="[\'level-\' + scope.row.level]" :style="{paddingLeft: scope.row.level * treeIndent + \'px\'}">\n            <i\n              class="virtual-tree-icon"\n              :class="[\'vue-icon-arrow-\' + (scope.row.expand ? \'down\' : \'right\') , {visible: scope.row.children && scope.row.children.length}]"\n              @click="toggleTreeExpansion(scope.row)"></i>\n            <span>{{ scope.row.name }}</span>\n          </span>\n        </template>\n      </vue-xtable-column>\n      <vue-xtable-column field="id" title="邮政编码"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{loading:!1,treeConfig:{children:"children"},treeIndent:16}},created:function(){this.findCityAll()},methods:{findCityAll:function(){var e=this;this.loading=!0,Vue.http.get("/api/conf/city/all").then(function(n){var t=e.toVirtualTree(n.data);e.$refs.xTable.reloadData(t),e.loading=!1})},setAllTreeExpansion:function(e){var n=this.virtualAllExpand(e);this.$refs.xTable.reloadData(n)},toggleTreeExpansion:function(e){var n=this.virtualExpand(e,!e.expand);this.$refs.xTable.loadData(n)},toVirtualTree:function(e){return VueUtil.eachTree(e,function(e,n,t,l,o,a){e.expand=!1,e.level=a.length-1}),this.treeData=e.slice(0),this.tableData=e.slice(0),e},virtualExpand:function(e,n){if(e.expand!==n){var t=e.children;if(t&&t.length){var l=this.tableData;if(e.expand){var o=[];VueUtil.eachTree(t,function(e){o.push(e)},this.treeConfig),l=l.filter(function(e){return-1===o.indexOf(e)})}else{var a=[],i=l.indexOf(e);if(-1===i)throw new Error("错误的操作！");VueUtil.eachTree(t,function(e,n,t,l,o,i){o&&!o.expand||a.push(e)},this.treeConfig),l.splice.apply(l,[i+1,0].concat(a))}e.expand=!e.expand,this.tableData=l}}return this.tableData},virtualAllExpand:function(e){var n=this;return VueUtil.eachTree(this.treeData,function(t){n.virtualExpand(t,e)},this.treeConfig),this.tableData}}}}],styles:".virtual-tree-icon {\n  visibility: hidden;\n  cursor: pointer;\n  margin-right: 4px;\n}\n.virtual-tree-icon.visible {\n  visibility: visible;\n}"}},"./demo/XtableDemo/tree/Basic.vue":
/*!****************************************!*\
  !*** ./demo/XtableDemo/tree/Basic.vue ***!
  \****************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/tree/Basic",name:"XtableDemo.tree.Basic",head:{label:"XtableDemo.tree.Basic.label",description:"XtableDemo.tree.Basic.description"},samples:[{id:"XtableDemo.tree.Basic.sample1",label:"XtableDemo.tree.Basic.sample1.label",description:"XtableDemo.tree.Basic.sample1.description",code:'<vue-toolbar>\n  <template v-slot:buttons>\n    <vue-button @click="getTreeExpansionEvent">获取已展开</vue-button>\n    <vue-button @click="$refs.xTree.setAllTreeExpansion(true)">展开所有</vue-button>\n    <vue-button @click="$refs.xTree.clearTreeExpand()">关闭所有</vue-button>\n  </template>\n</vue-toolbar>\n\n<vue-xtable\n  border\n  resizable\n  ref="xTree"\n  :tree-config="{children: \'children\'}"\n  :data="tableData">\n  <vue-xtable-column field="name" title="姓名"></vue-xtable-column>\n  <vue-xtable-column field="size" title="Size"></vue-xtable-column>\n  <vue-xtable-column field="type" title="Type"></vue-xtable-column>\n  <vue-xtable-column field="date" title="Date" tree-node></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\n  },\n  methods: {\n    getTreeExpansionEvent () {\n      let treeExpandRecords = this.$refs.xTree.getTreeExpandRecords()\n      this.$alert({ message: treeExpandRecords.length })\n    }\n  }\n})\n<\/script>',template:'<div class="source">    <vue-toolbar>\n      <template v-slot:buttons>\n        <vue-button @click="getTreeExpansionEvent">获取已展开</vue-button>\n        <vue-button @click="$refs.xTree.setAllTreeExpansion(true)">展开所有</vue-button>\n        <vue-button @click="$refs.xTree.clearTreeExpand()">关闭所有</vue-button>\n      </template>\n    </vue-toolbar>\n\n    <vue-xtable\n      border\n      resizable\n      ref="xTree"\n      :tree-config="{children: \'children\'}"\n      :data="tableData">\n      <vue-xtable-column field="name" title="姓名"></vue-xtable-column>\n      <vue-xtable-column field="size" title="Size"></vue-xtable-column>\n      <vue-xtable-column field="type" title="Type"></vue-xtable-column>\n      <vue-xtable-column field="date" title="Date" tree-node></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=VueUtil.clone(window.MOCK_TREE_DATA_LIST,!0)},methods:{getTreeExpansionEvent:function(){var e=this.$refs.xTree.getTreeExpandRecords();this.$alert({message:e.length})}}}},{id:"XtableDemo.tree.Basic.sample2",label:"XtableDemo.tree.Basic.sample2.label",description:"XtableDemo.tree.Basic.sample2.description",code:'<vue-xtable\n  border\n  :data="tableData"\n  :tree-config="{children: \'children\', expandAll: true}">\n  <vue-xtable-column type="index" width="160" title="序号" tree-node></vue-xtable-column>\n  <vue-xtable-column field="name" title="姓名"></vue-xtable-column>\n  <vue-xtable-column title="基本信息">\n    <vue-xtable-column field="size" title="Size"></vue-xtable-column>\n    <vue-xtable-column field="type" title="Type"></vue-xtable-column>\n  </vue-xtable-column>\n  <vue-xtable-column field="date" title="Date"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\n  },\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      border\n      :data="tableData"\n      :tree-config="{children: \'children\', expandAll: true}">\n      <vue-xtable-column type="index" width="160" title="序号" tree-node></vue-xtable-column>\n      <vue-xtable-column field="name" title="姓名"></vue-xtable-column>\n      <vue-xtable-column title="基本信息">\n        <vue-xtable-column field="size" title="Size"></vue-xtable-column>\n        <vue-xtable-column field="type" title="Type"></vue-xtable-column>\n      </vue-xtable-column>\n      <vue-xtable-column field="date" title="Date"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=VueUtil.clone(window.MOCK_TREE_DATA_LIST,!0)}}}],styles:""}},"./demo/XtableDemo/tree/CellValid.vue":
/*!********************************************!*\
  !*** ./demo/XtableDemo/tree/CellValid.vue ***!
  \********************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/tree/CellValid",name:"XtableDemo.tree.CellValid",head:{label:"XtableDemo.tree.CellValid.label",description:"XtableDemo.tree.CellValid.description"},samples:[{id:"XtableDemo.tree.CellValid.sample1",label:"XtableDemo.tree.CellValid.sample1.label",description:"XtableDemo.tree.CellValid.sample1.description",code:'<vue-toolbar>\n  <template v-slot:buttons>\n    <vue-button @click="validEvent">校验</vue-button>\n    <vue-button @click="fullValidEvent">完整校验</vue-button>\n    <vue-button @click="selectValidEvent">选中校验</vue-button>\n    <vue-button @click="getSelectEvent">获取选中</vue-button>\n    <vue-button @click="getUpdateEvent">获取修改</vue-button>\n  </template>\n</vue-toolbar>\n\n<vue-xtable\n  resizable\n  ref="xTree"\n  :edit-rules="validRules"\n  :tree-config="treeConfig"\n  :edit-config="{trigger: \'click\', mode: \'cell\', showStatus: true}"\n  :checkbox-config="{labelField: \'id\'}"\n  :data="tableData">\n  <vue-xtable-column type="checkbox" title="ID" tree-node></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="size" title="Size" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="type" title="Type" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="date" title="Date" :edit-render="{name: \'input\'}"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n      treeConfig: {\n        children: \'children\'\n      },\n      validRules: {\n        name: [\n          { required: true, message: \'名称必须填写\' },\n          { min: 3, max: 50, message: \'文件名长度在 3 到 50 个字符\' }\n        ]\n      },\n\n    }\n  },\n  created () {\n    this.tableData = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\n  },\n\n  methods: {\n    validEvent () {\n      this.$refs.xTree.validate(valid => {\n        if (valid) {\n          this.$notify.success({ message:\'校验成功！\'});\n        } else {\n          this.$notify.error({ message:\'校验不通过！\'});\n        }\n      })\n    },\n    fullValidEvent () {\n      this.$refs.xTree.fullValidate((valid, errMap) => {\n        if (valid) {\n          this.$notify.success({ message:\'校验成功！\'});\n        } else {\n          let msgList = []\n          Object.values(errMap).forEach(errList => {\n            errList.forEach(params => {\n              let { row, column, rules } = params\n              let matchObj = VueUtil.findTree(this.tableData, item => item === row, this.treeConfig)\n              let seq = matchObj.path.filter(item => item !== this.treeConfig.children).map(item => Number(item) + 1).join(\'.\')\n              rules.forEach(rule => {\n                msgList.push(`第 ${seq} 行 ${column.title} 校验错误：${rule.message}`)\n              })\n            })\n          })\n\n          var h = this.$createElement;\n          this.$alert({\n            type: "error",\n            message: h(\'div\',[msgList.map(function (msg) {\n              return h("div", [msg]);\n            })])\n          });\n        }\n      })\n    },\n    selectValidEvent () {\n      let selectRecords = this.$refs.xTree.getSelectRecords()\n      if (selectRecords.length > 0) {\n        this.$refs.xTree.validate(selectRecords, valid => {\n          if (valid) {\n            this.$notify.success({ message:\'校验成功！\'});\n          } else {\n            this.$notify.error({ message:\'校验不通过！\'});\n          }\n        })\n      } else {\n        this.$notify.warning({ message:\'未选中数据！\'});\n      }\n    },\n    getSelectEvent () {\n      let selectRecords = this.$refs.xTree.getSelectRecords()\n      this.$alert({ message: selectRecords.length })\n    },\n    getUpdateEvent () {\n      let updateRecords = this.$refs.xTree.getUpdateRecords()\n      this.$alert({ message: updateRecords.length })\n    }\n  }\n})\n<\/script>',template:'<div class="source">    <vue-toolbar>\n      <template v-slot:buttons>\n        <vue-button @click="validEvent">校验</vue-button>\n        <vue-button @click="fullValidEvent">完整校验</vue-button>\n        <vue-button @click="selectValidEvent">选中校验</vue-button>\n        <vue-button @click="getSelectEvent">获取选中</vue-button>\n        <vue-button @click="getUpdateEvent">获取修改</vue-button>\n      </template>\n    </vue-toolbar>\n\n    <vue-xtable\n      resizable\n      ref="xTree"\n      :edit-rules="validRules"\n      :tree-config="treeConfig"\n      :edit-config="{trigger: \'click\', mode: \'cell\', showStatus: true}"\n      :checkbox-config="{labelField: \'id\'}"\n      :data="tableData">\n      <vue-xtable-column type="checkbox" title="ID" tree-node></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="size" title="Size" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="type" title="Type" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="date" title="Date" :edit-render="{name: \'input\'}"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[],treeConfig:{children:"children"},validRules:{name:[{required:!0,message:"名称必须填写"},{min:3,max:50,message:"文件名长度在 3 到 50 个字符"}]}}},created:function(){this.tableData=VueUtil.clone(window.MOCK_TREE_DATA_LIST,!0)},methods:{validEvent:function(){var e=this;this.$refs.xTree.validate(function(n){n?e.$notify.success({message:"校验成功！"}):e.$notify.error({message:"校验不通过！"})})},fullValidEvent:function(){var e=this;this.$refs.xTree.fullValidate(function(n,t){if(n)e.$notify.success({message:"校验成功！"});else{var l=[];Object.values(t).forEach(function(n){n.forEach(function(n){var t=n.row,o=n.column,a=n.rules,i=VueUtil.findTree(e.tableData,function(e){return e===t},e.treeConfig).path.filter(function(n){return n!==e.treeConfig.children}).map(function(e){return Number(e)+1}).join(".");a.forEach(function(e){l.push("第 ".concat(i," 行 ").concat(o.title," 校验错误：").concat(e.message))})})});var o=e.$createElement;e.$alert({type:"error",message:o("div",[l.map(function(e){return o("div",[e])})])})}})},selectValidEvent:function(){var e=this,n=this.$refs.xTree.getSelectRecords();n.length>0?this.$refs.xTree.validate(n,function(n){n?e.$notify.success({message:"校验成功！"}):e.$notify.error({message:"校验不通过！"})}):this.$notify.warning({message:"未选中数据！"})},getSelectEvent:function(){var e=this.$refs.xTree.getSelectRecords();this.$alert({message:e.length})},getUpdateEvent:function(){var e=this.$refs.xTree.getUpdateRecords();this.$alert({message:e.length})}}}}],styles:""}},"./demo/XtableDemo/tree/Edit.vue":
/*!***************************************!*\
  !*** ./demo/XtableDemo/tree/Edit.vue ***!
  \***************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/tree/Edit",name:"XtableDemo.tree.Edit",head:{label:"XtableDemo.tree.Edit.label",description:"XtableDemo.tree.Edit.description"},samples:[{id:"XtableDemo.tree.Edit.sample1",label:"XtableDemo.tree.Edit.sample1.label",description:"XtableDemo.tree.Edit.sample1.description",code:'<vue-toolbar>\n  <template v-slot:buttons>\n    <vue-button @click="$refs.xTree.toggleTreeExpansion(tableData[0], true)">切换第一个</vue-button>\n    <vue-button @click="$refs.xTree.setTreeExpansion(tableData[2], true)">展开第三个</vue-button>\n    <vue-button @click="$refs.xTree.setAllTreeExpansion(true)">展开所有</vue-button>\n    <vue-button @click="$refs.xTree.clearTreeExpand()">关闭所有</vue-button>\n  </template>\n</vue-toolbar>\n\n<vue-xtable\n  resizable\n  ref="xTree"\n  :tree-config="{children: \'children\'}"\n  :edit-config="{trigger: \'click\', mode: \'row\'}"\n  :checkbox-config="{labelField: \'id\'}"\n  :data="tableData">\n  <vue-xtable-column type="checkbox" title="ID" tree-node></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="size" title="Size" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="type" title="Type" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="date" title="Date" :edit-render="{name: \'input\'}"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\n  },\n\n})\n<\/script>',template:'<div class="source">    <vue-toolbar>\n      <template v-slot:buttons>\n        <vue-button @click="$refs.xTree.toggleTreeExpansion(tableData[0], true)">切换第一个</vue-button>\n        <vue-button @click="$refs.xTree.setTreeExpansion(tableData[2], true)">展开第三个</vue-button>\n        <vue-button @click="$refs.xTree.setAllTreeExpansion(true)">展开所有</vue-button>\n        <vue-button @click="$refs.xTree.clearTreeExpand()">关闭所有</vue-button>\n      </template>\n    </vue-toolbar>\n\n    <vue-xtable\n      resizable\n      ref="xTree"\n      :tree-config="{children: \'children\'}"\n      :edit-config="{trigger: \'click\', mode: \'row\'}"\n      :checkbox-config="{labelField: \'id\'}"\n      :data="tableData">\n      <vue-xtable-column type="checkbox" title="ID" tree-node></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="size" title="Size" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="type" title="Type" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="date" title="Date" :edit-render="{name: \'input\'}"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=VueUtil.clone(window.MOCK_TREE_DATA_LIST,!0)}}}],styles:""}},"./demo/XtableDemo/tree/Expand.vue":
/*!*****************************************!*\
  !*** ./demo/XtableDemo/tree/Expand.vue ***!
  \*****************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/tree/Expand",name:"XtableDemo.tree.Expand",head:{label:"XtableDemo.tree.Expand.label",description:"XtableDemo.tree.Expand.description"},samples:[{id:"XtableDemo.tree.Expand.sample1",label:"XtableDemo.tree.Expand.sample1.label",description:"XtableDemo.tree.Expand.sample1.description",code:'<vue-xtable\n  border\n  resizable\n  :tree-config="{children: \'children\'}"\n  :data="tableData">\n  <vue-xtable-column field="name" title="Name" tree-node></vue-xtable-column>\n  <vue-xtable-column type="expand" title="Details" width="80">\n    <template v-slot="scope">\n      <ul>\n        <li>\n          <span>ID：</span>\n          <span>{{ scope.row.id }}</span>\n        </li>\n        <li>\n          <span>Name：</span>\n          <span>{{ scope.row.name }}</span>\n        </li>\n        <li>\n          <span>Date</span>\n          <span>{{ scope.row.date }}</span>\n        </li>\n      </ul>\n    </template>\n  </vue-xtable-column>\n  <vue-xtable-column field="size" title="Size"></vue-xtable-column>\n  <vue-xtable-column field="type" title="Type"></vue-xtable-column>\n  <vue-xtable-column field="date" title="Date"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\n  },\n\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      border\n      resizable\n      :tree-config="{children: \'children\'}"\n      :data="tableData">\n      <vue-xtable-column field="name" title="Name" tree-node></vue-xtable-column>\n      <vue-xtable-column type="expand" title="Details" width="80">\n        <template v-slot="scope">\n          <ul>\n            <li>\n              <span>ID：</span>\n              <span>{{ scope.row.id }}</span>\n            </li>\n            <li>\n              <span>Name：</span>\n              <span>{{ scope.row.name }}</span>\n            </li>\n            <li>\n              <span>Date</span>\n              <span>{{ scope.row.date }}</span>\n            </li>\n          </ul>\n        </template>\n      </vue-xtable-column>\n      <vue-xtable-column field="size" title="Size"></vue-xtable-column>\n      <vue-xtable-column field="type" title="Type"></vue-xtable-column>\n      <vue-xtable-column field="date" title="Date"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=VueUtil.clone(window.MOCK_TREE_DATA_LIST,!0)}}}],styles:""}},"./demo/XtableDemo/tree/Fixed.vue":
/*!****************************************!*\
  !*** ./demo/XtableDemo/tree/Fixed.vue ***!
  \****************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/tree/Fixed",name:"XtableDemo.tree.Fixed",head:{label:"XtableDemo.tree.Fixed.label",description:"XtableDemo.tree.Fixed.description"},samples:[{id:"XtableDemo.tree.Fixed.sample1",label:"XtableDemo.tree.Fixed.sample1.label",description:"XtableDemo.tree.Fixed.sample1.description",code:'<vue-toolbar>\n  <template v-slot:buttons>\n    <vue-button @click="$refs.xTree.toggleTreeExpansion(tableData[0], true)">切换第一个</vue-button>\n    <vue-button @click="$refs.xTree.setTreeExpansion(tableData[2], true)">展开第三个</vue-button>\n    <vue-button @click="$refs.xTree.setAllTreeExpansion(true)">展开所有</vue-button>\n    <vue-button @click="$refs.xTree.clearTreeExpand()">关闭所有</vue-button>\n  </template>\n</vue-toolbar>\n\n<vue-xtable\n  resizable\n  ref="xTree"\n  :tree-config="{children: \'children\'}"\n  :checkbox-config="{labelField: \'id\'}"\n  :data="tableData">\n  <vue-xtable-column type="checkbox" title="ID" fixed="left" width="200" tree-node></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" width="300"></vue-xtable-column>\n  <vue-xtable-column field="size" title="Size" width="300"></vue-xtable-column>\n  <vue-xtable-column field="type" title="Type" width="300"></vue-xtable-column>\n  <vue-xtable-column field="date" title="Date" width="300"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\n  },\n\n})\n<\/script>',template:'<div class="source">    <vue-toolbar>\n      <template v-slot:buttons>\n        <vue-button @click="$refs.xTree.toggleTreeExpansion(tableData[0], true)">切换第一个</vue-button>\n        <vue-button @click="$refs.xTree.setTreeExpansion(tableData[2], true)">展开第三个</vue-button>\n        <vue-button @click="$refs.xTree.setAllTreeExpansion(true)">展开所有</vue-button>\n        <vue-button @click="$refs.xTree.clearTreeExpand()">关闭所有</vue-button>\n      </template>\n    </vue-toolbar>\n\n    <vue-xtable\n      resizable\n      ref="xTree"\n      :tree-config="{children: \'children\'}"\n      :checkbox-config="{labelField: \'id\'}"\n      :data="tableData">\n      <vue-xtable-column type="checkbox" title="ID" fixed="left" width="200" tree-node></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" width="300"></vue-xtable-column>\n      <vue-xtable-column field="size" title="Size" width="300"></vue-xtable-column>\n      <vue-xtable-column field="type" title="Type" width="300"></vue-xtable-column>\n      <vue-xtable-column field="date" title="Date" width="300"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=VueUtil.clone(window.MOCK_TREE_DATA_LIST,!0)}}}],styles:""}},"./demo/XtableDemo/tree/FullEdit.vue":
/*!*******************************************!*\
  !*** ./demo/XtableDemo/tree/FullEdit.vue ***!
  \*******************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/tree/FullEdit",name:"XtableDemo.tree.FullEdit",head:{label:"XtableDemo.tree.FullEdit.label",description:"XtableDemo.tree.FullEdit.description"},samples:[{id:"XtableDemo.tree.FullEdit.sample1",label:"XtableDemo.tree.FullEdit.sample1.label",description:"XtableDemo.tree.FullEdit.sample1.description",code:'<vue-xtable\n  resizable\n  :tree-config="{children: \'children\'}"\n  :edit-config="{trigger: \'click\', mode: \'row\'}"\n  :data="tableData">\n  <vue-xtable-column type="checkbox" width="120" tree-node></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="size" title="Size" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="type" title="Type" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="date" title="Date" :edit-render="{name: \'input\'}"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n\n    }\n  },\n  created () {\n    this.tableData = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\n  },\n\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      resizable\n      :tree-config="{children: \'children\'}"\n      :edit-config="{trigger: \'click\', mode: \'row\'}"\n      :data="tableData">\n      <vue-xtable-column type="checkbox" width="120" tree-node></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="size" title="Size" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="type" title="Type" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="date" title="Date" :edit-render="{name: \'input\'}"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=VueUtil.clone(window.MOCK_TREE_DATA_LIST,!0)}}}],styles:""}},"./demo/XtableDemo/tree/GroupBy.vue":
/*!******************************************!*\
  !*** ./demo/XtableDemo/tree/GroupBy.vue ***!
  \******************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/tree/GroupBy",name:"XtableDemo.tree.GroupBy",head:{label:"XtableDemo.tree.GroupBy.label",description:"XtableDemo.tree.GroupBy.description"},samples:[{id:"XtableDemo.tree.GroupBy.sample1",label:"XtableDemo.tree.GroupBy.sample1.label",description:"XtableDemo.tree.GroupBy.sample1.description",code:"<vue-xtable\n  border\n  resizable\n  :loading=\"loading\"\n  :tree-config=\"tableTreeConfig\"\n  :span-method=\"colspanMethod\"\n  :data=\"tableData\">\n  <vue-xtable-column field=\"name\" title=\"Name\" tree-node></vue-xtable-column>\n  <vue-xtable-column field=\"num\" title=\"Num\"></vue-xtable-column>\n  <vue-xtable-column field=\"level\" title=\"Level\"></vue-xtable-column>\n  <vue-xtable-column field=\"age\" title=\"Age\"></vue-xtable-column>\n  <vue-xtable-column field=\"rate\" title=\"Rate\"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      loading: false,\n      tableData: [],\n      tableTreeConfig: {\n        children: 'children',\n        trigger: 'row', // 设置为点击行展开或收缩\n        expandAll: false // 默认是否全部展开\n      },\n\n    }\n  },\n  created () {\n    this.loading = true\n    setTimeout(() => {\n      let list = [\n        { gKey: 'Group 1', name: 'test7', num: 23, level: 9, age: 24, rate: 4 },\n        { gKey: 'Group 1', name: 'test6', num: 63, level: 14, age: 20, rate: 3 },\n        { gKey: 'Group 1', name: 'test51', num: 84.8, level: 21, age: 19, rate: 5 },\n        { gKey: 'Group 1', name: 'test32', num: 63, level: 11, age: 21, rate: 1 },\n        { gKey: 'Group 2', name: 'test15', num: 5.9, level: 13, age: 32, rate: 1 },\n        { gKey: 'Group 2', name: 'test44', num: 23, level: 9, age: 29, rate: 4 },\n        { gKey: 'Group 2', name: 'test44', num: 41, level: 22, age: 28, rate: 5 },\n        { gKey: 'Group 2', name: 'test84', num: 63.9, level: 18, age: 24, rate: 2 },\n        { gKey: 'Group 2', name: 'test91', num: 12, level: 16, age: 27, rate: 5 },\n        { gKey: 'Group 3', name: 'test6', num: 33.6, level: 3, age: 22, rate: 2 },\n        { gKey: 'Group 3', name: 'test2', num: 23, level: 5, age: 25, rate: 3 },\n        { gKey: 'Group 3', name: 'test42', num: 66.8, level: 17, age: 35, rate: 4 }\n      ]\n      // 将列表进行分组\n      let groupMap = VueUtil.groupBy(list, 'gKey')\n      let groupList = []\n      // 分组合计计算逻辑\n      VueUtil.each(groupMap, (list, gKey) => {\n        let children = list || []\n        if (children) {\n          let total = {\n            name: '',\n            num: `总和:${VueUtil.sum(children.map( children => children.num))}`,\n            level: `总和:${VueUtil.sum(children.map( children => children.level))}`,\n            age: `平均:${parseInt(VueUtil.mean(children.map( children => children.age)))}`,\n            rate: `总和:${VueUtil.sum(children.map( children => children.rate))}`\n          }\n          children.push(total)\n        }\n        groupList.push({ name: gKey, children })\n      })\n      this.tableData = groupList\n      this.loading = false\n    }, 300)\n  },\n\n  methods: {\n    colspanMethod ({ row, rowIndex, column, columnIndex, data, level }) {\n      // 合并第一级数据的所有列，看起来美观一些\n      if (level === 0) {\n        if (columnIndex === 0) {\n          return {\n            rowspan: 1,\n            colspan: 5\n          }\n        } else if (columnIndex < 5) {\n          return {\n            rowspan: 0,\n            colspan: 0\n          }\n        }\n      }\n    }\n  }\n})\n<\/script>",template:'<div class="source">    <vue-xtable\n      border\n      resizable\n      :loading="loading"\n      :tree-config="tableTreeConfig"\n      :span-method="colspanMethod"\n      :data="tableData">\n      <vue-xtable-column field="name" title="Name" tree-node></vue-xtable-column>\n      <vue-xtable-column field="num" title="Num"></vue-xtable-column>\n      <vue-xtable-column field="level" title="Level"></vue-xtable-column>\n      <vue-xtable-column field="age" title="Age"></vue-xtable-column>\n      <vue-xtable-column field="rate" title="Rate"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{loading:!1,tableData:[],tableTreeConfig:{children:"children",trigger:"row",expandAll:!1}}},created:function(){var e=this;this.loading=!0,setTimeout(function(){var n=VueUtil.groupBy([{gKey:"Group 1",name:"test7",num:23,level:9,age:24,rate:4},{gKey:"Group 1",name:"test6",num:63,level:14,age:20,rate:3},{gKey:"Group 1",name:"test51",num:84.8,level:21,age:19,rate:5},{gKey:"Group 1",name:"test32",num:63,level:11,age:21,rate:1},{gKey:"Group 2",name:"test15",num:5.9,level:13,age:32,rate:1},{gKey:"Group 2",name:"test44",num:23,level:9,age:29,rate:4},{gKey:"Group 2",name:"test44",num:41,level:22,age:28,rate:5},{gKey:"Group 2",name:"test84",num:63.9,level:18,age:24,rate:2},{gKey:"Group 2",name:"test91",num:12,level:16,age:27,rate:5},{gKey:"Group 3",name:"test6",num:33.6,level:3,age:22,rate:2},{gKey:"Group 3",name:"test2",num:23,level:5,age:25,rate:3},{gKey:"Group 3",name:"test42",num:66.8,level:17,age:35,rate:4}],"gKey"),t=[];VueUtil.each(n,function(e,n){var l=e||[];if(l){var o={name:"",num:"总和:".concat(VueUtil.sum(l.map(function(e){return e.num}))),level:"总和:".concat(VueUtil.sum(l.map(function(e){return e.level}))),age:"平均:".concat(parseInt(VueUtil.mean(l.map(function(e){return e.age})))),rate:"总和:".concat(VueUtil.sum(l.map(function(e){return e.rate})))};l.push(o)}t.push({name:n,children:l})}),e.tableData=t,e.loading=!1},300)},methods:{colspanMethod:function(e){e.row,e.rowIndex,e.column;var n=e.columnIndex;e.data;if(0===e.level){if(0===n)return{rowspan:1,colspan:5};if(n<5)return{rowspan:0,colspan:0}}}}}}],styles:""}},"./demo/XtableDemo/tree/Highlight.vue":
/*!********************************************!*\
  !*** ./demo/XtableDemo/tree/Highlight.vue ***!
  \********************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/tree/Highlight",name:"XtableDemo.tree.Highlight",head:{label:"XtableDemo.tree.Highlight.label",description:"XtableDemo.tree.Highlight.description"},samples:[{id:"XtableDemo.tree.Highlight.sample1",label:"XtableDemo.tree.Highlight.sample1.label",description:"XtableDemo.tree.Highlight.sample1.description",code:'<vue-note>\n  \n  | Arrow Up ↑ | 移动到高亮行的上一行 | <br>\n  | Arrow Down ↓ | 移动到高亮行的下一行 |<br>\n  | Enter | 展开节点，进入子节点 |<br>\n  | Backspace | 关闭节点，返回到父节点 |\n\n</vue-note>\n<vue-xtable\n  highlight-current-row\n  :data="tableData"\n  :tree-config="{children: \'children\'}"\n  :keyboard-config="{isArrow: true}">\n  <vue-xtable-column field="name" title="Name" tree-node></vue-xtable-column>\n  <vue-xtable-column field="size" title="Size"></vue-xtable-column>\n  <vue-xtable-column field="type" title="Type"></vue-xtable-column>\n  <vue-xtable-column field="date" title="Date"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n      selectRow: null,\n\n    }\n  },\n  created () {\n    this.tableData = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\n  },\n\n})\n<\/script>',template:'<div class="source">    <vue-note>\n      \n      | Arrow Up ↑ | 移动到高亮行的上一行 | <br>\n      | Arrow Down ↓ | 移动到高亮行的下一行 |<br>\n      | Enter | 展开节点，进入子节点 |<br>\n      | Backspace | 关闭节点，返回到父节点 |\n    \n    </vue-note>\n    <vue-xtable\n      highlight-current-row\n      :data="tableData"\n      :tree-config="{children: \'children\'}"\n      :keyboard-config="{isArrow: true}">\n      <vue-xtable-column field="name" title="Name" tree-node></vue-xtable-column>\n      <vue-xtable-column field="size" title="Size"></vue-xtable-column>\n      <vue-xtable-column field="type" title="Type"></vue-xtable-column>\n      <vue-xtable-column field="date" title="Date"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[],selectRow:null}},created:function(){this.tableData=VueUtil.clone(window.MOCK_TREE_DATA_LIST,!0)}}}],styles:""}},"./demo/XtableDemo/tree/Insert.vue":
/*!*****************************************!*\
  !*** ./demo/XtableDemo/tree/Insert.vue ***!
  \*****************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/tree/Insert",name:"XtableDemo.tree.Insert",head:{label:"XtableDemo.tree.Insert.label",description:"XtableDemo.tree.Insert.description"},samples:[{id:"XtableDemo.tree.Insert.sample1",label:"XtableDemo.tree.Insert.sample1.label",description:"XtableDemo.tree.Insert.sample1.description",code:'<vue-toolbar :data="tableData" setting>\n  <template v-slot:buttons>\n    <vue-button @click="insertEvent()">插入第一行</vue-button>\n    <vue-button @click="insertAtEvent()">插入指定行</vue-button>\n    <vue-button @click="getInsertEvent">获取新增</vue-button>\n  </template>\n</vue-toolbar>\n\n<vue-xtable\n  resizable\n  ref="xTree"\n  :tree-config="treeConfig"\n  :edit-config="{trigger: \'click\', mode: \'row\', showStatus: true}"\n  :data="tableData">\n  <vue-xtable-column type="checkbox" width="120" tree-node></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="size" title="Size" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="type" title="Type" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="date" title="Date" :edit-render="{name: \'input\'}"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n      treeConfig: {\n        children: \'children\'\n      },\n\n    }\n  },\n  created () {\n    this.tableData = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\n  },\n\n  methods: {\n    insertEvent () {\n      let xTree = this.$refs.xTree\n      xTree.createRow({\n        name: \'新数据\',\n        date: VueUtil.formatDate(new Date(), \'yyyy-MM-dd\'),\n        isNew: true\n      }).then(newRow => {\n        // 插入到第一行\n        this.tableData.unshift(newRow)\n        xTree.refreshData().then(() => xTree.setActiveRow(newRow))\n      })\n    },\n    insertAtEvent () {\n      let xTree = this.$refs.xTree\n      xTree.createRow({\n        name: \'新数据\',\n        date: VueUtil.formatDate(new Date(), \'yyyy-MM-dd\'),\n        isNew: true\n      }).then(newRow => {\n        // 插入到 id 为 11000 的节点位置中\n        let rowNode = VueUtil.findTree(this.tableData, item => item.id === \'11000\', this.treeConfig)\n        if (rowNode) {\n          rowNode.items.splice(rowNode.index, 0, newRow)\n          xTree.refreshData().then(() => xTree.setActiveRow(newRow))\n        }\n      })\n    },\n    getInsertEvent () {\n      let insertRecords = VueUtil.filterTree(this.tableData, item => item.isNew, this.treeConfig)\n      this.$alert({ message: insertRecords.length })\n    }\n  }\n})\n<\/script>',template:'<div class="source">    <vue-toolbar :data="tableData" setting>\n      <template v-slot:buttons>\n        <vue-button @click="insertEvent()">插入第一行</vue-button>\n        <vue-button @click="insertAtEvent()">插入指定行</vue-button>\n        <vue-button @click="getInsertEvent">获取新增</vue-button>\n      </template>\n    </vue-toolbar>\n\n    <vue-xtable\n      resizable\n      ref="xTree"\n      :tree-config="treeConfig"\n      :edit-config="{trigger: \'click\', mode: \'row\', showStatus: true}"\n      :data="tableData">\n      <vue-xtable-column type="checkbox" width="120" tree-node></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="size" title="Size" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="type" title="Type" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="date" title="Date" :edit-render="{name: \'input\'}"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[],treeConfig:{children:"children"}}},created:function(){this.tableData=VueUtil.clone(window.MOCK_TREE_DATA_LIST,!0)},methods:{insertEvent:function(){var e=this,n=this.$refs.xTree;n.createRow({name:"新数据",date:VueUtil.formatDate(new Date,"yyyy-MM-dd"),isNew:!0}).then(function(t){e.tableData.unshift(t),n.refreshData().then(function(){return n.setActiveRow(t)})})},insertAtEvent:function(){var e=this,n=this.$refs.xTree;n.createRow({name:"新数据",date:VueUtil.formatDate(new Date,"yyyy-MM-dd"),isNew:!0}).then(function(t){var l=VueUtil.findTree(e.tableData,function(e){return"11000"===e.id},e.treeConfig);l&&(l.items.splice(l.index,0,t),n.refreshData().then(function(){return n.setActiveRow(t)}))})},getInsertEvent:function(){var e=VueUtil.filterTree(this.tableData,function(e){return e.isNew},this.treeConfig);this.$alert({message:e.length})}}}}],styles:""}},"./demo/XtableDemo/tree/Menu.vue":
/*!***************************************!*\
  !*** ./demo/XtableDemo/tree/Menu.vue ***!
  \***************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/tree/Menu",name:"XtableDemo.tree.Menu",head:{label:"XtableDemo.tree.Menu.label",description:"XtableDemo.tree.Menu.description"},samples:[{id:"XtableDemo.tree.Menu.sample1",label:"XtableDemo.tree.Menu.sample1.label",description:"XtableDemo.tree.Menu.sample1.description",code:"<vue-toolbar :data=\"tableData\" setting>\n  <template v-slot:buttons>\n    <vue-button @click=\"getInsertEvent\">获取新增</vue-button>\n  </template>\n</vue-toolbar>\n\n<vue-xtable\n  resizable\n  ref=\"xTree\"\n  :tree-config=\"treeConfig\"\n  :context-menu=\"{header: {options: headerMenus}, body: {options: bodyMenus}, visibleMethod:visibleMethod}\"\n  :edit-config=\"{trigger: 'click', mode: 'row', showStatus: true}\"\n  :data=\"tableData\"\n  @context-menu-click=\"contextMenuClickEvent\">\n  <vue-xtable-column type=\"checkbox\" width=\"120\" tree-node></vue-xtable-column>\n  <vue-xtable-column field=\"name\" title=\"Name\" :edit-render=\"{name: 'input'}\"></vue-xtable-column>\n  <vue-xtable-column field=\"size\" title=\"Size\" :edit-render=\"{name: 'input'}\"></vue-xtable-column>\n  <vue-xtable-column field=\"type\" title=\"Type\" :edit-render=\"{name: 'input'}\"></vue-xtable-column>\n  <vue-xtable-column field=\"date\" title=\"Date\" :edit-render=\"{name: 'input'}\"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n      treeConfig: {\n        children: 'children'\n      },\n      headerMenus: [\n        [\n          {\n            code: 'hideColumn',\n            name: '隐藏列',\n            disabled: false\n          },\n          {\n            code: 'showAllColumn',\n            name: '取消所有隐藏列',\n            disabled: false\n          }\n        ]\n      ],\n      bodyMenus: [\n        [\n          {\n            code: 'insertAt',\n            name: '插入一行',\n            disabled: false\n          },\n          {\n            code: 'expand',\n            name: '展开节点',\n            disabled: false\n          },\n          {\n            code: 'contract',\n            name: '收缩节点',\n            disabled: false\n          }\n        ]\n      ],\n\n    }\n  },\n  created () {\n    this.tableData = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\n  },\n\n  methods: {\n    insertAtEvent (row, column) {\n      let xTree = this.$refs.xTree\n      xTree.createRow({\n        name: '新数据',\n        date: VueUtil.formatDate(new Date(), 'yyyy-MM-dd'),\n        isNew: true\n      }).then(newRow => {\n        // 插入到指定节点位置中\n        let rowNode = VueUtil.findTree(this.tableData, item => item === row, this.treeConfig)\n        if (rowNode) {\n          rowNode.items.splice(rowNode.index, 0, newRow)\n          xTree.refreshData().then(() => xTree.setActiveCell(newRow, column.property))\n        }\n      })\n    },\n    getInsertEvent () {\n      let insertRecords = VueUtil.filterTree(this.tableData, item => item.isNew, this.treeConfig)\n      this.$alert({ message: insertRecords.length })\n    },\n    visibleMethod  ({ row, type }) {\n      let xTree = this.$refs.xTree\n      let treeConfig = this.treeConfig\n      if (type === 'body') {\n        this.bodyMenus.forEach(list => {\n          list.forEach(item => {\n            if (VueUtil.includes(['expand', 'contract'], item.code)) {\n              if (row[treeConfig.children] && row[treeConfig.children].length) {\n                let isExpand = xTree.isTreeExpandByRow(row)\n                item.disabled = VueUtil.includes(['expand'], item.code) ? isExpand : !isExpand\n              } else {\n                item.disabled = true\n              }\n            }\n          })\n        })\n      }\n      return true\n    },\n    contextMenuClickEvent ({ menu, row, column }) {\n      let xTree = this.$refs.xTree\n      switch (menu.code) {\n        case 'hideColumn':\n          xTree.hideColumn(column)\n          break\n        case 'showAllColumn':\n          xTree.resetCustoms()\n          break\n        case 'insertAt':\n          this.insertAtEvent(row, column)\n          break\n        case 'expand':\n          xTree.setTreeExpansion(row, true)\n          break\n        case 'contract':\n          xTree.setTreeExpansion(row, false)\n          break\n      }\n    }\n  }\n})\n<\/script>",template:'<div class="source">    <vue-toolbar :data="tableData" setting>\n      <template v-slot:buttons>\n        <vue-button @click="getInsertEvent">获取新增</vue-button>\n      </template>\n    </vue-toolbar>\n\n    <vue-xtable\n      resizable\n      ref="xTree"\n      :tree-config="treeConfig"\n      :context-menu="{header: {options: headerMenus}, body: {options: bodyMenus}, visibleMethod:visibleMethod}"\n      :edit-config="{trigger: \'click\', mode: \'row\', showStatus: true}"\n      :data="tableData"\n      @context-menu-click="contextMenuClickEvent">\n      <vue-xtable-column type="checkbox" width="120" tree-node></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="size" title="Size" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="type" title="Type" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="date" title="Date" :edit-render="{name: \'input\'}"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[],treeConfig:{children:"children"},headerMenus:[[{code:"hideColumn",name:"隐藏列",disabled:!1},{code:"showAllColumn",name:"取消所有隐藏列",disabled:!1}]],bodyMenus:[[{code:"insertAt",name:"插入一行",disabled:!1},{code:"expand",name:"展开节点",disabled:!1},{code:"contract",name:"收缩节点",disabled:!1}]]}},created:function(){this.tableData=VueUtil.clone(window.MOCK_TREE_DATA_LIST,!0)},methods:{insertAtEvent:function(e,n){var t=this,l=this.$refs.xTree;l.createRow({name:"新数据",date:VueUtil.formatDate(new Date,"yyyy-MM-dd"),isNew:!0}).then(function(o){var a=VueUtil.findTree(t.tableData,function(n){return n===e},t.treeConfig);a&&(a.items.splice(a.index,0,o),l.refreshData().then(function(){return l.setActiveCell(o,n.property)}))})},getInsertEvent:function(){var e=VueUtil.filterTree(this.tableData,function(e){return e.isNew},this.treeConfig);this.$alert({message:e.length})},visibleMethod:function(e){var n=e.row,t=e.type,l=this.$refs.xTree,o=this.treeConfig;return"body"===t&&this.bodyMenus.forEach(function(e){e.forEach(function(e){if(VueUtil.includes(["expand","contract"],e.code))if(n[o.children]&&n[o.children].length){var t=l.isTreeExpandByRow(n);e.disabled=VueUtil.includes(["expand"],e.code)?t:!t}else e.disabled=!0})}),!0},contextMenuClickEvent:function(e){var n=e.menu,t=e.row,l=e.column,o=this.$refs.xTree;switch(n.code){case"hideColumn":o.hideColumn(l);break;case"showAllColumn":o.resetCustoms();break;case"insertAt":this.insertAtEvent(t,l);break;case"expand":o.setTreeExpansion(t,!0);break;case"contract":o.setTreeExpansion(t,!1)}}}}}],styles:""}},"./demo/XtableDemo/tree/Radio.vue":
/*!****************************************!*\
  !*** ./demo/XtableDemo/tree/Radio.vue ***!
  \****************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/tree/Radio",name:"XtableDemo.tree.Radio",head:{label:"XtableDemo.tree.Radio.label",description:"XtableDemo.tree.Radio.description"},samples:[{id:"XtableDemo.tree.Radio.sample1",label:"XtableDemo.tree.Radio.sample1.label",description:"XtableDemo.tree.Radio.sample1.description",code:'<vue-xtable\n  highlight-current-row\n  :tree-config="{children: \'children\'}"\n  :data="tableData">\n  <vue-xtable-column field="name" title="Name" tree-node></vue-xtable-column>\n  <vue-xtable-column field="size" title="Size"></vue-xtable-column>\n  <vue-xtable-column field="type" title="Type"></vue-xtable-column>\n  <vue-xtable-column field="date" title="Date"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n    }\n  },\n  created () {\n    this.tableData = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\n  },\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      highlight-current-row\n      :tree-config="{children: \'children\'}"\n      :data="tableData">\n      <vue-xtable-column field="name" title="Name" tree-node></vue-xtable-column>\n      <vue-xtable-column field="size" title="Size"></vue-xtable-column>\n      <vue-xtable-column field="type" title="Type"></vue-xtable-column>\n      <vue-xtable-column field="date" title="Date"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=VueUtil.clone(window.MOCK_TREE_DATA_LIST,!0)}}},{id:"XtableDemo.tree.Radio.sample2",label:"XtableDemo.tree.Radio.sample2.label",description:"XtableDemo.tree.Radio.sample2.description",code:'<vue-xtable\n  :tree-config="{children: \'children\'}"\n  :radio-config="{labelField: \'name\'}"\n  :data="tableData">\n  <vue-xtable-column type="radio" title="Sex" tree-node></vue-xtable-column>\n  <vue-xtable-column field="size" title="Size"></vue-xtable-column>\n  <vue-xtable-column field="type" title="Type"></vue-xtable-column>\n  <vue-xtable-column field="date" title="Date"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n    }\n  },\n  created () {\n    this.tableData = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\n  },\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      :tree-config="{children: \'children\'}"\n      :radio-config="{labelField: \'name\'}"\n      :data="tableData">\n      <vue-xtable-column type="radio" title="Sex" tree-node></vue-xtable-column>\n      <vue-xtable-column field="size" title="Size"></vue-xtable-column>\n      <vue-xtable-column field="type" title="Type"></vue-xtable-column>\n      <vue-xtable-column field="date" title="Date"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=VueUtil.clone(window.MOCK_TREE_DATA_LIST,!0)}}},{id:"XtableDemo.tree.Radio.sample3",label:"XtableDemo.tree.Radio.sample3.label",description:"XtableDemo.tree.Radio.sample3.description",code:'<vue-xtable\n  resizable\n  highlight-current-row\n  ref="xTable3"\n  :tree-config="{children: \'children\'}"\n  :radio-config="{trigger: \'row\'}"\n  :data="tableData"\n  @current-change="currentChangeEvent">\n  <vue-xtable-column type="radio" width="120" tree-node>\n    <template v-slot:header>\n      <vue-button type="text" @click="clearCurrentRowEvent" :disabled="!selectRow">取消</vue-button>\n    </template>\n  </vue-xtable-column>\n  <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n  <vue-xtable-column field="size" title="Size"></vue-xtable-column>\n  <vue-xtable-column field="type" title="Type"></vue-xtable-column>\n  <vue-xtable-column field="date" title="Date"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n      selectRow: null,\n    }\n  },\n  created () {\n    this.tableData = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\n  },\n  methods: {\n    currentChangeEvent ({ row }) {\n      this.selectRow = row\n    },\n    clearCurrentRowEvent () {\n      this.selectRow = null\n      this.$refs.xTable3.clearRadioRow()\n      this.$refs.xTable3.clearCurrentRow()\n    }\n  }\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      resizable\n      highlight-current-row\n      ref="xTable3"\n      :tree-config="{children: \'children\'}"\n      :radio-config="{trigger: \'row\'}"\n      :data="tableData"\n      @current-change="currentChangeEvent">\n      <vue-xtable-column type="radio" width="120" tree-node>\n        <template v-slot:header>\n          <vue-button type="text" @click="clearCurrentRowEvent" :disabled="!selectRow">取消</vue-button>\n        </template>\n      </vue-xtable-column>\n      <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n      <vue-xtable-column field="size" title="Size"></vue-xtable-column>\n      <vue-xtable-column field="type" title="Type"></vue-xtable-column>\n      <vue-xtable-column field="date" title="Date"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[],selectRow:null}},created:function(){this.tableData=VueUtil.clone(window.MOCK_TREE_DATA_LIST,!0)},methods:{currentChangeEvent:function(e){var n=e.row;this.selectRow=n},clearCurrentRowEvent:function(){this.selectRow=null,this.$refs.xTable3.clearRadioRow(),this.$refs.xTable3.clearCurrentRow()}}}}],styles:""}},"./demo/XtableDemo/tree/RowValid.vue":
/*!*******************************************!*\
  !*** ./demo/XtableDemo/tree/RowValid.vue ***!
  \*******************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/tree/RowValid",name:"XtableDemo.tree.RowValid",head:{label:"XtableDemo.tree.RowValid.label",description:"XtableDemo.tree.RowValid.description"},samples:[{id:"XtableDemo.tree.RowValid.sample1",label:"XtableDemo.tree.RowValid.sample1.label",description:"XtableDemo.tree.RowValid.sample1.description",code:'<vue-toolbar>\n  <template v-slot:buttons>\n    <vue-button @click="validEvent">校验</vue-button>\n    <vue-button @click="fullValidEvent">完整校验</vue-button>\n    <vue-button @click="selectValidEvent">选中校验</vue-button>\n    <vue-button @click="getSelectEvent">获取选中</vue-button>\n    <vue-button @click="getUpdateEvent">获取修改</vue-button>\n  </template>\n</vue-toolbar>\n\n<vue-xtable\n  resizable\n  ref="xTree"\n  :edit-rules="validRules"\n  :tree-config="treeConfig"\n  :edit-config="{trigger: \'click\', mode: \'row\', showStatus: true}"\n  :checkbox-config="{labelField: \'id\'}"\n  :data="tableData">\n  <vue-xtable-column type="checkbox" title="ID" tree-node></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="size" title="Size" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="type" title="Type" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="date" title="Date" :edit-render="{name: \'input\'}"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n      treeConfig: {\n        children: \'children\'\n      },\n      validRules: {\n        name: [\n          { required: true, message: \'名称必须填写\' },\n          { min: 3, max: 50, message: \'文件名长度在 3 到 50 个字符\' }\n        ]\n      },\n\n    }\n  },\n  created () {\n    this.tableData = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\n  },\n\n  methods: {\n    validEvent () {\n      this.$refs.xTree.validate(valid => {\n        if (valid) {\n          this.$notify.success({ message:\'校验成功！\'});\n        } else {\n          this.$notify.error({ message:\'校验不通过！\'});\n        }\n      })\n    },\n    fullValidEvent () {\n      this.$refs.xTree.fullValidate((valid, errMap) => {\n        if (valid) {\n          this.$notify.success({ message:\'校验成功！\'});\n        } else {\n          let msgList = []\n          Object.values(errMap).forEach(errList => {\n            errList.forEach(params => {\n              let { row, column, rules } = params\n              let matchObj = VueUtil.findTree(this.tableData, item => item === row, this.treeConfig)\n              let seq = matchObj.path.filter(item => item !== this.treeConfig.children).map(item => Number(item) + 1).join(\'.\')\n              rules.forEach(rule => {\n                msgList.push(`第 ${seq} 行 ${column.title} 校验错误：${rule.message}`)\n              })\n            })\n          })\n\n          var h = this.$createElement;\n          this.$alert({\n            type: "error",\n            message: h(\'div\',[msgList.map(function (msg) {\n              return h("div", [msg]);\n            })])\n          });\n        }\n      })\n    },\n    selectValidEvent () {\n      let selectRecords = this.$refs.xTree.getSelectRecords()\n      if (selectRecords.length > 0) {\n        this.$refs.xTree.validate(selectRecords, valid => {\n          if (valid) {\n            this.$notify.success({ message:\'校验成功！\'});\n          } else {\n            this.$notify.error({ message:\'校验不通过！\'});\n          }\n        })\n      } else {\n        this.$notify.warning({ message:\'未选中数据！\'});\n      }\n    },\n    getSelectEvent () {\n      let selectRecords = this.$refs.xTree.getSelectRecords()\n      this.$alert({ message: selectRecords.length })\n    },\n    getUpdateEvent () {\n      let updateRecords = this.$refs.xTree.getUpdateRecords()\n      this.$alert({ message: updateRecords.length })\n    }\n  }\n})\n<\/script>',template:'<div class="source">    <vue-toolbar>\n      <template v-slot:buttons>\n        <vue-button @click="validEvent">校验</vue-button>\n        <vue-button @click="fullValidEvent">完整校验</vue-button>\n        <vue-button @click="selectValidEvent">选中校验</vue-button>\n        <vue-button @click="getSelectEvent">获取选中</vue-button>\n        <vue-button @click="getUpdateEvent">获取修改</vue-button>\n      </template>\n    </vue-toolbar>\n\n    <vue-xtable\n      resizable\n      ref="xTree"\n      :edit-rules="validRules"\n      :tree-config="treeConfig"\n      :edit-config="{trigger: \'click\', mode: \'row\', showStatus: true}"\n      :checkbox-config="{labelField: \'id\'}"\n      :data="tableData">\n      <vue-xtable-column type="checkbox" title="ID" tree-node></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="size" title="Size" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="type" title="Type" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="date" title="Date" :edit-render="{name: \'input\'}"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[],treeConfig:{children:"children"},validRules:{name:[{required:!0,message:"名称必须填写"},{min:3,max:50,message:"文件名长度在 3 到 50 个字符"}]}}},created:function(){this.tableData=VueUtil.clone(window.MOCK_TREE_DATA_LIST,!0)},methods:{validEvent:function(){var e=this;this.$refs.xTree.validate(function(n){n?e.$notify.success({message:"校验成功！"}):e.$notify.error({message:"校验不通过！"})})},fullValidEvent:function(){var e=this;this.$refs.xTree.fullValidate(function(n,t){if(n)e.$notify.success({message:"校验成功！"});else{var l=[];Object.values(t).forEach(function(n){n.forEach(function(n){var t=n.row,o=n.column,a=n.rules,i=VueUtil.findTree(e.tableData,function(e){return e===t},e.treeConfig).path.filter(function(n){return n!==e.treeConfig.children}).map(function(e){return Number(e)+1}).join(".");a.forEach(function(e){l.push("第 ".concat(i," 行 ").concat(o.title," 校验错误：").concat(e.message))})})});var o=e.$createElement;e.$alert({type:"error",message:o("div",[l.map(function(e){return o("div",[e])})])})}})},selectValidEvent:function(){var e=this,n=this.$refs.xTree.getSelectRecords();n.length>0?this.$refs.xTree.validate(n,function(n){n?e.$notify.success({message:"校验成功！"}):e.$notify.error({message:"校验不通过！"})}):this.$notify.warning({message:"未选中数据！"})},getSelectEvent:function(){var e=this.$refs.xTree.getSelectRecords();this.$alert({message:e.length})},getUpdateEvent:function(){var e=this.$refs.xTree.getUpdateRecords();this.$alert({message:e.length})}}}}],styles:""}},"./demo/XtableDemo/tree/Selection.vue":
/*!********************************************!*\
  !*** ./demo/XtableDemo/tree/Selection.vue ***!
  \********************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/tree/Selection",name:"XtableDemo.tree.Selection",head:{label:"XtableDemo.tree.Selection.label",description:"XtableDemo.tree.Selection.description"},samples:[{id:"XtableDemo.tree.Selection.sample1",label:"XtableDemo.tree.Selection.sample1.label",description:"XtableDemo.tree.Selection.sample1.description",code:'<vue-xtable\n  resizable\n  :tree-config="{children: \'children\'}"\n  :data="tableData"\n  @select-change="selectChangeEvent">\n  <vue-xtable-column type="checkbox" width="120" tree-node></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n  <vue-xtable-column field="size" title="Size"></vue-xtable-column>\n  <vue-xtable-column field="type" title="Type"></vue-xtable-column>\n  <vue-xtable-column field="date" title="Date"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n    }\n  },\n  created () {\n    this.tableData = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\n  },\n\n  methods: {\n    selectChangeEvent ({ selection }) {\n      console.info(`勾选${selection.length}个树形节点`, selection)\n    }\n  }\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      resizable\n      :tree-config="{children: \'children\'}"\n      :data="tableData"\n      @select-change="selectChangeEvent">\n      <vue-xtable-column type="checkbox" width="120" tree-node></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n      <vue-xtable-column field="size" title="Size"></vue-xtable-column>\n      <vue-xtable-column field="type" title="Type"></vue-xtable-column>\n      <vue-xtable-column field="date" title="Date"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=VueUtil.clone(window.MOCK_TREE_DATA_LIST,!0)},methods:{selectChangeEvent:function(e){var n=e.selection;console.info("勾选".concat(n.length,"个树形节点"),n)}}}},{id:"XtableDemo.tree.Selection.sample2",label:"XtableDemo.tree.Selection.sample2.label",description:"XtableDemo.tree.Selection.sample2.description",code:'<vue-xtable\n  resizable\n  row-id="id"\n  :data="tableData"\n  :tree-config="{children: \'children\'}"\n  :checkbox-config="{labelField: \'name\', checkRowKeys: [\'122000\', \'20000\']}"\n  @select-change="selectChangeEvent">\n  <vue-xtable-column type="checkbox" title="Sex" width="180" tree-node></vue-xtable-column>\n  <vue-xtable-column field="size" title="Size"></vue-xtable-column>\n  <vue-xtable-column field="type" title="Type"></vue-xtable-column>\n  <vue-xtable-column field="date" title="Date"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n    }\n  },\n  created () {\n    this.tableData = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\n  },\n\n  methods: {\n    selectChangeEvent ({ selection }) {\n      console.info(`勾选${selection.length}个树形节点`, selection)\n    }\n  }\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      resizable\n      row-id="id"\n      :data="tableData"\n      :tree-config="{children: \'children\'}"\n      :checkbox-config="{labelField: \'name\', checkRowKeys: [\'122000\', \'20000\']}"\n      @select-change="selectChangeEvent">\n      <vue-xtable-column type="checkbox" title="Sex" width="180" tree-node></vue-xtable-column>\n      <vue-xtable-column field="size" title="Size"></vue-xtable-column>\n      <vue-xtable-column field="type" title="Type"></vue-xtable-column>\n      <vue-xtable-column field="date" title="Date"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=VueUtil.clone(window.MOCK_TREE_DATA_LIST,!0)},methods:{selectChangeEvent:function(e){var n=e.selection;console.info("勾选".concat(n.length,"个树形节点"),n)}}}},{id:"XtableDemo.tree.Selection.sample3",label:"XtableDemo.tree.Selection.sample3.label",description:"XtableDemo.tree.Selection.sample3.description",code:'<vue-xtable\n  resizable\n  :data="tableData"\n  :tree-config="{children: \'children\'}"\n  :checkbox-config="{checkStrictly: true}">\n  <vue-xtable-column type="checkbox" width="120" tree-node></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n  <vue-xtable-column field="size" title="Size"></vue-xtable-column>\n  <vue-xtable-column field="type" title="Type"></vue-xtable-column>\n  <vue-xtable-column field="date" title="Date"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n    }\n  },\n  created () {\n    this.tableData = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\n  },\n\n  methods: {\n    selectChangeEvent ({ selection }) {\n      console.info(`勾选${selection.length}个树形节点`, selection)\n    }\n  }\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      resizable\n      :data="tableData"\n      :tree-config="{children: \'children\'}"\n      :checkbox-config="{checkStrictly: true}">\n      <vue-xtable-column type="checkbox" width="120" tree-node></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name"></vue-xtable-column>\n      <vue-xtable-column field="size" title="Size"></vue-xtable-column>\n      <vue-xtable-column field="type" title="Type"></vue-xtable-column>\n      <vue-xtable-column field="date" title="Date"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=VueUtil.clone(window.MOCK_TREE_DATA_LIST,!0)},methods:{selectChangeEvent:function(e){var n=e.selection;console.info("勾选".concat(n.length,"个树形节点"),n)}}}},{id:"XtableDemo.tree.Selection.sample4",label:"XtableDemo.tree.Selection.sample4.label",description:"XtableDemo.tree.Selection.sample4.description",code:'<vue-xtable\n  resizable\n  :data="tableData"\n  :tree-config="{children: \'children\'}"\n  :checkbox-config="{labelField: \'name\', checkMethod}"\n  @select-change="selectChangeEvent">\n  <vue-xtable-column type="checkbox" width="180" title="Sex" tree-node></vue-xtable-column>\n  <vue-xtable-column field="size" title="Size"></vue-xtable-column>\n  <vue-xtable-column field="type" title="Type"></vue-xtable-column>\n  <vue-xtable-column field="date" title="Date"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n    }\n  },\n  created () {\n    this.tableData = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\n  },\n\n  methods: {\n    checkMethod ({ row }) {\n      return !VueUtil.includes([\'js\', \'mp4\'], row.type)\n    },\n    selectChangeEvent ({ selection }) {\n      console.info(`勾选${selection.length}个树形节点`, selection)\n    }\n  }\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      resizable\n      :data="tableData"\n      :tree-config="{children: \'children\'}"\n      :checkbox-config="{labelField: \'name\', checkMethod}"\n      @select-change="selectChangeEvent">\n      <vue-xtable-column type="checkbox" width="180" title="Sex" tree-node></vue-xtable-column>\n      <vue-xtable-column field="size" title="Size"></vue-xtable-column>\n      <vue-xtable-column field="type" title="Type"></vue-xtable-column>\n      <vue-xtable-column field="date" title="Date"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=VueUtil.clone(window.MOCK_TREE_DATA_LIST,!0)},methods:{checkMethod:function(e){var n=e.row;return!VueUtil.includes(["js","mp4"],n.type)},selectChangeEvent:function(e){var n=e.selection;console.info("勾选".concat(n.length,"个树形节点"),n)}}}}],styles:""}},"./demo/XtableDemo/tree/Template.vue":
/*!*******************************************!*\
  !*** ./demo/XtableDemo/tree/Template.vue ***!
  \*******************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/tree/Template",name:"XtableDemo.tree.Template",head:{label:"XtableDemo.tree.Template.label",description:"XtableDemo.tree.Template.description"},samples:[{id:"XtableDemo.tree.Template.sample1",label:"XtableDemo.tree.Template.sample1.label",description:"XtableDemo.tree.Template.sample1.description",code:'<vue-xtable\n  border\n  resizable\n  :tree-config="{children: \'children\'}"\n  :data="tableData">\n  <vue-xtable-column field="name" title="姓名"></vue-xtable-column>\n  <vue-xtable-column field="size" title="Size"></vue-xtable-column>\n  <vue-xtable-column field="type" title="Type">\n    <template v-slot="scope">\n      <span>{{ \'类型：\' + (scope.row.type || \'无\') }}</span>\n    </template>\n  </vue-xtable-column>\n  <vue-xtable-column field="date" title="Date" tree-node>\n    <template v-slot="scope">\n      <span>{{ formatDate(scope.row.date, \'yyyy-MM-dd HH:mm:ss.S\') }}</span>\n    </template>\n  </vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n    }\n  },\n  created () {\n    this.tableData = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\n  },\n  methods: {\n    formatDate: VueUtil.formatDate,\n  }\n})\n<\/script>',template:'<div class="source">    <vue-xtable\n      border\n      resizable\n      :tree-config="{children: \'children\'}"\n      :data="tableData">\n      <vue-xtable-column field="name" title="姓名"></vue-xtable-column>\n      <vue-xtable-column field="size" title="Size"></vue-xtable-column>\n      <vue-xtable-column field="type" title="Type">\n        <template v-slot="scope">\n          <span>{{ \'类型：\' + (scope.row.type || \'无\') }}</span>\n        </template>\n      </vue-xtable-column>\n      <vue-xtable-column field="date" title="Date" tree-node>\n        <template v-slot="scope">\n          <span>{{ formatDate(scope.row.date, \'yyyy-MM-dd HH:mm:ss.S\') }}</span>\n        </template>\n      </vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[]}},created:function(){this.tableData=VueUtil.clone(window.MOCK_TREE_DATA_LIST,!0)},methods:{formatDate:VueUtil.formatDate}}}],styles:""}},"./demo/XtableDemo/tree/Toolbar.vue":
/*!******************************************!*\
  !*** ./demo/XtableDemo/tree/Toolbar.vue ***!
  \******************************************/
/*! exports provided: default */function(e,n,t){"use strict";t.r(n),n.default={path:"/XtableDemo/tree/Toolbar",name:"XtableDemo.tree.Toolbar",head:{label:"XtableDemo.tree.Toolbar.label",description:"XtableDemo.tree.Toolbar.description"},samples:[{id:"XtableDemo.tree.Toolbar.sample1",label:"XtableDemo.tree.Toolbar.sample1.label",description:"XtableDemo.tree.Toolbar.sample1.description",code:'<vue-toolbar :data="tableData" export setting>\n  <template v-slot:buttons>\n    <vue-button @click="insertEvent">{{ $t(\'插入行\') }}</vue-button>\n    <vue-button @click="removeEvent">移除选中</vue-button>\n    <vue-button @click="getInsertEvent">获取新增</vue-button>\n    <vue-button @click="getRemoveEvent">获取删除</vue-button>\n    <vue-button @click="getUpdateEvent">获取修改</vue-button>\n  </template>\n</vue-toolbar>\n\n<vue-xtable\n  resizable\n  ref="xTree"\n  :tree-config="treeConfig"\n  :edit-config="{trigger: \'click\', mode: \'row\', showStatus: true}"\n  :data="tableData">\n  <vue-xtable-column type="checkbox" width="120"></vue-xtable-column>\n  <vue-xtable-column field="name" title="Name" tree-node></vue-xtable-column>\n  <vue-xtable-column field="size" title="Size" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="type" title="Type" :edit-render="{name: \'input\'}"></vue-xtable-column>\n  <vue-xtable-column field="date" title="Date" :edit-render="{name: \'input\'}"></vue-xtable-column>\n</vue-xtable>\n\n<script>\nnew Vue({\n  data () {\n    return {\n      tableData: [],\n      removeList: [],\n      treeConfig: {\n        children: \'children\'\n      },\n\n    }\n  },\n  created () {\n    this.tableData = VueUtil.clone(window.MOCK_TREE_DATA_LIST, true)\n  },\n\n  methods: {\n    insertEvent () {\n      let xTree = this.$refs.xTree\n      xTree.createRow({\n        name: \'新数据\',\n        date: VueUtil.formatDate(new Date(), \'yyyy-MM-dd\'),\n        isNew: true\n      }).then(newRow => {\n        // 插入到第一行\n        this.tableData.unshift(newRow)\n        xTree.refreshData().then(() => xTree.setActiveRow(newRow))\n      })\n    },\n    removeEvent () {\n      let xTree = this.$refs.xTree\n      let removeRecords = xTree.getSelectRecords()\n      removeRecords.forEach(row => {\n        let matchObj = VueUtil.findTree(this.tableData, item => item === row, this.treeConfig)\n        if (matchObj) {\n          let { items, index } = matchObj\n          // 从树节点中移除\n          let restRow = items.splice(index, 1)[0]\n          this.removeList.push(restRow)\n        }\n      })\n      xTree.refreshData()\n    },\n    getInsertEvent () {\n      let insertRecords = VueUtil.filterTree(this.tableData, item => item.isNew, this.treeConfig)\n      this.$alert({ message: insertRecords.length })\n    },\n    getRemoveEvent () {\n      let removeRecords = this.removeList\n      this.$alert({ message: removeRecords.length })\n    },\n    getUpdateEvent () {\n      let updateRecords = this.$refs.xTree.getUpdateRecords()\n      this.$alert({ message: updateRecords.length })\n    }\n  }\n})\n<\/script>',template:'<div class="source">    <vue-toolbar :data="tableData" export setting>\n      <template v-slot:buttons>\n        <vue-button @click="insertEvent">{{ $t(\'插入行\') }}</vue-button>\n        <vue-button @click="removeEvent">移除选中</vue-button>\n        <vue-button @click="getInsertEvent">获取新增</vue-button>\n        <vue-button @click="getRemoveEvent">获取删除</vue-button>\n        <vue-button @click="getUpdateEvent">获取修改</vue-button>\n      </template>\n    </vue-toolbar>\n\n    <vue-xtable\n      resizable\n      ref="xTree"\n      :tree-config="treeConfig"\n      :edit-config="{trigger: \'click\', mode: \'row\', showStatus: true}"\n      :data="tableData">\n      <vue-xtable-column type="checkbox" width="120"></vue-xtable-column>\n      <vue-xtable-column field="name" title="Name" tree-node></vue-xtable-column>\n      <vue-xtable-column field="size" title="Size" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="type" title="Type" :edit-render="{name: \'input\'}"></vue-xtable-column>\n      <vue-xtable-column field="date" title="Date" :edit-render="{name: \'input\'}"></vue-xtable-column>\n    </vue-xtable></div>',parameter:{data:function(){return{tableData:[],removeList:[],treeConfig:{children:"children"}}},created:function(){this.tableData=VueUtil.clone(window.MOCK_TREE_DATA_LIST,!0)},methods:{insertEvent:function(){var e=this,n=this.$refs.xTree;n.createRow({name:"新数据",date:VueUtil.formatDate(new Date,"yyyy-MM-dd"),isNew:!0}).then(function(t){e.tableData.unshift(t),n.refreshData().then(function(){return n.setActiveRow(t)})})},removeEvent:function(){var e=this,n=this.$refs.xTree;n.getSelectRecords().forEach(function(n){var t=VueUtil.findTree(e.tableData,function(e){return e===n},e.treeConfig);if(t){var l=t.items,o=t.index,a=l.splice(o,1)[0];e.removeList.push(a)}}),n.refreshData()},getInsertEvent:function(){var e=VueUtil.filterTree(this.tableData,function(e){return e.isNew},this.treeConfig);this.$alert({message:e.length})},getRemoveEvent:function(){var e=this.removeList;this.$alert({message:e.length})},getUpdateEvent:function(){var e=this.$refs.xTree.getUpdateRecords();this.$alert({message:e.length})}}}}],styles:""}},"./demo/index.js":
/*!***********************!*\
  !*** ./demo/index.js ***!
  \***********************/
/*! no static exports found */function(e,n,t){var l=t(/*! ./LayoutDemo */"./demo/LayoutDemo.js"),o=t(/*! ./ButtonDemo */"./demo/ButtonDemo.js"),a=t(/*! ./IconDemo */"./demo/IconDemo.js"),i=t(/*! ./RadioDemo */"./demo/RadioDemo.js"),u=t(/*! ./CheckboxDemo */"./demo/CheckboxDemo.js"),r=t(/*! ./InputDemo */"./demo/InputDemo.js"),m=t(/*! ./SelectDemo */"./demo/SelectDemo.js"),c=t(/*! ./CascaderDemo */"./demo/CascaderDemo.js"),s=t(/*! ./SwitchDemo */"./demo/SwitchDemo.js"),d=t(/*! ./FormDemo */"./demo/FormDemo.js"),b=t(/*! ./TableDemo */"./demo/TableDemo.js"),p=t(/*! ./TagDemo */"./demo/TagDemo.js"),v=t(/*! ./TreeDemo */"./demo/TreeDemo.js"),h=t(/*! ./AlertDemo */"./demo/AlertDemo.js"),f=t(/*! ./LoadingDemo */"./demo/LoadingDemo.js"),w=t(/*! ./NavMenuDemo */"./demo/NavMenuDemo.js"),x=t(/*! ./TabsDemo */"./demo/TabsDemo.js"),g=t(/*! ./DropdownDemo */"./demo/DropdownDemo.js"),D=t(/*! ./StepsDemo */"./demo/StepsDemo.js"),y=t(/*! ./DialogDemo */"./demo/DialogDemo.js"),k=t(/*! ./TooltipDemo */"./demo/TooltipDemo.js"),T=t(/*! ./PopoverDemo */"./demo/PopoverDemo.js"),S=t(/*! ./AsideDemo */"./demo/AsideDemo.js"),C=t(/*! ./CardDemo */"./demo/CardDemo.js"),A=t(/*! ./CarouselDemo */"./demo/CarouselDemo.js"),$=t(/*! ./DateTimeDemo */"./demo/DateTimeDemo.js"),L=t(/*! ./MessageBoxDemo */"./demo/MessageBoxDemo.js"),I=t(/*! ./NotificationDemo */"./demo/NotificationDemo.js"),E=t(/*! ./DateDemo */"./demo/DateDemo.js"),V=t(/*! ./TimeDemo */"./demo/TimeDemo.js"),R=t(/*! ./I18nDemo */"./demo/I18nDemo.js"),M=t(/*! ./CollapseDemo */"./demo/CollapseDemo.js"),N=t(/*! ./BadgeDemo */"./demo/BadgeDemo.js"),X=t(/*! ./InstallDemo */"./demo/InstallDemo.js"),_=t(/*! ./BreadcrumbDemo */"./demo/BreadcrumbDemo.js"),P=t(/*! ./PaginationDemo */"./demo/PaginationDemo.js"),O=t(/*! ./ProgressDemo */"./demo/ProgressDemo.js"),z=t(/*! ./SliderDemo */"./demo/SliderDemo.js"),F=t(/*! ./RateDemo */"./demo/RateDemo.js"),B=t(/*! ./UploadDemo */"./demo/UploadDemo.js"),U=t(/*! ./LoadingBarDemo */"./demo/LoadingBarDemo.js"),j=t(/*! ./NoteDemo */"./demo/NoteDemo.js"),H=t(/*! ./SortableDemo */"./demo/SortableDemo.js"),K=t(/*! ./AjaxDemo */"./demo/AjaxDemo.js"),G=t(/*! ./ListDemo */"./demo/ListDemo.js"),q=t(/*! ./ColorDemo */"./demo/ColorDemo.js"),Y=t(/*! ./CalendarDemo */"./demo/CalendarDemo.js"),J=t(/*! ./ImageDemo */"./demo/ImageDemo.js"),W=t(/*! ./ImageViewerDemo */"./demo/ImageViewerDemo.js"),Q=t(/*! ./PinDemo */"./demo/PinDemo.js"),Z=t(/*! ./DraggableDemo */"./demo/DraggableDemo.js"),ee=t(/*! ./SignatureDemo */"./demo/SignatureDemo.js"),ne=t(/*! ./ChangeLog */"./demo/ChangeLog.js"),te=t(/*! ./AdaptiveGroupDemo */"./demo/AdaptiveGroupDemo.js"),le=t(/*! ./RippleDemo */"./demo/RippleDemo.js"),oe=t(/*! ./XtableDemo */"./demo/XtableDemo/index.js"),ae=t(/*! ./MobileDemo/installDemo */"./demo/MobileDemo/installDemo.js"),ie=t(/*! ./MobileDemo/ScrollViewDemo */"./demo/MobileDemo/ScrollViewDemo.js"),ue=t(/*! ./MobileDemo/ActionSheetDemo */"./demo/MobileDemo/ActionSheetDemo.js"),re=t(/*! ./MobileDemo/NavBarDemo */"./demo/MobileDemo/NavBarDemo.js"),me=t(/*! ./MobileDemo/TabBarDemo */"./demo/MobileDemo/TabBarDemo.js"),ce=t(/*! ./MobileDemo/CellLayoutDemo */"./demo/MobileDemo/CellLayoutDemo.js"),se=t(/*! ./MobileDemo/SwipeCellDemo */"./demo/MobileDemo/SwipeCellDemo.js"),de=t(/*! ./MobileDemo/TextIconDemo */"./demo/MobileDemo/TextIconDemo.js"),be=t(/*! ./MobileDemo/StepperDemo */"./demo/MobileDemo/StepperDemo.js"),pe=t(/*! ./MobileDemo/IndexBarDemo */"./demo/MobileDemo/IndexBarDemo.js"),ve=t(/*! ./MobileDemo/SkeletonDemo */"./demo/MobileDemo/SkeletonDemo.js"),he=t(/*! ./HotkeyDemo */"./demo/HotkeyDemo.js"),fe=t(/*! ./BrushJsp */"./demo/BrushJsp.js"),we=t(/*! ./DemoLangZh */"./demo/DemoLangZh.js"),xe=t(/*! ./DemoLangJa */"./demo/DemoLangJa.js"),ge=t(/*! ./DemoLangEn */"./demo/DemoLangEn.js");t(/*! ../mock/index */"./mock/index.js"),VueUtil.setLocale("zh",we),VueUtil.setLocale("ja",xe),VueUtil.setLocale("en",ge);var De={template:'<vue-xtable     ref="xTable"     stripe     highlight-hover-row     :data="data">     <vue-xtable-column type="expand" width="60">       <template v-slot="scope">         <span>{{$t(scope.row.column2)}}</span>         <br v-if="scope.row.column5">         <br v-if="scope.row.column5">         <span v-if="scope.row.column5">{{$t(\'main.table.defaultValue\')}}: {{$t(scope.row.column5)}}</span>         <br v-if="scope.row.column4">         <br v-if="scope.row.column4">         <span v-if="scope.row.column4">{{$t(\'main.table.acceptedValues\')}}: {{$t(scope.row.column4)}}</span>       </template>     </vue-xtable-column>     <vue-xtable-column field="column1" :title="$t(\'main.table.parameters\')" header-align="left">         <template v-slot="scope">             {{$t(scope.row.column1)}}         </template>     </vue-xtable-column>     <vue-xtable-column field="column3" :title="$t(\'main.table.type\')" header-align="left">         <template v-slot="scope">             {{$t(scope.row.column3)}}         </template>     </vue-xtable-column>   </vue-xtable>',name:"AttrTable",props:["data"]};Vue.component(De.name,De);var ye={template:'<vue-xtable     ref="xTable"     stripe     highlight-hover-row     :data="data">     <vue-xtable-column type="expand" width="60">       <template v-slot="scope">       <pre class="toolbar:false;brush:jsp" style="padding:0">        <span>{{$t(scope.row.column3)}}</span>         <br v-if="scope.row.column5">         <br v-if="scope.row.column5">         <span v-if="scope.row.column5">{{$t(\'main.table.defaultValue\')}}: {{$t(scope.row.column5)}}</span>         <br v-if="scope.row.column4">         <br v-if="scope.row.column4">         <span v-if="scope.row.column4">{{$t(\'main.table.acceptedValues\')}}: {{$t(scope.row.column4)}}</span>         <pre>      </template>     </vue-xtable-column>     <vue-xtable-column field="column1" :title="$t(\'main.table.parameters\')" header-align="left">         <template v-slot="scope">             {{$t(scope.row.column1)}}         </template>     </vue-xtable-column>     <vue-xtable-column field="column2" :title="$t(\'main.table.type\')" header-align="left">         <template v-slot="scope">             {{$t(scope.row.column2)}}         </template>     </vue-xtable-column>   </vue-xtable>',name:"CodeTable",props:["data"]};Vue.component(ye.name,ye);var ke={template:'<vue-xtable     ref="xTable"     stripe     highlight-hover-row     :data="data">     <vue-xtable-column field="column1" :title="$t(\'main.table.event\')" header-align="left" width="150">         <template v-slot="scope">             {{$t(scope.row.column1)}}         </template>     </vue-xtable-column>     <vue-xtable-column field="column2" :title="$t(\'main.table.description\')" header-align="left">         <template v-slot="scope">             {{$t(scope.row.column2)}}         </template>     </vue-xtable-column>     <vue-xtable-column field="column3" :title="$t(\'main.table.parameters\')" header-align="left">         <template v-slot="scope">             {{$t(scope.row.column3)}}         </template>     </vue-xtable-column>    </vue-xtable>',name:"EventTable",props:["data"]};Vue.component(ke.name,ke);var Te={template:'<vue-xtable     ref="xTable"     stripe     highlight-hover-row     :data="data">     <vue-xtable-column field="column1" :title="$t(\'main.table.name\')" header-align="left" width="150">         <template v-slot="scope">             {{$t(scope.row.column1)}}         </template>     </vue-xtable-column>     <vue-xtable-column field="column2" :title="$t(\'main.table.description\')" header-align="left">         <template v-slot="scope">             {{$t(scope.row.column2)}}         </template>     </vue-xtable-column>   </vue-xtable>',name:"SlotTable",props:["data"]};Vue.component(Te.name,Te);var Se={template:'<vue-xtable     ref="xTable"     stripe     highlight-hover-row     :data="data">     <vue-xtable-column field="column1" :title="$t(\'main.table.method\')" header-align="left" width="150">         <template v-slot="scope">             {{$t(scope.row.column1)}}         </template>     </vue-xtable-column>     <vue-xtable-column field="column2" :title="$t(\'main.table.description\')" header-align="left">         <template v-slot="scope">             {{$t(scope.row.column2)}}         </template>     </vue-xtable-column>     <vue-xtable-column field="column3" :title="$t(\'main.table.parameters\')" header-align="left">         <template v-slot="scope">             {{$t(scope.row.column3)}}         </template>     </vue-xtable-column>   </vue-xtable>',name:"MethodTable",props:["data"]};Vue.component(Se.name,Se);var Ce='<div  :class="isMobileDemo ? \'mobile_content\':\'\'"><section :class="isMobileDemo ? \'mobile_middle_view\' : \'content\'"><h2>{{$t($route.params.head.label)}}</h2><p>{{$te($route.params.head.description) ? $t($route.params.head.description) : ""}}</p><template v-for="sample in $route.params.samples"><h3>{{$t(sample.label)}}</h3><p v-html="$t(sample.description)"></p><div class="demo-block" :class="{\'no-bottom\': sample.notshowmeta!==true}" v-if="sample.notshowblock!==true"><component :is="sample.id"></component></div><vue-collapse v-if="sample.notshowmeta!==true" v-model="sample.collapse" :expand-on-click-header="false"><vue-collapse-item class="collapse-item-blue" name="item1"><template slot="title"><vue-button type="text" icon="vue-icon-document" @click="clickHandle(sample)">{{$t("main.code")}}</vue-button></template><pre class="toolbar:false;brush:jsp" style="padding:0">{{sample.code}}</pre></vue-collapse-item></vue-collapse></template></section><iframe id="mobile_demo_iframe" v-if="isMobileDemo" :src="viyMobileDemoUrl+$route.params.head.demoInitUrl+\'?isForceMobile=true\'" class="mobile_iframe" allowfullscreen="true" referrerpolicy="unsafe-url" sandbox="allow-same-origin allow-modals allow-scripts allow-popups allow-forms allow-pointer-lock allow-top-navigation"></iframe></div>',Ae=[],$e=[X,R,K],Le=[oe,l,a,o,r,E,V,$,Y,J,W,i,u,s,m,c,g,d,P,v,M,H,Z,ee,L,y,S,I,x,N,T,k,p,h,j,G,C,A,f,U,O,z,_,D,F,Q,B,q,w,te,le,he,b],Ie=[ae,ie,ue,re,me,ce,se,de,be,pe,ve],Ee={},Ve=function(e,n,t){if(VueUtil.isDef(n)){var l=t?VueUtil.clone(t):{};l.template=n,-1!==e.indexOf("i18n")&&(l.methods={clickHandle1:function(){var e=this;e.$root.radioLang="1",e.$nextTick(function(){e.$notify({title:e.$t("message.hello",{msg:"你好!"})})})},clickHandle2:function(){var e=this;e.$root.radioLang="2",e.$nextTick(function(){e.$notify({title:e.$t("message.hello",{msg:"こんにちは!"})})})}}),Ee[e]=l}};[].concat($e,Le,Ie).forEach(function e(n){if(n.children)return void n.children.forEach(function(n){e(n)});Ee={};VueUtil.loop(n.samples,function(e){Ve(e.id,e.template,e.parameter)});Ae.push({path:n.path,name:n.name,component:{template:Ce,components:Ee,data:function(){return{viyMobileDemoUrl:"../vue-mobile/#/"}},methods:{clickHandle:function(e){VueUtil.isDef(e.collapse)||(e.collapse=[]),e.collapse.length>0?e.collapse=[]:e.collapse=["item1"],this.$forceUpdate()},tryHandle:function(e){window.open("http://jsrun.net/QihKp1/edit")}},mounted:function(){this.$nextTick(function(){fe.highlight()})},computed:{isMobileDemo:function(){return 0==n.name.indexOf("mobile_")}}},beforeEnter:function(e,t,l){Vue.loadingBar.start(),e.params.head=n.head,e.params.samples=n.samples,l()}})}),Ae.push({path:"/changeLog",component:ne,beforeEnter:function(e,n,t){Vue.loadingBar.start(),t()}}),Ae.push({path:"/",component:{template:'<div><div class="scene"><div class="scene_titanShadow"></div><div class="t_wrap"><div class="scene_titan"><div class="eyes"><div class="eye eye--left"></div><div class="eye eye--right"></div></div></div></div></div><section class="content root-content"><h2>{{$t(\'main.line1\')}}</h2><p></p><h3 class="imitation">{{txt}}{{h3}}</h3></section></div>',data:function(){return{h3:"",txt:"",typeInterval:null}},beforeDestroy:function(){this.typeInterval&&clearInterval(this.typeInterval)},mounted:function(){var e=this,n=!0,t=0,l={msg:function(e){return e},len:function(){return this.msg.length},seq:0,speed:400,witeTime:1500,backSpeed:200,backFlg:!0,typeInterval:null,type:function(){n=!1;var t=this;t.typeInterval&&clearInterval(t.typeInterval),e.h3=t.msg.substring(0,t.seq),t.seq===t.len()?t.backFlg?setTimeout(function(){t.typeBack()},t.witeTime):(e.txt=e.h3,e.h3="",t.seq=0,n=!0):(t.seq++,setTimeout(function(){t.type()},t.speed))},typeBack:function(){var t=this;e.h3=t.msg.substring(t.seq,0),0===t.seq?n=!0:(t.seq--,setTimeout(function(){t.typeBack()},t.backSpeed))}},o=function(e,n,t,o,a){l.msg=e,l.speed=n,l.backSpeed=t,l.backFlg=o,l.typeInterval=a,l.type()};setTimeout(function(){o(e.$t("main.line21"),200,100,!0),e.typeInterval=setInterval(function(){n&&(o(e.$t("main.line22"),200,100,!0,e.typeInterval),e.typeInterval=setInterval(function(){n&&(o(e.$t("main.line23"),200,0,!1,e.typeInterval),e.typeInterval=setInterval(function(){if(n)switch(t){case 0:t++,o(e.$t("main.line24"),250,150,!0);break;case 1:t++,o(e.$t("main.line25"),250,150,!0);break;case 2:t++,o(e.$t("main.line26"),250,150,!0);break;case 3:t++,o(e.$t("main.line27"),250,150,!0);break;case 4:t=0,o(e.$t("main.line28"),250,150,!0)}},1500))},1500))},1500)},1500)}},beforeEnter:function(e,n,t){Vue.loadingBar.start(),t()}}),Ae.push({path:"/example",redirect:"/"}),Ae.push({path:"/redmine",redirect:"/"}),Ae.push({path:"/@*",redirect:"/"});var Re=new VueRouter({routes:Ae,scrollBehavior:function(e,n,t){document.getElementsByClassName("right-container")[0].scrollTop=0}});Re.afterEach(function(e,n){Vue.nextTick(function(){Vue.loadingBar.finish(),Me&&Me.filterHandle()})});var Me=new Vue({template:'<div>       <vue-menu theme="dark" class="head-container">         <vue-row type="flex" justify="center">           <vue-col :sm=\'2\' :xs=\'2\' class="menu-show">             <vue-button icon="vue-icon-menu" @click="clickHandle" :class="[\'show-menu-btn\',openMenuClass]"               type="text"></vue-button>           </vue-col>           <vue-col :span="10" :offset="1">             <vue-button type="text" class="head-text" @click="headClick">{{headText}}</vue-button>           </vue-col>           <vue-col :span="11">             <vue-radio-group v-model="radioLang" class="head-right" size="small">               <vue-radio-button label="1">{{$t(\'main.radiolabel1\')}}</vue-radio-button>               <vue-radio-button label="2">{{$t(\'main.radiolabel2\')}}</vue-radio-button>               <vue-radio-button label="3">{{$t(\'main.radiolabel3\')}}</vue-radio-button>             </vue-radio-group>             <div class="head-right padding-right20">Version：               <vue-button type="text" @click="showChangeLog">{{version}}</vue-button>             </div>           </vue-col>           <vue-col :span="2">             <div class="head-right">            <vue-button type="text" @click="toGitLab" style="color: #fff;">GitLab</vue-button><i class="vue-icon-external" style="padding: 7px;"/>            </div>          </vue-col>         </vue-row>       </vue-menu>       <vue-row class="main-container">         <vue-col :lg=\'5\' :md=\'5\' :sm=\'10\' :xs=\'12\' :class="[\'left-container\',leftClass]">           <vue-input class="filter-input" ref="input" icon="vue-icon-filter-o" v-model="filter" @input="filterHandle"></vue-input>           <vue-scrollbar :height="menuHeight" class="menu-container">             <vue-menu router class="container-color" :default-active="defaultActive" :default-openeds="defaultOpeneds"               @select="selectHandle">               <vue-submenu index="1"><template slot="title">{{$t(\'main.title1\')}}</template>                 <vue-menu-item-group class="container-color">                   <vue-menu-item v-for="(menu, index) in menuItems1" :key="index" :index="menu.path">{{$t(menu.head.label)}}</vue-menu-item>                 </vue-menu-item-group>               </vue-submenu>               <vue-submenu index="2"><template slot="title">{{$t(\'main.title2\')}}</template>               <vue-menu-item-group class="container-color">               <template v-for="(menu, index) in menuItems2" >                <vue-menu-item v-if="!menu.children" :index="menu.path">{{$t(menu.head.label)}}</vue-menu-item>                 <vue-submenu v-else :index="menu.head.label">                <template slot="title">{{$t(menu.head.label)}}</template>                <vue-menu-item-group class="container-color">                   <template v-for="(childrenMenu, childrenIndex) in menu.children" >                     <template v-if="!childrenMenu.children">                      <vue-menu-item :index="childrenMenu.path">{{$t(childrenMenu.head.label)}}</vue-menu-item>                     </template>                    <vue-submenu v-else :index="childrenMenu.head.label">                    <template slot="title">{{$t(childrenMenu.head.label)}}</template>                    <vue-menu-item-group class="container-color">                       <template v-for="(grandChildrenMenu, childrenIndex) in childrenMenu.children" >                         <vue-menu-item :index="grandChildrenMenu.path">{{$t(grandChildrenMenu.head.label)}}</vue-menu-item>                       </template>                      </vue-menu-item-group>                     </vue-submenu>                   </template>                   </vue-menu-item-group>                 </vue-submenu>               </template>            </vue-menu-item-group>               </vue-submenu>               <vue-submenu index="3"><template slot="title">{{$t(\'main.title5\')}}</template>                 <vue-menu-item-group class="container-color">                  <vue-menu-item index="@redirect=example/gantt">{{$t(\'main.title6\')}}</vue-menu-item>                  <vue-menu-item index="@redirect=example/charts/charts.html">{{$t(\'main.title7\')}}</vue-menu-item>                  <vue-menu-item index="@redirect=example/excel">{{$t(\'main.title8\')}}</vue-menu-item>                 </vue-menu-item-group>               </vue-submenu>               <vue-submenu index="4"><template slot="title">{{$t(\'main.title9\')}}</template>               <vue-menu-item-group class="container-color">               <template v-for="(menu, index) in mobileMenuItems" >                <vue-menu-item v-if="!menu.children" :index="menu.path">{{$t(menu.head.label)}}</vue-menu-item>                 <vue-submenu v-else :index="menu.head.label">                <template slot="title">{{$t(menu.head.label)}}</template>                <vue-menu-item-group class="container-color">                   <template v-for="(childrenMenu, childrenIndex) in menu.children" >                     <template v-if="!childrenMenu.children">                      <vue-menu-item :index="childrenMenu.path">{{$t(childrenMenu.head.label)}}</vue-menu-item>                     </template>                    <vue-submenu v-else :index="childrenMenu.head.label">                    <template slot="title">{{$t(childrenMenu.head.label)}}</template>                    <vue-menu-item-group class="container-color">                       <template v-for="(grandChildrenMenu, childrenIndex) in childrenMenu.children" >                         <vue-menu-item :index="grandChildrenMenu.path">{{$t(grandChildrenMenu.head.label)}}</vue-menu-item>                       </template>                      </vue-menu-item-group>                     </vue-submenu>                   </template>                   </vue-menu-item-group>                 </vue-submenu>               </template>            </vue-menu-item-group>               </vue-submenu>               <vue-menu-item index="/example">{{$t(\'main.title3\')}}</vue-menu-item>               <vue-menu-item index="/redmine">{{$t(\'main.title4\')}}</vue-menu-item>             </vue-menu>           </vue-scrollbar>         </vue-col>         <vue-col :lg=\'19\' :md=\'19\' class="right-container">             <router-view></router-view>         </vue-col>       </vue-row>     </div>',data:function(){return{defaultActive:null,defaultOpeneds:[],menuItems1:$e,menuItems2:Le,mobileMenuItems:Ie,leftClass:"",openMenuClass:"",headText:"VUE-Component UI",radioLang:"1",version:VueUtil.version,filter:null,rightHeight:null,menuHeight:null}},watch:{radioLang:function(e){switch(e){case"1":VueUtil.setLang("zh");break;case"2":VueUtil.setLang("ja");break;case"3":VueUtil.setLang("en")}}},methods:{filterHandle:function(){var e=this.filter,n=this.$el.querySelectorAll(".menu-container .vue-menu-item"),t=this.$el.querySelectorAll(".menu-container .vue-submenu");t=VueUtil.reverse(Array.prototype.slice.call(t)),""===VueUtil.trim(e)?(VueUtil.loop(n,function(e){VueUtil.removeClass(e,"hidden")}),VueUtil.loop(t,function(e){VueUtil.removeClass(e,"hidden")})):(VueUtil.loop(n,function(n){VueUtil.addClass(n,"hidden"),-1!==n.innerHTML.toLowerCase().indexOf(e.toLowerCase())&&VueUtil.removeClass(n,"hidden")}),VueUtil.loop(t,function(e){e.querySelector(".vue-menu-item:not(.hidden)")?VueUtil.removeClass(e,"hidden"):VueUtil.addClass(e,"hidden")}))},headClick:function(){var e=this;e.$router.push("/"),e.defaultOpeneds=["1"],VueUtil.removeClass(document.querySelector(".left-container .vue-menu-item.is-active"),"is-active"),e.$nextTick(function(){e.leftClass="",e.openMenuClass=""})},showChangeLog:function(){var e=this;e.$router.push("/changeLog"),e.defaultOpeneds=["1"],VueUtil.removeClass(document.querySelector(".left-container .vue-menu-item.is-active"),"is-active"),e.$nextTick(function(){e.leftClass="",e.openMenuClass=""})},clickHandle:function(){"show-left"===this.leftClass?(this.leftClass="",this.openMenuClass=""):(this.leftClass="show-left",this.openMenuClass="menu-opend")},selectHandle:function(e){0==e.indexOf("@redirect")&&(document.location.href=e.replace("@redirect=","")),"/example"===e&&(document.location.href="./viy-menu/"),"/redmine"===e&&(document.location.href="https://github.com/spring21cn/vue-component/issues/new");var n=this;n.$nextTick(function(){n.leftClass="",n.openMenuClass=""})},toGitLab:function(){window.open("https://github.com/spring21cn/vue-component")}},mounted:function(){var e=this,n=VueUtil.getSystemInfo().language.toLowerCase();e.radioLang="1",-1!==n.indexOf("ja")?e.radioLang="2":-1!==n.indexOf("en")&&(e.radioLang="3");var t=e.$refs.input.$el.clientHeight;VueUtil.addResizeListener(function(){var n=document.body.clientHeight-e.$el.querySelector(".head-container").clientHeight;e.$el.querySelector(".main-container").style.height=n+"px",e.rightHeight=n,e.menuHeight=n-t}),VueUtil.on(document.querySelector(".right-container"),"click",function(){e.$nextTick(function(){e.leftClass="",e.openMenuClass=""})}),e.$nextTick(function(){var n=document.location.href.split("#/");""!==VueUtil.trim(n[1])?e.defaultActive="/"+n[1]:e.defaultOpeneds=["1"];var l=document.body.clientHeight-e.$el.querySelector(".head-container").clientHeight;e.$el.querySelector(".main-container").style.height=l+"px",e.rightHeight=l,e.menuHeight=l-t,setTimeout(function(){document.querySelector(".left-container .vue-menu-item.is-active")&&(document.querySelector(".left-container").scrollTop=document.querySelector(".left-container .vue-menu-item.is-active").offsetTop)},500)})},router:Re}).$mount("#main")},"./mock/api/city/all.json":
/*!********************************!*\
  !*** ./mock/api/city/all.json ***!
  \********************************/
/*! exports provided: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, default */function(e){e.exports=[{name:"北京市",id:"110000",children:[{name:"市辖区",id:"110100",children:[{name:"东城区",id:"110101"},{name:"西城区",id:"110102"},{name:"朝阳区",id:"110105"},{name:"丰台区",id:"110106"},{name:"石景山区",id:"110107"},{name:"海淀区",id:"110108"},{name:"门头沟区",id:"110109"},{name:"房山区",id:"110111"},{name:"通州区",id:"110112"},{name:"顺义区",id:"110113"},{name:"昌平区",id:"110114"},{name:"大兴区",id:"110115"},{name:"怀柔区",id:"110116"},{name:"平谷区",id:"110117"},{name:"密云区",id:"110118"},{name:"延庆区",id:"110119"}]}]},{name:"天津市",id:"120000",children:[{name:"市辖区",id:"120100",children:[{name:"和平区",id:"120101"},{name:"河东区",id:"120102"},{name:"河西区",id:"120103"},{name:"南开区",id:"120104"},{name:"河北区",id:"120105"},{name:"红桥区",id:"120106"},{name:"东丽区",id:"120110"},{name:"西青区",id:"120111"},{name:"津南区",id:"120112"},{name:"北辰区",id:"120113"},{name:"武清区",id:"120114"},{name:"宝坻区",id:"120115"},{name:"滨海新区",id:"120116"},{name:"宁河区",id:"120117"},{name:"静海区",id:"120118"},{name:"蓟州区",id:"120119"}]}]},{name:"河北省",id:"130000",children:[{name:"石家庄市",id:"130100",children:[{name:"市辖区",id:"130101"},{name:"长安区",id:"130102"},{name:"桥西区",id:"130104"},{name:"新华区",id:"130105"},{name:"井陉矿区",id:"130107"},{name:"裕华区",id:"130108"},{name:"藁城区",id:"130109"},{name:"鹿泉区",id:"130110"},{name:"栾城区",id:"130111"},{name:"井陉县",id:"130121"},{name:"正定县",id:"130123"},{name:"行唐县",id:"130125"},{name:"灵寿县",id:"130126"},{name:"高邑县",id:"130127"},{name:"深泽县",id:"130128"},{name:"赞皇县",id:"130129"},{name:"无极县",id:"130130"},{name:"平山县",id:"130131"},{name:"元氏县",id:"130132"},{name:"赵县",id:"130133"},{name:"晋州市",id:"130183"},{name:"新乐市",id:"130184"}]},{name:"唐山市",id:"130200",children:[{name:"市辖区",id:"130201"},{name:"路南区",id:"130202"},{name:"路北区",id:"130203"},{name:"古冶区",id:"130204"},{name:"开平区",id:"130205"},{name:"丰南区",id:"130207"},{name:"丰润区",id:"130208"},{name:"曹妃甸区",id:"130209"},{name:"滦县",id:"130223"},{name:"滦南县",id:"130224"},{name:"乐亭县",id:"130225"},{name:"迁西县",id:"130227"},{name:"玉田县",id:"130229"},{name:"遵化市",id:"130281"},{name:"迁安市",id:"130283"}]},{name:"秦皇岛市",id:"130300",children:[{name:"市辖区",id:"130301"},{name:"海港区",id:"130302"},{name:"山海关区",id:"130303"},{name:"北戴河区",id:"130304"},{name:"抚宁区",id:"130306"},{name:"青龙满族自治县",id:"130321"},{name:"昌黎县",id:"130322"},{name:"卢龙县",id:"130324"}]},{name:"邯郸市",id:"130400",children:[{name:"市辖区",id:"130401"},{name:"邯山区",id:"130402"},{name:"丛台区",id:"130403"},{name:"复兴区",id:"130404"},{name:"峰峰矿区",id:"130406"},{name:"邯郸县",id:"130421"},{name:"临漳县",id:"130423"},{name:"成安县",id:"130424"},{name:"大名县",id:"130425"},{name:"涉县",id:"130426"},{name:"磁县",id:"130427"},{name:"肥乡县",id:"130428"},{name:"永年县",id:"130429"},{name:"邱县",id:"130430"},{name:"鸡泽县",id:"130431"},{name:"广平县",id:"130432"},{name:"馆陶县",id:"130433"},{name:"魏县",id:"130434"},{name:"曲周县",id:"130435"},{name:"武安市",id:"130481"}]},{name:"邢台市",id:"130500",children:[{name:"市辖区",id:"130501"},{name:"桥东区",id:"130502"},{name:"桥西区",id:"130503"},{name:"邢台县",id:"130521"},{name:"临城县",id:"130522"},{name:"内丘县",id:"130523"},{name:"柏乡县",id:"130524"},{name:"隆尧县",id:"130525"},{name:"任县",id:"130526"},{name:"南和县",id:"130527"},{name:"宁晋县",id:"130528"},{name:"巨鹿县",id:"130529"},{name:"新河县",id:"130530"},{name:"广宗县",id:"130531"},{name:"平乡县",id:"130532"},{name:"威县",id:"130533"},{name:"清河县",id:"130534"},{name:"临西县",id:"130535"},{name:"南宫市",id:"130581"},{name:"沙河市",id:"130582"}]},{name:"保定市",id:"130600",children:[{name:"市辖区",id:"130601"},{name:"竞秀区",id:"130602"},{name:"莲池区",id:"130606"},{name:"满城区",id:"130607"},{name:"清苑区",id:"130608"},{name:"徐水区",id:"130609"},{name:"涞水县",id:"130623"},{name:"阜平县",id:"130624"},{name:"定兴县",id:"130626"},{name:"唐县",id:"130627"},{name:"高阳县",id:"130628"},{name:"容城县",id:"130629"},{name:"涞源县",id:"130630"},{name:"望都县",id:"130631"},{name:"安新县",id:"130632"},{name:"易县",id:"130633"},{name:"曲阳县",id:"130634"},{name:"蠡县",id:"130635"},{name:"顺平县",id:"130636"},{name:"博野县",id:"130637"},{name:"雄县",id:"130638"},{name:"涿州市",id:"130681"},{name:"安国市",id:"130683"},{name:"高碑店市",id:"130684"}]},{name:"张家口市",id:"130700",children:[{name:"市辖区",id:"130701"},{name:"桥东区",id:"130702"},{name:"桥西区",id:"130703"},{name:"宣化区",id:"130705"},{name:"下花园区",id:"130706"},{name:"万全区",id:"130708"},{name:"崇礼区",id:"130709"},{name:"张北县",id:"130722"},{name:"康保县",id:"130723"},{name:"沽源县",id:"130724"},{name:"尚义县",id:"130725"},{name:"蔚县",id:"130726"},{name:"阳原县",id:"130727"},{name:"怀安县",id:"130728"},{name:"怀来县",id:"130730"},{name:"涿鹿县",id:"130731"},{name:"赤城县",id:"130732"}]},{name:"承德市",id:"130800",children:[{name:"市辖区",id:"130801"},{name:"双桥区",id:"130802"},{name:"双滦区",id:"130803"},{name:"鹰手营子矿区",id:"130804"},{name:"承德县",id:"130821"},{name:"兴隆县",id:"130822"},{name:"平泉县",id:"130823"},{name:"滦平县",id:"130824"},{name:"隆化县",id:"130825"},{name:"丰宁满族自治县",id:"130826"},{name:"宽城满族自治县",id:"130827"},{name:"围场满族蒙古族自治县",id:"130828"}]},{name:"沧州市",id:"130900",children:[{name:"市辖区",id:"130901"},{name:"新华区",id:"130902"},{name:"运河区",id:"130903"},{name:"沧县",id:"130921"},{name:"青县",id:"130922"},{name:"东光县",id:"130923"},{name:"海兴县",id:"130924"},{name:"盐山县",id:"130925"},{name:"肃宁县",id:"130926"},{name:"南皮县",id:"130927"},{name:"吴桥县",id:"130928"},{name:"献县",id:"130929"},{name:"孟村回族自治县",id:"130930"},{name:"泊头市",id:"130981"},{name:"任丘市",id:"130982"},{name:"黄骅市",id:"130983"},{name:"河间市",id:"130984"}]},{name:"廊坊市",id:"131000",children:[{name:"市辖区",id:"131001"},{name:"安次区",id:"131002"},{name:"广阳区",id:"131003"},{name:"固安县",id:"131022"},{name:"永清县",id:"131023"},{name:"香河县",id:"131024"},{name:"大城县",id:"131025"},{name:"文安县",id:"131026"},{name:"大厂回族自治县",id:"131028"},{name:"霸州市",id:"131081"},{name:"三河市",id:"131082"}]},{name:"衡水市",id:"131100",children:[{name:"市辖区",id:"131101"},{name:"桃城区",id:"131102"},{name:"冀州区",id:"131103"},{name:"枣强县",id:"131121"},{name:"武邑县",id:"131122"},{name:"武强县",id:"131123"},{name:"饶阳县",id:"131124"},{name:"安平县",id:"131125"},{name:"故城县",id:"131126"},{name:"景县",id:"131127"},{name:"阜城县",id:"131128"},{name:"深州市",id:"131182"}]},{name:"省直辖县级行政区划",id:"139000",children:[{name:"定州市",id:"139001"},{name:"辛集市",id:"139002"}]}]},{name:"山西省",id:"140000",children:[{name:"太原市",id:"140100",children:[{name:"市辖区",id:"140101"},{name:"小店区",id:"140105"},{name:"迎泽区",id:"140106"},{name:"杏花岭区",id:"140107"},{name:"尖草坪区",id:"140108"},{name:"万柏林区",id:"140109"},{name:"晋源区",id:"140110"},{name:"清徐县",id:"140121"},{name:"阳曲县",id:"140122"},{name:"娄烦县",id:"140123"},{name:"古交市",id:"140181"}]},{name:"大同市",id:"140200",children:[{name:"市辖区",id:"140201"},{name:"城区",id:"140202"},{name:"矿区",id:"140203"},{name:"南郊区",id:"140211"},{name:"新荣区",id:"140212"},{name:"阳高县",id:"140221"},{name:"天镇县",id:"140222"},{name:"广灵县",id:"140223"},{name:"灵丘县",id:"140224"},{name:"浑源县",id:"140225"},{name:"左云县",id:"140226"},{name:"大同县",id:"140227"}]},{name:"阳泉市",id:"140300",children:[{name:"市辖区",id:"140301"},{name:"城区",id:"140302"},{name:"矿区",id:"140303"},{name:"郊区",id:"140311"},{name:"平定县",id:"140321"},{name:"盂县",id:"140322"}]},{name:"长治市",id:"140400",children:[{name:"市辖区",id:"140401"},{name:"城区",id:"140402"},{name:"郊区",id:"140411"},{name:"长治县",id:"140421"},{name:"襄垣县",id:"140423"},{name:"屯留县",id:"140424"},{name:"平顺县",id:"140425"},{name:"黎城县",id:"140426"},{name:"壶关县",id:"140427"},{name:"长子县",id:"140428"},{name:"武乡县",id:"140429"},{name:"沁县",id:"140430"},{name:"沁源县",id:"140431"},{name:"潞城市",id:"140481"}]},{name:"晋城市",id:"140500",children:[{name:"市辖区",id:"140501"},{name:"城区",id:"140502"},{name:"沁水县",id:"140521"},{name:"阳城县",id:"140522"},{name:"陵川县",id:"140524"},{name:"泽州县",id:"140525"},{name:"高平市",id:"140581"}]},{name:"朔州市",id:"140600",children:[{name:"市辖区",id:"140601"},{name:"朔城区",id:"140602"},{name:"平鲁区",id:"140603"},{name:"山阴县",id:"140621"},{name:"应县",id:"140622"},{name:"右玉县",id:"140623"},{name:"怀仁县",id:"140624"}]},{name:"晋中市",id:"140700",children:[{name:"市辖区",id:"140701"},{name:"榆次区",id:"140702"},{name:"榆社县",id:"140721"},{name:"左权县",id:"140722"},{name:"和顺县",id:"140723"},{name:"昔阳县",id:"140724"},{name:"寿阳县",id:"140725"},{name:"太谷县",id:"140726"},{name:"祁县",id:"140727"},{name:"平遥县",id:"140728"},{name:"灵石县",id:"140729"},{name:"介休市",id:"140781"}]},{name:"运城市",id:"140800",children:[{name:"市辖区",id:"140801"},{name:"盐湖区",id:"140802"},{name:"临猗县",id:"140821"},{name:"万荣县",id:"140822"},{name:"闻喜县",id:"140823"},{name:"稷山县",id:"140824"},{name:"新绛县",id:"140825"},{name:"绛县",id:"140826"},{name:"垣曲县",id:"140827"},{name:"夏县",id:"140828"},{name:"平陆县",id:"140829"},{name:"芮城县",id:"140830"},{name:"永济市",id:"140881"},{name:"河津市",id:"140882"}]},{name:"忻州市",id:"140900",children:[{name:"市辖区",id:"140901"},{name:"忻府区",id:"140902"},{name:"定襄县",id:"140921"},{name:"五台县",id:"140922"},{name:"代县",id:"140923"},{name:"繁峙县",id:"140924"},{name:"宁武县",id:"140925"},{name:"静乐县",id:"140926"},{name:"神池县",id:"140927"},{name:"五寨县",id:"140928"},{name:"岢岚县",id:"140929"},{name:"河曲县",id:"140930"},{name:"保德县",id:"140931"},{name:"偏关县",id:"140932"},{name:"原平市",id:"140981"}]},{name:"临汾市",id:"141000",children:[{name:"市辖区",id:"141001"},{name:"尧都区",id:"141002"},{name:"曲沃县",id:"141021"},{name:"翼城县",id:"141022"},{name:"襄汾县",id:"141023"},{name:"洪洞县",id:"141024"},{name:"古县",id:"141025"},{name:"安泽县",id:"141026"},{name:"浮山县",id:"141027"},{name:"吉县",id:"141028"},{name:"乡宁县",id:"141029"},{name:"大宁县",id:"141030"},{name:"隰县",id:"141031"},{name:"永和县",id:"141032"},{name:"蒲县",id:"141033"},{name:"汾西县",id:"141034"},{name:"侯马市",id:"141081"},{name:"霍州市",id:"141082"}]},{name:"吕梁市",id:"141100",children:[{name:"市辖区",id:"141101"},{name:"离石区",id:"141102"},{name:"文水县",id:"141121"},{name:"交城县",id:"141122"},{name:"兴县",id:"141123"},{name:"临县",id:"141124"},{name:"柳林县",id:"141125"},{name:"石楼县",id:"141126"},{name:"岚县",id:"141127"},{name:"方山县",id:"141128"},{name:"中阳县",id:"141129"},{name:"交口县",id:"141130"},{name:"孝义市",id:"141181"},{name:"汾阳市",id:"141182"}]}]},{name:"内蒙古自治区",id:"150000",children:[{name:"呼和浩特市",id:"150100",children:[{name:"市辖区",id:"150101"},{name:"新城区",id:"150102"},{name:"回民区",id:"150103"},{name:"玉泉区",id:"150104"},{name:"赛罕区",id:"150105"},{name:"土默特左旗",id:"150121"},{name:"托克托县",id:"150122"},{name:"和林格尔县",id:"150123"},{name:"清水河县",id:"150124"},{name:"武川县",id:"150125"}]},{name:"包头市",id:"150200",children:[{name:"市辖区",id:"150201"},{name:"东河区",id:"150202"},{name:"昆都仑区",id:"150203"},{name:"青山区",id:"150204"},{name:"石拐区",id:"150205"},{name:"白云鄂博矿区",id:"150206"},{name:"九原区",id:"150207"},{name:"土默特右旗",id:"150221"},{name:"固阳县",id:"150222"},{name:"达尔罕茂明安联合旗",id:"150223"}]},{name:"乌海市",id:"150300",children:[{name:"市辖区",id:"150301"},{name:"海勃湾区",id:"150302"},{name:"海南区",id:"150303"},{name:"乌达区",id:"150304"}]},{name:"赤峰市",id:"150400",children:[{name:"市辖区",id:"150401"},{name:"红山区",id:"150402"},{name:"元宝山区",id:"150403"},{name:"松山区",id:"150404"},{name:"阿鲁科尔沁旗",id:"150421"},{name:"巴林左旗",id:"150422"},{name:"巴林右旗",id:"150423"},{name:"林西县",id:"150424"},{name:"克什克腾旗",id:"150425"},{name:"翁牛特旗",id:"150426"},{name:"喀喇沁旗",id:"150428"},{name:"宁城县",id:"150429"},{name:"敖汉旗",id:"150430"}]},{name:"通辽市",id:"150500",children:[{name:"市辖区",id:"150501"},{name:"科尔沁区",id:"150502"},{name:"科尔沁左翼中旗",id:"150521"},{name:"科尔沁左翼后旗",id:"150522"},{name:"开鲁县",id:"150523"},{name:"库伦旗",id:"150524"},{name:"奈曼旗",id:"150525"},{name:"扎鲁特旗",id:"150526"},{name:"霍林郭勒市",id:"150581"}]},{name:"鄂尔多斯市",id:"150600",children:[{name:"市辖区",id:"150601"},{name:"东胜区",id:"150602"},{name:"康巴什区",id:"150603"},{name:"达拉特旗",id:"150621"},{name:"准格尔旗",id:"150622"},{name:"鄂托克前旗",id:"150623"},{name:"鄂托克旗",id:"150624"},{name:"杭锦旗",id:"150625"},{name:"乌审旗",id:"150626"},{name:"伊金霍洛旗",id:"150627"}]},{name:"呼伦贝尔市",id:"150700",children:[{name:"市辖区",id:"150701"},{name:"海拉尔区",id:"150702"},{name:"扎赉诺尔区",id:"150703"},{name:"阿荣旗",id:"150721"},{name:"莫力达瓦达斡尔族自治旗",id:"150722"},{name:"鄂伦春自治旗",id:"150723"},{name:"鄂温克族自治旗",id:"150724"},{name:"陈巴尔虎旗",id:"150725"},{name:"新巴尔虎左旗",id:"150726"},{name:"新巴尔虎右旗",id:"150727"},{name:"满洲里市",id:"150781"},{name:"牙克石市",id:"150782"},{name:"扎兰屯市",id:"150783"},{name:"额尔古纳市",id:"150784"},{name:"根河市",id:"150785"}]},{name:"巴彦淖尔市",id:"150800",children:[{name:"市辖区",id:"150801"},{name:"临河区",id:"150802"},{name:"五原县",id:"150821"},{name:"磴口县",id:"150822"},{name:"乌拉特前旗",id:"150823"},{name:"乌拉特中旗",id:"150824"},{name:"乌拉特后旗",id:"150825"},{name:"杭锦后旗",id:"150826"}]},{name:"乌兰察布市",id:"150900",children:[{name:"市辖区",id:"150901"},{name:"集宁区",id:"150902"},{name:"卓资县",id:"150921"},{name:"化德县",id:"150922"},{name:"商都县",id:"150923"},{name:"兴和县",id:"150924"},{name:"凉城县",id:"150925"},{name:"察哈尔右翼前旗",id:"150926"},{name:"察哈尔右翼中旗",id:"150927"},{name:"察哈尔右翼后旗",id:"150928"},{name:"四子王旗",id:"150929"},{name:"丰镇市",id:"150981"}]},{name:"兴安盟",id:"152200",children:[{name:"乌兰浩特市",id:"152201"},{name:"阿尔山市",id:"152202"},{name:"科尔沁右翼前旗",id:"152221"},{name:"科尔沁右翼中旗",id:"152222"},{name:"扎赉特旗",id:"152223"},{name:"突泉县",id:"152224"}]},{name:"锡林郭勒盟",id:"152500",children:[{name:"二连浩特市",id:"152501"},{name:"锡林浩特市",id:"152502"},{name:"阿巴嘎旗",id:"152522"},{name:"苏尼特左旗",id:"152523"},{name:"苏尼特右旗",id:"152524"},{name:"东乌珠穆沁旗",id:"152525"},{name:"西乌珠穆沁旗",id:"152526"},{name:"太仆寺旗",id:"152527"},{name:"镶黄旗",id:"152528"},{name:"正镶白旗",id:"152529"},{name:"正蓝旗",id:"152530"},{name:"多伦县",id:"152531"}]},{name:"阿拉善盟",id:"152900",children:[{name:"阿拉善左旗",id:"152921"},{name:"阿拉善右旗",id:"152922"},{name:"额济纳旗",id:"152923"}]}]},{name:"辽宁省",id:"210000",children:[{name:"沈阳市",id:"210100",children:[{name:"市辖区",id:"210101"},{name:"和平区",id:"210102"},{name:"沈河区",id:"210103"},{name:"大东区",id:"210104"},{name:"皇姑区",id:"210105"},{name:"铁西区",id:"210106"},{name:"苏家屯区",id:"210111"},{name:"浑南区",id:"210112"},{name:"沈北新区",id:"210113"},{name:"于洪区",id:"210114"},{name:"辽中区",id:"210115"},{name:"康平县",id:"210123"},{name:"法库县",id:"210124"},{name:"新民市",id:"210181"}]},{name:"大连市",id:"210200",children:[{name:"市辖区",id:"210201"},{name:"中山区",id:"210202"},{name:"西岗区",id:"210203"},{name:"沙河口区",id:"210204"},{name:"甘井子区",id:"210211"},{name:"旅顺口区",id:"210212"},{name:"金州区",id:"210213"},{name:"普兰店区",id:"210214"},{name:"长海县",id:"210224"},{name:"瓦房店市",id:"210281"},{name:"庄河市",id:"210283"}]},{name:"鞍山市",id:"210300",children:[{name:"市辖区",id:"210301"},{name:"铁东区",id:"210302"},{name:"铁西区",id:"210303"},{name:"立山区",id:"210304"},{name:"千山区",id:"210311"},{name:"台安县",id:"210321"},{name:"岫岩满族自治县",id:"210323"},{name:"海城市",id:"210381"}]},{name:"抚顺市",id:"210400",children:[{name:"市辖区",id:"210401"},{name:"新抚区",id:"210402"},{name:"东洲区",id:"210403"},{name:"望花区",id:"210404"},{name:"顺城区",id:"210411"},{name:"抚顺县",id:"210421"},{name:"新宾满族自治县",id:"210422"},{name:"清原满族自治县",id:"210423"}]},{name:"本溪市",id:"210500",children:[{name:"市辖区",id:"210501"},{name:"平山区",id:"210502"},{name:"溪湖区",id:"210503"},{name:"明山区",id:"210504"},{name:"南芬区",id:"210505"},{name:"本溪满族自治县",id:"210521"},{name:"桓仁满族自治县",id:"210522"}]},{name:"丹东市",id:"210600",children:[{name:"市辖区",id:"210601"},{name:"元宝区",id:"210602"},{name:"振兴区",id:"210603"},{name:"振安区",id:"210604"},{name:"宽甸满族自治县",id:"210624"},{name:"东港市",id:"210681"},{name:"凤城市",id:"210682"}]},{name:"锦州市",id:"210700",children:[{name:"市辖区",id:"210701"},{name:"古塔区",id:"210702"},{name:"凌河区",id:"210703"},{name:"太和区",id:"210711"},{name:"黑山县",id:"210726"},{name:"义县",id:"210727"},{name:"凌海市",id:"210781"},{name:"北镇市",id:"210782"}]},{name:"营口市",id:"210800",children:[{name:"市辖区",id:"210801"},{name:"站前区",id:"210802"},{name:"西市区",id:"210803"},{name:"鲅鱼圈区",id:"210804"},{name:"老边区",id:"210811"},{name:"盖州市",id:"210881"},{name:"大石桥市",id:"210882"}]},{name:"阜新市",id:"210900",children:[{name:"市辖区",id:"210901"},{name:"海州区",id:"210902"},{name:"新邱区",id:"210903"},{name:"太平区",id:"210904"},{name:"清河门区",id:"210905"},{name:"细河区",id:"210911"},{name:"阜新蒙古族自治县",id:"210921"},{name:"彰武县",id:"210922"}]},{name:"辽阳市",id:"211000",children:[{name:"市辖区",id:"211001"},{name:"白塔区",id:"211002"},{name:"文圣区",id:"211003"},{name:"宏伟区",id:"211004"},{name:"弓长岭区",id:"211005"},{name:"太子河区",id:"211011"},{name:"辽阳县",id:"211021"},{name:"灯塔市",id:"211081"}]},{name:"盘锦市",id:"211100",children:[{name:"市辖区",id:"211101"},{name:"双台子区",id:"211102"},{name:"兴隆台区",id:"211103"},{name:"大洼区",id:"211104"},{name:"盘山县",id:"211122"}]},{name:"铁岭市",id:"211200",children:[{name:"市辖区",id:"211201"},{name:"银州区",id:"211202"},{name:"清河区",id:"211204"},{name:"铁岭县",id:"211221"},{name:"西丰县",id:"211223"},{name:"昌图县",id:"211224"},{name:"调兵山市",id:"211281"},{name:"开原市",id:"211282"}]},{name:"朝阳市",id:"211300",children:[{name:"市辖区",id:"211301"},{name:"双塔区",id:"211302"},{name:"龙城区",id:"211303"},{name:"朝阳县",id:"211321"},{name:"建平县",id:"211322"},{name:"喀喇沁左翼蒙古族自治县",id:"211324"},{name:"北票市",id:"211381"},{name:"凌源市",id:"211382"}]},{name:"葫芦岛市",id:"211400",children:[{name:"市辖区",id:"211401"},{name:"连山区",id:"211402"},{name:"龙港区",id:"211403"},{name:"南票区",id:"211404"},{name:"绥中县",id:"211421"},{name:"建昌县",id:"211422"},{name:"兴城市",id:"211481"}]}]},{name:"吉林省",id:"220000",children:[{name:"长春市",id:"220100",children:[{name:"市辖区",id:"220101"},{name:"南关区",id:"220102"},{name:"宽城区",id:"220103"},{name:"朝阳区",id:"220104"},{name:"二道区",id:"220105"},{name:"绿园区",id:"220106"},{name:"双阳区",id:"220112"},{name:"九台区",id:"220113"},{name:"农安县",id:"220122"},{name:"榆树市",id:"220182"},{name:"德惠市",id:"220183"}]},{name:"吉林市",id:"220200",children:[{name:"市辖区",id:"220201"},{name:"昌邑区",id:"220202"},{name:"龙潭区",id:"220203"},{name:"船营区",id:"220204"},{name:"丰满区",id:"220211"},{name:"永吉县",id:"220221"},{name:"蛟河市",id:"220281"},{name:"桦甸市",id:"220282"},{name:"舒兰市",id:"220283"},{name:"磐石市",id:"220284"}]},{name:"四平市",id:"220300",children:[{name:"市辖区",id:"220301"},{name:"铁西区",id:"220302"},{name:"铁东区",id:"220303"},{name:"梨树县",id:"220322"},{name:"伊通满族自治县",id:"220323"},{name:"公主岭市",id:"220381"},{name:"双辽市",id:"220382"}]},{name:"辽源市",id:"220400",children:[{name:"市辖区",id:"220401"},{name:"龙山区",id:"220402"},{name:"西安区",id:"220403"},{name:"东丰县",id:"220421"},{name:"东辽县",id:"220422"}]},{name:"通化市",id:"220500",children:[{name:"市辖区",id:"220501"},{name:"东昌区",id:"220502"},{name:"二道江区",id:"220503"},{name:"通化县",id:"220521"},{name:"辉南县",id:"220523"},{name:"柳河县",id:"220524"},{name:"梅河口市",id:"220581"},{name:"集安市",id:"220582"}]},{name:"白山市",id:"220600",children:[{name:"市辖区",id:"220601"},{name:"浑江区",id:"220602"},{name:"江源区",id:"220605"},{name:"抚松县",id:"220621"},{name:"靖宇县",id:"220622"},{name:"长白朝鲜族自治县",id:"220623"},{name:"临江市",id:"220681"}]},{name:"松原市",id:"220700",children:[{name:"市辖区",id:"220701"},{name:"宁江区",id:"220702"},{name:"前郭尔罗斯蒙古族自治县",id:"220721"},{name:"长岭县",id:"220722"},{name:"乾安县",id:"220723"},{name:"扶余市",id:"220781"}]},{name:"白城市",id:"220800",children:[{name:"市辖区",id:"220801"},{name:"洮北区",id:"220802"},{name:"镇赉县",id:"220821"},{name:"通榆县",id:"220822"},{name:"洮南市",id:"220881"},{name:"大安市",id:"220882"}]},{name:"延边朝鲜族自治州",id:"222400",children:[{name:"延吉市",id:"222401"},{name:"图们市",id:"222402"},{name:"敦化市",id:"222403"},{name:"珲春市",id:"222404"},{name:"龙井市",id:"222405"},{name:"和龙市",id:"222406"},{name:"汪清县",id:"222424"},{name:"安图县",id:"222426"}]}]},{name:"黑龙江省",id:"230000",children:[{name:"哈尔滨市",id:"230100",children:[{name:"市辖区",id:"230101"},{name:"道里区",id:"230102"},{name:"南岗区",id:"230103"},{name:"道外区",id:"230104"},{name:"平房区",id:"230108"},{name:"松北区",id:"230109"},{name:"香坊区",id:"230110"},{name:"呼兰区",id:"230111"},{name:"阿城区",id:"230112"},{name:"双城区",id:"230113"},{name:"依兰县",id:"230123"},{name:"方正县",id:"230124"},{name:"宾县",id:"230125"},{name:"巴彦县",id:"230126"},{name:"木兰县",id:"230127"},{name:"通河县",id:"230128"},{name:"延寿县",id:"230129"},{name:"尚志市",id:"230183"},{name:"五常市",id:"230184"}]},{name:"齐齐哈尔市",id:"230200",children:[{name:"市辖区",id:"230201"},{name:"龙沙区",id:"230202"},{name:"建华区",id:"230203"},{name:"铁锋区",id:"230204"},{name:"昂昂溪区",id:"230205"},{name:"富拉尔基区",id:"230206"},{name:"碾子山区",id:"230207"},{name:"梅里斯达斡尔族区",id:"230208"},{name:"龙江县",id:"230221"},{name:"依安县",id:"230223"},{name:"泰来县",id:"230224"},{name:"甘南县",id:"230225"},{name:"富裕县",id:"230227"},{name:"克山县",id:"230229"},{name:"克东县",id:"230230"},{name:"拜泉县",id:"230231"},{name:"讷河市",id:"230281"}]},{name:"鸡西市",id:"230300",children:[{name:"市辖区",id:"230301"},{name:"鸡冠区",id:"230302"},{name:"恒山区",id:"230303"},{name:"滴道区",id:"230304"},{name:"梨树区",id:"230305"},{name:"城子河区",id:"230306"},{name:"麻山区",id:"230307"},{name:"鸡东县",id:"230321"},{name:"虎林市",id:"230381"},{name:"密山市",id:"230382"}]},{name:"鹤岗市",id:"230400",children:[{name:"市辖区",id:"230401"},{name:"向阳区",id:"230402"},{name:"工农区",id:"230403"},{name:"南山区",id:"230404"},{name:"兴安区",id:"230405"},{name:"东山区",id:"230406"},{name:"兴山区",id:"230407"},{name:"萝北县",id:"230421"},{name:"绥滨县",id:"230422"}]},{name:"双鸭山市",id:"230500",children:[{name:"市辖区",id:"230501"},{name:"尖山区",id:"230502"},{name:"岭东区",id:"230503"},{name:"四方台区",id:"230505"},{name:"宝山区",id:"230506"},{name:"集贤县",id:"230521"},{name:"友谊县",id:"230522"},{name:"宝清县",id:"230523"},{name:"饶河县",id:"230524"}]},{name:"大庆市",id:"230600",children:[{name:"市辖区",id:"230601"},{name:"萨尔图区",id:"230602"},{name:"龙凤区",id:"230603"},{name:"让胡路区",id:"230604"},{name:"红岗区",id:"230605"},{name:"大同区",id:"230606"},{name:"肇州县",id:"230621"},{name:"肇源县",id:"230622"},{name:"林甸县",id:"230623"},{name:"杜尔伯特蒙古族自治县",id:"230624"}]},{name:"伊春市",id:"230700",children:[{name:"市辖区",id:"230701"},{name:"伊春区",id:"230702"},{name:"南岔区",id:"230703"},{name:"友好区",id:"230704"},{name:"西林区",id:"230705"},{name:"翠峦区",id:"230706"},{name:"新青区",id:"230707"},{name:"美溪区",id:"230708"},{name:"金山屯区",id:"230709"},{name:"五营区",id:"230710"},{name:"乌马河区",id:"230711"},{name:"汤旺河区",id:"230712"},{name:"带岭区",id:"230713"},{name:"乌伊岭区",id:"230714"},{name:"红星区",id:"230715"},{name:"上甘岭区",id:"230716"},{name:"嘉荫县",id:"230722"},{name:"铁力市",id:"230781"}]},{name:"佳木斯市",id:"230800",children:[{name:"市辖区",id:"230801"},{name:"向阳区",id:"230803"},{name:"前进区",id:"230804"},{name:"东风区",id:"230805"},{name:"郊区",id:"230811"},{name:"桦南县",id:"230822"},{name:"桦川县",id:"230826"},{name:"汤原县",id:"230828"},{name:"同江市",id:"230881"},{name:"富锦市",id:"230882"},{name:"抚远市",id:"230883"}]},{name:"七台河市",id:"230900",children:[{name:"市辖区",id:"230901"},{name:"新兴区",id:"230902"},{name:"桃山区",id:"230903"},{name:"茄子河区",id:"230904"},{name:"勃利县",id:"230921"}]},{name:"牡丹江市",id:"231000",children:[{name:"市辖区",id:"231001"},{name:"东安区",id:"231002"},{name:"阳明区",id:"231003"},{name:"爱民区",id:"231004"},{name:"西安区",id:"231005"},{name:"林口县",id:"231025"},{name:"绥芬河市",id:"231081"},{name:"海林市",id:"231083"},{name:"宁安市",id:"231084"},{name:"穆棱市",id:"231085"},{name:"东宁市",id:"231086"}]},{name:"黑河市",id:"231100",children:[{name:"市辖区",id:"231101"},{name:"爱辉区",id:"231102"},{name:"嫩江县",id:"231121"},{name:"逊克县",id:"231123"},{name:"孙吴县",id:"231124"},{name:"北安市",id:"231181"},{name:"五大连池市",id:"231182"}]},{name:"绥化市",id:"231200",children:[{name:"市辖区",id:"231201"},{name:"北林区",id:"231202"},{name:"望奎县",id:"231221"},{name:"兰西县",id:"231222"},{name:"青冈县",id:"231223"},{name:"庆安县",id:"231224"},{name:"明水县",id:"231225"},{name:"绥棱县",id:"231226"},{name:"安达市",id:"231281"},{name:"肇东市",id:"231282"},{name:"海伦市",id:"231283"}]},{name:"大兴安岭地区",id:"232700",children:[{name:"呼玛县",id:"232721"},{name:"塔河县",id:"232722"},{name:"漠河县",id:"232723"}]}]},{name:"上海市",id:"310000",children:[{name:"市辖区",id:"310100",children:[{name:"黄浦区",id:"310101"},{name:"徐汇区",id:"310104"},{name:"长宁区",id:"310105"},{name:"静安区",id:"310106"},{name:"普陀区",id:"310107"},{name:"虹口区",id:"310109"},{name:"杨浦区",id:"310110"},{name:"闵行区",id:"310112"},{name:"宝山区",id:"310113"},{name:"嘉定区",id:"310114"},{name:"浦东新区",id:"310115"},{name:"金山区",id:"310116"},{name:"松江区",id:"310117"},{name:"青浦区",id:"310118"},{name:"奉贤区",id:"310120"},{name:"崇明区",id:"310151"}]}]},{name:"江苏省",id:"320000",children:[{name:"南京市",id:"320100",children:[{name:"市辖区",id:"320101"},{name:"玄武区",id:"320102"},{name:"秦淮区",id:"320104"},{name:"建邺区",id:"320105"},{name:"鼓楼区",id:"320106"},{name:"浦口区",id:"320111"},{name:"栖霞区",id:"320113"},{name:"雨花台区",id:"320114"},{name:"江宁区",id:"320115"},{name:"六合区",id:"320116"},{name:"溧水区",id:"320117"},{name:"高淳区",id:"320118"}]},{name:"无锡市",id:"320200",children:[{name:"市辖区",id:"320201"},{name:"锡山区",id:"320205"},{name:"惠山区",id:"320206"},{name:"滨湖区",id:"320211"},{name:"梁溪区",id:"320213"},{name:"新吴区",id:"320214"},{name:"江阴市",id:"320281"},{name:"宜兴市",id:"320282"}]},{name:"徐州市",id:"320300",children:[{name:"市辖区",id:"320301"},{name:"鼓楼区",id:"320302"},{name:"云龙区",id:"320303"},{name:"贾汪区",id:"320305"},{name:"泉山区",id:"320311"},{name:"铜山区",id:"320312"},{name:"丰县",id:"320321"},{name:"沛县",id:"320322"},{name:"睢宁县",id:"320324"},{name:"新沂市",id:"320381"},{name:"邳州市",id:"320382"}]},{name:"常州市",id:"320400",children:[{name:"市辖区",id:"320401"},{name:"天宁区",id:"320402"},{name:"钟楼区",id:"320404"},{name:"新北区",id:"320411"},{name:"武进区",id:"320412"},{name:"金坛区",id:"320413"},{name:"溧阳市",id:"320481"}]},{name:"苏州市",id:"320500",children:[{name:"市辖区",id:"320501"},{name:"虎丘区",id:"320505"},{name:"吴中区",id:"320506"},{name:"相城区",id:"320507"},{name:"姑苏区",id:"320508"},{name:"吴江区",id:"320509"},{name:"常熟市",id:"320581"},{name:"张家港市",id:"320582"},{name:"昆山市",id:"320583"},{name:"太仓市",id:"320585"}]},{name:"南通市",id:"320600",children:[{name:"市辖区",id:"320601"},{name:"崇川区",id:"320602"},{name:"港闸区",id:"320611"},{name:"通州区",id:"320612"},{name:"海安县",id:"320621"},{name:"如东县",id:"320623"},{name:"启东市",id:"320681"},{name:"如皋市",id:"320682"},{name:"海门市",id:"320684"}]},{name:"连云港市",id:"320700",children:[{name:"市辖区",id:"320701"},{name:"连云区",id:"320703"},{name:"海州区",id:"320706"},{name:"赣榆区",id:"320707"},{name:"东海县",id:"320722"},{name:"灌云县",id:"320723"},{name:"灌南县",id:"320724"}]},{name:"淮安市",id:"320800",children:[{name:"市辖区",id:"320801"},{name:"淮安区",id:"320803"},{name:"淮阴区",id:"320804"},{name:"清江浦区",id:"320812"},{name:"洪泽区",id:"320813"},{name:"涟水县",id:"320826"},{name:"盱眙县",id:"320830"},{name:"金湖县",id:"320831"}]},{name:"盐城市",id:"320900",children:[{name:"市辖区",id:"320901"},{name:"亭湖区",id:"320902"},{name:"盐都区",id:"320903"},{name:"大丰区",id:"320904"},{name:"响水县",id:"320921"},{name:"滨海县",id:"320922"},{name:"阜宁县",id:"320923"},{name:"射阳县",id:"320924"},{name:"建湖县",id:"320925"},{name:"东台市",id:"320981"}]},{name:"扬州市",id:"321000",children:[{name:"市辖区",id:"321001"},{name:"广陵区",id:"321002"},{name:"邗江区",id:"321003"},{name:"江都区",id:"321012"},{name:"宝应县",id:"321023"},{name:"仪征市",id:"321081"},{name:"高邮市",id:"321084"}]},{name:"镇江市",id:"321100",children:[{name:"市辖区",id:"321101"},{name:"京口区",id:"321102"},{name:"润州区",id:"321111"},{name:"丹徒区",id:"321112"},{name:"丹阳市",id:"321181"},{name:"扬中市",id:"321182"},{name:"句容市",id:"321183"}]},{name:"泰州市",id:"321200",children:[{name:"市辖区",id:"321201"},{name:"海陵区",id:"321202"},{name:"高港区",id:"321203"},{name:"姜堰区",id:"321204"},{name:"兴化市",id:"321281"},{name:"靖江市",id:"321282"},{name:"泰兴市",id:"321283"}]},{name:"宿迁市",id:"321300",children:[{name:"市辖区",id:"321301"},{name:"宿城区",id:"321302"},{name:"宿豫区",id:"321311"},{name:"沭阳县",id:"321322"},{name:"泗阳县",id:"321323"},{name:"泗洪县",id:"321324"}]}]},{name:"浙江省",id:"330000",children:[{name:"杭州市",id:"330100",children:[{name:"市辖区",id:"330101"},{name:"上城区",id:"330102"},{name:"下城区",id:"330103"},{name:"江干区",id:"330104"},{name:"拱墅区",id:"330105"},{name:"西湖区",id:"330106"},{name:"滨江区",id:"330108"},{name:"萧山区",id:"330109"},{name:"余杭区",id:"330110"},{name:"富阳区",id:"330111"},{name:"桐庐县",id:"330122"},{name:"淳安县",id:"330127"},{name:"建德市",id:"330182"},{name:"临安市",id:"330185"}]},{name:"宁波市",id:"330200",children:[{name:"市辖区",id:"330201"},{name:"海曙区",id:"330203"},{name:"江东区",id:"330204"},{name:"江北区",id:"330205"},{name:"北仑区",id:"330206"},{name:"镇海区",id:"330211"},{name:"鄞州区",id:"330212"},{name:"象山县",id:"330225"},{name:"宁海县",id:"330226"},{name:"余姚市",id:"330281"},{name:"慈溪市",id:"330282"},{name:"奉化市",id:"330283"}]},{name:"温州市",id:"330300",children:[{name:"市辖区",id:"330301"},{name:"鹿城区",id:"330302"},{name:"龙湾区",id:"330303"},{name:"瓯海区",id:"330304"},{name:"洞头区",id:"330305"},{name:"永嘉县",id:"330324"},{name:"平阳县",id:"330326"},{name:"苍南县",id:"330327"},{name:"文成县",id:"330328"},{name:"泰顺县",id:"330329"},{name:"瑞安市",id:"330381"},{name:"乐清市",id:"330382"}]},{name:"嘉兴市",id:"330400",children:[{name:"市辖区",id:"330401"},{name:"南湖区",id:"330402"},{name:"秀洲区",id:"330411"},{name:"嘉善县",id:"330421"},{name:"海盐县",id:"330424"},{name:"海宁市",id:"330481"},{name:"平湖市",id:"330482"},{name:"桐乡市",id:"330483"}]},{name:"湖州市",id:"330500",children:[{name:"市辖区",id:"330501"},{name:"吴兴区",id:"330502"},{name:"南浔区",id:"330503"},{name:"德清县",id:"330521"},{name:"长兴县",id:"330522"},{name:"安吉县",id:"330523"}]},{name:"绍兴市",id:"330600",children:[{name:"市辖区",id:"330601"},{name:"越城区",id:"330602"},{name:"柯桥区",id:"330603"},{name:"上虞区",id:"330604"},{name:"新昌县",id:"330624"},{name:"诸暨市",id:"330681"},{name:"嵊州市",id:"330683"}]},{name:"金华市",id:"330700",children:[{name:"市辖区",id:"330701"},{name:"婺城区",id:"330702"},{name:"金东区",id:"330703"},{name:"武义县",id:"330723"},{name:"浦江县",id:"330726"},{name:"磐安县",id:"330727"},{name:"兰溪市",id:"330781"},{name:"义乌市",id:"330782"},{name:"东阳市",id:"330783"},{name:"永康市",id:"330784"}]},{name:"衢州市",id:"330800",children:[{name:"市辖区",id:"330801"},{name:"柯城区",id:"330802"},{name:"衢江区",id:"330803"},{name:"常山县",id:"330822"},{name:"开化县",id:"330824"},{name:"龙游县",id:"330825"},{name:"江山市",id:"330881"}]},{name:"舟山市",id:"330900",children:[{name:"市辖区",id:"330901"},{name:"定海区",id:"330902"},{name:"普陀区",id:"330903"},{name:"岱山县",id:"330921"},{name:"嵊泗县",id:"330922"}]},{name:"台州市",id:"331000",children:[{name:"市辖区",id:"331001"},{name:"椒江区",id:"331002"},{name:"黄岩区",id:"331003"},{name:"路桥区",id:"331004"},{name:"玉环县",id:"331021"},{name:"三门县",id:"331022"},{name:"天台县",id:"331023"},{name:"仙居县",id:"331024"},{name:"温岭市",id:"331081"},{name:"临海市",id:"331082"}]},{name:"丽水市",id:"331100",children:[{name:"市辖区",id:"331101"},{name:"莲都区",id:"331102"},{name:"青田县",id:"331121"},{name:"缙云县",id:"331122"},{name:"遂昌县",id:"331123"},{name:"松阳县",id:"331124"},{name:"云和县",id:"331125"},{name:"庆元县",id:"331126"},{name:"景宁畲族自治县",id:"331127"},{name:"龙泉市",id:"331181"}]}]},{name:"安徽省",id:"340000",children:[{name:"合肥市",id:"340100",children:[{name:"市辖区",id:"340101"},{name:"瑶海区",id:"340102"},{name:"庐阳区",id:"340103"},{name:"蜀山区",id:"340104"},{name:"包河区",id:"340111"},{name:"长丰县",id:"340121"},{name:"肥东县",id:"340122"},{name:"肥西县",id:"340123"},{name:"庐江县",id:"340124"},{name:"巢湖市",id:"340181"}]},{name:"芜湖市",id:"340200",children:[{name:"市辖区",id:"340201"},{name:"镜湖区",id:"340202"},{name:"弋江区",id:"340203"},{name:"鸠江区",id:"340207"},{name:"三山区",id:"340208"},{name:"芜湖县",id:"340221"},{name:"繁昌县",id:"340222"},{name:"南陵县",id:"340223"},{name:"无为县",id:"340225"}]},{name:"蚌埠市",id:"340300",children:[{name:"市辖区",id:"340301"},{name:"龙子湖区",id:"340302"},{name:"蚌山区",id:"340303"},{name:"禹会区",id:"340304"},{name:"淮上区",id:"340311"},{name:"怀远县",id:"340321"},{name:"五河县",id:"340322"},{name:"固镇县",id:"340323"}]},{name:"淮南市",id:"340400",children:[{name:"市辖区",id:"340401"},{name:"大通区",id:"340402"},{name:"田家庵区",id:"340403"},{name:"谢家集区",id:"340404"},{name:"八公山区",id:"340405"},{name:"潘集区",id:"340406"},{name:"凤台县",id:"340421"},{name:"寿县",id:"340422"}]},{name:"马鞍山市",id:"340500",children:[{name:"市辖区",id:"340501"},{name:"花山区",id:"340503"},{name:"雨山区",id:"340504"},{name:"博望区",id:"340506"},{name:"当涂县",id:"340521"},{name:"含山县",id:"340522"},{name:"和县",id:"340523"}]},{name:"淮北市",id:"340600",children:[{name:"市辖区",id:"340601"},{name:"杜集区",id:"340602"},{name:"相山区",id:"340603"},{name:"烈山区",id:"340604"},{name:"濉溪县",id:"340621"}]},{name:"铜陵市",id:"340700",children:[{name:"市辖区",id:"340701"},{name:"铜官区",id:"340705"},{name:"义安区",id:"340706"},{name:"郊区",id:"340711"},{name:"枞阳县",id:"340722"}]},{name:"安庆市",id:"340800",children:[{name:"市辖区",id:"340801"},{name:"迎江区",id:"340802"},{name:"大观区",id:"340803"},{name:"宜秀区",id:"340811"},{name:"怀宁县",id:"340822"},{name:"潜山县",id:"340824"},{name:"太湖县",id:"340825"},{name:"宿松县",id:"340826"},{name:"望江县",id:"340827"},{name:"岳西县",id:"340828"},{name:"桐城市",id:"340881"}]},{name:"黄山市",id:"341000",children:[{name:"市辖区",id:"341001"},{name:"屯溪区",id:"341002"},{name:"黄山区",id:"341003"},{name:"徽州区",id:"341004"},{name:"歙县",id:"341021"},{name:"休宁县",id:"341022"},{name:"黟县",id:"341023"},{name:"祁门县",id:"341024"}]},{name:"滁州市",id:"341100",children:[{name:"市辖区",id:"341101"},{name:"琅琊区",id:"341102"},{name:"南谯区",id:"341103"},{name:"来安县",id:"341122"},{name:"全椒县",id:"341124"},{name:"定远县",id:"341125"},{name:"凤阳县",id:"341126"},{name:"天长市",id:"341181"},{name:"明光市",id:"341182"}]},{name:"阜阳市",id:"341200",children:[{name:"市辖区",id:"341201"},{name:"颍州区",id:"341202"},{name:"颍东区",id:"341203"},{name:"颍泉区",id:"341204"},{name:"临泉县",id:"341221"},{name:"太和县",id:"341222"},{name:"阜南县",id:"341225"},{name:"颍上县",id:"341226"},{name:"界首市",id:"341282"}]},{name:"宿州市",id:"341300",children:[{name:"市辖区",id:"341301"},{name:"埇桥区",id:"341302"},{name:"砀山县",id:"341321"},{name:"萧县",id:"341322"},{name:"灵璧县",id:"341323"},{name:"泗县",id:"341324"}]},{name:"六安市",id:"341500",children:[{name:"市辖区",id:"341501"},{name:"金安区",id:"341502"},{name:"裕安区",id:"341503"},{name:"叶集区",id:"341504"},{name:"霍邱县",id:"341522"},{name:"舒城县",id:"341523"},{name:"金寨县",id:"341524"},{name:"霍山县",id:"341525"}]},{name:"亳州市",id:"341600",children:[{name:"市辖区",id:"341601"},{name:"谯城区",id:"341602"},{name:"涡阳县",id:"341621"},{name:"蒙城县",id:"341622"},{name:"利辛县",id:"341623"}]},{name:"池州市",id:"341700",children:[{name:"市辖区",id:"341701"},{name:"贵池区",id:"341702"},{name:"东至县",id:"341721"},{name:"石台县",id:"341722"},{name:"青阳县",id:"341723"}]},{name:"宣城市",id:"341800",children:[{name:"市辖区",id:"341801"},{name:"宣州区",id:"341802"},{name:"郎溪县",id:"341821"},{name:"广德县",id:"341822"},{name:"泾县",id:"341823"},{name:"绩溪县",id:"341824"},{name:"旌德县",id:"341825"},{name:"宁国市",id:"341881"}]}]},{name:"福建省",id:"350000",children:[{name:"福州市",id:"350100",children:[{name:"市辖区",id:"350101"},{name:"鼓楼区",id:"350102"},{name:"台江区",id:"350103"},{name:"仓山区",id:"350104"},{name:"马尾区",id:"350105"},{name:"晋安区",id:"350111"},{name:"闽侯县",id:"350121"},{name:"连江县",id:"350122"},{name:"罗源县",id:"350123"},{name:"闽清县",id:"350124"},{name:"永泰县",id:"350125"},{name:"平潭县",id:"350128"},{name:"福清市",id:"350181"},{name:"长乐市",id:"350182"}]},{name:"厦门市",id:"350200",children:[{name:"市辖区",id:"350201"},{name:"思明区",id:"350203"},{name:"海沧区",id:"350205"},{name:"湖里区",id:"350206"},{name:"集美区",id:"350211"},{name:"同安区",id:"350212"},{name:"翔安区",id:"350213"}]},{name:"莆田市",id:"350300",children:[{name:"市辖区",id:"350301"},{name:"城厢区",id:"350302"},{name:"涵江区",id:"350303"},{name:"荔城区",id:"350304"},{name:"秀屿区",id:"350305"},{name:"仙游县",id:"350322"}]},{name:"三明市",id:"350400",children:[{name:"市辖区",id:"350401"},{name:"梅列区",id:"350402"},{name:"三元区",id:"350403"},{name:"明溪县",id:"350421"},{name:"清流县",id:"350423"},{name:"宁化县",id:"350424"},{name:"大田县",id:"350425"},{name:"尤溪县",id:"350426"},{name:"沙县",id:"350427"},{name:"将乐县",id:"350428"},{name:"泰宁县",id:"350429"},{name:"建宁县",id:"350430"},{name:"永安市",id:"350481"}]},{name:"泉州市",id:"350500",children:[{name:"市辖区",id:"350501"},{name:"鲤城区",id:"350502"},{name:"丰泽区",id:"350503"},{name:"洛江区",id:"350504"},{name:"泉港区",id:"350505"},{name:"惠安县",id:"350521"},{name:"安溪县",id:"350524"},{name:"永春县",id:"350525"},{name:"德化县",id:"350526"},{name:"金门县",id:"350527"},{name:"石狮市",id:"350581"},{name:"晋江市",id:"350582"},{name:"南安市",id:"350583"}]},{name:"漳州市",id:"350600",children:[{name:"市辖区",id:"350601"},{name:"芗城区",id:"350602"},{name:"龙文区",id:"350603"},{name:"云霄县",id:"350622"},{name:"漳浦县",id:"350623"},{name:"诏安县",id:"350624"},{name:"长泰县",id:"350625"},{name:"东山县",id:"350626"},{name:"南靖县",id:"350627"},{name:"平和县",id:"350628"},{name:"华安县",id:"350629"},{name:"龙海市",id:"350681"}]},{name:"南平市",id:"350700",children:[{name:"市辖区",id:"350701"},{name:"延平区",id:"350702"},{name:"建阳区",id:"350703"},{name:"顺昌县",id:"350721"},{name:"浦城县",id:"350722"},{name:"光泽县",id:"350723"},{name:"松溪县",id:"350724"},{name:"政和县",id:"350725"},{name:"邵武市",id:"350781"},{name:"武夷山市",id:"350782"},{name:"建瓯市",id:"350783"}]},{name:"龙岩市",id:"350800",children:[{name:"市辖区",id:"350801"},{name:"新罗区",id:"350802"},{name:"永定区",id:"350803"},{name:"长汀县",id:"350821"},{name:"上杭县",id:"350823"},{name:"武平县",id:"350824"},{name:"连城县",id:"350825"},{name:"漳平市",id:"350881"}]},{name:"宁德市",id:"350900",children:[{name:"市辖区",id:"350901"},{name:"蕉城区",id:"350902"},{name:"霞浦县",id:"350921"},{name:"古田县",id:"350922"},{name:"屏南县",id:"350923"},{name:"寿宁县",id:"350924"},{name:"周宁县",id:"350925"},{name:"柘荣县",id:"350926"},{name:"福安市",id:"350981"},{name:"福鼎市",id:"350982"}]}]},{name:"江西省",id:"360000",children:[{name:"南昌市",id:"360100",children:[{name:"市辖区",id:"360101"},{name:"东湖区",id:"360102"},{name:"西湖区",id:"360103"},{name:"青云谱区",id:"360104"},{name:"湾里区",id:"360105"},{name:"青山湖区",id:"360111"},{name:"新建区",id:"360112"},{name:"南昌县",id:"360121"},{name:"安义县",id:"360123"},{name:"进贤县",id:"360124"}]},{name:"景德镇市",id:"360200",children:[{name:"市辖区",id:"360201"},{name:"昌江区",id:"360202"},{name:"珠山区",id:"360203"},{name:"浮梁县",id:"360222"},{name:"乐平市",id:"360281"}]},{name:"萍乡市",id:"360300",children:[{name:"市辖区",id:"360301"},{name:"安源区",id:"360302"},{name:"湘东区",id:"360313"},{name:"莲花县",id:"360321"},{name:"上栗县",id:"360322"},{name:"芦溪县",id:"360323"}]},{name:"九江市",id:"360400",children:[{name:"市辖区",id:"360401"},{name:"濂溪区",id:"360402"},{name:"浔阳区",id:"360403"},{name:"九江县",id:"360421"},{name:"武宁县",id:"360423"},{name:"修水县",id:"360424"},{name:"永修县",id:"360425"},{name:"德安县",id:"360426"},{name:"都昌县",id:"360428"},{name:"湖口县",id:"360429"},{name:"彭泽县",id:"360430"},{name:"瑞昌市",id:"360481"},{name:"共青城市",id:"360482"},{name:"庐山市",id:"360483"}]},{name:"新余市",id:"360500",children:[{name:"市辖区",id:"360501"},{name:"渝水区",id:"360502"},{name:"分宜县",id:"360521"}]},{name:"鹰潭市",id:"360600",children:[{name:"市辖区",id:"360601"},{name:"月湖区",id:"360602"},{name:"余江县",id:"360622"},{name:"贵溪市",id:"360681"}]},{name:"赣州市",id:"360700",children:[{name:"市辖区",id:"360701"},{name:"章贡区",id:"360702"},{name:"南康区",id:"360703"},{name:"赣县",id:"360721"},{name:"信丰县",id:"360722"},{name:"大余县",id:"360723"},{name:"上犹县",id:"360724"},{name:"崇义县",id:"360725"},{name:"安远县",id:"360726"},{name:"龙南县",id:"360727"},{name:"定南县",id:"360728"},{name:"全南县",id:"360729"},{name:"宁都县",id:"360730"},{name:"于都县",id:"360731"},{name:"兴国县",id:"360732"},{name:"会昌县",id:"360733"},{name:"寻乌县",id:"360734"},{name:"石城县",id:"360735"},{name:"瑞金市",id:"360781"}]},{name:"吉安市",id:"360800",children:[{name:"市辖区",id:"360801"},{name:"吉州区",id:"360802"},{name:"青原区",id:"360803"},{name:"吉安县",id:"360821"},{name:"吉水县",id:"360822"},{name:"峡江县",id:"360823"},{name:"新干县",id:"360824"},{name:"永丰县",id:"360825"},{name:"泰和县",id:"360826"},{name:"遂川县",id:"360827"},{name:"万安县",id:"360828"},{name:"安福县",id:"360829"},{name:"永新县",id:"360830"},{name:"井冈山市",id:"360881"}]},{name:"宜春市",id:"360900",children:[{name:"市辖区",id:"360901"},{name:"袁州区",id:"360902"},{name:"奉新县",id:"360921"},{name:"万载县",id:"360922"},{name:"上高县",id:"360923"},{name:"宜丰县",id:"360924"},{name:"靖安县",id:"360925"},{name:"铜鼓县",id:"360926"},{name:"丰城市",id:"360981"},{name:"樟树市",id:"360982"},{name:"高安市",id:"360983"}]},{name:"抚州市",id:"361000",children:[{name:"市辖区",id:"361001"},{name:"临川区",id:"361002"},{name:"南城县",id:"361021"},{name:"黎川县",id:"361022"},{name:"南丰县",id:"361023"},{name:"崇仁县",id:"361024"},{name:"乐安县",id:"361025"},{name:"宜黄县",id:"361026"},{name:"金溪县",id:"361027"},{name:"资溪县",id:"361028"},{name:"东乡县",id:"361029"},{name:"广昌县",id:"361030"}]},{name:"上饶市",id:"361100",children:[{name:"市辖区",id:"361101"},{name:"信州区",id:"361102"},{name:"广丰区",id:"361103"},{name:"上饶县",id:"361121"},{name:"玉山县",id:"361123"},{name:"铅山县",id:"361124"},{name:"横峰县",id:"361125"},{name:"弋阳县",id:"361126"},{name:"余干县",id:"361127"},{name:"鄱阳县",id:"361128"},{name:"万年县",id:"361129"},{name:"婺源县",id:"361130"},{name:"德兴市",id:"361181"}]}]},{name:"山东省",id:"370000",children:[{name:"济南市",id:"370100",children:[{name:"市辖区",id:"370101"},{name:"历下区",id:"370102"},{name:"市中区",id:"370103"},{name:"槐荫区",id:"370104"},{name:"天桥区",id:"370105"},{name:"历城区",id:"370112"},{name:"长清区",id:"370113"},{name:"平阴县",id:"370124"},{name:"济阳县",id:"370125"},{name:"商河县",id:"370126"},{name:"章丘市",id:"370181"}]},{name:"青岛市",id:"370200",children:[{name:"市辖区",id:"370201"},{name:"市南区",id:"370202"},{name:"市北区",id:"370203"},{name:"黄岛区",id:"370211"},{name:"崂山区",id:"370212"},{name:"李沧区",id:"370213"},{name:"城阳区",id:"370214"},{name:"胶州市",id:"370281"},{name:"即墨市",id:"370282"},{name:"平度市",id:"370283"},{name:"莱西市",id:"370285"}]},{name:"淄博市",id:"370300",children:[{name:"市辖区",id:"370301"},{name:"淄川区",id:"370302"},{name:"张店区",id:"370303"},{name:"博山区",id:"370304"},{name:"临淄区",id:"370305"},{name:"周村区",id:"370306"},{name:"桓台县",id:"370321"},{name:"高青县",id:"370322"},{name:"沂源县",id:"370323"}]},{name:"枣庄市",id:"370400",children:[{name:"市辖区",id:"370401"},{name:"市中区",id:"370402"},{name:"薛城区",id:"370403"},{name:"峄城区",id:"370404"},{name:"台儿庄区",id:"370405"},{name:"山亭区",id:"370406"},{name:"滕州市",id:"370481"}]},{name:"东营市",id:"370500",children:[{name:"市辖区",id:"370501"},{name:"东营区",id:"370502"},{name:"河口区",id:"370503"},{name:"垦利区",id:"370505"},{name:"利津县",id:"370522"},{name:"广饶县",id:"370523"}]},{name:"烟台市",id:"370600",children:[{name:"市辖区",id:"370601"},{name:"芝罘区",id:"370602"},{name:"福山区",id:"370611"},{name:"牟平区",id:"370612"},{name:"莱山区",id:"370613"},{name:"长岛县",id:"370634"},{name:"龙口市",id:"370681"},{name:"莱阳市",id:"370682"},{name:"莱州市",id:"370683"},{name:"蓬莱市",id:"370684"},{name:"招远市",id:"370685"},{name:"栖霞市",id:"370686"},{name:"海阳市",id:"370687"}]},{name:"潍坊市",id:"370700",children:[{name:"市辖区",id:"370701"},{name:"潍城区",id:"370702"},{name:"寒亭区",id:"370703"},{name:"坊子区",id:"370704"},{name:"奎文区",id:"370705"},{name:"临朐县",id:"370724"},{name:"昌乐县",id:"370725"},{name:"青州市",id:"370781"},{name:"诸城市",id:"370782"},{name:"寿光市",id:"370783"},{name:"安丘市",id:"370784"},{name:"高密市",id:"370785"},{name:"昌邑市",id:"370786"}]},{name:"济宁市",id:"370800",children:[{name:"市辖区",id:"370801"},{name:"任城区",id:"370811"},{name:"兖州区",id:"370812"},{name:"微山县",id:"370826"},{name:"鱼台县",id:"370827"},{name:"金乡县",id:"370828"},{name:"嘉祥县",id:"370829"},{name:"汶上县",id:"370830"},{name:"泗水县",id:"370831"},{name:"梁山县",id:"370832"},{name:"曲阜市",id:"370881"},{name:"邹城市",id:"370883"}]},{name:"泰安市",id:"370900",children:[{name:"市辖区",id:"370901"},{name:"泰山区",id:"370902"},{name:"岱岳区",id:"370911"},{name:"宁阳县",id:"370921"},{name:"东平县",id:"370923"},{name:"新泰市",id:"370982"},{name:"肥城市",id:"370983"}]},{name:"威海市",id:"371000",children:[{name:"市辖区",id:"371001"},{name:"环翠区",id:"371002"},{name:"文登区",id:"371003"},{name:"荣成市",id:"371082"},{name:"乳山市",id:"371083"}]},{name:"日照市",id:"371100",children:[{name:"市辖区",id:"371101"},{name:"东港区",id:"371102"},{name:"岚山区",id:"371103"},{name:"五莲县",id:"371121"},{name:"莒县",id:"371122"}]},{name:"莱芜市",id:"371200",children:[{name:"市辖区",id:"371201"},{name:"莱城区",id:"371202"},{name:"钢城区",id:"371203"}]},{name:"临沂市",id:"371300",children:[{name:"市辖区",id:"371301"},{name:"兰山区",id:"371302"},{name:"罗庄区",id:"371311"},{name:"河东区",id:"371312"},{name:"沂南县",id:"371321"},{name:"郯城县",id:"371322"},{name:"沂水县",id:"371323"},{name:"兰陵县",id:"371324"},{name:"费县",id:"371325"},{name:"平邑县",id:"371326"},{name:"莒南县",id:"371327"},{name:"蒙阴县",id:"371328"},{name:"临沭县",id:"371329"}]},{name:"德州市",id:"371400",children:[{name:"市辖区",id:"371401"},{name:"德城区",id:"371402"},{name:"陵城区",id:"371403"},{name:"宁津县",id:"371422"},{name:"庆云县",id:"371423"},{name:"临邑县",id:"371424"},{name:"齐河县",id:"371425"},{name:"平原县",id:"371426"},{name:"夏津县",id:"371427"},{name:"武城县",id:"371428"},{name:"乐陵市",id:"371481"},{name:"禹城市",id:"371482"}]},{name:"聊城市",id:"371500",children:[{name:"市辖区",id:"371501"},{name:"东昌府区",id:"371502"},{name:"阳谷县",id:"371521"},{name:"莘县",id:"371522"},{name:"茌平县",id:"371523"},{name:"东阿县",id:"371524"},{name:"冠县",id:"371525"},{name:"高唐县",id:"371526"},{name:"临清市",id:"371581"}]},{name:"滨州市",id:"371600",children:[{name:"市辖区",id:"371601"},{name:"滨城区",id:"371602"},{name:"沾化区",id:"371603"},{name:"惠民县",id:"371621"},{name:"阳信县",id:"371622"},{name:"无棣县",id:"371623"},{name:"博兴县",id:"371625"},{name:"邹平县",id:"371626"}]},{name:"菏泽市",id:"371700",children:[{name:"市辖区",id:"371701"},{name:"牡丹区",id:"371702"},{name:"定陶区",id:"371703"},{name:"曹县",id:"371721"},{name:"单县",id:"371722"},{name:"成武县",id:"371723"},{name:"巨野县",id:"371724"},{name:"郓城县",id:"371725"},{name:"鄄城县",id:"371726"},{name:"东明县",id:"371728"}]}]},{name:"河南省",id:"410000",children:[{name:"郑州市",id:"410100",children:[{name:"市辖区",id:"410101"},{name:"中原区",id:"410102"},{name:"二七区",id:"410103"},{name:"管城回族区",id:"410104"},{name:"金水区",id:"410105"},{name:"上街区",id:"410106"},{name:"惠济区",id:"410108"},{name:"中牟县",id:"410122"},{name:"巩义市",id:"410181"},{name:"荥阳市",id:"410182"},{name:"新密市",id:"410183"},{name:"新郑市",id:"410184"},{name:"登封市",id:"410185"}]},{name:"开封市",id:"410200",children:[{name:"市辖区",id:"410201"},{name:"龙亭区",id:"410202"},{name:"顺河回族区",id:"410203"},{name:"鼓楼区",id:"410204"},{name:"禹王台区",id:"410205"},{name:"金明区",id:"410211"},{name:"祥符区",id:"410212"},{name:"杞县",id:"410221"},{name:"通许县",id:"410222"},{name:"尉氏县",id:"410223"},{name:"兰考县",id:"410225"}]},{name:"洛阳市",id:"410300",children:[{name:"市辖区",id:"410301"},{name:"老城区",id:"410302"},{name:"西工区",id:"410303"},{name:"瀍河回族区",id:"410304"},{name:"涧西区",id:"410305"},{name:"吉利区",id:"410306"},{name:"洛龙区",id:"410311"},{name:"孟津县",id:"410322"},{name:"新安县",id:"410323"},{name:"栾川县",id:"410324"},{name:"嵩县",id:"410325"},{name:"汝阳县",id:"410326"},{name:"宜阳县",id:"410327"},{name:"洛宁县",id:"410328"},{name:"伊川县",id:"410329"},{name:"偃师市",id:"410381"}]},{name:"平顶山市",id:"410400",children:[{name:"市辖区",id:"410401"},{name:"新华区",id:"410402"},{name:"卫东区",id:"410403"},{name:"石龙区",id:"410404"},{name:"湛河区",id:"410411"},{name:"宝丰县",id:"410421"},{name:"叶县",id:"410422"},{name:"鲁山县",id:"410423"},{name:"郏县",id:"410425"},{name:"舞钢市",id:"410481"},{name:"汝州市",id:"410482"}]},{name:"安阳市",id:"410500",children:[{name:"市辖区",id:"410501"},{name:"文峰区",id:"410502"},{name:"北关区",id:"410503"},{name:"殷都区",id:"410505"},{name:"龙安区",id:"410506"},{name:"安阳县",id:"410522"},{name:"汤阴县",id:"410523"},{name:"滑县",id:"410526"},{name:"内黄县",id:"410527"},{name:"林州市",id:"410581"}]},{name:"鹤壁市",id:"410600",children:[{name:"市辖区",id:"410601"},{name:"鹤山区",id:"410602"},{name:"山城区",id:"410603"},{name:"淇滨区",id:"410611"},{name:"浚县",id:"410621"},{name:"淇县",id:"410622"}]},{name:"新乡市",id:"410700",children:[{name:"市辖区",id:"410701"},{name:"红旗区",id:"410702"},{name:"卫滨区",id:"410703"},{name:"凤泉区",id:"410704"},{name:"牧野区",id:"410711"},{name:"新乡县",id:"410721"},{name:"获嘉县",id:"410724"},{name:"原阳县",id:"410725"},{name:"延津县",id:"410726"},{name:"封丘县",id:"410727"},{name:"长垣县",id:"410728"},{name:"卫辉市",id:"410781"},{name:"辉县市",id:"410782"}]},{name:"焦作市",id:"410800",children:[{name:"市辖区",id:"410801"},{name:"解放区",id:"410802"},{name:"中站区",id:"410803"},{name:"马村区",id:"410804"},{name:"山阳区",id:"410811"},{name:"修武县",id:"410821"},{name:"博爱县",id:"410822"},{name:"武陟县",id:"410823"},{name:"温县",id:"410825"},{name:"沁阳市",id:"410882"},{name:"孟州市",id:"410883"}]},{name:"濮阳市",id:"410900",children:[{name:"市辖区",id:"410901"},{name:"华龙区",id:"410902"},{name:"清丰县",id:"410922"},{name:"南乐县",id:"410923"},{name:"范县",id:"410926"},{name:"台前县",id:"410927"},{name:"濮阳县",id:"410928"}]},{name:"许昌市",id:"411000",children:[{name:"市辖区",id:"411001"},{name:"魏都区",id:"411002"},{name:"许昌县",id:"411023"},{name:"鄢陵县",id:"411024"},{name:"襄城县",id:"411025"},{name:"禹州市",id:"411081"},{name:"长葛市",id:"411082"}]},{name:"漯河市",id:"411100",children:[{name:"市辖区",id:"411101"},{name:"源汇区",id:"411102"},{name:"郾城区",id:"411103"},{name:"召陵区",id:"411104"},{name:"舞阳县",id:"411121"},{name:"临颍县",id:"411122"}]},{name:"三门峡市",id:"411200",children:[{name:"市辖区",id:"411201"},{name:"湖滨区",id:"411202"},{name:"陕州区",id:"411203"},{name:"渑池县",id:"411221"},{name:"卢氏县",id:"411224"},{name:"义马市",id:"411281"},{name:"灵宝市",id:"411282"}]},{name:"南阳市",id:"411300",children:[{name:"市辖区",id:"411301"},{name:"宛城区",id:"411302"},{name:"卧龙区",id:"411303"},{name:"南召县",id:"411321"},{name:"方城县",id:"411322"},{name:"西峡县",id:"411323"},{name:"镇平县",id:"411324"},{name:"内乡县",id:"411325"},{name:"淅川县",id:"411326"},{name:"社旗县",id:"411327"},{name:"唐河县",id:"411328"},{name:"新野县",id:"411329"},{name:"桐柏县",id:"411330"},{name:"邓州市",id:"411381"}]},{name:"商丘市",id:"411400",children:[{name:"市辖区",id:"411401"},{name:"梁园区",id:"411402"},{name:"睢阳区",id:"411403"},{name:"民权县",id:"411421"},{name:"睢县",id:"411422"},{name:"宁陵县",id:"411423"},{name:"柘城县",id:"411424"},{name:"虞城县",id:"411425"},{name:"夏邑县",id:"411426"},{name:"永城市",id:"411481"}]},{name:"信阳市",id:"411500",children:[{name:"市辖区",id:"411501"},{name:"浉河区",id:"411502"},{name:"平桥区",id:"411503"},{name:"罗山县",id:"411521"},{name:"光山县",id:"411522"},{name:"新县",id:"411523"},{name:"商城县",id:"411524"},{name:"固始县",id:"411525"},{name:"潢川县",id:"411526"},{name:"淮滨县",id:"411527"},{name:"息县",id:"411528"}]},{name:"周口市",id:"411600",children:[{name:"市辖区",id:"411601"},{name:"川汇区",id:"411602"},{name:"扶沟县",id:"411621"},{name:"西华县",id:"411622"},{name:"商水县",id:"411623"},{name:"沈丘县",id:"411624"},{name:"郸城县",id:"411625"},{name:"淮阳县",id:"411626"},{name:"太康县",id:"411627"},{name:"鹿邑县",id:"411628"},{name:"项城市",id:"411681"}]},{name:"驻马店市",id:"411700",children:[{name:"市辖区",id:"411701"},{name:"驿城区",id:"411702"},{name:"西平县",id:"411721"},{name:"上蔡县",id:"411722"},{name:"平舆县",id:"411723"},{name:"正阳县",id:"411724"},{name:"确山县",id:"411725"},{name:"泌阳县",id:"411726"},{name:"汝南县",id:"411727"},{name:"遂平县",id:"411728"},{name:"新蔡县",id:"411729"}]},{name:"省直辖县级行政区划",id:"419000",children:[{name:"济源市",id:"419001"}]}]},{name:"湖北省",id:"420000",children:[{name:"武汉市",id:"420100",children:[{name:"市辖区",id:"420101"},{name:"江岸区",id:"420102"},{name:"江汉区",id:"420103"},{name:"硚口区",id:"420104"},{name:"汉阳区",id:"420105"},{name:"武昌区",id:"420106"},{name:"青山区",id:"420107"},{name:"洪山区",id:"420111"},{name:"东西湖区",id:"420112"},{name:"汉南区",id:"420113"},{name:"蔡甸区",id:"420114"},{name:"江夏区",id:"420115"},{name:"黄陂区",id:"420116"},{name:"新洲区",id:"420117"}]},{name:"黄石市",id:"420200",children:[{name:"市辖区",id:"420201"},{name:"黄石港区",id:"420202"},{name:"西塞山区",id:"420203"},{name:"下陆区",id:"420204"},{name:"铁山区",id:"420205"},{name:"阳新县",id:"420222"},{name:"大冶市",id:"420281"}]},{name:"十堰市",id:"420300",children:[{name:"市辖区",id:"420301"},{name:"茅箭区",id:"420302"},{name:"张湾区",id:"420303"},{name:"郧阳区",id:"420304"},{name:"郧西县",id:"420322"},{name:"竹山县",id:"420323"},{name:"竹溪县",id:"420324"},{name:"房县",id:"420325"},{name:"丹江口市",id:"420381"}]},{name:"宜昌市",id:"420500",children:[{name:"市辖区",id:"420501"},{name:"西陵区",id:"420502"},{name:"伍家岗区",id:"420503"},{name:"点军区",id:"420504"},{name:"猇亭区",id:"420505"},{name:"夷陵区",id:"420506"},{name:"远安县",id:"420525"},{name:"兴山县",id:"420526"},{name:"秭归县",id:"420527"},{name:"长阳土家族自治县",id:"420528"},{name:"五峰土家族自治县",id:"420529"},{name:"宜都市",id:"420581"},{name:"当阳市",id:"420582"},{name:"枝江市",id:"420583"}]},{name:"襄阳市",id:"420600",children:[{name:"市辖区",id:"420601"},{name:"襄城区",id:"420602"},{name:"樊城区",id:"420606"},{name:"襄州区",id:"420607"},{name:"南漳县",id:"420624"},{name:"谷城县",id:"420625"},{name:"保康县",id:"420626"},{name:"老河口市",id:"420682"},{name:"枣阳市",id:"420683"},{name:"宜城市",id:"420684"}]},{name:"鄂州市",id:"420700",children:[{name:"市辖区",id:"420701"},{name:"梁子湖区",id:"420702"},{name:"华容区",id:"420703"},{name:"鄂城区",id:"420704"}]},{name:"荆门市",id:"420800",children:[{name:"市辖区",id:"420801"},{name:"东宝区",id:"420802"},{name:"掇刀区",id:"420804"},{name:"京山县",id:"420821"},{name:"沙洋县",id:"420822"},{name:"钟祥市",id:"420881"}]},{name:"孝感市",id:"420900",children:[{name:"市辖区",id:"420901"},{name:"孝南区",id:"420902"},{name:"孝昌县",id:"420921"},{name:"大悟县",id:"420922"},{name:"云梦县",id:"420923"},{name:"应城市",id:"420981"},{name:"安陆市",id:"420982"},{name:"汉川市",id:"420984"}]},{name:"荆州市",id:"421000",children:[{name:"市辖区",id:"421001"},{name:"沙市区",id:"421002"},{name:"荆州区",id:"421003"},{name:"公安县",id:"421022"},{name:"监利县",id:"421023"},{name:"江陵县",id:"421024"},{name:"石首市",id:"421081"},{name:"洪湖市",id:"421083"},{name:"松滋市",id:"421087"}]},{name:"黄冈市",id:"421100",children:[{name:"市辖区",id:"421101"},{name:"黄州区",id:"421102"},{name:"团风县",id:"421121"},{name:"红安县",id:"421122"},{name:"罗田县",id:"421123"},{name:"英山县",id:"421124"},{name:"浠水县",id:"421125"},{name:"蕲春县",id:"421126"},{name:"黄梅县",id:"421127"},{name:"麻城市",id:"421181"},{name:"武穴市",id:"421182"}]},{name:"咸宁市",id:"421200",children:[{name:"市辖区",id:"421201"},{name:"咸安区",id:"421202"},{name:"嘉鱼县",id:"421221"},{name:"通城县",id:"421222"},{name:"崇阳县",id:"421223"},{name:"通山县",id:"421224"},{name:"赤壁市",id:"421281"}]},{name:"随州市",id:"421300",children:[{name:"市辖区",id:"421301"},{name:"曾都区",id:"421303"},{name:"随县",id:"421321"},{name:"广水市",id:"421381"}]},{name:"恩施土家族苗族自治州",id:"422800",children:[{name:"恩施市",id:"422801"},{name:"利川市",id:"422802"},{name:"建始县",id:"422822"},{name:"巴东县",id:"422823"},{name:"宣恩县",id:"422825"},{name:"咸丰县",id:"422826"},{name:"来凤县",id:"422827"},{name:"鹤峰县",id:"422828"}]},{name:"省直辖县级行政区划",id:"429000",children:[{name:"仙桃市",id:"429004"},{name:"潜江市",id:"429005"},{name:"天门市",id:"429006"},{name:"神农架林区",id:"429021"}]}]},{name:"湖南省",id:"430000",children:[{name:"长沙市",id:"430100",children:[{name:"市辖区",id:"430101"},{name:"芙蓉区",id:"430102"},{name:"天心区",id:"430103"},{name:"岳麓区",id:"430104"},{name:"开福区",id:"430105"},{name:"雨花区",id:"430111"},{name:"望城区",id:"430112"},{name:"长沙县",id:"430121"},{name:"宁乡县",id:"430124"},{name:"浏阳市",id:"430181"}]},{name:"株洲市",id:"430200",children:[{name:"市辖区",id:"430201"},{name:"荷塘区",id:"430202"},{name:"芦淞区",id:"430203"},{name:"石峰区",id:"430204"},{name:"天元区",id:"430211"},{name:"株洲县",id:"430221"},{name:"攸县",id:"430223"},{name:"茶陵县",id:"430224"},{name:"炎陵县",id:"430225"},{name:"醴陵市",id:"430281"}]},{name:"湘潭市",id:"430300",children:[{name:"市辖区",id:"430301"},{name:"雨湖区",id:"430302"},{name:"岳塘区",id:"430304"},{name:"湘潭县",id:"430321"},{name:"湘乡市",id:"430381"},{name:"韶山市",id:"430382"}]},{name:"衡阳市",id:"430400",children:[{name:"市辖区",id:"430401"},{name:"珠晖区",id:"430405"},{name:"雁峰区",id:"430406"},{name:"石鼓区",id:"430407"},{name:"蒸湘区",id:"430408"},{name:"南岳区",id:"430412"},{name:"衡阳县",id:"430421"},{name:"衡南县",id:"430422"},{name:"衡山县",id:"430423"},{name:"衡东县",id:"430424"},{name:"祁东县",id:"430426"},{name:"耒阳市",id:"430481"},{name:"常宁市",id:"430482"}]},{name:"邵阳市",id:"430500",children:[{name:"市辖区",id:"430501"},{name:"双清区",id:"430502"},{name:"大祥区",id:"430503"},{name:"北塔区",id:"430511"},{name:"邵东县",id:"430521"},{name:"新邵县",id:"430522"},{name:"邵阳县",id:"430523"},{name:"隆回县",id:"430524"},{name:"洞口县",id:"430525"},{name:"绥宁县",id:"430527"},{name:"新宁县",id:"430528"},{name:"城步苗族自治县",id:"430529"},{name:"武冈市",id:"430581"}]},{name:"岳阳市",id:"430600",children:[{name:"市辖区",id:"430601"},{name:"岳阳楼区",id:"430602"},{name:"云溪区",id:"430603"},{name:"君山区",id:"430611"},{name:"岳阳县",id:"430621"},{name:"华容县",id:"430623"},{name:"湘阴县",id:"430624"},{name:"平江县",id:"430626"},{name:"汨罗市",id:"430681"},{name:"临湘市",id:"430682"}]},{name:"常德市",id:"430700",children:[{name:"市辖区",id:"430701"},{name:"武陵区",id:"430702"},{name:"鼎城区",id:"430703"},{name:"安乡县",id:"430721"},{name:"汉寿县",id:"430722"},{name:"澧县",id:"430723"},{name:"临澧县",id:"430724"},{name:"桃源县",id:"430725"},{name:"石门县",id:"430726"},{name:"津市市",id:"430781"}]},{name:"张家界市",id:"430800",children:[{name:"市辖区",id:"430801"},{name:"永定区",id:"430802"},{name:"武陵源区",id:"430811"},{name:"慈利县",id:"430821"},{name:"桑植县",id:"430822"}]},{name:"益阳市",id:"430900",children:[{name:"市辖区",id:"430901"},{name:"资阳区",id:"430902"},{name:"赫山区",id:"430903"},{name:"南县",id:"430921"},{name:"桃江县",id:"430922"},{name:"安化县",id:"430923"},{name:"沅江市",id:"430981"}]},{name:"郴州市",id:"431000",children:[{name:"市辖区",id:"431001"},{name:"北湖区",id:"431002"},{name:"苏仙区",id:"431003"},{name:"桂阳县",id:"431021"},{name:"宜章县",id:"431022"},{name:"永兴县",id:"431023"},{name:"嘉禾县",id:"431024"},{name:"临武县",id:"431025"},{name:"汝城县",id:"431026"},{name:"桂东县",id:"431027"},{name:"安仁县",id:"431028"},{name:"资兴市",id:"431081"}]},{name:"永州市",id:"431100",children:[{name:"市辖区",id:"431101"},{name:"零陵区",id:"431102"},{name:"冷水滩区",id:"431103"},{name:"祁阳县",id:"431121"},{name:"东安县",id:"431122"},{name:"双牌县",id:"431123"},{name:"道县",id:"431124"},{name:"江永县",id:"431125"},{name:"宁远县",id:"431126"},{name:"蓝山县",id:"431127"},{name:"新田县",id:"431128"},{name:"江华瑶族自治县",id:"431129"}]},{name:"怀化市",id:"431200",children:[{name:"市辖区",id:"431201"},{name:"鹤城区",id:"431202"},{name:"中方县",id:"431221"},{name:"沅陵县",id:"431222"},{name:"辰溪县",id:"431223"},{name:"溆浦县",id:"431224"},{name:"会同县",id:"431225"},{name:"麻阳苗族自治县",id:"431226"},{name:"新晃侗族自治县",id:"431227"},{name:"芷江侗族自治县",id:"431228"},{name:"靖州苗族侗族自治县",id:"431229"},{name:"通道侗族自治县",id:"431230"},{name:"洪江市",id:"431281"}]},{name:"娄底市",id:"431300",children:[{name:"市辖区",id:"431301"},{name:"娄星区",id:"431302"},{name:"双峰县",id:"431321"},{name:"新化县",id:"431322"},{name:"冷水江市",id:"431381"},{name:"涟源市",id:"431382"}]},{name:"湘西土家族苗族自治州",id:"433100",children:[{name:"吉首市",id:"433101"},{name:"泸溪县",id:"433122"},{name:"凤凰县",id:"433123"},{name:"花垣县",id:"433124"},{name:"保靖县",id:"433125"},{name:"古丈县",id:"433126"},{name:"永顺县",id:"433127"},{name:"龙山县",id:"433130"}]}]},{name:"广东省",id:"440000",children:[{name:"广州市",id:"440100",children:[{name:"市辖区",id:"440101"},{name:"荔湾区",id:"440103"},{name:"越秀区",id:"440104"},{name:"海珠区",id:"440105"},{name:"天河区",id:"440106"},{name:"白云区",id:"440111"},{name:"黄埔区",id:"440112"},{name:"番禺区",id:"440113"},{name:"花都区",id:"440114"},{name:"南沙区",id:"440115"},{name:"从化区",id:"440117"},{name:"增城区",id:"440118"}]},{name:"韶关市",id:"440200",children:[{name:"市辖区",id:"440201"},{name:"武江区",id:"440203"},{name:"浈江区",id:"440204"},{name:"曲江区",id:"440205"},{name:"始兴县",id:"440222"},{name:"仁化县",id:"440224"},{name:"翁源县",id:"440229"},{name:"乳源瑶族自治县",id:"440232"},{name:"新丰县",id:"440233"},{name:"乐昌市",id:"440281"},{name:"南雄市",id:"440282"}]},{name:"深圳市",id:"440300",children:[{name:"市辖区",id:"440301"},{name:"罗湖区",id:"440303"},{name:"福田区",id:"440304"},{name:"南山区",id:"440305"},{name:"宝安区",id:"440306"},{name:"龙岗区",id:"440307"},{name:"盐田区",id:"440308"}]},{name:"珠海市",id:"440400",children:[{name:"市辖区",id:"440401"},{name:"香洲区",id:"440402"},{name:"斗门区",id:"440403"},{name:"金湾区",id:"440404"}]},{name:"汕头市",id:"440500",children:[{name:"市辖区",id:"440501"},{name:"龙湖区",id:"440507"},{name:"金平区",id:"440511"},{name:"濠江区",id:"440512"},{name:"潮阳区",id:"440513"},{name:"潮南区",id:"440514"},{name:"澄海区",id:"440515"},{name:"南澳县",id:"440523"}]},{name:"佛山市",id:"440600",children:[{name:"市辖区",id:"440601"},{name:"禅城区",id:"440604"},{name:"南海区",id:"440605"},{name:"顺德区",id:"440606"},{name:"三水区",id:"440607"},{name:"高明区",id:"440608"}]},{name:"江门市",id:"440700",children:[{name:"市辖区",id:"440701"},{name:"蓬江区",id:"440703"},{name:"江海区",id:"440704"},{name:"新会区",id:"440705"},{name:"台山市",id:"440781"},{name:"开平市",id:"440783"},{name:"鹤山市",id:"440784"},{name:"恩平市",id:"440785"}]},{name:"湛江市",id:"440800",children:[{name:"市辖区",id:"440801"},{name:"赤坎区",id:"440802"},{name:"霞山区",id:"440803"},{name:"坡头区",id:"440804"},{name:"麻章区",id:"440811"},{name:"遂溪县",id:"440823"},{name:"徐闻县",id:"440825"},{name:"廉江市",id:"440881"},{name:"雷州市",id:"440882"},{name:"吴川市",id:"440883"}]},{name:"茂名市",id:"440900",children:[{name:"市辖区",id:"440901"},{name:"茂南区",id:"440902"},{name:"电白区",id:"440904"},{name:"高州市",id:"440981"},{name:"化州市",id:"440982"},{name:"信宜市",id:"440983"}]},{name:"肇庆市",id:"441200",children:[{name:"市辖区",id:"441201"},{name:"端州区",id:"441202"},{name:"鼎湖区",id:"441203"},{name:"高要区",id:"441204"},{name:"广宁县",id:"441223"},{name:"怀集县",id:"441224"},{name:"封开县",id:"441225"},{name:"德庆县",id:"441226"},{name:"四会市",id:"441284"}]},{name:"惠州市",id:"441300",children:[{name:"市辖区",id:"441301"},{name:"惠城区",id:"441302"},{name:"惠阳区",id:"441303"},{name:"博罗县",id:"441322"},{name:"惠东县",id:"441323"},{name:"龙门县",id:"441324"}]},{name:"梅州市",id:"441400",children:[{name:"市辖区",id:"441401"},{name:"梅江区",id:"441402"},{name:"梅县区",id:"441403"},{name:"大埔县",id:"441422"},{name:"丰顺县",id:"441423"},{name:"五华县",id:"441424"},{name:"平远县",id:"441426"},{name:"蕉岭县",id:"441427"},{name:"兴宁市",id:"441481"}]},{name:"汕尾市",id:"441500",children:[{name:"市辖区",id:"441501"},{name:"城区",id:"441502"},{name:"海丰县",id:"441521"},{name:"陆河县",id:"441523"},{name:"陆丰市",id:"441581"}]},{name:"河源市",id:"441600",children:[{name:"市辖区",id:"441601"},{name:"源城区",id:"441602"},{name:"紫金县",id:"441621"},{name:"龙川县",id:"441622"},{name:"连平县",id:"441623"},{name:"和平县",id:"441624"},{name:"东源县",id:"441625"}]},{name:"阳江市",id:"441700",children:[{name:"市辖区",id:"441701"},{name:"江城区",id:"441702"},{name:"阳东区",id:"441704"},{name:"阳西县",id:"441721"},{name:"阳春市",id:"441781"}]},{name:"清远市",id:"441800",children:[{name:"市辖区",id:"441801"},{name:"清城区",id:"441802"},{name:"清新区",id:"441803"},{name:"佛冈县",id:"441821"},{name:"阳山县",id:"441823"},{name:"连山壮族瑶族自治县",id:"441825"},{name:"连南瑶族自治县",id:"441826"},{name:"英德市",id:"441881"},{name:"连州市",id:"441882"}]},{name:"东莞市",id:"441900",children:[]},{name:"中山市",id:"442000",children:[]},{name:"潮州市",id:"445100",children:[{name:"市辖区",id:"445101"},{name:"湘桥区",id:"445102"},{name:"潮安区",id:"445103"},{name:"饶平县",id:"445122"}]},{name:"揭阳市",id:"445200",children:[{name:"市辖区",id:"445201"},{name:"榕城区",id:"445202"},{name:"揭东区",id:"445203"},{name:"揭西县",id:"445222"},{name:"惠来县",id:"445224"},{name:"普宁市",id:"445281"}]},{name:"云浮市",id:"445300",children:[{name:"市辖区",id:"445301"},{name:"云城区",id:"445302"},{name:"云安区",id:"445303"},{name:"新兴县",id:"445321"},{name:"郁南县",id:"445322"},{name:"罗定市",id:"445381"}]}]},{name:"广西壮族自治区",id:"450000",children:[{name:"南宁市",id:"450100",children:[{name:"市辖区",id:"450101"},{name:"兴宁区",id:"450102"},{name:"青秀区",id:"450103"},{name:"江南区",id:"450105"},{name:"西乡塘区",id:"450107"},{name:"良庆区",id:"450108"},{name:"邕宁区",id:"450109"},{name:"武鸣区",id:"450110"},{name:"隆安县",id:"450123"},{name:"马山县",id:"450124"},{name:"上林县",id:"450125"},{name:"宾阳县",id:"450126"},{name:"横县",id:"450127"}]},{name:"柳州市",id:"450200",children:[{name:"市辖区",id:"450201"},{name:"城中区",id:"450202"},{name:"鱼峰区",id:"450203"},{name:"柳南区",id:"450204"},{name:"柳北区",id:"450205"},{name:"柳江区",id:"450206"},{name:"柳城县",id:"450222"},{name:"鹿寨县",id:"450223"},{name:"融安县",id:"450224"},{name:"融水苗族自治县",id:"450225"},{name:"三江侗族自治县",id:"450226"}]},{name:"桂林市",id:"450300",children:[{name:"市辖区",id:"450301"},{name:"秀峰区",id:"450302"},{name:"叠彩区",id:"450303"},{name:"象山区",id:"450304"},{name:"七星区",id:"450305"},{name:"雁山区",id:"450311"},{name:"临桂区",id:"450312"},{name:"阳朔县",id:"450321"},{name:"灵川县",id:"450323"},{name:"全州县",id:"450324"},{name:"兴安县",id:"450325"},{name:"永福县",id:"450326"},{name:"灌阳县",id:"450327"},{name:"龙胜各族自治县",id:"450328"},{name:"资源县",id:"450329"},{name:"平乐县",id:"450330"},{name:"荔浦县",id:"450331"},{name:"恭城瑶族自治县",id:"450332"}]},{name:"梧州市",id:"450400",children:[{name:"市辖区",id:"450401"},{name:"万秀区",id:"450403"},{name:"长洲区",id:"450405"},{name:"龙圩区",id:"450406"},{name:"苍梧县",id:"450421"},{name:"藤县",id:"450422"},{name:"蒙山县",id:"450423"},{name:"岑溪市",id:"450481"}]},{name:"北海市",id:"450500",children:[{name:"市辖区",id:"450501"},{name:"海城区",id:"450502"},{name:"银海区",id:"450503"},{name:"铁山港区",id:"450512"},{name:"合浦县",id:"450521"}]},{name:"防城港市",id:"450600",children:[{name:"市辖区",id:"450601"},{name:"港口区",id:"450602"},{name:"防城区",id:"450603"},{name:"上思县",id:"450621"},{name:"东兴市",id:"450681"}]},{name:"钦州市",id:"450700",children:[{name:"市辖区",id:"450701"},{name:"钦南区",id:"450702"},{name:"钦北区",id:"450703"},{name:"灵山县",id:"450721"},{name:"浦北县",id:"450722"}]},{name:"贵港市",id:"450800",children:[{name:"市辖区",id:"450801"},{name:"港北区",id:"450802"},{name:"港南区",id:"450803"},{name:"覃塘区",id:"450804"},{name:"平南县",id:"450821"},{name:"桂平市",id:"450881"}]},{name:"玉林市",id:"450900",children:[{name:"市辖区",id:"450901"},{name:"玉州区",id:"450902"},{name:"福绵区",id:"450903"},{name:"容县",id:"450921"},{name:"陆川县",id:"450922"},{name:"博白县",id:"450923"},{name:"兴业县",id:"450924"},{name:"北流市",id:"450981"}]},{name:"百色市",id:"451000",children:[{name:"市辖区",id:"451001"},{name:"右江区",id:"451002"},{name:"田阳县",id:"451021"},{name:"田东县",id:"451022"},{name:"平果县",id:"451023"},{name:"德保县",id:"451024"},{name:"那坡县",id:"451026"},{name:"凌云县",id:"451027"},{name:"乐业县",id:"451028"},{name:"田林县",id:"451029"},{name:"西林县",id:"451030"},{name:"隆林各族自治县",id:"451031"},{name:"靖西市",id:"451081"}]},{name:"贺州市",id:"451100",children:[{name:"市辖区",id:"451101"},{name:"八步区",id:"451102"},{name:"平桂区",id:"451103"},{name:"昭平县",id:"451121"},{name:"钟山县",id:"451122"},{name:"富川瑶族自治县",id:"451123"}]},{name:"河池市",id:"451200",children:[{name:"市辖区",id:"451201"},{name:"金城江区",id:"451202"},{name:"南丹县",id:"451221"},{name:"天峨县",id:"451222"},{name:"凤山县",id:"451223"},{name:"东兰县",id:"451224"},{name:"罗城仫佬族自治县",id:"451225"},{name:"环江毛南族自治县",id:"451226"},{name:"巴马瑶族自治县",id:"451227"},{name:"都安瑶族自治县",id:"451228"},{name:"大化瑶族自治县",id:"451229"},{name:"宜州市",id:"451281"}]},{name:"来宾市",id:"451300",children:[{name:"市辖区",id:"451301"},{name:"兴宾区",id:"451302"},{name:"忻城县",id:"451321"},{name:"象州县",id:"451322"},{name:"武宣县",id:"451323"},{name:"金秀瑶族自治县",id:"451324"},{name:"合山市",id:"451381"}]},{name:"崇左市",id:"451400",children:[{name:"市辖区",id:"451401"},{name:"江州区",id:"451402"},{name:"扶绥县",id:"451421"},{name:"宁明县",id:"451422"},{name:"龙州县",id:"451423"},{name:"大新县",id:"451424"},{name:"天等县",id:"451425"},{name:"凭祥市",id:"451481"}]}]},{name:"海南省",id:"460000",children:[{name:"海口市",id:"460100",children:[{name:"市辖区",id:"460101"},{name:"秀英区",id:"460105"},{name:"龙华区",id:"460106"},{name:"琼山区",id:"460107"},{name:"美兰区",id:"460108"}]},{name:"三亚市",id:"460200",children:[{name:"市辖区",id:"460201"},{name:"海棠区",id:"460202"},{name:"吉阳区",id:"460203"},{name:"天涯区",id:"460204"},{name:"崖州区",id:"460205"}]},{name:"三沙市",id:"460300",children:[]},{name:"儋州市",id:"460400",children:[]},{name:"省直辖县级行政区划",id:"469000",children:[{name:"五指山市",id:"469001"},{name:"琼海市",id:"469002"},{name:"文昌市",id:"469005"},{name:"万宁市",id:"469006"},{name:"东方市",id:"469007"},{name:"定安县",id:"469021"},{name:"屯昌县",id:"469022"},{name:"澄迈县",id:"469023"},{name:"临高县",id:"469024"},{name:"白沙黎族自治县",id:"469025"},{name:"昌江黎族自治县",id:"469026"},{name:"乐东黎族自治县",id:"469027"},{name:"陵水黎族自治县",id:"469028"},{name:"保亭黎族苗族自治县",id:"469029"},{name:"琼中黎族苗族自治县",id:"469030"}]}]},{name:"重庆市",id:"500000",children:[{name:"市辖区",id:"500100",children:[{name:"万州区",id:"500101"},{name:"涪陵区",id:"500102"},{name:"渝中区",id:"500103"},{name:"大渡口区",id:"500104"},{name:"江北区",id:"500105"},{name:"沙坪坝区",id:"500106"},{name:"九龙坡区",id:"500107"},{name:"南岸区",id:"500108"},{name:"北碚区",id:"500109"},{name:"綦江区",id:"500110"},{name:"大足区",id:"500111"},{name:"渝北区",id:"500112"},{name:"巴南区",id:"500113"},{name:"黔江区",id:"500114"},{name:"长寿区",id:"500115"},{name:"江津区",id:"500116"},{name:"合川区",id:"500117"},{name:"永川区",id:"500118"},{name:"南川区",id:"500119"},{name:"璧山区",id:"500120"},{name:"铜梁区",id:"500151"},{name:"潼南区",id:"500152"},{name:"荣昌区",id:"500153"},{name:"开州区",id:"500154"}]},{name:"县",id:"500200",children:[{name:"梁平县",id:"500228"},{name:"城口县",id:"500229"},{name:"丰都县",id:"500230"},{name:"垫江县",id:"500231"},{name:"武隆县",id:"500232"},{name:"忠县",id:"500233"},{name:"云阳县",id:"500235"},{name:"奉节县",id:"500236"},{name:"巫山县",id:"500237"},{name:"巫溪县",id:"500238"},{name:"石柱土家族自治县",id:"500240"},{name:"秀山土家族苗族自治县",id:"500241"},{name:"酉阳土家族苗族自治县",id:"500242"},{name:"彭水苗族土家族自治县",id:"500243"}]}]},{name:"四川省",id:"510000",children:[{name:"成都市",id:"510100",children:[{name:"市辖区",id:"510101"},{name:"锦江区",id:"510104"},{name:"青羊区",id:"510105"},{name:"金牛区",id:"510106"},{name:"武侯区",id:"510107"},{name:"成华区",id:"510108"},{name:"龙泉驿区",id:"510112"},{name:"青白江区",id:"510113"},{name:"新都区",id:"510114"},{name:"温江区",id:"510115"},{name:"双流区",id:"510116"},{name:"金堂县",id:"510121"},{name:"郫县",id:"510124"},{name:"大邑县",id:"510129"},{name:"蒲江县",id:"510131"},{name:"新津县",id:"510132"},{name:"都江堰市",id:"510181"},{name:"彭州市",id:"510182"},{name:"邛崃市",id:"510183"},{name:"崇州市",id:"510184"},{name:"简阳市",id:"510185"}]},{name:"自贡市",id:"510300",children:[{name:"市辖区",id:"510301"},{name:"自流井区",id:"510302"},{name:"贡井区",id:"510303"},{name:"大安区",id:"510304"},{name:"沿滩区",id:"510311"},{name:"荣县",id:"510321"},{name:"富顺县",id:"510322"}]},{name:"攀枝花市",id:"510400",children:[{name:"市辖区",id:"510401"},{name:"东区",id:"510402"},{name:"西区",id:"510403"},{name:"仁和区",id:"510411"},{name:"米易县",id:"510421"},{name:"盐边县",id:"510422"}]},{name:"泸州市",id:"510500",children:[{name:"市辖区",id:"510501"},{name:"江阳区",id:"510502"},{name:"纳溪区",id:"510503"},{name:"龙马潭区",id:"510504"},{name:"泸县",id:"510521"},{name:"合江县",id:"510522"},{name:"叙永县",id:"510524"},{name:"古蔺县",id:"510525"}]},{name:"德阳市",id:"510600",children:[{name:"市辖区",id:"510601"},{name:"旌阳区",id:"510603"},{name:"中江县",id:"510623"},{name:"罗江县",id:"510626"},{name:"广汉市",id:"510681"},{name:"什邡市",id:"510682"},{name:"绵竹市",id:"510683"}]},{name:"绵阳市",id:"510700",children:[{name:"市辖区",id:"510701"},{name:"涪城区",id:"510703"},{name:"游仙区",id:"510704"},{name:"安州区",id:"510705"},{name:"三台县",id:"510722"},{name:"盐亭县",id:"510723"},{name:"梓潼县",id:"510725"},{name:"北川羌族自治县",id:"510726"},{name:"平武县",id:"510727"},{name:"江油市",id:"510781"}]},{name:"广元市",id:"510800",children:[{name:"市辖区",id:"510801"},{name:"利州区",id:"510802"},{name:"昭化区",id:"510811"},{name:"朝天区",id:"510812"},{name:"旺苍县",id:"510821"},{name:"青川县",id:"510822"},{name:"剑阁县",id:"510823"},{name:"苍溪县",id:"510824"}]},{name:"遂宁市",id:"510900",children:[{name:"市辖区",id:"510901"},{name:"船山区",id:"510903"},{name:"安居区",id:"510904"},{name:"蓬溪县",id:"510921"},{name:"射洪县",id:"510922"},{name:"大英县",id:"510923"}]},{name:"内江市",id:"511000",children:[{name:"市辖区",id:"511001"},{name:"市中区",id:"511002"},{name:"东兴区",id:"511011"},{name:"威远县",id:"511024"},{name:"资中县",id:"511025"},{name:"隆昌县",id:"511028"}]},{name:"乐山市",id:"511100",children:[{name:"市辖区",id:"511101"},{name:"市中区",id:"511102"},{name:"沙湾区",id:"511111"},{name:"五通桥区",id:"511112"},{name:"金口河区",id:"511113"},{name:"犍为县",id:"511123"},{name:"井研县",id:"511124"},{name:"夹江县",id:"511126"},{name:"沐川县",id:"511129"},{name:"峨边彝族自治县",id:"511132"},{name:"马边彝族自治县",id:"511133"},{name:"峨眉山市",id:"511181"}]},{name:"南充市",id:"511300",children:[{name:"市辖区",id:"511301"},{name:"顺庆区",id:"511302"},{name:"高坪区",id:"511303"},{name:"嘉陵区",id:"511304"},{name:"南部县",id:"511321"},{name:"营山县",id:"511322"},{name:"蓬安县",id:"511323"},{name:"仪陇县",id:"511324"},{name:"西充县",id:"511325"},{name:"阆中市",id:"511381"}]},{name:"眉山市",id:"511400",children:[{name:"市辖区",id:"511401"},{name:"东坡区",id:"511402"},{name:"彭山区",id:"511403"},{name:"仁寿县",id:"511421"},{name:"洪雅县",id:"511423"},{name:"丹棱县",id:"511424"},{name:"青神县",id:"511425"}]},{name:"宜宾市",id:"511500",children:[{name:"市辖区",id:"511501"},{name:"翠屏区",id:"511502"},{name:"南溪区",id:"511503"},{name:"宜宾县",id:"511521"},{name:"江安县",id:"511523"},{name:"长宁县",id:"511524"},{name:"高县",id:"511525"},{name:"珙县",id:"511526"},{name:"筠连县",id:"511527"},{name:"兴文县",id:"511528"},{name:"屏山县",id:"511529"}]},{name:"广安市",id:"511600",children:[{name:"市辖区",id:"511601"},{name:"广安区",id:"511602"},{name:"前锋区",id:"511603"},{name:"岳池县",id:"511621"},{name:"武胜县",id:"511622"},{name:"邻水县",id:"511623"},{name:"华蓥市",id:"511681"}]},{name:"达州市",id:"511700",children:[{name:"市辖区",id:"511701"},{name:"通川区",id:"511702"},{name:"达川区",id:"511703"},{name:"宣汉县",id:"511722"},{name:"开江县",id:"511723"},{name:"大竹县",id:"511724"},{name:"渠县",id:"511725"},{name:"万源市",id:"511781"}]},{name:"雅安市",id:"511800",children:[{name:"市辖区",id:"511801"},{name:"雨城区",id:"511802"},{name:"名山区",id:"511803"},{name:"荥经县",id:"511822"},{name:"汉源县",id:"511823"},{name:"石棉县",id:"511824"},{name:"天全县",id:"511825"},{name:"芦山县",id:"511826"},{name:"宝兴县",id:"511827"}]},{name:"巴中市",id:"511900",children:[{name:"市辖区",id:"511901"},{name:"巴州区",id:"511902"},{name:"恩阳区",id:"511903"},{name:"通江县",id:"511921"},{name:"南江县",id:"511922"},{name:"平昌县",id:"511923"}]},{name:"资阳市",id:"512000",children:[{name:"市辖区",id:"512001"},{name:"雁江区",id:"512002"},{name:"安岳县",id:"512021"},{name:"乐至县",id:"512022"}]},{name:"阿坝藏族羌族自治州",id:"513200",children:[{name:"马尔康市",id:"513201"},{name:"汶川县",id:"513221"},{name:"理县",id:"513222"},{name:"茂县",id:"513223"},{name:"松潘县",id:"513224"},{name:"九寨沟县",id:"513225"},{name:"金川县",id:"513226"},{name:"小金县",id:"513227"},{name:"黑水县",id:"513228"},{name:"壤塘县",id:"513230"},{name:"阿坝县",id:"513231"},{name:"若尔盖县",id:"513232"},{name:"红原县",id:"513233"}]},{name:"甘孜藏族自治州",id:"513300",children:[{name:"康定市",id:"513301"},{name:"泸定县",id:"513322"},{name:"丹巴县",id:"513323"},{name:"九龙县",id:"513324"},{name:"雅江县",id:"513325"},{name:"道孚县",id:"513326"},{name:"炉霍县",id:"513327"},{name:"甘孜县",id:"513328"},{name:"新龙县",id:"513329"},{name:"德格县",id:"513330"},{name:"白玉县",id:"513331"},{name:"石渠县",id:"513332"},{name:"色达县",id:"513333"},{name:"理塘县",id:"513334"},{name:"巴塘县",id:"513335"},{name:"乡城县",id:"513336"},{name:"稻城县",id:"513337"},{name:"得荣县",id:"513338"}]},{name:"凉山彝族自治州",id:"513400",children:[{name:"西昌市",id:"513401"},{name:"木里藏族自治县",id:"513422"},{name:"盐源县",id:"513423"},{name:"德昌县",id:"513424"},{name:"会理县",id:"513425"},{name:"会东县",id:"513426"},{name:"宁南县",id:"513427"},{name:"普格县",id:"513428"},{name:"布拖县",id:"513429"},{name:"金阳县",id:"513430"},{name:"昭觉县",id:"513431"},{name:"喜德县",id:"513432"},{name:"冕宁县",id:"513433"},{name:"越西县",id:"513434"},{name:"甘洛县",id:"513435"},{name:"美姑县",id:"513436"},{name:"雷波县",id:"513437"}]}]},{name:"贵州省",id:"520000",children:[{name:"贵阳市",id:"520100",children:[{name:"市辖区",id:"520101"},{name:"南明区",id:"520102"},{name:"云岩区",id:"520103"},{name:"花溪区",id:"520111"},{name:"乌当区",id:"520112"},{name:"白云区",id:"520113"},{name:"观山湖区",id:"520115"},{name:"开阳县",id:"520121"},{name:"息烽县",id:"520122"},{name:"修文县",id:"520123"},{name:"清镇市",id:"520181"}]},{name:"六盘水市",id:"520200",children:[{name:"钟山区",id:"520201"},{name:"六枝特区",id:"520203"},{name:"水城县",id:"520221"},{name:"盘县",id:"520222"}]},{name:"遵义市",id:"520300",children:[{name:"市辖区",id:"520301"},{name:"红花岗区",id:"520302"},{name:"汇川区",id:"520303"},{name:"播州区",id:"520304"},{name:"桐梓县",id:"520322"},{name:"绥阳县",id:"520323"},{name:"正安县",id:"520324"},{name:"道真仡佬族苗族自治县",id:"520325"},{name:"务川仡佬族苗族自治县",id:"520326"},{name:"凤冈县",id:"520327"},{name:"湄潭县",id:"520328"},{name:"余庆县",id:"520329"},{name:"习水县",id:"520330"},{name:"赤水市",id:"520381"},{name:"仁怀市",id:"520382"}]},{name:"安顺市",id:"520400",children:[{name:"市辖区",id:"520401"},{name:"西秀区",id:"520402"},{name:"平坝区",id:"520403"},{name:"普定县",id:"520422"},{name:"镇宁布依族苗族自治县",id:"520423"},{name:"关岭布依族苗族自治县",id:"520424"},{name:"紫云苗族布依族自治县",id:"520425"}]},{name:"毕节市",id:"520500",children:[{name:"市辖区",id:"520501"},{name:"七星关区",id:"520502"},{name:"大方县",id:"520521"},{name:"黔西县",id:"520522"},{name:"金沙县",id:"520523"},{name:"织金县",id:"520524"},{name:"纳雍县",id:"520525"},{name:"威宁彝族回族苗族自治县",id:"520526"},{name:"赫章县",id:"520527"}]},{name:"铜仁市",id:"520600",children:[{name:"市辖区",id:"520601"},{name:"碧江区",id:"520602"},{name:"万山区",id:"520603"},{name:"江口县",id:"520621"},{name:"玉屏侗族自治县",id:"520622"},{name:"石阡县",id:"520623"},{name:"思南县",id:"520624"},{name:"印江土家族苗族自治县",id:"520625"},{name:"德江县",id:"520626"},{name:"沿河土家族自治县",id:"520627"},{name:"松桃苗族自治县",id:"520628"}]},{name:"黔西南布依族苗族自治州",id:"522300",children:[{name:"兴义市",id:"522301"},{name:"兴仁县",id:"522322"},{name:"普安县",id:"522323"},{name:"晴隆县",id:"522324"},{name:"贞丰县",id:"522325"},{name:"望谟县",id:"522326"},{name:"册亨县",id:"522327"},{name:"安龙县",id:"522328"}]},{name:"黔东南苗族侗族自治州",id:"522600",children:[{name:"凯里市",id:"522601"},{name:"黄平县",id:"522622"},{name:"施秉县",id:"522623"},{name:"三穗县",id:"522624"},{name:"镇远县",id:"522625"},{name:"岑巩县",id:"522626"},{name:"天柱县",id:"522627"},{name:"锦屏县",id:"522628"},{name:"剑河县",id:"522629"},{name:"台江县",id:"522630"},{name:"黎平县",id:"522631"},{name:"榕江县",id:"522632"},{name:"从江县",id:"522633"},{name:"雷山县",id:"522634"},{name:"麻江县",id:"522635"},{name:"丹寨县",id:"522636"}]},{name:"黔南布依族苗族自治州",id:"522700",children:[{name:"都匀市",id:"522701"},{name:"福泉市",id:"522702"},{name:"荔波县",id:"522722"},{name:"贵定县",id:"522723"},{name:"瓮安县",id:"522725"},{name:"独山县",id:"522726"},{name:"平塘县",id:"522727"},{name:"罗甸县",id:"522728"},{name:"长顺县",id:"522729"},{name:"龙里县",id:"522730"},{name:"惠水县",id:"522731"},{name:"三都水族自治县",id:"522732"}]}]},{name:"云南省",id:"530000",children:[{name:"昆明市",id:"530100",children:[{name:"市辖区",id:"530101"},{name:"五华区",id:"530102"},{name:"盘龙区",id:"530103"},{name:"官渡区",id:"530111"},{name:"西山区",id:"530112"},{name:"东川区",id:"530113"},{name:"呈贡区",id:"530114"},{name:"晋宁县",id:"530122"},{name:"富民县",id:"530124"},{name:"宜良县",id:"530125"},{name:"石林彝族自治县",id:"530126"},{name:"嵩明县",id:"530127"},{name:"禄劝彝族苗族自治县",id:"530128"},{name:"寻甸回族彝族自治县",id:"530129"},{name:"安宁市",id:"530181"}]},{name:"曲靖市",id:"530300",children:[{name:"市辖区",id:"530301"},{name:"麒麟区",id:"530302"},{name:"沾益区",id:"530303"},{name:"马龙县",id:"530321"},{name:"陆良县",id:"530322"},{name:"师宗县",id:"530323"},{name:"罗平县",id:"530324"},{name:"富源县",id:"530325"},{name:"会泽县",id:"530326"},{name:"宣威市",id:"530381"}]},{name:"玉溪市",id:"530400",children:[{name:"市辖区",id:"530401"},{name:"红塔区",id:"530402"},{name:"江川区",id:"530403"},{name:"澄江县",id:"530422"},{name:"通海县",id:"530423"},{name:"华宁县",id:"530424"},{name:"易门县",id:"530425"},{name:"峨山彝族自治县",id:"530426"},{name:"新平彝族傣族自治县",id:"530427"},{name:"元江哈尼族彝族傣族自治县",id:"530428"}]},{name:"保山市",id:"530500",children:[{name:"市辖区",id:"530501"},{name:"隆阳区",id:"530502"},{name:"施甸县",id:"530521"},{name:"龙陵县",id:"530523"},{name:"昌宁县",id:"530524"},{name:"腾冲市",id:"530581"}]},{name:"昭通市",id:"530600",children:[{name:"市辖区",id:"530601"},{name:"昭阳区",id:"530602"},{name:"鲁甸县",id:"530621"},{name:"巧家县",id:"530622"},{name:"盐津县",id:"530623"},{name:"大关县",id:"530624"},{name:"永善县",id:"530625"},{name:"绥江县",id:"530626"},{name:"镇雄县",id:"530627"},{name:"彝良县",id:"530628"},{name:"威信县",id:"530629"},{name:"水富县",id:"530630"}]},{name:"丽江市",id:"530700",children:[{name:"市辖区",id:"530701"},{name:"古城区",id:"530702"},{name:"玉龙纳西族自治县",id:"530721"},{name:"永胜县",id:"530722"},{name:"华坪县",id:"530723"},{name:"宁蒗彝族自治县",id:"530724"}]},{name:"普洱市",id:"530800",children:[{name:"市辖区",id:"530801"},{name:"思茅区",id:"530802"},{name:"宁洱哈尼族彝族自治县",id:"530821"},{name:"墨江哈尼族自治县",id:"530822"},{name:"景东彝族自治县",id:"530823"},{name:"景谷傣族彝族自治县",id:"530824"},{name:"镇沅彝族哈尼族拉祜族自治县",id:"530825"},{name:"江城哈尼族彝族自治县",id:"530826"},{name:"孟连傣族拉祜族佤族自治县",id:"530827"},{name:"澜沧拉祜族自治县",id:"530828"},{name:"西盟佤族自治县",id:"530829"}]},{name:"临沧市",id:"530900",children:[{name:"市辖区",id:"530901"},{name:"临翔区",id:"530902"},{name:"凤庆县",id:"530921"},{name:"云县",id:"530922"},{name:"永德县",id:"530923"},{name:"镇康县",id:"530924"},{name:"双江拉祜族佤族布朗族傣族自治县",id:"530925"},{name:"耿马傣族佤族自治县",id:"530926"},{name:"沧源佤族自治县",id:"530927"}]},{name:"楚雄彝族自治州",id:"532300",children:[{name:"楚雄市",id:"532301"},{name:"双柏县",id:"532322"},{name:"牟定县",id:"532323"},{name:"南华县",id:"532324"},{name:"姚安县",id:"532325"},{name:"大姚县",id:"532326"},{name:"永仁县",id:"532327"},{name:"元谋县",id:"532328"},{name:"武定县",id:"532329"},{name:"禄丰县",id:"532331"}]},{name:"红河哈尼族彝族自治州",id:"532500",children:[{name:"个旧市",id:"532501"},{name:"开远市",id:"532502"},{name:"蒙自市",id:"532503"},{name:"弥勒市",id:"532504"},{name:"屏边苗族自治县",id:"532523"},{name:"建水县",id:"532524"},{name:"石屏县",id:"532525"},{name:"泸西县",id:"532527"},{name:"元阳县",id:"532528"},{name:"红河县",id:"532529"},{name:"金平苗族瑶族傣族自治县",id:"532530"},{name:"绿春县",id:"532531"},{name:"河口瑶族自治县",id:"532532"}]},{name:"文山壮族苗族自治州",id:"532600",children:[{name:"文山市",id:"532601"},{name:"砚山县",id:"532622"},{name:"西畴县",id:"532623"},{name:"麻栗坡县",id:"532624"},{name:"马关县",id:"532625"},{name:"丘北县",id:"532626"},{name:"广南县",id:"532627"},{name:"富宁县",id:"532628"}]},{name:"西双版纳傣族自治州",id:"532800",children:[{name:"景洪市",id:"532801"},{name:"勐海县",id:"532822"},{name:"勐腊县",id:"532823"}]},{name:"大理白族自治州",id:"532900",children:[{name:"大理市",id:"532901"},{name:"漾濞彝族自治县",id:"532922"},{name:"祥云县",id:"532923"},{name:"宾川县",id:"532924"},{name:"弥渡县",id:"532925"},{name:"南涧彝族自治县",id:"532926"},{name:"巍山彝族回族自治县",id:"532927"},{name:"永平县",id:"532928"},{name:"云龙县",id:"532929"},{name:"洱源县",id:"532930"},{name:"剑川县",id:"532931"},{name:"鹤庆县",id:"532932"}]},{name:"德宏傣族景颇族自治州",id:"533100",children:[{name:"瑞丽市",id:"533102"},{name:"芒市",id:"533103"},{name:"梁河县",id:"533122"},{name:"盈江县",id:"533123"},{name:"陇川县",id:"533124"}]},{name:"怒江傈僳族自治州",id:"533300",children:[{name:"泸水市",id:"533301"},{name:"福贡县",id:"533323"},{name:"贡山独龙族怒族自治县",id:"533324"},{name:"兰坪白族普米族自治县",id:"533325"}]},{name:"迪庆藏族自治州",id:"533400",children:[{name:"香格里拉市",id:"533401"},{name:"德钦县",id:"533422"},{name:"维西傈僳族自治县",id:"533423"}]}]},{name:"西藏自治区",id:"540000",children:[{name:"拉萨市",id:"540100",children:[{name:"市辖区",id:"540101"},{name:"城关区",id:"540102"},{name:"堆龙德庆区",id:"540103"},{name:"林周县",id:"540121"},{name:"当雄县",id:"540122"},{name:"尼木县",id:"540123"},{name:"曲水县",id:"540124"},{name:"达孜县",id:"540126"},{name:"墨竹工卡县",id:"540127"}]},{name:"日喀则市",id:"540200",children:[{name:"桑珠孜区",id:"540202"},{name:"南木林县",id:"540221"},{name:"江孜县",id:"540222"},{name:"定日县",id:"540223"},{name:"萨迦县",id:"540224"},{name:"拉孜县",id:"540225"},{name:"昂仁县",id:"540226"},{name:"谢通门县",id:"540227"},{name:"白朗县",id:"540228"},{name:"仁布县",id:"540229"},{name:"康马县",id:"540230"},{name:"定结县",id:"540231"},{name:"仲巴县",id:"540232"},{name:"亚东县",id:"540233"},{name:"吉隆县",id:"540234"},{name:"聂拉木县",id:"540235"},{name:"萨嘎县",id:"540236"},{name:"岗巴县",id:"540237"}]},{name:"昌都市",id:"540300",children:[{name:"卡若区",id:"540302"},{name:"江达县",id:"540321"},{name:"贡觉县",id:"540322"},{name:"类乌齐县",id:"540323"},{name:"丁青县",id:"540324"},{name:"察雅县",id:"540325"},{name:"八宿县",id:"540326"},{name:"左贡县",id:"540327"},{name:"芒康县",id:"540328"},{name:"洛隆县",id:"540329"},{name:"边坝县",id:"540330"}]},{name:"林芝市",id:"540400",children:[{name:"巴宜区",id:"540402"},{name:"工布江达县",id:"540421"},{name:"米林县",id:"540422"},{name:"墨脱县",id:"540423"},{name:"波密县",id:"540424"},{name:"察隅县",id:"540425"},{name:"朗县",id:"540426"}]},{name:"山南市",id:"540500",children:[{name:"市辖区",id:"540501"},{name:"乃东区",id:"540502"},{name:"扎囊县",id:"540521"},{name:"贡嘎县",id:"540522"},{name:"桑日县",id:"540523"},{name:"琼结县",id:"540524"},{name:"曲松县",id:"540525"},{name:"措美县",id:"540526"},{name:"洛扎县",id:"540527"},{name:"加查县",id:"540528"},{name:"隆子县",id:"540529"},{name:"错那县",id:"540530"},{name:"浪卡子县",id:"540531"}]},{name:"那曲地区",id:"542400",children:[{name:"那曲县",id:"542421"},{name:"嘉黎县",id:"542422"},{name:"比如县",id:"542423"},{name:"聂荣县",id:"542424"},{name:"安多县",id:"542425"},{name:"申扎县",id:"542426"},{name:"索县",id:"542427"},{name:"班戈县",id:"542428"},{name:"巴青县",id:"542429"},{name:"尼玛县",id:"542430"},{name:"双湖县",id:"542431"}]},{name:"阿里地区",id:"542500",children:[{name:"普兰县",id:"542521"},{name:"札达县",id:"542522"},{name:"噶尔县",id:"542523"},{name:"日土县",id:"542524"},{name:"革吉县",id:"542525"},{name:"改则县",id:"542526"},{name:"措勤县",id:"542527"}]}]},{name:"陕西省",id:"610000",children:[{name:"西安市",id:"610100",children:[{name:"市辖区",id:"610101"},{name:"新城区",id:"610102"},{name:"碑林区",id:"610103"},{name:"莲湖区",id:"610104"},{name:"灞桥区",id:"610111"},{name:"未央区",id:"610112"},{name:"雁塔区",id:"610113"},{name:"阎良区",id:"610114"},{name:"临潼区",id:"610115"},{name:"长安区",id:"610116"},{name:"高陵区",id:"610117"},{name:"蓝田县",id:"610122"},{name:"周至县",id:"610124"},{name:"户县",id:"610125"}]},{name:"铜川市",id:"610200",children:[{name:"市辖区",id:"610201"},{name:"王益区",id:"610202"},{name:"印台区",id:"610203"},{name:"耀州区",id:"610204"},{name:"宜君县",id:"610222"}]},{name:"宝鸡市",id:"610300",children:[{name:"市辖区",id:"610301"},{name:"渭滨区",id:"610302"},{name:"金台区",id:"610303"},{name:"陈仓区",id:"610304"},{name:"凤翔县",id:"610322"},{name:"岐山县",id:"610323"},{name:"扶风县",id:"610324"},{name:"眉县",id:"610326"},{name:"陇县",id:"610327"},{name:"千阳县",id:"610328"},{name:"麟游县",id:"610329"},{name:"凤县",id:"610330"},{name:"太白县",id:"610331"}]},{name:"咸阳市",id:"610400",children:[{name:"市辖区",id:"610401"},{name:"秦都区",id:"610402"},{name:"杨陵区",id:"610403"},{name:"渭城区",id:"610404"},{name:"三原县",id:"610422"},{name:"泾阳县",id:"610423"},{name:"乾县",id:"610424"},{name:"礼泉县",id:"610425"},{name:"永寿县",id:"610426"},{name:"彬县",id:"610427"},{name:"长武县",id:"610428"},{name:"旬邑县",id:"610429"},{name:"淳化县",id:"610430"},{name:"武功县",id:"610431"},{name:"兴平市",id:"610481"}]},{name:"渭南市",id:"610500",children:[{name:"市辖区",id:"610501"},{name:"临渭区",id:"610502"},{name:"华州区",id:"610503"},{name:"潼关县",id:"610522"},{name:"大荔县",id:"610523"},{name:"合阳县",id:"610524"},{name:"澄城县",id:"610525"},{name:"蒲城县",id:"610526"},{name:"白水县",id:"610527"},{name:"富平县",id:"610528"},{name:"韩城市",id:"610581"},{name:"华阴市",id:"610582"}]},{name:"延安市",id:"610600",children:[{name:"市辖区",id:"610601"},{name:"宝塔区",id:"610602"},{name:"安塞区",id:"610603"},{name:"延长县",id:"610621"},{name:"延川县",id:"610622"},{name:"子长县",id:"610623"},{name:"志丹县",id:"610625"},{name:"吴起县",id:"610626"},{name:"甘泉县",id:"610627"},{name:"富县",id:"610628"},{name:"洛川县",id:"610629"},{name:"宜川县",id:"610630"},{name:"黄龙县",id:"610631"},{name:"黄陵县",id:"610632"}]},{name:"汉中市",id:"610700",children:[{name:"市辖区",id:"610701"},{name:"汉台区",id:"610702"},{name:"南郑县",id:"610721"},{name:"城固县",id:"610722"},{name:"洋县",id:"610723"},{name:"西乡县",id:"610724"},{name:"勉县",id:"610725"},{name:"宁强县",id:"610726"},{name:"略阳县",id:"610727"},{name:"镇巴县",id:"610728"},{name:"留坝县",id:"610729"},{name:"佛坪县",id:"610730"}]},{name:"榆林市",id:"610800",children:[{name:"市辖区",id:"610801"},{name:"榆阳区",id:"610802"},{name:"横山区",id:"610803"},{name:"神木县",id:"610821"},{name:"府谷县",id:"610822"},{name:"靖边县",id:"610824"},{name:"定边县",id:"610825"},{name:"绥德县",id:"610826"},{name:"米脂县",id:"610827"},{name:"佳县",id:"610828"},{name:"吴堡县",id:"610829"},{name:"清涧县",id:"610830"},{name:"子洲县",id:"610831"}]},{name:"安康市",id:"610900",children:[{name:"市辖区",id:"610901"},{name:"汉滨区",id:"610902"},{name:"汉阴县",id:"610921"},{name:"石泉县",id:"610922"},{name:"宁陕县",id:"610923"},{name:"紫阳县",id:"610924"},{name:"岚皋县",id:"610925"},{name:"平利县",id:"610926"},{name:"镇坪县",id:"610927"},{name:"旬阳县",id:"610928"},{name:"白河县",id:"610929"}]},{name:"商洛市",id:"611000",children:[{name:"市辖区",id:"611001"},{name:"商州区",id:"611002"},{name:"洛南县",id:"611021"},{name:"丹凤县",id:"611022"},{name:"商南县",id:"611023"},{name:"山阳县",id:"611024"},{name:"镇安县",id:"611025"},{name:"柞水县",id:"611026"}]}]},{name:"甘肃省",id:"620000",children:[{name:"兰州市",id:"620100",children:[{name:"市辖区",id:"620101"},{name:"城关区",id:"620102"},{name:"七里河区",id:"620103"},{name:"西固区",id:"620104"},{name:"安宁区",id:"620105"},{name:"红古区",id:"620111"},{name:"永登县",id:"620121"},{name:"皋兰县",id:"620122"},{name:"榆中县",id:"620123"}]},{name:"嘉峪关市",id:"620200",children:[{name:"市辖区",id:"620201"}]},{name:"金昌市",id:"620300",children:[{name:"市辖区",id:"620301"},{name:"金川区",id:"620302"},{name:"永昌县",id:"620321"}]},{name:"白银市",id:"620400",children:[{name:"市辖区",id:"620401"},{name:"白银区",id:"620402"},{name:"平川区",id:"620403"},{name:"靖远县",id:"620421"},{name:"会宁县",id:"620422"},{name:"景泰县",id:"620423"}]},{name:"天水市",id:"620500",children:[{name:"市辖区",id:"620501"},{name:"秦州区",id:"620502"},{name:"麦积区",id:"620503"},{name:"清水县",id:"620521"},{name:"秦安县",id:"620522"},{name:"甘谷县",id:"620523"},{name:"武山县",id:"620524"},{name:"张家川回族自治县",id:"620525"}]},{name:"武威市",id:"620600",children:[{name:"市辖区",id:"620601"},{name:"凉州区",id:"620602"},{name:"民勤县",id:"620621"},{name:"古浪县",id:"620622"},{name:"天祝藏族自治县",id:"620623"}]},{name:"张掖市",id:"620700",children:[{name:"市辖区",id:"620701"},{name:"甘州区",id:"620702"},{name:"肃南裕固族自治县",id:"620721"},{name:"民乐县",id:"620722"},{name:"临泽县",id:"620723"},{name:"高台县",id:"620724"},{name:"山丹县",id:"620725"}]},{name:"平凉市",id:"620800",children:[{name:"市辖区",id:"620801"},{name:"崆峒区",id:"620802"},{name:"泾川县",id:"620821"},{name:"灵台县",id:"620822"},{name:"崇信县",id:"620823"},{name:"华亭县",id:"620824"},{name:"庄浪县",id:"620825"},{name:"静宁县",id:"620826"}]},{name:"酒泉市",id:"620900",children:[{name:"市辖区",id:"620901"},{name:"肃州区",id:"620902"},{name:"金塔县",id:"620921"},{name:"瓜州县",id:"620922"},{name:"肃北蒙古族自治县",id:"620923"},{name:"阿克塞哈萨克族自治县",id:"620924"},{name:"玉门市",id:"620981"},{name:"敦煌市",id:"620982"}]},{name:"庆阳市",id:"621000",children:[{name:"市辖区",id:"621001"},{name:"西峰区",id:"621002"},{name:"庆城县",id:"621021"},{name:"环县",id:"621022"},{name:"华池县",id:"621023"},{name:"合水县",id:"621024"},{name:"正宁县",id:"621025"},{name:"宁县",id:"621026"},{name:"镇原县",id:"621027"}]},{name:"定西市",id:"621100",children:[{name:"市辖区",id:"621101"},{name:"安定区",id:"621102"},{name:"通渭县",id:"621121"},{name:"陇西县",id:"621122"},{name:"渭源县",id:"621123"},{name:"临洮县",id:"621124"},{name:"漳县",id:"621125"},{name:"岷县",id:"621126"}]},{name:"陇南市",id:"621200",children:[{name:"市辖区",id:"621201"},{name:"武都区",id:"621202"},{name:"成县",id:"621221"},{name:"文县",id:"621222"},{name:"宕昌县",id:"621223"},{name:"康县",id:"621224"},{name:"西和县",id:"621225"},{name:"礼县",id:"621226"},{name:"徽县",id:"621227"},{name:"两当县",id:"621228"}]},{name:"临夏回族自治州",id:"622900",children:[{name:"临夏市",id:"622901"},{name:"临夏县",id:"622921"},{name:"康乐县",id:"622922"},{name:"永靖县",id:"622923"},{name:"广河县",id:"622924"},{name:"和政县",id:"622925"},{name:"东乡族自治县",id:"622926"},{name:"积石山保安族东乡族撒拉族自治县",id:"622927"}]},{name:"甘南藏族自治州",id:"623000",children:[{name:"合作市",id:"623001"},{name:"临潭县",id:"623021"},{name:"卓尼县",id:"623022"},{name:"舟曲县",id:"623023"},{name:"迭部县",id:"623024"},{name:"玛曲县",id:"623025"},{name:"碌曲县",id:"623026"},{name:"夏河县",id:"623027"}]}]},{name:"青海省",id:"630000",children:[{name:"西宁市",id:"630100",children:[{name:"市辖区",id:"630101"},{name:"城东区",id:"630102"},{name:"城中区",id:"630103"},{name:"城西区",id:"630104"},{name:"城北区",id:"630105"},{name:"大通回族土族自治县",id:"630121"},{name:"湟中县",id:"630122"},{name:"湟源县",id:"630123"}]},{name:"海东市",id:"630200",children:[{name:"乐都区",id:"630202"},{name:"平安区",id:"630203"},{name:"民和回族土族自治县",id:"630222"},{name:"互助土族自治县",id:"630223"},{name:"化隆回族自治县",id:"630224"},{name:"循化撒拉族自治县",id:"630225"}]},{name:"海北藏族自治州",id:"632200",children:[{name:"门源回族自治县",id:"632221"},{name:"祁连县",id:"632222"},{name:"海晏县",id:"632223"},{name:"刚察县",id:"632224"}]},{name:"黄南藏族自治州",id:"632300",children:[{name:"同仁县",id:"632321"},{name:"尖扎县",id:"632322"},{name:"泽库县",id:"632323"},{name:"河南蒙古族自治县",id:"632324"}]},{name:"海南藏族自治州",id:"632500",children:[{name:"共和县",id:"632521"},{name:"同德县",id:"632522"},{name:"贵德县",id:"632523"},{name:"兴海县",id:"632524"},{name:"贵南县",id:"632525"}]},{name:"果洛藏族自治州",id:"632600",children:[{name:"玛沁县",id:"632621"},{name:"班玛县",id:"632622"},{name:"甘德县",id:"632623"},{name:"达日县",id:"632624"},{name:"久治县",id:"632625"},{name:"玛多县",id:"632626"}]},{name:"玉树藏族自治州",id:"632700",children:[{name:"玉树市",id:"632701"},{name:"杂多县",id:"632722"},{name:"称多县",id:"632723"},{name:"治多县",id:"632724"},{name:"囊谦县",id:"632725"},{name:"曲麻莱县",id:"632726"}]},{name:"海西蒙古族藏族自治州",id:"632800",children:[{name:"格尔木市",id:"632801"},{name:"德令哈市",id:"632802"},{name:"乌兰县",id:"632821"},{name:"都兰县",id:"632822"},{name:"天峻县",id:"632823"}]}]},{name:"宁夏回族自治区",id:"640000",children:[{name:"银川市",id:"640100",children:[{name:"市辖区",id:"640101"},{name:"兴庆区",id:"640104"},{name:"西夏区",id:"640105"},{name:"金凤区",id:"640106"},{name:"永宁县",id:"640121"},{name:"贺兰县",id:"640122"},{name:"灵武市",id:"640181"}]},{name:"石嘴山市",id:"640200",children:[{name:"市辖区",id:"640201"},{name:"大武口区",id:"640202"},{name:"惠农区",id:"640205"},{name:"平罗县",id:"640221"}]},{name:"吴忠市",id:"640300",children:[{name:"市辖区",id:"640301"},{name:"利通区",id:"640302"},{name:"红寺堡区",id:"640303"},{name:"盐池县",id:"640323"},{name:"同心县",id:"640324"},{name:"青铜峡市",id:"640381"}]},{name:"固原市",id:"640400",children:[{name:"市辖区",id:"640401"},{name:"原州区",id:"640402"},{name:"西吉县",id:"640422"},{name:"隆德县",id:"640423"},{name:"泾源县",id:"640424"},{name:"彭阳县",id:"640425"}]},{name:"中卫市",id:"640500",children:[{name:"市辖区",id:"640501"},{name:"沙坡头区",id:"640502"},{name:"中宁县",id:"640521"},{name:"海原县",id:"640522"}]}]},{name:"新疆维吾尔自治区",id:"650000",children:[{name:"乌鲁木齐市",id:"650100",children:[{name:"市辖区",id:"650101"},{name:"天山区",id:"650102"},{name:"沙依巴克区",id:"650103"},{name:"新市区",id:"650104"},{name:"水磨沟区",id:"650105"},{name:"头屯河区",id:"650106"},{name:"达坂城区",id:"650107"},{name:"米东区",id:"650109"},{name:"乌鲁木齐县",id:"650121"}]},{name:"克拉玛依市",id:"650200",children:[{name:"市辖区",id:"650201"},{name:"独山子区",id:"650202"},{name:"克拉玛依区",id:"650203"},{name:"白碱滩区",id:"650204"},{name:"乌尔禾区",id:"650205"}]},{name:"吐鲁番市",id:"650400",children:[{name:"高昌区",id:"650402"},{name:"鄯善县",id:"650421"},{name:"托克逊县",id:"650422"}]},{name:"哈密市",id:"650500",children:[{name:"伊州区",id:"650502"},{name:"巴里坤哈萨克自治县",id:"650521"},{name:"伊吾县",id:"650522"}]},{name:"昌吉回族自治州",id:"652300",children:[{name:"昌吉市",id:"652301"},{name:"阜康市",id:"652302"},{name:"呼图壁县",id:"652323"},{name:"玛纳斯县",id:"652324"},{name:"奇台县",id:"652325"},{name:"吉木萨尔县",id:"652327"},{name:"木垒哈萨克自治县",id:"652328"}]},{name:"博尔塔拉蒙古自治州",id:"652700",children:[{name:"博乐市",id:"652701"},{name:"阿拉山口市",id:"652702"},{name:"精河县",id:"652722"},{name:"温泉县",id:"652723"}]},{name:"巴音郭楞蒙古自治州",id:"652800",children:[{name:"库尔勒市",id:"652801"},{name:"轮台县",id:"652822"},{name:"尉犁县",id:"652823"},{name:"若羌县",id:"652824"},{name:"且末县",id:"652825"},{name:"焉耆回族自治县",id:"652826"},{name:"和静县",id:"652827"},{name:"和硕县",id:"652828"},{name:"博湖县",id:"652829"}]},{name:"阿克苏地区",id:"652900",children:[{name:"阿克苏市",id:"652901"},{name:"温宿县",id:"652922"},{name:"库车县",id:"652923"},{name:"沙雅县",id:"652924"},{name:"新和县",id:"652925"},{name:"拜城县",id:"652926"},{name:"乌什县",id:"652927"},{name:"阿瓦提县",id:"652928"},{name:"柯坪县",id:"652929"}]},{name:"克孜勒苏柯尔克孜自治州",id:"653000",children:[{name:"阿图什市",id:"653001"},{name:"阿克陶县",id:"653022"},{name:"阿合奇县",id:"653023"},{name:"乌恰县",id:"653024"}]},{name:"喀什地区",id:"653100",children:[{name:"喀什市",id:"653101"},{name:"疏附县",id:"653121"},{name:"疏勒县",id:"653122"},{name:"英吉沙县",id:"653123"},{name:"泽普县",id:"653124"},{name:"莎车县",id:"653125"},{name:"叶城县",id:"653126"},{name:"麦盖提县",id:"653127"},{name:"岳普湖县",id:"653128"},{name:"伽师县",id:"653129"},{name:"巴楚县",id:"653130"},{name:"塔什库尔干塔吉克自治县",id:"653131"}]},{name:"和田地区",id:"653200",children:[{name:"和田市",id:"653201"},{name:"和田县",id:"653221"},{name:"墨玉县",id:"653222"},{name:"皮山县",id:"653223"},{name:"洛浦县",id:"653224"},{name:"策勒县",id:"653225"},{name:"于田县",id:"653226"},{name:"民丰县",id:"653227"}]},{name:"伊犁哈萨克自治州",id:"654000",children:[{name:"伊宁市",id:"654002"},{name:"奎屯市",id:"654003"},{name:"霍尔果斯市",id:"654004"},{name:"伊宁县",id:"654021"},{name:"察布查尔锡伯自治县",id:"654022"},{name:"霍城县",id:"654023"},{name:"巩留县",id:"654024"},{name:"新源县",id:"654025"},{name:"昭苏县",id:"654026"},{name:"特克斯县",id:"654027"},{name:"尼勒克县",id:"654028"}]},{name:"塔城地区",id:"654200",children:[{name:"塔城市",id:"654201"},{name:"乌苏市",id:"654202"},{name:"额敏县",id:"654221"},{name:"沙湾县",id:"654223"},{name:"托里县",id:"654224"},{name:"裕民县",id:"654225"},{name:"和布克赛尔蒙古自治县",id:"654226"}]},{name:"阿勒泰地区",id:"654300",children:[{name:"阿勒泰市",id:"654301"},{name:"布尔津县",id:"654321"},{name:"富蕴县",id:"654322"},{name:"福海县",id:"654323"},{name:"哈巴河县",id:"654324"},{name:"青河县",id:"654325"},{name:"吉木乃县",id:"654326"}]},{name:"自治区直辖县级行政区划",id:"659000",children:[{name:"石河子市",id:"659001"},{name:"阿拉尔市",id:"659002"},{name:"图木舒克市",id:"659003"},{name:"五家渠市",id:"659004"},{name:"铁门关市",id:"659006"}]}]},{name:"台湾省",id:"710000"},{name:"香港特别行政区",id:"810000"},{name:"澳门特别行政区",id:"820000"}]},"./mock/api/column/list.json":
/*!***********************************!*\
  !*** ./mock/api/column/list.json ***!
  \***********************************/
/*! exports provided: 0, 1, 2, 3, 4, 5, default */function(e){e.exports=[{id:1,key:"name",name:"名字",isEdit:!1,required:!1,validator:"",validMsg:"",visible:!0,width:null,align:"",type:null,seq:1,link:"https://www.baidu.com/",describe:"",createTime:1550923830095,updateTime:1550105830095},{id:2,key:"age",name:"年龄",isEdit:!0,required:!0,validator:"",validMsg:"",visible:!0,width:"140",align:"center",type:null,seq:2,link:"",describe:"",createTime:1550923830095,updateTime:1550205830095},{id:3,key:"date",name:"日期",isEdit:!0,required:!1,validator:"",validMsg:"",visible:!0,width:"200",align:"",type:null,seq:3,link:"",describe:"",createTime:1550923830095,updateTime:1550305830095},{id:4,key:"phone",name:"手机",isEdit:!0,required:!1,validator:"^1[34578][0-9]{9}$",validMsg:"手机格式输入错误",visible:!0,width:null,align:"",type:null,seq:4,link:"",describe:"",createTime:1550923830095,updateTime:1550405830095},{id:5,key:"role",name:"角色",isEdit:!0,required:!1,validator:"",validMsg:"",visible:!1,width:null,align:"",type:null,seq:5,link:"",describe:"",createTime:1550923830095,updateTime:1550505830095},{id:6,key:"",name:"",isEdit:!1,required:!1,validator:"",validMsg:"",visible:!1,width:"80",align:"",type:"checkbox",seq:0,link:"",describe:"",createTime:1550923830095,updateTime:1550505830095}]},"./mock/api/conf/sex.json":
/*!********************************!*\
  !*** ./mock/api/conf/sex.json ***!
  \********************************/
/*! exports provided: 0, 1, 2, default */function(e){e.exports=[{label:"",spell:"",value:"",value2:null,val:""},{label:"男",spell:"nan",value:"1",value2:1,val:"x"},{label:"女",spell:"nv",value:"0",value2:0,val:"o"}]},"./mock/api/file/list.json":
/*!*********************************!*\
  !*** ./mock/api/file/list.json ***!
  \*********************************/
/*! exports provided: 0, 1, 2, 3, 4, 5, 6, 7, 8, default */function(e){e.exports=[{id:100,parentId:null,name:"一级目录",size:null,type:"0",createTime:1550923830095,updateTime:1551923830095},{id:101,parentId:100,name:"二级目录",size:null,type:"0",createTime:1550923830095,updateTime:1552923830095},{id:10100,parentId:101,name:"文件10100.pdf",size:218,type:"1",createTime:1550923830095,updateTime:1553924830095},{id:10101,parentId:101,name:"文件10101.excel",size:512,type:"1",createTime:1550923830095,updateTime:1550925830095},{id:102,parentId:100,name:"文件102.word",size:101024,type:"1",createTime:1550923830095,updateTime:1550963830095},{id:200,parentId:null,name:"我的文件",size:null,type:"0",createTime:1550923830095,updateTime:1550983830095},{id:201,parentId:200,name:"文件201.zip",size:1024,type:"1",createTime:1550923830095,updateTime:1550927830095},{id:202,parentId:200,name:"文件202.text",size:4096,type:"1",createTime:1550923830095,updateTime:1550926830095},{id:301,parentId:null,name:"文件301.zip",size:4024,type:"1",createTime:1550923830095,updateTime:1550823830095}]},"./mock/api/i18n/list.json":
/*!*********************************!*\
  !*** ./mock/api/i18n/list.json ***!
  \*********************************/
/*! exports provided: 0, 1, 2, 3, 4, 5, 6, 7, 8, default */function(e){e.exports=[{id:100,key:"home.label.name",name:"名字",language:"zh_CN",createTime:1550923830095,updateTime:1552923830095},{id:101,key:"home.label.name",name:"Name",language:"en_US",createTime:1550923830095,updateTime:1552923830095},{id:102,key:"home.label.age",name:"年龄",language:"zh_CN",createTime:1550923830095,updateTime:1552923830095},{id:103,key:"home.label.age",name:"Age",language:"en_US",createTime:1550923830095,updateTime:1552923830095},{id:104,key:"home.label.role",name:"Role",language:"en_US",createTime:1550923830095,updateTime:1552923830095},{id:105,key:"comm.label.cancel",name:"取消",language:"zh_CN",createTime:1550923830095,updateTime:1552923830095},{id:106,key:"comm.label.cancel",name:"Cancel",language:"en_US",createTime:1550923830095,updateTime:1552923830095},{id:107,key:"home.label.phone",name:"手机",language:"zh_CN",createTime:1550923830095,updateTime:1552923830095},{id:108,key:"comm.label.confirm",name:"确认",language:"zh_CN",createTime:1550923830095,updateTime:1552923830095}]},"./mock/api/user/list.json":
/*!*********************************!*\
  !*** ./mock/api/user/list.json ***!
  \*********************************/
/*! exports provided: !return|array(200-600), default */function(e){e.exports={"!return|array(200-600)":{"id|number":"{{ $index+1 }}",name:"{{ random.repeat(['name', 'test'],1) }}_{{ $index }}",nickname:"{{ random.repeat(['昵称', '名字'],1) }}_{{ $index }}",password:"{{ random.repeat('abcdefgABCDEFG',6,12) }}",checked:!1,"sex|random(1)":["","0","1"],"role|random(1)":["前端","后端","测试","设计","项目经理"],"region|random(1)":[[1,1,5],[19,199,1773],[9,73,719]],email:"{{ random.repeat('abcdefg',5,20) }}@{{ random.repeat(['qq','163'],1) }}.{{ random.repeat(['com','net'],1) }}","age|number":"{{ random.num(18,30) }}","rate|number":"{{ random.num(0,5) }}","slider|number":"{{ random.num(0,100) }}",color:"rgb({{ random.num(0,255) }}, {{ random.num(0,255) }}, 0)","flag|boolean":"{{ random.num(0,1) }}",phone:"136{{ random.num(10000000,99999999) }}",describe:"{{ random.repeat('用户信息',2,6) }}",describe2:"{{ random.repeat('用户信息',4,10) }}",describe3:"{{ random.repeat('用户信息',6,20) }}","seq|number":"{{ $index }}",date:"{{ random.date('2019-01-01 00:00:00','2019-02-20 23:59:59', 'yyyy-MM-ddTHH:mm:ss.000+0800') }}",date1:null,date5:"09:00",date6:"09:00:00","createTime|number":"{{ random.time('2019-01-01 00:00:00','2019-02-20 23:59:59', 'yyyy-MM-dd HH:mm:ss') }}","updateTime|number":"{{ random.time('2019-01-01 00:00:00','2019-02-20 23:59:59', 'yyyy-MM-dd HH:mm:ss') }}",attr1:null,attr2:null,attr3:null,attr4:null,attr5:null,attr6:null}}},"./mock/helper.js":
/*!************************!*\
  !*** ./mock/helper.js ***!
  \************************/
/*! no static exports found */function(e,n,t){var l=XEAjaxMock.template,o=l(t(/*! ./api/user/list.json */"./mock/api/user/list.json")),a=l(t(/*! ./api/column/list.json */"./mock/api/column/list.json")),i=l(t(/*! ./api/file/list.json */"./mock/api/file/list.json")),u=l(t(/*! ./api/conf/sex.json */"./mock/api/conf/sex.json")),r=l(t(/*! ./api/city/all.json */"./mock/api/city/all.json")),m=l(t(/*! ./api/i18n/list.json */"./mock/api/i18n/list.json"));e.exports={userData:o,columnData:a,fileData:i,sexData:u,cityAllData:r,i18nData:m}},"./mock/index.js":
/*!***********************!*\
  !*** ./mock/index.js ***!
  \***********************/
/*! no static exports found */function(e,n,t){var l=t(/*! ./helper */"./mock/helper.js");MockData={"GET */api/user/page/list(/:pageSize)(/:currentPage)":function(e,n,t,o){var a=VueUtil.toNumber(e.pageSize),i=VueUtil.toNumber(e.currentPage),u=l.userData.length;return{body:{page:{pageSize:a,currentPage:i,totalResult:u,total:u},result:l.userData.slice((i-1)*a,i*a)},status:200}},"GET */api/user/list":l.userData.slice(0,10),"POST */api/user/save":function(e,n,t,o){var a=t.body.removeRecords;return VueUtil.remove(l.userData,function(e){return a.some(function(n){return n.id===e.id})}),{status:200}},"GET */api/column/page/list(/:pageSize)(/:currentPage)":function(e,n,t,o){var a=VueUtil.toNumber(e.pageSize),i=VueUtil.toNumber(e.currentPage),u=l.columnData.length;return{body:{page:{pageSize:a,currentPage:i,totalResult:u,total:u},result:l.columnData.slice((i-1)*a,i*a)},status:200}},"GET */api/column/list":l.columnData.slice(0,10),"GET */api/file/list":l.fileData,"GET */api/conf/sex/list":l.sexData,"GET */api/conf/city/all":l.cityAllData,"GET */api/i18n/list":l.i18nData},Vue.use(window["vue-resource-mock"].default,MockData,{silent:!1})}});
//# sourceMappingURL=vue-demo.min.js.map